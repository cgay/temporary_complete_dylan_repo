# Build runtime library for C backend

srcdir		= @srcdir@
top_srcdir	= @top_srcdir@
top_builddir	= @top_builddir@

runtime_srcdir	= $(top_srcdir)/sources/dfmc/c-run-time

subdir		= sources/dfmc/c-run-time

VPATH		= $(srcdir)

LIBDEST         = $(OPEN_DYLAN_USER_INSTALL)/lib
BINDEST         = $(OPEN_DYLAN_USER_INSTALL)/bin
INCDEST			= $(OPEN_DYLAN_USER_INSTALL)/include

EXPIRATION	= -1

AS = as -L
AR = ar -q

CFLAGS		= -DGC_LINUX_THREADS=1 -D_REENTRANT=1 \
		  -O -g -DEXPIRATION=$(EXPIRATION) \
		  -I$(srcdir) -I$(runtime_srcdir)

OBJS		= dummy-threads.o \
		  debug-print.o \
		  run-time.o \
		  posix-threads.o

RUNTIMELIBDEST	 = $(LIBDEST)/runtime/

all:	$(OBJS)

dummy-threads.o:       $(runtime_srcdir)/dummy-threads.c

debug-print.o:  $(runtime_srcdir)/debug-print.c

run-time.o: $(runtime_srcdir)/run-time.c
	$(CC) $(CFLAGS) -c -o $@ $<

$(INCDEST):
	mkdir -p $(INCDEST)

$(RUNTIMELIBDEST):
	mkdir -p $(RUNTIMELIBDEST)

install-build:
	cp -fp $(top_srcdir)/sources/lib/run-time/mini-jambase.jam $(LIBDEST)
	cp -fp $(runtime_srcdir)/x86-linux-build.jam $(LIBDEST)
	cp -fp $(runtime_srcdir)/x86-darwin-build.jam $(LIBDEST)
	cp -fp $(runtime_srcdir)/ppc-darwin-build.jam $(LIBDEST)

install-header:	$(runtime_srcdir)/run-time.h $(INCDEST)
	cp -fp $(runtime_srcdir)/run-time.h $(INCDEST)

install-runtime: $(OBJS) $(RUNTIMELIBDEST)
	cp -fp $(OBJS) $(RUNTIMELIBDEST)

install: install-runtime install-build install-header

clean:
	rm -f *.o

Makefile: $(srcdir)/Makefile.in $(top_builddir)/config.status
	cd $(top_builddir) && ./config.status $(subdir)/Makefile
