Module:    carbon-interface
Copyright:    Original Code is Copyright (c) 1995-2004 Functional Objects, Inc.
              All rights reserved.
License:      Functional Objects Library Public License Version 1.0
Dual-license: GNU Lesser General Public License
Warranty:     Distributed WITHOUT WARRANTY OF ANY KIND

// This file is automatically generated from "QuickdrawText.h"; do not edit.


define inline-only C-function StandardGlyphs
  parameter dataStream :: <C-void*>;
  parameter size       :: <ByteCount>;
  result value :: <OSStatus>;
  c-name: "StandardGlyphs";
end;
// unnamed enum:
define inline-only constant $leftCaret                 = 0;
define inline-only constant $rightCaret                = -1;
define inline-only constant $kHilite                   = 1;
define inline-only constant $smLeftCaret               = 0;
define inline-only constant $smRightCaret              = -1;
define inline-only constant $smHilite                  = 1;

// unnamed enum:
define inline-only constant $onlyStyleRun              = 0;
define inline-only constant $leftStyleRun              = 1;
define inline-only constant $rightStyleRun             = 2;
define inline-only constant $middleStyleRun            = 3;
define inline-only constant $smOnlyStyleRun            = 0;
define inline-only constant $smLeftStyleRun            = 1;
define inline-only constant $smRightStyleRun           = 2;
define inline-only constant $smMiddleStyleRun          = 3;

define inline constant <JustStyleCode> = <C-short>;
define C-pointer-type <JustStyleCode*> => <JustStyleCode>;
define C-pointer-type <JustStyleCode**> => <JustStyleCode*>;

define C-struct <FontInfo>
  sealed inline-only slot ascent-value   :: <C-short>;
  sealed inline-only slot descent-value  :: <C-short>;
  sealed inline-only slot widMax-value   :: <C-short>;
  sealed inline-only slot leading-value  :: <C-short>;
  pack: 2;
  c-name: "struct FontInfo";
end;
define C-pointer-type <FontInfo*> => <FontInfo>;
define C-pointer-type <FontInfo**> => <FontInfo*>;
define C-pointer-type <FormatOrderPtr> => <FormatOrder>;

define C-struct <OffPair>
  sealed inline-only slot offFirst-value :: <C-short>;
  sealed inline-only slot offSecond-value :: <C-short>;
  pack: 2;
  c-name: "struct OffPair";
end;
define C-pointer-type <OffPair*> => <OffPair>;
define C-pointer-type <OffPair**> => <OffPair*>;
define constant <StyleRunDirectionProcPtr> = <C-function-pointer>;
define constant <StyleRunDirectionUPP> = <UniversalProcPtr>;
// unnamed enum:
define inline-only constant $uppStyleRunDirectionProcInfo = #x00000390;


define inline-only C-function Pixel2Char
  parameter textBuf    :: <Ptr>;
  parameter textLen    :: <C-short>;
  parameter slop       :: <C-short>;
  parameter pixelWidth :: <C-short>;
  parameter leadingEdge :: <MacBoolean*>;
  result value :: <C-short>;
  c-name: "Pixel2Char";
  c-modifiers: "pascal";
end;

define inline-only C-function Char2Pixel
  parameter textBuf    :: <Ptr>;
  parameter textLen    :: <C-short>;
  parameter slop       :: <C-short>;
  parameter offset     :: <C-short>;
  parameter direction  :: <C-short>;
  result value :: <C-short>;
  c-name: "Char2Pixel";
  c-modifiers: "pascal";
end;

define inline-only C-function PixelToChar
  parameter textBuf    :: <Ptr>;
  parameter textLength :: <C-both-long>;
  parameter slop       :: <Fixed>;
  parameter pixelWidth :: <Fixed>;
  parameter leadingEdge :: <MacBoolean*>;
  parameter widthRemaining :: <Fixed*>;
  parameter styleRunPosition :: <JustStyleCode>;
  parameter numer      :: <Point>;
  parameter denom      :: <Point>;
  result value :: <C-short>;
  c-name: "PixelToChar";
  c-modifiers: "pascal";
end;

define inline-only C-function CharToPixel
  parameter textBuf    :: <Ptr>;
  parameter textLength :: <C-both-long>;
  parameter slop       :: <Fixed>;
  parameter offset     :: <C-both-long>;
  parameter direction  :: <C-short>;
  parameter styleRunPosition :: <JustStyleCode>;
  parameter numer      :: <Point>;
  parameter denom      :: <Point>;
  result value :: <C-short>;
  c-name: "CharToPixel";
  c-modifiers: "pascal";
end;

define inline-only C-function DrawJustified
  parameter textPtr    :: <Ptr>;
  parameter textLength :: <C-both-long>;
  parameter slop       :: <Fixed>;
  parameter styleRunPosition :: <JustStyleCode>;
  parameter numer      :: <Point>;
  parameter denom      :: <Point>;
  c-name: "DrawJustified";
  c-modifiers: "pascal";
end;

define inline-only C-function MeasureJustified
  parameter textPtr    :: <Ptr>;
  parameter textLength :: <C-both-long>;
  parameter slop       :: <Fixed>;
  parameter charLocs   :: <Ptr>;
  parameter styleRunPosition :: <JustStyleCode>;
  parameter numer      :: <Point>;
  parameter denom      :: <Point>;
  c-name: "MeasureJustified";
  c-modifiers: "pascal";
end;

define inline-only C-function PortionLine
  parameter textPtr    :: <Ptr>;
  parameter textLen    :: <C-both-long>;
  parameter styleRunPosition :: <JustStyleCode>;
  parameter numer      :: <Point>;
  parameter denom      :: <Point>;
  result value :: <Fixed>;
  c-name: "PortionLine";
  c-modifiers: "pascal";
end;

define inline-only C-function HiliteText
  parameter textPtr    :: <Ptr>;
  parameter textLength :: <C-short>;
  parameter firstOffset :: <C-short>;
  parameter secondOffset :: <C-short>;
  parameter offsets    :: <OffsetTable>;
  c-name: "HiliteText";
  c-modifiers: "pascal";
end;

define inline-only C-function DrawJust
  parameter textPtr    :: <Ptr>;
  parameter textLength :: <C-short>;
  parameter slop       :: <C-short>;
  c-name: "DrawJust";
  c-modifiers: "pascal";
end;

define inline-only C-function MeasureJust
  parameter textPtr    :: <Ptr>;
  parameter textLength :: <C-short>;
  parameter slop       :: <C-short>;
  parameter charLocs   :: <Ptr>;
  c-name: "MeasureJust";
  c-modifiers: "pascal";
end;

define inline-only C-function PortionText
  parameter textPtr    :: <Ptr>;
  parameter textLength :: <C-both-long>;
  result value :: <Fixed>;
  c-name: "PortionText";
  c-modifiers: "pascal";
end;

define inline-only C-function VisibleLength
  parameter textPtr    :: <Ptr>;
  parameter textLength :: <C-both-long>;
  result value :: <C-both-long>;
  c-name: "VisibleLength";
  c-modifiers: "pascal";
end;

define inline-only C-function GetFormatOrder
  parameter ordering   :: <FormatOrderPtr>;
  parameter firstFormat :: <C-short>;
  parameter lastFormat :: <C-short>;
  parameter lineRight  :: <MacBoolean>;
  parameter rlDirProc  :: <StyleRunDirectionUPP>;
  parameter dirParam   :: <Ptr>;
  c-name: "GetFormatOrder";
  c-modifiers: "pascal";
end;

define inline-only C-function TextFont
  parameter font       :: <C-short>;
  c-name: "TextFont";
  c-modifiers: "pascal";
end;

define inline-only C-function TextFace
  parameter face       :: <StyleParameter>;
  c-name: "TextFace";
  c-modifiers: "pascal";
end;

define inline-only C-function TextMode
  parameter mode       :: <C-short>;
  c-name: "TextMode";
  c-modifiers: "pascal";
end;

define inline-only C-function TextSize
  parameter size       :: <C-short>;
  c-name: "TextSize";
  c-modifiers: "pascal";
end;

define inline-only C-function SpaceExtra
  parameter extra      :: <Fixed>;
  c-name: "SpaceExtra";
  c-modifiers: "pascal";
end;

define inline-only C-function DrawChar
  parameter ch         :: <CharParameter>;
  c-name: "DrawChar";
  c-modifiers: "pascal";
end;

define inline-only C-function DrawString
  parameter s          :: <ConstStr255Param>;
  c-name: "DrawString";
  c-modifiers: "pascal";
end;

define inline-only C-function MacDrawText
  parameter textBuf    ::  /* const */ <C-void*>;
  parameter firstByte  :: <C-short>;
  parameter byteCount  :: <C-short>;
  c-name: "MacDrawText";
  c-modifiers: "pascal";
end;

define inline-only C-function CharWidth
  parameter ch         :: <CharParameter>;
  result value :: <C-short>;
  c-name: "CharWidth";
  c-modifiers: "pascal";
end;

define inline-only C-function StringWidth
  parameter s          :: <ConstStr255Param>;
  result value :: <C-short>;
  c-name: "StringWidth";
  c-modifiers: "pascal";
end;

define inline-only C-function TextWidth
  parameter textBuf    ::  /* const */ <C-void*>;
  parameter firstByte  :: <C-short>;
  parameter byteCount  :: <C-short>;
  result value :: <C-short>;
  c-name: "TextWidth";
  c-modifiers: "pascal";
end;

define inline-only C-function MeasureText
  parameter count      :: <C-short>;
  parameter textAddr   ::  /* const */ <C-void*>;
  parameter charLocs   :: <C-void*>;
  c-name: "MeasureText";
  c-modifiers: "pascal";
end;

define inline-only C-function GetFontInfo
  parameter info       :: <FontInfo*>;
  c-name: "GetFontInfo";
  c-modifiers: "pascal";
end;

define inline-only C-function CharExtra
  parameter extra      :: <Fixed>;
  c-name: "CharExtra";
  c-modifiers: "pascal";
end;

define inline-only C-function StdText
  parameter count      :: <C-short>;
  parameter textAddr   ::  /* const */ <C-void*>;
  parameter numer      :: <Point>;
  parameter denom      :: <Point>;
  c-name: "StdText";
  c-modifiers: "pascal";
end;

define inline-only C-function StdTxMeas
  parameter byteCount  :: <C-short>;
  parameter textAddr   ::  /* const */ <C-void*>;
  parameter numer      :: <Point*>;
  parameter denom      :: <Point*>;
  parameter info       :: <FontInfo*>;
  result value :: <C-short>;
  c-name: "StdTxMeas";
  c-modifiers: "pascal";
end;

