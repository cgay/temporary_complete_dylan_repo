Module:    gtk-common
Copyright:    Original Code is Copyright (c) 1995-2004 Functional Objects, Inc.
              All rights reserved.
License:      Functional Objects Library Public License Version 1.0
Dual-license: GNU Lesser General Public License
Warranty:     Distributed WITHOUT WARRANTY OF ANY KIND

// This file is automatically generated from "gtkmain.h"; do not edit.

define inline-only constant $GTK-PRIORITY-REDRAW           =
	$G-PRIORITY-HIGH-IDLE + 20;
define inline-only constant $GTK-PRIORITY-RESIZE           =
	$G-PRIORITY-HIGH-IDLE + 10;
define C-pointer-type <GtkModuleInitFunc*> => <GtkModuleInitFunc>;
define C-pointer-type <GtkModuleInitFunc**> => <GtkModuleInitFunc*>;
define C-pointer-type <GtkKeySnoopFunc*> => <GtkKeySnoopFunc>;
define C-pointer-type <GtkKeySnoopFunc**> => <GtkKeySnoopFunc*>;

define inline-only C-function gtk-check-version
  parameter required_major1 :: <guint>;
  parameter required_minor2 :: <guint>;
  parameter required_micro3 :: <guint>;
  result value :: <gchar*>;
  c-name: "gtk_check_version";
end;

define inline-only C-function gtk-init
  parameter argc1      :: <C-int*>;
  parameter argv2      :: <C-string**>;
  c-name: "gtk_init";
end;

define inline-only C-function gtk-init-check
  parameter argc1      :: <C-int*>;
  parameter argv2      :: <C-string**>;
  result value :: <gboolean>;
  c-name: "gtk_init_check";
end;

define inline-only C-function gtk-exit
  parameter error_code1 :: <gint>;
  c-name: "gtk_exit";
end;

define inline-only C-function gtk-set-locale
  result value :: <gchar*>;
  c-name: "gtk_set_locale";
end;

define inline-only C-function gtk-events-pending
  result value :: <gint>;
  c-name: "gtk_events_pending";
end;

define inline-only C-function gtk-main-do-event
  parameter event1     :: <GdkEvent*>;
  c-name: "gtk_main_do_event";
end;

define inline-only C-function gtk-main
  c-name: "gtk_main";
end;

define inline-only C-function gtk-main-level
  result value :: <guint>;
  c-name: "gtk_main_level";
end;

define inline-only C-function gtk-main-quit
  c-name: "gtk_main_quit";
end;

define inline-only C-function gtk-main-iteration
  result value :: <gint>;
  c-name: "gtk_main_iteration";
end;

define inline-only C-function gtk-main-iteration-do
  parameter blocking1  :: <gboolean>;
  result value :: <gint>;
  c-name: "gtk_main_iteration_do";
end;

define inline-only C-function gtk-true
  result value :: <gint>;
  c-name: "gtk_true";
end;

define inline-only C-function gtk-false
  result value :: <gint>;
  c-name: "gtk_false";
end;

define inline-only C-function gtk-grab-add
  parameter widget1    :: <GtkWidget*>;
  c-name: "gtk_grab_add";
end;

define inline-only C-function gtk-grab-get-current
  result value :: <GtkWidget*>;
  c-name: "gtk_grab_get_current";
end;

define inline-only C-function gtk-grab-remove
  parameter widget1    :: <GtkWidget*>;
  c-name: "gtk_grab_remove";
end;

define inline-only C-function gtk-init-add
  parameter function1  :: <GtkFunction>;
  parameter data2      :: <gpointer>;
  c-name: "gtk_init_add";
end;

define inline-only C-function gtk-quit-add-destroy
  parameter main_level1 :: <guint>;
  parameter object2    :: <GtkObject*>;
  c-name: "gtk_quit_add_destroy";
end;

define inline-only C-function gtk-quit-add
  parameter main_level1 :: <guint>;
  parameter function2  :: <GtkFunction>;
  parameter data3      :: <gpointer>;
  result value :: <guint>;
  c-name: "gtk_quit_add";
end;

define inline-only C-function gtk-quit-add-full
  parameter main_level1 :: <guint>;
  parameter function2  :: <GtkFunction>;
  parameter marshal3   :: <GtkCallbackMarshal>;
  parameter data4      :: <gpointer>;
  parameter destroy5   :: <GtkDestroyNotify>;
  result value :: <guint>;
  c-name: "gtk_quit_add_full";
end;

define inline-only C-function gtk-quit-remove
  parameter quit_handler_id1 :: <guint>;
  c-name: "gtk_quit_remove";
end;

define inline-only C-function gtk-quit-remove-by-data
  parameter data1      :: <gpointer>;
  c-name: "gtk_quit_remove_by_data";
end;

define inline-only C-function gtk-timeout-add
  parameter interval1  :: <guint32>;
  parameter function2  :: <GtkFunction>;
  parameter data3      :: <gpointer>;
  result value :: <guint>;
  c-name: "gtk_timeout_add";
end;

define inline-only C-function gtk-timeout-add-full
  parameter interval1  :: <guint32>;
  parameter function2  :: <GtkFunction>;
  parameter marshal3   :: <GtkCallbackMarshal>;
  parameter data4      :: <gpointer>;
  parameter destroy5   :: <GtkDestroyNotify>;
  result value :: <guint>;
  c-name: "gtk_timeout_add_full";
end;

define inline-only C-function gtk-timeout-remove
  parameter timeout_handler_id1 :: <guint>;
  c-name: "gtk_timeout_remove";
end;

define inline-only C-function gtk-idle-add
  parameter function1  :: <GtkFunction>;
  parameter data2      :: <gpointer>;
  result value :: <guint>;
  c-name: "gtk_idle_add";
end;

define inline-only C-function gtk-idle-add-priority
  parameter priority1  :: <gint>;
  parameter function2  :: <GtkFunction>;
  parameter data3      :: <gpointer>;
  result value :: <guint>;
  c-name: "gtk_idle_add_priority";
end;

define inline-only C-function gtk-idle-add-full
  parameter priority1  :: <gint>;
  parameter function2  :: <GtkFunction>;
  parameter marshal3   :: <GtkCallbackMarshal>;
  parameter data4      :: <gpointer>;
  parameter destroy5   :: <GtkDestroyNotify>;
  result value :: <guint>;
  c-name: "gtk_idle_add_full";
end;

define inline-only C-function gtk-idle-remove
  parameter idle_handler_id1 :: <guint>;
  c-name: "gtk_idle_remove";
end;

define inline-only C-function gtk-idle-remove-by-data
  parameter data1      :: <gpointer>;
  c-name: "gtk_idle_remove_by_data";
end;

define inline-only C-function gtk-input-add-full
  parameter source1    :: <gint>;
  parameter condition2 :: <GdkInputCondition>;
  parameter function3  :: <GdkInputFunction>;
  parameter marshal4   :: <GtkCallbackMarshal>;
  parameter data5      :: <gpointer>;
  parameter destroy6   :: <GtkDestroyNotify>;
  result value :: <guint>;
  c-name: "gtk_input_add_full";
end;

define inline-only C-function gtk-input-remove
  parameter input_handler_id1 :: <guint>;
  c-name: "gtk_input_remove";
end;

define inline-only C-function gtk-key-snooper-install
  parameter snooper1   :: <GtkKeySnoopFunc>;
  parameter func_data2 :: <gpointer>;
  result value :: <guint>;
  c-name: "gtk_key_snooper_install";
end;

define inline-only C-function gtk-key-snooper-remove
  parameter snooper_handler_id1 :: <guint>;
  c-name: "gtk_key_snooper_remove";
end;

define inline-only C-function gtk-get-current-event
  result value :: <GdkEvent*>;
  c-name: "gtk_get_current_event";
end;

define inline-only C-function gtk-get-event-widget
  parameter event1     :: <GdkEvent*>;
  result value :: <GtkWidget*>;
  c-name: "gtk_get_event_widget";
end;

define inline-only C-function gtk-propagate-event
  parameter widget1    :: <GtkWidget*>;
  parameter event2     :: <GdkEvent*>;
  c-name: "gtk_propagate_event";
end;

define inline-only constant $GTK-PRIORITY-HIGH = $G-PRIORITY-HIGH;
define inline-only constant $GTK-PRIORITY-INTERNAL =
	$GTK-PRIORITY-REDRAW;
define inline-only constant $GTK-PRIORITY-DEFAULT =
	$G-PRIORITY-DEFAULT-IDLE;
define inline-only constant $GTK-PRIORITY-LOW = $G-PRIORITY-LOW;
define inline constant <GtkModuleInitFunc> = <C-function-pointer>;
define inline constant <GtkKeySnoopFunc> = <C-function-pointer>;
