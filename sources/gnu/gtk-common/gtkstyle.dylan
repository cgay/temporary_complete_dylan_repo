Module:    gtk-common
Copyright:    Original Code is Copyright (c) 1995-2004 Functional Objects, Inc.
              All rights reserved.
License:      Functional Objects Library Public License Version 1.0
Dual-license: GNU Lesser General Public License
Warranty:     Distributed WITHOUT WARRANTY OF ANY KIND

// This file is automatically generated from "gtkstyle.h"; do not edit.

define C-pointer-type <GtkStyle*> => <GtkStyle>;
define C-pointer-type <GtkStyle**> => <GtkStyle*>;
define C-pointer-type <GtkStyleClass*> => <GtkStyleClass>;
define C-pointer-type <GtkStyleClass**> => <GtkStyleClass*>;
define C-pointer-type <GtkThemeEngine*> => <GtkThemeEngine>;
define C-pointer-type <GtkThemeEngine**> => <GtkThemeEngine*>;
define C-pointer-type <GtkRcStyle*> => <GtkRcStyle>;
define C-pointer-type <GtkRcStyle**> => <GtkRcStyle*>;
define C-pointer-type <GtkWidget*> => <GtkWidget>;
define C-pointer-type <GtkWidget**> => <GtkWidget*>;

define C-struct <_GtkStyle>
  sealed inline-only slot klass-value    :: <GtkStyleClass*>;
  sealed inline-only array slot fg-array :: <GdkColor>,
    length: 5,
    address-getter: fg-value;
  sealed inline-only array slot bg-array :: <GdkColor>,
    length: 5,
    address-getter: bg-value;
  sealed inline-only array slot light-array :: <GdkColor>,
    length: 5,
    address-getter: light-value;
  sealed inline-only array slot dark-array :: <GdkColor>,
    length: 5,
    address-getter: dark-value;
  sealed inline-only array slot mid-array :: <GdkColor>,
    length: 5,
    address-getter: mid-value;
  sealed inline-only array slot text-array :: <GdkColor>,
    length: 5,
    address-getter: text-value;
  sealed inline-only array slot base-array :: <GdkColor>,
    length: 5,
    address-getter: base-value;
  sealed inline-only slot black-value    :: <GdkColor>;
  sealed inline-only slot white-value    :: <GdkColor>;
  sealed inline-only slot font-value     :: <GdkFont*>;
  sealed inline-only array slot fg-gc-array :: <GdkGC*>,
    length: 5,
    address-getter: fg-gc-value;
  sealed inline-only array slot bg-gc-array :: <GdkGC*>,
    length: 5,
    address-getter: bg-gc-value;
  sealed inline-only array slot light-gc-array :: <GdkGC*>,
    length: 5,
    address-getter: light-gc-value;
  sealed inline-only array slot dark-gc-array :: <GdkGC*>,
    length: 5,
    address-getter: dark-gc-value;
  sealed inline-only array slot mid-gc-array :: <GdkGC*>,
    length: 5,
    address-getter: mid-gc-value;
  sealed inline-only array slot text-gc-array :: <GdkGC*>,
    length: 5,
    address-getter: text-gc-value;
  sealed inline-only array slot base-gc-array :: <GdkGC*>,
    length: 5,
    address-getter: base-gc-value;
  sealed inline-only slot black-gc-value :: <GdkGC*>;
  sealed inline-only slot white-gc-value :: <GdkGC*>;
  sealed inline-only array slot bg-pixmap-array :: <GdkPixmap*>,
    length: 5,
    address-getter: bg-pixmap-value;
  sealed inline-only slot ref-count-value :: <gint>;
  sealed inline-only slot attach-count-value :: <gint>;
  sealed inline-only slot depth-value    :: <gint>;
  sealed inline-only slot colormap-value :: <GdkColormap*>;
  sealed inline-only slot engine-value   :: <GtkThemeEngine*>;
  sealed inline-only slot engine-data-value :: <gpointer>;
  sealed inline-only slot rc-style-value :: <GtkRcStyle*>;
  sealed inline-only slot styles-value   :: <GSList*>;
  pointer-type-name: <_GtkStyle*>;
  c-name: "struct _GtkStyle";
end;

define C-struct <_GtkStyleClass>
  sealed inline-only slot xthickness-value :: <gint>;
  sealed inline-only slot ythickness-value :: <gint>;
  sealed inline-only slot draw-hline-value :: <C-function-pointer>;
  sealed inline-only slot draw-vline-value :: <C-function-pointer>;
  sealed inline-only slot draw-shadow-value :: <C-function-pointer>;
  sealed inline-only slot draw-polygon-value :: <C-function-pointer>;
  sealed inline-only slot draw-arrow-value :: <C-function-pointer>;
  sealed inline-only slot draw-diamond-value :: <C-function-pointer>;
  sealed inline-only slot draw-oval-value :: <C-function-pointer>;
  sealed inline-only slot draw-string-value :: <C-function-pointer>;
  sealed inline-only slot draw-box-value :: <C-function-pointer>;
  sealed inline-only slot draw-flat-box-value :: <C-function-pointer>;
  sealed inline-only slot draw-check-value :: <C-function-pointer>;
  sealed inline-only slot draw-option-value :: <C-function-pointer>;
  sealed inline-only slot draw-cross-value :: <C-function-pointer>;
  sealed inline-only slot draw-ramp-value :: <C-function-pointer>;
  sealed inline-only slot draw-tab-value :: <C-function-pointer>;
  sealed inline-only slot draw-shadow-gap-value :: <C-function-pointer>;
  sealed inline-only slot draw-box-gap-value :: <C-function-pointer>;
  sealed inline-only slot draw-extension-value :: <C-function-pointer>;
  sealed inline-only slot draw-focus-value :: <C-function-pointer>;
  sealed inline-only slot draw-slider-value :: <C-function-pointer>;
  sealed inline-only slot draw-handle-value :: <C-function-pointer>;
  pointer-type-name: <_GtkStyleClass*>;
  c-name: "struct _GtkStyleClass";
end;

define inline-only C-function gtk-style-new
  result value :: <GtkStyle*>;
  c-name: "gtk_style_new";
end;

define inline-only C-function gtk-style-copy
  parameter style1     :: <GtkStyle*>;
  result value :: <GtkStyle*>;
  c-name: "gtk_style_copy";
end;

define inline-only C-function gtk-style-attach
  parameter style1     :: <GtkStyle*>;
  parameter window2    :: <GdkWindow*>;
  result value :: <GtkStyle*>;
  c-name: "gtk_style_attach";
end;

define inline-only C-function gtk-style-detach
  parameter style1     :: <GtkStyle*>;
  c-name: "gtk_style_detach";
end;

define inline-only C-function gtk-style-ref
  parameter style1     :: <GtkStyle*>;
  result value :: <GtkStyle*>;
  c-name: "gtk_style_ref";
end;

define inline-only C-function gtk-style-unref
  parameter style1     :: <GtkStyle*>;
  c-name: "gtk_style_unref";
end;

define inline-only C-function gtk-style-set-background
  parameter style1     :: <GtkStyle*>;
  parameter window2    :: <GdkWindow*>;
  parameter state_type3 :: <GtkStateType>;
  c-name: "gtk_style_set_background";
end;

define inline-only C-function gtk-style-apply-default-background
  parameter style1     :: <GtkStyle*>;
  parameter window2    :: <GdkWindow*>;
  parameter set_bg3    :: <gboolean>;
  parameter state_type4 :: <GtkStateType>;
  parameter area5      :: <GdkRectangle*>;
  parameter x6         :: <gint>;
  parameter y7         :: <gint>;
  parameter width8     :: <gint>;
  parameter height9    :: <gint>;
  c-name: "gtk_style_apply_default_background";
end;

define inline-only C-function gtk-draw-hline
  parameter style1     :: <GtkStyle*>;
  parameter window2    :: <GdkWindow*>;
  parameter state_type3 :: <GtkStateType>;
  parameter x14        :: <gint>;
  parameter x25        :: <gint>;
  parameter y6         :: <gint>;
  c-name: "gtk_draw_hline";
end;

define inline-only C-function gtk-draw-vline
  parameter style1     :: <GtkStyle*>;
  parameter window2    :: <GdkWindow*>;
  parameter state_type3 :: <GtkStateType>;
  parameter y14        :: <gint>;
  parameter y25        :: <gint>;
  parameter x6         :: <gint>;
  c-name: "gtk_draw_vline";
end;

define inline-only C-function gtk-draw-shadow
  parameter style1     :: <GtkStyle*>;
  parameter window2    :: <GdkWindow*>;
  parameter state_type3 :: <GtkStateType>;
  parameter shadow_type4 :: <GtkShadowType>;
  parameter x5         :: <gint>;
  parameter y6         :: <gint>;
  parameter width7     :: <gint>;
  parameter height8    :: <gint>;
  c-name: "gtk_draw_shadow";
end;

define inline-only C-function gtk-draw-polygon
  parameter style1     :: <GtkStyle*>;
  parameter window2    :: <GdkWindow*>;
  parameter state_type3 :: <GtkStateType>;
  parameter shadow_type4 :: <GtkShadowType>;
  parameter points5    :: <GdkPoint*>;
  parameter npoints6   :: <gint>;
  parameter fill7      :: <gboolean>;
  c-name: "gtk_draw_polygon";
end;

define inline-only C-function gtk-draw-arrow
  parameter style1     :: <GtkStyle*>;
  parameter window2    :: <GdkWindow*>;
  parameter state_type3 :: <GtkStateType>;
  parameter shadow_type4 :: <GtkShadowType>;
  parameter arrow_type5 :: <GtkArrowType>;
  parameter fill6      :: <gboolean>;
  parameter x7         :: <gint>;
  parameter y8         :: <gint>;
  parameter width9     :: <gint>;
  parameter height10   :: <gint>;
  c-name: "gtk_draw_arrow";
end;

define inline-only C-function gtk-draw-diamond
  parameter style1     :: <GtkStyle*>;
  parameter window2    :: <GdkWindow*>;
  parameter state_type3 :: <GtkStateType>;
  parameter shadow_type4 :: <GtkShadowType>;
  parameter x5         :: <gint>;
  parameter y6         :: <gint>;
  parameter width7     :: <gint>;
  parameter height8    :: <gint>;
  c-name: "gtk_draw_diamond";
end;

define inline-only C-function gtk-draw-oval
  parameter style1     :: <GtkStyle*>;
  parameter window2    :: <GdkWindow*>;
  parameter state_type3 :: <GtkStateType>;
  parameter shadow_type4 :: <GtkShadowType>;
  parameter x5         :: <gint>;
  parameter y6         :: <gint>;
  parameter width7     :: <gint>;
  parameter height8    :: <gint>;
  c-name: "gtk_draw_oval";
end;

define inline-only C-function gtk-draw-string
  parameter style1     :: <GtkStyle*>;
  parameter window2    :: <GdkWindow*>;
  parameter state_type3 :: <GtkStateType>;
  parameter x4         :: <gint>;
  parameter y5         :: <gint>;
  parameter string6    ::  /* const */ <gchar*>;
  c-name: "gtk_draw_string";
end;

define inline-only C-function gtk-draw-box
  parameter style1     :: <GtkStyle*>;
  parameter window2    :: <GdkWindow*>;
  parameter state_type3 :: <GtkStateType>;
  parameter shadow_type4 :: <GtkShadowType>;
  parameter x5         :: <gint>;
  parameter y6         :: <gint>;
  parameter width7     :: <gint>;
  parameter height8    :: <gint>;
  c-name: "gtk_draw_box";
end;

define inline-only C-function gtk-draw-flat-box
  parameter style1     :: <GtkStyle*>;
  parameter window2    :: <GdkWindow*>;
  parameter state_type3 :: <GtkStateType>;
  parameter shadow_type4 :: <GtkShadowType>;
  parameter x5         :: <gint>;
  parameter y6         :: <gint>;
  parameter width7     :: <gint>;
  parameter height8    :: <gint>;
  c-name: "gtk_draw_flat_box";
end;

define inline-only C-function gtk-draw-check
  parameter style1     :: <GtkStyle*>;
  parameter window2    :: <GdkWindow*>;
  parameter state_type3 :: <GtkStateType>;
  parameter shadow_type4 :: <GtkShadowType>;
  parameter x5         :: <gint>;
  parameter y6         :: <gint>;
  parameter width7     :: <gint>;
  parameter height8    :: <gint>;
  c-name: "gtk_draw_check";
end;

define inline-only C-function gtk-draw-option
  parameter style1     :: <GtkStyle*>;
  parameter window2    :: <GdkWindow*>;
  parameter state_type3 :: <GtkStateType>;
  parameter shadow_type4 :: <GtkShadowType>;
  parameter x5         :: <gint>;
  parameter y6         :: <gint>;
  parameter width7     :: <gint>;
  parameter height8    :: <gint>;
  c-name: "gtk_draw_option";
end;

define inline-only C-function gtk-draw-cross
  parameter style1     :: <GtkStyle*>;
  parameter window2    :: <GdkWindow*>;
  parameter state_type3 :: <GtkStateType>;
  parameter shadow_type4 :: <GtkShadowType>;
  parameter x5         :: <gint>;
  parameter y6         :: <gint>;
  parameter width7     :: <gint>;
  parameter height8    :: <gint>;
  c-name: "gtk_draw_cross";
end;

define inline-only C-function gtk-draw-ramp
  parameter style1     :: <GtkStyle*>;
  parameter window2    :: <GdkWindow*>;
  parameter state_type3 :: <GtkStateType>;
  parameter shadow_type4 :: <GtkShadowType>;
  parameter arrow_type5 :: <GtkArrowType>;
  parameter x6         :: <gint>;
  parameter y7         :: <gint>;
  parameter width8     :: <gint>;
  parameter height9    :: <gint>;
  c-name: "gtk_draw_ramp";
end;

define inline-only C-function gtk-draw-tab
  parameter style1     :: <GtkStyle*>;
  parameter window2    :: <GdkWindow*>;
  parameter state_type3 :: <GtkStateType>;
  parameter shadow_type4 :: <GtkShadowType>;
  parameter x5         :: <gint>;
  parameter y6         :: <gint>;
  parameter width7     :: <gint>;
  parameter height8    :: <gint>;
  c-name: "gtk_draw_tab";
end;

define inline-only C-function gtk-draw-shadow-gap
  parameter style1     :: <GtkStyle*>;
  parameter window2    :: <GdkWindow*>;
  parameter state_type3 :: <GtkStateType>;
  parameter shadow_type4 :: <GtkShadowType>;
  parameter x5         :: <gint>;
  parameter y6         :: <gint>;
  parameter width7     :: <gint>;
  parameter height8    :: <gint>;
  parameter gap_side9  :: <GtkPositionType>;
  parameter gap_x10    :: <gint>;
  parameter gap_width11 :: <gint>;
  c-name: "gtk_draw_shadow_gap";
end;

define inline-only C-function gtk-draw-box-gap
  parameter style1     :: <GtkStyle*>;
  parameter window2    :: <GdkWindow*>;
  parameter state_type3 :: <GtkStateType>;
  parameter shadow_type4 :: <GtkShadowType>;
  parameter x5         :: <gint>;
  parameter y6         :: <gint>;
  parameter width7     :: <gint>;
  parameter height8    :: <gint>;
  parameter gap_side9  :: <GtkPositionType>;
  parameter gap_x10    :: <gint>;
  parameter gap_width11 :: <gint>;
  c-name: "gtk_draw_box_gap";
end;

define inline-only C-function gtk-draw-extension
  parameter style1     :: <GtkStyle*>;
  parameter window2    :: <GdkWindow*>;
  parameter state_type3 :: <GtkStateType>;
  parameter shadow_type4 :: <GtkShadowType>;
  parameter x5         :: <gint>;
  parameter y6         :: <gint>;
  parameter width7     :: <gint>;
  parameter height8    :: <gint>;
  parameter gap_side9  :: <GtkPositionType>;
  c-name: "gtk_draw_extension";
end;

define inline-only C-function gtk-draw-focus
  parameter style1     :: <GtkStyle*>;
  parameter window2    :: <GdkWindow*>;
  parameter x3         :: <gint>;
  parameter y4         :: <gint>;
  parameter width5     :: <gint>;
  parameter height6    :: <gint>;
  c-name: "gtk_draw_focus";
end;

define inline-only C-function gtk-draw-slider
  parameter style1     :: <GtkStyle*>;
  parameter window2    :: <GdkWindow*>;
  parameter state_type3 :: <GtkStateType>;
  parameter shadow_type4 :: <GtkShadowType>;
  parameter x5         :: <gint>;
  parameter y6         :: <gint>;
  parameter width7     :: <gint>;
  parameter height8    :: <gint>;
  parameter orientation9 :: <GtkOrientation>;
  c-name: "gtk_draw_slider";
end;

define inline-only C-function gtk-draw-handle
  parameter style1     :: <GtkStyle*>;
  parameter window2    :: <GdkWindow*>;
  parameter state_type3 :: <GtkStateType>;
  parameter shadow_type4 :: <GtkShadowType>;
  parameter x5         :: <gint>;
  parameter y6         :: <gint>;
  parameter width7     :: <gint>;
  parameter height8    :: <gint>;
  parameter orientation9 :: <GtkOrientation>;
  c-name: "gtk_draw_handle";
end;

define inline-only C-function gtk-paint-hline
  parameter style1     :: <GtkStyle*>;
  parameter window2    :: <GdkWindow*>;
  parameter state_type3 :: <GtkStateType>;
  parameter area4      :: <GdkRectangle*>;
  parameter widget5    :: <GtkWidget*>;
  parameter detail6    :: <gchar*>;
  parameter x17        :: <gint>;
  parameter x28        :: <gint>;
  parameter y9         :: <gint>;
  c-name: "gtk_paint_hline";
end;

define inline-only C-function gtk-paint-vline
  parameter style1     :: <GtkStyle*>;
  parameter window2    :: <GdkWindow*>;
  parameter state_type3 :: <GtkStateType>;
  parameter area4      :: <GdkRectangle*>;
  parameter widget5    :: <GtkWidget*>;
  parameter detail6    :: <gchar*>;
  parameter y17        :: <gint>;
  parameter y28        :: <gint>;
  parameter x9         :: <gint>;
  c-name: "gtk_paint_vline";
end;

define inline-only C-function gtk-paint-shadow
  parameter style1     :: <GtkStyle*>;
  parameter window2    :: <GdkWindow*>;
  parameter state_type3 :: <GtkStateType>;
  parameter shadow_type4 :: <GtkShadowType>;
  parameter area5      :: <GdkRectangle*>;
  parameter widget6    :: <GtkWidget*>;
  parameter detail7    :: <gchar*>;
  parameter x8         :: <gint>;
  parameter y9         :: <gint>;
  parameter width10    :: <gint>;
  parameter height11   :: <gint>;
  c-name: "gtk_paint_shadow";
end;

define inline-only C-function gtk-paint-polygon
  parameter style1     :: <GtkStyle*>;
  parameter window2    :: <GdkWindow*>;
  parameter state_type3 :: <GtkStateType>;
  parameter shadow_type4 :: <GtkShadowType>;
  parameter area5      :: <GdkRectangle*>;
  parameter widget6    :: <GtkWidget*>;
  parameter detail7    :: <gchar*>;
  parameter points8    :: <GdkPoint*>;
  parameter npoints9   :: <gint>;
  parameter fill10     :: <gboolean>;
  c-name: "gtk_paint_polygon";
end;

define inline-only C-function gtk-paint-arrow
  parameter style1     :: <GtkStyle*>;
  parameter window2    :: <GdkWindow*>;
  parameter state_type3 :: <GtkStateType>;
  parameter shadow_type4 :: <GtkShadowType>;
  parameter area5      :: <GdkRectangle*>;
  parameter widget6    :: <GtkWidget*>;
  parameter detail7    :: <gchar*>;
  parameter arrow_type8 :: <GtkArrowType>;
  parameter fill9      :: <gboolean>;
  parameter x10        :: <gint>;
  parameter y11        :: <gint>;
  parameter width12    :: <gint>;
  parameter height13   :: <gint>;
  c-name: "gtk_paint_arrow";
end;

define inline-only C-function gtk-paint-diamond
  parameter style1     :: <GtkStyle*>;
  parameter window2    :: <GdkWindow*>;
  parameter state_type3 :: <GtkStateType>;
  parameter shadow_type4 :: <GtkShadowType>;
  parameter area5      :: <GdkRectangle*>;
  parameter widget6    :: <GtkWidget*>;
  parameter detail7    :: <gchar*>;
  parameter x8         :: <gint>;
  parameter y9         :: <gint>;
  parameter width10    :: <gint>;
  parameter height11   :: <gint>;
  c-name: "gtk_paint_diamond";
end;

define inline-only C-function gtk-paint-oval
  parameter style1     :: <GtkStyle*>;
  parameter window2    :: <GdkWindow*>;
  parameter state_type3 :: <GtkStateType>;
  parameter shadow_type4 :: <GtkShadowType>;
  parameter area5      :: <GdkRectangle*>;
  parameter widget6    :: <GtkWidget*>;
  parameter detail7    :: <gchar*>;
  parameter x8         :: <gint>;
  parameter y9         :: <gint>;
  parameter width10    :: <gint>;
  parameter height11   :: <gint>;
  c-name: "gtk_paint_oval";
end;

define inline-only C-function gtk-paint-string
  parameter style1     :: <GtkStyle*>;
  parameter window2    :: <GdkWindow*>;
  parameter state_type3 :: <GtkStateType>;
  parameter area4      :: <GdkRectangle*>;
  parameter widget5    :: <GtkWidget*>;
  parameter detail6    :: <gchar*>;
  parameter x7         :: <gint>;
  parameter y8         :: <gint>;
  parameter string9    ::  /* const */ <gchar*>;
  c-name: "gtk_paint_string";
end;

define inline-only C-function gtk-paint-box
  parameter style1     :: <GtkStyle*>;
  parameter window2    :: <GdkWindow*>;
  parameter state_type3 :: <GtkStateType>;
  parameter shadow_type4 :: <GtkShadowType>;
  parameter area5      :: <GdkRectangle*>;
  parameter widget6    :: <GtkWidget*>;
  parameter detail7    :: <gchar*>;
  parameter x8         :: <gint>;
  parameter y9         :: <gint>;
  parameter width10    :: <gint>;
  parameter height11   :: <gint>;
  c-name: "gtk_paint_box";
end;

define inline-only C-function gtk-paint-flat-box
  parameter style1     :: <GtkStyle*>;
  parameter window2    :: <GdkWindow*>;
  parameter state_type3 :: <GtkStateType>;
  parameter shadow_type4 :: <GtkShadowType>;
  parameter area5      :: <GdkRectangle*>;
  parameter widget6    :: <GtkWidget*>;
  parameter detail7    :: <gchar*>;
  parameter x8         :: <gint>;
  parameter y9         :: <gint>;
  parameter width10    :: <gint>;
  parameter height11   :: <gint>;
  c-name: "gtk_paint_flat_box";
end;

define inline-only C-function gtk-paint-check
  parameter style1     :: <GtkStyle*>;
  parameter window2    :: <GdkWindow*>;
  parameter state_type3 :: <GtkStateType>;
  parameter shadow_type4 :: <GtkShadowType>;
  parameter area5      :: <GdkRectangle*>;
  parameter widget6    :: <GtkWidget*>;
  parameter detail7    :: <gchar*>;
  parameter x8         :: <gint>;
  parameter y9         :: <gint>;
  parameter width10    :: <gint>;
  parameter height11   :: <gint>;
  c-name: "gtk_paint_check";
end;

define inline-only C-function gtk-paint-option
  parameter style1     :: <GtkStyle*>;
  parameter window2    :: <GdkWindow*>;
  parameter state_type3 :: <GtkStateType>;
  parameter shadow_type4 :: <GtkShadowType>;
  parameter area5      :: <GdkRectangle*>;
  parameter widget6    :: <GtkWidget*>;
  parameter detail7    :: <gchar*>;
  parameter x8         :: <gint>;
  parameter y9         :: <gint>;
  parameter width10    :: <gint>;
  parameter height11   :: <gint>;
  c-name: "gtk_paint_option";
end;

define inline-only C-function gtk-paint-cross
  parameter style1     :: <GtkStyle*>;
  parameter window2    :: <GdkWindow*>;
  parameter state_type3 :: <GtkStateType>;
  parameter shadow_type4 :: <GtkShadowType>;
  parameter area5      :: <GdkRectangle*>;
  parameter widget6    :: <GtkWidget*>;
  parameter detail7    :: <gchar*>;
  parameter x8         :: <gint>;
  parameter y9         :: <gint>;
  parameter width10    :: <gint>;
  parameter height11   :: <gint>;
  c-name: "gtk_paint_cross";
end;

define inline-only C-function gtk-paint-ramp
  parameter style1     :: <GtkStyle*>;
  parameter window2    :: <GdkWindow*>;
  parameter state_type3 :: <GtkStateType>;
  parameter shadow_type4 :: <GtkShadowType>;
  parameter area5      :: <GdkRectangle*>;
  parameter widget6    :: <GtkWidget*>;
  parameter detail7    :: <gchar*>;
  parameter arrow_type8 :: <GtkArrowType>;
  parameter x9         :: <gint>;
  parameter y10        :: <gint>;
  parameter width11    :: <gint>;
  parameter height12   :: <gint>;
  c-name: "gtk_paint_ramp";
end;

define inline-only C-function gtk-paint-tab
  parameter style1     :: <GtkStyle*>;
  parameter window2    :: <GdkWindow*>;
  parameter state_type3 :: <GtkStateType>;
  parameter shadow_type4 :: <GtkShadowType>;
  parameter area5      :: <GdkRectangle*>;
  parameter widget6    :: <GtkWidget*>;
  parameter detail7    :: <gchar*>;
  parameter x8         :: <gint>;
  parameter y9         :: <gint>;
  parameter width10    :: <gint>;
  parameter height11   :: <gint>;
  c-name: "gtk_paint_tab";
end;

define inline-only C-function gtk-paint-shadow-gap
  parameter style1     :: <GtkStyle*>;
  parameter window2    :: <GdkWindow*>;
  parameter state_type3 :: <GtkStateType>;
  parameter shadow_type4 :: <GtkShadowType>;
  parameter area5      :: <GdkRectangle*>;
  parameter widget6    :: <GtkWidget*>;
  parameter detail7    :: <gchar*>;
  parameter x8         :: <gint>;
  parameter y9         :: <gint>;
  parameter width10    :: <gint>;
  parameter height11   :: <gint>;
  parameter gap_side12 :: <GtkPositionType>;
  parameter gap_x13    :: <gint>;
  parameter gap_width14 :: <gint>;
  c-name: "gtk_paint_shadow_gap";
end;

define inline-only C-function gtk-paint-box-gap
  parameter style1     :: <GtkStyle*>;
  parameter window2    :: <GdkWindow*>;
  parameter state_type3 :: <GtkStateType>;
  parameter shadow_type4 :: <GtkShadowType>;
  parameter area5      :: <GdkRectangle*>;
  parameter widget6    :: <GtkWidget*>;
  parameter detail7    :: <gchar*>;
  parameter x8         :: <gint>;
  parameter y9         :: <gint>;
  parameter width10    :: <gint>;
  parameter height11   :: <gint>;
  parameter gap_side12 :: <GtkPositionType>;
  parameter gap_x13    :: <gint>;
  parameter gap_width14 :: <gint>;
  c-name: "gtk_paint_box_gap";
end;

define inline-only C-function gtk-paint-extension
  parameter style1     :: <GtkStyle*>;
  parameter window2    :: <GdkWindow*>;
  parameter state_type3 :: <GtkStateType>;
  parameter shadow_type4 :: <GtkShadowType>;
  parameter area5      :: <GdkRectangle*>;
  parameter widget6    :: <GtkWidget*>;
  parameter detail7    :: <gchar*>;
  parameter x8         :: <gint>;
  parameter y9         :: <gint>;
  parameter width10    :: <gint>;
  parameter height11   :: <gint>;
  parameter gap_side12 :: <GtkPositionType>;
  c-name: "gtk_paint_extension";
end;

define inline-only C-function gtk-paint-focus
  parameter style1     :: <GtkStyle*>;
  parameter window2    :: <GdkWindow*>;
  parameter area3      :: <GdkRectangle*>;
  parameter widget4    :: <GtkWidget*>;
  parameter detail5    :: <gchar*>;
  parameter x6         :: <gint>;
  parameter y7         :: <gint>;
  parameter width8     :: <gint>;
  parameter height9    :: <gint>;
  c-name: "gtk_paint_focus";
end;

define inline-only C-function gtk-paint-slider
  parameter style1     :: <GtkStyle*>;
  parameter window2    :: <GdkWindow*>;
  parameter state_type3 :: <GtkStateType>;
  parameter shadow_type4 :: <GtkShadowType>;
  parameter area5      :: <GdkRectangle*>;
  parameter widget6    :: <GtkWidget*>;
  parameter detail7    :: <gchar*>;
  parameter x8         :: <gint>;
  parameter y9         :: <gint>;
  parameter width10    :: <gint>;
  parameter height11   :: <gint>;
  parameter orientation12 :: <GtkOrientation>;
  c-name: "gtk_paint_slider";
end;

define inline-only C-function gtk-paint-handle
  parameter style1     :: <GtkStyle*>;
  parameter window2    :: <GdkWindow*>;
  parameter state_type3 :: <GtkStateType>;
  parameter shadow_type4 :: <GtkShadowType>;
  parameter area5      :: <GdkRectangle*>;
  parameter widget6    :: <GtkWidget*>;
  parameter detail7    :: <gchar*>;
  parameter x8         :: <gint>;
  parameter y9         :: <gint>;
  parameter width10    :: <gint>;
  parameter height11   :: <gint>;
  parameter orientation12 :: <GtkOrientation>;
  c-name: "gtk_paint_handle";
end;

define inline constant <GtkStyle> = <_GtkStyle>;
define inline constant <GtkStyleClass> = <_GtkStyleClass>;
define inline constant <GtkThemeEngine> = <_GtkThemeEngine>;
define inline constant <GtkRcStyle> = <_GtkRcStyle>;
define inline constant <GtkWidget> = <_GtkWidget>;
define sealed domain make (singleton(<_GtkStyle*>));
define sealed domain initialize (<_GtkStyle*>);
define sealed domain make (singleton(<_GtkStyleClass*>));
define sealed domain initialize (<_GtkStyleClass*>);
