Module:    glib
Copyright:    Original Code is Copyright (c) 1995-2004 Functional Objects, Inc.
              All rights reserved.
License:      Functional Objects Library Public License Version 1.0
Dual-license: GNU Lesser General Public License
Warranty:     Distributed WITHOUT WARRANTY OF ANY KIND

// This file is automatically generated from "glibconfig.h"; do not edit.

define C-pointer-type <gint8*> => <gint8>;
define C-pointer-type <gint8**> => <gint8*>;
define C-pointer-type <guint8*> => <guint8>;
define C-pointer-type <guint8**> => <guint8*>;
define C-pointer-type <gint16*> => <gint16>;
define C-pointer-type <gint16**> => <gint16*>;
define C-pointer-type <guint16*> => <guint16>;
define C-pointer-type <guint16**> => <guint16*>;
define C-pointer-type <gint32*> => <gint32>;
define C-pointer-type <gint32**> => <gint32*>;
define C-pointer-type <guint32*> => <guint32>;
define C-pointer-type <guint32**> => <guint32*>;
define inline-only constant $G-HAVE-GINT64                 =    1;
define inline-only constant $G-HAVE-ALLOCA                 =    1;
define inline-only constant $GLIB-MAJOR-VERSION            =    1;
define inline-only constant $GLIB-MINOR-VERSION            =    2;
define inline-only constant $GLIB-MICRO-VERSION            =    0;
define inline-only constant $G-HAVE---INLINE               =    1;
define C-pointer-type <GStaticMutex*> => <GStaticMutex>;
define C-pointer-type <GStaticMutex**> => <GStaticMutex*>;
define C-union <aligned_pad_u%1>
  sealed inline-only array slot pad-array :: <C-char>,
    length: 36,
    address-getter: pad-value;
  sealed inline-only slot dummy-double-value :: <C-double>;
  sealed inline-only slot dummy-pointer-value :: <C-void*>;
  sealed inline-only slot dummy-long-value :: <C-both-long>;
end;

define C-struct <_GStaticMutex>
  sealed inline-only slot runtime-mutex-value :: <GMutex*>;
  sealed inline-only slot aligned-pad-u-value :: <aligned_pad_u%1>;
  pointer-type-name: <_GStaticMutex*>;
  c-name: "struct _GStaticMutex";
end;
define inline-only constant $G-HAVE-WCHAR-H                =    1;
define inline-only constant $G-HAVE-WCTYPE-H               =    1;
define inline-only constant $WIN32                         =    1;
define inline-only constant $NATIVE-WIN32                  =    1;

define inline constant <gint8> = <C-signed-char>;
define inline constant <guint8> = <C-unsigned-char>;
define inline constant <gint16> = <C-signed-short>;
define inline constant <guint16> = <C-unsigned-short>;
define inline constant <gint32> = <C-signed-int>;
define inline constant <guint32> = <C-unsigned-int>;
define inline constant <GStaticMutex> = <_GStaticMutex>;
define sealed domain make (singleton(<_GStaticMutex*>));
define sealed domain initialize (<_GStaticMutex*>);
define inline-only constant $G-BYTE-ORDER = $G-LITTLE-ENDIAN;
