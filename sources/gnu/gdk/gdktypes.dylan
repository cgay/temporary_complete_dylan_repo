Module:    gdk
Copyright:    Original Code is Copyright (c) 1995-2004 Functional Objects, Inc.
              All rights reserved.
License:      Functional Objects Library Public License Version 1.0
Dual-license: GNU Lesser General Public License
Warranty:     Distributed WITHOUT WARRANTY OF ANY KIND

// This file is automatically generated from "gdktypes.h"; do not edit.

define inline-only constant $GDK-NONE                      =    0;
define inline-only constant $GDK-CURRENT-TIME              =    0;
define inline-only constant $GDK-PARENT-RELATIVE           =    1;
define inline-only constant $GDK-CORE-POINTER              = #xfedc;
define C-pointer-type <GdkAtom*> => <GdkAtom>;
define C-pointer-type <GdkAtom**> => <GdkAtom*>;
define C-pointer-type <GdkColor*> => <GdkColor>;
define C-pointer-type <GdkColor**> => <GdkColor*>;
define C-pointer-type <GdkColormap*> => <GdkColormap>;
define C-pointer-type <GdkColormap**> => <GdkColormap*>;
define C-pointer-type <GdkVisual*> => <GdkVisual>;
define C-pointer-type <GdkVisual**> => <GdkVisual*>;
define C-pointer-type <GdkWindowAttr*> => <GdkWindowAttr>;
define C-pointer-type <GdkWindowAttr**> => <GdkWindowAttr*>;
define C-pointer-type <GdkWindow*> => <GdkWindow>;
define C-pointer-type <GdkWindow**> => <GdkWindow*>;
define C-pointer-type <GdkPixmap*> => <GdkPixmap>;
define C-pointer-type <GdkPixmap**> => <GdkPixmap*>;
define C-pointer-type <GdkBitmap*> => <GdkBitmap>;
define C-pointer-type <GdkBitmap**> => <GdkBitmap*>;
define C-pointer-type <GdkDrawable*> => <GdkDrawable>;
define C-pointer-type <GdkDrawable**> => <GdkDrawable*>;
define C-pointer-type <GdkGeometry*> => <GdkGeometry>;
define C-pointer-type <GdkGeometry**> => <GdkGeometry*>;
define C-pointer-type <GdkImage*> => <GdkImage>;
define C-pointer-type <GdkImage**> => <GdkImage*>;
define C-pointer-type <GdkGCValues*> => <GdkGCValues>;
define C-pointer-type <GdkGCValues**> => <GdkGCValues*>;
define C-pointer-type <GdkGC*> => <GdkGC>;
define C-pointer-type <GdkGC**> => <GdkGC*>;
define C-pointer-type <GdkPoint*> => <GdkPoint>;
define C-pointer-type <GdkPoint**> => <GdkPoint*>;
define C-pointer-type <GdkRectangle*> => <GdkRectangle>;
define C-pointer-type <GdkRectangle**> => <GdkRectangle*>;
define C-pointer-type <GdkSegment*> => <GdkSegment>;
define C-pointer-type <GdkSegment**> => <GdkSegment*>;
define C-pointer-type <GdkFont*> => <GdkFont>;
define C-pointer-type <GdkFont**> => <GdkFont*>;
define C-pointer-type <GdkCursor*> => <GdkCursor>;
define C-pointer-type <GdkCursor**> => <GdkCursor*>;
define C-pointer-type <GdkColorContextDither*> => <GdkColorContextDither>;
define C-pointer-type <GdkColorContextDither**> => <GdkColorContextDither*>;
define C-pointer-type <GdkColorContext*> => <GdkColorContext>;
define C-pointer-type <GdkColorContext**> => <GdkColorContext*>;
define C-pointer-type <GdkDragContext*> => <GdkDragContext>;
define C-pointer-type <GdkDragContext**> => <GdkDragContext*>;
define C-pointer-type <GdkEventAny*> => <GdkEventAny>;
define C-pointer-type <GdkEventAny**> => <GdkEventAny*>;
define C-pointer-type <GdkEventExpose*> => <GdkEventExpose>;
define C-pointer-type <GdkEventExpose**> => <GdkEventExpose*>;
define C-pointer-type <GdkEventNoExpose*> => <GdkEventNoExpose>;
define C-pointer-type <GdkEventNoExpose**> => <GdkEventNoExpose*>;
define C-pointer-type <GdkEventVisibility*> => <GdkEventVisibility>;
define C-pointer-type <GdkEventVisibility**> => <GdkEventVisibility*>;
define C-pointer-type <GdkEventMotion*> => <GdkEventMotion>;
define C-pointer-type <GdkEventMotion**> => <GdkEventMotion*>;
define C-pointer-type <GdkEventButton*> => <GdkEventButton>;
define C-pointer-type <GdkEventButton**> => <GdkEventButton*>;
define C-pointer-type <GdkEventKey*> => <GdkEventKey>;
define C-pointer-type <GdkEventKey**> => <GdkEventKey*>;
define C-pointer-type <GdkEventFocus*> => <GdkEventFocus>;
define C-pointer-type <GdkEventFocus**> => <GdkEventFocus*>;
define C-pointer-type <GdkEventCrossing*> => <GdkEventCrossing>;
define C-pointer-type <GdkEventCrossing**> => <GdkEventCrossing*>;
define C-pointer-type <GdkEventConfigure*> => <GdkEventConfigure>;
define C-pointer-type <GdkEventConfigure**> => <GdkEventConfigure*>;
define C-pointer-type <GdkEventProperty*> => <GdkEventProperty>;
define C-pointer-type <GdkEventProperty**> => <GdkEventProperty*>;
define C-pointer-type <GdkEventSelection*> => <GdkEventSelection>;
define C-pointer-type <GdkEventSelection**> => <GdkEventSelection*>;
define C-pointer-type <GdkEventProximity*> => <GdkEventProximity>;
define C-pointer-type <GdkEventProximity**> => <GdkEventProximity*>;
define C-pointer-type <GdkEventClient*> => <GdkEventClient>;
define C-pointer-type <GdkEventClient**> => <GdkEventClient*>;
define C-pointer-type <GdkEventDND*> => <GdkEventDND>;
define C-pointer-type <GdkEventDND**> => <GdkEventDND*>;
define C-pointer-type <GdkEvent*> => <GdkEvent>;
define C-pointer-type <GdkEvent**> => <GdkEvent*>;
define C-pointer-type <GdkDeviceKey*> => <GdkDeviceKey>;
define C-pointer-type <GdkDeviceKey**> => <GdkDeviceKey*>;
define C-pointer-type <GdkDeviceInfo*> => <GdkDeviceInfo>;
define C-pointer-type <GdkDeviceInfo**> => <GdkDeviceInfo*>;
define C-pointer-type <GdkTimeCoord*> => <GdkTimeCoord>;
define C-pointer-type <GdkTimeCoord**> => <GdkTimeCoord*>;
define C-pointer-type <GdkRegion*> => <GdkRegion>;
define C-pointer-type <GdkRegion**> => <GdkRegion*>;
define C-pointer-type <GdkEventFunc*> => <GdkEventFunc>;
define C-pointer-type <GdkEventFunc**> => <GdkEventFunc*>;
define C-pointer-type <GdkIC*> => <GdkIC>;
define C-pointer-type <GdkIC**> => <GdkIC*>;
define C-pointer-type <GdkICAttr*> => <GdkICAttr>;
define C-pointer-type <GdkICAttr**> => <GdkICAttr*>;
define C-pointer-type <GdkWChar*> => <GdkWChar>;
define C-pointer-type <GdkWChar**> => <GdkWChar*>;
// enum GdkWindowType:
define C-pointer-type <GdkWindowType*> => <GdkWindowType>;
define C-pointer-type <GdkWindowType**> => <GdkWindowType*>;
define inline-only constant $GDK-WINDOW-ROOT = -1 + 1;
define inline-only constant $GDK-WINDOW-TOPLEVEL = $GDK-WINDOW-ROOT + 1;
define inline-only constant $GDK-WINDOW-CHILD = $GDK-WINDOW-TOPLEVEL + 1;
define inline-only constant $GDK-WINDOW-DIALOG = $GDK-WINDOW-CHILD + 1;
define inline-only constant $GDK-WINDOW-TEMP = $GDK-WINDOW-DIALOG + 1;
define inline-only constant $GDK-WINDOW-PIXMAP = $GDK-WINDOW-TEMP + 1;
define inline-only constant $GDK-WINDOW-FOREIGN = $GDK-WINDOW-PIXMAP + 1;

// enum GdkWindowClass:
define C-pointer-type <GdkWindowClass*> => <GdkWindowClass>;
define C-pointer-type <GdkWindowClass**> => <GdkWindowClass*>;
define inline-only constant $GDK-INPUT-OUTPUT = -1 + 1;
define inline-only constant $GDK-INPUT-ONLY = $GDK-INPUT-OUTPUT + 1;

// enum GdkImageType:
define C-pointer-type <GdkImageType*> => <GdkImageType>;
define C-pointer-type <GdkImageType**> => <GdkImageType*>;
define inline-only constant $GDK-IMAGE-NORMAL = -1 + 1;
define inline-only constant $GDK-IMAGE-SHARED = $GDK-IMAGE-NORMAL + 1;
define inline-only constant $GDK-IMAGE-FASTEST = $GDK-IMAGE-SHARED + 1;
define inline-only constant $GDK-IMAGE-SHARED-PIXMAP = $GDK-IMAGE-FASTEST + 1;

// enum GdkVisualType:
define C-pointer-type <GdkVisualType*> => <GdkVisualType>;
define C-pointer-type <GdkVisualType**> => <GdkVisualType*>;
define inline-only constant $GDK-VISUAL-STATIC-GRAY = -1 + 1;
define inline-only constant $GDK-VISUAL-GRAYSCALE = $GDK-VISUAL-STATIC-GRAY + 1;
define inline-only constant $GDK-VISUAL-STATIC-COLOR = $GDK-VISUAL-GRAYSCALE + 1;
define inline-only constant $GDK-VISUAL-PSEUDO-COLOR = $GDK-VISUAL-STATIC-COLOR + 1;
define inline-only constant $GDK-VISUAL-TRUE-COLOR = $GDK-VISUAL-PSEUDO-COLOR + 1;
define inline-only constant $GDK-VISUAL-DIRECT-COLOR = $GDK-VISUAL-TRUE-COLOR + 1;

// enum GdkFontType:
define C-pointer-type <GdkFontType*> => <GdkFontType>;
define C-pointer-type <GdkFontType**> => <GdkFontType*>;
define inline-only constant $GDK-FONT-FONT = -1 + 1;
define inline-only constant $GDK-FONT-FONTSET = $GDK-FONT-FONT + 1;

// enum GdkWindowAttributesType:
define C-pointer-type <GdkWindowAttributesType*> => <GdkWindowAttributesType>;
define C-pointer-type <GdkWindowAttributesType**> => <GdkWindowAttributesType*>;
define inline-only constant $GDK-WA-TITLE = ash(1,1);
define inline-only constant $GDK-WA-X = ash(1,2);
define inline-only constant $GDK-WA-Y = ash(1,3);
define inline-only constant $GDK-WA-CURSOR = ash(1,4);
define inline-only constant $GDK-WA-COLORMAP = ash(1,5);
define inline-only constant $GDK-WA-VISUAL = ash(1,6);
define inline-only constant $GDK-WA-WMCLASS = ash(1,7);
define inline-only constant $GDK-WA-NOREDIR = ash(1,8);

// enum GdkWindowHints:
define C-pointer-type <GdkWindowHints*> => <GdkWindowHints>;
define C-pointer-type <GdkWindowHints**> => <GdkWindowHints*>;
define inline-only constant $GDK-HINT-POS = ash(1,0);
define inline-only constant $GDK-HINT-MIN-SIZE = ash(1,1);
define inline-only constant $GDK-HINT-MAX-SIZE = ash(1,2);
define inline-only constant $GDK-HINT-BASE-SIZE = ash(1,3);
define inline-only constant $GDK-HINT-ASPECT = ash(1,4);
define inline-only constant $GDK-HINT-RESIZE-INC = ash(1,5);

// enum GdkFunction:
define C-pointer-type <GdkFunction*> => <GdkFunction>;
define C-pointer-type <GdkFunction**> => <GdkFunction*>;
define inline-only constant $GDK-COPY = -1 + 1;
define inline-only constant $GDK-INVERT = $GDK-COPY + 1;
define inline-only constant $GDK-XOR = $GDK-INVERT + 1;
define inline-only constant $GDK-CLEAR = $GDK-XOR + 1;
define inline-only constant $GDK-AND = $GDK-CLEAR + 1;
define inline-only constant $GDK-AND-REVERSE = $GDK-AND + 1;
define inline-only constant $GDK-AND-INVERT = $GDK-AND-REVERSE + 1;
define inline-only constant $GDK-NOOP = $GDK-AND-INVERT + 1;
define inline-only constant $GDK-OR = $GDK-NOOP + 1;
define inline-only constant $GDK-EQUIV = $GDK-OR + 1;
define inline-only constant $GDK-OR-REVERSE = $GDK-EQUIV + 1;
define inline-only constant $GDK-COPY-INVERT = $GDK-OR-REVERSE + 1;
define inline-only constant $GDK-OR-INVERT = $GDK-COPY-INVERT + 1;
define inline-only constant $GDK-NAND = $GDK-OR-INVERT + 1;
define inline-only constant $GDK-SET = $GDK-NAND + 1;

// enum GdkFill:
define C-pointer-type <GdkFill*> => <GdkFill>;
define C-pointer-type <GdkFill**> => <GdkFill*>;
define inline-only constant $GDK-SOLID = -1 + 1;
define inline-only constant $GDK-TILED = $GDK-SOLID + 1;
define inline-only constant $GDK-STIPPLED = $GDK-TILED + 1;
define inline-only constant $GDK-OPAQUE-STIPPLED = $GDK-STIPPLED + 1;

// enum GdkFillRule:
define C-pointer-type <GdkFillRule*> => <GdkFillRule>;
define C-pointer-type <GdkFillRule**> => <GdkFillRule*>;
define inline-only constant $GDK-EVEN-ODD-RULE = -1 + 1;
define inline-only constant $GDK-WINDING-RULE = $GDK-EVEN-ODD-RULE + 1;

// enum GdkLineStyle:
define C-pointer-type <GdkLineStyle*> => <GdkLineStyle>;
define C-pointer-type <GdkLineStyle**> => <GdkLineStyle*>;
define inline-only constant $GDK-LINE-SOLID = -1 + 1;
define inline-only constant $GDK-LINE-ON-OFF-DASH = $GDK-LINE-SOLID + 1;
define inline-only constant $GDK-LINE-DOUBLE-DASH = $GDK-LINE-ON-OFF-DASH + 1;

// enum GdkCapStyle:
define C-pointer-type <GdkCapStyle*> => <GdkCapStyle>;
define C-pointer-type <GdkCapStyle**> => <GdkCapStyle*>;
define inline-only constant $GDK-CAP-NOT-LAST = -1 + 1;
define inline-only constant $GDK-CAP-BUTT = $GDK-CAP-NOT-LAST + 1;
define inline-only constant $GDK-CAP-ROUND = $GDK-CAP-BUTT + 1;
define inline-only constant $GDK-CAP-PROJECTING = $GDK-CAP-ROUND + 1;

// enum GdkJoinStyle:
define C-pointer-type <GdkJoinStyle*> => <GdkJoinStyle>;
define C-pointer-type <GdkJoinStyle**> => <GdkJoinStyle*>;
define inline-only constant $GDK-JOIN-MITER = -1 + 1;
define inline-only constant $GDK-JOIN-ROUND = $GDK-JOIN-MITER + 1;
define inline-only constant $GDK-JOIN-BEVEL = $GDK-JOIN-ROUND + 1;

// enum GdkCursorType:
define C-pointer-type <GdkCursorType*> => <GdkCursorType>;
define C-pointer-type <GdkCursorType**> => <GdkCursorType*>;
define inline-only constant $GDK-LAST-CURSOR = -1 + 1;
define inline-only constant $GDK-CURSOR-IS-PIXMAP = -1;

// enum GdkFilterReturn:
define C-pointer-type <GdkFilterReturn*> => <GdkFilterReturn>;
define C-pointer-type <GdkFilterReturn**> => <GdkFilterReturn*>;
define inline-only constant $GDK-FILTER-CONTINUE = -1 + 1;
define inline-only constant $GDK-FILTER-TRANSLATE = $GDK-FILTER-CONTINUE + 1;
define inline-only constant $GDK-FILTER-REMOVE = $GDK-FILTER-TRANSLATE + 1;

// enum GdkVisibilityState:
define C-pointer-type <GdkVisibilityState*> => <GdkVisibilityState>;
define C-pointer-type <GdkVisibilityState**> => <GdkVisibilityState*>;
define inline-only constant $GDK-VISIBILITY-UNOBSCURED = -1 + 1;
define inline-only constant $GDK-VISIBILITY-PARTIAL = $GDK-VISIBILITY-UNOBSCURED + 1;
define inline-only constant $GDK-VISIBILITY-FULLY-OBSCURED = $GDK-VISIBILITY-PARTIAL + 1;

// enum GdkEventType:
define C-pointer-type <GdkEventType*> => <GdkEventType>;
define C-pointer-type <GdkEventType**> => <GdkEventType*>;
define inline-only constant $GDK-NOTHING = -1;
define inline-only constant $GDK-DELETE = 0;
define inline-only constant $GDK-DESTROY = 1;
define inline-only constant $GDK-EXPOSE = 2;
define inline-only constant $GDK-MOTION-NOTIFY = 3;
define inline-only constant $GDK-BUTTON-PRESS = 4;
define inline-only constant $GDK-2BUTTON-PRESS = 5;
define inline-only constant $GDK-3BUTTON-PRESS = 6;
define inline-only constant $GDK-BUTTON-RELEASE = 7;
define inline-only constant $GDK-KEY-PRESS = 8;
define inline-only constant $GDK-KEY-RELEASE = 9;
define inline-only constant $GDK-ENTER-NOTIFY = 10;
define inline-only constant $GDK-LEAVE-NOTIFY = 11;
define inline-only constant $GDK-FOCUS-CHANGE = 12;
define inline-only constant $GDK-CONFIGURE = 13;
define inline-only constant $GDK-MAP = 14;
define inline-only constant $GDK-UNMAP = 15;
define inline-only constant $GDK-PROPERTY-NOTIFY = 16;
define inline-only constant $GDK-SELECTION-CLEAR = 17;
define inline-only constant $GDK-SELECTION-REQUEST = 18;
define inline-only constant $GDK-SELECTION-NOTIFY = 19;
define inline-only constant $GDK-PROXIMITY-IN = 20;
define inline-only constant $GDK-PROXIMITY-OUT = 21;
define inline-only constant $GDK-DRAG-ENTER = 22;
define inline-only constant $GDK-DRAG-LEAVE = 23;
define inline-only constant $GDK-DRAG-MOTION = 24;
define inline-only constant $GDK-DRAG-STATUS = 25;
define inline-only constant $GDK-DROP-START = 26;
define inline-only constant $GDK-DROP-FINISHED = 27;
define inline-only constant $GDK-CLIENT-EVENT = 28;
define inline-only constant $GDK-VISIBILITY-NOTIFY = 29;
define inline-only constant $GDK-NO-EXPOSE = 30;

// enum GdkEventMask:
define C-pointer-type <GdkEventMask*> => <GdkEventMask>;
define C-pointer-type <GdkEventMask**> => <GdkEventMask*>;
define inline-only constant $GDK-EXPOSURE-MASK = ash(1,1);
define inline-only constant $GDK-POINTER-MOTION-MASK = ash(1,2);
define inline-only constant $GDK-POINTER-MOTION-HINT-MASK = ash(1,3);
define inline-only constant $GDK-BUTTON-MOTION-MASK = ash(1,4);
define inline-only constant $GDK-BUTTON1-MOTION-MASK = ash(1,5);
define inline-only constant $GDK-BUTTON2-MOTION-MASK = ash(1,6);
define inline-only constant $GDK-BUTTON3-MOTION-MASK = ash(1,7);
define inline-only constant $GDK-BUTTON-PRESS-MASK = ash(1,8);
define inline-only constant $GDK-BUTTON-RELEASE-MASK = ash(1,9);
define inline-only constant $GDK-KEY-PRESS-MASK = ash(1,10);
define inline-only constant $GDK-KEY-RELEASE-MASK = ash(1,11);
define inline-only constant $GDK-ENTER-NOTIFY-MASK = ash(1,12);
define inline-only constant $GDK-LEAVE-NOTIFY-MASK = ash(1,13);
define inline-only constant $GDK-FOCUS-CHANGE-MASK = ash(1,14);
define inline-only constant $GDK-STRUCTURE-MASK = ash(1,15);
define inline-only constant $GDK-PROPERTY-CHANGE-MASK = ash(1,16);
define inline-only constant $GDK-VISIBILITY-NOTIFY-MASK = ash(1,17);
define inline-only constant $GDK-PROXIMITY-IN-MASK = ash(1,18);
define inline-only constant $GDK-PROXIMITY-OUT-MASK = ash(1,19);
define inline-only constant $GDK-SUBSTRUCTURE-MASK = ash(1,20);
define inline-only constant $GDK-ALL-EVENTS-MASK = #x0FFFFF;

// enum GdkNotifyType:
define C-pointer-type <GdkNotifyType*> => <GdkNotifyType>;
define C-pointer-type <GdkNotifyType**> => <GdkNotifyType*>;
define inline-only constant $GDK-NOTIFY-ANCESTOR = 0;
define inline-only constant $GDK-NOTIFY-VIRTUAL = 1;
define inline-only constant $GDK-NOTIFY-INFERIOR = 2;
define inline-only constant $GDK-NOTIFY-NONLINEAR = 3;
define inline-only constant $GDK-NOTIFY-NONLINEAR-VIRTUAL = 4;
define inline-only constant $GDK-NOTIFY-UNKNOWN = 5;

// enum GdkCrossingMode:
define C-pointer-type <GdkCrossingMode*> => <GdkCrossingMode>;
define C-pointer-type <GdkCrossingMode**> => <GdkCrossingMode*>;
define inline-only constant $GDK-CROSSING-NORMAL = -1 + 1;
define inline-only constant $GDK-CROSSING-GRAB = $GDK-CROSSING-NORMAL + 1;
define inline-only constant $GDK-CROSSING-UNGRAB = $GDK-CROSSING-GRAB + 1;

// enum GdkModifierType:
define C-pointer-type <GdkModifierType*> => <GdkModifierType>;
define C-pointer-type <GdkModifierType**> => <GdkModifierType*>;
define inline-only constant $GDK-SHIFT-MASK = ash(1,0);
define inline-only constant $GDK-LOCK-MASK = ash(1,1);
define inline-only constant $GDK-CONTROL-MASK = ash(1,2);
define inline-only constant $GDK-MOD1-MASK = ash(1,3);
define inline-only constant $GDK-MOD2-MASK = ash(1,4);
define inline-only constant $GDK-MOD3-MASK = ash(1,5);
define inline-only constant $GDK-MOD4-MASK = ash(1,6);
define inline-only constant $GDK-MOD5-MASK = ash(1,7);
define inline-only constant $GDK-BUTTON1-MASK = ash(1,8);
define inline-only constant $GDK-BUTTON2-MASK = ash(1,9);
define inline-only constant $GDK-BUTTON3-MASK = ash(1,10);
define inline-only constant $GDK-BUTTON4-MASK = ash(1,11);
define inline-only constant $GDK-BUTTON5-MASK = ash(1,12);
define inline-only constant $GDK-RELEASE-MASK = ash(1,13);
define inline-only constant $GDK-MODIFIER-MASK = #x3fff;

// enum GdkSubwindowMode:
define C-pointer-type <GdkSubwindowMode*> => <GdkSubwindowMode>;
define C-pointer-type <GdkSubwindowMode**> => <GdkSubwindowMode*>;
define inline-only constant $GDK-CLIP-BY-CHILDREN = 0;
define inline-only constant $GDK-INCLUDE-INFERIORS = 1;

// enum GdkInputCondition:
define C-pointer-type <GdkInputCondition*> => <GdkInputCondition>;
define C-pointer-type <GdkInputCondition**> => <GdkInputCondition*>;
define inline-only constant $GDK-INPUT-READ = ash(1,0);
define inline-only constant $GDK-INPUT-WRITE = ash(1,1);
define inline-only constant $GDK-INPUT-EXCEPTION = ash(1,2);

// enum GdkStatus:
define C-pointer-type <GdkStatus*> => <GdkStatus>;
define C-pointer-type <GdkStatus**> => <GdkStatus*>;
define inline-only constant $GDK-OK = 0;
define inline-only constant $GDK-ERROR = -1;
define inline-only constant $GDK-ERROR-PARAM = -2;
define inline-only constant $GDK-ERROR-FILE = -3;
define inline-only constant $GDK-ERROR-MEM = -4;

// enum GdkByteOrder:
define C-pointer-type <GdkByteOrder*> => <GdkByteOrder>;
define C-pointer-type <GdkByteOrder**> => <GdkByteOrder*>;
define inline-only constant $GDK-LSB-FIRST = -1 + 1;
define inline-only constant $GDK-MSB-FIRST = $GDK-LSB-FIRST + 1;

// enum GdkGCValuesMask:
define C-pointer-type <GdkGCValuesMask*> => <GdkGCValuesMask>;
define C-pointer-type <GdkGCValuesMask**> => <GdkGCValuesMask*>;
define inline-only constant $GDK-GC-FOREGROUND = ash(1,0);
define inline-only constant $GDK-GC-BACKGROUND = ash(1,1);
define inline-only constant $GDK-GC-FONT = ash(1,2);
define inline-only constant $GDK-GC-FUNCTION = ash(1,3);
define inline-only constant $GDK-GC-FILL = ash(1,4);
define inline-only constant $GDK-GC-TILE = ash(1,5);
define inline-only constant $GDK-GC-STIPPLE = ash(1,6);
define inline-only constant $GDK-GC-CLIP-MASK = ash(1,7);
define inline-only constant $GDK-GC-SUBWINDOW = ash(1,8);
define inline-only constant $GDK-GC-TS-X-ORIGIN = ash(1,9);
define inline-only constant $GDK-GC-TS-Y-ORIGIN = ash(1,10);
define inline-only constant $GDK-GC-CLIP-X-ORIGIN = ash(1,11);
define inline-only constant $GDK-GC-CLIP-Y-ORIGIN = ash(1,12);
define inline-only constant $GDK-GC-EXPOSURES = ash(1,13);
define inline-only constant $GDK-GC-LINE-WIDTH = ash(1,14);
define inline-only constant $GDK-GC-LINE-STYLE = ash(1,15);
define inline-only constant $GDK-GC-CAP-STYLE = ash(1,16);
define inline-only constant $GDK-GC-JOIN-STYLE = ash(1,17);

// enum GdkSelection:
define C-pointer-type <GdkSelection*> => <GdkSelection>;
define C-pointer-type <GdkSelection**> => <GdkSelection*>;
define inline-only constant $GDK-SELECTION-PRIMARY = 1;
define inline-only constant $GDK-SELECTION-SECONDARY = 2;

// enum GdkPropertyState:
define C-pointer-type <GdkPropertyState*> => <GdkPropertyState>;
define C-pointer-type <GdkPropertyState**> => <GdkPropertyState*>;
define inline-only constant $GDK-PROPERTY-NEW-VALUE = -1 + 1;
define inline-only constant $GDK-PROPERTY-DELETE = $GDK-PROPERTY-NEW-VALUE + 1;

// enum GdkPropMode:
define C-pointer-type <GdkPropMode*> => <GdkPropMode>;
define C-pointer-type <GdkPropMode**> => <GdkPropMode*>;
define inline-only constant $GDK-PROP-MODE-REPLACE = -1 + 1;
define inline-only constant $GDK-PROP-MODE-PREPEND = $GDK-PROP-MODE-REPLACE + 1;
define inline-only constant $GDK-PROP-MODE-APPEND = $GDK-PROP-MODE-PREPEND + 1;

// enum GdkInputSource:
define C-pointer-type <GdkInputSource*> => <GdkInputSource>;
define C-pointer-type <GdkInputSource**> => <GdkInputSource*>;
define inline-only constant $GDK-SOURCE-MOUSE = -1 + 1;
define inline-only constant $GDK-SOURCE-PEN = $GDK-SOURCE-MOUSE + 1;
define inline-only constant $GDK-SOURCE-ERASER = $GDK-SOURCE-PEN + 1;
define inline-only constant $GDK-SOURCE-CURSOR = $GDK-SOURCE-ERASER + 1;

// enum GdkInputMode:
define C-pointer-type <GdkInputMode*> => <GdkInputMode>;
define C-pointer-type <GdkInputMode**> => <GdkInputMode*>;
define inline-only constant $GDK-MODE-DISABLED = -1 + 1;
define inline-only constant $GDK-MODE-SCREEN = $GDK-MODE-DISABLED + 1;
define inline-only constant $GDK-MODE-WINDOW = $GDK-MODE-SCREEN + 1;

// enum GdkAxisUse:
define C-pointer-type <GdkAxisUse*> => <GdkAxisUse>;
define C-pointer-type <GdkAxisUse**> => <GdkAxisUse*>;
define inline-only constant $GDK-AXIS-IGNORE = -1 + 1;
define inline-only constant $GDK-AXIS-X = $GDK-AXIS-IGNORE + 1;
define inline-only constant $GDK-AXIS-Y = $GDK-AXIS-X + 1;
define inline-only constant $GDK-AXIS-PRESSURE = $GDK-AXIS-Y + 1;
define inline-only constant $GDK-AXIS-XTILT = $GDK-AXIS-PRESSURE + 1;
define inline-only constant $GDK-AXIS-YTILT = $GDK-AXIS-XTILT + 1;
define inline-only constant $GDK-AXIS-LAST = $GDK-AXIS-YTILT + 1;

// enum GdkTarget:
define C-pointer-type <GdkTarget*> => <GdkTarget>;
define C-pointer-type <GdkTarget**> => <GdkTarget*>;
define inline-only constant $GDK-TARGET-BITMAP = 5;
define inline-only constant $GDK-TARGET-COLORMAP = 7;
define inline-only constant $GDK-TARGET-DRAWABLE = 17;
define inline-only constant $GDK-TARGET-PIXMAP = 20;
define inline-only constant $GDK-TARGET-STRING = 31;

// enum GdkSelectionType:
define C-pointer-type <GdkSelectionType*> => <GdkSelectionType>;
define C-pointer-type <GdkSelectionType**> => <GdkSelectionType*>;
define inline-only constant $GDK-SELECTION-TYPE-ATOM = 4;
define inline-only constant $GDK-SELECTION-TYPE-BITMAP = 5;
define inline-only constant $GDK-SELECTION-TYPE-COLORMAP = 7;
define inline-only constant $GDK-SELECTION-TYPE-DRAWABLE = 17;
define inline-only constant $GDK-SELECTION-TYPE-INTEGER = 19;
define inline-only constant $GDK-SELECTION-TYPE-PIXMAP = 20;
define inline-only constant $GDK-SELECTION-TYPE-WINDOW = 33;
define inline-only constant $GDK-SELECTION-TYPE-STRING = 31;

// enum GdkExtensionMode:
define C-pointer-type <GdkExtensionMode*> => <GdkExtensionMode>;
define C-pointer-type <GdkExtensionMode**> => <GdkExtensionMode*>;
define inline-only constant $GDK-EXTENSION-EVENTS-NONE = -1 + 1;
define inline-only constant $GDK-EXTENSION-EVENTS-ALL = $GDK-EXTENSION-EVENTS-NONE + 1;
define inline-only constant $GDK-EXTENSION-EVENTS-CURSOR = $GDK-EXTENSION-EVENTS-ALL + 1;

// enum GdkIMStyle:
define C-pointer-type <GdkIMStyle*> => <GdkIMStyle>;
define C-pointer-type <GdkIMStyle**> => <GdkIMStyle*>;
define inline-only constant $GDK-IM-PREEDIT-AREA = #x0001;
define inline-only constant $GDK-IM-PREEDIT-CALLBACKS = #x0002;
define inline-only constant $GDK-IM-PREEDIT-POSITION = #x0004;
define inline-only constant $GDK-IM-PREEDIT-NOTHING = #x0008;
define inline-only constant $GDK-IM-PREEDIT-NONE = #x0010;
define inline-only constant $GDK-IM-PREEDIT-MASK = #x001f;
define inline-only constant $GDK-IM-STATUS-AREA = #x0100;
define inline-only constant $GDK-IM-STATUS-CALLBACKS = #x0200;
define inline-only constant $GDK-IM-STATUS-NOTHING = #x0400;
define inline-only constant $GDK-IM-STATUS-NONE = #x0800;
define inline-only constant $GDK-IM-STATUS-MASK = #x0f00;

// enum GdkICAttributesType:
define C-pointer-type <GdkICAttributesType*> => <GdkICAttributesType>;
define C-pointer-type <GdkICAttributesType**> => <GdkICAttributesType*>;
define inline-only constant $GDK-IC-STYLE = ash(1,0);
define inline-only constant $GDK-IC-CLIENT-WINDOW = ash(1,1);
define inline-only constant $GDK-IC-FOCUS-WINDOW = ash(1,2);
define inline-only constant $GDK-IC-FILTER-EVENTS = ash(1,3);
define inline-only constant $GDK-IC-SPOT-LOCATION = ash(1,4);
define inline-only constant $GDK-IC-LINE-SPACING = ash(1,5);
define inline-only constant $GDK-IC-CURSOR = ash(1,6);
define inline-only constant $GDK-IC-PREEDIT-FONTSET = ash(1,10);
define inline-only constant $GDK-IC-PREEDIT-AREA = ash(1,11);
define inline-only constant $GDK-IC-PREEDIT-AREA-NEEDED = ash(1,12);
define inline-only constant $GDK-IC-PREEDIT-FOREGROUND = ash(1,13);
define inline-only constant $GDK-IC-PREEDIT-BACKGROUND = ash(1,14);
define inline-only constant $GDK-IC-PREEDIT-PIXMAP = ash(1,15);
define inline-only constant $GDK-IC-PREEDIT-COLORMAP = ash(1,16);
define inline-only constant $GDK-IC-STATUS-FONTSET = ash(1,21);
define inline-only constant $GDK-IC-STATUS-AREA = ash(1,22);
define inline-only constant $GDK-IC-STATUS-AREA-NEEDED = ash(1,23);
define inline-only constant $GDK-IC-STATUS-FOREGROUND = ash(1,24);
define inline-only constant $GDK-IC-STATUS-BACKGROUND = ash(1,25);
define inline-only constant $GDK-IC-STATUS-PIXMAP = ash(1,26);
define inline-only constant $GDK-IC-STATUS-COLORMAP = ash(1,27);
define inline-only constant $GDK-IC-ALL-REQ = logior($GDK-IC-STYLE, $GDK-IC-CLIENT-WINDOW);
define inline-only constant $GDK-IC-PREEDIT-AREA-REQ = logior($GDK-IC-PREEDIT-AREA, $GDK-IC-PREEDIT-FONTSET);
define inline-only constant $GDK-IC-PREEDIT-POSITION-REQ = logior($GDK-IC-PREEDIT-AREA, $GDK-IC-SPOT-LOCATION, $GDK-IC-PREEDIT-FONTSET);
define inline-only constant $GDK-IC-STATUS-AREA-REQ = logior($GDK-IC-STATUS-AREA, $GDK-IC-STATUS-FONTSET);

// enum GdkWMDecoration:
define C-pointer-type <GdkWMDecoration*> => <GdkWMDecoration>;
define C-pointer-type <GdkWMDecoration**> => <GdkWMDecoration*>;
define inline-only constant $GDK-DECOR-ALL = ash(1,0);
define inline-only constant $GDK-DECOR-BORDER = ash(1,1);
define inline-only constant $GDK-DECOR-RESIZEH = ash(1,2);
define inline-only constant $GDK-DECOR-TITLE = ash(1,3);
define inline-only constant $GDK-DECOR-MENU = ash(1,4);
define inline-only constant $GDK-DECOR-MINIMIZE = ash(1,5);
define inline-only constant $GDK-DECOR-MAXIMIZE = ash(1,6);

// enum GdkWMFunction:
define C-pointer-type <GdkWMFunction*> => <GdkWMFunction>;
define C-pointer-type <GdkWMFunction**> => <GdkWMFunction*>;
define inline-only constant $GDK-FUNC-ALL = ash(1,0);
define inline-only constant $GDK-FUNC-RESIZE = ash(1,1);
define inline-only constant $GDK-FUNC-MOVE = ash(1,2);
define inline-only constant $GDK-FUNC-MINIMIZE = ash(1,3);
define inline-only constant $GDK-FUNC-MAXIMIZE = ash(1,4);
define inline-only constant $GDK-FUNC-CLOSE = ash(1,5);

define C-pointer-type <GdkInputFunction*> => <GdkInputFunction>;
define C-pointer-type <GdkInputFunction**> => <GdkInputFunction*>;
define C-pointer-type <GdkDestroyNotify*> => <GdkDestroyNotify>;
define C-pointer-type <GdkDestroyNotify**> => <GdkDestroyNotify*>;
// enum GdkColorContextMode:
define C-pointer-type <GdkColorContextMode*> => <GdkColorContextMode>;
define C-pointer-type <GdkColorContextMode**> => <GdkColorContextMode*>;
define inline-only constant $GDK-CC-MODE-UNDEFINED = -1 + 1;
define inline-only constant $GDK-CC-MODE-BW = $GDK-CC-MODE-UNDEFINED + 1;
define inline-only constant $GDK-CC-MODE-STD-CMAP = $GDK-CC-MODE-BW + 1;
define inline-only constant $GDK-CC-MODE-TRUE = $GDK-CC-MODE-STD-CMAP + 1;
define inline-only constant $GDK-CC-MODE-MY-GRAY = $GDK-CC-MODE-TRUE + 1;
define inline-only constant $GDK-CC-MODE-PALETTE = $GDK-CC-MODE-MY-GRAY + 1;

// enum GdkOverlapType:
define C-pointer-type <GdkOverlapType*> => <GdkOverlapType>;
define C-pointer-type <GdkOverlapType**> => <GdkOverlapType*>;
define inline-only constant $GDK-OVERLAP-RECTANGLE-IN = -1 + 1;
define inline-only constant $GDK-OVERLAP-RECTANGLE-OUT = $GDK-OVERLAP-RECTANGLE-IN + 1;
define inline-only constant $GDK-OVERLAP-RECTANGLE-PART = $GDK-OVERLAP-RECTANGLE-OUT + 1;

// enum GdkDragAction:
define C-pointer-type <GdkDragAction*> => <GdkDragAction>;
define C-pointer-type <GdkDragAction**> => <GdkDragAction*>;
define inline-only constant $GDK-ACTION-DEFAULT = ash(1,0);
define inline-only constant $GDK-ACTION-COPY = ash(1,1);
define inline-only constant $GDK-ACTION-MOVE = ash(1,2);
define inline-only constant $GDK-ACTION-LINK = ash(1,3);
define inline-only constant $GDK-ACTION-PRIVATE = ash(1,4);
define inline-only constant $GDK-ACTION-ASK = ash(1,5);

// enum GdkDragProtocol:
define C-pointer-type <GdkDragProtocol*> => <GdkDragProtocol>;
define C-pointer-type <GdkDragProtocol**> => <GdkDragProtocol*>;
define inline-only constant $GDK-DRAG-PROTO-MOTIF = -1 + 1;
define inline-only constant $GDK-DRAG-PROTO-XDND = $GDK-DRAG-PROTO-MOTIF + 1;
define inline-only constant $GDK-DRAG-PROTO-ROOTWIN = $GDK-DRAG-PROTO-XDND + 1;
define inline-only constant $GDK-DRAG-PROTO-WIN32-DROPFILES = $GDK-DRAG-PROTO-ROOTWIN + 1;
define inline-only constant $GDK-DRAG-PROTO-OLE2 = $GDK-DRAG-PROTO-WIN32-DROPFILES + 1;
define inline-only constant $GDK-DRAG-PROTO-NONE = $GDK-DRAG-PROTO-OLE2 + 1;


define C-struct <_GdkColor>
  sealed inline-only slot pixel-value    :: <gulong>;
  sealed inline-only slot red-value      :: <gushort>;
  sealed inline-only slot green-value    :: <gushort>;
  sealed inline-only slot blue-value     :: <gushort>;
  pointer-type-name: <_GdkColor*>;
  c-name: "struct _GdkColor";
end;

define C-struct <_GdkColormap>
  sealed inline-only slot size-value     :: <gint>;
  sealed inline-only slot colors-value   :: <GdkColor*>;
  pointer-type-name: <_GdkColormap*>;
  c-name: "struct _GdkColormap";
end;

define C-struct <_GdkVisual>
  sealed inline-only slot type-value     :: <C-int>;
  sealed inline-only slot depth-value    :: <gint>;
  sealed inline-only slot byte-order-value :: <C-int>;
  sealed inline-only slot colormap-size-value :: <gint>;
  sealed inline-only slot bits-per-rgb-value :: <gint>;
  sealed inline-only slot red-mask-value :: <guint32>;
  sealed inline-only slot red-shift-value :: <gint>;
  sealed inline-only slot red-prec-value :: <gint>;
  sealed inline-only slot green-mask-value :: <guint32>;
  sealed inline-only slot green-shift-value :: <gint>;
  sealed inline-only slot green-prec-value :: <gint>;
  sealed inline-only slot blue-mask-value :: <guint32>;
  sealed inline-only slot blue-shift-value :: <gint>;
  sealed inline-only slot blue-prec-value :: <gint>;
  pointer-type-name: <_GdkVisual*>;
  c-name: "struct _GdkVisual";
end;

define C-struct <_GdkWindowAttr>
  sealed inline-only slot title-value    :: <gchar*>;
  sealed inline-only slot event-mask-value :: <gint>;
  sealed inline-only slot x-value        :: <gint16>;
  sealed inline-only slot y-value        :: <gint16>;
  sealed inline-only slot width-value    :: <gint16>;
  sealed inline-only slot height-value   :: <gint16>;
  sealed inline-only slot wclass-value   :: <C-int>;
  sealed inline-only slot visual-value   :: <GdkVisual*>;
  sealed inline-only slot colormap-value :: <GdkColormap*>;
  sealed inline-only slot window-type-value :: <C-int>;
  sealed inline-only slot cursor-value   :: <GdkCursor*>;
  sealed inline-only slot wmclass-name-value :: <gchar*>;
  sealed inline-only slot wmclass-class-value :: <gchar*>;
  sealed inline-only slot override-redirect-value :: <gboolean>;
  pointer-type-name: <_GdkWindowAttr*>;
  c-name: "struct _GdkWindowAttr";
end;

define C-struct <_GdkWindow>
  sealed inline-only slot user-data-value :: <gpointer>;
  pointer-type-name: <_GdkWindow*>;
  c-name: "struct _GdkWindow";
end;

define C-struct <_GdkGeometry>
  sealed inline-only slot min-width-value :: <gint>;
  sealed inline-only slot min-height-value :: <gint>;
  sealed inline-only slot max-width-value :: <gint>;
  sealed inline-only slot max-height-value :: <gint>;
  sealed inline-only slot base-width-value :: <gint>;
  sealed inline-only slot base-height-value :: <gint>;
  sealed inline-only slot width-inc-value :: <gint>;
  sealed inline-only slot height-inc-value :: <gint>;
  sealed inline-only slot min-aspect-value :: <gdouble>;
  sealed inline-only slot max-aspect-value :: <gdouble>;
  pointer-type-name: <_GdkGeometry*>;
  c-name: "struct _GdkGeometry";
end;

define C-struct <_GdkImage>
  sealed inline-only slot type-value     :: <C-int>;
  sealed inline-only slot visual-value   :: <GdkVisual*>;
  sealed inline-only slot byte-order-value :: <C-int>;
  sealed inline-only slot width-value    :: <guint16>;
  sealed inline-only slot height-value   :: <guint16>;
  sealed inline-only slot depth-value    :: <guint16>;
  sealed inline-only slot bpp-value      :: <guint16>;
  sealed inline-only slot bpl-value      :: <guint16>;
  sealed inline-only slot mem-value      :: <gpointer>;
  pointer-type-name: <_GdkImage*>;
  c-name: "struct _GdkImage";
end;

define C-struct <_GdkGCValues>
  sealed inline-only slot foreground-value :: <GdkColor>;
  sealed inline-only slot background-value :: <GdkColor>;
  sealed inline-only slot font-value     :: <GdkFont*>;
  sealed inline-only slot function-value :: <C-int>;
  sealed inline-only slot fill-value     :: <C-int>;
  sealed inline-only slot tile-value     :: <GdkPixmap*>;
  sealed inline-only slot stipple-value  :: <GdkPixmap*>;
  sealed inline-only slot clip-mask-value :: <GdkPixmap*>;
  sealed inline-only slot subwindow-mode-value :: <C-int>;
  sealed inline-only slot ts-x-origin-value :: <gint>;
  sealed inline-only slot ts-y-origin-value :: <gint>;
  sealed inline-only slot clip-x-origin-value :: <gint>;
  sealed inline-only slot clip-y-origin-value :: <gint>;
  sealed inline-only slot graphics-exposures-value :: <gint>;
  sealed inline-only slot line-width-value :: <gint>;
  sealed inline-only slot line-style-value :: <C-int>;
  sealed inline-only slot cap-style-value :: <C-int>;
  sealed inline-only slot join-style-value :: <C-int>;
  pointer-type-name: <_GdkGCValues*>;
  c-name: "struct _GdkGCValues";
end;

define C-struct <_GdkGC>
  sealed inline-only slot dummy-var-value :: <gint>;
  pointer-type-name: <_GdkGC*>;
  c-name: "struct _GdkGC";
end;

define C-struct <_GdkPoint>
  sealed inline-only slot x-value        :: <gint16>;
  sealed inline-only slot y-value        :: <gint16>;
  pointer-type-name: <_GdkPoint*>;
  c-name: "struct _GdkPoint";
end;

define C-struct <_GdkRectangle>
  sealed inline-only slot x-value        :: <gint16>;
  sealed inline-only slot y-value        :: <gint16>;
  sealed inline-only slot width-value    :: <guint16>;
  sealed inline-only slot height-value   :: <guint16>;
  pointer-type-name: <_GdkRectangle*>;
  c-name: "struct _GdkRectangle";
end;

define C-struct <_GdkSegment>
  sealed inline-only slot x1-value       :: <gint16>;
  sealed inline-only slot y1-value       :: <gint16>;
  sealed inline-only slot x2-value       :: <gint16>;
  sealed inline-only slot y2-value       :: <gint16>;
  pointer-type-name: <_GdkSegment*>;
  c-name: "struct _GdkSegment";
end;

define C-struct <_GdkFont>
  sealed inline-only slot type-value     :: <C-int>;
  sealed inline-only slot ascent-value   :: <gint>;
  sealed inline-only slot descent-value  :: <gint>;
  pointer-type-name: <_GdkFont*>;
  c-name: "struct _GdkFont";
end;

define C-struct <_GdkCursor>
  sealed inline-only slot type-value     :: <C-int>;
  pointer-type-name: <_GdkCursor*>;
  c-name: "struct _GdkCursor";
end;

define C-struct <_GdkColorContextDither>
  pointer-type-name: <_GdkColorContextDither*>;
  c-name: "struct _GdkColorContextDither";
end;
define C-struct <shifts%1>
  sealed inline-only slot red-value      :: <gint>;
  sealed inline-only slot green-value    :: <gint>;
  sealed inline-only slot blue-value     :: <gint>;
end;
define C-struct <masks%2>
  sealed inline-only slot red-value      :: <gulong>;
  sealed inline-only slot green-value    :: <gulong>;
  sealed inline-only slot blue-value     :: <gulong>;
end;
define C-struct <bits%3>
  sealed inline-only slot red-value      :: <gint>;
  sealed inline-only slot green-value    :: <gint>;
  sealed inline-only slot blue-value     :: <gint>;
end;

define C-struct <_GdkColorContext>
  sealed inline-only slot visual-value   :: <GdkVisual*>;
  sealed inline-only slot colormap-value :: <GdkColormap*>;
  sealed inline-only slot num-colors-value :: <gint>;
  sealed inline-only slot max-colors-value :: <gint>;
  sealed inline-only slot num-allocated-value :: <gint>;
  sealed inline-only slot mode-value     :: <C-int>;
  sealed inline-only slot need-to-free-colormap-value :: <gint>;
  sealed inline-only slot std-cmap-atom-value :: <GdkAtom>;
  sealed inline-only slot clut-value     :: <gulong*>;
  sealed inline-only slot cmap-value     :: <GdkColor*>;
  sealed inline-only slot color-hash-value :: <GHashTable*>;
  sealed inline-only slot palette-value  :: <GdkColor*>;
  sealed inline-only slot num-palette-value :: <gint>;
  sealed inline-only slot fast-dither-value :: <GdkColorContextDither*>;
  sealed inline-only slot shifts-value   :: <shifts%1>, setter: #f;
  sealed inline-only slot masks-value    :: <masks%2>, setter: #f;
  sealed inline-only slot bits-value     :: <bits%3>, setter: #f;
  sealed inline-only slot max-entry-value :: <gulong>;
  sealed inline-only slot black-pixel-value :: <gulong>;
  sealed inline-only slot white-pixel-value :: <gulong>;
  pointer-type-name: <_GdkColorContext*>;
  c-name: "struct _GdkColorContext";
end;

define C-struct <_GdkDeviceKey>
  sealed inline-only slot keyval-value   :: <guint>;
  sealed inline-only slot modifiers-value :: <C-int>;
  pointer-type-name: <_GdkDeviceKey*>;
  c-name: "struct _GdkDeviceKey";
end;

define C-struct <_GdkDeviceInfo>
  sealed inline-only slot deviceid-value :: <guint32>;
  sealed inline-only slot name-value     :: <gchar*>;
  sealed inline-only slot source-value   :: <C-int>;
  sealed inline-only slot mode-value     :: <C-int>;
  sealed inline-only slot has-cursor-value :: <gint>;
  sealed inline-only slot num-axes-value :: <gint>;
  sealed inline-only slot axes-value     :: <C-int*>;
  sealed inline-only slot num-keys-value :: <gint>;
  sealed inline-only slot keys-value     :: <GdkDeviceKey*>;
  pointer-type-name: <_GdkDeviceInfo*>;
  c-name: "struct _GdkDeviceInfo";
end;

define C-struct <_GdkTimeCoord>
  sealed inline-only slot time-value     :: <guint32>;
  sealed inline-only slot x-value        :: <gdouble>;
  sealed inline-only slot y-value        :: <gdouble>;
  sealed inline-only slot pressure-value :: <gdouble>;
  sealed inline-only slot xtilt-value    :: <gdouble>;
  sealed inline-only slot ytilt-value    :: <gdouble>;
  pointer-type-name: <_GdkTimeCoord*>;
  c-name: "struct _GdkTimeCoord";
end;

define C-struct <_GdkDragContext>
  sealed inline-only slot protocol-value :: <C-int>;
  sealed inline-only slot is-source-value :: <gboolean>;
  sealed inline-only slot source-window-value :: <GdkWindow*>;
  sealed inline-only slot dest-window-value :: <GdkWindow*>;
  sealed inline-only slot targets-value  :: <GList*>;
  sealed inline-only slot actions-value  :: <C-int>;
  sealed inline-only slot suggested-action-value :: <C-int>;
  sealed inline-only slot action-value   :: <C-int>;
  sealed inline-only slot start-time-value :: <guint32>;
  pointer-type-name: <_GdkDragContext*>;
  c-name: "struct _GdkDragContext";
end;
define C-pointer-type <GdkXEvent*> => <GdkXEvent>;
define C-pointer-type <GdkXEvent**> => <GdkXEvent*>;
define C-pointer-type <GdkFilterFunc*> => <GdkFilterFunc>;
define C-pointer-type <GdkFilterFunc**> => <GdkFilterFunc*>;

define C-struct <_GdkEventAny>
  sealed inline-only slot type-value     :: <C-int>;
  sealed inline-only slot window-value   :: <GdkWindow*>;
  sealed inline-only slot send-event-value :: <gint8>;
  pointer-type-name: <_GdkEventAny*>;
  c-name: "struct _GdkEventAny";
end;

define C-struct <_GdkEventExpose>
  sealed inline-only slot type-value     :: <C-int>;
  sealed inline-only slot window-value   :: <GdkWindow*>;
  sealed inline-only slot send-event-value :: <gint8>;
  sealed inline-only slot area-value     :: <GdkRectangle>;
  sealed inline-only slot count-value    :: <gint>;
  pointer-type-name: <_GdkEventExpose*>;
  c-name: "struct _GdkEventExpose";
end;

define C-struct <_GdkEventNoExpose>
  sealed inline-only slot type-value     :: <C-int>;
  sealed inline-only slot window-value   :: <GdkWindow*>;
  sealed inline-only slot send-event-value :: <gint8>;
  pointer-type-name: <_GdkEventNoExpose*>;
  c-name: "struct _GdkEventNoExpose";
end;

define C-struct <_GdkEventVisibility>
  sealed inline-only slot type-value     :: <C-int>;
  sealed inline-only slot window-value   :: <GdkWindow*>;
  sealed inline-only slot send-event-value :: <gint8>;
  sealed inline-only slot state-value    :: <C-int>;
  pointer-type-name: <_GdkEventVisibility*>;
  c-name: "struct _GdkEventVisibility";
end;

define C-struct <_GdkEventMotion>
  sealed inline-only slot type-value     :: <C-int>;
  sealed inline-only slot window-value   :: <GdkWindow*>;
  sealed inline-only slot send-event-value :: <gint8>;
  sealed inline-only slot time-value     :: <guint32>;
  sealed inline-only slot x-value        :: <gdouble>;
  sealed inline-only slot y-value        :: <gdouble>;
  sealed inline-only slot pressure-value :: <gdouble>;
  sealed inline-only slot xtilt-value    :: <gdouble>;
  sealed inline-only slot ytilt-value    :: <gdouble>;
  sealed inline-only slot state-value    :: <guint>;
  sealed inline-only slot is-hint-value  :: <gint16>;
  sealed inline-only slot source-value   :: <C-int>;
  sealed inline-only slot deviceid-value :: <guint32>;
  sealed inline-only slot x-root-value   :: <gdouble>;
  sealed inline-only slot y-root-value   :: <gdouble>;
  pointer-type-name: <_GdkEventMotion*>;
  c-name: "struct _GdkEventMotion";
end;

define C-struct <_GdkEventButton>
  sealed inline-only slot type-value     :: <C-int>;
  sealed inline-only slot window-value   :: <GdkWindow*>;
  sealed inline-only slot send-event-value :: <gint8>;
  sealed inline-only slot time-value     :: <guint32>;
  sealed inline-only slot x-value        :: <gdouble>;
  sealed inline-only slot y-value        :: <gdouble>;
  sealed inline-only slot pressure-value :: <gdouble>;
  sealed inline-only slot xtilt-value    :: <gdouble>;
  sealed inline-only slot ytilt-value    :: <gdouble>;
  sealed inline-only slot state-value    :: <guint>;
  sealed inline-only slot button-value   :: <guint>;
  sealed inline-only slot source-value   :: <C-int>;
  sealed inline-only slot deviceid-value :: <guint32>;
  sealed inline-only slot x-root-value   :: <gdouble>;
  sealed inline-only slot y-root-value   :: <gdouble>;
  pointer-type-name: <_GdkEventButton*>;
  c-name: "struct _GdkEventButton";
end;

define C-struct <_GdkEventKey>
  sealed inline-only slot type-value     :: <C-int>;
  sealed inline-only slot window-value   :: <GdkWindow*>;
  sealed inline-only slot send-event-value :: <gint8>;
  sealed inline-only slot time-value     :: <guint32>;
  sealed inline-only slot state-value    :: <guint>;
  sealed inline-only slot keyval-value   :: <guint>;
  sealed inline-only slot length-value   :: <gint>;
  sealed inline-only slot string-value   :: <gchar*>;
  pointer-type-name: <_GdkEventKey*>;
  c-name: "struct _GdkEventKey";
end;

define C-struct <_GdkEventCrossing>
  sealed inline-only slot type-value     :: <C-int>;
  sealed inline-only slot window-value   :: <GdkWindow*>;
  sealed inline-only slot send-event-value :: <gint8>;
  sealed inline-only slot subwindow-value :: <GdkWindow*>;
  sealed inline-only slot time-value     :: <guint32>;
  sealed inline-only slot x-value        :: <gdouble>;
  sealed inline-only slot y-value        :: <gdouble>;
  sealed inline-only slot x-root-value   :: <gdouble>;
  sealed inline-only slot y-root-value   :: <gdouble>;
  sealed inline-only slot mode-value     :: <C-int>;
  sealed inline-only slot detail-value   :: <C-int>;
  sealed inline-only slot focus-value    :: <gboolean>;
  sealed inline-only slot state-value    :: <guint>;
  pointer-type-name: <_GdkEventCrossing*>;
  c-name: "struct _GdkEventCrossing";
end;

define C-struct <_GdkEventFocus>
  sealed inline-only slot type-value     :: <C-int>;
  sealed inline-only slot window-value   :: <GdkWindow*>;
  sealed inline-only slot send-event-value :: <gint8>;
  sealed inline-only slot in-value       :: <gint16>;
  pointer-type-name: <_GdkEventFocus*>;
  c-name: "struct _GdkEventFocus";
end;

define C-struct <_GdkEventConfigure>
  sealed inline-only slot type-value     :: <C-int>;
  sealed inline-only slot window-value   :: <GdkWindow*>;
  sealed inline-only slot send-event-value :: <gint8>;
  sealed inline-only slot x-value        :: <gint16>;
  sealed inline-only slot y-value        :: <gint16>;
  sealed inline-only slot width-value    :: <gint16>;
  sealed inline-only slot height-value   :: <gint16>;
  pointer-type-name: <_GdkEventConfigure*>;
  c-name: "struct _GdkEventConfigure";
end;

define C-struct <_GdkEventProperty>
  sealed inline-only slot type-value     :: <C-int>;
  sealed inline-only slot window-value   :: <GdkWindow*>;
  sealed inline-only slot send-event-value :: <gint8>;
  sealed inline-only slot atom-value     :: <GdkAtom>;
  sealed inline-only slot time-value     :: <guint32>;
  sealed inline-only slot state-value    :: <guint>;
  pointer-type-name: <_GdkEventProperty*>;
  c-name: "struct _GdkEventProperty";
end;

define C-struct <_GdkEventSelection>
  sealed inline-only slot type-value     :: <C-int>;
  sealed inline-only slot window-value   :: <GdkWindow*>;
  sealed inline-only slot send-event-value :: <gint8>;
  sealed inline-only slot selection-value :: <GdkAtom>;
  sealed inline-only slot target-value   :: <GdkAtom>;
  sealed inline-only slot property-value :: <GdkAtom>;
  sealed inline-only slot requestor-value :: <guint32>;
  sealed inline-only slot time-value     :: <guint32>;
  pointer-type-name: <_GdkEventSelection*>;
  c-name: "struct _GdkEventSelection";
end;

define C-struct <_GdkEventProximity>
  sealed inline-only slot type-value     :: <C-int>;
  sealed inline-only slot window-value   :: <GdkWindow*>;
  sealed inline-only slot send-event-value :: <gint8>;
  sealed inline-only slot time-value     :: <guint32>;
  sealed inline-only slot source-value   :: <C-int>;
  sealed inline-only slot deviceid-value :: <guint32>;
  pointer-type-name: <_GdkEventProximity*>;
  c-name: "struct _GdkEventProximity";
end;
define C-union <data%4>
  sealed inline-only array slot b-array  :: <C-char>,
    length: 20,
    address-getter: b-value;
  sealed inline-only array slot s-array  :: <C-short>,
    length: 10,
    address-getter: s-value;
  sealed inline-only array slot l-array  :: <C-both-long>,
    length: 5,
    address-getter: l-value;
end;

define C-struct <_GdkEventClient>
  sealed inline-only slot type-value     :: <C-int>;
  sealed inline-only slot window-value   :: <GdkWindow*>;
  sealed inline-only slot send-event-value :: <gint8>;
  sealed inline-only slot message-type-value :: <GdkAtom>;
  sealed inline-only slot data-format-value :: <gushort>;
  sealed inline-only slot data-value     :: <data%4>;
  pointer-type-name: <_GdkEventClient*>;
  c-name: "struct _GdkEventClient";
end;

define C-struct <_GdkEventDND>
  sealed inline-only slot type-value     :: <C-int>;
  sealed inline-only slot window-value   :: <GdkWindow*>;
  sealed inline-only slot send-event-value :: <gint8>;
  sealed inline-only slot context-value  :: <GdkDragContext*>;
  sealed inline-only slot time-value     :: <guint32>;
  sealed inline-only slot x-root-value   :: <gshort>;
  sealed inline-only slot y-root-value   :: <gshort>;
  pointer-type-name: <_GdkEventDND*>;
  c-name: "struct _GdkEventDND";
end;

define C-union <_GdkEvent>
  sealed inline-only slot type-value     :: <C-int>;
  sealed inline-only slot any-value      :: <GdkEventAny>;
  sealed inline-only slot expose-value   :: <GdkEventExpose>;
  sealed inline-only slot no-expose-value :: <GdkEventNoExpose>;
  sealed inline-only slot visibility-value :: <GdkEventVisibility>;
  sealed inline-only slot motion-value   :: <GdkEventMotion>;
  sealed inline-only slot button-value   :: <GdkEventButton>;
  sealed inline-only slot key-value      :: <GdkEventKey>;
  sealed inline-only slot crossing-value :: <GdkEventCrossing>;
  sealed inline-only slot focus-change-value :: <GdkEventFocus>;
  sealed inline-only slot configure-value :: <GdkEventConfigure>;
  sealed inline-only slot property-value :: <GdkEventProperty>;
  sealed inline-only slot selection-value :: <GdkEventSelection>;
  sealed inline-only slot proximity-value :: <GdkEventProximity>;
  sealed inline-only slot client-value   :: <GdkEventClient>;
  sealed inline-only slot dnd-value      :: <GdkEventDND>;
end;

define C-struct <_GdkRegion>
  sealed inline-only slot user-data-value :: <gpointer>;
  pointer-type-name: <_GdkRegion*>;
  c-name: "struct _GdkRegion";
end;

define C-struct <_GdkICAttr>
  sealed inline-only slot style-value    :: <C-int>;
  sealed inline-only slot client-window-value :: <GdkWindow*>;
  sealed inline-only slot focus-window-value :: <GdkWindow*>;
  sealed inline-only slot filter-events-value :: <C-int>;
  sealed inline-only slot spot-location-value :: <GdkPoint>;
  sealed inline-only slot line-spacing-value :: <gint>;
  sealed inline-only slot cursor-value   :: <GdkCursor*>;
  sealed inline-only slot preedit-fontset-value :: <GdkFont*>;
  sealed inline-only slot preedit-area-value :: <GdkRectangle>;
  sealed inline-only slot preedit-area-needed-value :: <GdkRectangle>;
  sealed inline-only slot preedit-foreground-value :: <GdkColor>;
  sealed inline-only slot preedit-background-value :: <GdkColor>;
  sealed inline-only slot preedit-pixmap-value :: <GdkPixmap*>;
  sealed inline-only slot preedit-colormap-value :: <GdkColormap*>;
  sealed inline-only slot status-fontset-value :: <GdkFont*>;
  sealed inline-only slot status-area-value :: <GdkRectangle>;
  sealed inline-only slot status-area-needed-value :: <GdkRectangle>;
  sealed inline-only slot status-foreground-value :: <GdkColor>;
  sealed inline-only slot status-background-value :: <GdkColor>;
  sealed inline-only slot status-pixmap-value :: <GdkPixmap*>;
  sealed inline-only slot status-colormap-value :: <GdkColormap*>;
  pointer-type-name: <_GdkICAttr*>;
  c-name: "struct _GdkICAttr";
end;

define inline constant <GdkAtom> = <gulong>;
define inline constant <GdkColor> = <_GdkColor>;
define inline constant <GdkColormap> = <_GdkColormap>;
define inline constant <GdkVisual> = <_GdkVisual>;
define inline constant <GdkWindowAttr> = <_GdkWindowAttr>;
define inline constant <GdkWindow> = <_GdkWindow>;
define inline constant <GdkPixmap> = <_GdkWindow>;
define inline constant <GdkBitmap> = <_GdkWindow>;
define inline constant <GdkDrawable> = <_GdkWindow>;
define inline constant <GdkGeometry> = <_GdkGeometry>;
define inline constant <GdkImage> = <_GdkImage>;
define inline constant <GdkGCValues> = <_GdkGCValues>;
define inline constant <GdkGC> = <_GdkGC>;
define inline constant <GdkPoint> = <_GdkPoint>;
define inline constant <GdkRectangle> = <_GdkRectangle>;
define inline constant <GdkSegment> = <_GdkSegment>;
define inline constant <GdkFont> = <_GdkFont>;
define inline constant <GdkCursor> = <_GdkCursor>;
define inline constant <GdkColorContextDither> = <_GdkColorContextDither>;
define inline constant <GdkColorContext> = <_GdkColorContext>;
define inline constant <GdkDragContext> = <_GdkDragContext>;
define inline constant <GdkEventAny> = <_GdkEventAny>;
define inline constant <GdkEventExpose> = <_GdkEventExpose>;
define inline constant <GdkEventNoExpose> = <_GdkEventNoExpose>;
define inline constant <GdkEventVisibility> = <_GdkEventVisibility>;
define inline constant <GdkEventMotion> = <_GdkEventMotion>;
define inline constant <GdkEventButton> = <_GdkEventButton>;
define inline constant <GdkEventKey> = <_GdkEventKey>;
define inline constant <GdkEventFocus> = <_GdkEventFocus>;
define inline constant <GdkEventCrossing> = <_GdkEventCrossing>;
define inline constant <GdkEventConfigure> = <_GdkEventConfigure>;
define inline constant <GdkEventProperty> = <_GdkEventProperty>;
define inline constant <GdkEventSelection> = <_GdkEventSelection>;
define inline constant <GdkEventProximity> = <_GdkEventProximity>;
define inline constant <GdkEventClient> = <_GdkEventClient>;
define inline constant <GdkEventDND> = <_GdkEventDND>;
define inline constant <GdkEvent> = <_GdkEvent>;
define inline constant <GdkDeviceKey> = <_GdkDeviceKey>;
define inline constant <GdkDeviceInfo> = <_GdkDeviceInfo>;
define inline constant <GdkTimeCoord> = <_GdkTimeCoord>;
define inline constant <GdkRegion> = <_GdkRegion>;
define inline constant <GdkEventFunc> = <C-function-pointer>;
define inline constant <GdkIC> = <_GdkIC>;
define inline constant <GdkICAttr> = <_GdkICAttr>;
define inline constant <GdkWChar> = <guint32>;
define inline constant <GdkWindowType> = <c-signed-int>;
define inline constant <GdkWindowClass> = <c-signed-int>;
define inline constant <GdkImageType> = <c-signed-int>;
define inline constant <GdkVisualType> = <c-signed-int>;
define inline constant <GdkFontType> = <c-signed-int>;
define inline constant <GdkWindowAttributesType> = <c-signed-int>;
define inline constant <GdkWindowHints> = <c-signed-int>;
define inline constant <GdkFunction> = <c-signed-int>;
define inline constant <GdkFill> = <c-signed-int>;
define inline constant <GdkFillRule> = <c-signed-int>;
define inline constant <GdkLineStyle> = <c-signed-int>;
define inline constant <GdkCapStyle> = <c-signed-int>;
define inline constant <GdkJoinStyle> = <c-signed-int>;
define inline constant <GdkCursorType> = <c-signed-int>;
define inline constant <GdkFilterReturn> = <c-signed-int>;
define inline constant <GdkVisibilityState> = <c-signed-int>;
define inline constant <GdkEventType> = <c-signed-int>;
define inline constant <GdkEventMask> = <c-signed-int>;
define inline constant <GdkNotifyType> = <c-signed-int>;
define inline constant <GdkCrossingMode> = <c-signed-int>;
define inline constant <GdkModifierType> = <c-signed-int>;
define inline constant <GdkSubwindowMode> = <c-signed-int>;
define inline constant <GdkInputCondition> = <c-signed-int>;
define inline constant <GdkStatus> = <c-signed-int>;
define inline constant <GdkByteOrder> = <c-signed-int>;
define inline constant <GdkGCValuesMask> = <c-signed-int>;
define inline constant <GdkSelection> = <c-signed-int>;
define inline constant <GdkPropertyState> = <c-signed-int>;
define inline constant <GdkPropMode> = <c-signed-int>;
define inline constant <GdkInputSource> = <c-signed-int>;
define inline constant <GdkInputMode> = <c-signed-int>;
define inline constant <GdkAxisUse> = <c-signed-int>;
define inline constant <GdkTarget> = <c-signed-int>;
define inline constant <GdkSelectionType> = <c-signed-int>;
define inline constant <GdkExtensionMode> = <c-signed-int>;
define inline constant <GdkIMStyle> = <c-signed-int>;
define inline constant <GdkICAttributesType> = <c-signed-int>;
define inline constant <GdkWMDecoration> = <c-signed-int>;
define inline constant <GdkWMFunction> = <c-signed-int>;
define inline constant <GdkInputFunction> = <C-function-pointer>;
define inline constant <GdkDestroyNotify> = <C-function-pointer>;
define inline constant <GdkColorContextMode> = <c-signed-int>;
define inline constant <GdkOverlapType> = <c-signed-int>;
define inline constant <GdkDragAction> = <c-signed-int>;
define inline constant <GdkDragProtocol> = <c-signed-int>;
define sealed domain make (singleton(<_GdkColor*>));
define sealed domain initialize (<_GdkColor*>);
define sealed domain make (singleton(<_GdkColormap*>));
define sealed domain initialize (<_GdkColormap*>);
define sealed domain make (singleton(<_GdkVisual*>));
define sealed domain initialize (<_GdkVisual*>);
define sealed domain make (singleton(<_GdkWindowAttr*>));
define sealed domain initialize (<_GdkWindowAttr*>);
define sealed domain make (singleton(<_GdkWindow*>));
define sealed domain initialize (<_GdkWindow*>);
define sealed domain make (singleton(<_GdkGeometry*>));
define sealed domain initialize (<_GdkGeometry*>);
define sealed domain make (singleton(<_GdkImage*>));
define sealed domain initialize (<_GdkImage*>);
define sealed domain make (singleton(<_GdkGCValues*>));
define sealed domain initialize (<_GdkGCValues*>);
define sealed domain make (singleton(<_GdkGC*>));
define sealed domain initialize (<_GdkGC*>);
define sealed domain make (singleton(<_GdkPoint*>));
define sealed domain initialize (<_GdkPoint*>);
define sealed domain make (singleton(<_GdkRectangle*>));
define sealed domain initialize (<_GdkRectangle*>);
define sealed domain make (singleton(<_GdkSegment*>));
define sealed domain initialize (<_GdkSegment*>);
define sealed domain make (singleton(<_GdkFont*>));
define sealed domain initialize (<_GdkFont*>);
define sealed domain make (singleton(<_GdkCursor*>));
define sealed domain initialize (<_GdkCursor*>);
define sealed domain make (singleton(<_GdkColorContextDither*>));
define sealed domain initialize (<_GdkColorContextDither*>);
define sealed domain make (singleton(<_GdkColorContext*>));
define sealed domain initialize (<_GdkColorContext*>);
define sealed domain make (singleton(<_GdkDeviceKey*>));
define sealed domain initialize (<_GdkDeviceKey*>);
define sealed domain make (singleton(<_GdkDeviceInfo*>));
define sealed domain initialize (<_GdkDeviceInfo*>);
define sealed domain make (singleton(<_GdkTimeCoord*>));
define sealed domain initialize (<_GdkTimeCoord*>);
define sealed domain make (singleton(<_GdkDragContext*>));
define sealed domain initialize (<_GdkDragContext*>);
define inline constant <GdkXEvent> = <C-void>;
define inline constant <GdkFilterFunc> = <C-function-pointer>;
define sealed domain make (singleton(<_GdkEventAny*>));
define sealed domain initialize (<_GdkEventAny*>);
define sealed domain make (singleton(<_GdkEventExpose*>));
define sealed domain initialize (<_GdkEventExpose*>);
define sealed domain make (singleton(<_GdkEventNoExpose*>));
define sealed domain initialize (<_GdkEventNoExpose*>);
define sealed domain make (singleton(<_GdkEventVisibility*>));
define sealed domain initialize (<_GdkEventVisibility*>);
define sealed domain make (singleton(<_GdkEventMotion*>));
define sealed domain initialize (<_GdkEventMotion*>);
define sealed domain make (singleton(<_GdkEventButton*>));
define sealed domain initialize (<_GdkEventButton*>);
define sealed domain make (singleton(<_GdkEventKey*>));
define sealed domain initialize (<_GdkEventKey*>);
define sealed domain make (singleton(<_GdkEventCrossing*>));
define sealed domain initialize (<_GdkEventCrossing*>);
define sealed domain make (singleton(<_GdkEventFocus*>));
define sealed domain initialize (<_GdkEventFocus*>);
define sealed domain make (singleton(<_GdkEventConfigure*>));
define sealed domain initialize (<_GdkEventConfigure*>);
define sealed domain make (singleton(<_GdkEventProperty*>));
define sealed domain initialize (<_GdkEventProperty*>);
define sealed domain make (singleton(<_GdkEventSelection*>));
define sealed domain initialize (<_GdkEventSelection*>);
define sealed domain make (singleton(<_GdkEventProximity*>));
define sealed domain initialize (<_GdkEventProximity*>);
define sealed domain make (singleton(<_GdkEventClient*>));
define sealed domain initialize (<_GdkEventClient*>);
define sealed domain make (singleton(<_GdkEventDND*>));
define sealed domain initialize (<_GdkEventDND*>);
define sealed domain make (singleton(<_GdkRegion*>));
define sealed domain initialize (<_GdkRegion*>);
define sealed domain make (singleton(<_GdkICAttr*>));
define sealed domain initialize (<_GdkICAttr*>);
