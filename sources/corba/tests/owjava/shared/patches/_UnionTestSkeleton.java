//
// Java generated by the OrbixWeb IDL compiler 
//

package shared;








public abstract class _UnionTestSkeleton 
    extends org.omg.CORBA.DynamicImplementation 
{
    protected _UnionTestSkeleton()
    {
        super();
    }

    public String[] _ids()
    {
        return _UnionTestStub._interfaces;
    }
    public void invoke(org.omg.CORBA.ServerRequest _req)
    {
        _invoke(_req, this);
    }
    public static void _invoke(org.omg.CORBA.ServerRequest _req,_UnionTestSkeleton _obj)
    {
        String _opName = _req.op_name();
        org.omg.CORBA.Any _ret = _obj._orb().create_any();
        org.omg.CORBA.NVList _nvl = null;

        if (_opName.equals("_get_rle_entity_1_attribute"))
        {
            _ret = _obj._orb().create_any();
            _req.params(_nvl);
            shared.RLE_entity_1Holder _retHolder = new shared.RLE_entity_1Holder();
            _retHolder.value = _obj.rle_entity_1_attribute();


            _ret.insert_Streamable(_retHolder);
            _req.result(_ret);
            return;
        }
        if (_opName.equals("_set_rle_entity_1_attribute"))
        {
            _nvl = _obj._orb().create_list(1);
            org.omg.CORBA.Any value = _obj._orb().create_any();
            shared.RLE_entity_1Holder value_ = new shared.RLE_entity_1Holder();
            value.insert_Streamable(value_);
            _nvl.add_value(null, value, org.omg.CORBA.ARG_IN.value);
            _req.params(_nvl);
            //--- _obj.rle_entity_1_attribute(shared.RLE_entity_1Helper.extract(value));
	    _obj.rle_entity_1_attribute(value_.value); //+++

            return;
        }
        if (_opName.equals("_get_rle_entity_2_attribute"))
        {
            _ret = _obj._orb().create_any();
            _req.params(_nvl);
            shared.RLE_entity_2Holder _retHolder = new shared.RLE_entity_2Holder();
            _retHolder.value = _obj.rle_entity_2_attribute();


            _ret.insert_Streamable(_retHolder);
            _req.result(_ret);
            return;
        }
        if (_opName.equals("_set_rle_entity_2_attribute"))
        {
            _nvl = _obj._orb().create_list(1);
            org.omg.CORBA.Any value = _obj._orb().create_any();
            shared.RLE_entity_2Holder value_ = new shared.RLE_entity_2Holder();
            value.insert_Streamable(value_);
            _nvl.add_value(null, value, org.omg.CORBA.ARG_IN.value);
            _req.params(_nvl);
            //--- _obj.rle_entity_2_attribute(shared.RLE_entity_2Helper.extract(value));
	    _obj.rle_entity_2_attribute(value_.value); //+++

            return;
        }
        if (_opName.equals("_get_rle_entity_3_attribute"))
        {
            _ret = _obj._orb().create_any();
            _req.params(_nvl);
            shared.RLE_entity_3Holder _retHolder = new shared.RLE_entity_3Holder();
            _retHolder.value = _obj.rle_entity_3_attribute();


            _ret.insert_Streamable(_retHolder);
            _req.result(_ret);
            return;
        }
        if (_opName.equals("_set_rle_entity_3_attribute"))
        {
            _nvl = _obj._orb().create_list(1);
            org.omg.CORBA.Any value = _obj._orb().create_any();
            shared.RLE_entity_3Holder value_ = new shared.RLE_entity_3Holder();
            value.insert_Streamable(value_);
            _nvl.add_value(null, value, org.omg.CORBA.ARG_IN.value);
            _req.params(_nvl);
            //--- _obj.rle_entity_3_attribute(shared.RLE_entity_3Helper.extract(value));
	    _obj.rle_entity_3_attribute(value_.value); //+++

            return;
        }
        if (_opName.equals("_get_rle_entity_4_attribute"))
        {
            _ret = _obj._orb().create_any();
            _req.params(_nvl);
            shared.RLE_entity_4Holder _retHolder = new shared.RLE_entity_4Holder();
            _retHolder.value = _obj.rle_entity_4_attribute();


            _ret.insert_Streamable(_retHolder);
            _req.result(_ret);
            return;
        }
        if (_opName.equals("_set_rle_entity_4_attribute"))
        {
            _nvl = _obj._orb().create_list(1);
            org.omg.CORBA.Any value = _obj._orb().create_any();
            shared.RLE_entity_4Holder value_ = new shared.RLE_entity_4Holder();
            value.insert_Streamable(value_);
            _nvl.add_value(null, value, org.omg.CORBA.ARG_IN.value);
            _req.params(_nvl);
            //--- _obj.rle_entity_4_attribute(shared.RLE_entity_4Helper.extract(value));
	    _obj.rle_entity_4_attribute(value_.value); //+++

            return;
        }
        if (_opName.equals("_get_rle_entity_5_attribute"))
        {
            _ret = _obj._orb().create_any();
            _req.params(_nvl);
            shared.RLE_entity_5Holder _retHolder = new shared.RLE_entity_5Holder();
            _retHolder.value = _obj.rle_entity_5_attribute();


            _ret.insert_Streamable(_retHolder);
            _req.result(_ret);
            return;
        }
        if (_opName.equals("_set_rle_entity_5_attribute"))
        {
            _nvl = _obj._orb().create_list(1);
            org.omg.CORBA.Any value = _obj._orb().create_any();
            shared.RLE_entity_5Holder value_ = new shared.RLE_entity_5Holder();
            value.insert_Streamable(value_);
            _nvl.add_value(null, value, org.omg.CORBA.ARG_IN.value);
            _req.params(_nvl);
            //--- _obj.rle_entity_5_attribute(shared.RLE_entity_5Helper.extract(value));
	    _obj.rle_entity_5_attribute(value_.value); //+++

            return;
        }
        if (_opName.equals("check_rle_entity_1_attribute"))
        {
            _req.params(_nvl);

            try {
                _obj.check_rle_entity_1_attribute();


            } catch (shared.UnionTestPackage.failure _ex) {
                shared.UnionTestPackage.failureHelper.insert(_ret,_ex);
                _req.except(_ret);
            }
            return;
        }
        if (_opName.equals("check_rle_entity_2_attribute"))
        {
            _req.params(_nvl);

            try {
                _obj.check_rle_entity_2_attribute();


            } catch (shared.UnionTestPackage.failure _ex) {
                shared.UnionTestPackage.failureHelper.insert(_ret,_ex);
                _req.except(_ret);
            }
            return;
        }
        if (_opName.equals("check_rle_entity_3_attribute"))
        {
            _req.params(_nvl);

            try {
                _obj.check_rle_entity_3_attribute();


            } catch (shared.UnionTestPackage.failure _ex) {
                shared.UnionTestPackage.failureHelper.insert(_ret,_ex);
                _req.except(_ret);
            }
            return;
        }
        if (_opName.equals("check_rle_entity_4_attribute"))
        {
            _req.params(_nvl);

            try {
                _obj.check_rle_entity_4_attribute();


            } catch (shared.UnionTestPackage.failure _ex) {
                shared.UnionTestPackage.failureHelper.insert(_ret,_ex);
                _req.except(_ret);
            }
            return;
        }
        if (_opName.equals("check_rle_entity_5_attribute"))
        {
            _req.params(_nvl);

            try {
                _obj.check_rle_entity_5_attribute();


            } catch (shared.UnionTestPackage.failure _ex) {
                shared.UnionTestPackage.failureHelper.insert(_ret,_ex);
                _req.except(_ret);
            }
            return;
        }
        if (_opName.equals("rle_entity_1_operation"))
        {
            _ret = _obj._orb().create_any();
            _nvl = _obj._orb().create_list(3);
            org.omg.CORBA.Any one = _obj._orb().create_any();
            shared.RLE_entity_1Holder one_ = new shared.RLE_entity_1Holder();
            one.insert_Streamable(one_);
            _nvl.add_value(null, one, org.omg.CORBA.ARG_IN.value);
            org.omg.CORBA.Any two = _obj._orb().create_any();
            shared.RLE_entity_1Holder two_ = new shared.RLE_entity_1Holder();
            two.insert_Streamable(two_);
            _nvl.add_value(null, two, org.omg.CORBA.ARG_INOUT.value);
            org.omg.CORBA.Any three = _obj._orb().create_any();
            shared.RLE_entity_1Holder three_ = new shared.RLE_entity_1Holder();
            three.insert_Streamable(three_);
            _nvl.add_value(null, three, org.omg.CORBA.ARG_OUT.value);
            _req.params(_nvl);

            shared.RLE_entity_1Holder _retHolder = new shared.RLE_entity_1Holder();
            _retHolder.value = _obj.rle_entity_1_operation(one_.value,two_,three_);

            _ret.insert_Streamable(_retHolder);
            _req.result(_ret);

            return;
        }
        if (_opName.equals("rle_entity_2_operation"))
        {
            _ret = _obj._orb().create_any();
            _nvl = _obj._orb().create_list(3);
            org.omg.CORBA.Any one = _obj._orb().create_any();
            shared.RLE_entity_2Holder one_ = new shared.RLE_entity_2Holder();
            one.insert_Streamable(one_);
            _nvl.add_value(null, one, org.omg.CORBA.ARG_IN.value);
            org.omg.CORBA.Any two = _obj._orb().create_any();
            shared.RLE_entity_2Holder two_ = new shared.RLE_entity_2Holder();
            two.insert_Streamable(two_);
            _nvl.add_value(null, two, org.omg.CORBA.ARG_INOUT.value);
            org.omg.CORBA.Any three = _obj._orb().create_any();
            shared.RLE_entity_2Holder three_ = new shared.RLE_entity_2Holder();
            three.insert_Streamable(three_);
            _nvl.add_value(null, three, org.omg.CORBA.ARG_OUT.value);
            _req.params(_nvl);

            shared.RLE_entity_2Holder _retHolder = new shared.RLE_entity_2Holder();
            _retHolder.value = _obj.rle_entity_2_operation(one_.value,two_,three_);

            _ret.insert_Streamable(_retHolder);
            _req.result(_ret);

            return;
        }
        if (_opName.equals("rle_entity_3_operation"))
        {
            _ret = _obj._orb().create_any();
            _nvl = _obj._orb().create_list(3);
            org.omg.CORBA.Any one = _obj._orb().create_any();
            shared.RLE_entity_3Holder one_ = new shared.RLE_entity_3Holder();
            one.insert_Streamable(one_);
            _nvl.add_value(null, one, org.omg.CORBA.ARG_IN.value);
            org.omg.CORBA.Any two = _obj._orb().create_any();
            shared.RLE_entity_3Holder two_ = new shared.RLE_entity_3Holder();
            two.insert_Streamable(two_);
            _nvl.add_value(null, two, org.omg.CORBA.ARG_INOUT.value);
            org.omg.CORBA.Any three = _obj._orb().create_any();
            shared.RLE_entity_3Holder three_ = new shared.RLE_entity_3Holder();
            three.insert_Streamable(three_);
            _nvl.add_value(null, three, org.omg.CORBA.ARG_OUT.value);
            _req.params(_nvl);

            shared.RLE_entity_3Holder _retHolder = new shared.RLE_entity_3Holder();
            _retHolder.value = _obj.rle_entity_3_operation(one_.value,two_,three_);

            _ret.insert_Streamable(_retHolder);
            _req.result(_ret);

            return;
        }
        if (_opName.equals("rle_entity_4_operation"))
        {
            _ret = _obj._orb().create_any();
            _nvl = _obj._orb().create_list(3);
            org.omg.CORBA.Any one = _obj._orb().create_any();
            shared.RLE_entity_4Holder one_ = new shared.RLE_entity_4Holder();
            one.insert_Streamable(one_);
            _nvl.add_value(null, one, org.omg.CORBA.ARG_IN.value);
            org.omg.CORBA.Any two = _obj._orb().create_any();
            shared.RLE_entity_4Holder two_ = new shared.RLE_entity_4Holder();
            two.insert_Streamable(two_);
            _nvl.add_value(null, two, org.omg.CORBA.ARG_INOUT.value);
            org.omg.CORBA.Any three = _obj._orb().create_any();
            shared.RLE_entity_4Holder three_ = new shared.RLE_entity_4Holder();
            three.insert_Streamable(three_);
            _nvl.add_value(null, three, org.omg.CORBA.ARG_OUT.value);
            _req.params(_nvl);

            shared.RLE_entity_4Holder _retHolder = new shared.RLE_entity_4Holder();
            _retHolder.value = _obj.rle_entity_4_operation(one_.value,two_,three_);

            _ret.insert_Streamable(_retHolder);
            _req.result(_ret);

            return;
        }
        if (_opName.equals("rle_entity_5_operation"))
        {
            _ret = _obj._orb().create_any();
            _nvl = _obj._orb().create_list(3);
            org.omg.CORBA.Any one = _obj._orb().create_any();
            shared.RLE_entity_5Holder one_ = new shared.RLE_entity_5Holder();
            one.insert_Streamable(one_);
            _nvl.add_value(null, one, org.omg.CORBA.ARG_IN.value);
            org.omg.CORBA.Any two = _obj._orb().create_any();
            shared.RLE_entity_5Holder two_ = new shared.RLE_entity_5Holder();
            two.insert_Streamable(two_);
            _nvl.add_value(null, two, org.omg.CORBA.ARG_INOUT.value);
            org.omg.CORBA.Any three = _obj._orb().create_any();
            shared.RLE_entity_5Holder three_ = new shared.RLE_entity_5Holder();
            three.insert_Streamable(three_);
            _nvl.add_value(null, three, org.omg.CORBA.ARG_OUT.value);
            _req.params(_nvl);

            shared.RLE_entity_5Holder _retHolder = new shared.RLE_entity_5Holder();
            _retHolder.value = _obj.rle_entity_5_operation(one_.value,two_,three_);

            _ret.insert_Streamable(_retHolder);
            _req.result(_ret);

            return;
        }
        else
            throw new org.omg.CORBA.BAD_OPERATION(0, org.omg.CORBA.CompletionStatus.COMPLETED_MAYBE);
    }

    public abstract shared.RLE_entity_1 rle_entity_1_attribute();

    public abstract void rle_entity_1_attribute(shared.RLE_entity_1 value);

    public abstract shared.RLE_entity_2 rle_entity_2_attribute();

    public abstract void rle_entity_2_attribute(shared.RLE_entity_2 value);

    public abstract shared.RLE_entity_3 rle_entity_3_attribute();

    public abstract void rle_entity_3_attribute(shared.RLE_entity_3 value);

    public abstract shared.RLE_entity_4 rle_entity_4_attribute();

    public abstract void rle_entity_4_attribute(shared.RLE_entity_4 value);

    public abstract shared.RLE_entity_5 rle_entity_5_attribute();

    public abstract void rle_entity_5_attribute(shared.RLE_entity_5 value);

    public abstract void check_rle_entity_1_attribute() 
        throws shared.UnionTestPackage.failure;

    public abstract void check_rle_entity_2_attribute() 
        throws shared.UnionTestPackage.failure;

    public abstract void check_rle_entity_3_attribute() 
        throws shared.UnionTestPackage.failure;

    public abstract void check_rle_entity_4_attribute() 
        throws shared.UnionTestPackage.failure;

    public abstract void check_rle_entity_5_attribute() 
        throws shared.UnionTestPackage.failure;

    public abstract shared.RLE_entity_1 rle_entity_1_operation(shared.RLE_entity_1 one,shared.RLE_entity_1Holder two,shared.RLE_entity_1Holder three) ;

    public abstract shared.RLE_entity_2 rle_entity_2_operation(shared.RLE_entity_2 one,shared.RLE_entity_2Holder two,shared.RLE_entity_2Holder three) ;

    public abstract shared.RLE_entity_3 rle_entity_3_operation(shared.RLE_entity_3 one,shared.RLE_entity_3Holder two,shared.RLE_entity_3Holder three) ;

    public abstract shared.RLE_entity_4 rle_entity_4_operation(shared.RLE_entity_4 one,shared.RLE_entity_4Holder two,shared.RLE_entity_4Holder three) ;

    public abstract shared.RLE_entity_5 rle_entity_5_operation(shared.RLE_entity_5 one,shared.RLE_entity_5Holder two,shared.RLE_entity_5Holder three) ;

}
