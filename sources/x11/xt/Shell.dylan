Module:    Xt
Copyright:    Original Code is Copyright (c) 1995-2004 Functional Objects, Inc.
              All rights reserved.
License:      Functional Objects Library Public License Version 1.0
Dual-license: GNU Lesser General Public License
Warranty:     Distributed WITHOUT WARRANTY OF ANY KIND

// This file is automatically generated from "Shell.h"; do not edit.

define C-variable XtShellStrings :: /* const */ <C-string>
  c-name: "XtShellStrings";
end;
define inline-only constant $XtNiconName                =
	pointer-value-address(XtShellStrings(), index: 0);
define inline-only constant $XtCIconName                =
	pointer-value-address(XtShellStrings(), index: 9);
define inline-only constant $XtNiconPixmap              =
	pointer-value-address(XtShellStrings(), index: 18);
define inline-only constant $XtCIconPixmap              =
	pointer-value-address(XtShellStrings(), index: 29);
define inline-only constant $XtNiconWindow              =
	pointer-value-address(XtShellStrings(), index: 40);
define inline-only constant $XtCIconWindow              =
	pointer-value-address(XtShellStrings(), index: 51);
define inline-only constant $XtNiconMask                =
	pointer-value-address(XtShellStrings(), index: 62);
define inline-only constant $XtCIconMask                =
	pointer-value-address(XtShellStrings(), index: 71);
define inline-only constant $XtNwindowGroup             =
	pointer-value-address(XtShellStrings(), index: 80);
define inline-only constant $XtCWindowGroup             =
	pointer-value-address(XtShellStrings(), index: 92);
define inline-only constant $XtNvisual                  =
	pointer-value-address(XtShellStrings(), index: 104);
define inline-only constant $XtCVisual                  =
	pointer-value-address(XtShellStrings(), index: 111);
define inline-only constant $XtNtitleEncoding           =
	pointer-value-address(XtShellStrings(), index: 118);
define inline-only constant $XtCTitleEncoding           =
	pointer-value-address(XtShellStrings(), index: 132);
define inline-only constant $XtNsaveUnder               =
	pointer-value-address(XtShellStrings(), index: 146);
define inline-only constant $XtCSaveUnder               =
	pointer-value-address(XtShellStrings(), index: 156);
define inline-only constant $XtNtransient               =
	pointer-value-address(XtShellStrings(), index: 166);
define inline-only constant $XtCTransient               =
	pointer-value-address(XtShellStrings(), index: 176);
define inline-only constant $XtNoverrideRedirect        =
	pointer-value-address(XtShellStrings(), index: 186);
define inline-only constant $XtCOverrideRedirect        =
	pointer-value-address(XtShellStrings(), index: 203);
define inline-only constant $XtNtransientFor            =
	pointer-value-address(XtShellStrings(), index: 220);
define inline-only constant $XtCTransientFor            =
	pointer-value-address(XtShellStrings(), index: 233);
define inline-only constant $XtNiconNameEncoding        =
	pointer-value-address(XtShellStrings(), index: 246);
define inline-only constant $XtCIconNameEncoding        =
	pointer-value-address(XtShellStrings(), index: 263);
define inline-only constant $XtNallowShellResize        =
	pointer-value-address(XtShellStrings(), index: 280);
define inline-only constant $XtCAllowShellResize        =
	pointer-value-address(XtShellStrings(), index: 297);
define inline-only constant $XtNcreatePopupChildProc    =
	pointer-value-address(XtShellStrings(), index: 314);
define inline-only constant $XtCCreatePopupChildProc    =
	pointer-value-address(XtShellStrings(), index: 335);
define inline-only constant $XtNtitle                   =
	pointer-value-address(XtShellStrings(), index: 356);
define inline-only constant $XtCTitle                   =
	pointer-value-address(XtShellStrings(), index: 362);
define inline-only constant $XtNargc                    =
	pointer-value-address(XtShellStrings(), index: 373);
define inline-only constant $XtCArgc                    =
	pointer-value-address(XtShellStrings(), index: 378);
define inline-only constant $XtNargv                    =
	pointer-value-address(XtShellStrings(), index: 383);
define inline-only constant $XtCArgv                    =
	pointer-value-address(XtShellStrings(), index: 388);
define inline-only constant $XtNiconX                   =
	pointer-value-address(XtShellStrings(), index: 393);
define inline-only constant $XtCIconX                   =
	pointer-value-address(XtShellStrings(), index: 399);
define inline-only constant $XtNiconY                   =
	pointer-value-address(XtShellStrings(), index: 405);
define inline-only constant $XtCIconY                   =
	pointer-value-address(XtShellStrings(), index: 411);
define inline-only constant $XtNinput                   =
	pointer-value-address(XtShellStrings(), index: 417);
define inline-only constant $XtCInput                   =
	pointer-value-address(XtShellStrings(), index: 423);
define inline-only constant $XtNiconic                  =
	pointer-value-address(XtShellStrings(), index: 429);
define inline-only constant $XtCIconic                  =
	pointer-value-address(XtShellStrings(), index: 436);
define inline-only constant $XtNinitialState            =
	pointer-value-address(XtShellStrings(), index: 443);
define inline-only constant $XtCInitialState            =
	pointer-value-address(XtShellStrings(), index: 456);
define inline-only constant $XtNgeometry                =
	pointer-value-address(XtShellStrings(), index: 469);
define inline-only constant $XtCGeometry                =
	pointer-value-address(XtShellStrings(), index: 478);
define inline-only constant $XtNbaseWidth               =
	pointer-value-address(XtShellStrings(), index: 487);
define inline-only constant $XtCBaseWidth               =
	pointer-value-address(XtShellStrings(), index: 497);
define inline-only constant $XtNbaseHeight              =
	pointer-value-address(XtShellStrings(), index: 507);
define inline-only constant $XtCBaseHeight              =
	pointer-value-address(XtShellStrings(), index: 518);
define inline-only constant $XtNwinGravity              =
	pointer-value-address(XtShellStrings(), index: 529);
define inline-only constant $XtCWinGravity              =
	pointer-value-address(XtShellStrings(), index: 540);
define inline-only constant $XtNminWidth                =
	pointer-value-address(XtShellStrings(), index: 551);
define inline-only constant $XtCMinWidth                =
	pointer-value-address(XtShellStrings(), index: 560);
define inline-only constant $XtNminHeight               =
	pointer-value-address(XtShellStrings(), index: 569);
define inline-only constant $XtCMinHeight               =
	pointer-value-address(XtShellStrings(), index: 579);
define inline-only constant $XtNmaxWidth                =
	pointer-value-address(XtShellStrings(), index: 589);
define inline-only constant $XtCMaxWidth                =
	pointer-value-address(XtShellStrings(), index: 598);
define inline-only constant $XtNmaxHeight               =
	pointer-value-address(XtShellStrings(), index: 607);
define inline-only constant $XtCMaxHeight               =
	pointer-value-address(XtShellStrings(), index: 617);
define inline-only constant $XtNwidthInc                =
	pointer-value-address(XtShellStrings(), index: 627);
define inline-only constant $XtCWidthInc                =
	pointer-value-address(XtShellStrings(), index: 636);
define inline-only constant $XtNheightInc               =
	pointer-value-address(XtShellStrings(), index: 645);
define inline-only constant $XtCHeightInc               =
	pointer-value-address(XtShellStrings(), index: 655);
define inline-only constant $XtNminAspectY              =
	pointer-value-address(XtShellStrings(), index: 665);
define inline-only constant $XtCMinAspectY              =
	pointer-value-address(XtShellStrings(), index: 676);
define inline-only constant $XtNmaxAspectY              =
	pointer-value-address(XtShellStrings(), index: 687);
define inline-only constant $XtCMaxAspectY              =
	pointer-value-address(XtShellStrings(), index: 698);
define inline-only constant $XtNminAspectX              =
	pointer-value-address(XtShellStrings(), index: 709);
define inline-only constant $XtCMinAspectX              =
	pointer-value-address(XtShellStrings(), index: 720);
define inline-only constant $XtNmaxAspectX              =
	pointer-value-address(XtShellStrings(), index: 731);
define inline-only constant $XtCMaxAspectX              =
	pointer-value-address(XtShellStrings(), index: 742);
define inline-only constant $XtNwmTimeout               =
	pointer-value-address(XtShellStrings(), index: 753);
define inline-only constant $XtCWmTimeout               =
	pointer-value-address(XtShellStrings(), index: 763);
define inline-only constant $XtNwaitForWm               =
	pointer-value-address(XtShellStrings(), index: 773);
define inline-only constant $XtCWaitForWm               =
	pointer-value-address(XtShellStrings(), index: 783);
define C-subtype <ShellWidgetClass> ( <C-void*> ) end;
define C-subtype <OverrideShellWidgetClass> ( <C-void*> ) end;
define C-subtype <WMShellWidgetClass> ( <C-void*> ) end;
define C-subtype <TransientShellWidgetClass> ( <C-void*> ) end;
define C-subtype <TopLevelShellWidgetClass> ( <C-void*> ) end;
define C-subtype <ApplicationShellWidgetClass> ( <C-void*> ) end;
define C-variable shellWidgetClass :: <WidgetClass>
  c-name: "shellWidgetClass";
end;
define C-variable overrideShellWidgetClass :: <WidgetClass>
  c-name: "overrideShellWidgetClass";
end;
define C-variable wmShellWidgetClass :: <WidgetClass>
  c-name: "wmShellWidgetClass";
end;
define C-variable transientShellWidgetClass :: <WidgetClass>
  c-name: "transientShellWidgetClass";
end;
define C-variable topLevelShellWidgetClass :: <WidgetClass>
  c-name: "topLevelShellWidgetClass";
end;
define C-variable applicationShellWidgetClass :: <WidgetClass>
  c-name: "applicationShellWidgetClass";
end;

