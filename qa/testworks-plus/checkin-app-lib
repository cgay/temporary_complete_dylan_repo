#!/usr/local/bin/perl
#
# Scriptname: checkin-app-lib
# Arguments:  Test-library-name (default: none)
#             dylandir          (default: ~/dylan)
#             registrydir       (default: dylandir/registry/generic)
#
# Author: Shri Amit(amit)
#
# Purpose: The purpose of this script is to check-in the application
#          library created by create-app-lib script (or otherwise,
#          as long as same directory structure is preserved) into
#          HOPE. It also checks in the appropriate registry entry.
#####################################################################

## Initialize all variables according to arguments passed
##
$add = "/u/dylan/tools/scripts/dylan-add";
$testname = "$ARGV[0]";
$dylandir = "$ARGV[1]";
$registrydir = "$ARGV[2]";
if ($testname eq "") {
    die "Usage: checkin-app-lib LibraryName [DYLAN-DIR] [REGISTRY-DIR]";
} elsif ($dylandir eq "") {
    $home = $ENV{'HOME'} || $ENV{'LOGDIR'} ||
	(getpwuid($<))[7] || die "You're homeless!\n";
    $dylandir = "$home/dylan";
} 
if ($registrydir eq "") {
    $registrydir = "$dylandir/registry/generic";
}

$appname = "$testname-app";
$appdir = "$dylandir/qa/test-apps/$testname";
$registry_entry = "$registrydir/$appname";
$libfile = "$appdir/$appname-lib.dylan";
$dylanfile = "$appdir/$appname.dylan";
$lidfile = "$appdir/$appname.lid";

## Prompt user on current settings
##
print "Setting the application name to : $appname\n";
print "Setting dylan directory to: $dylandir\n";
print "Setting the registry directory to: $registrydir\n";

## Check to make sure all the required files exist
## and are non-zero length
##
unless (-s $libfile) {
    die "\nUh Oh! $libfile either does not exist or has zero size...aborting";
}
unless (-s $dylanfile) {
    die "\nUh Oh! $dylanfile either does not exist or has zero size...aborting";
}
unless (-s $lidfile) {
    die "\nUh Oh! $lidfile either does not exist or has zero size...aborting";
}
unless (-s $registry_entry) {
    die "\nUh Oh! $registry_entry either does not exist or has zero size...aborting";
}

## Have the user ensure all HOPE entries are correct
##
print "\nThe following information is relevant to HOPE:\n";
print "\nPlease enter 'y' to proceed or anything else to abort";
print "\nThe new compound to be created is: D-qa-test-apps-$testname";
print "\nThe following files shall be added:";
print "\n\t$libfile\n\t$dylanfile\n\t$lidfile";
print "\nA new registry entry shall be: $appname";
print "\nWhich shall be added to D-registry-generic";
print "\n\nDo you want to proceed? (y/n)  ";
$question = <STDIN>; chop ($question);
unless ($question eq "y" || $question eq "Y") {
    die "\nBetter be safe than sorry...aborting";
}

## Create compound for new app library, check in files
## and add D-qa-test-apps as a parent
##
$reason = "-reason \"Application library for $testname\"";
$diroption = "-directory $testname";
`$add -c D-qa-test-apps-$testname -p D-qa-test-apps $diroption $reason`
    || die "\nUh Oh! could not create new compound for $testname";
print "\nCreated new compound and added it to appropriate parent...";
`$add -p D-qa-test-apps-$testname $reason $libfile $dylanfile $lidfile`
    || die "\nUh Oh! could not add files to $testname compound";
print "\nAdded the app library files to the new compound...";
## Checkin the registry entry
##
`$add -p D-registry-generic $reason $registry_entry` 
    || die "\nUh Oh! could not add registry entry";
print "\nAdded the registry entry...";

## Done
##
print "\n\nCompleted the check in process for the application library\n";
