
$D2CFLAGS = '-L../runtime/c-code -L../runtime/gc '
    . '-L../runtime/dylan -L../runtime/streams '
    . '-L../runtime/print -L../runtime/format '
    . '-L../runtime/random -L../runtime/coll-ext '
    . '-L../runtime/string-ext -L../runtime/melange '
    . '-L../runtime/table-ext -L../runtime/standard-io '
    . '-L../runtime/regexp';
$CPPFLAGS = '-I$(SRCROOT)/runtime -I$(SRCDIR)';

# We're not going to worry about whether dig is actually *useful* on
# this platform, only whether it can be compiled.
if ($features{'compiled_for_win32'}) {
    $dig_lid_file = 'win32-dig';
    &emit_c_file_rule('win32-dig-support', 'win32-dig-support.h');
    &emit_melange_rule('win32-dig-c', 'win32-dig-support.h');
} elsif ($features{'compiled_for_hpux'}) {
    $dig_lid_file = 'hp-dig';
    &emit_c_file_rule('hp-dig-support', 'hp-dig-support.h');
    &emit_melange_rule('hp-dig-c', 'hp-dig-support.h');
} elsif ($features{'compiled_for_solaris'} || $features{'compiled_for_linux'}) {
    # dig is unsupported on these platforms because the port is
    # non-trivial.  There's a fair amount of OS-specific work involved
    # in handling interrupts to make sure ^C does what you'd expect.
    $dig_lid_file = 0;
} else {
    &unknown_platform_error();
}
   
if ($dig_lid_file) {
    &emit_library_rule($dig_lid_file, '$(BUILDROOT)/force.timestamp', '', 
		       'compile', 'install');
}
