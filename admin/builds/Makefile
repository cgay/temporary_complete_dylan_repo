#
# Script: Dylan release makefile
# Author: Andy Armstrong
#
# Note: If you want to bootstrap the compiler, you should use the script
# build-release.bat from this directory (dylan/admin/builds). It uses
# this makefile, but first sets up the environment variables correctly
# and then builds multiple generations as required.
#
# Use this makefile to link any of the PC build products. First you
# need to have set up your environment variables by running the script
# set-builds-variables.bat from this directory.
#
# Note that the CVS branch is only used if there are sources missing
# from your build area. It is a bug if CVS is used at any other time.
#
# Here are some of the more useful targets:
#
#    nmake dylan                    - build the Dylan DLL
#    nmake duim                     - build DUIM
#    nmake pentium-dw               - build pentium-dw.exe
#    nmake win32-environment        - build win32-environment.exe
#    nmake console-debugger         - build the console debugger
#
#    nmake basic-release            - build the Basic Edition
#    nmake enhanced-release         - build the Enhanced Edition
#    nmake internal-release         - build the Internal Edition
#    nmake releases                 - build all of the editions
#
#    nmake minimal-internal-release - build just the minimal release components
#
# To get a back trace, do nmake OPTIONS=/debugger target
#
# Look at the list of targets below for other options.
#
# Mail any problems you have to dylan-admin.
#

#
# Command-line options.
#

OPTIONS = 
RUNTIME_OPTIONS = 
PENTIUM_RUNTIME_OPTIONS = 
CHECKOUT_OPTIONS =

#
# Application setup.
#

CHECKOUT = cvs-checkout
IMPORT_PROJECT = import-project $(OPTIONS)
BUILD_LIBRARY = build-library /nowarnings $(OPTIONS)
BUILD_RUNTIME_LIBRARY = $(BUILD_LIBRARY) $(RUNTIME_OPTIONS)
BUILD_APPLICATION = build-application /nowarnings $(OPTIONS)
ENSURE_RELEASE_AREA = ensure-release-area
ENSURE_DIRECTORY = ensure-directory
ENSURE_SOURCES = ensure-sources
ENSURE_REGISTRY_ENTRY = ensure-registry-entry
ENSURE_LIBRARY = ensure-library $(OPTIONS) /pentium-runtime "$(PENTIUM_RUNTIME_OPTIONS)" /runtime $(RUNTIME_OPTIONS)
ENSURE_RUNTIME_LIBRARY = $(ENSURE_LIBRARY) /dll
ENSURE_APPLICATION = ensure-application $(OPTIONS)
ENSURE_WRITEABLE_HDP_FILES = ensure-writeable-hdp-files
GENERATE_IDL_BINDINGS = generate-idl-bindings
GENERATE_PARSER = generate-parser
TEST_APP = run-test
TEST_SCRIPT = test-script
REMOVE = del /F /Q
REMOVE_DIRECTORY = rmdir /S /Q
REMOVE_CVS_DIRECTORIES = remove-cvs-directories
COPY = copy
RECURSIVE_COPY = xcopy /E /I
CLEAN =
MAKE = nmake /s /nologo

#
# Source targets
#

ADMIN_DIRECTORY = $(OPEN_DYLAN_USER_ROOT)\Admin
BUILD_DIRECTORY = $(OPEN_DYLAN_USER_BUILD)
DATABASES_DIRECTORY = $(OPEN_DYLAN_USER_INSTALL)\Databases
EXAMPLES_INSTALL_DIRECTORY = $(OPEN_DYLAN_USER_INSTALL)\Examples
INSTALL_BIN_DIRECTORY = $(OPEN_DYLAN_USER_INSTALL)\Bin
INSTALL_LIB_DIRECTORY = $(OPEN_DYLAN_USER_INSTALL)\Lib
LOGS_DIRECTORY = $(OPEN_DYLAN_USER_INSTALL)\logs
REDISTRIBUTABLE_DIRECTORY = $(OPEN_DYLAN_USER_ROOT)\Redistributable
SOURCES_DIRECTORY = $(OPEN_DYLAN_USER_SOURCES)
TEMPLATES_INSTALL_DIRECTORY = $(OPEN_DYLAN_USER_INSTALL)\Templates
SOURCE_TEMPLATES_INSTALL_DIRECTORY = $(TEMPLATES_INSTALL_DIRECTORY)\Source

RUNTIME_PREFIX = Dx
BUILD_MAKEFILE = dylanmakefile.mkf

APP_DIRECTORY = $(SOURCES_DIRECTORY)\app
EXAMPLES_DIRECTORY = $(SOURCES_DIRECTORY)\examples

BENCHMARKS_DIRECTORY = $(SOURCES_DIRECTORY)\benchmarks
COLLECTIONS_DIRECTORY = $(SOURCES_DIRECTORY)\collections
CORBA_DIRECTORY = $(SOURCES_DIRECTORY)\corba
CORBA_SERVICES_DIRECTORY = $(CORBA_DIRECTORY)\services
DATABASES_SOURCE = $(SOURCES_DIRECTORY)\databases
DATABASE_EXAMPLES_DIRECTORY = $(EXAMPLES_DIRECTORY)\odbc
DATABASE_TESTS_DIRECTORY = $(DATABASES_SOURCE)\tests
DUIM_DIRECTORY = $(SOURCES_DIRECTORY)\duim
GNU_DIRECTORY = $(SOURCES_DIRECTORY)\gnu
IO_DIRECTORY = $(SOURCES_DIRECTORY)\io
LIBRARY_PACKS_DIRECTORY = $(SOURCES_DIRECTORY)\Library-Packs
LIB_DIRECTORY = $(SOURCES_DIRECTORY)\lib
NETWORK_DIRECTORY = $(SOURCES_DIRECTORY)\network
OLE_DIRECTORY = $(SOURCES_DIRECTORY)\ole
OLE_EXAMPLES_DIRECTORY = $(OLE_DIRECTORY)\examples
PARTNERS_DIRECTORY = $(SOURCES_DIRECTORY)\partners
QA_DIRECTORY = $(SOURCES_DIRECTORY)\qa
SYSTEM_DIRECTORY = $(SOURCES_DIRECTORY)\system
TOOLS_DIRECTORY = $(SOURCES_DIRECTORY)\tools
WIN32_DIRECTORY = $(SOURCES_DIRECTORY)\win32

CONSOLE_EXAMPLES_SOURCE = $(EXAMPLES_DIRECTORY)\console
DOCUMENTATION_EXAMPLES_SOURCE = $(EXAMPLES_DIRECTORY)\documentation
TEMPLATES_SOURCE = $(TOOLS_DIRECTORY)\templates

CORBA_DEMOS_SOURCE = $(CORBA_DIRECTORY)\demos
CORBA_TESTS_SOURCE = $(CORBA_DIRECTORY)\tests

CONSOLE_EXAMPLES_INSTALL_DIRECTORY = $(EXAMPLES_INSTALL_DIRECTORY)\console
CORBA_EXAMPLES_INSTALL_DIRECTORY = $(EXAMPLES_INSTALL_DIRECTORY)\corba
DATABASE_EXAMPLES_INSTALL_DIRECTORY = $(EXAMPLES_INSTALL_DIRECTORY)\odbc
DUIM_EXAMPLES_INSTALL_DIRECTORY = $(EXAMPLES_INSTALL_DIRECTORY)\duim
MIDI_EXAMPLES_INSTALL_DIRECTORY = $(EXAMPLES_INSTALL_DIRECTORY)\midi
OLE_EXAMPLES_INSTALL_DIRECTORY = $(EXAMPLES_INSTALL_DIRECTORY)\ole
DUIM_OLE_EXAMPLES_INSTALL_DIRECTORY = $(EXAMPLES_INSTALL_DIRECTORY)\ole
WIN32_EXAMPLES_INSTALL_DIRECTORY = $(EXAMPLES_INSTALL_DIRECTORY)\win32
DOCUMENTATION_EXAMPLES_INSTALL_DIRECTORY = $(EXAMPLES_INSTALL_DIRECTORY)\documentation
NETWORK_EXAMPLES_INSTALL_DIRECTORY = $(EXAMPLES_INSTALL_DIRECTORY)\network

BUILD_LOGS = $(OPEN_DYLAN_BUILD_LOGS)
CVS_LOGS = $(OPEN_DYLAN_CVS_LOGS)

ASP_VIEW_SOURCE = $(OLE_EXAMPLES_DIRECTORY)\asp-view
ASP_VIEW_INSTALL_DIRECTORY = $(OLE_EXAMPLES_INSTALL_DIRECTORY)\asp-view
BIG_INTEGERS_SOURCE = $(LIB_DIRECTORY)\big-integers
BUG_REPORT_TEMPLATE = $(TEMPLATES_INSTALL_DIRECTORY)\bug-report.txt
BUILD_X86_WIN32_SOURCE = $(BUILD_DIRECTORY)\x86-win32
BUILD_SYSTEM_SOURCE = $(LIB_DIRECTORY)\build-system
BUTTON_OCX_SOURCE = $(OLE_EXAMPLES_DIRECTORY)\button-ocx
BUTTON_OCX_INSTALL_DIRECTORY = $(DUIM_OLE_EXAMPLES_INSTALL_DIRECTORY)\button-ocx
C_FFI_SOURCE = $(LIB_DIRECTORY)\c-ffi
C_FFI_TESTS_SOURCE = $(C_FFI_SOURCE)\test
C_LEXER_SOURCE = $(LIB_DIRECTORY)\c-lexer
CMU_SOURCE = $(PARTNERS_DIRECTORY)\cmu
CMU_TEST_SUITE_SOURCE = $(CMU_SOURCE)\cmu-test-suite
CHANNELS_SOURCE = $(LIB_DIRECTORY)\channels
CHANNELS_TESTS_SOURCE = $(CHANNELS_SOURCE)\tests
CHAT_DEMO_SOURCE = $(CORBA_DEMOS_SOURCE)\chat
CHAT_DEMO_INSTALL_DIRECTORY = $(CORBA_EXAMPLES_INSTALL_DIRECTORY)\chat
COM_BANK_DEMO_SOURCE = $(OLE_EXAMPLES_DIRECTORY)\bank
COM_BANK_DEMO_INSTALL_DIRECTORY = $(OLE_EXAMPLES_INSTALL_DIRECTORY)\bank
COMMAND_SHELL_SOURCE = $(LIB_DIRECTORY)\command-shell
COMMANDS_SOURCE = $(LIB_DIRECTORY)\commands
COMMON_DYLAN_SOURCE = $(SOURCES_DIRECTORY)\common-dylan
COMMON_DYLAN_TESTS_SOURCE = $(COMMON_DYLAN_SOURCE)\tests
COLLECTIONS_TESTS_SOURCE = $(COLLECTIONS_DIRECTORY)\tests
CORBA_BANK_DEMO_SOURCE = $(CORBA_DEMOS_SOURCE)\bank
CORBA_BANK_DEMO_INSTALL_DIRECTORY = $(CORBA_EXAMPLES_INSTALL_DIRECTORY)\bank
CORBA_HELLO_WORLD_SOURCE = $(CORBA_DEMOS_SOURCE)\corba-hello-world
CORBA_HELLO_WORLD_INSTALL_DIRECTORY = $(CORBA_EXAMPLES_INSTALL_DIRECTORY)\corba-hello-world
CORBA_PENTE_SOURCE = $(CORBA_DEMOS_SOURCE)\pente
CORBA_PENTE_INSTALL_DIRECTORY = $(CORBA_EXAMPLES_INSTALL_DIRECTORY)\pente
CREATE_ID_SOURCE = $(APP_DIRECTORY)\create-id
DATABASE_STRESS_TOOL_SOURCE = $(DATABASE_TESTS_DIRECTORY)\stress-tool
DATABASE_STRESS_TOOL_INSTALL_DIRECTORY = $(DATABASE_EXAMPLES_INSTALL_DIRECTORY)\database-stress-tool
DATABASE_VIEWER_SOURCE = $(DATABASE_EXAMPLES_DIRECTORY)\database-viewer
DATABASE_VIEWER_INSTALL_DIRECTORY = $(DATABASE_EXAMPLES_INSTALL_DIRECTORY)\database-viewer
DEUCE_SOURCE = $(SOURCES_DIRECTORY)\deuce
DEUCE_TESTS_SOURCE = $(DEUCE_SOURCE)\tests
DFMC_SOURCE = $(SOURCES_DIRECTORY)\dfmc
DISASM_SOURCE = $(LIB_DIRECTORY)\disasm
DISPATCH_PROFILER_SOURCE = $(LIB_DIRECTORY)\dispatch-profiler
DLL_WRAP_SOURCE = $(APP_DIRECTORY)\dll-wrap
DOC_AIRPORT_SOURCE = $(DOCUMENTATION_EXAMPLES_SOURCE)\airport
DOC_AIRPORT_INSTALL_DIRECTORY = $(DOCUMENTATION_EXAMPLES_INSTALL_DIRECTORY)\airport
DOC_REVERSI_SOURCE = $(DOCUMENTATION_EXAMPLES_SOURCE)\reversi
DOC_REVERSI_INSTALL_DIRECTORY = $(DOCUMENTATION_EXAMPLES_INSTALL_DIRECTORY)\reversi
DOC_ROTNEXAMPLE_SOURCE = $(DOCUMENTATION_EXAMPLES_SOURCE)\RotNExample
DOC_ROTNEXAMPLE_INSTALL_DIRECTORY = $(DOCUMENTATION_EXAMPLES_INSTALL_DIRECTORY)\RotNExample
DOC_TASK_LIST_1_SOURCE = $(DOCUMENTATION_EXAMPLES_SOURCE)\task-list-1
DOC_TASK_LIST_1_INSTALL_DIRECTORY = $(DOCUMENTATION_EXAMPLES_INSTALL_DIRECTORY)\task-list-1
DOC_TASK_LIST_2_SOURCE = $(DOCUMENTATION_EXAMPLES_SOURCE)\task-list-2
DOC_TASK_LIST_2_INSTALL_DIRECTORY = $(DOCUMENTATION_EXAMPLES_INSTALL_DIRECTORY)\task-list-2
DOOD_SOURCE = $(LIB_DIRECTORY)\dood
DUIM_EXAMPLES_SOURCE = $(DUIM_DIRECTORY)\examples
DUIM_TESTS_SOURCE = $(DUIM_DIRECTORY)\tests
DUIM_GL_DEMO_SOURCE = $(APP_DIRECTORY)\duim-gl-demo
DUIM_GL_DEMO_INSTALL_DIRECTORY = $(DUIM_EXAMPLES_INSTALL_DIRECTORY)\duim-gl-demo
DUIM_GUI_TEST_SUITE_SOURCE = $(DUIM_TESTS_SOURCE)\gui
DUIM_GUI_TEST_SUITE_INSTALL_DIRECTORY = $(DUIM_EXAMPLES_INSTALL_DIRECTORY)\duim-gui-test-suite
DUIM_RESOURCE_EXAMPLE_SOURCE = $(DUIM_EXAMPLES_SOURCE)\resources
DUIM_RESOURCE_EXAMPLE_INSTALL_DIRECTORY = $(DUIM_EXAMPLES_INSTALL_DIRECTORY)\resources
DW_SOURCE = $(APP_DIRECTORY)\dw
DYLAN_SOURCE = $(SOURCES_DIRECTORY)\dylan
DYLAN_PLAYGROUND_SOURCE = $(APP_DIRECTORY)\dylan-playground
DYLAN_TEST_SUITE_SOURCE = $(DYLAN_SOURCE)\tests
ENVIRONMENT_SOURCE = $(SOURCES_DIRECTORY)\environment
ENVIRONMENT_TESTS_SOURCE = $(ENVIRONMENT_SOURCE)\tests
FACTORIAL_SOURCE = $(APP_DIRECTORY)\factorial
FACTORIAL_EXAMPLES_INSTALL_DIRECTORY = $(CONSOLE_EXAMPLES_INSTALL_DIRECTORY)\factorial
FLYING_SQUARES_SOURCE = $(APP_DIRECTORY)\flying-squares
FLYING_SQUARES_INSTALL_DIRECTORY = $(DUIM_EXAMPLES_INSTALL_DIRECTORY)\flying-squares
GENERIC_ARITHMETIC_SOURCE = $(LIB_DIRECTORY)\generic-arithmetic
GRAMMAR_COMPILER_SOURCE = $(LIB_DIRECTORY)\grammar-compiler
GUI_TESTWORKS_SOURCE = $(QA_DIRECTORY)\gui-testworks
FUNCTIONAL_DYLAN_SOURCE = $(SOURCES_DIRECTORY)\functional-dylan
FUNCTIONAL_DYLAN_TESTS_SOURCE = $(FUNCTIONAL_DYLAN_SOURCE)\tests
HARP_SOURCE = $(SOURCES_DIRECTORY)\harp
HELLO_WORLD_SOURCE = $(APP_DIRECTORY)\hello-world
HELLO_WORLD_INSTALL_DIRECTORY = $(CONSOLE_EXAMPLES_INSTALL_DIRECTORY)\hello-world
INSTALL_SOURCE = $(SOURCES_DIRECTORY)\..\install
INTERFACE_BUILDER_SOURCE = $(DUIM_EXAMPLES_SOURCE)\interface-builder
INTERFACE_BUILDER_INSTALL_DIRECTORY = $(DUIM_EXAMPLES_INSTALL_DIRECTORY)\interface-builder
INSTALL_LIB_SOURCE = $(INSTALL_SOURCE)\x86-win32\lib
INSTALL_BIN_SOURCE = $(INSTALL_SOURCE)\x86-win32\bin
IO_TESTS_SOURCE = $(IO_DIRECTORY)\tests
LICENSING_SOURCE = $(LIB_DIRECTORY)\licensing
LIFE_SOURCE = $(DUIM_EXAMPLES_SOURCE)\life
LIFE_INSTALL_DIRECTORY = $(DUIM_EXAMPLES_INSTALL_DIRECTORY)\life
MAP_STATISTICS_SOURCE = $(TOOLS_DIRECTORY)\map-statistics
MEMORY_MANAGER_SOURCE = $(LIB_DIRECTORY)\memory-manager
METERING_SOURCE = $(LIB_DIRECTORY)\metering
MIDI_SOURCE = $(LIB_DIRECTORY)\midi
MOTLEY_SOURCE = $(LIB_DIRECTORY)\motley
NAMING_SERVICE_SOURCE = $(CORBA_SERVICES_DIRECTORY)\naming
NETWORK_EXAMPLES_SOURCE = $(NETWORK_DIRECTORY)\examples
NETWORK_TESTS_SOURCE = $(NETWORK_DIRECTORY)\tests
OCX_SCRIBBLE_SOURCE = $(OLE_EXAMPLES_DIRECTORY)\ocx-scribble
OCX_SCRIBBLE_INSTALL_DIRECTORY = $(DUIM_OLE_EXAMPLES_INSTALL_DIRECTORY)\ocx-scribble
OLE_AUTOMATION_SOURCE = $(OLE_DIRECTORY)\ole-automation
OLE_AUTOMATION_TESTS_SOURCE = $(OLE_AUTOMATION_SOURCE)\tests
OLE_SCRIBBLE_SOURCE = $(OLE_EXAMPLES_DIRECTORY)\ole-scribble
OLE_SCRIBBLE_INSTALL_DIRECTORY = $(DUIM_OLE_EXAMPLES_INSTALL_DIRECTORY)\ole-scribble
ORB_SOURCE = $(CORBA_DIRECTORY)\orb
PARSER_COMPILER_SOURCE = $(APP_DIRECTORY)\parser-compiler
PARSER_GENERATOR_SOURCE = $(LIB_DIRECTORY)\parser-generator
PARSER_RUN_TIME_SOURCE = $(LIB_DIRECTORY)\parser-run-time
PENTE_SOURCE = $(DUIM_EXAMPLES_SOURCE)\pente
PENTE_INSTALL_DIRECTORY = $(DUIM_EXAMPLES_INSTALL_DIRECTORY)\pente
RUN_TIME_SOURCE = $(LIB_DIRECTORY)\run-time
PENTIUM_RUN_TIME_SOURCE = $(LIB_DIRECTORY)\run-time\pentium-win32
PLONKER_SOURCE = $(APP_DIRECTORY)\plonker
PLONKER_INSTALL_DIRECTORY = $(MIDI_EXAMPLES_INSTALL_DIRECTORY)\plonker
PPML_SOURCE = $(LIB_DIRECTORY)\ppml
PROJECT_MANAGER_SOURCE = $(SOURCES_DIRECTORY)\project-manager
QA_SCRIPTS_SOURCE = $(QA_DIRECTORY)\scripts
RELEASE_INFO_SOURCE = $(LIB_DIRECTORY)\release-info
REVERSI_SOURCE = $(DUIM_EXAMPLES_SOURCE)\reversi
REVERSI_INSTALL_DIRECTORY = $(DUIM_EXAMPLES_INSTALL_DIRECTORY)\reversi
RUNTIME_MANAGER_SOURCE = $(SOURCES_DIRECTORY)\runtime-manager
SAMPLE_AUTOMATION_CONTROLLER_SOURCE = $(OLE_EXAMPLES_DIRECTORY)\sample-automation-controller
SAMPLE_AUTOMATION_CONTROLLER_INSTALL_DIRECTORY = $(OLE_EXAMPLES_INSTALL_DIRECTORY)\sample-automation-controller
SAMPLE_AUTOMATION_SERVER_SOURCE = $(OLE_EXAMPLES_DIRECTORY)\sample-automation-server
AUTOMATION_SERVER_EXAMPLES_INSTALL_DIRECTORY = $(OLE_EXAMPLES_INSTALL_DIRECTORY)\sample-automation-server
SAMPLE_DUIM_CONTAINER_SOURCE = $(OLE_EXAMPLES_DIRECTORY)\sample-duim-container
SAMPLE_DUIM_CONTAINER_INSTALL_DIRECTORY = $(DUIM_OLE_EXAMPLES_INSTALL_DIRECTORY)\sample-duim-container
SAMPLE_OLE_CONTAINER_SOURCE = $(OLE_EXAMPLES_DIRECTORY)\sample-ole-container
SAMPLE_OLE_CONTAINER_INSTALL_DIRECTORY = $(OLE_EXAMPLES_INSTALL_DIRECTORY)\sample-ole-container
SAMPLE_OLE_SERVER_SOURCE = $(OLE_EXAMPLES_DIRECTORY)\sample-ole-server
SAMPLE_OLE_SERVER_INSTALL_DIRECTORY = $(OLE_EXAMPLES_INSTALL_DIRECTORY)\sample-ole-server
SCEPTER_SOURCE = $(CORBA_DIRECTORY)\scepter
SCRIBBLE_SOURCE = $(DUIM_EXAMPLES_SOURCE)\scribble
SCRIBBLE_INSTALL_DIRECTORY = $(DUIM_EXAMPLES_INSTALL_DIRECTORY)\scribble
SOCKETS_SOURCE = $(NETWORK_DIRECTORY)\sockets
SOURCE_RECORDS_SOURCE = $(LIB_DIRECTORY)\source-records
SQL_ODBC_TEST_SOURCE = $(DATABASES_SOURCE)\sql-odbc-test
STANDALONE_DEUCE_SOURCE = $(DEUCE_SOURCE)\standalone
STANDALONE_DEUCE_INSTALL_DIRECTORY = $(DUIM_EXAMPLES_INSTALL_DIRECTORY)\standalone-deuce
SYSTEM_TESTS_SOURCE = $(SYSTEM_DIRECTORY)\tests
T_LISTS_SOURCE = $(LIB_DIRECTORY)\t-lists
TEST_APPS_SOURCE = $(QA_DIRECTORY)\test-apps
TEST_REPORT_SOURCE = $(QA_DIRECTORY)\test-report
TEST_SUITES_SOURCE = $(QA_DIRECTORY)\test-suites
TESTWORKS_SOURCE = $(QA_DIRECTORY)\testworks
TESTWORKS_TESTS_SOURCE = $(TESTWORKS_SOURCE)\tests
TESTWORKS_SPECS_SOURCE = $(QA_DIRECTORY)\testworks-specs
TETRIS_SOURCE = $(DUIM_EXAMPLES_SOURCE)\tetris
TETRIS_INSTALL_DIRECTORY = $(DUIM_EXAMPLES_INSTALL_DIRECTORY)\tetris
TIC_TAC_TOE_SOURCE = $(DUIM_EXAMPLES_SOURCE)\tic-tac-toe
TIC_TAC_TOE_INSTALL_DIRECTORY = $(DUIM_EXAMPLES_INSTALL_DIRECTORY)\tic-tac-toe
TOWERS_OF_HANOI_SOURCE = $(CONSOLE_EXAMPLES_SOURCE)\towers-of-hanoi
TOWERS_OF_HANOI_INSTALL_DIRECTORY = $(CONSOLE_EXAMPLES_INSTALL_DIRECTORY)\towers-of-hanoi
VARIABLE_SEARCH_SOURCE = $(LIB_DIRECTORY)\variable-search
WALKER_SOURCE = $(LIB_DIRECTORY)\walker
WARNINGS_TEST_SUITE_SOURCE = $(QA_DIRECTORY)\warnings-test-suite
WIN32_DUIM_GUI_TEST_SUITE_SOURCE = $(DUIM_TESTS_SOURCE)\win32
WIN32_DUIM_GUI_TEST_SUITE_INSTALL_DIRECTORY = $(DUIM_EXAMPLES_INSTALL_DIRECTORY)\win32-duim-gui-test-suite
WIN32_INVISIBLE_CONTROL_SOURCE = $(OLE_EXAMPLES_DIRECTORY)\win32-invisible-control
WIN32_INVISIBLE_CONTROL_INSTALL_DIRECTORY = $(OLE_EXAMPLES_INSTALL_DIRECTORY)\win32-invisible-control
WIN32_OLE_CONTAINER_SOURCE = $(OLE_EXAMPLES_DIRECTORY)\win32-ole-container
WIN32_OLE_CONTAINER_INSTALL_DIRECTORY = $(OLE_EXAMPLES_INSTALL_DIRECTORY)\win32-ole-container
WIN32_OLE_SERVER_SOURCE = $(OLE_EXAMPLES_DIRECTORY)\win32-ole-server
WIN32_OLE_SERVER_EXAMPLES_INSTALL_DIRECTORY = $(OLE_EXAMPLES_INSTALL_DIRECTORY)\win32-ole-server
WIN32_SCRIBBLE_SOURCE = $(DUIM_EXAMPLES_SOURCE)\win32-scribble
WIN32_SCRIBBLE_INSTALL_DIRECTORY = $(DUIM_EXAMPLES_INSTALL_DIRECTORY)\win32-scribble
WIN32_TESTS_SOURCE = $(WIN32_DIRECTORY)\tests
WINDOWS_FFI_EXAMPLE_SOURCE = $(APP_DIRECTORY)\windows-ffi-example
WINDOWS_FFI_EXAMPLE_INSTALL_DIRECTORY = $(WIN32_EXAMPLES_INSTALL_DIRECTORY)\windows-ffi-example
WINDOWS_GADGETS_EXAMPLE_SOURCE = $(APP_DIRECTORY)\windows-gadgets-example
WINDOWS_GADGETS_EXAMPLE_INSTALL_DIRECTORY = $(WIN32_EXAMPLES_INSTALL_DIRECTORY)\windows-gadgets-example
WINDOWS_VIEWER_SOURCE = $(DUIM_EXAMPLES_SOURCE)\windows-viewer
WINDOWS_VIEWER_INSTALL_DIRECTORY = $(DUIM_EXAMPLES_INSTALL_DIRECTORY)\windows-viewer
WITH_SPLASH_SCREEN_SOURCE = $(APP_DIRECTORY)\with-splash-screen
DAYTIME_CLIENT_SOURCE = $(NETWORK_EXAMPLES_SOURCE)\daytime-client
DAYTIME_CLIENT_INSTALL_DIRECTORY = $(NETWORK_EXAMPLES_INSTALL_DIRECTORY)\daytime-client
DAYTIME_SERVER_SOURCE = $(NETWORK_EXAMPLES_SOURCE)\daytime-server
DAYTIME_SERVER_INSTALL_DIRECTORY = $(NETWORK_EXAMPLES_INSTALL_DIRECTORY)\daytime-server
ECHO_CLIENT_SOURCE = $(NETWORK_EXAMPLES_SOURCE)\echo-client
ECHO_CLIENT_INSTALL_DIRECTORY = $(NETWORK_EXAMPLES_INSTALL_DIRECTORY)\echo-client
ECHO_SERVER_SOURCE = $(NETWORK_EXAMPLES_SOURCE)\echo-server
ECHO_SERVER_INSTALL_DIRECTORY = $(NETWORK_EXAMPLES_INSTALL_DIRECTORY)\echo-server
SIMPLE_DAYTIME_CLIENT_SOURCE = $(NETWORK_EXAMPLES_SOURCE)\simple-daytime-client
SIMPLE_DAYTIME_CLIENT_INSTALL_DIRECTORY = $(NETWORK_EXAMPLES_INSTALL_DIRECTORY)\simple-daytime-client
SIMPLE_DAYTIME_SERVER_SOURCE = $(NETWORK_EXAMPLES_SOURCE)\simple-daytime-server
SIMPLE_DAYTIME_SERVER_INSTALL_DIRECTORY = $(NETWORK_EXAMPLES_INSTALL_DIRECTORY)\simple-daytime-server

#
# CORBA projects
#

CONSOLE_SCEPTER_TESTS_PROJECT = $(SCEPTER_SOURCE)\tests\console\console-scepter-tests.hdp
ORB_PROJECT = $(ORB_SOURCE)\orb\orb.hdp
CORBA_TESTS_CLIENT_APP_PROJECT = $(CORBA_TESTS_SOURCE)\dylan\client-app\corba-tests-client-app.hdp
CORBA_TESTS_SERVER_APP_PROJECT = $(CORBA_TESTS_SOURCE)\dylan\server-app\corba-tests-server-app.hdp

#
# Example projects
#

EXAMPLES_CSS_FILE = $(EXAMPLES_DIRECTORY)\examples.css
EXAMPLES_CSS_INSTALL_FILE = $(EXAMPLES_INSTALL_DIRECTORY)\examples.css

FACTORIAL_BIG_PROJECT = $(FACTORIAL_SOURCE)\factorial-big.hdp
FACTORIAL_SMALL_PROJECT = $(FACTORIAL_SOURCE)\factorial-small.hdp
HELLO_WORLD_PROJECT = $(HELLO_WORLD_SOURCE)\hello-world.hdp

WINDOWS_FFI_EXAMPLE_PROJECT = $(WINDOWS_FFI_EXAMPLE_SOURCE)\windows-ffi-example.hdp
WINDOWS_GADGETS_EXAMPLE_PROJECT = $(WINDOWS_GADGETS_EXAMPLE_SOURCE)\windows-gadgets-example.hdp
WINDOWS_RESOURCE_EXAMPLE_PROJECT = $(WINDOWS_RESOURCE_EXAMPLE_SOURCE)\windows-resource-example.hdp

DATABASE_STRESS_TOOL_PROJECT = $(DATABASE_STRESS_TOOL_SOURCE)\database-stress-tool.hdp
DATABASE_VIEWER_PROJECT = $(DATABASE_VIEWER_SOURCE)\database-viewer.hdp
DUIM_GL_DEMO_PROJECT = $(DUIM_GL_DEMO_SOURCE)\duim-gl-demo.hdp
DUIM_GUI_TEST_SUITE_PROJECT = $(DUIM_GUI_TEST_SUITE_SOURCE)\duim-gui-test-suite.hdp
DUIM_RESOURCE_EXAMPLE_PROJECT = $(DUIM_RESOURCE_EXAMPLE_SOURCE)\duim-resource-example.hdp
FLYING_SQUARES_PROJECT = $(FLYING_SQUARES_SOURCE)\flying-squares.hdp
INTERFACE_BUILDER_PROJECT = $(INTERFACE_BUILDER_SOURCE)\interface-builder.hdp
LIFE_PROJECT = $(LIFE_SOURCE)\life.hdp
PENTE_PROJECT = $(PENTE_SOURCE)\pente.hdp
REVERSI_PROJECT = $(REVERSI_SOURCE)\reversi.hdp
SCRIBBLE_PROJECT = $(SCRIBBLE_SOURCE)\scribble.hdp
STANDALONE_DEUCE_PROJECT = $(STANDALONE_DEUCE_SOURCE)\standalone-deuce.hdp
TETRIS_PROJECT = $(TETRIS_SOURCE)\tetris.hdp
TIC_TAC_TOE_PROJECT = $(TIC_TAC_TOE_SOURCE)\tic-tac-toe.hdp
WIN32_DUIM_GUI_TEST_SUITE_PROJECT = $(WIN32_DUIM_GUI_TEST_SUITE_SOURCE)\win32-duim-gui-test-suite.hdp
WIN32_SCRIBBLE_PROJECT = $(SCRIBBLE_SOURCE)\win32-scribble.hdp

PLONKER_PROJECT = $(PLONKER_SOURCE)\plonker.hdp

SAMPLE_AUTOMATION_CONTROLLER_PROJECT = $(SAMPLE_AUTOMATION_CONTROLLER_SOURCE)\sample-automation-controller.hdp
SAMPLE_AUTOMATION_SERVER_PROJECT = $(SAMPLE_AUTOMATION_SERVER_SOURCE)\sample-automation-server.hdp
SAMPLE_OLE_CONTAINER_PROJECT = $(SAMPLE_OLE_CONTAINER_SOURCE)\sample-ole-container.hdp
SAMPLE_OLE_SERVER_PROJECT = $(SAMPLE_OLE_SERVER_SOURCE)\sample-ole-server.hdp
WIN32_INVISIBLE_CONTROL_PROJECT = $(WIN32_INVISIBLE_CONTROL_SOURCE)\win32-invisible-control.hdp
WIN32_OLE_CONTAINER_PROJECT = $(WIN32_OLE_SERVER_SOURCE)\win32-ole-container.hdp
WIN32_OLE_SERVER_PROJECT = $(WIN32_OLE_SERVER_SOURCE)\win32-ole-server.hdp

BUTTON_OCX_PROJECT = $(BUTTON_OCX_SOURCE)\button-ocx.hdp
OLE_SCRIBBLE_PROJECT = $(OLE_SCRIBBLE_SOURCE)\ole-scribble.hdp
OCX_SCRIBBLE_PROJECT = $(OCX_SCRIBBLE_SOURCE)\ocx-scribble.hdp
SAMPLE_DUIM_CONTAINER_PROJECT = $(SAMPLE_OLE_CONTAINER_SOURCE)\sample-duim-container.hdp

DOC_REVERSI_PROJECT = $(DOC_REVERSI_SOURCE)\reversi.hdp

#
# Products
#

PENTIUM_RUN_TIME = $(LIB_DIRECTORY)\pentium-run-time.lib
C_RUN_TIME = $(LIB_DIRECTORY)\c-run-time.lib
WIN32_SUPPORT = $(LIB_DIRECTORY)\Win32Support.lib
HTMLHELP = $(INSTALL_LIB_DIRECTORY)\htmlhelp.lib

MINIMAL_CONSOLE_COMPILER = $(INSTALL_BIN_DIRECTORY)\minimal-console-compiler.exe
MINIMAL_CONSOLE_ENVIRONMENT = $(INSTALL_BIN_DIRECTORY)\minimal-console-environment.exe
MINIMAL_WIN32_ENVIRONMENT = $(INSTALL_BIN_DIRECTORY)\minimal-win32-environment.exe
MINIMAL_GTK_ENVIRONMENT = $(INSTALL_BIN_DIRECTORY)\minimal-gtk-environment.exe
MINIMAL_PENTIUM_DW = $(INSTALL_BIN_DIRECTORY)\minimal-pentium-dw.exe
BATCH_DEBUG = $(INSTALL_BIN_DIRECTORY)\batch-debug.exe
CONSOLE_COMPILER = $(INSTALL_BIN_DIRECTORY)\console-compiler.exe
CONSOLE_ENVIRONMENT = $(INSTALL_BIN_DIRECTORY)\console-environment.exe
CREATE_ID = $(INSTALL_BIN_DIRECTORY)\create-id.exe
DEVEL_DBG_UI = $(INSTALL_BIN_DIRECTORY)\devel-dbg-ui.exe
DLL_WRAP = $(INSTALL_BIN_DIRECTORY)\dll-wrap.exe
DW = $(INSTALL_BIN_DIRECTORY)\dw.exe
GTK_ENVIRONMENT = $(INSTALL_BIN_DIRECTORY)\gtk-environment.exe
INTERACTIVE_COMPILER = $(INSTALL_BIN_DIRECTORY)\interactive-compiler.exe
INTERPRETER = $(INSTALL_BIN_DIRECTORY)\interpreter.exe
MAP_STATISTICS = $(INSTALL_BIN_DIRECTORY)\map-statistics.exe
PARSER_COMPILER = $(INSTALL_BIN_DIRECTORY)\parser-compiler.exe
PENTIUM_DW = $(INSTALL_BIN_DIRECTORY)\pentium-dw.exe
TEST_REPORT = $(INSTALL_BIN_DIRECTORY)\test-report.exe
WIN32_ENVIRONMENT = $(INSTALL_BIN_DIRECTORY)\win32-environment.exe
WITH_SPLASH_SCREEN = $(INSTALL_BIN_DIRECTORY)\with-splash-screen.exe

BIG_INTEGERS_DLL = $(RUNTIME_PREFIX)bigint
CHANNELS_DLL = $(RUNTIME_PREFIX)chnnls
COLLECTIONS_DLL = $(RUNTIME_PREFIX)collns
COMMANDS_DLL = $(RUNTIME_PREFIX)commnd
COMMON_DYLAN_DLL = $(RUNTIME_PREFIX)cmndyl
COM_DLL = $(RUNTIME_PREFIX)com
C_FFI_DLL = $(RUNTIME_PREFIX)cffi
DEUCE_DLL = $(RUNTIME_PREFIX)deuce
DOOD_DLL = $(RUNTIME_PREFIX)dood
DUIM_CORE_DLL = $(RUNTIME_PREFIX)duim
DUIM_DEUCE_DLL = $(RUNTIME_PREFIX)dmdce
DUIM_DLL = $(RUNTIME_PREFIX)wduim
DUIM_OLE_CONTAINER_DLL = $(RUNTIME_PREFIX)docon
DUIM_OLE_CONTROL_DLL = $(RUNTIME_PREFIX)dolec
DUIM_OLE_SERVER_DLL = $(RUNTIME_PREFIX)doles
DYLAN_DLL = $(RUNTIME_PREFIX)dylan
DYLAN_ORB_DLL = $(RUNTIME_PREFIX)orb
GUI_TESTWORKS_DLL = $(RUNTIME_PREFIX)guitst
FUNCTIONAL_DYLAN_DLL = $(RUNTIME_PREFIX)fundyl
IO_DLL = $(RUNTIME_PREFIX)io
MIDI_DLL = $(RUNTIME_PREFIX)midi
NAMING_CLIENT_DLL = $(RUNTIME_PREFIX)cnsc
NETWORK_DLL = $(RUNTIME_PREFIX)netwrk
OLE_AUTOMATION_DLL = $(RUNTIME_PREFIX)oleaut
OLE_CONTAINER_DLL = $(RUNTIME_PREFIX)olecon
OLE_CONTROL_FRAMEWORK_DLL = $(RUNTIME_PREFIX)olecfr
OLE_DIALOGS_DLL = $(RUNTIME_PREFIX)oledlg
OLE_SERVER_DLL = $(RUNTIME_PREFIX)olesvr
SQL_ODBC_DLL = $(RUNTIME_PREFIX)db
SYSTEM_DLL = $(RUNTIME_PREFIX)system
TESTWORKS_DLL = $(RUNTIME_PREFIX)tstwks
TESTWORKS_SPECS_DLL = $(RUNTIME_PREFIX)tstspc
WIN32_COMMON_DLL = $(RUNTIME_PREFIX)w32cmn
WIN32_CONTROLS_DLL = $(RUNTIME_PREFIX)w32ctl
WIN32_DDE_DLL = $(RUNTIME_PREFIX)w32dde
WIN32_DIALOG_DLL = $(RUNTIME_PREFIX)w32dlg
WIN32_GDI_DLL = $(RUNTIME_PREFIX)w32gdi
WIN32_GLU_DLL = $(RUNTIME_PREFIX)w32glu
WIN32_GL_DLL = $(RUNTIME_PREFIX)w32gl
WIN32_HTML_HELP_DLL = $(RUNTIME_PREFIX)htmhlp
WIN32_KERNEL_DLL = $(RUNTIME_PREFIX)w32knl
WIN32_MULTIMEDIA_DLL = $(RUNTIME_PREFIX)w32mm
WIN32_REGISTRY_DLL = $(RUNTIME_PREFIX)w32reg
WIN32_RESOURCES_DLL = $(RUNTIME_PREFIX)w32res
WIN32_RICH_EDIT_DLL = $(RUNTIME_PREFIX)w32red
WIN32_SHELL_DLL = $(RUNTIME_PREFIX)w32shl
WIN32_USER_DLL = $(RUNTIME_PREFIX)w32usr
WIN32_VERSION_DLL = $(RUNTIME_PREFIX)w32ver

BIG_INTEGERS = $(INSTALL_BIN_DIRECTORY)\$(BIG_INTEGERS_DLL).dll
C_FFI = $(INSTALL_BIN_DIRECTORY)\$(C_FFI_DLL).dll
CHANNELS = $(INSTALL_BIN_DIRECTORY)\(CHANNELS_DLL).dll
COLLECTIONS = $(INSTALL_BIN_DIRECTORY)\$(COLLECTIONS_DLL).dll
COMMANDS = $(INSTALL_BIN_DIRECTORY)\$(COMMANDS_DLL).dll
COMMON_DYLAN = $(INSTALL_BIN_DIRECTORY)\$(COMMON_DYLAN_DLL).dll
DOOD = $(INSTALL_BIN_DIRECTORY)\$(DOOD_DLL).dll
DYLAN = $(INSTALL_BIN_DIRECTORY)\$(DYLAN_DLL).dll
FUNCTIONAL_DYLAN = $(INSTALL_BIN_DIRECTORY)\$(FUNCTIONAL_DYLAN_DLL).dll
IO = $(INSTALL_BIN_DIRECTORY)\$(IO_DLL).dll
SYSTEM = $(INSTALL_BIN_DIRECTORY)\$(SYSTEM_DLL).dll

DEUCE = $(INSTALL_BIN_DIRECTORY)\$(DEUCE_DLL).dll
DUIM_DEUCE = $(INSTALL_BIN_DIRECTORY)\$(DUIM_DEUCE_DLL).dll
DUIM_SHEETS = $(BUILD_DIRECTORY)\duim-sheets\$(BUILD_MAKEFILE)
DUIM_CORE = $(INSTALL_BIN_DIRECTORY)\$(DUIM_CORE_DLL).dll
DUIM = $(INSTALL_BIN_DIRECTORY)\$(DUIM_DLL).dll
GTK_DUIM = $(INSTALL_BIN_DIRECTORY)\gtk-duim.dll

WIN32_COMMON = $(INSTALL_BIN_DIRECTORY)\$(WIN32_COMMON_DLL).dll
WIN32_CONTROLS = $(INSTALL_BIN_DIRECTORY)\$(WIN32_CONTROLS_DLL).dll
WIN32_DDE = $(INSTALL_BIN_DIRECTORY)\$(WIN32_DDE_DLL).dll
WIN32_DIALOG = $(INSTALL_BIN_DIRECTORY)\$(WIN32_DIALOG_DLL).dll
WIN32_GDI = $(INSTALL_BIN_DIRECTORY)\$(WIN32_GDI_DLL).dll
WIN32_GL = $(INSTALL_BIN_DIRECTORY)\$(WIN32_GL_DLL).dll
WIN32_GLU = $(INSTALL_BIN_DIRECTORY)\$(WIN32_GLU_DLL).dll
WIN32_HTML_HELP = $(INSTALL_BIN_DIRECTORY)\$(WIN32_HTML_HELP_DLL).dll
WIN32_KERNEL = $(INSTALL_BIN_DIRECTORY)\$(WIN32_KERNEL_DLL).dll
WIN32_MULTIMEDIA = $(INSTALL_BIN_DIRECTORY)\$(WIN32_MULTIMEDIA_DLL).dll
WIN32_REGISTRY = $(INSTALL_BIN_DIRECTORY)\$(WIN32_REGISTRY_DLL).dll
WIN32_RESOURCES = $(INSTALL_BIN_DIRECTORY)\$(WIN32_RESOURCES_DLL).dll
WIN32_RICH_EDIT = $(INSTALL_BIN_DIRECTORY)\$(WIN32_RICH_EDIT_DLL).dll
WIN32_SHELL = $(INSTALL_BIN_DIRECTORY)\$(WIN32_SHELL_DLL).dll
WIN32_USER = $(INSTALL_BIN_DIRECTORY)\$(WIN32_USER_DLL).dll
WIN32_VERSION = $(INSTALL_BIN_DIRECTORY)\$(WIN32_VERSION_DLL).dll

GTK = $(INSTALL_BIN_DIRECTORY)\gtk.dll
GTK_LIB = $(INSTALL_LIB_DIRECTORY)\gtk-1.3.lib

NETWORK = $(INSTALL_BIN_DIRECTORY)\$(NETWORK_DLL).dll
SQL_ODBC = $(INSTALL_BIN_DIRECTORY)\$(SQL_ODBC_DLL).dll

COM = $(INSTALL_BIN_DIRECTORY)\$(COM_DLL).dll
OLE_AUTOMATION = $(INSTALL_BIN_DIRECTORY)\$(OLE_AUTOMATION_DLL).dll
OLE_CONTAINER = $(INSTALL_BIN_DIRECTORY)\$(OLE_CONTAINER_DLL).dll
OLE_CONTROL_FRAMEWORK = $(INSTALL_BIN_DIRECTORY)\$(OLE_CONTROL_FRAMEWORK_DLL).dll
OLE_DIALOGS = $(INSTALL_BIN_DIRECTORY)\$(OLE_DIALOGS_DLL).dll
OLE_SERVER = $(INSTALL_BIN_DIRECTORY)\$(OLE_SERVER_DLL).dll
DUIM_OLE_CONTAINER = $(INSTALL_BIN_DIRECTORY)\$(DUIM_OLE_CONTAINER_DLL).dll
DUIM_OLE_CONTROL = $(INSTALL_BIN_DIRECTORY)\$(DUIM_OLE_CONTROL_DLL).dll
DUIM_OLE_SERVER = $(INSTALL_BIN_DIRECTORY)\$(DUIM_OLE_SERVER_DLL).dll

DYLAN_ORB = $(INSTALL_BIN_DIRECTORY)\$(DYLAN_ORB_DLL).dll
NAMING_CLIENT = $(INSTALL_BIN_DIRECTORY)\$(NAMING_CLIENT_DLL).dll

MIDI = $(INSTALL_BIN_DIRECTORY)\$(MIDI_DLL).dll

TESTWORKS = $(INSTALL_BIN_DIRECTORY)/$(TESTWORKS_DLL).dll
TESTWORKS_SPECS = $(INSTALL_BIN_DIRECTORY)\$(TESTWORKS_SPECS_DLL).dll
GUI_TESTWORKS = $(INSTALL_BIN_DIRECTORY)\$(GUI_TESTWORKS_DLL).dll

CORBA_DYLAN = $(BUILD_DIRECTORY)\corba-dylan\$(BUILD_MAKEFILE)
CORBA_PROTOCOL = $(BUILD_DIRECTORY)\corba-protocol\$(BUILD_MAKEFILE)
IOP_PROTOCOL = $(BUILD_DIRECTORY)\iop-protocol\$(BUILD_MAKEFILE)
IR_STUBS = $(BUILD_DIRECTORY)\ir-stubs\$(BUILD_MAKEFILE)
ORB_CONNECTIONS = $(BUILD_DIRECTORY)\orb-connections\$(BUILD_MAKEFILE)
ORB_CORE = $(BUILD_DIRECTORY)\orb-core\$(BUILD_MAKEFILE)
ORB_IIOP = $(BUILD_DIRECTORY)\orb-iiop\$(BUILD_MAKEFILE)
ORB_IR = $(BUILD_DIRECTORY)\orb-ir\$(BUILD_MAKEFILE)
ORB_POA = $(BUILD_DIRECTORY)\orb-poa\$(BUILD_MAKEFILE)
ORB_STREAMS = $(BUILD_DIRECTORY)\orb-streams\$(BUILD_MAKEFILE)
ORB_UTILITIES = $(BUILD_DIRECTORY)\orb-utilities\$(BUILD_MAKEFILE)
PORTABLESERVER_PROTOCOL = $(BUILD_DIRECTORY)\portableserver-protocol\$(BUILD_MAKEFILE)

C_LEXER = $(INSTALL_BIN_DIRECTORY)\c-lexer.dll
COMMAND_SHELL = $(INSTALL_BIN_DIRECTORY)\command-shell.dll
GRAMMAR_COMPILER = $(INSTALL_BIN_DIRECTORY)\grammar-compiler.dll
PARSER_RUN_TIME = $(INSTALL_BIN_DIRECTORY)\parser-run-time.dll
T_LISTS = $(INSTALL_BIN_DIRECTORY)\t-lists.dll
TOOL_PARSER_GENERATOR = $(INSTALL_BIN_DIRECTORY)\tool-parser-generator.dll

CONSOLE_SCEPTER = $(INSTALL_BIN_DIRECTORY)\console-scepter.exe
NAMING_SERVICE = $(INSTALL_BIN_DIRECTORY)\naming-service.exe
TOOL_SCEPTER = $(INSTALL_BIN_DIRECTORY)\tool-scepter.dll

REMOTE_ACCESS_PATH = $(INSTALL_BIN_DIRECTORY)\remote-access-path.dll
REMOTE_NUB_CLIENT = $(INSTALL_BIN_DIRECTORY)\remote-nub-client.dll
REMOTE_NUB = $(INSTALL_BIN_DIRECTORY)\remote-nub.exe
DEBUGGER_SERVER = $(INSTALL_BIN_DIRECTORY)\debugger-server.exe

BINARY_BUILDER = $(INSTALL_BIN_DIRECTORY)\binary-builder.dll
BINARY_MANAGER = $(INSTALL_BIN_DIRECTORY)\binary-manager.dll
BUILD_SYSTEM = $(INSTALL_BIN_DIRECTORY)\build-system.dll
CCL_LINKER = $(INSTALL_BIN_DIRECTORY)\ccl-linker.dll
COFF_BUILDER = $(INSTALL_BIN_DIRECTORY)\coff-builder.dll
COFF_DEBUG = $(INSTALL_BIN_DIRECTORY)\coff-debug.dll
COFF_MANAGER = $(INSTALL_BIN_DIRECTORY)\coff-manager.dll
DFMC_BROWSER_SUPPORT = $(INSTALL_BIN_DIRECTORY)\dfmc-browser-support.dll
DFMC_C_FILE_COMPILER = $(INSTALL_BIN_DIRECTORY)\dfmc-c-file-compiler.dll
DFMC_DEBUG_BACK_END = $(INSTALL_BIN_DIRECTORY)\dfmc-debug-back-end.dll
DFMC_EXECUTION = $(INSTALL_BIN_DIRECTORY)\dfmc-execution.dll
DFMC_INTERPRETER_FILE_COMPILER = $(INSTALL_BIN_DIRECTORY)\dfmc-interpreter-file-compiler.dll
DFMC_MANAGEMENT = $(INSTALL_BIN_DIRECTORY)\dfmc-management.dll
DFMC_PENTIUM_FILE_COMPILER = $(INSTALL_BIN_DIRECTORY)\dfmc-pentium-file-compiler.dll
DFMC_PENTIUM_HARP_CG = $(INSTALL_BIN_DIRECTORY)\dfmc-pentium-harp-cg.dll
DFMC_SHELL = $(INSTALL_BIN_DIRECTORY)\dfmc-shell.dll
FILE_SOURCE_RECORDS = $(INSTALL_BIN_DIRECTORY)\file-source-records.dll
ELF_LINKER = $(INSTALL_BIN_DIRECTORY)\elf-linker.dll
HD2C_DFMC_SHELL = $(INSTALL_BIN_DIRECTORY)\hd2c-dfmc-shell.dll
INTERPRETER_DFMC_SHELL = $(INSTALL_BIN_DIRECTORY)\interpreter-dfmc-shell.dll
LICENSING = $(INSTALL_BIN_DIRECTORY)\licensing.dll
METERING = $(INSTALL_BIN_DIRECTORY)\metering.dll
MOTLEY = $(INSTALL_BIN_DIRECTORY)\motley.dll
RELEASE_INFO = $(INSTALL_BIN_DIRECTORY)\release-info.dll
TOOLS_INTERFACE = $(INSTALL_BIN_DIRECTORY)\tools-interface.dll
USER_PROJECTS = $(INSTALL_BIN_DIRECTORY)\user-projects.dll

DEBUGGER_NUB = $(INSTALL_LIB_DIRECTORY)\devnub.lib
DEVEL_DBG_UI_BUILD = $(OPEN_DYLAN_USER_BUILD)\devel-dbg-ui
DEBUGGER_MANAGER = $(INSTALL_BIN_DIRECTORY)\debugger-manager.dll
DISASM = $(INSTALL_BIN_DIRECTORY)\disasm.dll
DISPATCH_PROFILER = $(INSTALL_BIN_DIRECTORY)\dispatch-profiler.dll
INTERACTIVE_DOWNLOADER = $(INSTALL_BIN_DIRECTORY)\interactive-downloader.dll
SIMPLE_DOWNLOADER = $(INSTALL_BIN_DIRECTORY)\simple-downloader.dll
WDBGDYLAN = $(INSTALL_BIN_DIRECTORY)\wdbgdylan.dll
DBGHELP = $(INSTALL_BIN_DIRECTORY)\dbghelp.dll

DYLAN_ENVIRONMENT = $(INSTALL_BIN_DIRECTORY)\dylan-environment.dll
ENVIRONMENT_APPLICATION_COMMANDS = $(INSTALL_BIN_DIRECTORY)\environment-application-commands.dll
ENVIRONMENT_COMMANDS = $(INSTALL_BIN_DIRECTORY)\environment-commands.dll
ENVIRONMENT_DEBUGGER = $(INSTALL_BIN_DIRECTORY)\environment-debugger.dll
ENVIRONMENT_DEUCE = $(INSTALL_BIN_DIRECTORY)\environment-deuce.dll
ENVIRONMENT_FRAMEWORK = $(INSTALL_BIN_DIRECTORY)\environment-protocols.dll
ENVIRONMENT_INTERNAL_COMMANDS = $(INSTALL_BIN_DIRECTORY)\environment-internal-commands.dll
ENVIRONMENT_PROFILER = $(INSTALL_BIN_DIRECTORY)\environment-profiler.dll
ENVIRONMENT_PROJECT_WIZARD = $(INSTALL_BIN_DIRECTORY)\environment-project-wizard.dll
ENVIRONMENT_PROPERTY_PAGES = $(INSTALL_BIN_DIRECTORY)\environment-property-pages.dll
ENVIRONMENT_SERVER = $(INSTALL_BIN_DIRECTORY)\environment-server.dll
ENVIRONMENT_TOOLS = $(INSTALL_BIN_DIRECTORY)\environment-tools.dll
BASIC_ENVIRONMENT_PROJECT_WIZARD = $(INSTALL_BIN_DIRECTORY)\basic-environment-project-wizard.dll
TARGET_APPLICATION = $(INSTALL_BIN_DIRECTORY)\target-application.dll

INTERACTIVE_COMPILER = $(INSTALL_BIN_DIRECTORY)\interactive-compiler.exe

BASIC_RELEASE_INFO = $(INSTALL_BIN_DIRECTORY)\basic-release-info.dll
BASIC_PENTIUM_DW = $(INSTALL_BIN_DIRECTORY)\basic-pentium-dw.exe
BASIC_CONSOLE_COMPILER = $(INSTALL_BIN_DIRECTORY)\basic-console-compiler.exe
BASIC_CONSOLE_ENVIRONMENT = $(INSTALL_BIN_DIRECTORY)\basic-console-environment.exe
BASIC_WIN32_ENVIRONMENT = $(INSTALL_BIN_DIRECTORY)\basic-win32-environment.exe
BASIC_GTK_ENVIRONMENT = $(INSTALL_BIN_DIRECTORY)\basic-gtk-environment.exe
BASIC_BATCH_DEBUG = $(INSTALL_BIN_DIRECTORY)\basic-batch-debug.exe

ENHANCED_RELEASE_INFO = $(INSTALL_BIN_DIRECTORY)\enhanced-release-info.dll
ENHANCED_PENTIUM_DW = $(INSTALL_BIN_DIRECTORY)\enhanced-pentium-dw.exe
ENHANCED_CONSOLE_COMPILER = $(INSTALL_BIN_DIRECTORY)\enhanced-console-compiler.exe
ENHANCED_CONSOLE_ENVIRONMENT = $(INSTALL_BIN_DIRECTORY)\enhanced-console-environment.exe
ENHANCED_WIN32_ENVIRONMENT = $(INSTALL_BIN_DIRECTORY)\enhanced-win32-environment.exe
ENHANCED_GTK_ENVIRONMENT = $(INSTALL_BIN_DIRECTORY)\enhanced-gtk-environment.exe
ENHANCED_BATCH_DEBUG = $(INSTALL_BIN_DIRECTORY)\enhanced-batch-debug.exe

COLLECTIONS_TEST_SUITE = $(INSTALL_BIN_DIRECTORY)\collections-test-suite.dll
COMMON_DYLAN_TEST_SUITE_APP = $(INSTALL_BIN_DIRECTORY)\common-dylan-test-suite-app.exe
COMMON_DYLAN_TEST_SUITE = $(INSTALL_BIN_DIRECTORY)\common-dylan-test-suite.dll
CMU_TEST_SUITE = $(INSTALL_BIN_DIRECTORY)\cmu-test-suite.exe
DYLAN_TEST_SUITE = $(INSTALL_BIN_DIRECTORY)\dylan-test-suite.dll
DYLAN_TEST_SUITE_APP = $(INSTALL_BIN_DIRECTORY)\dylan-test-suite-app.exe
FUNCTIONAL_DYLAN_TEST_SUITE = $(INSTALL_BIN_DIRECTORY)\functional-dylan-test-suite.dll
FUNCTIONAL_DYLAN_TEST_SUITE_APP = $(INSTALL_BIN_DIRECTORY)\functional-dylan-test-suite-app.exe
TESTWORKS_TEST_SUITE = $(INSTALL_BIN_DIRECTORY)\testworks-test-suite.dll
C_FFI_TEST_SUITE_APP = $(INSTALL_BIN_DIRECTORY)\c-ffi-test-suite-app.exe
LIBRARIES_TEST_SUITE = $(INSTALL_BIN_DIRECTORY)\libraries-test-suite.dll
LIBRARIES_TEST_SUITE_APP = $(INSTALL_BIN_DIRECTORY)\libraries-test-suite-app.exe
PENTIUM_TEST_SUITE_APP = $(INSTALL_BIN_DIRECTORY)\pentium-test-suite-app.exe
SOCKETS_TEST_SUITE = $(INSTALL_BIN_DIRECTORY)\sockets-test-suite.dll
IO_TEST_SUITE = $(INSTALL_BIN_DIRECTORY)\io-test-suite.dll
SYSTEM_TEST_SUITE = $(INSTALL_BIN_DIRECTORY)\system-test-suite.dll

DUIM_TEST_SUITE = $(INSTALL_BIN_DIRECTORY)\duim-test-suite.dll
DUIM_TEST_SUITE_APP = $(INSTALL_BIN_DIRECTORY)\duim-test-suite-app.exe
DUIM_GUI_TEST_SUITE = $(INSTALL_BIN_DIRECTORY)\duim-gui-test-suite.exe
GTK_DUIM_GUI_TEST_SUITE = $(INSTALL_BIN_DIRECTORY)\gtk-duim-gui-test-suite.exe
WIN32_DUIM_GUI_TEST_SUITE = $(INSTALL_BIN_DIRECTORY)\win32-duim-gui-test-suite.exe
WIN32_DUIM_REGRESSION_TEST_SUITE = $(INSTALL_BIN_DIRECTORY)\win32-duim-regression-test-suite.dll
WIN32_UTIL_TEST = $(INSTALL_BIN_DIRECTORY)\win32-util-test.dll

DEUCE_TEST_SUITE = $(INSTALL_BIN_DIRECTORY)\deuce-test-suite.dll
DEUCE_TEST_SUITE_APP = $(INSTALL_BIN_DIRECTORY)\deuce-test-suite-app.exe

OLE_TEST = $(INSTALL_BIN_DIRECTORY)\ole-test.exe
OLE_COCLASS_TEST = $(INSTALL_BIN_DIRECTORY)\ole-coclass-test.exe
OLE_MACRO_TEST = $(INSTALL_BIN_DIRECTORY)\ole-macro-test.exe
SQL_ODBC_TEST = $(INSTALL_BIN_DIRECTORY)\sql-odbc-test.exe

CHANNELS_TESTS = $(INSTALL_BIN_DIRECTORY)\channels-tests.dll
DFMC_ENVIRONMENT_TEST_SUITE = $(INSTALL_BIN_DIRECTORY)\dfmc-environment-test-suite.dll
DFMC_ENVIRONMENT_TEST_SUITE_APP = $(INSTALL_BIN_DIRECTORY)\dfmc-environment-test-suite-app.exe
WARNINGS_TEST_SUITE = $(INSTALL_BIN_DIRECTORY)\warnings-test-suite.dll

CONSOLE_SCEPTER_TESTS = $(INSTALL_BIN_DIRECTORY)\console-scepter-tests.exe
CORBA_TESTS_CLIENT_APP = $(INSTALL_BIN_DIRECTORY)\corba-tests-client-app.exe
CORBA_TESTS_SERVER_APP = $(INSTALL_BIN_DIRECTORY)\corba-tests-server-app.exe

CN2 = $(INSTALL_BIN_DIRECTORY)\cn2.exe
FFT_TEST = $(INSTALL_BIN_DIRECTORY)\fft-test.exe

MINIMAL_DYLAN_PLAYGROUND = $(INSTALL_BIN_DIRECTORY)\minimal-dylan-playground.exe
DYLAN_PLAYGROUND = $(INSTALL_BIN_DIRECTORY)\dylan-playground.exe
GUI_DYLAN_PLAYGROUND = $(INSTALL_BIN_DIRECTORY)\gui-dylan-playground.exe

FACTORIAL_BIG = $(INSTALL_BIN_DIRECTORY)\factorial-big.exe
FACTORIAL_SMALL = $(INSTALL_BIN_DIRECTORY)\factorial-small.exe
HELLO_WORLD = $(INSTALL_BIN_DIRECTORY)\hello-world.exe
TOWERS_OF_HANOI = $(INSTALL_BIN_DIRECTORY)\towers-of-hanoi.exe

WINDOWS_FFI_EXAMPLE = $(INSTALL_BIN_DIRECTORY)\windows-ffi-example.exe
WINDOWS_GADGETS_EXAMPLE = $(INSTALL_BIN_DIRECTORY)\windows-gadgets-example.exe
WINDOWS_RESOURCE_EXAMPLE = $(INSTALL_BIN_DIRECTORY)\windows-resource-example.exe

DUIM_RESOURCE_EXAMPLE = $(INSTALL_BIN_DIRECTORY)\duim-resource-example.exe
INTERFACE_BUILDER = $(INSTALL_BIN_DIRECTORY)\interface-builder.exe
LIFE = $(INSTALL_BIN_DIRECTORY)\life.exe
REVERSI = $(INSTALL_BIN_DIRECTORY)\reversi.exe
PENTE = $(INSTALL_BIN_DIRECTORY)\pente.exe
SCRIBBLE = $(INSTALL_BIN_DIRECTORY)\scribble.exe
STANDALONE_DEUCE = $(INSTALL_BIN_DIRECTORY)\standalone-deuce.exe
TETRIS = $(INSTALL_BIN_DIRECTORY)\tetris.exe
TIC_TAC_TOE = $(INSTALL_BIN_DIRECTORY)\tic-tac-toe.exe
WINDOWS_VIEWER = $(INSTALL_BIN_DIRECTORY)\windows-viewer.exe
WIN32_SCRIBBLE = $(INSTALL_BIN_DIRECTORY)\win32-scribble.exe

PLONKER = $(INSTALL_BIN_DIRECTORY)\plonker.exe

ASP_VIEW = $(INSTALL_BIN_DIRECTORY)\asp-view.exe
SAMPLE_AUTOMATION_CONTROLLER = $(INSTALL_BIN_DIRECTORY)\sample-automation-controller.exe
SAMPLE_AUTOMATION_SERVER = $(INSTALL_BIN_DIRECTORY)\sample-automation-server.exe
SAMPLE_OLE_CONTAINER = $(INSTALL_BIN_DIRECTORY)\sample-ole-container.exe
SAMPLE_OLE_SERVER = $(INSTALL_BIN_DIRECTORY)\sample-ole-server.exe
WIN32_INVISIBLE_CONTROL = $(INSTALL_BIN_DIRECTORY)\win32-invisible-control.dll
WIN32_OLE_CONTAINER = $(INSTALL_BIN_DIRECTORY)\win32-ole-container.exe
WIN32_OLE_SERVER = $(INSTALL_BIN_DIRECTORY)\win32-ole-server.exe
SQL_EXAMPLE = $(INSTALL_BIN_DIRECTORY)\sql-example.exe

BUTTON_OCX = $(INSTALL_BIN_DIRECTORY)\button-ocx.exe
OLE_SCRIBBLE = $(INSTALL_BIN_DIRECTORY)\ole-scribble.exe
OCX_SCRIBBLE = $(INSTALL_BIN_DIRECTORY)\ocx-scribble.exe
SAMPLE_DUIM_CONTAINER = $(INSTALL_BIN_DIRECTORY)\sample-duim-container.exe

DAYTIME_CLIENT = $(INSTALL_BIN_DIRECTORY)\daytime-client.exe
DAYTIME_SERVER = $(INSTALL_BIN_DIRECTORY)\daytime-server.exe
ECHO_CLIENT = $(INSTALL_BIN_DIRECTORY)\echo-client.exe
ECHO_SERVER = $(INSTALL_BIN_DIRECTORY)\echo-server.exe
SIMPLE_DAYTIME_CLIENT = $(INSTALL_BIN_DIRECTORY)\simple-daytime-client.exe
SIMPLE_DAYTIME_SERVER = $(INSTALL_BIN_DIRECTORY)\simple-daytime-server.exe

#
# Targets
#

htmlhelp: $(HTMLHELP)
pentium-run-time: $(PENTIUM_RUN_TIME)

big-integers: $(BIG_INTEGERS)
c-ffi: $(C_FFI)
collections: $(COLLECTIONS)
common-dylan: $(COMMON_DYLAN)
dylan: $(DYLAN)
functional-dylan: $(FUNCTIONAL_DYLAN)
io: $(IO)
network: $(NETWORK)
system: $(SYSTEM)

c-lexer: $(C_LEXER)
channels: $(CHANNELS)
commands: $(COMMANDS)
command-shell: $(COMMAND_SHELL)
grammar-compiler: $(GRAMMAR_COMPILER)
midi: $(MIDI)
parser-run-time: $(PARSER_RUN_TIME)
t-lists: $(T_LISTS)

win32-common: $(WIN32_COMMON)
win32-controls: $(WIN32_CONTROLS)
win32-dde: $(WIN32_DDE)
win32-dialog: $(WIN32_DIALOG)
win32-gdi: $(WIN32_GDI)
win32-gl: $(WIN32_GL)
win32-glu: $(WIN32_GLU)
win32-html-help: $(WIN32_HTML_HELP)
win32-kernel: $(WIN32_KERNEL)
win32-multimedia: $(WIN32_MULTIMEDIA)
win32-registry: $(WIN32_REGISTRY)
win32-resources: $(WIN32_RESOURCES)
win32-rich-edit: $(WIN32_RICH_EDIT)
win32-shell: $(WIN32_SHELL)
win32-user: $(WIN32_USER)
win32-version: $(WIN32_VERSION)

gtk-lib: $(GTK_LIB)
gtk: $(GTK)

duim-sheets: $(DUIM_SHEETS)
duim-core: $(DUIM_CORE)
duim: $(DUIM)
gtk-duim: $(GTK_DUIM)

deuce: $(DEUCE)
duim-deuce: $(DUIM_DEUCE)

testworks: $(TESTWORKS)
testworks-specs: $(TESTWORKS_SPECS)
gui-testworks: $(GUI_TESTWORKS)

com: $(COM)
ole-automation: $(OLE_AUTOMATION)
ole-container: $(OLE_CONTAINER)
ole-control-framework: $(OLE_CONTROL_FRAMEWORK)
ole-dialogs: $(OLE_DIALOGS)
ole-server: $(OLE_SERVER)

duim-ole-container: $(DUIM_OLE_CONTAINER)
duim-ole-control: $(DUIM_OLE_CONTROL)
duim-ole-server: $(DUIM_OLE_SERVER)

sql-odbc: $(SQL_ODBC)

binary-builder: $(BINARY_BUILDER)
binary-manager: $(BINARY_MANAGER)
build-system: $(BUILD_SYSTEM)
ccl-linker: $(CCL_LINKER)
coff-builder: $(COFF_BUILDER)
coff-debug: $(COFF_DEBUG)
coff-manager: $(COFF_MANAGER)
dfmc-browser-support: $(DFMC_BROWSER_SUPPORT)
dfmc-c-file-compiler: $(DFMC_C_FILE_COMPILER)
dfmc-debug-back-end: $(DFMC_DEBUG_BACK_END)
dfmc-execution: $(DFMC_EXECUTION)
dfmc-interpreter-file-compiler: $(DFMC_INTERPRETER_FILE_COMPILER)
dfmc-management: $(DFMC_MANAGEMENT)
dfmc-pentium-file-compiler: $(DFMC_PENTIUM_FILE_COMPILER)
dfmc-pentium-harp-cg: $(DFMC_PENTIUM_HARP_CG)
dfmc-shell: $(DFMC_SHELL)
dood: $(DOOD)
file-source-records: $(FILE_SOURCE_RECORDS)
elf-linker: $(ELF_LINKER)
hd2c-dfmc-shell: $(HD2C_DFMC_SHELL)
interpreter-dfmc-shell: $(INTERPRETER_DFMC_SHELL)
licensing: $(LICENSING)
metering: $(METERING)
motley: $(MOTLEY)
release-info: $(RELEASE_INFO)
tool-parser-generator: $(TOOL_PARSER_GENERATOR)
tools-interface: $(TOOLS_INTERFACE)
user-projects: $(USER_PROJECTS)

disasm: $(DISASM)
dispatch-profiler: $(DISPATCH_PROFILER)
debugger-nub: $(DEBUGGER_NUB)
debugger-manager: $(DEBUGGER_MANAGER)
dylan-environment: $(DYLAN_ENVIRONMENT)
environment-application-commands: $(ENVIRONMENT_APPLICATION_COMMANDS)
environment-commands: $(ENVIRONMENT_COMMANDS)
environment-debugger: $(ENVIRONMENT_DEBUGGER)
environment-deuce: $(ENVIRONMENT_DEUCE)
environment-internal-commands: $(ENVIRONMENT_INTERNAL_COMMANDS)
environment-profiler: $(ENVIRONMENT_PROFILER)
environment-project-wizard: $(ENVIRONMENT_PROJECT_WIZARD)
environment-property-pages: $(ENVIRONMENT_PROPERTY_PAGES)
environment-server: $(ENVIRONMENT_SERVER)
environment-tools: $(ENVIRONMENT_TOOLS)
interactive-downloader: $(INTERACTIVE_DOWNLOADER)
basic-environment-project-wizard: $(BASIC_ENVIRONMENT_PROJECT_WIZARD)
simple-downloader: $(SIMPLE_DOWNLOADER)
target-application: $(TARGET_APPLICATION)

batch-debug: $(BATCH_DEBUG)
console-debugger: devel-dbg-ui
create-id: $(CREATE_ID)
devel-dbg-ui: $(DEVEL_DBG_UI)
dfmc: pentium-dw
dll-wrap: $(DLL_WRAP)
dw: $(DW)
interpreter: $(INTERPRETER)
map-statistics: $(MAP_STATISTICS)
parser-compiler: $(PARSER_COMPILER)
pentium-dw: $(PENTIUM_DW)
test-report: $(TEST_REPORT)

project-manager-libraries: tools-interface user-projects
core-compiler-libraries: file-source-records release-info dood metering binary-manager coff-manager binary-builder coff-builder build-system parser-run-time dfmc-management dfmc-browser-support project-manager-libraries dfmc-execution dfmc-debug-back-end licensing
pentium-compiler-libraries: core-compiler-libraries disasm dfmc-pentium-harp-cg dfmc-pentium-file-compiler
c-compiler-libraries: core-compiler-libraries dfmc-c-file-compiler
pentium-dw-libraries: pentium-compiler-libraries command-shell dfmc-shell dispatch-profiler
console-scepter-libraries: console-scepter tool-scepter
console-compiler-libraries: pentium-compiler-libraries environment-commands
database-libraries: sql-odbc
debugger: debugger-manager binary-manager coff-manager coff-debug devel-dbg-ui batch-debug
duim-ole: duim-ole-container duim-ole-server duim-ole-control
environment: deuce duim-deuce dfmc-environment environment-commands environment-application-commands environment-internal-commands environment-server environment-tools environment-property-pages environment-deuce environment-project-wizard environment-profiler debugger-manager target-application binary-manager coff-manager interactive-downloader environment-debugger dylan-environment win32-environment with-splash-screen
ole-libraries: com ole-server ole-automation ole-control-framework ole-container ole-dialogs
testworks-libraries: testworks testworks-specs gui-testworks
user-libraries: dylan common-dylan functional-dylan c-ffi system collections io commands
win32-libraries: win32-common win32-kernel win32-gdi win32-user win32-dde win32-dialog win32-controls win32-gl win32-glu win32-html-help win32-multimedia win32-registry win32-resources win32-rich-edit win32-version win32-shell
remote-debugger: remote-nub debugger-server

# CORBA targets

corba-dylan: $(CORBA_DYLAN)
corba-protocol: $(CORBA_PROTOCOL)
dylan-orb: $(DYLAN_ORB)
iop-protocol: $(IOP_PROTOCOL)
ir-stubs: $(IR_STUBS)
orb-connections: $(ORB_CONNECTIONS)
orb-core: $(ORB_CORE)
orb-iiop: $(ORB_IIOP)
orb-ir: $(ORB_IR)
orb-poa: $(ORB_POA)
orb-streams: $(ORB_STREAMS)
orb-utilities: $(ORB_UTILITIES)
portableserver-protocol: $(PORTABLESERVER_PROTOCOL)
naming-client: $(NAMING_CLIENT)

console-scepter: $(CONSOLE_SCEPTER)
naming-service: $(NAMING_SERVICE)
tool-scepter: $(TOOL_SCEPTER)

# Remote Debugger targets

remote-access-path: $(REMOTE_ACCESS_PATH)
remote-nub-client: $(REMOTE_NUB_CLIENT)
remote-nub: $(REMOTE_NUB)
debugger-server: $(DEBUGGER_SERVER)

# Testing targets

c-ffi-test-suite-app: $(C_FFI_TEST_SUITE_APP)
cmu-test-suite: $(CMU_TEST_SUITE)
collections-test-suite: $(COLLECTIONS_TEST_SUITE)
common-dylan-test-suite-app: $(COMMON_DYLAN_TEST_SUITE_APP)
common-dylan-test-suite: $(COMMON_DYLAN_TEST_SUITE)
dylan-test-suite-app: $(DYLAN_TEST_SUITE_APP)
dylan-test-suite: $(DYLAN_TEST_SUITE)
functional-dylan-test-suite-app: $(FUNCTIONAL_DYLAN_TEST_SUITE_APP)
functional-dylan-test-suite: $(FUNCTIONAL_DYLAN_TEST_SUITE)
io-test-suite: $(IO_TEST_SUITE)
libraries-test-suite-app: $(LIBRARIES_TEST_SUITE_APP)
libraries-test-suite: $(LIBRARIES_TEST_SUITE)
pentium-test-suite-app: $(PENTIUM_TEST_SUITE_APP)
sockets-test-suite: $(SOCKETS_TEST_SUITE)
system-test-suite: $(SYSTEM_TEST_SUITE)
testworks-test-suite: $(TESTWORKS_TEST_SUITE)

win32-util-test: $(WIN32_UTIL_TEST)

duim-test-suite: $(DUIM_TEST_SUITE)
duim-test-suite-app: $(DUIM_TEST_SUITE_APP)
duim-gui-test-suite: $(DUIM_GUI_TEST_SUITE)
gtk-duim-gui-test-suite: $(GTK_DUIM_GUI_TEST_SUITE)
win32-duim-regression-test-suite: $(WIN32_DUIM_REGRESSION_TEST_SUITE)
win32-duim-gui-test-suite: $(WIN32_DUIM_GUI_TEST_SUITE)

deuce-test-suite: $(DEUCE_TEST_SUITE)
deuce-test-suite-app: $(DEUCE_TEST_SUITE_APP)

ole-test: $(OLE_TEST)
ole-coclass-test: $(OLE_COCLASS_TEST)
ole-macro-test: $(OLE_MACRO_TEST)
sql-odbc-test: $(SQL_ODBC_TEST)

channels-tests: $(CHANNELS_TESTS)
dfmc-environment-test-suite: $(DFMC_ENVIRONMENT_TEST_SUITE)
dfmc-environment-test-suite-app: $(DFMC_ENVIRONMENT_TEST_SUITE_APP)

testworks-libraries: testworks testworks-specs gui-testworks
duim-test-suites: duim-test-suite-app duim-gui-test-suite win32-duim-gui-test-suite win32-duim-regression-test-suite
test-suites: libraries-test-suite-app duim-test-suites
pentium-test-suites: pentium-test-suite-app
ole-test-suites: ole-test ole-coclass-test ole-macro-test
database-test-suites: sql-odbc-test
environment-test-suites: channels-tests dfmc-environment-test-suite-app

console-scepter-tests: $(CONSOLE_SCEPTER_TESTS)
corba-tests-client-app: $(CORBA_TESTS_CLIENT_APP)
corba-tests-server-app: $(CORBA_TESTS_SERVER_APP)

basic-test-suites: test-suites
enhanced-test-suites: basic-test-suites ole-test-suites database-test-suites

test-basic-release: test-libraries test-win32-libraries test-duim test-deuce test-compiler test-environment
test-enhanced-release: test-basic-release test-ole test-odbc test-corba
test-internal-release: test-enhanced-release
test-minimal-internal-release: test-basic-release
test-releases: test-internal-release


# Benchmark targets

cn2: $(CN2)
fft-test: $(FFT_TEST)

basic-benchmarks: cn2 fft-test
enhanced-benchmarks: basic-benchmarks
internal-benchmarks: enhanced-benchmarks


# Example project targets

factorial-big-project: $(FACTORIAL_BIG_PROJECT)
factorial-small-project: $(FACTORIAL_SMALL_PROJECT)
hello-world-project: $(HELLO_WORLD_PROJECT)

windows-ffi-example-project: $(WINDOWS_FFI_EXAMPLE_PROJECT)
windows-gadgets-example-project: $(WINDOWS_GADGETS_EXAMPLE_PROJECT)
windows-resource-example-project: $(WINDOWS_RESOURCE_EXAMPLE_PROJECT)

database-stress-tool-project: $(DATABASE_STRESS_TOOL_PROJECT)
database-viewer-project: $(DATABASE_VIEWER_PROJECT)
duim-gl-demo-project: $(DUIM_GL_DEMO_PROJECT)
duim-gui-test-suite-project: $(DUIM_GUI_TEST_SUITE_PROJECT)
duim-resource-example-project: $(DUIM_RESOURCE_EXAMPLE_PROJECT)
flying-squares-project: $(FLYING_SQUARES_PROJECT)
interface-builder-project: $(INTERFACE_BUILDER_PROJECT)
life-project: $(LIFE_PROJECT)
pente-project: $(PENTE_PROJECT)
reversi-project: $(REVERSI_PROJECT)
scribble-project: $(SCRIBBLE_PROJECT)
standalone-deuce-project: $(STANDALONE_DEUCE_PROJECT)
tetris-project: $(TETRIS_PROJECT)
tic-tac-toe-project: $(TIC_TAC_TOE_PROJECT)
win32-duim-gui-test-suite-project: $(WIN32_DUIM_GUI_TEST_SUITE_PROJECT)
win32-scribble-project: $(WIN32_SCRIBBLE_PROJECT)

plonker-project: $(PLONKER_PROJECT)

sample-automation-controller-project: $(SAMPLE_AUTOMATION_CONTROLLER_PROJECT)
sample-automation-server-project: $(SAMPLE_AUTOMATION_SERVER_PROJECT)
sample-ole-container-project: $(SAMPLE_OLE_CONTAINER_PROJECT)
sample-ole-server-project: $(SAMPLE_OLE_SERVER_PROJECT)
win32-invisible-control-project: $(WIN32_INVISIBLE_CONTROL_PROJECT)
win32-ole-container-project: $(WIN32_OLE_CONTAINER_PROJECT)
win32-ole-server-project: $(WIN32_OLE_SERVER_PROJECT)

button-ocx-project: $(BUTTON_OCX_PROJECT)
ole-scribble-project: $(OLE_SCRIBBLE_PROJECT)
ocx-scribble-project: $(OCX_SCRIBBLE_PROJECT)
sample-duim-container-project: $(SAMPLE_DUIM_CONTAINER_PROJECT)

doc-reversi-project: $(DOC_REVERSI_PROJECT)

console-example-projects: hello-world-project factorial-small-project factorial-big-project
win32-example-projects: windows-ffi-example-project windows-gadgets-example-project
duim-example-projects: interface-builder-project life-project reversi-project pente-project scribble-project tetris-project tic-tac-toe-project duim-resource-example-project duim-gui-test-suite-project win32-duim-gui-test-suite-project  win32-scribble-project standalone-deuce-project
duim-ole-example-projects: button-ocx-project ole-scribble-project ocx-scribble-project sample-duim-container-project
ole-example-projects: win32-ole-server-project sample-automation-controller-project sample-automation-server-project sample-ole-container-project win32-invisible-control-project
#   Removed from above: sample-ole-server-project
midi-projects: plonker
network-example-projects: daytime-client-project daytime-server-project echo-client-project echo-server-project simple-daytime-client-project simple-daytime-server-project

install-runtime-dlls: $(REDISTRIBUTABLE_DIRECTORY)

install-source-templates: $(SOURCE_TEMPLATES_INSTALL_DIRECTORY)
install-bug-report-template: $(BUG_REPORT_TEMPLATE)

install-templates: install-source-templates install-bug-report-template
install-wdbgdylan: $(WDBGDYLAN)
install-dbghelp: $(DBGHELP)

install-examples-css: $(EXAMPLES_CSS_INSTALL_FILE)
install-hello-world: $(HELLO_WORLD_INSTALL_DIRECTORY)
install-factorial-examples: $(FACTORIAL_EXAMPLES_INSTALL_DIRECTORY)
install-towers-of-hanoi: $(TOWERS_OF_HANOI_INSTALL_DIRECTORY)
install-windows-ffi-example: $(WINDOWS_FFI_EXAMPLE_INSTALL_DIRECTORY)
install-windows-gadgets-example: $(WINDOWS_GADGETS_EXAMPLE_INSTALL_DIRECTORY)

install-database-stress-tool: $(DATABASE_STRESS_TOOL_INSTALL_DIRECTORY)
install-database-viewer: $(DATABASE_VIEWER_INSTALL_DIRECTORY)
install-duim-gl-demo: $(DUIM_GL_DEMO_INSTALL_DIRECTORY)
install-duim-gui-test-suite: $(DUIM_GUI_TEST_SUITE_INSTALL_DIRECTORY)
install-duim-resource-example: $(DUIM_RESOURCE_EXAMPLE_INSTALL_DIRECTORY)
install-flying-squares: $(FLYING_SQUARES_INSTALL_DIRECTORY)
install-interface-builder: $(INTERFACE_BUILDER_INSTALL_DIRECTORY)
install-life: $(LIFE_INSTALL_DIRECTORY)
install-reversi: $(REVERSI_INSTALL_DIRECTORY)
install-pente: $(PENTE_INSTALL_DIRECTORY)
install-scribble: $(SCRIBBLE_INSTALL_DIRECTORY)
install-standalone-deuce: $(STANDALONE_DEUCE_INSTALL_DIRECTORY)
install-tetris: $(TETRIS_INSTALL_DIRECTORY)
install-tic-tac-toe: $(TIC_TAC_TOE_INSTALL_DIRECTORY)
install-windows-viewer: $(WINDOWS_VIEWER_INSTALL_DIRECTORY)
install-win32-duim-gui-test-suite: $(WIN32_DUIM_GUI_TEST_SUITE_INSTALL_DIRECTORY)
install-win32-scribble: $(WIN32_SCRIBBLE_INSTALL_DIRECTORY)

install-plonker: $(PLONKER_INSTALL_DIRECTORY)

install-asp-view: $(ASP_VIEW_INSTALL_DIRECTORY)
install-com-bank-demo: $(COM_BANK_DEMO_INSTALL_DIRECTORY)
install-win32-ole-container: $(WIN32_OLE_CONTAINER_INSTALL_DIRECTORY)
install-win32-ole-server-examples: $(WIN32_OLE_SERVER_EXAMPLES_INSTALL_DIRECTORY)
install-sample-automation-controller: $(SAMPLE_AUTOMATION_CONTROLLER_INSTALL_DIRECTORY)
install-automation-server-examples: $(AUTOMATION_SERVER_EXAMPLES_INSTALL_DIRECTORY)
install-sample-ole-container: $(SAMPLE_OLE_CONTAINER_INSTALL_DIRECTORY)
install-sample-ole-server: $(SAMPLE_OLE_SERVER_INSTALL_DIRECTORY)
install-win32-invisible-control: $(WIN32_INVISIBLE_CONTROL_INSTALL_DIRECTORY)

install-button-ocx: $(BUTTON_OCX_INSTALL_DIRECTORY)
install-ole-scribble: $(OLE_SCRIBBLE_INSTALL_DIRECTORY)
install-ocx-scribble: $(OCX_SCRIBBLE_INSTALL_DIRECTORY)
install-sample-duim-container: $(SAMPLE_DUIM_CONTAINER_INSTALL_DIRECTORY)

install-doc-airport: $(DOC_AIRPORT_INSTALL_DIRECTORY)
install-doc-reversi: $(DOC_REVERSI_INSTALL_DIRECTORY)
install-doc-rotnexample: $(DOC_ROTNEXAMPLE_INSTALL_DIRECTORY)
install-doc-task-list-2: $(DOC_TASK_LIST_1_INSTALL_DIRECTORY)
install-doc-task-list-1: $(DOC_TASK_LIST_2_INSTALL_DIRECTORY)
install-doc-task-list: install-doc-task-list-1 install-doc-task-list-2

install-corba-hello-world: $(CORBA_HELLO_WORLD_INSTALL_DIRECTORY)
install-corba-bank-demo: $(CORBA_BANK_DEMO_INSTALL_DIRECTORY)
install-corba-pente: $(CORBA_PENTE_INSTALL_DIRECTORY)
install-chat-demo: $(CHAT_DEMO_INSTALL_DIRECTORY)

install-daytime-client: $(DAYTIME_CLIENT_INSTALL_DIRECTORY)
install-daytime-server: $(DAYTIME_SERVER_INSTALL_DIRECTORY)
install-echo-client: $(ECHO_CLIENT_INSTALL_DIRECTORY)
install-echo-server: $(ECHO_SERVER_INSTALL_DIRECTORY)
install-simple-daytime-client: $(SIMPLE_DAYTIME_CLIENT_INSTALL_DIRECTORY)
install-simple-daytime-server: $(SIMPLE_DAYTIME_SERVER_INSTALL_DIRECTORY)

install-console-examples: install-hello-world install-factorial-examples install-towers-of-hanoi
install-win32-examples: install-windows-ffi-example install-windows-gadgets-example
install-database-examples: install-database-viewer install-database-stress-tool
install-duim-examples: install-duim-gl-demo install-duim-gui-test-suite install-duim-resource-example install-flying-squares install-interface-builder install-life install-reversi install-pente install-scribble install-tic-tac-toe install-tetris install-windows-viewer install-win32-duim-gui-test-suite install-win32-scribble install-standalone-deuce
install-duim-ole-examples: install-button-ocx install-ole-scribble install-ocx-scribble install-sample-duim-container
install-ole-examples: install-asp-view install-com-bank-demo install-win32-ole-server-examples install-win32-ole-container install-win32-invisible-control install-sample-automation-controller install-automation-server-examples install-sample-ole-server install-sample-ole-container 
install-corba-examples: install-corba-hello-world install-corba-bank-demo install-corba-pente install-chat-demo
install-midi-examples: install-plonker
install-network-examples: install-daytime-client install-daytime-server install-echo-client install-echo-server install-simple-daytime-client install-simple-daytime-server

install-basic-doc-examples: install-doc-airport install-doc-reversi install-doc-task-list
install-enhanced-doc-examples: install-doc-rotnexample

# Example targets

minimal-dylan-playground: $(MINIMAL_DYLAN_PLAYGROUND)
dylan-playground: $(DYLAN_PLAYGROUND)
gui-dylan-playground: $(GUI_DYLAN_PLAYGROUND)

factorial-big: $(FACTORIAL_BIG)
factorial-small: $(FACTORIAL_SMALL)
hello-world: $(HELLO_WORLD)
towers-of-hanoi: $(TOWERS_OF_HANOI)

duim-resource-example: $(DUIM_RESOURCE_EXAMPLE)
interface-builder: $(INTERFACE_BUILDER)
life: $(LIFE)
reversi: $(REVERSI)
pente: $(PENTE)
scribble: $(SCRIBBLE)
standalone-deuce: $(STANDALONE_DEUCE)
tetris: $(TETRIS)
tic-tac-toe: $(TIC_TAC_TOE)
windows-viewer: $(WINDOWS_VIEWER)
win32-scribble: $(WIN32_SCRIBBLE)

plonker: $(PLONKER)

windows-ffi-example: $(WINDOWS_FFI_EXAMPLE)
windows-gadgets-example: $(WINDOWS_GADGETS_EXAMPLE)
windows-resource-example: $(WINDOWS_RESOURCE_EXAMPLE)

asp-view: $(ASP_VIEW)
sample-automation-controller: $(SAMPLE_AUTOMATION_CONTROLLER)
sample-automation-server: $(SAMPLE_AUTOMATION_SERVER)
sample-ole-container: $(SAMPLE_OLE_CONTAINER)
sample-ole-server: $(SAMPLE_OLE_SERVER)
win32-invisible-control: $(WIN32_INVISIBLE_CONTROL)
win32-ole-container: $(WIN32_OLE_CONTAINER)
win32-ole-server: $(WIN32_OLE_SERVER)

button-ocx: $(BUTTON_OCX)
ole-scribble: $(OLE_SCRIBBLE)
ocx-scribble: $(OCX_SCRIBBLE)
sample-duim-container: $(SAMPLE_DUIM_CONTAINER)

sql-example: $(SQL_EXAMPLE)

daytime-client: $(DAYTIME_CLIENT)
daytime-server: $(DAYTIME_SERVER)
echo-client: $(ECHO_CLIENT)
echo-server: $(ECHO_SERVER)
simple-daytime-client: $(SIMPLE_DAYTIME_CLIENT)
simple-daytime-server: $(SIMPLE_DAYTIME_SERVER)

console-examples: hello-world factorial-small factorial-big
win32-examples: windows-ffi-example windows-gadgets-example windows-resource-example
ole-examples: win32-ole-server sample-automation-controller sample-automation-server sample-ole-container sample-ole-server win32-invisible-control
duim-examples: interface-builder life reversi pente scribble tetris tic-tac-toe duim-resource-example windows-viewer win32-scribble standalone-deuce
duim-ole-examples: button-ocx ole-scribble ocx-scribble sample-duim-container
midi-examples: plonker
network-examples: daytime-client daytime-server echo-client echo-client echo-server simple-daytime-client simple-daytime-server


#
# Release targets
#

basic-release-info: $(BASIC_RELEASE_INFO)
basic-pentium-dw: $(BASIC_PENTIUM_DW)
basic-compiler: pentium-dw-libraries basic-release-info basic-pentium-dw
basic-console-compiler-exe: $(BASIC_CONSOLE_COMPILER)
basic-console-compiler: console-compiler-libraries basic-release-info basic-console-compiler-exe
basic-console-environment: $(BASIC_CONSOLE_ENVIRONMENT)
basic-win32-environment: $(BASIC_WIN32_ENVIRONMENT)
basic-gtk-environment: $(BASIC_GTK_ENVIRONMENT)
basic-batch-debug: $(BASIC_BATCH_DEBUG)
basic-environment: basic-console-environment basic-win32-environment with-splash-screen
basic-libraries: user-libraries win32-libraries duim
basic-example-projects: console-example-projects duim-example-projects win32-example-projects
install-basic-examples: install-examples-css install-console-examples install-duim-examples install-win32-examples install-basic-doc-examples install-templates
basic-examples: console-examples duim-examples win32-examples
basic-tools: install-wdbgdylan dll-wrap minimal-dylan-playground dylan-playground gui-dylan-playground
basic-release: basic-release-info basic-console-compiler basic-compiler basic-environment basic-libraries basic-tools install-runtime-dlls install-basic-examples

enhanced-release-info: $(ENHANCED_RELEASE_INFO)
enhanced-pentium-dw: $(ENHANCED_PENTIUM_DW)
enhanced-compiler: pentium-dw-libraries enhanced-release-info motley t-lists c-lexer console-scepter-libraries enhanced-pentium-dw
enhanced-console-compiler-exe: $(ENHANCED_CONSOLE_COMPILER)
enhanced-console-compiler: console-compiler-libraries enhanced-release-info motley t-lists c-lexer console-scepter-libraries enhanced-console-compiler-exe
enhanced-console-environment: $(ENHANCED_CONSOLE_ENVIRONMENT)
enhanced-win32-environment: $(ENHANCED_WIN32_ENVIRONMENT)
enhanced-gtk-environment: $(ENHANCED_GTK_ENVIRONMENT)
enhanced-batch-debug: $(ENHANCED_BATCH_DEBUG)
enhanced-environment: enhanced-console-environment enhanced-win32-environment with-splash-screen
enhanced-libraries: basic-libraries ole-libraries duim-ole database-libraries network dylan-orb naming-client
enhanced-example-projects: basic-example-projects ole-example-projects duim-ole-example-projects network-example-projects corba-example-projects
install-enhanced-examples: install-basic-examples install-database-examples install-ole-examples install-duim-ole-examples install-network-examples install-corba-examples install-enhanced-doc-examples
enhanced-examples: basic-examples ole-examples duim-ole-examples network-examples
enhanced-tools: basic-tools create-id console-scepter naming-service remote-debugger
enhanced-release: enhanced-release-info enhanced-console-compiler enhanced-compiler enhanced-environment enhanced-libraries enhanced-tools install-runtime-dlls install-enhanced-examples

release-info: $(RELEASE_INFO)
compiler: pentium-dw-libraries release-info motley t-lists c-lexer console-scepter-libraries pentium-dw
hd2c: c-compiler-libraries command-shell hd2c-dfmc-shell dispatch-profiler release-info dw
internal-compiler: compiler
interactive-compiler: $(INTERACTIVE_COMPILER)
console-compiler-exe: $(CONSOLE_COMPILER)
console-compiler: console-compiler-libraries release-info environment-internal-commands motley t-lists c-lexer console-scepter-libraries console-compiler-exe
console-environment: $(CONSOLE_ENVIRONMENT)
win32-environment: $(WIN32_ENVIRONMENT)
gtk-environment: $(GTK_ENVIRONMENT)
with-splash-screen: $(WITH_SPLASH_SCREEN)
internal-environment: console-environment win32-environment with-splash-screen
internal-libraries: enhanced-libraries midi
internal-example-projects: enhanced-example-projects
install-internal-examples: install-enhanced-examples install-midi-examples
internal-only-tools: testworks-libraries test-report debugger map-statistics parser-compiler # hd2c interpreter
internal-tools: enhanced-tools internal-only-tools
internal-release: release-info console-compiler compiler internal-environment internal-libraries internal-tools install-runtime-dlls install-internal-examples

reinstall-internal-examples:
  $(REMOVE_DIRECTORY) $(EXAMPLES_INSTALL_DIRECTORY)
  $(MAKE) install-internal-examples

minimal-pentium-dw: $(MINIMAL_PENTIUM_DW)
minimal-compiler: pentium-dw-libraries release-info minimal-pentium-dw
minimal-console-compiler-exe: $(MINIMAL_CONSOLE_COMPILER)
minimal-console-compiler: console-compiler-libraries release-info environment-internal-commands minimal-console-compiler-exe
minimal-console-environment: $(MINIMAL_CONSOLE_ENVIRONMENT)
minimal-win32-environment: $(MINIMAL_WIN32_ENVIRONMENT)
minimal-gtk-environment: $(MINIMAL_GTK_ENVIRONMENT)
minimal-internal-environment: minimal-console-environment minimal-win32-environment with-splash-screen
minimal-internal-release: release-info minimal-console-compiler minimal-compiler minimal-internal-environment basic-libraries basic-tools internal-only-tools install-runtime-dlls install-basic-examples

releases: internal-release basic-release enhanced-release

#
# Clean
#
# Is there a good way to clean out just a piece of the system?
#

clean-generation:
  $(ENSURE_DIRECTORY) $(OPEN_DYLAN_USER_BUILD)
  $(REMOVE_DIRECTORY) $(OPEN_DYLAN_USER_BUILD)
  $(ENSURE_DIRECTORY) $(INSTALL_BIN_DIRECTORY)
  $(REMOVE_DIRECTORY) $(INSTALL_BIN_DIRECTORY)
  $(ENSURE_DIRECTORY) $(REDISTRIBUTABLE_DIRECTORY)
  $(REMOVE_DIRECTORY) $(REDISTRIBUTABLE_DIRECTORY)
  $(ENSURE_DIRECTORY) $(INSTALL_LIB_DIRECTORY)
  $(REMOVE_DIRECTORY) $(INSTALL_LIB_DIRECTORY)
  $(ENSURE_DIRECTORY) $(DATABASES_DIRECTORY)
  $(REMOVE_DIRECTORY) $(DATABASES_DIRECTORY)
  $(ENSURE_DIRECTORY) $(EXAMPLES_INSTALL_DIRECTORY)
  $(REMOVE_DIRECTORY) $(EXAMPLES_INSTALL_DIRECTORY)
  $(REMOVE) $(LOGS_DIRECTORY)\compile-*.log
  $(REMOVE) $(LOGS_DIRECTORY)\generate-*.log
  $(REMOVE) $(LOGS_DIRECTORY)\import-*.log
  $(REMOVE) $(LOGS_DIRECTORY)\make-*.log
  $(ENSURE_RELEASE_AREA)

clean-all:
  $(ENSURE_DIRECTORY) $(SOURCES_DIRECTORY)\bootstrap1-registry
  $(REMOVE_DIRECTORY) $(SOURCES_DIRECTORY)\bootstrap1-registry
  $(ENSURE_DIRECTORY) $(OPEN_DYLAN_USER_ROOT)\Bootstrap.1
  $(REMOVE_DIRECTORY) $(OPEN_DYLAN_USER_ROOT)\Bootstrap.1
  $(ENSURE_DIRECTORY) $(OPEN_DYLAN_USER_ROOT)\Bootstrap.2
  $(REMOVE_DIRECTORY) $(OPEN_DYLAN_USER_ROOT)\Bootstrap.2
  $(ENSURE_DIRECTORY) $(OPEN_DYLAN_USER_ROOT)\Build
  $(REMOVE_DIRECTORY) $(OPEN_DYLAN_USER_ROOT)\Build
  $(ENSURE_DIRECTORY) $(OPEN_DYLAN_USER_ROOT)\Bin
  $(REMOVE_DIRECTORY) $(OPEN_DYLAN_USER_ROOT)\Bin
  $(ENSURE_DIRECTORY) $(OPEN_DYLAN_USER_ROOT)\Redistributable
  $(REMOVE_DIRECTORY) $(OPEN_DYLAN_USER_ROOT)\Redistributable
  $(ENSURE_DIRECTORY) $(OPEN_DYLAN_USER_ROOT)\Lib
  $(REMOVE_DIRECTORY) $(OPEN_DYLAN_USER_ROOT)\Lib
  $(ENSURE_DIRECTORY) $(OPEN_DYLAN_USER_ROOT)\Databases
  $(REMOVE_DIRECTORY) $(OPEN_DYLAN_USER_ROOT)\Databases
  $(ENSURE_DIRECTORY) $(OPEN_DYLAN_USER_ROOT)\Examples
  $(REMOVE_DIRECTORY) $(OPEN_DYLAN_USER_ROOT)\Examples
  $(REMOVE) $(OPEN_DYLAN_USER_ROOT)\logs\compile-*.log
  $(REMOVE) $(OPEN_DYLAN_USER_ROOT)\logs\generate-*.log
  $(REMOVE) $(OPEN_DYLAN_USER_ROOT)\logs\import-*.log
  $(REMOVE) $(OPEN_DYLAN_USER_ROOT)\logs\make-*.log
  $(ENSURE_RELEASE_AREA)

#--- andrewa: too dangerous for those working from home!
# force-all:
#   $(ENSURE_DIRECTORY) $(OPEN_DYLAN_USER_ROOT)
#   $(REMOVE_DIRECTORY) $(OPEN_DYLAN_USER_ROOT)

#
# Check out sources (in alphabetical order)
#

checkout-benchmarks:
  $(ENSURE_RELEASE_AREA)
  $(CHECKOUT) benchmarks fundev/Sources/benchmarks $(BENCHMARKS_DIRECTORY)

checkout-big-integers:
  $(ENSURE_RELEASE_AREA)
  $(ENSURE_DIRECTORY) $(LIB_DIRECTORY)
  $(CHECKOUT) generic-arithmetic fundev/Sources/lib/generic-arithmetic $(GENERIC_ARITHMETIC_SOURCE)
  $(CHECKOUT) big-integers fundev/Sources/lib/big-integers $(BIG_INTEGERS_SOURCE)

checkout-install-bin:
  $(ENSURE_DIRECTORY) $(INSTALL_BIN_SOURCE)\..
  $(CHECKOUT) install-x86-win32-bin fundev/install/x86-win32/bin $(INSTALL_BIN_SOURCE)

checkout-build-x86-win32:
  $(ENSURE_DIRECTORY) $(BUILD_DIRECTORY)
  $(CHECKOUT) build-x86-win32 fundev/build/x86-win32 $(BUILD_X86_WIN32_SOURCE)

checkout-build-system:
  $(ENSURE_RELEASE_AREA)
  $(ENSURE_DIRECTORY) $(LIB_DIRECTORY)
  $(CHECKOUT) build-system fundev/Sources/lib/build-system $(BUILD_SYSTEM_SOURCE)

checkout-c-ffi:
  $(ENSURE_RELEASE_AREA)
  $(ENSURE_DIRECTORY) $(LIB_DIRECTORY)
  $(CHECKOUT) c-ffi fundev/Sources/lib/c-ffi $(C_FFI_SOURCE)

checkout-c-lexer:
  $(ENSURE_RELEASE_AREA)
  $(ENSURE_DIRECTORY) $(LIB_DIRECTORY)
  $(CHECKOUT) c-lexer fundev/Sources/lib/c-lexer $(C_LEXER_SOURCE)

checkout-channels:
  $(ENSURE_RELEASE_AREA)
  $(ENSURE_DIRECTORY) $(LIB_DIRECTORY)
  $(CHECKOUT) channels fundev/Sources/lib/channels $(CHANNELS_SOURCE)

checkout-channels-tests:
  $(ENSURE_RELEASE_AREA)
  $(ENSURE_DIRECTORY) $(CHANNELS_SOURCE)
  $(CHECKOUT) channels-tests fundev/Sources/lib/channels/tests $(CHANNELS_TESTS_SOURCE)

checkout-collections:
  $(ENSURE_RELEASE_AREA)
  $(ENSURE_DIRECTORY) $(SOURCES_DIRECTORY)
  $(CHECKOUT) collections fundev/Sources/collections $(COLLECTIONS_DIRECTORY)

checkout-collections-tests-suite:
  $(ENSURE_RELEASE_AREA)
  $(ENSURE_DIRECTORY) $(COLLECTIONS_DIRECTORY)
  $(CHECKOUT) collections-tests fundev/Sources/collections/tests $(COLLECTIONS_TESTS_SOURCE)

checkout-command-shell:
  $(ENSURE_RELEASE_AREA)
  $(ENSURE_DIRECTORY) $(LIB_DIRECTORY)
  $(CHECKOUT) command-shell fundev/Sources/lib/command-shell $(COMMAND_SHELL_SOURCE)

checkout-commands:
  $(ENSURE_RELEASE_AREA)
  $(ENSURE_DIRECTORY) $(LIB_DIRECTORY)
  $(CHECKOUT) commands fundev/Sources/lib/commands $(COMMANDS_SOURCE)

checkout-common-dylan:
  $(ENSURE_RELEASE_AREA)
  $(ENSURE_DIRECTORY) $(SOURCES_DIRECTORY)
  $(CHECKOUT) common-dylan fundev/Sources/common-dylan $(COMMON_DYLAN_SOURCE)

checkout-common-dylan-test-suite:
  $(ENSURE_RELEASE_AREA)
  $(ENSURE_DIRECTORY) $(COMMON_DYLAN_SOURCE)
  $(CHECKOUT) common-dylan-tests fundev/Sources/common-dylan/tests $(COMMON_DYLAN_TESTS_SOURCE)

checkout-corba:
  $(ENSURE_RELEASE_AREA)
  $(ENSURE_DIRECTORY) $(SOURCES_DIRECTORY)
  $(CHECKOUT) corba fundev/Sources/corba $(CORBA_DIRECTORY)
  $(ENSURE_WRITEABLE_HDP_FILES) $(CORBA_DIRECTORY)

checkout-corba-demos:
  $(ENSURE_RELEASE_AREA)
  $(ENSURE_DIRECTORY) $(CORBA_DIRECTORY)
  $(CHECKOUT) corba-demos fundev/Sources/corba/demos $(CORBA_DEMOS_SOURCE)
  $(ENSURE_WRITEABLE_HDP_FILES) $(CORBA_DEMOS_SOURCE)

checkout-corba-tests:
  $(ENSURE_RELEASE_AREA)
  $(ENSURE_DIRECTORY) $(CORBA_DIRECTORY)
  $(CHECKOUT) corba-tests fundev/Sources/corba/tests $(CORBA_TESTS_SOURCE)
  $(ENSURE_WRITEABLE_HDP_FILES) $(CORBA_TESTS_SOURCE)

checkout-create-id:
  $(ENSURE_RELEASE_AREA)
  $(ENSURE_DIRECTORY) $(APP_DIRECTORY)
  $(CHECKOUT) create-id fundev/Sources/app/create-id $(CREATE_ID_SOURCE)

checkout-cmu-test-suite:
  $(ENSURE_RELEASE_AREA)
  $(ENSURE_DIRECTORY) $(CMU_SOURCE)
  $(CHECKOUT) cmu-test-suite fundev/Sources/partners/cmu/cmu-test-suite $(CMU_TEST_SUITE_SOURCE)

checkout-console-examples:
  $(ENSURE_RELEASE_AREA)
  $(ENSURE_DIRECTORY) $(EXAMPLES_DIRECTORY)
  $(CHECKOUT) console-examples fundev/Sources/examples/console $(CONSOLE_EXAMPLES_SOURCE)

checkout-database-stress-tool:
  $(ENSURE_RELEASE_AREA)
  $(ENSURE_DIRECTORY) $(DATABASES_SOURCE)
  $(CHECKOUT) database-stress-tool fundev/Sources/databases/tests/stress-tool $(DATABASE_STRESS_TOOL_SOURCE)

checkout-database-viewer:
  $(ENSURE_RELEASE_AREA)
  $(ENSURE_DIRECTORY) $(DATABASE_EXAMPLES_DIRECTORY)
  $(CHECKOUT) database-viewer fundev/Sources/examples/odbc/database-viewer $(DATABASE_VIEWER_SOURCE)

checkout-databases:
  $(ENSURE_RELEASE_AREA)
  $(ENSURE_DIRECTORY) $(SOURCES_DIRECTORY)
  $(CHECKOUT) databases fundev/Sources/databases $(DATABASES_SOURCE)

checkout-deuce:
  $(ENSURE_RELEASE_AREA)
  $(ENSURE_DIRECTORY) $(SOURCES_DIRECTORY)
  $(CHECKOUT) deuce fundev/Sources/deuce $(DEUCE_SOURCE)

checkout-deuce-tests:
  $(ENSURE_RELEASE_AREA)
  $(ENSURE_DIRECTORY) $(DEUCE_SOURCE)
  $(CHECKOUT) deuce-tests fundev/Sources/deuce/tests $(DEUCE_TESTS_SOURCE)

checkout-dfmc:
  $(ENSURE_RELEASE_AREA)
  $(ENSURE_DIRECTORY) $(SOURCES_DIRECTORY)
  $(CHECKOUT) dfmc fundev/Sources/dfmc $(DFMC_SOURCE)

checkout-disasm:
  $(ENSURE_RELEASE_AREA)
  $(ENSURE_DIRECTORY) $(LIB_DIRECTORY)
  $(CHECKOUT) disasm fundev/Sources/lib/disasm $(DISASM_SOURCE)

checkout-dispatch-profiler:
  $(ENSURE_RELEASE_AREA)
  $(ENSURE_DIRECTORY) $(LIB_DIRECTORY)
  $(CHECKOUT) dispatch-profiler fundev/Sources/lib/dispatch-profiler $(DISPATCH_PROFILER_SOURCE)

checkout-dll-wrap:
  $(ENSURE_RELEASE_AREA)
  $(ENSURE_DIRECTORY) $(APP_DIRECTORY)
  $(CHECKOUT) dll-wrap fundev/Sources/app/dll-wrap $(DLL_WRAP_SOURCE)

checkout-dood:
  $(ENSURE_RELEASE_AREA)
  $(ENSURE_DIRECTORY) $(LIB_DIRECTORY)
  $(CHECKOUT) dood fundev/Sources/lib/dood $(DOOD_SOURCE)

checkout-doc-examples:
  $(ENSURE_RELEASE_AREA)
  $(ENSURE_DIRECTORY) $(EXAMPLES_DIRECTORY)
  $(CHECKOUT) documentation-examples fundev/Sources/examples/documentation $(DOCUMENTATION_EXAMPLES_SOURCE)

checkout-documentation-examples: checkout-doc-examples

checkout-duim:
  $(ENSURE_RELEASE_AREA)
  $(ENSURE_DIRECTORY) $(SOURCES_DIRECTORY)
  $(CHECKOUT) duim fundev/Sources/duim $(DUIM_DIRECTORY)

checkout-duim-examples:
  $(ENSURE_RELEASE_AREA)
  $(ENSURE_DIRECTORY) $(DUIM_DIRECTORY)
  $(CHECKOUT) duim-examples fundev/Sources/duim/examples $(DUIM_EXAMPLES_SOURCE)

checkout-duim-gl-demo:
  $(ENSURE_RELEASE_AREA)
  $(ENSURE_DIRECTORY) $(APP_DIRECTORY)
  $(CHECKOUT) duim-gl-demo fundev/Sources/app/duim-gl-demo $(DUIM_GL_DEMO_SOURCE)

checkout-duim-tests:
  $(ENSURE_RELEASE_AREA)
  $(ENSURE_DIRECTORY) $(DUIM_DIRECTORY)
  $(CHECKOUT) duim-tests fundev/Sources/duim/tests $(DUIM_TESTS_SOURCE)

checkout-dw:
  $(ENSURE_RELEASE_AREA)
  $(ENSURE_DIRECTORY) $(APP_DIRECTORY)
  $(CHECKOUT) dw fundev/Sources/app/dw $(DW_SOURCE)

checkout-dylan:
  $(ENSURE_RELEASE_AREA)
  $(ENSURE_DIRECTORY) $(SOURCES_DIRECTORY)
  $(CHECKOUT) dylan fundev/Sources/dylan $(DYLAN_SOURCE)

checkout-dylan-playground:
  $(ENSURE_RELEASE_AREA)
  $(ENSURE_DIRECTORY) $(APP_DIRECTORY)
  $(CHECKOUT) dylan-playground fundev/Sources/app/dylan-playground $(DYLAN_PLAYGROUND_SOURCE)

checkout-dylan-test-suite:
  $(ENSURE_RELEASE_AREA)
  $(ENSURE_DIRECTORY) $(QA_DIRECTORY)
  $(CHECKOUT) dylan-test-suite fundev/Sources/dylan/tests $(DYLAN_TEST_SUITE_SOURCE)

checkout-environment:
  $(ENSURE_RELEASE_AREA)
  $(ENSURE_DIRECTORY) $(SOURCES_DIRECTORY)
  $(CHECKOUT) environment fundev/Sources/environment $(ENVIRONMENT_SOURCE)

checkout-environment-tests:
  $(ENSURE_RELEASE_AREA)
  $(ENSURE_DIRECTORY) $(ENVIRONMENT_SOURCE)
  $(CHECKOUT) environment-tests fundev/Sources/environment/tests $(ENVIRONMENT_TESTS_SOURCE)

checkout-examples-css:
  $(ENSURE_RELEASE_AREA)
  $(ENSURE_DIRECTORY) $(EXAMPLES_DIRECTORY)
  $(CHECKOUT) examples-css fundev/Sources/examples $(EXAMPLES_DIRECTORY) examples.css

checkout-factorial:
  $(ENSURE_RELEASE_AREA)
  $(ENSURE_DIRECTORY) $(APP_DIRECTORY)
  $(CHECKOUT) factorial fundev/Sources/app/factorial $(FACTORIAL_SOURCE)

checkout-flying-squares:
  $(ENSURE_RELEASE_AREA)
  $(ENSURE_DIRECTORY) $(APP_DIRECTORY)
  $(CHECKOUT) flying-squares fundev/Sources/app/flying-squares $(FLYING_SQUARES_SOURCE)

checkout-gnu:
  $(ENSURE_RELEASE_AREA)
  $(ENSURE_DIRECTORY) $(SOURCES_DIRECTORY)
  $(CHECKOUT) gnu fundev/Sources/gnu $(GNU_DIRECTORY)

checkout-grammar-compiler:
  $(ENSURE_RELEASE_AREA)
  $(ENSURE_DIRECTORY) $(LIB_DIRECTORY)
  $(CHECKOUT) grammar-compiler fundev/Sources/lib/grammar-compiler $(GRAMMAR_COMPILER_SOURCE)

checkout-gui-testworks:
  $(ENSURE_RELEASE_AREA)
  $(ENSURE_DIRECTORY) $(QA_DIRECTORY)
  $(CHECKOUT) gui-testworks fundev/Sources/qa/gui-testworks $(GUI_TESTWORKS_SOURCE)

checkout-functional-dylan:
  $(ENSURE_RELEASE_AREA)
  $(ENSURE_DIRECTORY) $(SOURCES_DIRECTORY)
  $(CHECKOUT) functional-dylan fundev/Sources/functional-dylan $(FUNCTIONAL_DYLAN_SOURCE)

checkout-functional-dylan-test-suite:
  $(ENSURE_RELEASE_AREA)
  $(ENSURE_DIRECTORY) $(FUNCTIONAL_DYLAN_SOURCE)
  $(CHECKOUT) functional-dylan-tests fundev/Sources/functional-dylan/tests $(FUNCTIONAL_DYLAN_TESTS_SOURCE)

checkout-harp:
  $(ENSURE_RELEASE_AREA)
  $(ENSURE_DIRECTORY) $(SOURCES_DIRECTORY)
  $(CHECKOUT) harp fundev/Sources/harp $(HARP_SOURCE)

checkout-hello-world:
  $(ENSURE_RELEASE_AREA)
  $(ENSURE_DIRECTORY) $(APP_DIRECTORY)
  $(CHECKOUT) hello-world fundev/Sources/app/hello-world $(HELLO_WORLD_SOURCE)

checkout-install-lib:
  $(ENSURE_RELEASE_AREA)
  $(ENSURE_DIRECTORY) $(INSTALL_LIB_SOURCE)\..
  $(CHECKOUT) install-x86-win32-lib fundev/install/x86-win32/lib $(INSTALL_LIB_SOURCE)

checkout-io:
  $(ENSURE_RELEASE_AREA)
  $(ENSURE_DIRECTORY) $(SOURCES_DIRECTORY)
  $(CHECKOUT) io fundev/Sources/io $(IO_DIRECTORY)

checkout-io-test-suite:
  $(ENSURE_RELEASE_AREA)
  $(ENSURE_DIRECTORY) $(IO_DIRECTORY)
  $(CHECKOUT) io-tests fundev/Sources/io/tests $(IO_TESTS_SOURCE)

checkout-library-packs:
  $(ENSURE_RELEASE_AREA)
  $(ENSURE_DIRECTORY) $(SOURCES_DIRECTORY)
  $(CHECKOUT) library-packs fundev/Sources/Library-Packs $(LIBRARY_PACKS_DIRECTORY)

checkout-licensing:
  $(ENSURE_RELEASE_AREA)
  $(ENSURE_DIRECTORY) $(LIB_DIRECTORY)
  $(CHECKOUT) licensing fundev/Sources/lib/licensing $(LICENSING_SOURCE)

checkout-map-statistics:
  $(ENSURE_RELEASE_AREA)
  $(ENSURE_DIRECTORY) $(TOOLS_DIRECTORY)
  $(CHECKOUT) map-statistics fundev/Sources/tools/map-statistics $(MAP_STATISTICS_SOURCE)

checkout-memory-manager:
  $(ENSURE_RELEASE_AREA)
  $(ENSURE_DIRECTORY) $(LIB_DIRECTORY)
  $(CHECKOUT) memory-manager fundev/Sources/lib/memory-manager $(MEMORY_MANAGER_SOURCE)

checkout-metering:
  $(ENSURE_RELEASE_AREA)
  $(ENSURE_DIRECTORY) $(LIB_DIRECTORY)
  $(CHECKOUT) metering fundev/Sources/lib/metering $(METERING_SOURCE)

checkout-midi:
  $(ENSURE_RELEASE_AREA)
  $(ENSURE_DIRECTORY) $(LIB_DIRECTORY)
  $(CHECKOUT) midi fundev/Sources/lib/midi $(MIDI_SOURCE)

checkout-motley:
  $(ENSURE_RELEASE_AREA)
  $(ENSURE_DIRECTORY) $(LIB_DIRECTORY)
  $(CHECKOUT) motley fundev/Sources/lib/motley $(MOTLEY_SOURCE)

checkout-naming-service:
  $(ENSURE_RELEASE_AREA)
  $(ENSURE_DIRECTORY) $(CORBA_SERVICES_DIRECTORY)
  $(CHECKOUT) corba-naming-service fundev/Sources/corba/services/naming $(NAMING_SERVICE_SOURCE)

checkout-network:
  $(ENSURE_RELEASE_AREA)
  $(ENSURE_DIRECTORY) $(SOURCES_DIRECTORY)
  $(CHECKOUT) network fundev/Sources/network $(NETWORK_DIRECTORY)

checkout-network-examples:
  $(ENSURE_RELEASE_AREA)
  $(ENSURE_DIRECTORY) $(NETWORK_DIRECTORY)
  $(CHECKOUT) network-examples fundev/Sources/network/examples $(NETWORK_EXAMPLES_SOURCE)

checkout-ole:
  $(ENSURE_RELEASE_AREA)
  $(ENSURE_DIRECTORY) $(SOURCES_DIRECTORY)
  $(CHECKOUT) ole fundev/Sources/ole $(OLE_DIRECTORY)

checkout-ole-automation-tests:
  $(ENSURE_RELEASE_AREA)
  $(ENSURE_DIRECTORY) $(OLE_AUTOMATION_SOURCE)
  $(CHECKOUT) ole-automation-tests fundev/Sources/ole/ole-automation/tests $(OLE_AUTOMATION_TESTS_SOURCE)

checkout-ole-examples:
  $(ENSURE_RELEASE_AREA)
  $(ENSURE_DIRECTORY) $(OLE_DIRECTORY)
  $(CHECKOUT) ole-examples fundev/Sources/ole/examples $(OLE_EXAMPLES_DIRECTORY)

checkout-orb:
  $(ENSURE_RELEASE_AREA)
  $(ENSURE_DIRECTORY) $(CORBA_DIRECTORY)
  $(CHECKOUT) orb fundev/Sources/corba/orb $(ORB_SOURCE)
  $(ENSURE_WRITEABLE_HDP_FILES) $(ORB_SOURCE)

checkout-parser-generator:
  $(ENSURE_RELEASE_AREA)
  $(ENSURE_DIRECTORY) $(LIB_DIRECTORY)
  $(CHECKOUT) parser-generator fundev/Sources/lib/parser-generator $(PARSER_GENERATOR_SOURCE)

checkout-parser-compiler:
  $(ENSURE_RELEASE_AREA)
  $(ENSURE_DIRECTORY) $(APP_DIRECTORY)
  $(CHECKOUT) parser-compiler fundev/Sources/app/parser-compiler $(PARSER_COMPILER_SOURCE)

checkout-parser-run-time:
  $(ENSURE_RELEASE_AREA)
  $(ENSURE_DIRECTORY) $(LIB_DIRECTORY)
  $(CHECKOUT) parser-run-time fundev/Sources/lib/parser-run-time $(PARSER_RUN_TIME_SOURCE)

checkout-pentium-run-time:
  $(ENSURE_RELEASE_AREA)
  $(ENSURE_DIRECTORY) $(LIB_DIRECTORY)
  $(CHECKOUT) run-time fundev/Sources/lib/run-time $(RUN_TIME_SOURCE)
  $(CHECKOUT) pentium-run-time fundev/Sources/lib/run-time/pentium-win32 $(PENTIUM_RUN_TIME_SOURCE)

checkout-plonker:
  $(ENSURE_RELEASE_AREA)
  $(ENSURE_DIRECTORY) $(APP_DIRECTORY)
  $(CHECKOUT) plonker fundev/Sources/app/plonker $(PLONKER_SOURCE)

checkout-ppml:
  $(ENSURE_RELEASE_AREA)
  $(ENSURE_DIRECTORY) $(LIB_DIRECTORY)
  $(CHECKOUT) ppml fundev/Sources/lib/ppml $(PPML_SOURCE)

checkout-project-manager:
  $(ENSURE_RELEASE_AREA)
  $(ENSURE_DIRECTORY) $(SOURCES_DIRECTORY)
  $(CHECKOUT) project-manager fundev/Sources/project-manager $(PROJECT_MANAGER_SOURCE)

checkout-qa-scripts:
  $(ENSURE_RELEASE_AREA)
  $(ENSURE_DIRECTORY) $(QA_DIRECTORY)
  $(CHECKOUT) qa-scripts fundev/Sources/qa/scripts $(QA_SCRIPTS_SOURCE)

checkout-release-info:
  $(ENSURE_RELEASE_AREA)
  $(ENSURE_DIRECTORY) $(LIB_DIRECTORY)
  $(CHECKOUT) release-info fundev/Sources/lib/release-info $(RELEASE_INFO_SOURCE)

checkout-runtime-manager:
  $(ENSURE_RELEASE_AREA)
  $(ENSURE_DIRECTORY) $(SOURCES_DIRECTORY)
  $(CHECKOUT) runtime-manager fundev/Sources/runtime-manager $(RUNTIME_MANAGER_SOURCE)

checkout-scepter:
  $(ENSURE_RELEASE_AREA)
  $(ENSURE_DIRECTORY) $(CORBA_DIRECTORY)
  $(CHECKOUT) scepter fundev/Sources/corba/scepter $(SCEPTER_SOURCE)
  $(ENSURE_WRITEABLE_HDP_FILES) $(SCEPTER_SOURCE)

checkout-source-records:
  $(ENSURE_RELEASE_AREA)
  $(ENSURE_DIRECTORY) $(LIB_DIRECTORY)
  $(CHECKOUT) source-records fundev/Sources/lib/source-records $(SOURCE_RECORDS_SOURCE)

checkout-system:
  $(ENSURE_RELEASE_AREA)
  $(ENSURE_DIRECTORY) $(SOURCES_DIRECTORY)
  $(CHECKOUT) system fundev/Sources/system $(SYSTEM_DIRECTORY)

checkout-system-test-suite:
  $(ENSURE_RELEASE_AREA)
  $(ENSURE_DIRECTORY) $(SYSTEM_DIRECTORY)
  $(CHECKOUT) system-tests fundev/Sources/system/tests $(SYSTEM_TESTS_SOURCE)

checkout-t-lists:
  $(ENSURE_RELEASE_AREA)
  $(ENSURE_DIRECTORY) $(LIB_DIRECTORY)
  $(CHECKOUT) t-lists fundev/Sources/lib/t-lists $(T_LISTS_SOURCE)

checkout-templates:
  $(ENSURE_RELEASE_AREA)
  $(ENSURE_DIRECTORY) $(TOOLS_DIRECTORY)
  $(CHECKOUT) templates fundev/Sources/tools/templates $(TEMPLATES_SOURCE)

checkout-test-apps:
  $(ENSURE_RELEASE_AREA)
  $(ENSURE_DIRECTORY) $(QA_DIRECTORY)
  $(CHECKOUT) test-apps fundev/Sources/qa/test-apps $(TEST_APPS_SOURCE)

checkout-test-report:
  $(ENSURE_RELEASE_AREA)
  $(ENSURE_DIRECTORY) $(QA_DIRECTORY)
  $(CHECKOUT) test-report fundev/Sources/qa/test-report $(TEST_REPORT_SOURCE)

checkout-test-suites:
  $(ENSURE_RELEASE_AREA)
  $(ENSURE_DIRECTORY) $(QA_DIRECTORY)
  $(CHECKOUT) test-suites fundev/Sources/qa/test-suites $(TEST_SUITES_SOURCE)

checkout-testworks:
  $(ENSURE_RELEASE_AREA)
  $(ENSURE_DIRECTORY) $(QA_DIRECTORY)
  $(CHECKOUT) testworks fundev/Sources/qa/testworks $(TESTWORKS_SOURCE)

checkout-testworks-specs:
  $(ENSURE_RELEASE_AREA)
  $(ENSURE_DIRECTORY) $(QA_DIRECTORY)
  $(CHECKOUT) testworks-specs fundev/Sources/qa/testworks-specs $(TESTWORKS_SPECS_SOURCE)

checkout-testworks-test-suite:
  $(ENSURE_RELEASE_AREA)
  $(ENSURE_DIRECTORY) $(TESTWORKS_SOURCE)
  $(CHECKOUT) testworks-tests fundev/Sources/qa/testworks/tests $(TESTWORKS_TESTS_SOURCE)
  
checkout-variable-search:
  $(ENSURE_RELEASE_AREA)
  $(ENSURE_DIRECTORY) $(LIB_DIRECTORY)
  $(CHECKOUT) variable-search fundev/Sources/lib/variable-search $(VARIABLE_SEARCH_SOURCE)

checkout-walker:
  $(ENSURE_RELEASE_AREA)
  $(ENSURE_DIRECTORY) $(LIB_DIRECTORY)
  $(CHECKOUT) walker fundev/Sources/lib/walker $(WALKER_SOURCE)

checkout-warnings-test-suite:
  $(ENSURE_RELEASE_AREA)
  $(ENSURE_DIRECTORY) $(QA_DIRECTORY)
  $(CHECKOUT) warnings-test-suite fundev/Sources/qa/warnings-test-suite $(WARNINGS_TEST_SUITE_SOURCE)

checkout-windows-ffi-example:
  $(ENSURE_RELEASE_AREA)
  $(ENSURE_DIRECTORY) $(APP_DIRECTORY)
  $(CHECKOUT) windows-ffi-example fundev/Sources/app/windows-ffi-example $(WINDOWS_FFI_EXAMPLE_SOURCE)

checkout-windows-gadgets-example:
  $(ENSURE_RELEASE_AREA)
  $(ENSURE_DIRECTORY) $(APP_DIRECTORY)
  $(CHECKOUT) windows-gadgets-example fundev/Sources/app/windows-gadgets-example $(WINDOWS_GADGETS_EXAMPLE_SOURCE)

checkout-windows-resource-example:
  $(ENSURE_RELEASE_AREA)
  $(ENSURE_DIRECTORY) $(APP_DIRECTORY)
  $(CHECKOUT) windows-resource-example fundev/Sources/app/windows-resource-example $(WINDOWS_RESOURCE_EXAMPLE_SOURCE)

checkout-win32:
  $(ENSURE_RELEASE_AREA)
  $(ENSURE_DIRECTORY) $(SOURCES_DIRECTORY)
  $(CHECKOUT) win32 fundev/Sources/win32 $(WIN32_DIRECTORY)

checkout-win32-tests:
  $(ENSURE_RELEASE_AREA)
  $(ENSURE_DIRECTORY) $(WIN32_DIRECTORY)
  $(CHECKOUT) win32-tests fundev/Sources/win32/tests $(WIN32_TESTS_SOURCE)

checkout-with-splash-screen:
  $(ENSURE_RELEASE_AREA)
  $(ENSURE_DIRECTORY) $(APP_DIRECTORY)
  $(CHECKOUT) with-splash-screen fundev/Sources/app/with-splash-screen $(WITH_SPLASH_SCREEN_SOURCE)

checkout-compiler: checkout-user-libraries checkout-internal-libraries checkout-release-info checkout-dfmc checkout-licensing checkout-variable-search checkout-walker checkout-metering checkout-motley checkout-project-manager checkout-source-records checkout-ppml checkout-parser-run-time checkout-memory-manager checkout-harp checkout-build-system checkout-dood checkout-dw checkout-command-shell

checkout-testworks-libraries: checkout-testworks checkout-testworks-specs checkout-gui-testworks

checkout-internal-libraries: checkout-channels checkout-commands

checkout-functional-dylan-libraries: checkout-dylan checkout-common-dylan checkout-functional-dylan
checkout-collection-libraries: checkout-collections
checkout-io-libraries: checkout-io
checkout-system-libraries: checkout-commands checkout-system

checkout-user-libraries: checkout-pentium-run-time checkout-functional-dylan-libraries checkout-c-ffi checkout-collection-libraries checkout-io-libraries checkout-system-libraries checkout-big-integers

checkout-basic-release: checkout-user-libraries checkout-compiler checkout-duim checkout-environment
checkout-enhanced-release: checkout-basic-release
checkout-internal-release: checkout-enhanced-release checkout-internal-libraries
checkout-minimal-internal-release: checkout-basic-release

checkout-console-examples: checkout-hello-world checkout-factorial
checkout-win32-examples: checkout-windows-ffi-example checkout-windows-gadgets-example
checkout-basic-examples: checkout-console-examples checkout-win32-examples checkout-duim-examples checkout-duim-tests

checkout-network-examples: checkout-network
checkout-enhanced-examples: checkout-basic-examples checkout-ole-examples checkout-duim-ole-examples checkout-network-examples

checkout-internal-examples: checkout-enhanced-examples

#
# Ensure sources
#

dylan-sources:
  $(ENSURE_SOURCES) dylan $(DYLAN_SOURCE)
  $(ENSURE_REGISTRY_ENTRY) dylan x86-win32

common-dylan-sources:
  $(ENSURE_SOURCES) common-dylan $(COMMON_DYLAN_SOURCE)
  $(ENSURE_REGISTRY_ENTRY) common-dylan x86-win32

functional-dylan-sources:
  $(ENSURE_SOURCES) functional-dylan $(FUNCTIONAL_DYLAN_SOURCE)
  $(ENSURE_REGISTRY_ENTRY) functional-dylan x86-win32

c-ffi-sources:
  $(ENSURE_SOURCES) c-ffi $(C_FFI_SOURCE)
  $(ENSURE_REGISTRY_ENTRY) c-ffi x86-win32

collections-sources:
  $(ENSURE_SOURCES) collections $(COLLECTIONS_DIRECTORY)
  $(ENSURE_REGISTRY_ENTRY) collections x86-win32

io-sources:
  $(ENSURE_SOURCES) io $(IO_DIRECTORY)
  $(ENSURE_REGISTRY_ENTRY) io x86-win32

system-sources:
  $(ENSURE_SOURCES) system $(SYSTEM_DIRECTORY)
  $(ENSURE_REGISTRY_ENTRY) system x86-win32

big-integers-sources:
  $(ENSURE_SOURCES) big-integers $(BIG_INTEGERS_SOURCE)
  $(ENSURE_REGISTRY_ENTRY) generic-arithmetic x86-win32
  $(ENSURE_REGISTRY_ENTRY) big-integers x86-win32

duim-sources:
  $(ENSURE_SOURCES) duim $(DUIM_DIRECTORY)
  $(ENSURE_REGISTRY_ENTRY) duim-utilities x86-win32
  $(ENSURE_REGISTRY_ENTRY) duim-geometry x86-win32
  $(ENSURE_REGISTRY_ENTRY) duim-dcs x86-win32
  $(ENSURE_REGISTRY_ENTRY) duim-sheets x86-win32
  $(ENSURE_REGISTRY_ENTRY) duim-graphics x86-win32
  $(ENSURE_REGISTRY_ENTRY) duim-layouts x86-win32
  $(ENSURE_REGISTRY_ENTRY) duim-gadgets x86-win32
  $(ENSURE_REGISTRY_ENTRY) duim-frames x86-win32
  $(ENSURE_REGISTRY_ENTRY) duim-core x86-win32
  $(ENSURE_REGISTRY_ENTRY) duim-recording x86-win32
  $(ENSURE_REGISTRY_ENTRY) duim-extended-geometry x86-win32
  $(ENSURE_REGISTRY_ENTRY) duim-gadget-panes x86-win32
  $(ENSURE_REGISTRY_ENTRY) win32-duim x86-win32
  $(ENSURE_REGISTRY_ENTRY) duim x86-win32

basic-release-sources: dylan-sources common-dylan-sources functional-dylan-sources c-ffi-sources collections-sources io-sources system-sources big-integers-sources duim-sources
enhanced-release-sources: basic-release-sources
internal-release-sources: enhanced-release-sources
minimal-internal-release-sources: basic-release-sources

#
# Basic Libraries
#

mm-pentium-run-time:
  $(ENSURE_SOURCES) pentium-run-time $(PENTIUM_RUN_TIME_SOURCE)
  echo Building pentium run time [$(PENTIUM_RUNTIME_OPTIONS)]
  pushd $(PENTIUM_RUN_TIME_SOURCE) \
    & $(MAKE) $(PENTIUM_RUNTIME_OPTIONS) install /f makefile > $(BUILD_LOGS)\make-pentium-run-time.log \
    & popd

boehm-pentium-run-time:
  $(ENSURE_SOURCES) pentium-run-time $(PENTIUM_RUN_TIME_SOURCE)
  echo Building pentium run time (Boehm GC)
  pushd $(PENTIUM_RUN_TIME_SOURCE) \
    & $(MAKE) install-boehm /f makefile > $(BUILD_LOGS)\make-boehm-pentium-run-time.log \
    & popd

$(PENTIUM_RUN_TIME): mm-pentium-run-time

$(C_RUN_TIME):
  $(ENSURE_SOURCES) c-run-time $(C_RUN_TIME_SOURCE)
  echo Building C run time
  pushd $(OPEN_DYLAN_USER_BUILD)\c-run-time \
    & $(MAKE) install /f Makefile.win32 > $(BUILD_LOGS)\make-c-run-time.log \
    & popd

$(DEBUGGER_NUB):
  $(ENSURE_SOURCES) runtime-manager $(RUNTIME_MANAGER_SOURCE)
  echo Building debugger nub
  pushd $(RUNTIME_MANAGER_SOURCE)\debugger-nub\x86-win32 \
    & $(MAKE) install > $(BUILD_LOGS)\make-debugger-nub.log \
    & popd

$(HTMLHELP):
  $(ENSURE_SOURCES) install-lib $(INSTALL_LIB_SOURCE)
  $(COPY) $(INSTALL_LIB_SOURCE)\htmlhelp.lib $(INSTALL_LIB_DIRECTORY)

$(DYLAN):
  $(ENSURE_SOURCES) library-packs $(LIBRARY_PACKS_DIRECTORY)
  $(MAKE) PENTIUM_RUNTIME_OPTIONS="$(PENTIUM_RUNTIME_OPTIONS)" pentium-run-time
  $(MAKE) dylan-sources
  $(BUILD_RUNTIME_LIBRARY) dylan $(DYLAN_DLL)

$(COMMON_DYLAN):
  $(ENSURE_RUNTIME_LIBRARY) $(DYLAN_DLL) dylan
  $(MAKE) common-dylan-sources
  $(BUILD_RUNTIME_LIBRARY) common-dylan $(COMMON_DYLAN_DLL)

$(FUNCTIONAL_DYLAN):
  $(ENSURE_RUNTIME_LIBRARY) $(COMMON_DYLAN_DLL) common-dylan
  $(MAKE) functional-dylan-sources
  $(BUILD_RUNTIME_LIBRARY) functional-dylan $(FUNCTIONAL_DYLAN_DLL)

$(BIG_INTEGERS):
  $(ENSURE_RUNTIME_LIBRARY) $(FUNCTIONAL_DYLAN_DLL) functional-dylan
  $(MAKE) big-integers-sources
  $(BUILD_RUNTIME_LIBRARY) big-integers $(BIG_INTEGERS_DLL)

$(C_FFI):
  $(ENSURE_RUNTIME_LIBRARY) $(FUNCTIONAL_DYLAN_DLL) functional-dylan
  $(MAKE) c-ffi-sources
  $(BUILD_RUNTIME_LIBRARY) c-ffi $(C_FFI_DLL)

$(CHANNELS):
  $(ENSURE_RUNTIME_LIBRARY) $(FUNCTIONAL_DYLAN_DLL) functional-dylan
  $(ENSURE_SOURCES) channels $(CHANNELS_SOURCE)
  $(ENSURE_REGISTRY_ENTRY) channels x86-win32
  $(BUILD_RUNTIME_LIBRARY) channels $(CHANNELS_DLL)

$(COLLECTIONS):
  $(ENSURE_RUNTIME_LIBRARY) $(FUNCTIONAL_DYLAN_DLL) functional-dylan
  $(MAKE) collections-sources
  $(BUILD_RUNTIME_LIBRARY) collections $(COLLECTIONS_DLL)

$(COMMANDS):
  $(ENSURE_RUNTIME_LIBRARY) $(FUNCTIONAL_DYLAN_DLL) functional-dylan
  $(ENSURE_SOURCES) commands $(COMMANDS_SOURCE)
  $(ENSURE_REGISTRY_ENTRY) commands x86-win32
  $(BUILD_RUNTIME_LIBRARY) commands $(COMMANDS_DLL)

$(DOOD):
  $(ENSURE_RUNTIME_LIBRARY) $(IO_DLL) io
  $(ENSURE_RUNTIME_LIBRARY) $(SYSTEM_DLL) system
  $(ENSURE_RUNTIME_LIBRARY) $(COLLECTIONS_DLL) collections
  $(ENSURE_SOURCES) variable-search $(VARIABLE_SEARCH_SOURCE)
  $(ENSURE_SOURCES) walker $(WALKER_SOURCE)
  $(ENSURE_SOURCES) dfmc $(DFMC_SOURCE)
  $(ENSURE_SOURCES) dood $(DOOD_SOURCE)
  $(ENSURE_REGISTRY_ENTRY) variable-search x86-win32
  $(ENSURE_REGISTRY_ENTRY) walker x86-win32
  $(ENSURE_REGISTRY_ENTRY) dfmc-mangling x86-win32
  $(ENSURE_REGISTRY_ENTRY) dood x86-win32
  $(BUILD_RUNTIME_LIBRARY) dood $(DOOD_DLL)

$(IO):
  $(ENSURE_RUNTIME_LIBRARY) $(FUNCTIONAL_DYLAN_DLL) functional-dylan
  $(MAKE) io-sources
  $(BUILD_RUNTIME_LIBRARY) io $(IO_DLL)

$(NETWORK):
  $(ENSURE_RUNTIME_LIBRARY) $(C_FFI_DLL) c-ffi
  $(ENSURE_RUNTIME_LIBRARY) $(IO_DLL) io
  $(ENSURE_SOURCES) network $(NETWORK_DIRECTORY)
  $(ENSURE_REGISTRY_ENTRY) network x86-win32
  $(BUILD_RUNTIME_LIBRARY) network $(NETWORK_DLL)

$(SYSTEM):
  $(ENSURE_RUNTIME_LIBRARY) $(FUNCTIONAL_DYLAN_DLL) functional-dylan
  $(ENSURE_RUNTIME_LIBRARY) $(IO_DLL) io
  $(MAKE) system-sources
  $(BUILD_RUNTIME_LIBRARY) system $(SYSTEM_DLL)


$(WIN32_COMMON):
  $(ENSURE_RUNTIME_LIBRARY) $(C_FFI_DLL) c-ffi
  $(ENSURE_SOURCES) win32 $(WIN32_DIRECTORY)
  $(ENSURE_REGISTRY_ENTRY) win32-common x86-win32
  $(BUILD_RUNTIME_LIBRARY) win32-common $(WIN32_COMMON_DLL)

$(WIN32_CONTROLS):
  $(ENSURE_RUNTIME_LIBRARY) $(WIN32_COMMON_DLL) win32-common
  $(ENSURE_SOURCES) win32 $(WIN32_DIRECTORY)
  $(ENSURE_REGISTRY_ENTRY) win32-controls x86-win32
  $(BUILD_RUNTIME_LIBRARY) win32-controls $(WIN32_CONTROLS_DLL)

$(WIN32_DDE):
  $(ENSURE_RUNTIME_LIBRARY) $(WIN32_COMMON_DLL) win32-common
  $(ENSURE_SOURCES) win32 $(WIN32_DIRECTORY)
  $(ENSURE_REGISTRY_ENTRY) win32-dde x86-win32
  $(BUILD_RUNTIME_LIBRARY) win32-dde $(WIN32_DDE_DLL)

$(WIN32_DIALOG):
  $(ENSURE_RUNTIME_LIBRARY) $(WIN32_COMMON_DLL) win32-common
  $(ENSURE_SOURCES) win32 $(WIN32_DIRECTORY)
  $(ENSURE_REGISTRY_ENTRY) win32-dialog x86-win32
  $(BUILD_RUNTIME_LIBRARY) win32-dialog $(WIN32_DIALOG_DLL)

$(WIN32_GDI):
  $(ENSURE_RUNTIME_LIBRARY) $(WIN32_COMMON_DLL) win32-common
  $(ENSURE_SOURCES) win32 $(WIN32_DIRECTORY)
  $(ENSURE_REGISTRY_ENTRY) win32-gdi x86-win32
  $(BUILD_RUNTIME_LIBRARY) win32-gdi $(WIN32_GDI_DLL)

$(WIN32_HTML_HELP):
  $(MAKE) htmlhelp
  $(ENSURE_RUNTIME_LIBRARY) $(WIN32_USER_DLL) win32-user
  $(ENSURE_SOURCES) win32 $(WIN32_DIRECTORY)
  $(ENSURE_REGISTRY_ENTRY) win32-html-help x86-win32
  $(BUILD_RUNTIME_LIBRARY) win32-html-help $(WIN32_HTML_HELP_DLL)

$(WIN32_KERNEL):
  $(ENSURE_RUNTIME_LIBRARY) $(WIN32_COMMON_DLL) win32-common
  $(ENSURE_SOURCES) win32 $(WIN32_DIRECTORY)
  $(ENSURE_REGISTRY_ENTRY) win32-kernel x86-win32
  $(BUILD_RUNTIME_LIBRARY) win32-kernel $(WIN32_KERNEL_DLL)

$(WIN32_REGISTRY):
  $(ENSURE_RUNTIME_LIBRARY) $(WIN32_COMMON_DLL) win32-common
  $(ENSURE_RUNTIME_LIBRARY) $(WIN32_KERNEL_DLL) win32-kernel
  $(ENSURE_SOURCES) win32 $(WIN32_DIRECTORY)
  $(ENSURE_REGISTRY_ENTRY) win32-registry x86-win32
  $(BUILD_RUNTIME_LIBRARY) win32-registry $(WIN32_REGISTRY_DLL)

$(WIN32_RESOURCES):
  $(ENSURE_RUNTIME_LIBRARY) $(IO_DLL) io
  $(ENSURE_RUNTIME_LIBRARY) $(WIN32_USER_DLL) win32-user
  $(ENSURE_SOURCES) win32 $(WIN32_DIRECTORY)
  $(ENSURE_REGISTRY_ENTRY) win32-resources x86-win32
  $(BUILD_RUNTIME_LIBRARY) win32-resources $(WIN32_RESOURCES_DLL)

$(WIN32_RICH_EDIT):
  $(ENSURE_RUNTIME_LIBRARY) $(WIN32_COMMON_DLL) win32-common
  $(ENSURE_SOURCES) win32 $(WIN32_DIRECTORY)
  $(ENSURE_REGISTRY_ENTRY) win32-rich-edit x86-win32
  $(BUILD_RUNTIME_LIBRARY) win32-rich-edit $(WIN32_RICH_EDIT_DLL)

$(WIN32_SHELL):
  $(ENSURE_RUNTIME_LIBRARY) $(WIN32_USER_DLL) win32-user
  $(ENSURE_SOURCES) win32 $(WIN32_DIRECTORY)
  $(ENSURE_REGISTRY_ENTRY) win32-shell x86-win32
  $(BUILD_RUNTIME_LIBRARY) win32-shell $(WIN32_SHELL_DLL)

$(WIN32_USER):
  $(ENSURE_RUNTIME_LIBRARY) $(WIN32_KERNEL_DLL) win32-kernel
  $(ENSURE_RUNTIME_LIBRARY) $(WIN32_GDI_DLL) win32-gdi
  $(ENSURE_SOURCES) win32 $(WIN32_DIRECTORY)
  $(ENSURE_REGISTRY_ENTRY) win32-user x86-win32
  $(BUILD_RUNTIME_LIBRARY) win32-user $(WIN32_USER_DLL)

$(WIN32_VERSION):
  $(ENSURE_RUNTIME_LIBRARY) $(WIN32_USER_DLL) win32-user
  $(ENSURE_SOURCES) win32 $(WIN32_DIRECTORY)
  $(ENSURE_REGISTRY_ENTRY) win32-version x86-win32
  $(BUILD_RUNTIME_LIBRARY) win32-version $(WIN32_VERSION_DLL)


$(WIN32_GL):
  $(ENSURE_RUNTIME_LIBRARY) $(WIN32_COMMON_DLL) win32-common
  $(ENSURE_SOURCES) win32 $(WIN32_DIRECTORY)
  $(ENSURE_REGISTRY_ENTRY) win32-gl x86-win32
  $(BUILD_RUNTIME_LIBRARY) win32-gl $(WIN32_GL_DLL)

$(WIN32_GLU):
  $(ENSURE_RUNTIME_LIBRARY) $(WIN32_GL_DLL) win32-gl
  $(ENSURE_SOURCES) win32 $(WIN32_DIRECTORY)
  $(ENSURE_REGISTRY_ENTRY) win32-glu x86-win32
  $(BUILD_RUNTIME_LIBRARY) win32-glu $(WIN32_GLU_DLL)

$(WIN32_MULTIMEDIA):
  $(ENSURE_RUNTIME_LIBRARY) $(WIN32_USER_DLL) win32-user
  $(ENSURE_SOURCES) win32 $(WIN32_DIRECTORY)
  $(ENSURE_REGISTRY_ENTRY) win32-multimedia x86-win32
  $(BUILD_RUNTIME_LIBRARY) win32-multimedia $(WIN32_MULTIMEDIA_DLL)


$(C_LEXER):
  $(ENSURE_RUNTIME_LIBRARY) $(IO_DLL) io
  $(ENSURE_RUNTIME_LIBRARY) $(SYSTEM_DLL) system
  $(ENSURE_LIBRARY) t-lists
  $(ENSURE_SOURCES) c-lexer $(C_LEXER_SOURCE)
  $(ENSURE_REGISTRY_ENTRY) c-lexer generic
  $(BUILD_LIBRARY) c-lexer

$(COMMAND_SHELL):
  $(ENSURE_RUNTIME_LIBRARY) $(IO_DLL) io
  $(ENSURE_RUNTIME_LIBRARY) $(SYSTEM_DLL) system
  $(ENSURE_SOURCES) command-shell $(COMMAND_SHELL_SOURCE)
  $(ENSURE_REGISTRY_ENTRY) command-shell generic
  $(BUILD_LIBRARY) command-shell

$(GRAMMAR_COMPILER):
  $(ENSURE_RUNTIME_LIBRARY) $(FUNCTIONAL_DYLAN_DLL) functional-dylan
  $(ENSURE_SOURCES) grammar-compiler $(GRAMMAR_COMPILER_SOURCE)
  $(ENSURE_REGISTRY_ENTRY) grammar-compiler generic
  $(BUILD_LIBRARY) grammar-compiler

$(MIDI):
  $(ENSURE_RUNTIME_LIBRARY) $(COLLECTIONS_DLL) collections
  $(ENSURE_RUNTIME_LIBRARY) $(WIN32_MULTIMEDIA_DLL) win32-multimedia
  $(ENSURE_SOURCES) midi $(MIDI_SOURCE)
  $(ENSURE_REGISTRY_ENTRY) midi x86-win32
  $(BUILD_RUNTIME_LIBRARY) midi $(MIDI_DLL)

$(PARSER_RUN_TIME):
  $(ENSURE_RUNTIME_LIBRARY) $(FUNCTIONAL_DYLAN_DLL) functional-dylan
  $(ENSURE_SOURCES) parser-run-time $(PARSER_RUN_TIME_SOURCE)
  $(ENSURE_REGISTRY_ENTRY) parser-run-time generic
  $(BUILD_LIBRARY) parser-run-time

$(T_LISTS):
  $(ENSURE_RUNTIME_LIBRARY) $(IO_DLL) io
  $(ENSURE_SOURCES) t-lists $(T_LISTS_SOURCE)
  $(ENSURE_REGISTRY_ENTRY) t-lists generic
  $(BUILD_LIBRARY) t-lists


$(GTK_LIB):
  $(ENSURE_SOURCES) install-lib $(INSTALL_LIB_SOURCE)
  $(COPY) $(INSTALL_LIB_SOURCE)\glib-1.3.lib $(INSTALL_LIB_DIRECTORY)
  $(COPY) $(INSTALL_LIB_SOURCE)\gmodule-1.3.lib $(INSTALL_LIB_DIRECTORY)
  $(COPY) $(INSTALL_LIB_SOURCE)\gthread-1.3.lib $(INSTALL_LIB_DIRECTORY)
  $(COPY) $(INSTALL_LIB_SOURCE)\gdk-1.3.lib $(INSTALL_LIB_DIRECTORY)
  $(COPY) $(INSTALL_LIB_SOURCE)\gtk-1.3.lib $(INSTALL_LIB_DIRECTORY)

$(GTK):
  $(ENSURE_RUNTIME_LIBRARY) $(C_FFI_DLL) c-ffi
  $(MAKE) gtk-lib
  $(ENSURE_SOURCES) gnu $(GNU_DIRECTORY)
  $(ENSURE_REGISTRY_ENTRY) glib x86-win32
  $(ENSURE_REGISTRY_ENTRY) gdk x86-win32
  $(ENSURE_REGISTRY_ENTRY) gtk-common x86-win32
  $(ENSURE_REGISTRY_ENTRY) gtk-widgets x86-win32
  $(ENSURE_REGISTRY_ENTRY) gtk x86-win32
  $(BUILD_LIBRARY) gtk


$(DEUCE):
  $(ENSURE_RUNTIME_LIBRARY) $(IO_DLL) io
  $(ENSURE_RUNTIME_LIBRARY) $(SYSTEM_DLL) system
  $(ENSURE_RUNTIME_LIBRARY) $(COLLECTIONS_DLL) collections
  $(ENSURE_SOURCES) deuce $(DEUCE_SOURCE)
  $(ENSURE_REGISTRY_ENTRY) deuce x86-win32
  $(BUILD_RUNTIME_LIBRARY) deuce $(DEUCE_DLL)

$(DUIM_CORE):
  $(ENSURE_LIBRARY) duim-sheets
  $(ENSURE_RUNTIME_LIBRARY) $(COMMANDS_DLL) commands
  $(MAKE) duim-sources
  $(BUILD_RUNTIME_LIBRARY) duim-core

$(DUIM_DEUCE):
  $(ENSURE_RUNTIME_LIBRARY) $(DEUCE_DLL) deuce
  $(ENSURE_RUNTIME_LIBRARY) $(DUIM_DLL) duim
  $(ENSURE_SOURCES) deuce $(DEUCE_SOURCE)
  $(ENSURE_REGISTRY_ENTRY) duim-deuce x86-win32
  $(BUILD_RUNTIME_LIBRARY) duim-deuce $(DUIM_DEUCE_DLL)

$(DUIM_SHEETS):
  $(ENSURE_RUNTIME_LIBRARY) $(IO_DLL) io
  $(ENSURE_RUNTIME_LIBRARY) $(SYSTEM_DLL) system
  $(ENSURE_RUNTIME_LIBRARY) $(COLLECTIONS_DLL) collections
  $(MAKE) duim-sources
  $(BUILD_RUNTIME_LIBRARY) duim-sheets

$(DUIM):
  $(ENSURE_RUNTIME_LIBRARY) $(WIN32_USER_DLL) win32-user
  $(ENSURE_RUNTIME_LIBRARY) $(WIN32_GDI_DLL) win32-gdi
  $(ENSURE_RUNTIME_LIBRARY) $(WIN32_DIALOG_DLL) win32-dialog
  $(ENSURE_RUNTIME_LIBRARY) $(WIN32_CONTROLS_DLL) win32-controls
  $(ENSURE_RUNTIME_LIBRARY) $(WIN32_HTML_HELP_DLL) win32-html-help
  $(ENSURE_RUNTIME_LIBRARY) $(WIN32_RESOURCES_DLL) win32-resources
  $(ENSURE_RUNTIME_LIBRARY) $(WIN32_REGISTRY_DLL) win32-registry
  $(ENSURE_RUNTIME_LIBRARY) $(DUIM_CORE_DLL) duim-core
  $(MAKE) duim-sources
  $(BUILD_RUNTIME_LIBRARY) duim $(DUIM_DLL)

$(GTK_DUIM):
  $(ENSURE_RUNTIME_LIBRARY) $(DUIM_CORE_DLL) duim-core
  $(ENSURE_LIBRARY) gtk
  $(MAKE) duim-sources
  $(ENSURE_REGISTRY_ENTRY) gtk-duim-gadget-panes x86-win32
  $(ENSURE_REGISTRY_ENTRY) gtk-duim x86-win32
  $(BUILD_LIBRARY) gtk-duim

#
# Enhanced Libraries
#

$(COM):
  $(ENSURE_RUNTIME_LIBRARY) $(WIN32_KERNEL_DLL) win32-kernel
  $(ENSURE_SOURCES) ole $(OLE_DIRECTORY)
  $(ENSURE_REGISTRY_ENTRY) com x86-win32
  $(BUILD_RUNTIME_LIBRARY) com $(COM_DLL)

$(OLE_SERVER):
  $(ENSURE_RUNTIME_LIBRARY) $(WIN32_USER_DLL) win32-user
  $(ENSURE_RUNTIME_LIBRARY) $(WIN32_GDI_DLL) win32-gdi
  $(ENSURE_RUNTIME_LIBRARY) $(WIN32_REGISTRY_DLL) win32-registry
  $(ENSURE_RUNTIME_LIBRARY) $(COM_DLL) com
  $(ENSURE_SOURCES) ole $(OLE_DIRECTORY)
  $(ENSURE_REGISTRY_ENTRY) ole x86-win32
  $(ENSURE_REGISTRY_ENTRY) ole-server x86-win32
  $(BUILD_RUNTIME_LIBRARY) ole-server $(OLE_SERVER_DLL)

$(OLE_AUTOMATION):
  $(ENSURE_RUNTIME_LIBRARY) $(COM_DLL) com
  $(ENSURE_RUNTIME_LIBRARY) $(WIN32_REGISTRY_DLL) win32-registry
  $(ENSURE_SOURCES) ole $(OLE_DIRECTORY)
  $(ENSURE_REGISTRY_ENTRY) win32-automation x86-win32
  $(ENSURE_REGISTRY_ENTRY) ole-automation x86-win32
  $(BUILD_RUNTIME_LIBRARY) ole-automation $(OLE_AUTOMATION_DLL)

$(OLE_CONTAINER):
  $(ENSURE_RUNTIME_LIBRARY) $(OLE_DIALOGS_DLL) ole-dialogs
  $(ENSURE_SOURCES) ole $(OLE_DIRECTORY)
  $(ENSURE_REGISTRY_ENTRY) ole-container x86-win32
  $(BUILD_RUNTIME_LIBRARY) ole-container $(OLE_CONTAINER_DLL)

$(OLE_CONTROL_FRAMEWORK):
  $(ENSURE_RUNTIME_LIBRARY) $(OLE_SERVER_DLL) ole-server
  $(ENSURE_RUNTIME_LIBRARY) $(OLE_AUTOMATION_DLL) ole-automation
  $(ENSURE_SOURCES) ole $(OLE_DIRECTORY)
  $(ENSURE_REGISTRY_ENTRY) ole-controls x86-win32
  $(ENSURE_REGISTRY_ENTRY) ole-control-framework x86-win32
  $(BUILD_RUNTIME_LIBRARY) ole-control-framework $(OLE_CONTROL_FRAMEWORK_DLL)

$(OLE_DIALOGS):
  $(ENSURE_RUNTIME_LIBRARY) $(OLE_SERVER_DLL) ole-server
  $(ENSURE_SOURCES) ole $(OLE_DIRECTORY)
  $(ENSURE_REGISTRY_ENTRY) ole-dialogs x86-win32
  $(BUILD_RUNTIME_LIBRARY) ole-dialogs $(OLE_DIALOGS_DLL)

$(DUIM_OLE_CONTAINER):
  $(ENSURE_RUNTIME_LIBRARY) $(DUIM_DLL) duim
  $(ENSURE_RUNTIME_LIBRARY) $(OLE_CONTAINER_DLL) ole-container
  $(ENSURE_SOURCES) ole $(OLE_DIRECTORY)
  $(ENSURE_REGISTRY_ENTRY) duim-ole-container x86-win32
  $(BUILD_RUNTIME_LIBRARY) duim-ole-container $(DUIM_OLE_CONTAINER_DLL)

$(DUIM_OLE_CONTROL):
  $(ENSURE_RUNTIME_LIBRARY) $(DUIM_DLL) duim
  $(ENSURE_RUNTIME_LIBRARY) $(OLE_CONTROL_FRAMEWORK_DLL) ole-control-framework
  $(ENSURE_RUNTIME_LIBRARY) $(DUIM_OLE_SERVER_DLL) duim-ole-server
  $(ENSURE_SOURCES) ole $(OLE_DIRECTORY)
  $(ENSURE_REGISTRY_ENTRY) duim-ole-control x86-win32
  $(BUILD_RUNTIME_LIBRARY) duim-ole-control $(DUIM_OLE_CONTROL_DLL)

$(DUIM_OLE_SERVER):
  $(ENSURE_RUNTIME_LIBRARY) $(DUIM_DLL) duim
  $(ENSURE_RUNTIME_LIBRARY) $(OLE_CONTROL_FRAMEWORK_DLL) ole-control-framework
  $(ENSURE_SOURCES) ole $(OLE_DIRECTORY)
  $(ENSURE_REGISTRY_ENTRY) duim-ole-server x86-win32
  $(BUILD_RUNTIME_LIBRARY) duim-ole-server $(DUIM_OLE_SERVER_DLL)

$(SQL_ODBC):
  $(ENSURE_RUNTIME_LIBRARY) $(C_FFI_DLL) c-ffi
  $(ENSURE_RUNTIME_LIBRARY) $(IO_DLL) io
  $(ENSURE_RUNTIME_LIBRARY) $(SYSTEM_DLL) system
  $(ENSURE_SOURCES) databases $(DATABASES_SOURCE)
  $(ENSURE_REGISTRY_ENTRY) sql x86-win32
  $(ENSURE_REGISTRY_ENTRY) odbc-ffi x86-win32
  $(ENSURE_REGISTRY_ENTRY) sql-odbc x86-win32
  $(BUILD_RUNTIME_LIBRARY) sql-odbc $(SQL_ODBC_DLL)

#
# TestWorks libraries
#

$(TESTWORKS):
  $(ENSURE_RUNTIME_LIBRARY) $(FUNCTIONAL_DYLAN_DLL) functional-dylan
  $(ENSURE_SOURCES) testworks $(TESTWORKS_SOURCE)
  $(ENSURE_REGISTRY_ENTRY) testworks x86-win32
  $(BUILD_RUNTIME_LIBRARY) testworks $(TESTWORKS_DLL)

$(TESTWORKS_SPECS):
  $(ENSURE_RUNTIME_LIBRARY) $(TESTWORKS_DLL) testworks
  $(ENSURE_SOURCES) testworks-specs $(TESTWORKS_SPECS_SOURCE)
  $(ENSURE_REGISTRY_ENTRY) testworks-specs x86-win32
  $(BUILD_RUNTIME_LIBRARY) testworks-specs $(TESTWORKS_SPECS_DLL)

$(GUI_TESTWORKS):
  $(ENSURE_RUNTIME_LIBRARY) $(DUIM_DLL) duim
  $(ENSURE_RUNTIME_LIBRARY) $(TESTWORKS_DLL) testworks
  $(ENSURE_SOURCES) gui-testworks $(GUI_TESTWORKS_SOURCE)
  $(ENSURE_REGISTRY_ENTRY) gui-testworks x86-win32
  $(BUILD_RUNTIME_LIBRARY) gui-testworks $(GUI_TESTWORKS_DLL)

#
# Compiler
#

$(BUILD_SYSTEM):
  $(ENSURE_RUNTIME_LIBRARY) $(IO_DLL) io
  $(ENSURE_RUNTIME_LIBRARY) $(SYSTEM_DLL) system
  $(ENSURE_LIBRARY) file-source-records
  $(ENSURE_LIBRARY) release-info
  $(ENSURE_LIBRARY) coff-manager
  $(ENSURE_LIBRARY) coff-builder
  $(ENSURE_SOURCES) build-system $(BUILD_SYSTEM_SOURCE)
  $(ENSURE_REGISTRY_ENTRY) build-system generic
  $(BUILD_LIBRARY) build-system

$(BINARY_BUILDER):
  $(ENSURE_RUNTIME_LIBRARY) $(IO_DLL) io
  $(ENSURE_RUNTIME_LIBRARY) $(SYSTEM_DLL) system
  $(ENSURE_RUNTIME_LIBRARY) $(BIG_INTEGERS_DLL) big-integers
  $(ENSURE_LIBRARY) binary-manager
  $(ENSURE_SOURCES) harp $(HARP_SOURCE)
  $(ENSURE_REGISTRY_ENTRY) binary-builder generic
  $(BUILD_LIBRARY) binary-builder

$(COFF_BUILDER):
  $(ENSURE_RUNTIME_LIBRARY) $(IO_DLL) io
  $(ENSURE_RUNTIME_LIBRARY) $(SYSTEM_DLL) system
  $(ENSURE_RUNTIME_LIBRARY) $(BIG_INTEGERS_DLL) big-integers
  $(ENSURE_LIBRARY) coff-manager
  $(ENSURE_LIBRARY) binary-builder
  $(ENSURE_SOURCES) harp $(HARP_SOURCE)
  $(ENSURE_REGISTRY_ENTRY) coff-builder generic
  $(BUILD_LIBRARY) coff-builder

$(COFF_DEBUG):
  $(ENSURE_LIBRARY) coff-manager
  $(ENSURE_SOURCES) harp $(HARP_SOURCE)
  $(ENSURE_REGISTRY_ENTRY) coff-debug generic
  $(BUILD_LIBRARY) coff-debug

$(BINARY_MANAGER):
  $(ENSURE_RUNTIME_LIBRARY) $(IO_DLL) io
  $(ENSURE_RUNTIME_LIBRARY) $(SYSTEM_DLL) system
  $(ENSURE_RUNTIME_LIBRARY) $(BIG_INTEGERS_DLL) big-integers
  $(ENSURE_SOURCES) harp $(HARP_SOURCE)
  $(ENSURE_REGISTRY_ENTRY) binary-manager generic
  $(BUILD_LIBRARY) binary-manager

$(COFF_MANAGER):
  $(ENSURE_RUNTIME_LIBRARY) $(IO_DLL) io
  $(ENSURE_RUNTIME_LIBRARY) $(SYSTEM_DLL) system
  $(ENSURE_RUNTIME_LIBRARY) $(BIG_INTEGERS_DLL) big-integers
  $(ENSURE_LIBRARY) binary-manager
  $(ENSURE_SOURCES) harp $(HARP_SOURCE)
  $(ENSURE_REGISTRY_ENTRY) coff-manager generic
  $(BUILD_LIBRARY) coff-manager

$(DFMC_BROWSER_SUPPORT):
  $(ENSURE_LIBRARY) release-info
  $(ENSURE_LIBRARY) dfmc-management
  $(ENSURE_SOURCES) dfmc $(DFMC_SOURCE)
  $(ENSURE_REGISTRY_ENTRY) dfmc-browser-support generic
  $(BUILD_LIBRARY) dfmc-browser-support

$(DFMC_DEBUG_BACK_END):
  $(ENSURE_LIBRARY) dfmc-management
  $(ENSURE_SOURCES) dfmc $(DFMC_SOURCE)
  $(ENSURE_REGISTRY_ENTRY) dfmc-debug-back-end generic
  $(BUILD_LIBRARY) dfmc-debug-back-end

$(DFMC_EXECUTION):
  $(ENSURE_LIBRARY) user-projects
  $(ENSURE_LIBRARY) dfmc-management
  $(ENSURE_SOURCES) dfmc $(DFMC_SOURCE)
  $(ENSURE_REGISTRY_ENTRY) dfmc-execution generic
  $(BUILD_LIBRARY) dfmc-execution

$(DFMC_MANAGEMENT):
  $(ENSURE_RUNTIME_LIBRARY) $(IO_DLL) io
  $(ENSURE_RUNTIME_LIBRARY) $(SYSTEM_DLL) system
  $(ENSURE_RUNTIME_LIBRARY) $(COLLECTIONS_DLL) collections
  $(ENSURE_RUNTIME_LIBRARY) $(BIG_INTEGERS_DLL) big-integers
  $(ENSURE_RUNTIME_LIBRARY) $(DOOD_DLL) dood
  $(ENSURE_LIBRARY) file-source-records
  $(ENSURE_LIBRARY) parser-run-time
  $(ENSURE_SOURCES) ppml $(PPML_SOURCE)
  $(ENSURE_SOURCES) memory-manager $(MEMORY_MANAGER_SOURCE)
  $(ENSURE_SOURCES) dfmc $(DFMC_SOURCE)
  $(ENSURE_REGISTRY_ENTRY) ppml generic
  $(ENSURE_REGISTRY_ENTRY) memory-manager generic
  $(ENSURE_REGISTRY_ENTRY) dfmc-common generic
  $(ENSURE_REGISTRY_ENTRY) dfmc-reader generic
  $(ENSURE_REGISTRY_ENTRY) dfmc-conditions generic
  $(ENSURE_REGISTRY_ENTRY) dfmc-namespace generic
  $(ENSURE_REGISTRY_ENTRY) dfmc-definitions generic
  $(ENSURE_REGISTRY_ENTRY) dfmc-modeling generic
  $(ENSURE_REGISTRY_ENTRY) dfmc-macro-expander generic
  $(ENSURE_REGISTRY_ENTRY) dfmc-linker generic
  $(ENSURE_REGISTRY_ENTRY) dfmc-c-ffi generic
  $(ENSURE_REGISTRY_ENTRY) dfmc-back-end-protocol generic
  $(ENSURE_REGISTRY_ENTRY) dfmc-back-end generic
  $(ENSURE_REGISTRY_ENTRY) dfmc-flow-graph generic
  $(ENSURE_REGISTRY_ENTRY) dfmc-core generic
  $(ENSURE_REGISTRY_ENTRY) dfmc-typist generic
  $(ENSURE_REGISTRY_ENTRY) dfmc-conversion generic
  $(ENSURE_REGISTRY_ENTRY) dfmc-optimization generic
  $(ENSURE_REGISTRY_ENTRY) dfmc-management generic
  $(BUILD_LIBRARY) dfmc-management

$(DFMC_PENTIUM_FILE_COMPILER):
  $(ENSURE_LIBRARY) metering
  $(ENSURE_LIBRARY) dfmc-pentium-harp-cg
  $(ENSURE_LIBRARY) dfmc-debug-back-end
  $(ENSURE_LIBRARY) user-projects
  $(ENSURE_SOURCES) dfmc $(DFMC_SOURCE)
  $(ENSURE_REGISTRY_ENTRY) dfmc-harp-browser-support generic
  $(ENSURE_REGISTRY_ENTRY) dfmc-pentium-file-compiler generic
  $(BUILD_LIBRARY) dfmc-pentium-file-compiler

$(DFMC_PENTIUM_HARP_CG):
  $(ENSURE_RUNTIME_LIBRARY) $(IO_DLL) io
  $(ENSURE_RUNTIME_LIBRARY) $(SYSTEM_DLL) system
  $(ENSURE_RUNTIME_LIBRARY) $(BIG_INTEGERS_DLL) big-integers
  $(ENSURE_LIBRARY) file-source-records
  $(ENSURE_LIBRARY) dfmc-management
  $(ENSURE_LIBRARY) dfmc-execution
  $(ENSURE_LIBRARY) coff-manager
  $(ENSURE_LIBRARY) coff-builder
  $(ENSURE_LIBRARY) disasm
  $(ENSURE_SOURCES) dfmc $(DFMC_SOURCE)
  $(ENSURE_SOURCES) harp $(HARP_SOURCE)
  $(ENSURE_REGISTRY_ENTRY) binary-outputter generic
  $(ENSURE_REGISTRY_ENTRY) harp-cg-back-end generic
  $(ENSURE_REGISTRY_ENTRY) harp generic
  $(ENSURE_REGISTRY_ENTRY) native-harp generic
  $(ENSURE_REGISTRY_ENTRY) harp-coff generic
  $(ENSURE_REGISTRY_ENTRY) gnu-outputter generic
  $(ENSURE_REGISTRY_ENTRY) pentium-harp generic
  $(ENSURE_REGISTRY_ENTRY) native-glue-rtg generic
  $(ENSURE_REGISTRY_ENTRY) linux-glue-rtg generic
  $(ENSURE_REGISTRY_ENTRY) pentium-glue-rtg generic
  $(ENSURE_REGISTRY_ENTRY) pentium-linux-glue-rtg generic
  $(ENSURE_REGISTRY_ENTRY) dfmc-harp-cg generic
  $(ENSURE_REGISTRY_ENTRY) dfmc-harp-cg-linker generic
  $(ENSURE_REGISTRY_ENTRY) dfmc-native-harp-cg generic
  $(ENSURE_REGISTRY_ENTRY) dfmc-pentium-harp-cg generic
  $(ENSURE_REGISTRY_ENTRY) mnemonic-assembler generic
  $(BUILD_LIBRARY) dfmc-pentium-harp-cg

$(DFMC_SHELL):
  $(ENSURE_LIBRARY) command-shell
  $(ENSURE_SOURCES) dfmc $(DFMC_SOURCE)
  $(ENSURE_REGISTRY_ENTRY) dfmc-shell generic
  $(BUILD_LIBRARY) dfmc-shell

$(DFMC_INTERPRETER_FILE_COMPILER):
  $(ENSURE_LIBRARY) metering
  $(ENSURE_LIBRARY) dfmc-browser-support
  $(ENSURE_LIBRARY) dfmc-debug-back-end
  $(ENSURE_LIBRARY) user-projects
  $(ENSURE_SOURCES) dfmc $(DFMC_SOURCE)
  $(ENSURE_REGISTRY_ENTRY) dfmc-interpreter-file-compiler generic
  $(BUILD_LIBRARY) dfmc-interpreter-file-compiler

$(INTERPRETER_DFMC_SHELL):
  $(ENSURE_LIBRARY) command-shell
  $(ENSURE_LIBRARY) ccl-linker
  $(ENSURE_SOURCES) dfmc $(DFMC_SOURCE)
  $(ENSURE_REGISTRY_ENTRY) interpreter-dfmc-shell generic
  $(BUILD_LIBRARY) interpreter-dfmc-shell

$(HD2C_DFMC_SHELL):
  $(ENSURE_LIBRARY) command-shell
  $(ENSURE_LIBRARY) ccl-linker
  $(ENSURE_SOURCES) dfmc $(DFMC_SOURCE)
  $(ENSURE_REGISTRY_ENTRY) hd2c-dfmc-shell generic
  $(BUILD_LIBRARY) hd2c-dfmc-shell

$(DFMC_C_FILE_COMPILER):
  $(ENSURE_LIBRARY) metering
  $(ENSURE_LIBRARY) dfmc-debug-back-end
  $(ENSURE_LIBRARY) user-projects
  $(ENSURE_SOURCES) dfmc $(DFMC_SOURCE)
  $(ENSURE_REGISTRY_ENTRY) dfmc-c-back-end generic
  $(ENSURE_REGISTRY_ENTRY) dfmc-c-linker generic
  $(ENSURE_REGISTRY_ENTRY) dfmc-c-file-compiler generic
  $(BUILD_LIBRARY) dfmc-c-file-compiler

# NOTE: This is the first library that's built for the bootstrap (i.e., generation 1) compiler.
#       Therefore, it needs to ensure that the Library-Packs hierarchy is present.
$(FILE_SOURCE_RECORDS):
  $(ENSURE_SOURCES) library-packs $(LIBRARY_PACKS_DIRECTORY)
  $(ENSURE_RUNTIME_LIBRARY) $(IO_DLL) io
  $(ENSURE_RUNTIME_LIBRARY) $(SYSTEM_DLL) system
  $(ENSURE_RUNTIME_LIBRARY) $(COLLECTIONS_DLL) collections
  $(ENSURE_SOURCES) source-records $(SOURCE_RECORDS_SOURCE)
  $(ENSURE_REGISTRY_ENTRY) source-records generic
  $(ENSURE_REGISTRY_ENTRY) file-source-records generic
  $(BUILD_LIBRARY) file-source-records

$(LICENSING):
  $(ENSURE_RUNTIME_LIBRARY) $(SYSTEM_DLL) system
  $(ENSURE_RUNTIME_LIBRARY) $(C_FFI_DLL) c-ffi
  $(ENSURE_LIBRARY) release-info
  $(ENSURE_SOURCES) licensing $(LICENSING_SOURCE)
  $(ENSURE_REGISTRY_ENTRY) licensing x86-win32
  $(BUILD_LIBRARY) licensing

$(METERING):
  $(ENSURE_RUNTIME_LIBRARY) $(FUNCTIONAL_DYLAN_DLL) functional-dylan
  $(ENSURE_SOURCES) metering $(METERING_SOURCE)
  $(ENSURE_REGISTRY_ENTRY) metering generic
  $(BUILD_LIBRARY) metering

$(MOTLEY):
  $(ENSURE_RUNTIME_LIBRARY) $(FUNCTIONAL_DYLAN_DLL) functional-dylan
  $(ENSURE_RUNTIME_LIBRARY) $(IO_DLL) io
  $(ENSURE_RUNTIME_LIBRARY) $(SYSTEM_DLL) system
  $(ENSURE_RUNTIME_LIBRARY) $(WIN32_REGISTRY_DLL) win32-registry
  $(ENSURE_RUNTIME_LIBRARY) $(OLE_AUTOMATION_DLL) ole-automation
  $(ENSURE_LIBRARY) tools-interface
  $(ENSURE_SOURCES) motley $(MOTLEY_SOURCE)
  $(ENSURE_REGISTRY_ENTRY) motley x86-win32
  $(BUILD_LIBRARY) motley

$(RELEASE_INFO):
  $(ENSURE_RUNTIME_LIBRARY) $(IO_DLL) io
  $(ENSURE_RUNTIME_LIBRARY) $(SYSTEM_DLL) system
  $(ENSURE_LIBRARY) file-source-records
  $(ENSURE_SOURCES) release-info $(RELEASE_INFO_SOURCE)
  $(ENSURE_REGISTRY_ENTRY) release-info generic
  $(BUILD_LIBRARY) release-info

$(TOOL_PARSER_GENERATOR):
  $(ENSURE_RUNTIME_LIBRARY) $(IO_DLL) io
  $(ENSURE_RUNTIME_LIBRARY) $(SYSTEM_DLL) system
  $(ENSURE_LIBRARY) tools-interface
  $(ENSURE_APPLICATION) parser-compiler
  $(ENSURE_SOURCES) parser-generator $(PARSER_GENERATOR_SOURCE)
  $(ENSURE_REGISTRY_ENTRY) tool-parser-generator generic
  $(BUILD_LIBRARY) tool-parser-generator

$(TOOLS_INTERFACE):
  $(ENSURE_RUNTIME_LIBRARY) $(FUNCTIONAL_DYLAN_DLL) functional-dylan
  $(ENSURE_RUNTIME_LIBRARY) $(IO_DLL) io
  $(ENSURE_RUNTIME_LIBRARY) $(SYSTEM_DLL) system
  $(ENSURE_SOURCES) project-manager $(PROJECT_MANAGER_SOURCE)
  $(ENSURE_REGISTRY_ENTRY) tools-interface generic
  $(BUILD_LIBRARY) tools-interface

$(USER_PROJECTS):
  $(ENSURE_RUNTIME_LIBRARY) $(FUNCTIONAL_DYLAN_DLL) functional-dylan
  $(ENSURE_RUNTIME_LIBRARY) $(SYSTEM_DLL) system
  $(ENSURE_LIBRARY) build-system
  $(ENSURE_LIBRARY) tools-interface
  $(ENSURE_LIBRARY) dfmc-browser-support
  $(ENSURE_SOURCES) project-manager $(PROJECT_MANAGER_SOURCE)
  $(ENSURE_REGISTRY_ENTRY) projects generic
  $(ENSURE_REGISTRY_ENTRY) registry-projects generic
  $(ENSURE_REGISTRY_ENTRY) user-projects generic
  $(BUILD_LIBRARY) user-projects

#
# Environment
#

$(DISASM):
  $(ENSURE_RUNTIME_LIBRARY) $(IO_DLL) io
  $(ENSURE_RUNTIME_LIBRARY) $(BIG_INTEGERS_DLL) big-integers
  $(ENSURE_SOURCES) disasm $(DISASM_SOURCE)
  $(ENSURE_REGISTRY_ENTRY) disasm generic
  $(BUILD_LIBRARY) disasm

$(DISPATCH_PROFILER):
  $(ENSURE_RUNTIME_LIBRARY) $(FUNCTIONAL_DYLAN_DLL) functional-dylan
  $(ENSURE_RUNTIME_LIBRARY) $(BIG_INTEGERS_DLL) big-integers
  $(ENSURE_SOURCES) dispatch-profiler $(DISPATCH_PROFILER_SOURCE)
  $(ENSURE_REGISTRY_ENTRY) dispatch-profiler generic
  $(BUILD_LIBRARY) dispatch-profiler

$(DEBUGGER_MANAGER): debugger-nub install-dbghelp
  $(ENSURE_RUNTIME_LIBRARY) $(FUNCTIONAL_DYLAN_DLL) functional-dylan
  $(ENSURE_RUNTIME_LIBRARY) $(IO_DLL) io
  $(ENSURE_SOURCES) runtime-manager $(RUNTIME_MANAGER_SOURCE)
  $(ENSURE_REGISTRY_ENTRY) access-path generic
  $(ENSURE_REGISTRY_ENTRY) tether-downloader generic
  $(ENSURE_REGISTRY_ENTRY) interactive-symbol-table generic
  $(ENSURE_REGISTRY_ENTRY) debugger-manager generic
  $(BUILD_LIBRARY) debugger-manager

$(INTERACTIVE_DOWNLOADER):
  $(ENSURE_RUNTIME_LIBRARY) $(IO_DLL) io
  $(ENSURE_LIBRARY) debugger-manager
  $(ENSURE_LIBRARY) coff-manager
  $(ENSURE_LIBRARY) dfmc-browser-support
  $(ENSURE_SOURCES) runtime-manager $(RUNTIME_MANAGER_SOURCE)
  $(ENSURE_REGISTRY_ENTRY) interactive-downloader generic
  $(BUILD_LIBRARY) interactive-downloader

$(SIMPLE_DOWNLOADER):
  $(ENSURE_RUNTIME_LIBRARY) $(IO_DLL) io
  $(ENSURE_LIBRARY) debugger-manager
  $(ENSURE_LIBRARY) coff-manager
  $(ENSURE_SOURCES) runtime-manager $(RUNTIME_MANAGER_SOURCE)
  $(ENSURE_REGISTRY_ENTRY) simple-downloader generic
  $(BUILD_LIBRARY) simple-downloader

$(TARGET_APPLICATION):
  $(ENSURE_RUNTIME_LIBRARY) $(IO_DLL) io
  $(ENSURE_LIBRARY) debugger-manager
  $(ENSURE_SOURCES) environment $(ENVIRONMENT_SOURCE)
  $(ENSURE_REGISTRY_ENTRY) target-application generic
  $(BUILD_LIBRARY) target-application

$(ENVIRONMENT_APPLICATION_COMMANDS):
  $(ENSURE_LIBRARY) target-application
  $(ENSURE_LIBRARY) interactive-downloader
  $(ENSURE_LIBRARY) environment-commands
  $(ENSURE_SOURCES) environment $(ENVIRONMENT_SOURCE)
  $(ENSURE_REGISTRY_ENTRY) dfmc-environment-application generic
  $(ENSURE_REGISTRY_ENTRY) dfmc-environment generic
  $(ENSURE_REGISTRY_ENTRY) environment-application-commands generic
  $(BUILD_LIBRARY) environment-application-commands

$(ENVIRONMENT_COMMANDS):
  $(ENSURE_RUNTIME_LIBRARY) $(IO_DLL) io
  $(ENSURE_RUNTIME_LIBRARY) $(SYSTEM_DLL) system
  $(ENSURE_RUNTIME_LIBRARY) $(CHANNELS_DLL) channels
  $(ENSURE_RUNTIME_LIBRARY) $(COMMANDS_DLL) commands
  $(ENSURE_LIBRARY) file-source-records
  $(ENSURE_LIBRARY) release-info
  $(ENSURE_LIBRARY) user-projects
  $(ENSURE_LIBRARY) dfmc-pentium-harp-cg
  $(ENSURE_LIBRARY) dfmc-debug-back-end
  $(ENSURE_SOURCES) environment $(ENVIRONMENT_SOURCE)
  $(ENSURE_REGISTRY_ENTRY) environment-protocols generic
  $(ENSURE_REGISTRY_ENTRY) environment-reports generic
  $(ENSURE_REGISTRY_ENTRY) environment-manager generic
  $(ENSURE_REGISTRY_ENTRY) source-control-manager generic
  $(ENSURE_REGISTRY_ENTRY) dfmc-environment-database generic
  $(ENSURE_REGISTRY_ENTRY) dfmc-environment-projects generic
  $(ENSURE_REGISTRY_ENTRY) environment-commands generic
  $(BUILD_LIBRARY) environment-commands

$(ENVIRONMENT_DEBUGGER):
  $(ENSURE_LIBRARY) environment-deuce
  $(ENSURE_LIBRARY) target-application
  $(ENSURE_SOURCES) environment $(ENVIRONMENT_SOURCE)
  $(ENSURE_REGISTRY_ENTRY) environment-debugger generic
  $(BUILD_LIBRARY) environment-debugger

$(ENVIRONMENT_DEUCE):
  $(ENSURE_RUNTIME_LIBRARY) $(DUIM_DEUCE_DLL) duim-deuce
  $(ENSURE_LIBRARY) environment-tools
  $(ENSURE_LIBRARY) dfmc-shell
  $(ENSURE_SOURCES) environment $(ENVIRONMENT_SOURCE)
  $(ENSURE_REGISTRY_ENTRY) environment-deuce generic
  $(BUILD_LIBRARY) environment-deuce

$(ENVIRONMENT_INTERNAL_COMMANDS):
  $(ENSURE_LIBRARY) dood
  $(ENSURE_LIBRARY) build-system
  $(ENSURE_LIBRARY) dfmc-browser-support
  $(ENSURE_LIBRARY) user-projects
  $(ENSURE_LIBRARY) environment-commands
  $(ENSURE_SOURCES) environment $(ENVIRONMENT_SOURCE)
  $(ENSURE_REGISTRY_ENTRY) environment-internal-commands generic
  $(BUILD_LIBRARY) environment-internal-commands

$(ENVIRONMENT_PROFILER):
  $(ENSURE_RUNTIME_LIBRARY) $(DUIM_DLL) duim
  $(ENSURE_LIBRARY) environment-tools
  $(ENSURE_SOURCES) environment $(ENVIRONMENT_SOURCE)
  $(ENSURE_REGISTRY_ENTRY) environment-profiler generic
  $(BUILD_LIBRARY) environment-profiler

$(ENVIRONMENT_PROJECT_WIZARD):
  $(ENSURE_RUNTIME_LIBRARY) $(DUIM_DLL) duim
  $(ENSURE_RUNTIME_LIBRARY) $(IO_DLL) io
  $(ENSURE_RUNTIME_LIBRARY) $(SYSTEM_DLL) system
  $(ENSURE_LIBRARY) environment-deuce
  $(ENSURE_LIBRARY) motley
  $(ENSURE_SOURCES) environment $(ENVIRONMENT_SOURCE)
  $(ENSURE_REGISTRY_ENTRY) environment-project-wizard generic
  $(BUILD_LIBRARY) environment-project-wizard

$(BASIC_ENVIRONMENT_PROJECT_WIZARD):
  $(ENSURE_RUNTIME_LIBRARY) $(DUIM_DLL) duim
  $(ENSURE_RUNTIME_LIBRARY) $(IO_DLL) io
  $(ENSURE_RUNTIME_LIBRARY) $(SYSTEM_DLL) system
  $(ENSURE_LIBRARY) environment-deuce
  $(ENSURE_SOURCES) environment $(ENVIRONMENT_SOURCE)
  $(ENSURE_REGISTRY_ENTRY) basic-environment-project-wizard generic
  $(BUILD_LIBRARY) basic-environment-project-wizard

$(ENVIRONMENT_PROPERTY_PAGES):
  $(ENSURE_RUNTIME_LIBRARY) $(DUIM_DEUCE_DLL) duim-deuce
  $(ENSURE_LIBRARY) environment-tools
  $(ENSURE_SOURCES) environment $(ENVIRONMENT_SOURCE)
  $(ENSURE_REGISTRY_ENTRY) environment-property-pages generic
  $(BUILD_LIBRARY) environment-property-pages

$(ENVIRONMENT_SERVER):
  $(ENSURE_LIBRARY) environment-commands
  $(ENSURE_RUNTIME_LIBRARY) $(WIN32_USER_DLL) win32-user
  $(ENSURE_RUNTIME_LIBRARY) $(WIN32_DDE_DLL) win32-dde
  $(ENSURE_SOURCES) environment $(ENVIRONMENT_SOURCE)
  $(ENSURE_REGISTRY_ENTRY) environment-server-parsers generic
  $(ENSURE_REGISTRY_ENTRY) environment-dde-server x86-win32
  $(ENSURE_REGISTRY_ENTRY) environment-server x86-win32
  $(BUILD_LIBRARY) environment-server

$(ENVIRONMENT_TOOLS):
  $(ENSURE_RUNTIME_LIBRARY) $(DUIM_DEUCE_DLL) duim-deuce
  $(ENSURE_LIBRARY) environment-application-commands
  $(ENSURE_LIBRARY) environment-server
  $(ENSURE_SOURCES) environment $(ENVIRONMENT_SOURCE)
  $(ENSURE_REGISTRY_ENTRY) editor-manager generic
  $(ENSURE_REGISTRY_ENTRY) editor-deuce-backend generic
  $(ENSURE_REGISTRY_ENTRY) environment-framework generic
  $(ENSURE_REGISTRY_ENTRY) environment-tools generic
  $(BUILD_LIBRARY) environment-tools

$(DYLAN_ENVIRONMENT):
  $(ENSURE_RUNTIME_LIBRARY) $(WIN32_SHELL_DLL) win32-shell
  $(ENSURE_LIBRARY) environment-application-commands
  $(ENSURE_LIBRARY) environment-property-pages
  $(ENSURE_LIBRARY) environment-deuce
  $(ENSURE_LIBRARY) environment-debugger
  $(ENSURE_REGISTRY_ENTRY) dylan-environment x86-win32
  $(BUILD_LIBRARY) dylan-environment

#
# CORBA
#

$(CORBA_DYLAN):
  $(ENSURE_RUNTIME_LIBRARY) $(IO_DLL) io
  $(ENSURE_RUNTIME_LIBRARY) $(BIG_INTEGERS_DLL) big-integers
  $(ENSURE_RUNTIME_LIBRARY) $(COLLECTIONS_DLL) collections
  $(ENSURE_RUNTIME_LIBRARY) $(SYSTEM_DLL) system
  $(ENSURE_SOURCES) orb $(ORB_SOURCE)
  $(ENSURE_REGISTRY_ENTRY) corba-dylan generic
  $(BUILD_RUNTIME_LIBRARY) corba-dylan

$(CORBA_PROTOCOL):
  $(ENSURE_LIBRARY) corba-dylan
  $(ENSURE_SOURCES) orb $(ORB_SOURCE)
  $(ENSURE_REGISTRY_ENTRY) corba-protocol generic
  $(BUILD_RUNTIME_LIBRARY) corba-protocol

$(DYLAN_ORB):
  $(ENSURE_LIBRARY) orb-poa
  $(ENSURE_LIBRARY) orb-ir
  $(ENSURE_SOURCES) orb $(ORB_SOURCE)
  $(ENSURE_REGISTRY_ENTRY) dylan-orb generic
  $(BUILD_RUNTIME_LIBRARY) dylan-orb $(DYLAN_ORB_DLL)

$(IOP_PROTOCOL):
  $(ENSURE_LIBRARY) corba-protocol
  $(ENSURE_SOURCES) orb $(ORB_SOURCE)
  $(GENERATE_IDL_BINDINGS) /libmod functional-dylan /libmod corba-protocol /prefix iop /protocol $(ORB_SOURCE) iop
  $(ENSURE_REGISTRY_ENTRY) iop-protocol generic
  $(BUILD_RUNTIME_LIBRARY) iop-protocol

$(IR_STUBS):
  $(ENSURE_LIBRARY) corba-protocol
  $(ENSURE_LIBRARY) orb-core
  $(ENSURE_SOURCES) orb $(ORB_SOURCE)
  $(GENERATE_IDL_BINDINGS) /prefix ir /libmod functional-dylan /libmod corba-protocol /libmod orb-core /protocol /stubs /main /include $(ORB_SOURCE) $(ORB_SOURCE) ir
  $(ENSURE_REGISTRY_ENTRY) ir-protocol generic
  $(ENSURE_REGISTRY_ENTRY) ir-stubs generic
  $(BUILD_RUNTIME_LIBRARY) ir-stubs

$(ORB_CONNECTIONS):
  $(ENSURE_RUNTIME_LIBRARY) $(NETWORK_DLL) network
  $(ENSURE_LIBRARY) orb-core
  $(ENSURE_SOURCES) orb $(ORB_SOURCE)
  $(ENSURE_REGISTRY_ENTRY) orb-connections generic
  $(BUILD_RUNTIME_LIBRARY) orb-connections

$(ORB_CORE):
  $(ENSURE_RUNTIME_LIBRARY) $(SYSTEM_DLL) system
  $(ENSURE_RUNTIME_LIBRARY) $(NETWORK_DLL) network
  $(ENSURE_LIBRARY) orb-iiop
  $(ENSURE_SOURCES) orb $(ORB_SOURCE)
  $(ENSURE_REGISTRY_ENTRY) orb-core generic
  $(BUILD_RUNTIME_LIBRARY) orb-core

$(ORB_IIOP):
  $(ENSURE_LIBRARY) orb-streams
  $(ENSURE_LIBRARY) iop-protocol
  $(ENSURE_SOURCES) orb $(ORB_SOURCE)
  $(ENSURE_REGISTRY_ENTRY) orb-iiop generic
  $(BUILD_RUNTIME_LIBRARY) orb-iiop

$(ORB_IR):
  $(ENSURE_LIBRARY) portableserver-protocol
  $(ENSURE_LIBRARY) iop-protocol
  $(ENSURE_LIBRARY) orb-core
  $(ENSURE_LIBRARY) ir-stubs
  $(ENSURE_SOURCES) orb $(ORB_SOURCE)
  $(ENSURE_REGISTRY_ENTRY) orb-ir generic
  $(BUILD_RUNTIME_LIBRARY) orb-ir

$(ORB_POA):
  $(ENSURE_LIBRARY) iop-protocol
  $(ENSURE_LIBRARY) portableserver-protocol
  $(ENSURE_LIBRARY) orb-connections
  $(ENSURE_SOURCES) orb $(ORB_SOURCE)
  $(ENSURE_REGISTRY_ENTRY) orb-poa generic
  $(BUILD_RUNTIME_LIBRARY) orb-poa

$(ORB_STREAMS):
  $(ENSURE_LIBRARY) orb-utilities
  $(ENSURE_SOURCES) orb $(ORB_SOURCE)
  $(ENSURE_REGISTRY_ENTRY) orb-streams generic
  $(BUILD_RUNTIME_LIBRARY) orb-streams

$(ORB_UTILITIES):
  $(ENSURE_RUNTIME_LIBRARY) $(IO_DLL) io
  $(ENSURE_LIBRARY) corba-dylan
  $(ENSURE_SOURCES) orb $(ORB_SOURCE)
  $(ENSURE_REGISTRY_ENTRY) orb-utilities generic
  $(BUILD_RUNTIME_LIBRARY) orb-utilities

$(PORTABLESERVER_PROTOCOL):
  $(ENSURE_LIBRARY) corba-protocol
  $(ENSURE_SOURCES) orb $(ORB_SOURCE)
  $(ENSURE_REGISTRY_ENTRY) portableserver-protocol generic
  $(BUILD_RUNTIME_LIBRARY) portableserver-protocol


$(CONSOLE_SCEPTER):
  $(ENSURE_RUNTIME_LIBRARY) $(IO_DLL) io
  $(ENSURE_RUNTIME_LIBRARY) $(SYSTEM_DLL) system
  $(ENSURE_RUNTIME_LIBRARY) $(BIG_INTEGERS_DLL) big-integers
  $(ENSURE_RUNTIME_LIBRARY) $(DYLAN_ORB_DLL) dylan-orb
  $(ENSURE_LIBRARY) parser-run-time
  $(ENSURE_LIBRARY) c-lexer
  $(ENSURE_SOURCES) scepter $(SCEPTER_SOURCE)
  $(ENSURE_REGISTRY_ENTRY) scepter-utilities generic
  $(ENSURE_REGISTRY_ENTRY) scepter-ast generic
  $(ENSURE_REGISTRY_ENTRY) scepter-core generic
  $(ENSURE_REGISTRY_ENTRY) scepter-dump-back-end generic
  $(ENSURE_REGISTRY_ENTRY) scepter-dylan-back-end generic
  $(ENSURE_REGISTRY_ENTRY) scepter-ir-back-end generic
  $(ENSURE_REGISTRY_ENTRY) scepter-file-front-end generic
  $(ENSURE_REGISTRY_ENTRY) scepter generic
  $(ENSURE_REGISTRY_ENTRY) console-scepter generic
  $(GENERATE_PARSER) $(SCEPTER_SOURCE)\front-end\file\parser.dylgram $(SCEPTER_SOURCE)\front-end\file parser
  $(BUILD_APPLICATION) console-scepter

$(NAMING_CLIENT):
  $(ENSURE_RUNTIME_LIBRARY) $(COLLECTIONS_DLL) collections
  $(ENSURE_RUNTIME_LIBRARY) $(DYLAN_ORB_DLL) dylan-orb
  $(ENSURE_SOURCES) naming-service $(NAMING_SERVICE_SOURCE)
  $(GENERATE_IDL_BINDINGS) /prefix naming /protocol /stubs /skeletons /main $(NAMING_SERVICE_SOURCE) naming
  $(ENSURE_REGISTRY_ENTRY) naming-protocol generic
  $(ENSURE_REGISTRY_ENTRY) naming-stubs generic
  $(ENSURE_REGISTRY_ENTRY) naming-client x86-win32
  $(BUILD_RUNTIME_LIBRARY) naming-client

$(NAMING_SERVICE):
  $(ENSURE_RUNTIME_LIBRARY) $(COLLECTIONS_DLL) collections
  $(ENSURE_RUNTIME_LIBRARY) $(DYLAN_ORB_DLL) dylan-orb
  $(ENSURE_RUNTIME_LIBRARY) $(NAMING_CLIENT_DLL) naming-client
  $(ENSURE_SOURCES) naming-service $(NAMING_SERVICE_SOURCE)
  $(ENSURE_REGISTRY_ENTRY) naming-skeletons generic
  $(ENSURE_REGISTRY_ENTRY) naming-service generic
  $(BUILD_APPLICATION) naming-service

$(TOOL_SCEPTER):
  $(ENSURE_LIBRARY) tools-interface
  $(ENSURE_LIBRARY) /dll scepter console-scepter
  $(ENSURE_SOURCES) scepter $(SCEPTER_SOURCE)
  $(ENSURE_REGISTRY_ENTRY) scepter-utilities generic
  $(ENSURE_REGISTRY_ENTRY) scepter-ast generic
  $(ENSURE_REGISTRY_ENTRY) scepter-core generic
  $(ENSURE_REGISTRY_ENTRY) scepter-dump-back-end generic
  $(ENSURE_REGISTRY_ENTRY) scepter-dylan-back-end generic
  $(ENSURE_REGISTRY_ENTRY) scepter-file-front-end generic
  $(ENSURE_REGISTRY_ENTRY) scepter generic
  $(ENSURE_REGISTRY_ENTRY) tool-scepter generic
  $(BUILD_LIBRARY) tool-scepter

$(REMOTE_ACCESS_PATH):
  $(ENSURE_RUNTIME_LIBRARY) $(FUNCTIONAL_DYLAN_DLL) functional-dylan
  $(ENSURE_RUNTIME_LIBRARY) $(IO_DLL) io
  $(ENSURE_LIBRARY) remote-nub-client
  $(ENSURE_SOURCES) runtime-manager $(RUNTIME_MANAGER_SOURCE)
  $(ENSURE_REGISTRY_ENTRY) access-path generic
  $(ENSURE_REGISTRY_ENTRY) remote-access-path generic
  $(BUILD_LIBRARY) remote-access-path

$(REMOTE_NUB_CLIENT):
  $(ENSURE_RUNTIME_LIBRARY) $(COLLECTIONS_DLL) collections
  $(ENSURE_RUNTIME_LIBRARY) $(DYLAN_ORB_DLL) dylan-orb
  $(ENSURE_SOURCES) runtime-manager $(RUNTIME_MANAGER_SOURCE)
  $(GENERATE_IDL_BINDINGS) /protocol /stubs /skeletons $(RUNTIME_MANAGER_SOURCE)\debugger-nub remote-nub
  $(ENSURE_REGISTRY_ENTRY) remote-nub-protocol generic
  $(ENSURE_REGISTRY_ENTRY) remote-nub-stubs generic
  $(ENSURE_REGISTRY_ENTRY) remote-nub-skeletons generic
  $(ENSURE_REGISTRY_ENTRY) remote-nub-client generic
  $(BUILD_LIBRARY) remote-nub-client

$(REMOTE_NUB):
  $(ENSURE_LIBRARY) remote-nub-client
  $(ENSURE_SOURCES) runtime-manager $(RUNTIME_MANAGER_SOURCE)
  $(ENSURE_REGISTRY_ENTRY) remote-nub generic
  $(BUILD_APPLICATION) remote-nub

$(DEBUGGER_SERVER):
  $(ENSURE_LIBRARY) remote-nub-client
  $(ENSURE_SOURCES) runtime-manager $(RUNTIME_MANAGER_SOURCE)
  $(ENSURE_REGISTRY_ENTRY) debugger-server generic
  $(BUILD_APPLICATION) debugger-server


#
# Applications
#

$(BATCH_DEBUG):
  $(ENSURE_APPLICATION) devel-dbg-ui
  $(ENSURE_LIBRARY) release-info
  $(ENSURE_LIBRARY) remote-access-path
  $(ENSURE_REGISTRY_ENTRY) batch-debug generic
  $(BUILD_APPLICATION) batch-debug

$(CREATE_ID):
  $(ENSURE_RUNTIME_LIBRARY) $(SYSTEM_DLL) system
  $(ENSURE_LIBRARY) ole-server
  $(ENSURE_SOURCES) create-id $(CREATE_ID_SOURCE)
  $(ENSURE_REGISTRY_ENTRY) create-id x86-win32
  $(BUILD_APPLICATION) create-id

$(DEVEL_DBG_UI):
  $(ENSURE_RUNTIME_LIBRARY) $(IO_DLL) io
  $(ENSURE_RUNTIME_LIBRARY) $(SYSTEM_DLL) system
  $(ENSURE_RUNTIME_LIBRARY) $(COLLECTIONS_DLL) collections
  $(ENSURE_LIBRARY) debugger-manager
  $(ENSURE_LIBRARY) coff-debug
  $(ENSURE_LIBRARY) disasm
  $(ENSURE_LIBRARY) simple-downloader
  $(ENSURE_LIBRARY) release-info
  $(ENSURE_LIBRARY) remote-access-path
  $(ENSURE_REGISTRY_ENTRY) devel-dbg-ui generic
  $(BUILD_APPLICATION) devel-dbg-ui

$(DLL_WRAP):
  $(ENSURE_RUNTIME_LIBRARY) $(IO_DLL) io
  $(ENSURE_RUNTIME_LIBRARY) $(SYSTEM_DLL) system
  $(ENSURE_RUNTIME_LIBRARY) $(WIN32_KERNEL_DLL) win32-kernel
  $(ENSURE_SOURCES) dll-wrap $(DLL_WRAP_SOURCE)
  $(ENSURE_REGISTRY_ENTRY) dll-wrap x86-win32
  $(BUILD_APPLICATION) dll-wrap

$(MINIMAL_DYLAN_PLAYGROUND):
  $(MAKE) user-libraries
  $(ENSURE_SOURCES) dylan-playground $(DYLAN_PLAYGROUND_SOURCE)
  $(ENSURE_REGISTRY_ENTRY) minimal-dylan-playground generic
  $(BUILD_APPLICATION) minimal-dylan-playground

$(DYLAN_PLAYGROUND):
  $(MAKE) user-libraries
  $(ENSURE_SOURCES) dylan-playground $(DYLAN_PLAYGROUND_SOURCE)
  $(ENSURE_REGISTRY_ENTRY) dylan-playground generic
  $(BUILD_APPLICATION) dylan-playground

$(GUI_DYLAN_PLAYGROUND):
  $(MAKE) user-libraries
  $(ENSURE_RUNTIME_LIBRARY) $(DUIM_DLL) duim
  $(ENSURE_SOURCES) dylan-playground $(DYLAN_PLAYGROUND_SOURCE)
  $(ENSURE_REGISTRY_ENTRY) gui-dylan-playground generic
  $(BUILD_APPLICATION) gui-dylan-playground

$(PENTIUM_DW):
  $(ENSURE_LIBRARY) dfmc-pentium-file-compiler
  $(ENSURE_LIBRARY) motley
  $(ENSURE_LIBRARY) tool-scepter
  $(ENSURE_LIBRARY) release-info
  $(ENSURE_LIBRARY) licensing
  $(ENSURE_LIBRARY) dfmc-shell
  $(ENSURE_LIBRARY) dispatch-profiler
  $(ENSURE_SOURCES) dw $(DW_SOURCE)
  $(ENSURE_REGISTRY_ENTRY) pentium-dw generic
  $(BUILD_APPLICATION) pentium-dw

$(DW):
  $(ENSURE_LIBRARY) dfmc-c-file-compiler
  $(ENSURE_LIBRARY) release-info
  $(ENSURE_LIBRARY) licensing
  $(ENSURE_LIBRARY) hd2c-dfmc-shell
  $(ENSURE_LIBRARY) dispatch-profiler
  $(ENSURE_SOURCES) dw $(DW_SOURCE)
  $(ENSURE_REGISTRY_ENTRY) dw generic
  $(BUILD_APPLICATION) dw

$(INTERPRETER):
  $(ENSURE_LIBRARY) dfmc-interpreter-file-compiler
  $(ENSURE_LIBRARY) release-info
  $(ENSURE_LIBRARY) licensing
  $(ENSURE_LIBRARY) interpreter-dfmc-shell
  $(ENSURE_LIBRARY) dispatch-profiler
  $(ENSURE_SOURCES) dw $(DW_SOURCE)
  $(ENSURE_REGISTRY_ENTRY) interpreter generic
  $(BUILD_APPLICATION) interpreter

$(INTERACTIVE_COMPILER):
  $(ENSURE_APPLICATION) pentium-dw
  $(ENSURE_LIBRARY) interactive-downloader
  $(ENSURE_LIBRARY) coff-debug
  $(ENSURE_LIBRARY) disasm
  $(ENSURE_SOURCES) dw $(DW_SOURCE)
  $(ENSURE_REGISTRY_ENTRY) interactive-compiler generic
  $(BUILD_APPLICATION) interactive-compiler

$(PARSER_COMPILER):
  $(ENSURE_RUNTIME_LIBRARY) $(FUNCTIONAL_DYLAN_DLL) functional-dylan
  $(ENSURE_RUNTIME_LIBRARY) $(IO_DLL) io
  $(ENSURE_RUNTIME_LIBRARY) $(SYSTEM_DLL) system
  $(ENSURE_LIBRARY) grammar-compiler
  $(ENSURE_SOURCES) parser-generator $(PARSER_GENERATOR_SOURCE)
  $(ENSURE_SOURCES) parser-compiler $(PARSER_COMPILER_SOURCE)
  $(ENSURE_REGISTRY_ENTRY) parser-generator generic
  $(ENSURE_REGISTRY_ENTRY) parser-compiler generic
  $(BUILD_APPLICATION) parser-compiler

$(MINIMAL_PENTIUM_DW):
  $(ENSURE_LIBRARY) dfmc-pentium-file-compiler
  $(ENSURE_LIBRARY) release-info
  $(ENSURE_LIBRARY) licensing
  $(ENSURE_LIBRARY) dfmc-shell
  $(ENSURE_LIBRARY) dispatch-profiler
  $(ENSURE_SOURCES) dw $(DW_SOURCE)
  $(ENSURE_REGISTRY_ENTRY) minimal-pentium-dw generic
  $(BUILD_APPLICATION) minimal-pentium-dw

$(MINIMAL_CONSOLE_COMPILER):
  $(ENSURE_LIBRARY) environment-commands
  $(ENSURE_LIBRARY) environment-internal-commands
  $(ENSURE_LIBRARY) release-info
  $(ENSURE_LIBRARY) licensing
  $(ENSURE_REGISTRY_ENTRY) minimal-console-compiler generic
  $(BUILD_APPLICATION) minimal-console-compiler

$(MINIMAL_CONSOLE_ENVIRONMENT):
  $(ENSURE_LIBRARY) environment-application-commands
  $(ENSURE_LIBRARY) environment-internal-commands
  $(ENSURE_LIBRARY) release-info
  $(ENSURE_LIBRARY) licensing
  $(ENSURE_REGISTRY_ENTRY) minimal-console-environment generic
  $(BUILD_APPLICATION) minimal-console-environment

$(MINIMAL_WIN32_ENVIRONMENT):
  $(ENSURE_RUNTIME_LIBRARY) $(WIN32_SHELL_DLL) win32-shell
  $(ENSURE_LIBRARY) dylan-environment
  $(ENSURE_LIBRARY) environment-profiler
  $(ENSURE_LIBRARY) basic-environment-project-wizard
  $(ENSURE_LIBRARY) environment-internal-commands
  $(ENSURE_LIBRARY) release-info
  $(ENSURE_LIBRARY) licensing
  $(ENSURE_REGISTRY_ENTRY) source-control-hope-backend generic
  $(ENSURE_REGISTRY_ENTRY) minimal-win32-environment x86-win32
  $(BUILD_APPLICATION) minimal-win32-environment

$(MINIMAL_GTK_ENVIRONMENT):
  $(ENSURE_RUNTIME_LIBRARY) $(WIN32_SHELL_DLL) win32-shell
  $(ENSURE_LIBRARY) gtk-duim
  $(ENSURE_LIBRARY) dylan-environment
  $(ENSURE_LIBRARY) environment-profiler
  $(ENSURE_LIBRARY) basic-environment-project-wizard
  $(ENSURE_LIBRARY) environment-internal-commands
  $(ENSURE_LIBRARY) release-info
  $(ENSURE_LIBRARY) licensing
  $(ENSURE_REGISTRY_ENTRY) source-control-hope-backend generic
  $(ENSURE_REGISTRY_ENTRY) minimal-gtk-environment x86-win32
  $(BUILD_APPLICATION) minimal-gtk-environment

$(CONSOLE_COMPILER):
  $(ENSURE_LIBRARY) environment-commands
  $(ENSURE_LIBRARY) environment-internal-commands
  $(ENSURE_LIBRARY) motley
  $(ENSURE_LIBRARY) tool-scepter
  $(ENSURE_LIBRARY) release-info
  $(ENSURE_LIBRARY) licensing
  $(ENSURE_REGISTRY_ENTRY) console-compiler generic
  $(BUILD_APPLICATION) console-compiler

$(CONSOLE_ENVIRONMENT):
  $(ENSURE_LIBRARY) environment-application-commands
  $(ENSURE_LIBRARY) environment-internal-commands
  $(ENSURE_LIBRARY) motley
  $(ENSURE_LIBRARY) tool-scepter
  $(ENSURE_LIBRARY) remote-access-path
  $(ENSURE_LIBRARY) release-info
  $(ENSURE_LIBRARY) licensing
  $(ENSURE_REGISTRY_ENTRY) console-environment generic
  $(BUILD_APPLICATION) console-environment

$(WIN32_ENVIRONMENT):
  $(ENSURE_RUNTIME_LIBRARY) $(WIN32_SHELL_DLL) win32-shell
  $(ENSURE_LIBRARY) dylan-environment
  $(ENSURE_LIBRARY) environment-profiler
  $(ENSURE_LIBRARY) environment-project-wizard
  $(ENSURE_LIBRARY) environment-internal-commands
  $(ENSURE_LIBRARY) motley
  $(ENSURE_LIBRARY) tool-scepter
  $(ENSURE_LIBRARY) remote-access-path
  $(ENSURE_LIBRARY) tool-parser-generator
  $(ENSURE_LIBRARY) release-info
  $(ENSURE_LIBRARY) licensing
  $(ENSURE_REGISTRY_ENTRY) SourceSafeTypeLib x86-win32
  $(ENSURE_REGISTRY_ENTRY) source-control-vss-backend x86-win32
  $(ENSURE_REGISTRY_ENTRY) source-control-hope-backend generic
  $(ENSURE_REGISTRY_ENTRY) win32-environment x86-win32
  $(BUILD_APPLICATION) win32-environment

$(GTK_ENVIRONMENT):
  $(ENSURE_RUNTIME_LIBRARY) $(WIN32_SHELL_DLL) win32-shell
  $(ENSURE_LIBRARY) gtk-duim
  $(ENSURE_LIBRARY) dylan-environment
  $(ENSURE_LIBRARY) environment-profiler
  $(ENSURE_LIBRARY) environment-project-wizard
  $(ENSURE_LIBRARY) environment-internal-commands
  $(ENSURE_LIBRARY) motley
  $(ENSURE_LIBRARY) tool-scepter
  $(ENSURE_LIBRARY) remote-access-path
  $(ENSURE_LIBRARY) tool-parser-generator
  $(ENSURE_LIBRARY) release-info
  $(ENSURE_LIBRARY) licensing
  $(ENSURE_REGISTRY_ENTRY) SourceSafeTypeLib x86-win32
  $(ENSURE_REGISTRY_ENTRY) source-control-vss-backend x86-win32
  $(ENSURE_REGISTRY_ENTRY) source-control-hope-backend generic
  $(ENSURE_REGISTRY_ENTRY) gtk-environment x86-win32
  $(BUILD_APPLICATION) gtk-environment

$(WITH_SPLASH_SCREEN):
  $(ENSURE_RUNTIME_LIBRARY) $(WIN32_USER_DLL) win32-user
  $(ENSURE_RUNTIME_LIBRARY) $(SYSTEM_DLL) system
  $(ENSURE_SOURCES) with-splash-screen $(WITH_SPLASH_SCREEN_SOURCE)
  $(ENSURE_REGISTRY_ENTRY) with-splash-screen x86-win32
  $(BUILD_APPLICATION) with-splash-screen

$(MAP_STATISTICS):
  $(ENSURE_RUNTIME_LIBRARY) $(FUNCTIONAL_DYLAN_DLL) functional-dylan
  $(ENSURE_RUNTIME_LIBRARY) $(IO_DLL) io
  $(ENSURE_RUNTIME_LIBRARY) $(SYSTEM_DLL) system
  $(ENSURE_SOURCES) map-statistics $(MAP_STATISTICS_SOURCE)
  $(ENSURE_REGISTRY_ENTRY) map-statistics x86-win32
  $(BUILD_APPLICATION) map-statistics

$(TEST_REPORT):
  $(ENSURE_RUNTIME_LIBRARY) $(FUNCTIONAL_DYLAN_DLL) functional-dylan
  $(ENSURE_RUNTIME_LIBRARY) $(IO_DLL) io
  $(ENSURE_RUNTIME_LIBRARY) $(SYSTEM_DLL) system
  $(ENSURE_RUNTIME_LIBRARY) $(TESTWORKS_DLL) testworks
  $(ENSURE_SOURCES) test-report $(TEST_REPORT_SOURCE)
  $(ENSURE_REGISTRY_ENTRY) test-report generic
  $(BUILD_APPLICATION) test-report

# Basic Release

$(BASIC_RELEASE_INFO):
  $(ENSURE_LIBRARY) release-info
  $(ENSURE_SOURCES) release-info $(RELEASE_INFO_SOURCE)
  $(ENSURE_REGISTRY_ENTRY) basic-release-info generic
  $(BUILD_LIBRARY) basic-release-info

$(BASIC_PENTIUM_DW):
  $(ENSURE_LIBRARY) dfmc-pentium-file-compiler
  $(ENSURE_LIBRARY) basic-release-info
  $(ENSURE_LIBRARY) licensing
  $(ENSURE_LIBRARY) dfmc-shell
  $(ENSURE_LIBRARY) dispatch-profiler
  $(ENSURE_SOURCES) dw $(DW_SOURCE)
  $(ENSURE_REGISTRY_ENTRY) basic-pentium-dw x86-win32
  $(BUILD_APPLICATION) basic-pentium-dw

$(BASIC_CONSOLE_COMPILER):
  $(ENSURE_LIBRARY) environment-commands
  $(ENSURE_LIBRARY) basic-release-info
  $(ENSURE_LIBRARY) licensing
  $(ENSURE_REGISTRY_ENTRY) basic-console-compiler generic
  $(BUILD_APPLICATION) basic-console-compiler

$(BASIC_CONSOLE_ENVIRONMENT):
  $(ENSURE_LIBRARY) environment-application-commands
  $(ENSURE_LIBRARY) basic-release-info
  $(ENSURE_LIBRARY) licensing
  $(ENSURE_REGISTRY_ENTRY) basic-console-environment generic
  $(BUILD_APPLICATION) basic-console-environment

$(BASIC_WIN32_ENVIRONMENT):
  $(ENSURE_RUNTIME_LIBRARY) $(WIN32_SHELL_DLL) win32-shell
  $(ENSURE_LIBRARY) dylan-environment
  $(ENSURE_LIBRARY) basic-environment-project-wizard
  $(ENSURE_LIBRARY) basic-release-info
  $(ENSURE_LIBRARY) licensing
  $(ENSURE_REGISTRY_ENTRY) basic-win32-environment x86-win32
  $(BUILD_APPLICATION) basic-win32-environment

$(BASIC_GTK_ENVIRONMENT):
  $(ENSURE_RUNTIME_LIBRARY) $(WIN32_SHELL_DLL) win32-shell
  $(ENSURE_LIBRARY) gtk-duim
  $(ENSURE_LIBRARY) dylan-environment
  $(ENSURE_LIBRARY) basic-environment-project-wizard
  $(ENSURE_LIBRARY) basic-release-info
  $(ENSURE_LIBRARY) licensing
  $(ENSURE_REGISTRY_ENTRY) basic-gtk-environment x86-win32
  $(BUILD_APPLICATION) basic-gtk-environment

$(BASIC_BATCH_DEBUG):
  $(ENSURE_APPLICATION) devel-dbg-ui
  $(ENSURE_LIBRARY) basic-release-info
  $(ENSURE_REGISTRY_ENTRY) basic-batch-debug generic
  $(BUILD_APPLICATION) basic-batch-debug

# Enhanced Release

$(ENHANCED_RELEASE_INFO):
  $(ENSURE_LIBRARY) release-info
  $(ENSURE_SOURCES) release-info $(RELEASE_INFO_SOURCE)
  $(ENSURE_REGISTRY_ENTRY) enhanced-release-info generic
  $(BUILD_LIBRARY) enhanced-release-info

$(ENHANCED_PENTIUM_DW):
  $(ENSURE_LIBRARY) dfmc-pentium-file-compiler
  $(ENSURE_LIBRARY) motley
  $(ENSURE_LIBRARY) tool-scepter
  $(ENSURE_LIBRARY) enhanced-release-info
  $(ENSURE_LIBRARY) licensing
  $(ENSURE_LIBRARY) dfmc-shell
  $(ENSURE_LIBRARY) dispatch-profiler
  $(ENSURE_SOURCES) dw $(DW_SOURCE)
  $(ENSURE_REGISTRY_ENTRY) enhanced-pentium-dw x86-win32
  $(BUILD_APPLICATION) enhanced-pentium-dw

$(ENHANCED_CONSOLE_COMPILER):
  $(ENSURE_LIBRARY) environment-commands
  $(ENSURE_LIBRARY) enhanced-release-info
  $(ENSURE_LIBRARY) motley
  $(ENSURE_LIBRARY) tool-scepter
  $(ENSURE_LIBRARY) licensing
  $(ENSURE_REGISTRY_ENTRY) enhanced-console-compiler generic
  $(BUILD_APPLICATION) enhanced-console-compiler

$(ENHANCED_CONSOLE_ENVIRONMENT):
  $(ENSURE_LIBRARY) environment-application-commands
  $(ENSURE_LIBRARY) enhanced-release-info
  $(ENSURE_LIBRARY) motley
  $(ENSURE_LIBRARY) tool-scepter
  $(ENSURE_LIBRARY) remote-access-path
  $(ENSURE_LIBRARY) licensing
  $(ENSURE_REGISTRY_ENTRY) enhanced-console-environment generic
  $(BUILD_APPLICATION) enhanced-console-environment

$(ENHANCED_WIN32_ENVIRONMENT):
  $(ENSURE_RUNTIME_LIBRARY) $(WIN32_SHELL_DLL) win32-shell
  $(ENSURE_LIBRARY) dylan-environment
  $(ENSURE_LIBRARY) environment-profiler
  $(ENSURE_LIBRARY) environment-project-wizard
  $(ENSURE_LIBRARY) motley
  $(ENSURE_LIBRARY) tool-scepter
  $(ENSURE_LIBRARY) remote-access-path
  $(ENSURE_LIBRARY) enhanced-release-info
  $(ENSURE_LIBRARY) licensing
  $(ENSURE_REGISTRY_ENTRY) SourceSafeTypeLib x86-win32
  $(ENSURE_REGISTRY_ENTRY) source-control-vss-backend x86-win32
  $(ENSURE_REGISTRY_ENTRY) enhanced-win32-environment x86-win32
  $(BUILD_APPLICATION) enhanced-win32-environment

$(ENHANCED_GTK_ENVIRONMENT):
  $(ENSURE_RUNTIME_LIBRARY) $(WIN32_SHELL_DLL) win32-shell
  $(ENSURE_LIBRARY) gtk-duim
  $(ENSURE_LIBRARY) dylan-environment
  $(ENSURE_LIBRARY) environment-profiler
  $(ENSURE_LIBRARY) environment-project-wizard
  $(ENSURE_LIBRARY) motley
  $(ENSURE_LIBRARY) tool-scepter
  $(ENSURE_LIBRARY) remote-access-path
  $(ENSURE_LIBRARY) enhanced-release-info
  $(ENSURE_LIBRARY) licensing
  $(ENSURE_REGISTRY_ENTRY) SourceSafeTypeLib x86-win32
  $(ENSURE_REGISTRY_ENTRY) source-control-vss-backend x86-win32
  $(ENSURE_REGISTRY_ENTRY) enhanced-gtk-environment x86-win32
  $(BUILD_APPLICATION) enhanced-gtk-environment

$(ENHANCED_BATCH_DEBUG):
  $(ENSURE_APPLICATION) devel-dbg-ui
  $(ENSURE_LIBRARY) enhanced-release-info
  $(ENSURE_LIBRARY) remote-access-path
  $(ENSURE_REGISTRY_ENTRY) enhanced-batch-debug generic
  $(BUILD_APPLICATION) enhanced-batch-debug

# Test Suites

$(CMU_TEST_SUITE):
  $(ENSURE_RUNTIME_LIBRARY) $(FUNCTIONAL_DYLAN_DLL) functional-dylan
  $(ENSURE_SOURCES) cmu-test-suite $(CMU_TEST_SUITE_SOURCE)
  $(ENSURE_REGISTRY_ENTRY) cmu-test-suite generic
  $(BUILD_APPLICATION) cmu-test-suite

$(DYLAN_TEST_SUITE):
  $(ENSURE_RUNTIME_LIBRARY) $(FUNCTIONAL_DYLAN_DLL) functional-dylan
  $(ENSURE_RUNTIME_LIBRARY) $(TESTWORKS_SPECS_DLL) testworks-specs
  $(ENSURE_SOURCES) dylan-test-suite $(DYLAN_TEST_SUITE_SOURCE)
  $(ENSURE_REGISTRY_ENTRY) dylan-test-suite generic
  $(BUILD_LIBRARY) dylan-test-suite

$(DYLAN_TEST_SUITE_APP):
  $(ENSURE_RUNTIME_LIBRARY) $(TESTWORKS_DLL) testworks
  $(ENSURE_LIBRARY) dylan-test-suite
  $(ENSURE_SOURCES) test-apps $(TEST_APPS_SOURCE)
  $(ENSURE_REGISTRY_ENTRY) dylan-test-suite-app generic
  $(BUILD_APPLICATION) dylan-test-suite-app

$(COMMON_DYLAN_TEST_SUITE):
  $(ENSURE_LIBRARY) dylan-test-suite
  $(ENSURE_SOURCES) common-dylan-test-suite $(COMMON_DYLAN_TESTS_SOURCE)
  $(ENSURE_REGISTRY_ENTRY) common-dylan-test-suite generic
  $(BUILD_LIBRARY) common-dylan-test-suite

$(COMMON_DYLAN_TEST_SUITE_APP):
  $(ENSURE_RUNTIME_LIBRARY) $(TESTWORKS_DLL) testworks
  $(ENSURE_LIBRARY) common-dylan-test-suite
  $(ENSURE_SOURCES) test-apps $(TEST_APPS_SOURCE)
  $(ENSURE_REGISTRY_ENTRY) common-dylan-test-suite-app generic
  $(BUILD_APPLICATION) common-dylan-test-suite-app

$(FUNCTIONAL_DYLAN_TEST_SUITE):
  $(ENSURE_LIBRARY) dylan-test-suite
  $(ENSURE_LIBRARY) common-dylan-test-suite
  $(ENSURE_SOURCES) functional-dylan-test-suite $(FUNCTIONAL_DYLAN_TESTS_SOURCE)
  $(ENSURE_REGISTRY_ENTRY) functional-dylan-test-suite generic
  $(BUILD_LIBRARY) functional-dylan-test-suite

$(FUNCTIONAL_DYLAN_TEST_SUITE_APP):
  $(ENSURE_RUNTIME_LIBRARY) $(TESTWORKS_DLL) testworks
  $(ENSURE_LIBRARY) functional-dylan-test-suite
  $(ENSURE_SOURCES) test-apps $(TEST_APPS_SOURCE)
  $(ENSURE_REGISTRY_ENTRY) functional-dylan-test-suite-app generic
  $(BUILD_APPLICATION) functional-dylan-test-suite-app

$(COLLECTIONS_TEST_SUITE):
  $(ENSURE_RUNTIME_LIBRARY) $(COLLECTIONS_DLL) collections
  $(ENSURE_RUNTIME_LIBRARY) $(TESTWORKS_SPECS_DLL) testworks-specs
  $(ENSURE_SOURCES) colletions-tests $(COLLECTIONS_TESTS_SOURCE)
  $(ENSURE_REGISTRY_ENTRY) collections-test-suite generic
  $(BUILD_LIBRARY) collections-test-suite

$(SYSTEM_TEST_SUITE):
  $(ENSURE_RUNTIME_LIBRARY) $(SYSTEM_DLL) system
  $(ENSURE_RUNTIME_LIBRARY) $(TESTWORKS_SPECS_DLL) testworks-specs
  $(ENSURE_SOURCES) system-test-suite $(SYSTEM_TESTS_SOURCE)
  $(ENSURE_REGISTRY_ENTRY) system-test-suite generic
  $(BUILD_LIBRARY) system-test-suite  

$(IO_TEST_SUITE):
  $(ENSURE_RUNTIME_LIBRARY) $(IO_DLL) io
  $(ENSURE_RUNTIME_LIBRARY) $(TESTWORKS_SPECS_DLL) testworks-specs
  $(ENSURE_SOURCES) io-test-suite $(IO_TESTS_SOURCE)
  $(ENSURE_REGISTRY_ENTRY) io-test-suite generic
  $(BUILD_LIBRARY) io-test-suite

$(LIBRARIES_TEST_SUITE):
  $(ENSURE_RUNTIME_LIBRARY) $(FUNCTIONAL_DYLAN_DLL) functional-dylan
  $(ENSURE_RUNTIME_LIBRARY) $(TESTWORKS_DLL) testworks
  $(ENSURE_LIBRARY) dylan-test-suite
  $(ENSURE_LIBRARY) common-dylan-test-suite
  $(ENSURE_LIBRARY) functional-dylan-test-suite
  $(ENSURE_LIBRARY) collections-test-suite
  $(ENSURE_LIBRARY) system-test-suite
  $(ENSURE_LIBRARY) io-test-suite
  $(ENSURE_LIBRARY) testworks-test-suite
  $(ENSURE_SOURCES) test-suites $(TEST_SUITES_SOURCE)
  $(ENSURE_REGISTRY_ENTRY) libraries-test-suite generic
  $(BUILD_LIBRARY) libraries-test-suite

$(LIBRARIES_TEST_SUITE_APP):
  $(ENSURE_RUNTIME_LIBRARY) $(TESTWORKS_DLL) testworks
  $(ENSURE_LIBRARY) libraries-test-suite
  $(ENSURE_SOURCES) test-apps $(TEST_APPS_SOURCE)
  $(ENSURE_REGISTRY_ENTRY) libraries-test-suite-app generic
  $(BUILD_APPLICATION) libraries-test-suite-app

$(C_FFI_TEST_SUITE_APP):
  $(ENSURE_RUNTIME_LIBRARY) $(SYSTEM_DLL) system
  $(ENSURE_RUNTIME_LIBRARY) $(TESTWORKS_DLL) testworks
  $(ENSURE_SOURCES) c-ffi $(C_FFI_SOURCE)
  $(ENSURE_SOURCES) test-apps $(TEST_APPS_SOURCE)
  $(ENSURE_REGISTRY_ENTRY) c-ffi-test generic
  $(ENSURE_REGISTRY_ENTRY) c-ffi-test-suite-app generic
  $(BUILD_APPLICATION) c-ffi-test-suite-app

$(TESTWORKS_TEST_SUITE):
  $(ENSURE_RUNTIME_LIBRARY) $(TESTWORKS_DLL) testworks
  $(ENSURE_SOURCES) testworks-test-suite $(TESTWORKS_TESTS_SOURCE)
  $(ENSURE_REGISTRY_ENTRY) testworks-test-suite generic
  $(BUILD_LIBRARY) testworks-test-suite

test-dylan:
  $(ENSURE_APPLICATION) dylan-test-suite-app
  $(TEST_APP) dylan-test-suite-app dylan-test-suite

test-libraries:
# $(ENSURE_APPLICATION) cmu-test-suite
# $(TEST_APP) cmu-test-suite cmu-test-suite no
  $(ENSURE_APPLICATION) libraries-test-suite-app
  $(TEST_APP) libraries-test-suite-app libraries-test-suite
  $(ENSURE_APPLICATION) c-ffi-test-suite-app
  $(TEST_APP) c-ffi-test-suite-app c-ffi-test-suite

# Win32 testing

$(WIN32_UTIL_TEST):
  $(ENSURE_RUNTIME_LIBRARY) $(WIN32_COMMON_DLL) win32-common
  $(ENSURE_RUNTIME_LIBRARY) $(TESTWORKS_DLL) testworks
  $(ENSURE_SOURCES) win32-tests $(WIN32_TESTS_SOURCE)
  $(ENSURE_REGISTRY_ENTRY) win32-util-test x86-win32
  $(BUILD_APPLICATION) win32-util-test

test-win32-libraries:
  $(ENSURE_APPLICATION) win32-util-test
  $(TEST_APP) win32-util-test

# DUIM testing

$(DUIM_TEST_SUITE):
  $(ENSURE_RUNTIME_LIBRARY) $(DUIM_DLL) duim
  $(ENSURE_RUNTIME_LIBRARY) $(TESTWORKS_SPECS_DLL) testworks-specs
  $(ENSURE_SOURCES) duim-tests $(DUIM_TESTS_SOURCE)
  $(ENSURE_REGISTRY_ENTRY) duim-test-suite generic
  $(BUILD_LIBRARY) duim-test-suite

$(DUIM_TEST_SUITE_APP):
  $(ENSURE_RUNTIME_LIBRARY) $(TESTWORKS_DLL) testworks
  $(ENSURE_LIBRARY) duim-test-suite
  $(ENSURE_SOURCES) test-apps $(TEST_APPS_SOURCE)
  $(ENSURE_REGISTRY_ENTRY) duim-test-suite-app generic
  $(BUILD_APPLICATION) duim-test-suite-app

$(DUIM_GUI_TEST_SUITE):
  $(ENSURE_RUNTIME_LIBRARY) $(DUIM_DLL) duim
  $(ENSURE_SOURCES) duim-tests $(DUIM_TESTS_SOURCE)
  $(ENSURE_REGISTRY_ENTRY) duim-gui-test-suite x86-win32
  $(BUILD_APPLICATION) duim-gui-test-suite

$(WIN32_DUIM_REGRESSION_TEST_SUITE):
  $(ENSURE_RUNTIME_LIBRARY) $(DUIM_DLL) duim
  $(ENSURE_SOURCES) duim-tests $(DUIM_TESTS_SOURCE)
  $(ENSURE_REGISTRY_ENTRY) win32-duim-regression-test-suite x86-win32
  $(BUILD_APPLICATION) win32-duim-regression-test-suite

$(WIN32_DUIM_GUI_TEST_SUITE):
  $(ENSURE_RUNTIME_LIBRARY) $(DUIM_DLL) duim
  $(ENSURE_SOURCES) duim-tests $(DUIM_TESTS_SOURCE)
  $(ENSURE_REGISTRY_ENTRY) win32-duim-gui-test-suite x86-win32
  $(BUILD_APPLICATION) win32-duim-gui-test-suite

$(GTK_DUIM_GUI_TEST_SUITE):
  $(ENSURE_LIBRARY) gtk-duim
  $(ENSURE_SOURCES) duim-tests $(DUIM_TESTS_SOURCE)
  $(ENSURE_REGISTRY_ENTRY) gtk-duim-gui-test-suite x86-win32
  $(BUILD_APPLICATION) gtk-duim-gui-test-suite

test-duim:
  $(ENSURE_APPLICATION) duim-test-suite-app
  $(TEST_APP) duim-test-suite-app duim-test-suite

# Deuce testing

$(DEUCE_TEST_SUITE):
  $(ENSURE_RUNTIME_LIBRARY) $(TESTWORKS_SPECS_DLL) testworks-specs
  $(ENSURE_RUNTIME_LIBRARY) $(DEUCE_DLL) deuce
  $(ENSURE_SOURCES) deuce-tests $(DEUCE_TESTS_SOURCE)
  $(ENSURE_REGISTRY_ENTRY) deuce-test-suite generic
  $(BUILD_LIBRARY) deuce-test-suite

$(DEUCE_TEST_SUITE_APP):
  $(ENSURE_RUNTIME_LIBRARY) $(TESTWORKS_DLL) testworks
  $(ENSURE_LIBRARY) deuce-test-suite
  $(ENSURE_SOURCES) test-apps $(TEST_APPS_SOURCE)
  $(ENSURE_REGISTRY_ENTRY) deuce-test-suite-app generic
  $(BUILD_APPLICATION) deuce-test-suite-app

$(STANDALONE_DEUCE):
  $(ENSURE_RUNTIME_LIBRARY) $(DUIM_DEUCE_DLL) duim-deuce
  $(ENSURE_SOURCES) standalone-deuce $(STANDALONE_DEUCE_SOURCE)
  $(ENSURE_REGISTRY_ENTRY) standalone-deuce x86-win32
  $(BUILD_APPLICATION) standalone-deuce

test-deuce:
  $(ENSURE_APPLICATION) deuce-test-suite-app
  $(TEST_APP) deuce-test-suite-app deuce-test-suite

# OLE testing

$(OLE_TEST):
  $(ENSURE_RUNTIME_LIBRARY) $(OLE_AUTOMATION_DLL) ole-automation
  $(ENSURE_RUNTIME_LIBRARY) $(TESTWORKS_DLL) testworks
  $(ENSURE_SOURCES) ole-automation-tests $(OLE_AUTOMATION_TESTS_SOURCE)
  $(ENSURE_REGISTRY_ENTRY) ole-test x86-win32
  $(BUILD_APPLICATION) ole-test

$(OLE_COCLASS_TEST):
  $(ENSURE_RUNTIME_LIBRARY) $(OLE_AUTOMATION_DLL) ole-automation
  $(ENSURE_RUNTIME_LIBRARY) $(TESTWORKS_DLL) testworks
  $(ENSURE_SOURCES) ole-automation-tests $(OLE_AUTOMATION_TESTS_SOURCE)
  $(ENSURE_REGISTRY_ENTRY) ole-coclass-test x86-win32
  $(BUILD_APPLICATION) ole-coclass-test

$(OLE_MACRO_TEST):
  $(ENSURE_RUNTIME_LIBRARY) $(OLE_AUTOMATION_DLL) ole-automation
  $(ENSURE_RUNTIME_LIBRARY) $(TESTWORKS_DLL) testworks
  $(ENSURE_SOURCES) ole-automation-tests $(OLE_AUTOMATION_TESTS_SOURCE)
  $(ENSURE_REGISTRY_ENTRY) ole-macro-test x86-win32
  $(BUILD_APPLICATION) ole-macro-test

test-ole:
  $(ENSURE_APPLICATION) ole-test
  $(TEST_APP) ole-test
  $(ENSURE_APPLICATION) ole-coclass-test
  $(TEST_APP) ole-coclass-test
  $(ENSURE_APPLICATION) ole-macro-test
  $(TEST_APP) ole-macro-test

# Database (ODBC) testing

$(SQL_ODBC_TEST):
  $(ENSURE_RUNTIME_LIBRARY) $(SQL_ODBC_DLL) sql-odbc
  $(ENSURE_RUNTIME_LIBRARY) $(TESTWORKS_DLL) testworks
  $(ENSURE_SOURCES) databases $(DATABASES_SOURCE)
  $(ENSURE_REGISTRY_ENTRY) sql-odbc-test x86-win32
  $(BUILD_APPLICATION) sql-odbc-test

test-odbc:
  $(ENSURE_APPLICATION) sql-odbc-test
  $(TEST_APP) sql-odbc-test sql-odbc-test no -access

# CORBA testing

$(CONSOLE_SCEPTER_TESTS):
  $(ENSURE_RUNTIME_LIBRARY) $(TESTWORKS_DLL) testworks
  $(ENSURE_APPLICATION) console-scepter
  $(ENSURE_LIBRARY) metering
  $(ENSURE_SOURCES) scepter $(SCEPTER_SOURCE)
  $(BUILD_APPLICATION) /project $(CONSOLE_SCEPTER_TESTS_PROJECT) console-scepter-tests

$(CORBA_TESTS_CLIENT_APP):
  $(ENSURE_RUNTIME_LIBRARY) $(DYLAN_ORB_DLL) dylan-orb
  $(ENSURE_RUNTIME_LIBRARY) $(TESTWORKS_DLL) testworks
  $(ENSURE_APPLICATION) console-scepter
  $(ENSURE_SOURCES) corba-tests $(CORBA_TESTS_SOURCE)
  $(BUILD_APPLICATION) /project $(CORBA_TESTS_CLIENT_APP_PROJECT) corba-tests-client-app

$(CORBA_TESTS_SERVER_APP):
  $(ENSURE_RUNTIME_LIBRARY) $(DYLAN_ORB_DLL) dylan-orb
  $(ENSURE_SOURCES) corba-tests $(CORBA_TESTS_SOURCE)
  $(BUILD_APPLICATION) /project $(CORBA_TESTS_SERVER_APP_PROJECT) corba-tests-server-app

test-scepter:
  $(ENSURE_APPLICATION) console-scepter-tests
  $(TEST_APP) console-scepter-tests

test-orb:
  $(ENSURE_APPLICATION) corba-tests-client-app
  $(ENSURE_APPLICATION) corba-tests-server-app
  start $(CORBA_TESTS_SERVER_APP)
  sleep 5
  $(TEST_APP) corba-tests-client-app corba-tests-client-app yes -ignore-suite collocated?

test-corba: test-scepter test-orb


# Compiler/Environment testing

$(CHANNELS_TESTS):
  $(ENSURE_RUNTIME_LIBRARY) $(CHANNELS_DLL) channels
  $(ENSURE_RUNTIME_LIBRARY) $(TESTWORKS_DLL) testworks
  $(ENSURE_SOURCES) channels-tests $(CHANNELS_TESTS_SOURCE)
  $(ENSURE_REGISTRY_ENTRY) channels-tests generic
  $(BUILD_APPLICATION) channels-tests

$(DFMC_ENVIRONMENT_TEST_SUITE):
  $(ENSURE_RUNTIME_LIBRARY) $(TESTWORKS_DLL) testworks
  $(ENSURE_LIBRARY) environment-application-commands
  $(ENSURE_SOURCES) environment-tests $(ENVIRONMENT_TESTS_SOURCE)
  $(ENSURE_REGISTRY_ENTRY) environment-test-suite generic
  $(ENSURE_REGISTRY_ENTRY) dfmc-environment-test-suite generic
  $(BUILD_LIBRARY) dfmc-environment-test-suite

$(DFMC_ENVIRONMENT_TEST_SUITE_APP):
  $(ENSURE_RUNTIME_LIBRARY) $(TESTWORKS_DLL) testworks
  $(ENSURE_LIBRARY) dfmc-environment-test-suite
  $(ENSURE_SOURCES) test-apps $(TEST_APPS_SOURCE)
  $(ENSURE_REGISTRY_ENTRY) dfmc-environment-test-suite-app generic
  $(BUILD_APPLICATION) dfmc-environment-test-suite-app

warnings-test-suite:
  $(ENSURE_RUNTIME_LIBRARY) $(COMMON_DYLAN_DLL) common-dylan
  $(ENSURE_SOURCES) warnings-test-suite $(WARNINGS_TEST_SUITE_SOURCE)
  $(ENSURE_REGISTRY_ENTRY) warnings-test-suite generic
  $(BUILD_LIBRARY) /clean /warnings warnings-test-suite

test-compiler: warnings-test-suite

test-environment: test-environment-test-suites test-environment-scripts

test-environment-test-suites:
  $(ENSURE_APPLICATION) channels-tests
  $(TEST_APP) channels-tests
  $(ENSURE_APPLICATION) dfmc-environment-test-suite-app
  $(TEST_APP) dfmc-environment-test-suite-app dfmc-environment-test-suite

test-environment-scripts:
  $(ENSURE_SOURCES) qa-scripts $(QA_SCRIPTS_SOURCE)
  $(TEST_SCRIPT) environment-properties
  $(TEST_SCRIPT) tracing
  $(TEST_SCRIPT) interactivity
  $(TEST_SCRIPT) redefinition
  $(TEST_SCRIPT) profiling


# Benchmarks

$(CN2):
  $(ENSURE_RUNTIME_LIBRARY) $(IO_DLL) io
  $(ENSURE_SOURCES) benchmarks $(BENCHMARKS_DIRECTORY)
  $(ENSURE_REGISTRY_ENTRY) cn2 generic
  $(BUILD_APPLICATION) cn2

$(FFT_TEST):
  $(ENSURE_RUNTIME_LIBRARY) $(IO_DLL) io
  $(ENSURE_SOURCES) benchmarks $(BENCHMARKS_DIRECTORY)
  $(ENSURE_REGISTRY_ENTRY) fft-test generic
  $(BUILD_APPLICATION) fft-test


# Example projects

$(HELLO_WORLD_PROJECT):
  $(ENSURE_SOURCES) hello-world $(HELLO_WORLD_SOURCE)
  $(IMPORT_PROJECT) /loose hello-world $(HELLO_WORLD_SOURCE)

$(FACTORIAL_SMALL_PROJECT):
  $(ENSURE_SOURCES) factorial $(FACTORIAL_SOURCE)
  $(IMPORT_PROJECT) /loose factorial-small $(FACTORIAL_SOURCE)

$(FACTORIAL_BIG_PROJECT):
  $(ENSURE_SOURCES) factorial $(FACTORIAL_SOURCE)
  $(IMPORT_PROJECT) /loose factorial-big $(FACTORIAL_SOURCE)


$(WINDOWS_FFI_EXAMPLE_PROJECT):
  $(ENSURE_SOURCES) windows-ffi-example $(WINDOWS_FFI_EXAMPLE_SOURCE)
  $(IMPORT_PROJECT) windows-ffi-example $(WINDOWS_FFI_EXAMPLE_SOURCE)

$(WINDOWS_GADGETS_EXAMPLE_PROJECT):
  $(ENSURE_SOURCES) windows-gadgets-example $(WINDOWS_GADGETS_EXAMPLE_SOURCE)
  $(IMPORT_PROJECT) windows-gadgets-example $(WINDOWS_GADGETS_EXAMPLE_SOURCE)

$(WINDOWS_RESOURCE_EXAMPLE_PROJECT):
  $(ENSURE_SOURCES) windows-resource-example $(WINDOWS_RESOURCE_EXAMPLE_SOURCE)
  $(IMPORT_PROJECT) windows-resource-example $(WINDOWS_RESOURCE_EXAMPLE_SOURCE)


$(DUIM_GL_DEMO_PROJECT):
  $(ENSURE_SOURCES) duim-gl-demo $(DUIM_GL_DEMO_SOURCE)
  $(IMPORT_PROJECT) /loose duim-gl-demo $(DUIM_GL_DEMO_SOURCE)

$(DUIM_GUI_TEST_SUITE_PROJECT):
  $(ENSURE_SOURCES) duim-tests $(DUIM_GUI_TEST_SUITE_SOURCE)
  $(IMPORT_PROJECT) /tight duim-gui-test-suite $(DUIM_GUI_TEST_SUITE_SOURCE) win32-duim-gui-test-suite

$(DUIM_RESOURCE_EXAMPLE_PROJECT):
  $(ENSURE_SOURCES) duim-examples $(DUIM_RESOURCE_EXAMPLE_SOURCE)
  $(IMPORT_PROJECT) /loose duim-resource-example $(DUIM_RESOURCE_EXAMPLE_SOURCE) duim-resource-example

$(FLYING_SQUARES_PROJECT):
  $(ENSURE_SOURCES) flying-squares $(FLYING_SQUARES_SOURCE)
  $(IMPORT_PROJECT) /tight flying-squares $(FLYING_SQUARES_SOURCE)

$(INTERFACE_BUILDER_PROJECT):
  $(ENSURE_SOURCES) duim-examples $(INTERFACE_BUILDER_SOURCE)
  $(IMPORT_PROJECT) /loose interface-builder $(INTERFACE_BUILDER_SOURCE) win32-interface-builder

$(LIFE_PROJECT):
  $(ENSURE_SOURCES) duim-examples $(LIFE_SOURCE)
  $(IMPORT_PROJECT) /tight life $(LIFE_SOURCE) win32-life

$(REVERSI_PROJECT):
  $(ENSURE_SOURCES) duim-examples $(REVERSI_SOURCE)
  $(IMPORT_PROJECT) /loose reversi $(REVERSI_SOURCE) win32-reversi

$(SCRIBBLE_PROJECT):
  $(ENSURE_SOURCES) duim-examples $(SCRIBBLE_SOURCE)
  $(IMPORT_PROJECT) /loose scribble $(SCRIBBLE_SOURCE) win32-scribble

$(PENTE_PROJECT):
  $(ENSURE_SOURCES) duim-examples $(PENTE_SOURCE)
  $(IMPORT_PROJECT) /loose pente $(PENTE_SOURCE) win32-pente

$(STANDALONE_DEUCE_PROJECT):
  $(ENSURE_SOURCES) deuce $(DEUCE_SOURCE)
  $(IMPORT_PROJECT) /tight standalone-deuce $(STANDALONE_DEUCE_SOURCE) win32-standalone-deuce

$(TETRIS_PROJECT):
  $(ENSURE_SOURCES) duim-examples $(TETRIS_SOURCE)
  $(IMPORT_PROJECT) /loose tetris $(TETRIS_SOURCE) win32-tetris

$(TIC_TAC_TOE_PROJECT):
  $(ENSURE_SOURCES) duim-examples $(TIC_TAC_TOE_SOURCE)
  $(IMPORT_PROJECT) /loose tic-tac-toe $(TIC_TAC_TOE_SOURCE) win32-tic-tac-toe

$(WIN32_DUIM_GUI_TEST_SUITE_PROJECT):
  $(ENSURE_SOURCES) duim-tests $(WIN32_DUIM_GUI_TEST_SUITE_SOURCE)
  $(IMPORT_PROJECT) /loose win32-duim-gui-test-suite $(WIN32_DUIM_GUI_TEST_SUITE_SOURCE)

$(WIN32_SCRIBBLE_PROJECT):
  $(ENSURE_SOURCES) duim-examples $(SCRIBBLE_SOURCE)
  $(IMPORT_PROJECT) /loose win32-scribble $(WIN32_SCRIBBLE_SOURCE)


$(PLONKER_PROJECT):
  $(ENSURE_SOURCES) plonker $(PLONKER_SOURCE)
  $(IMPORT_PROJECT) /loose plonker $(PLONKER_SOURCE)


$(DATABASE_STRESS_TOOL_PROJECT):
  $(ENSURE_SOURCES) database-stress-tool $(DATABASE_STRESS_TOOL_SOURCE)
  $(IMPORT_PROJECT) /tight database-stress-tool $(DATABASE_STRESS_TOOL_SOURCE)

$(DATABASE_VIEWER_PROJECT):
  $(ENSURE_SOURCES) database-viewer $(DATABASE_VIEWER_SOURCE)
  $(IMPORT_PROJECT) /loose database-viewer $(DATABASE_VIEWER_SOURCE) win32-database-viewer


$(SAMPLE_AUTOMATION_CONTROLLER_PROJECT):
  $(ENSURE_SOURCES) ole-examples $(OLE_EXAMPLES_DIRECTORY)
  $(IMPORT_PROJECT) sample-automation-controller $(SAMPLE_AUTOMATION_CONTROLLER_SOURCE)

$(SAMPLE_AUTOMATION_SERVER_PROJECT):
  $(ENSURE_SOURCES) ole-examples $(OLE_EXAMPLES_DIRECTORY)
  $(IMPORT_PROJECT) sample-automation-server $(SAMPLE_AUTOMATION_SERVER_SOURCE)

$(SAMPLE_OLE_CONTAINER_PROJECT):
  $(ENSURE_SOURCES) ole-examples $(OLE_EXAMPLES_DIRECTORY)
  $(IMPORT_PROJECT) sample-ole-container $(SAMPLE_OLE_CONTAINER_SOURCE)

$(SAMPLE_OLE_SERVER_PROJECT):
  $(ENSURE_SOURCES) ole-examples $(OLE_EXAMPLES_DIRECTORY)
  $(IMPORT_PROJECT) sample-ole-server $(SAMPLE_OLE_SERVER_SOURCE)

$(WIN32_INVISIBLE_CONTROL_PROJECT):
  $(ENSURE_SOURCES) ole-examples $(OLE_EXAMPLES_DIRECTORY)
  $(IMPORT_PROJECT) win32-invisible-control $(WIN32_INVISIBLE_CONTROL_SOURCE)

$(WIN32_OLE_CONTAINER_PROJECT):
  $(ENSURE_SOURCES) ole-examples $(OLE_EXAMPLES_DIRECTORY)
  $(IMPORT_PROJECT) win32-ole-container $(WIN32_OLE_CONTAINER_SOURCE)

$(WIN32_OLE_SERVER_PROJECT):
  $(ENSURE_SOURCES) ole-examples $(OLE_EXAMPLES_DIRECTORY)
  $(IMPORT_PROJECT) win32-ole-server $(WIN32_OLE_SERVER_SOURCE)


$(BUTTON_OCX_PROJECT):
  $(ENSURE_SOURCES) ole-examples $(OLE_EXAMPLES_DIRECTORY)
  $(IMPORT_PROJECT) /tight /dll button-ocx $(BUTTON_OCX_SOURCE)

$(OLE_SCRIBBLE_PROJECT):
  $(ENSURE_SOURCES) ole-examples $(OLE_EXAMPLES_DIRECTORY)
  $(IMPORT_PROJECT) /loose ole-scribble $(OLE_SCRIBBLE_SOURCE)

$(OCX_SCRIBBLE_PROJECT):
  $(ENSURE_SOURCES) ole-examples $(OLE_EXAMPLES_DIRECTORY)
  $(IMPORT_PROJECT) /tight /dll ocx-scribble $(OCX_SCRIBBLE_SOURCE)

$(SAMPLE_DUIM_CONTAINER_PROJECT):
  $(ENSURE_SOURCES) ole-examples $(OLE_EXAMPLES_DIRECTORY)
  $(IMPORT_PROJECT) /loose sample-duim-container $(SAMPLE_DUIM_CONTAINER_SOURCE)


$(DOC_REVERSI_PROJECT):
  $(ENSURE_SOURCES) doc-examples $(DOC_REVERSI_SOURCE)
  $(IMPORT_PROJECT) /loose reversi $(DOC_REVERSI_SOURCE) win32-reversi


# Install software

reinstall-runtime-dlls:
  $(REMOVE_DIRECTORY) $(REDISTRIBUTABLE_DIRECTORY)
  $(MAKE) install-runtime-dlls

$(REDISTRIBUTABLE_DIRECTORY):
  $(ENSURE_RELEASE_AREA)
  $(ENSURE_DIRECTORY) $(REDISTRIBUTABLE_DIRECTORY)
  echo Installing runtime DLLs
  $(COPY) $(INSTALL_BIN_DIRECTORY)\$(RUNTIME_PREFIX)*.dll $(REDISTRIBUTABLE_DIRECTORY) >nul

$(WDBGDYLAN):
  $(ENSURE_RELEASE_AREA)
  $(ENSURE_SOURCES) install-bin $(INSTALL_BIN_SOURCE)
  $(COPY) $(INSTALL_BIN_SOURCE)\wdbgdylan.dll $(INSTALL_BIN_DIRECTORY)

$(DBGHELP):
  $(ENSURE_RELEASE_AREA)
  $(ENSURE_SOURCES) install-bin $(INSTALL_BIN_SOURCE)
  $(COPY) $(INSTALL_BIN_SOURCE)\dbghelp.dll $(INSTALL_BIN_DIRECTORY)

$(BUG_REPORT_TEMPLATE):
  $(ENSURE_SOURCES) templates $(TEMPLATES_SOURCE)
  $(ENSURE_DIRECTORY) $(TEMPLATES_INSTALL_DIRECTORY)
  $(COPY) $(TEMPLATES_SOURCE)\bug-report.txt $(BUG_REPORT_TEMPLATE) >nul

$(SOURCE_TEMPLATES_INSTALL_DIRECTORY):
  $(ENSURE_SOURCES) environment $(ENVIRONMENT_SOURCE)
  $(RECURSIVE_COPY) $(ENVIRONMENT_SOURCE)\project-wizard\templates $(SOURCE_TEMPLATES_INSTALL_DIRECTORY) >nul
  $(REMOVE_CVS_DIRECTORIES) $(SOURCE_TEMPLATES_INSTALL_DIRECTORY)

# Install examples

$(EXAMPLES_CSS_INSTALL_FILE):
  $(ENSURE_SOURCES) examples-css $(EXAMPLES_CSS_FILE)
  $(ENSURE_DIRECTORY) $(EXAMPLES_INSTALL_DIRECTORY)
  $(COPY) $(EXAMPLES_CSS_FILE) $(EXAMPLES_CSS_INSTALL_FILE) >nul

$(HELLO_WORLD_INSTALL_DIRECTORY):
  $(MAKE) $(HELLO_WORLD_PROJECT)
  $(ENSURE_DIRECTORY) $(HELLO_WORLD_INSTALL_DIRECTORY)
  $(COPY) $(HELLO_WORLD_SOURCE)\*.* $(HELLO_WORLD_INSTALL_DIRECTORY) >nul
  $(REMOVE) $(HELLO_WORLD_INSTALL_DIRECTORY)\*.lid

$(FACTORIAL_EXAMPLES_INSTALL_DIRECTORY):
  $(MAKE) $(FACTORIAL_SMALL_PROJECT)
  $(MAKE) $(FACTORIAL_BIG_PROJECT)
  $(ENSURE_DIRECTORY) $(FACTORIAL_EXAMPLES_INSTALL_DIRECTORY)
  $(COPY) $(FACTORIAL_SOURCE)\*.* $(FACTORIAL_EXAMPLES_INSTALL_DIRECTORY) >nul
  $(REMOVE) $(FACTORIAL_EXAMPLES_INSTALL_DIRECTORY)\*.lid

$(TOWERS_OF_HANOI_INSTALL_DIRECTORY):
  $(ENSURE_SOURCES) console-examples $(CONSOLE_EXAMPLES_SOURCE)
  $(ENSURE_DIRECTORY) $(TOWERS_OF_HANOI_INSTALL_DIRECTORY)
  $(RECURSIVE_COPY) $(TOWERS_OF_HANOI_SOURCE) $(TOWERS_OF_HANOI_INSTALL_DIRECTORY) >nul
  $(REMOVE_CVS_DIRECTORIES) $(TOWERS_OF_HANOI_INSTALL_DIRECTORY)
  $(ENSURE_WRITEABLE_HDP_FILES) $(TOWERS_OF_HANOI_INSTALL_DIRECTORY)


$(WINDOWS_FFI_EXAMPLE_INSTALL_DIRECTORY):
  $(MAKE) $(WINDOWS_FFI_EXAMPLE_PROJECT)
  $(ENSURE_DIRECTORY) $(WINDOWS_FFI_EXAMPLE_INSTALL_DIRECTORY)
  $(COPY) $(WINDOWS_FFI_EXAMPLE_SOURCE)\*.* $(WINDOWS_FFI_EXAMPLE_INSTALL_DIRECTORY) >nul
  $(REMOVE) $(WINDOWS_FFI_EXAMPLE_INSTALL_DIRECTORY)\*.lid

$(WINDOWS_GADGETS_EXAMPLE_INSTALL_DIRECTORY):
  $(MAKE) $(WINDOWS_GADGETS_EXAMPLE_PROJECT)
  $(ENSURE_DIRECTORY) $(WINDOWS_GADGETS_EXAMPLE_INSTALL_DIRECTORY)
  $(COPY) $(WINDOWS_GADGETS_EXAMPLE_SOURCE)\*.* $(WINDOWS_GADGETS_EXAMPLE_INSTALL_DIRECTORY) >nul
  $(REMOVE) $(WINDOWS_GADGETS_EXAMPLE_INSTALL_DIRECTORY)\*.lid


$(DUIM_GL_DEMO_INSTALL_DIRECTORY):
  $(MAKE) $(DUIM_GL_DEMO_PROJECT)
  $(ENSURE_DIRECTORY) $(DUIM_GL_DEMO_INSTALL_DIRECTORY)
  $(COPY) $(DUIM_GL_DEMO_SOURCE)\*.* $(DUIM_GL_DEMO_INSTALL_DIRECTORY) >nul
  $(REMOVE) $(DUIM_GL_DEMO_INSTALL_DIRECTORY)\*.lid

$(DUIM_GUI_TEST_SUITE_INSTALL_DIRECTORY):
  $(MAKE) $(DUIM_GUI_TEST_SUITE_PROJECT)
  $(ENSURE_DIRECTORY) $(DUIM_GUI_TEST_SUITE_INSTALL_DIRECTORY)
  $(COPY) $(DUIM_GUI_TEST_SUITE_SOURCE)\*.* $(DUIM_GUI_TEST_SUITE_INSTALL_DIRECTORY) >nul
  $(REMOVE) $(DUIM_GUI_TEST_SUITE_INSTALL_DIRECTORY)\*.lid

$(DUIM_RESOURCE_EXAMPLE_INSTALL_DIRECTORY):
  $(MAKE) $(DUIM_RESOURCE_EXAMPLE_PROJECT)
  $(ENSURE_DIRECTORY) $(DUIM_RESOURCE_EXAMPLE_INSTALL_DIRECTORY)
  $(COPY) $(DUIM_RESOURCE_EXAMPLE_SOURCE)\*.* $(DUIM_RESOURCE_EXAMPLE_INSTALL_DIRECTORY) >nul
  $(REMOVE) $(DUIM_RESOURCE_EXAMPLE_INSTALL_DIRECTORY)\*.lid

$(FLYING_SQUARES_INSTALL_DIRECTORY):
  $(MAKE) $(FLYING_SQUARES_PROJECT)
  $(ENSURE_DIRECTORY) $(FLYING_SQUARES_INSTALL_DIRECTORY)
  $(COPY) $(FLYING_SQUARES_SOURCE)\*.* $(FLYING_SQUARES_INSTALL_DIRECTORY) >nul
  $(REMOVE) $(FLYING_SQUARES_INSTALL_DIRECTORY)\*.lid

$(INTERFACE_BUILDER_INSTALL_DIRECTORY):
  $(MAKE) $(INTERFACE_BUILDER_PROJECT)
  $(ENSURE_DIRECTORY) $(INTERFACE_BUILDER_INSTALL_DIRECTORY)
  $(COPY) $(INTERFACE_BUILDER_SOURCE)\*.* $(INTERFACE_BUILDER_INSTALL_DIRECTORY) >nul
  $(REMOVE) $(INTERFACE_BUILDER_INSTALL_DIRECTORY)\*.lid

$(LIFE_INSTALL_DIRECTORY):
  $(MAKE) $(LIFE_PROJECT)
  $(ENSURE_DIRECTORY) $(LIFE_INSTALL_DIRECTORY)
  $(COPY) $(LIFE_SOURCE)\*.* $(LIFE_INSTALL_DIRECTORY) >nul
  $(REMOVE) $(LIFE_INSTALL_DIRECTORY)\*.lid

$(REVERSI_INSTALL_DIRECTORY):
  $(MAKE) $(REVERSI_PROJECT)
  $(ENSURE_DIRECTORY) $(REVERSI_INSTALL_DIRECTORY)
  $(COPY) $(REVERSI_SOURCE)\*.* $(REVERSI_INSTALL_DIRECTORY) >nul
  $(REMOVE) $(REVERSI_INSTALL_DIRECTORY)\*.lid

$(PENTE_INSTALL_DIRECTORY):
  $(MAKE) $(PENTE_PROJECT)
  $(ENSURE_DIRECTORY) $(PENTE_INSTALL_DIRECTORY)
  $(COPY) $(PENTE_SOURCE)\*.* $(PENTE_INSTALL_DIRECTORY) >nul
  $(REMOVE) $(PENTE_INSTALL_DIRECTORY)\*.lid

$(SCRIBBLE_INSTALL_DIRECTORY):
  $(MAKE) $(SCRIBBLE_PROJECT)
  $(ENSURE_DIRECTORY) $(SCRIBBLE_INSTALL_DIRECTORY)
  $(COPY) $(SCRIBBLE_SOURCE)\*.* $(SCRIBBLE_INSTALL_DIRECTORY) >nul
  $(REMOVE) $(SCRIBBLE_INSTALL_DIRECTORY)\*.lid

$(STANDALONE_DEUCE_INSTALL_DIRECTORY):
  $(MAKE) $(STANDALONE_DEUCE_PROJECT)
  $(ENSURE_DIRECTORY) $(STANDALONE_DEUCE_INSTALL_DIRECTORY)
  $(COPY) $(STANDALONE_DEUCE_SOURCE)\*.* $(STANDALONE_DEUCE_INSTALL_DIRECTORY) >nul
  $(REMOVE) $(STANDALONE_DEUCE_INSTALL_DIRECTORY)\*.lid

$(TIC_TAC_TOE_INSTALL_DIRECTORY):
  $(MAKE) $(TIC_TAC_TOE_PROJECT)
  $(ENSURE_DIRECTORY) $(TIC_TAC_TOE_INSTALL_DIRECTORY)
  $(COPY) $(TIC_TAC_TOE_SOURCE)\*.* $(TIC_TAC_TOE_INSTALL_DIRECTORY) >nul
  $(REMOVE) $(TIC_TAC_TOE_INSTALL_DIRECTORY)\*.lid

$(TETRIS_INSTALL_DIRECTORY):
  $(MAKE) $(TETRIS_PROJECT)
  $(ENSURE_DIRECTORY) $(TETRIS_INSTALL_DIRECTORY)
  $(COPY) $(TETRIS_SOURCE)\*.* $(TETRIS_INSTALL_DIRECTORY) >nul
  $(REMOVE) $(TETRIS_INSTALL_DIRECTORY)\*.lid

$(WINDOWS_VIEWER_INSTALL_DIRECTORY):
  $(ENSURE_SOURCES) duim-examples $(WINDOWS_VIEWER_SOURCE)
  $(ENSURE_DIRECTORY) $(WINDOWS_VIEWER_INSTALL_DIRECTORY)
  $(COPY) $(WINDOWS_VIEWER_SOURCE)\*.* $(WINDOWS_VIEWER_INSTALL_DIRECTORY) >nul
  $(ENSURE_WRITEABLE_HDP_FILES) $(WINDOWS_VIEWER_INSTALL_DIRECTORY)

$(WIN32_DUIM_GUI_TEST_SUITE_INSTALL_DIRECTORY):
  $(MAKE) $(WIN32_DUIM_GUI_TEST_SUITE_PROJECT)
  $(ENSURE_DIRECTORY) $(WIN32_DUIM_GUI_TEST_SUITE_INSTALL_DIRECTORY)
  $(ENSURE_DIRECTORY) $(WIN32_DUIM_GUI_TEST_SUITE_INSTALL_DIRECTORY)\bitmaps
  $(COPY) $(WIN32_DUIM_GUI_TEST_SUITE_SOURCE)\*.* $(WIN32_DUIM_GUI_TEST_SUITE_INSTALL_DIRECTORY) >nul
  $(COPY) $(WIN32_DUIM_GUI_TEST_SUITE_SOURCE)\bitmaps\*.* $(WIN32_DUIM_GUI_TEST_SUITE_INSTALL_DIRECTORY)\bitmaps >nul
  $(REMOVE) $(WIN32_DUIM_GUI_TEST_SUITE_INSTALL_DIRECTORY)\*.lid

$(WIN32_SCRIBBLE_INSTALL_DIRECTORY):
  $(MAKE) $(WIN32_SCRIBBLE_PROJECT)
  $(ENSURE_DIRECTORY) $(WIN32_SCRIBBLE_INSTALL_DIRECTORY)
  $(COPY) $(WIN32_SCRIBBLE_SOURCE)\*.* $(WIN32_SCRIBBLE_INSTALL_DIRECTORY) >nul
  $(REMOVE) $(WIN32_SCRIBBLE_INSTALL_DIRECTORY)\*.lid


$(DATABASE_STRESS_TOOL_INSTALL_DIRECTORY):
  $(MAKE) $(DATABASE_STRESS_TOOL_PROJECT)
  $(ENSURE_DIRECTORY) $(DATABASE_STRESS_TOOL_INSTALL_DIRECTORY)
  $(COPY) $(DATABASE_STRESS_TOOL_SOURCE)\*.* $(DATABASE_STRESS_TOOL_INSTALL_DIRECTORY) >nul
  $(REMOVE) $(DATABASE_STRESS_TOOL_INSTALL_DIRECTORY)\*.lid

$(DATABASE_VIEWER_INSTALL_DIRECTORY):
  $(MAKE) $(DATABASE_VIEWER_PROJECT)
  $(ENSURE_DIRECTORY) $(DATABASE_VIEWER_INSTALL_DIRECTORY)
  $(COPY) $(DATABASE_VIEWER_SOURCE)\*.* $(DATABASE_VIEWER_INSTALL_DIRECTORY) >nul
  $(REMOVE) $(DATABASE_VIEWER_INSTALL_DIRECTORY)\*.lid


$(BUTTON_OCX_INSTALL_DIRECTORY):
  $(MAKE) $(BUTTON_OCX_PROJECT)
  $(ENSURE_DIRECTORY) $(BUTTON_OCX_INSTALL_DIRECTORY)
  $(COPY) $(BUTTON_OCX_SOURCE)\*.* $(BUTTON_OCX_INSTALL_DIRECTORY) >nul
  $(REMOVE) $(BUTTON_OCX_INSTALL_DIRECTORY)\*.lid

$(OLE_SCRIBBLE_INSTALL_DIRECTORY):
  $(MAKE) $(OLE_SCRIBBLE_PROJECT)
  $(ENSURE_DIRECTORY) $(OLE_SCRIBBLE_INSTALL_DIRECTORY)
  $(COPY) $(OLE_SCRIBBLE_SOURCE)\*.* $(OLE_SCRIBBLE_INSTALL_DIRECTORY) >nul
  $(REMOVE) $(OLE_SCRIBBLE_INSTALL_DIRECTORY)\*.lid

$(OCX_SCRIBBLE_INSTALL_DIRECTORY):
  $(MAKE) $(OCX_SCRIBBLE_PROJECT)
  $(ENSURE_DIRECTORY) $(OCX_SCRIBBLE_INSTALL_DIRECTORY)
  $(COPY) $(OCX_SCRIBBLE_SOURCE)\*.* $(OCX_SCRIBBLE_INSTALL_DIRECTORY) >nul
  $(REMOVE) $(OCX_SCRIBBLE_INSTALL_DIRECTORY)\*.lid


$(PLONKER_INSTALL_DIRECTORY):
  $(MAKE) $(PLONKER_PROJECT)
  $(ENSURE_DIRECTORY) $(PLONKER_INSTALL_DIRECTORY)
  $(COPY) $(PLONKER_SOURCE)\*.* $(PLONKER_INSTALL_DIRECTORY) >nul
  $(REMOVE) $(PLONKER_INSTALL_DIRECTORY)\*.lid


$(ASP_VIEW_INSTALL_DIRECTORY):
  $(ENSURE_SOURCES) ole-examples $(OLE_EXAMPLES_DIRECTORY)
  $(ENSURE_DIRECTORY) $(ASP_VIEW_INSTALL_DIRECTORY)
  $(RECURSIVE_COPY) $(ASP_VIEW_SOURCE) $(ASP_VIEW_INSTALL_DIRECTORY) >nul
  $(REMOVE_CVS_DIRECTORIES) $(ASP_VIEW_INSTALL_DIRECTORY)
  $(ENSURE_WRITEABLE_HDP_FILES) $(ASP_VIEW_INSTALL_DIRECTORY)

$(COM_BANK_DEMO_INSTALL_DIRECTORY):
  $(ENSURE_SOURCES) ole-examples $(OLE_EXAMPLES_DIRECTORY)
  $(ENSURE_DIRECTORY) $(COM_BANK_DEMO_INSTALL_DIRECTORY)
  $(RECURSIVE_COPY) $(COM_BANK_DEMO_SOURCE) $(COM_BANK_DEMO_INSTALL_DIRECTORY) >nul
  $(REMOVE_CVS_DIRECTORIES) $(COM_BANK_DEMO_INSTALL_DIRECTORY)
  $(ENSURE_WRITEABLE_HDP_FILES) $(COM_BANK_DEMO_INSTALL_DIRECTORY)

$(WIN32_INVISIBLE_CONTROL_INSTALL_DIRECTORY):
  $(MAKE) $(WIN32_INVISIBLE_CONTROL_PROJECT)
  $(ENSURE_DIRECTORY) $(WIN32_INVISIBLE_CONTROL_INSTALL_DIRECTORY)
  $(COPY) $(WIN32_INVISIBLE_CONTROL_SOURCE)\*.* $(WIN32_INVISIBLE_CONTROL_INSTALL_DIRECTORY) >nul
  $(REMOVE) $(WIN32_INVISIBLE_CONTROL_INSTALL_DIRECTORY)\*.lid

$(WIN32_OLE_CONTAINER_INSTALL_DIRECTORY):
  $(MAKE) $(WIN32_OLE_CONTAINER_PROJECT)
  $(ENSURE_DIRECTORY) $(WIN32_OLE_CONTAINER_INSTALL_DIRECTORY)
  $(COPY) $(WIN32_OLE_CONTAINER_SOURCE)\*.* $(WIN32_OLE_CONTAINER_INSTALL_DIRECTORY) >nul
  $(REMOVE) $(WIN32_OLE_CONTAINER_INSTALL_DIRECTORY)\*.lid

$(WIN32_OLE_SERVER_EXAMPLES_INSTALL_DIRECTORY):
  $(MAKE) $(WIN32_OLE_SERVER_PROJECT)
  $(ENSURE_DIRECTORY) $(WIN32_OLE_SERVER_EXAMPLES_INSTALL_DIRECTORY)
  $(COPY) $(WIN32_OLE_SERVER_SOURCE)\*.* $(WIN32_OLE_SERVER_EXAMPLES_INSTALL_DIRECTORY) >nul
  $(REMOVE) $(WIN32_OLE_SERVER_EXAMPLES_INSTALL_DIRECTORY)\*.lid

$(SAMPLE_AUTOMATION_CONTROLLER_INSTALL_DIRECTORY):
  $(MAKE) $(SAMPLE_AUTOMATION_CONTROLLER_PROJECT)
  $(ENSURE_DIRECTORY) $(SAMPLE_AUTOMATION_CONTROLLER_INSTALL_DIRECTORY)
  $(COPY) $(SAMPLE_AUTOMATION_CONTROLLER_SOURCE)\*.* $(SAMPLE_AUTOMATION_CONTROLLER_INSTALL_DIRECTORY) >nul
  $(REMOVE) $(SAMPLE_AUTOMATION_CONTROLLER_INSTALL_DIRECTORY)\*.lid

$(AUTOMATION_SERVER_EXAMPLES_INSTALL_DIRECTORY):
  $(MAKE) $(SAMPLE_AUTOMATION_SERVER_PROJECT)
  $(ENSURE_DIRECTORY) $(AUTOMATION_SERVER_EXAMPLES_INSTALL_DIRECTORY)
  $(COPY) $(SAMPLE_AUTOMATION_SERVER_SOURCE)\*.* $(AUTOMATION_SERVER_EXAMPLES_INSTALL_DIRECTORY) >nul
  $(REMOVE) $(AUTOMATION_SERVER_EXAMPLES_INSTALL_DIRECTORY)\*.lid

$(SAMPLE_DUIM_CONTAINER_INSTALL_DIRECTORY):
  $(MAKE) $(SAMPLE_DUIM_CONTAINER_PROJECT)
  $(ENSURE_DIRECTORY) $(SAMPLE_DUIM_CONTAINER_INSTALL_DIRECTORY)
  $(COPY) $(SAMPLE_DUIM_CONTAINER_SOURCE)\*.* $(SAMPLE_DUIM_CONTAINER_INSTALL_DIRECTORY) >nul
  $(REMOVE) $(SAMPLE_DUIM_CONTAINER_INSTALL_DIRECTORY)\*.lid

$(SAMPLE_OLE_CONTAINER_INSTALL_DIRECTORY):
  $(MAKE) $(SAMPLE_OLE_CONTAINER_PROJECT)
  $(ENSURE_DIRECTORY) $(SAMPLE_OLE_CONTAINER_INSTALL_DIRECTORY)
  $(COPY) $(SAMPLE_OLE_CONTAINER_SOURCE)\*.* $(SAMPLE_OLE_CONTAINER_INSTALL_DIRECTORY) >nul
  $(REMOVE) $(SAMPLE_OLE_CONTAINER_INSTALL_DIRECTORY)\*.lid

$(SAMPLE_OLE_SERVER_INSTALL_DIRECTORY):
  $(MAKE) $(SAMPLE_OLE_SERVER_PROJECT)
  $(ENSURE_DIRECTORY) $(SAMPLE_OLE_SERVER_INSTALL_DIRECTORY)
  $(COPY) $(SAMPLE_OLE_SERVER_SOURCE)\*.* $(SAMPLE_OLE_SERVER_INSTALL_DIRECTORY) >nul
  $(REMOVE) $(SAMPLE_OLE_SERVER_INSTALL_DIRECTORY)\*.lid


$(DAYTIME_CLIENT_INSTALL_DIRECTORY):
  $(ENSURE_SOURCES) network-examples $(NETWORK_EXAMPLES_SOURCE)
  $(ENSURE_DIRECTORY) $(DAYTIME_CLIENT_INSTALL_DIRECTORY)
  $(COPY) $(DAYTIME_CLIENT_SOURCE)\*.* $(DAYTIME_CLIENT_INSTALL_DIRECTORY) >nul
  $(ENSURE_WRITEABLE_HDP_FILES) $(DAYTIME_CLIENT_INSTALL_DIRECTORY)

$(DAYTIME_SERVER_INSTALL_DIRECTORY):
  $(ENSURE_SOURCES) network-examples $(NETWORK_EXAMPLES_SOURCE)
  $(ENSURE_DIRECTORY) $(DAYTIME_SERVER_INSTALL_DIRECTORY)
  $(COPY) $(DAYTIME_SERVER_SOURCE)\*.* $(DAYTIME_SERVER_INSTALL_DIRECTORY) >nul
  $(ENSURE_WRITEABLE_HDP_FILES) $(DAYTIME_SERVER_INSTALL_DIRECTORY)

$(ECHO_CLIENT_INSTALL_DIRECTORY):
  $(ENSURE_SOURCES) network-examples $(NETWORK_EXAMPLES_SOURCE)
  $(ENSURE_DIRECTORY) $(ECHO_CLIENT_INSTALL_DIRECTORY)
  $(COPY) $(ECHO_CLIENT_SOURCE)\*.* $(ECHO_CLIENT_INSTALL_DIRECTORY) >nul
  $(ENSURE_WRITEABLE_HDP_FILES) $(ECHO_CLIENT_INSTALL_DIRECTORY)

$(ECHO_SERVER_INSTALL_DIRECTORY):
  $(ENSURE_SOURCES) network-examples $(NETWORK_EXAMPLES_SOURCE)
  $(ENSURE_DIRECTORY) $(ECHO_SERVER_INSTALL_DIRECTORY)
  $(COPY) $(ECHO_SERVER_SOURCE)\*.* $(ECHO_SERVER_INSTALL_DIRECTORY) >nul
  $(ENSURE_WRITEABLE_HDP_FILES) $(ECHO_SERVER_INSTALL_DIRECTORY)

$(SIMPLE_DAYTIME_CLIENT_INSTALL_DIRECTORY):
  $(ENSURE_SOURCES) network-examples $(NETWORK_EXAMPLES_SOURCE)
  $(ENSURE_DIRECTORY) $(SIMPLE_DAYTIME_CLIENT_INSTALL_DIRECTORY)
  $(COPY) $(SIMPLE_DAYTIME_CLIENT_SOURCE)\*.* $(SIMPLE_DAYTIME_CLIENT_INSTALL_DIRECTORY) >nul
  $(ENSURE_WRITEABLE_HDP_FILES) $(SIMPLE_DAYTIME_CLIENT_INSTALL_DIRECTORY)

$(SIMPLE_DAYTIME_SERVER_INSTALL_DIRECTORY):
  $(ENSURE_SOURCES) network-examples $(NETWORK_EXAMPLES_SOURCE)
  $(ENSURE_DIRECTORY) $(SIMPLE_DAYTIME_SERVER_INSTALL_DIRECTORY)
  $(COPY) $(SIMPLE_DAYTIME_SERVER_SOURCE)\*.* $(SIMPLE_DAYTIME_SERVER_INSTALL_DIRECTORY) >nul
  $(ENSURE_WRITEABLE_HDP_FILES) $(SIMPLE_DAYTIME_SERVER_INSTALL_DIRECTORY)


$(CORBA_HELLO_WORLD_INSTALL_DIRECTORY):
  $(ENSURE_SOURCES) corba-demos $(CORBA_DEMOS_SOURCE)
  $(ENSURE_DIRECTORY) $(CORBA_HELLO_WORLD_INSTALL_DIRECTORY)
  $(RECURSIVE_COPY) $(CORBA_HELLO_WORLD_SOURCE) $(CORBA_HELLO_WORLD_INSTALL_DIRECTORY) >nul
  $(REMOVE_CVS_DIRECTORIES) $(CORBA_HELLO_WORLD_INSTALL_DIRECTORY)
  $(ENSURE_WRITEABLE_HDP_FILES) $(CORBA_HELLO_WORLD_INSTALL_DIRECTORY)

$(CORBA_BANK_DEMO_INSTALL_DIRECTORY):
  $(ENSURE_SOURCES) corba-demos $(CORBA_DEMOS_SOURCE)
  $(ENSURE_DIRECTORY) $(CORBA_BANK_DEMO_INSTALL_DIRECTORY)
  $(RECURSIVE_COPY) $(CORBA_BANK_DEMO_SOURCE) $(CORBA_BANK_DEMO_INSTALL_DIRECTORY) >nul
  $(REMOVE_CVS_DIRECTORIES) $(CORBA_BANK_DEMO_INSTALL_DIRECTORY)
  $(ENSURE_WRITEABLE_HDP_FILES) $(CORBA_BANK_DEMO_INSTALL_DIRECTORY)

$(CORBA_PENTE_INSTALL_DIRECTORY):
  $(ENSURE_SOURCES) corba-demos $(CORBA_DEMOS_SOURCE)
  $(ENSURE_DIRECTORY) $(CORBA_PENTE_INSTALL_DIRECTORY)
  $(RECURSIVE_COPY) $(CORBA_PENTE_SOURCE) $(CORBA_PENTE_INSTALL_DIRECTORY) >nul
  $(REMOVE_CVS_DIRECTORIES) $(CORBA_PENTE_INSTALL_DIRECTORY)
  $(ENSURE_WRITEABLE_HDP_FILES) $(CORBA_PENTE_INSTALL_DIRECTORY)

$(CHAT_DEMO_INSTALL_DIRECTORY):
  $(ENSURE_SOURCES) corba-demos $(CORBA_DEMOS_SOURCE)
  $(ENSURE_DIRECTORY) $(CHAT_DEMO_INSTALL_DIRECTORY)
  $(RECURSIVE_COPY) $(CHAT_DEMO_SOURCE) $(CHAT_DEMO_INSTALL_DIRECTORY) >nul
  $(REMOVE_CVS_DIRECTORIES) $(CHAT_DEMO_INSTALL_DIRECTORY)
  $(ENSURE_WRITEABLE_HDP_FILES) $(CHAT_DEMO_INSTALL_DIRECTORY)


$(DOC_AIRPORT_INSTALL_DIRECTORY):
  $(ENSURE_SOURCES) doc-examples $(DOC_AIRPORT_SOURCE)
  $(ENSURE_DIRECTORY) $(DOC_AIRPORT_INSTALL_DIRECTORY)
  $(COPY) $(DOC_AIRPORT_SOURCE)\*.* $(DOC_AIRPORT_INSTALL_DIRECTORY) >nul

$(DOC_REVERSI_INSTALL_DIRECTORY):
  $(MAKE) $(DOC_REVERSI_PROJECT)
  $(ENSURE_DIRECTORY) $(DOC_REVERSI_INSTALL_DIRECTORY)
  $(COPY) $(DOC_REVERSI_SOURCE)\*.* $(DOC_REVERSI_INSTALL_DIRECTORY) >nul
  $(REMOVE) $(DOC_REVERSI_INSTALL_DIRECTORY)\*.lid

$(DOC_ROTNEXAMPLE_INSTALL_DIRECTORY):
  $(ENSURE_SOURCES) doc-examples $(DOC_ROTNEXAMPLE_SOURCE)
  $(ENSURE_DIRECTORY) $(DOC_ROTNEXAMPLE_INSTALL_DIRECTORY)
  $(COPY) $(DOC_ROTNEXAMPLE_SOURCE)\*.* $(DOC_ROTNEXAMPLE_INSTALL_DIRECTORY) >nul

$(DOC_TASK_LIST_1_INSTALL_DIRECTORY):
  $(ENSURE_SOURCES) doc-examples $(DOC_TASK_LIST_1_SOURCE)
  $(ENSURE_DIRECTORY) $(DOC_TASK_LIST_1_INSTALL_DIRECTORY)
  $(COPY) $(DOC_TASK_LIST_1_SOURCE)\*.* $(DOC_TASK_LIST_1_INSTALL_DIRECTORY) >nul

$(DOC_TASK_LIST_2_INSTALL_DIRECTORY):
  $(ENSURE_SOURCES) doc-examples $(DOC_TASK_LIST_2_SOURCE)
  $(ENSURE_DIRECTORY) $(DOC_TASK_LIST_2_INSTALL_DIRECTORY)
  $(COPY) $(DOC_TASK_LIST_2_SOURCE)\*.* $(DOC_TASK_LIST_2_INSTALL_DIRECTORY) >nul


# Build examples

$(HELLO_WORLD):
  $(ENSURE_RUNTIME_LIBRARY) $(FUNCTIONAL_DYLAN_DLL) functional-dylan
  $(ENSURE_SOURCES) hello-world $(HELLO_WORLD_SOURCE)
  $(ENSURE_REGISTRY_ENTRY) hello-world generic
  $(BUILD_APPLICATION) hello-world

$(FACTORIAL_SMALL):
  $(ENSURE_RUNTIME_LIBRARY) $(SYSTEM_DLL) system
  $(ENSURE_SOURCES) factorial $(FACTORIAL_SOURCE)
  $(ENSURE_REGISTRY_ENTRY) factorial-small generic
  $(BUILD_APPLICATION) factorial-small

$(FACTORIAL_BIG):
  $(ENSURE_RUNTIME_LIBRARY) $(SYSTEM_DLL) system
  $(ENSURE_RUNTIME_LIBRARY) $(BIG_INTEGERS_DLL) big-integers
  $(ENSURE_SOURCES) factorial $(FACTORIAL_SOURCE)
  $(ENSURE_REGISTRY_ENTRY) factorial-big generic
  $(BUILD_APPLICATION) factorial-big

$(TOWERS_OF_HANOI):
  $(ENSURE_RUNTIME_LIBRARY) $(FUNCTIONAL_DYLAN_DLL) functional-dylan
  $(ENSURE_SOURCES) console $(CONSOLE_EXAMPLES_SOURCE)
  $(BUILD_APPLICATION) $(TOWERS_OF_HANOI_SOURCE)\towers-of-hanoi.hdp


$(WINDOWS_FFI_EXAMPLE):
  $(ENSURE_RUNTIME_LIBRARY) $(WIN32_USER_DLL) win32-user
  $(ENSURE_SOURCES) windows-ffi-example $(WINDOWS_FFI_EXAMPLE_SOURCE)
  $(ENSURE_REGISTRY_ENTRY) windows-ffi-example x86-win32
  $(BUILD_APPLICATION) windows-ffi-example

$(WINDOWS_GADGETS_EXAMPLE):
  $(ENSURE_RUNTIME_LIBRARY) $(WIN32_USER_DLL) win32-user
  $(ENSURE_SOURCES) windows-gadgets-example $(WINDOWS_GADGETS_EXAMPLE_SOURCE)
  $(ENSURE_REGISTRY_ENTRY) windows-gadgets-example x86-win32
  $(BUILD_APPLICATION) windows-gadgets-example

$(DUIM_RESOURCE_EXAMPLE):
  $(ENSURE_RUNTIME_LIBRARY) $(WIN32_RESOURCES_DLL) win32-resources
  $(ENSURE_RUNTIME_LIBRARY) $(DUIM_DLL) duim
  $(ENSURE_SOURCES) duim-examples $(DUIM_EXAMPLES_SOURCE)
  $(ENSURE_REGISTRY_ENTRY) duim-resource-example x86-win32
  $(BUILD_APPLICATION) duim-resource-example

$(INTERFACE_BUILDER):
  $(ENSURE_RUNTIME_LIBRARY) $(IO_DLL) io
  $(ENSURE_RUNTIME_LIBRARY) $(DUIM_DLL) duim
  $(ENSURE_SOURCES) duim-examples $(DUIM_EXAMPLES_SOURCE)
  $(ENSURE_REGISTRY_ENTRY) interface-builder x86-win32
  $(BUILD_APPLICATION) interface-builder

$(REVERSI):
  $(ENSURE_RUNTIME_LIBRARY) $(IO_DLL) io
  $(ENSURE_RUNTIME_LIBRARY) $(SYSTEM_DLL) system
  $(ENSURE_RUNTIME_LIBRARY) $(DUIM_DLL) duim
  $(ENSURE_SOURCES) duim-examples $(DUIM_EXAMPLES_SOURCE)
  $(ENSURE_REGISTRY_ENTRY) reversi x86-win32
  $(BUILD_APPLICATION) reversi

$(PENTE):
  $(ENSURE_RUNTIME_LIBRARY) $(SYSTEM_DLL) system
  $(ENSURE_RUNTIME_LIBRARY) $(DUIM_DLL) duim
  $(ENSURE_SOURCES) duim-examples $(DUIM_EXAMPLES_SOURCE)
  $(ENSURE_REGISTRY_ENTRY) pente x86-win32
  $(BUILD_APPLICATION) pente

$(SCRIBBLE):
  $(ENSURE_RUNTIME_LIBRARY) $(DUIM_DLL) duim
  $(ENSURE_SOURCES) duim-examples $(DUIM_EXAMPLES_SOURCE)
  $(ENSURE_REGISTRY_ENTRY) scribble x86-win32
  $(BUILD_APPLICATION) scribble

$(STANDALONE_DEUCE):
  $(ENSURE_RUNTIME_LIBRARY) $(SYSTEM_DLL) system
  $(ENSURE_RUNTIME_LIBRARY) $(DUIM_DEUCE_DLL) duim-deuce
  $(ENSURE_SOURCES) deuce $(DEUCE_SOURCE)
  $(ENSURE_REGISTRY_ENTRY) standalone-deuce x86-win32
  $(BUILD_APPLICATION) standalone-deuce

$(TETRIS):
  $(ENSURE_RUNTIME_LIBRARY) $(DUIM_DLL) duim
  $(ENSURE_SOURCES) duim-examples $(DUIM_EXAMPLES_SOURCE)
  $(ENSURE_REGISTRY_ENTRY) tetris x86-win32
  $(BUILD_APPLICATION) tetris

$(TIC_TAC_TOE):
  $(ENSURE_RUNTIME_LIBRARY) $(SYSTEM_DLL) system
  $(ENSURE_RUNTIME_LIBRARY) $(DUIM_DLL) duim
  $(ENSURE_SOURCES) duim-examples $(DUIM_EXAMPLES_SOURCE)
  $(ENSURE_REGISTRY_ENTRY) tic-tac-toe x86-win32
  $(BUILD_APPLICATION) tic-tac-toe

$(WINDOWS_VIEWER):
  $(ENSURE_RUNTIME_LIBRARY) $(IO_DLL) io
  $(ENSURE_RUNTIME_LIBRARY) $(DUIM_DLL) duim
  $(ENSURE_SOURCES) duim-examples $(WINDOWS_VIEWER_SOURCE)
  $(ENSURE_REGISTRY_ENTRY) windows-hook x86-win32
  $(ENSURE_REGISTRY_ENTRY) windows-viewer x86-win32
  $(BUILD_APPLICATION) windows-viewer

$(WIN32_SCRIBBLE):
  $(ENSURE_RUNTIME_LIBRARY) $(DUIM_DLL) duim
  $(ENSURE_SOURCES) duim-examples $(DUIM_EXAMPLES_SOURCE)
  $(ENSURE_REGISTRY_ENTRY) win32-scribble x86-win32
  $(BUILD_APPLICATION) win32-scribble


$(DAYTIME_CLIENT):
  $(ENSURE_RUNTIME_LIBRARY) $(NETWORK_DLL) network
  $(ENSURE_SOURCES) network-examples $(NETWORK_EXAMPLES_SOURCE)
  $(ENSURE_REGISTRY_ENTRY) daytime-client generic
  $(BUILD_APPLICATION) daytime-client

$(DAYTIME_SERVER):
  $(ENSURE_RUNTIME_LIBRARY) $(NETWORK_DLL) network
  $(ENSURE_SOURCES) network-examples $(NETWORK_EXAMPLES_SOURCE)
  $(ENSURE_REGISTRY_ENTRY) daytime-server generic
  $(BUILD_APPLICATION) daytime-server

$(ECHO_CLIENT):
  $(ENSURE_RUNTIME_LIBRARY) $(NETWORK_DLL) network
  $(ENSURE_SOURCES) network-examples $(NETWORK_EXAMPLES_SOURCE)
  $(ENSURE_REGISTRY_ENTRY) echo-client generic
  $(BUILD_APPLICATION) echo-client

$(ECHO_SERVER):
  $(ENSURE_RUNTIME_LIBRARY) $(NETWORK_DLL) network
  $(ENSURE_SOURCES) network-examples $(NETWORK_EXAMPLES_SOURCE)
  $(ENSURE_REGISTRY_ENTRY) echo-server generic
  $(BUILD_APPLICATION) echo-server

$(SIMPLE_DAYTIME_CLIENT):
  $(ENSURE_RUNTIME_LIBRARY) $(NETWORK_DLL) network
  $(ENSURE_SOURCES) network-examples $(NETWORK_EXAMPLES_SOURCE)
  $(ENSURE_REGISTRY_ENTRY) simple-daytime-client generic
  $(BUILD_APPLICATION) simple-daytime-client

$(SIMPLE_DAYTIME_SERVER):
  $(ENSURE_RUNTIME_LIBRARY) $(NETWORK_DLL) network
  $(ENSURE_SOURCES) network-examples $(NETWORK_EXAMPLES_SOURCE)
  $(ENSURE_REGISTRY_ENTRY) simple-daytime-server generic
  $(BUILD_APPLICATION) simple-daytime-server

$(PLONKER):
  $(ENSURE_RUNTIME_LIBRARY) $(COLLECTIONS_DLL) collections
  $(ENSURE_RUNTIME_LIBRARY) $(DUIM_DLL) duim
  $(ENSURE_RUNTIME_LIBRARY) $(MIDI_DLL) midi
  $(ENSURE_SOURCES) plonker $(PLONKER_SOURCE)
  $(ENSURE_REGISTRY_ENTRY) plonker x86-win32
  $(BUILD_APPLICATION) plonker

# eof
