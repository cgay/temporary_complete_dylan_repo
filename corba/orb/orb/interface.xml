<?xml version="1.0"?>
<!DOCTYPE refman SYSTEM "./refman.dtd">
<refman>

<head>
<title>Functional Objects dylan-orb Reference Manual</title>
<organisation>Functional Objects, Inc.</organisation>
<copyright>Copyright (c) 1999 Functional Objects, Inc. All rights reserved.</copyright>
<version>1.0</version>
</head>

<library>
  <name>dylan-orb</name>


<module>
  <name><![CDATA[dylan-orb]]></name>

<entry>
  <name><![CDATA[<incompatible-type-any-coercion-error>]]></name>
  <classdef>
    <modifiers></modifiers>
    <superclasses>
      <![CDATA[<simple-error>]]>
    </superclasses>
    <keywords>
      <keyword>
        <name>format-arguments:</name>
        <type><![CDATA[<object>]]></type>
        <description></description>
      </keyword>
      <keyword>
        <name>format-string:</name>
        <type><![CDATA[<object>]]></type>
        <description></description>
      </keyword>
    </keywords>
  </classdef>
  <description>
<p><![CDATA[<incompatible-type-any-coercion-error>]]> is signaled if a
<![CDATA[corba/<any>]]> cannot be coerced to the given type.</p>
  </description>
  <seealso></seealso>
</entry>

<entry>
  <name><![CDATA[<no-interface-definition>]]></name>
  <classdef>
    <modifiers></modifiers>
    <superclasses>
      <![CDATA[<simple-error>]]>
    </superclasses>
    <keywords>
      <keyword>
        <name>format-arguments:</name>
        <type><![CDATA[<object>]]></type>
        <description></description>
      </keyword>
      <keyword>
        <name>format-string:</name>
        <type><![CDATA[<object>]]></type>
        <description></description>
      </keyword>
    </keywords>
  </classdef>
  <description>
<p><![CDATA[<no-interface-definition>]]> is signaled by call-dii if
there is no <![CDATA[corba/<interfacedef>]]> defined in the Interface
Repository for the given object reference.</p>
  </description>
  <seealso></seealso>
</entry>

<entry>
  <name><![CDATA[<no-operation-definition>]]></name>
  <classdef>
    <modifiers></modifiers>
    <superclasses>
      <![CDATA[<simple-error>]]>
    </superclasses>
    <keywords>
      <keyword>
        <name>format-arguments:</name>
        <type><![CDATA[<object>]]></type>
        <description></description>
      </keyword>
      <keyword>
        <name>format-string:</name>
        <type><![CDATA[<object>]]></type>
        <description></description>
      </keyword>
    </keywords>
  </classdef>
  <description>
<p><![CDATA[<no-operation-definition>]]> is signaled by call-dii if
there is no <![CDATA[corba/<operationdef>]]> defined in the Interface
Repository for the given object reference.</p>
  </description>
  <seealso></seealso>
</entry>

<entry>
  <name><![CDATA[<unknown-type-any-coercion-error>]]></name>
  <classdef>
    <modifiers></modifiers>
    <superclasses>
      <![CDATA[<simple-error>]]>
    </superclasses>
    <keywords>
      <keyword>
        <name>format-arguments:</name>
        <type><![CDATA[<object>]]></type>
        <description></description>
      </keyword>
      <keyword>
        <name>format-string:</name>
        <type><![CDATA[<object>]]></type>
        <description></description>
      </keyword>
    </keywords>
  </classdef>
  <description>
<p><![CDATA[<unknown-type-any-coercion-error>]]> is signaled if a
value without a known native type is extracted from a
<![CDATA[corba/<any>]]></p>
  </description>
  <seealso></seealso>
</entry>

<entry>
  <name><![CDATA[<unknown-type-any-coercion-restart>]]></name>
  <classdef>
    <modifiers></modifiers>
    <superclasses>
      <![CDATA[<simple-restart>]]>
    </superclasses>
    <keywords>
      <keyword>
        <name>format-arguments:</name>
        <type><![CDATA[<object>]]></type>
        <description></description>
      </keyword>
      <keyword>
        <name>format-string:</name>
        <type><![CDATA[<object>]]></type>
        <description></description>
      </keyword>
      <keyword>
        <name>type:</name>
        <type><![CDATA[<type>]]></type>
        <description></description>
      </keyword>
    </keywords>
  </classdef>
  <description>
<p><![CDATA[<unknown-type-any-coercion-restart>]]> can be invoked to
return a known type after
<![CDATA[<unknown-type-any-coercion-error>]]> is signaled.</p>
  </description>
  <seealso></seealso>
</entry>

<entry>
  <name><![CDATA[call-dii]]></name>
  <functiondef>
    <ins>
      <in>
        <name>operation</name>
        <type><![CDATA[<object>]]></type>
        <description></description>
      </in>
      <in>
        <name>object</name>
        <type><![CDATA[<object>]]></type>
        <description></description>
      </in>
      <in>
        <name>arguments</name>
        <type><![CDATA[<object>]]></type>
        <description></description>
      </in>
    </ins>
    <outs>
      <out>
        <name>results</name>
        <type><![CDATA[<object>]]></type>
        <description></description>
      </out>
    </outs>
  </functiondef>
  <description>

<p>This is part of an experimental interface eXtended Dynamic
Invocation Interface (XDII) for invoking operations without having to
compile IDL files into Dylan stub code.</p>

<p><![CDATA[call-dii]]> invokes the operation on the CORBA object using
the DII. <![CDATA[call-dii]]> uses the Interface Repository (IR) to
build up the request so the ORB must be configured to know about an
IR using one of the command line arguments.</p>
  </description>
  <seealso></seealso>
</entry>

<entry>
  <name><![CDATA[class-typecode]]></name>
  <functiondef>
    <ins>
      <in>
        <name>object</name>
        <type><![CDATA[<type>]]></type>
        <description></description>
      </in>
    </ins>
    <outs>
      <out>
        <name>typecode</name>
        <type><![CDATA[<typecode>:corba-protocol:corba-protocol]]></type>
        <description></description>
      </out>
    </outs>
  </functiondef>
  <description>
<p><![CDATA[class-typecode]]> returns the <![CDATA[corba/<typecode>]]>
associated with the Dylan type given as the argument.</p>
  </description>
  <seealso></seealso>
</entry>

<entry>
  <name><![CDATA[corba/$any-typecode]]></name>
  <constantdef>
    <type><![CDATA[<object>]]></type>
    <value><![CDATA[#f]]></value>
  </constantdef>
  <description>
<p>The <![CDATA[corba/<typecode>]]> for <![CDATA[corba/<any>]]>.</p>
  </description>
  <seealso></seealso>
</entry>

<entry>
  <name><![CDATA[corba/$arg-in]]></name>
  <constantdef>
    <type><![CDATA[<object>]]></type>
    <value><![CDATA[#f]]></value>
  </constantdef>
  <description>
  </description>
  <seealso></seealso>
</entry>

<entry>
  <name><![CDATA[corba/$arg-inout]]></name>
  <constantdef>
    <type><![CDATA[<object>]]></type>
    <value><![CDATA[#f]]></value>
  </constantdef>
  <description></description>
  <seealso></seealso>
</entry>

<entry>
  <name><![CDATA[corba/$arg-out]]></name>
  <constantdef>
    <type><![CDATA[<object>]]></type>
    <value><![CDATA[#f]]></value>
  </constantdef>
  <description></description>
  <seealso></seealso>
</entry>

<entry>
  <name><![CDATA[corba/$boolean-typecode]]></name>
  <constantdef>
    <type><![CDATA[<object>]]></type>
    <value><![CDATA[#f]]></value>
  </constantdef>
  <description>
<p>The <![CDATA[corba/<typecode>]]> for <![CDATA[corba/<boolean>]]>.</p>
  </description>
  <seealso></seealso>
</entry>

<entry>
  <name><![CDATA[corba/$char-typecode]]></name>
  <constantdef>
    <type><![CDATA[<object>]]></type>
    <value><![CDATA[#f]]></value>
  </constantdef>
  <description>
<p>The <![CDATA[corba/<typecode>]]> for <![CDATA[corba/<char>]]>.</p>
  </description>
  <seealso></seealso>
</entry>

<entry>
  <name><![CDATA[corba/$ctx-restrict-scope]]></name>
  <constantdef>
    <type><![CDATA[<object>]]></type>
    <value><![CDATA[#f]]></value>
  </constantdef>
  <description></description>
  <seealso></seealso>
</entry>

<entry>
  <name><![CDATA[corba/$double-typecode]]></name>
  <constantdef>
    <type><![CDATA[<object>]]></type>
    <value><![CDATA[#f]]></value>
  </constantdef>
  <description>
<p>The <![CDATA[corba/<typecode>]]> for <![CDATA[corba/<double>]]>.</p>
  </description>
  <seealso></seealso>
</entry>

<entry>
  <name><![CDATA[corba/$float-typecode]]></name>
  <constantdef>
    <type><![CDATA[<object>]]></type>
    <value><![CDATA[#f]]></value>
  </constantdef>
  <description>
<p>The <![CDATA[corba/<typecode>]]> for <![CDATA[corba/<float>]]>.</p>
  </description>
  <seealso></seealso>
</entry>

<entry>
  <name><![CDATA[corba/$inv-no-response]]></name>
  <constantdef>
    <type><![CDATA[<object>]]></type>
    <value><![CDATA[#f]]></value>
  </constantdef>
  <description></description>
  <seealso></seealso>
</entry>

<entry>
  <name><![CDATA[corba/$long-typecode]]></name>
  <constantdef>
    <type><![CDATA[<object>]]></type>
    <value><![CDATA[#f]]></value>
  </constantdef>
  <description>
<p>The <![CDATA[corba/<typecode>]]> for <![CDATA[corba/<long>]]>.</p>
  </description>
  <seealso></seealso>
</entry>

<entry>
  <name><![CDATA[corba/$null-typecode]]></name>
  <constantdef>
    <type><![CDATA[<object>]]></type>
    <value><![CDATA[#f]]></value>
  </constantdef>
  <description>
<p>The null <![CDATA[corba/<typecode>]]>.</p>
  </description>
  <seealso></seealso>
</entry>

<entry>
  <name><![CDATA[corba/$octet-typecode]]></name>
  <constantdef>
    <type><![CDATA[<object>]]></type>
    <value><![CDATA[#f]]></value>
  </constantdef>
  <description>
<p>The <![CDATA[corba/<typecode>]]> for <![CDATA[corba/<octet>]]>.</p>
  </description>
  <seealso></seealso>
</entry>

<entry>
  <name><![CDATA[corba/$principal-typecode]]></name>
  <constantdef>
    <type><![CDATA[<object>]]></type>
    <value><![CDATA[#f]]></value>
  </constantdef>
  <description>
<p>The <![CDATA[corba/<typecode>]]> for <![CDATA[corba/<principal>]]>.</p>
  </description>
  <seealso></seealso>
</entry>

<entry>
  <name><![CDATA[corba/$short-typecode]]></name>
  <constantdef>
    <type><![CDATA[<object>]]></type>
    <value><![CDATA[#f]]></value>
  </constantdef>
  <description>
<p>The <![CDATA[corba/<typecode>]]> for <![CDATA[corba/<short>]]>.</p>
  </description>
  <seealso></seealso>
</entry>

<entry>
  <name><![CDATA[corba/$string-typecode]]></name>
  <constantdef>
    <type><![CDATA[<object>]]></type>
    <value><![CDATA[#f]]></value>
  </constantdef>
  <description>
<p>The <![CDATA[corba/<typecode>]]> for <![CDATA[corba/<string>]]>.</p>
  </description>
  <seealso></seealso>
</entry>

<entry>
  <name><![CDATA[corba/$tckind-typecode]]></name>
  <constantdef>
    <type><![CDATA[<object>]]></type>
    <value><![CDATA[#f]]></value>
  </constantdef>
  <description>
<p>The <![CDATA[corba/<typecode>]]> for <![CDATA[corba/<tckind>]]>.</p>
  </description>
  <seealso></seealso>
</entry>

<entry>
  <name><![CDATA[corba/$typecode-typecode]]></name>
  <constantdef>
    <type><![CDATA[<object>]]></type>
    <value><![CDATA[#f]]></value>
  </constantdef>
  <description>
<p>The <![CDATA[corba/<typecode>]]> for <![CDATA[corba/<typecode>]]>.</p>
  </description>
  <seealso></seealso>
</entry>

<entry>
  <name><![CDATA[corba/$unsigned-long-typecode]]></name>
  <constantdef>
    <type><![CDATA[<object>]]></type>
    <value><![CDATA[#f]]></value>
  </constantdef>
  <description>
<p>The <![CDATA[corba/<typecode>]]> for <![CDATA[corba/<unsigned-long>]]>.</p>
  </description>
  <seealso></seealso>
</entry>

<entry>
  <name><![CDATA[corba/$unsigned-short-typecode]]></name>
  <constantdef>
    <type><![CDATA[<object>]]></type>
    <value><![CDATA[#f]]></value>
  </constantdef>
  <description>
<p>The <![CDATA[corba/<typecode>]]> for <![CDATA[corba/<unsigned-short-typecode>]]>.</p>
  </description>
  <seealso></seealso>
</entry>

<entry>
  <name><![CDATA[corba/$void-typecode]]></name>
  <constantdef>
    <type><![CDATA[<object>]]></type>
    <value><![CDATA[#f]]></value>
  </constantdef>
  <description>
<p>The void <![CDATA[corba/<typecode>]]>.</p>
  </description>
  <seealso></seealso>
</entry>

<entry>
  <name><![CDATA[corba/<aliasdef>]]></name>
  <classdef>
    <modifiers>Open Abstract </modifiers>
    <superclasses>
      <![CDATA[corba/<typedefdef>]]>
    </superclasses>
    <keywords>
    </keywords>
  </classdef>
  <description>
<p>A <![CDATA[corba/<aliasdef>]]> represents an IDL typedef that
aliases another definition.</p>

<p>The corba/aliasdef/original-type-def attribute identifies the type
being aliased.</p>

<p>The inherited corba/idltype/type attribute is a #"tk-alias"
<![CDATA[corba/<typecode>]]> describing the alias.</p>

<p>Setting the corba/aliasdef/original-type-def attribute also updates
the corba/idltype/type attribute.</p>
  </description>
  <seealso></seealso>
</entry>

<entry>
  <name><![CDATA[corba/<any>]]></name>
  <classdef>
    <modifiers></modifiers>
    <superclasses>
      <![CDATA[<object>]]>
    </superclasses>
    <keywords>
      <keyword>
        <name>type:</name>
        <type><![CDATA[corba/<typecode>]]></type>
        <description></description>
      </keyword>
      <keyword>
        <name>value:</name>
        <type><![CDATA[<object>]]></type>
        <description></description>
      </keyword>
    </keywords>
  </classdef>
  <description>
<p><![CDATA[corba/<any>]]> is a CORBA type that can contain a value of
any other CORBA type. <![CDATA[corba/<any>]]>s have a typecode and a
value. The typecode describes the type of the value.</p>

<p><![CDATA[corba/<any>]]>s are used extensively in the Dynamic
Invocation Interface (DII).</p>
  </description>
  <seealso>
    <see>corba/any/type</see>
    <see>corba/any/type-setter</see>
    <see>corba/any/value</see>
    <see>corba/any/value-setter</see>
  </seealso>
</entry>

<entry>
  <name><![CDATA[corba/<arg-list>]]></name>
  <constantdef>
    <type><![CDATA[<object>]]></type>
    <value><![CDATA[#f]]></value>
  </constantdef>
  <description>
<p>The type of the sequence of arguments passed to corba/orb-init.</p>
  </description>
  <seealso>
    <see>corba/orb-init</see>
  </seealso>
</entry>

<entry>
  <name><![CDATA[corba/<array>]]></name>
  <constantdef>
    <type><![CDATA[<object>]]></type>
    <value><![CDATA[#f]]></value>
  </constantdef>
  <description>
<p><![CDATA[corba/<array>]]> is a CORBA array. Functional Developer
currently aliases this to <array>.</p>
  </description>
  <seealso></seealso>
</entry>

<entry>
  <name><![CDATA[corba/<arraydef>]]></name>
  <classdef>
    <modifiers>Open Abstract </modifiers>
    <superclasses>
      <![CDATA[corba/<idltype>]]>
    </superclasses>
    <keywords>
    </keywords>
  </classdef>
  <description>
<p>An <![CDATA[corba/<arraydef>]]> represents an IDL array type. As
array types are anonymous, this interface is not derived from
<![CDATA[corba/<typedefdef>]]> or <![CDATA[corba/<contained>]]>.</p>

<p>The corba/arraydef/length attribute specifies the number of
elements in the array.</p>

<p>The type of the elements is described by
corba/arraydef/element-type and identified by
corba/arraydef/element-type-def. Since an <![CDATA[corba/<arraydef>]]>
only represents a single dimension of an array, multi-dimensional IDL
arrays are represented by multiple <![CDATA[corba/<arraydef>]]>
objects, one per array dimension. The corba/arraydef/element-type-def
attribute of the <![CDATA[corba/<arraydef>]]> representing the
leftmost index of the array, as defined in IDL, will refer to the
<![CDATA[corba/<arraydef>]]> representing the next index to the right,
and so on. The innermost <![CDATA[corba/<arraydef>]]> represents the
rightmost index and the element type of the multi-dimensional OMG IDL
array.</p>

<p>The inherited corba/idltype/type attribute is a #"tk-array"
<![CDATA[corba/<typecode>]]> describing the array.</p>
	
<p>Setting the corba/arraydef/element-type-def attribute also updates
the corba/arraydef/element-type attribute.</p>

<p>Setting the corba/arraydef/bound or corba/arraydef/element-type-def
attribute also updates the corba/idltype/type attribute.</p>
  </description>
  <seealso></seealso>
</entry>

<entry>
  <name><![CDATA[corba/<attrdescriptionseq>]]></name>
  <constantdef>
    <type><![CDATA[<object>]]></type>
    <value><![CDATA[#f]]></value>
  </constantdef>
  <description>
A sequence of <![CDATA[corba/<attributedescription>]]>.
  </description>
  <seealso>
    <see><![CDATA[corba/interfacedef/<fullinterfacedescription>]]></see>
  </seealso>
</entry>

<entry>
  <name><![CDATA[corba/<attributedef>]]></name>
  <classdef>
    <modifiers>Open Abstract </modifiers>
    <superclasses>
      <![CDATA[corba/<contained>]]>
    </superclasses>
    <keywords>
    </keywords>
  </classdef>
  <description>
<p>An <![CDATA[corba/<attributedef>]]> represents the information that
defines an attribute of an interface.</p>

<p>The corba/attributedef/type attribute provides the
<![CDATA[corba/<typecode>]]> describing the type of this
attribute. The corba/attributedef/type-def attribute identifies the
object defining the type of this attribute.</p>

<p>The corba/attributedef/mode attribute specifies read only or
read/write access for this attribute.</p>

<p>Setting the corba/attributedef/type-def attribute also updates the
corba/attributedef/type attribute.</p>
  </description>
  <seealso></seealso>
</entry>

<entry>
  <name><![CDATA[corba/<attributedescription>]]></name>
  <classdef>
    <modifiers></modifiers>
    <superclasses>
      <![CDATA[corba/<struct>]]>
    </superclasses>
    <keywords>
      <keyword>
        <name>defined-in:</name>
        <type><![CDATA[corba/<repositoryid>]]></type>
        <description></description>
      </keyword>
      <keyword>
        <name>id:</name>
        <type><![CDATA[corba/<repositoryid>]]></type>
        <description></description>
      </keyword>
      <keyword>
        <name>mode:</name>
        <type><![CDATA[corba/<attributemode>]]></type>
        <description></description>
      </keyword>
      <keyword>
        <name>name:</name>
        <type><![CDATA[corba/<identifier>]]></type>
        <description></description>
      </keyword>
      <keyword>
        <name>type:</name>
        <type><![CDATA[corba/<typecode>]]></type>
        <description></description>
      </keyword>
      <keyword>
        <name>version:</name>
        <type><![CDATA[corba/<versionspec>]]></type>
        <description></description>
      </keyword>
    </keywords>
  </classdef>
  <description>
  </description>
  <seealso>
    <see><![CDATA[corba/<attrdescriptionseq>]]></see>
    <see>corba/contained/describe</see>
    <see>corba/attributedescription/defined-in</see>
    <see>corba/attributedescription/defined-in-setter</see>
    <see>corba/attributedescription/id</see>
    <see>corba/attributedescription/id-setter</see>
    <see>corba/attributedescription/mode</see>
    <see>corba/attributedescription/mode-setter</see>
    <see>corba/attributedescription/name</see>
    <see>corba/attributedescription/name-setter</see>
    <see>corba/attributedescription/type</see>
    <see>corba/attributedescription/type-setter</see>
    <see>corba/attributedescription/version</see>
    <see>corba/attributedescription/version-setter</see>
  </seealso>
</entry>

<entry>
  <name><![CDATA[corba/<attributemode>]]></name>
  <constantdef>
    <type><![CDATA[<object>]]></type>
    <value><![CDATA[#f]]></value>
  </constantdef>
  <description>
<p>Type of value returned by corba/attributedef/mode.</p>
  </description>
  <seealso>
    <see>corba/attributedef/mode</see>
    <see>corba/attributedef/mode-setter</see>
    <see>corba/interfacedef/create-attribute</see>
    <see>corba/<attributedescription></see>
  </seealso>
</entry>

<entry>
  <name><![CDATA[corba/<bad-context>]]></name>
  <classdef>
    <modifiers></modifiers>
    <superclasses>
      <![CDATA[corba/<system-exception>]]>
    </superclasses>
    <keywords>
      <keyword>
        <name>completed:</name>
        <type><![CDATA[corba/<completion-status>]]></type>
        <description></description>
      </keyword>
      <keyword>
        <name>minor:</name>
        <type><![CDATA[corba/<unsigned-long>]]></type>
        <description></description>
      </keyword>
    </keywords>
  </classdef>
  <description></description>
  <seealso></seealso>
</entry>

<entry>
  <name><![CDATA[corba/<bad-inv-order>]]></name>
  <classdef>
    <modifiers></modifiers>
    <superclasses>
      <![CDATA[corba/<system-exception>]]>
    </superclasses>
    <keywords>
      <keyword>
        <name>completed:</name>
        <type><![CDATA[corba/<completion-status>]]></type>
        <description></description>
      </keyword>
      <keyword>
        <name>minor:</name>
        <type><![CDATA[corba/<unsigned-long>]]></type>
        <description></description>
      </keyword>
    </keywords>
  </classdef>
  <description></description>
  <seealso></seealso>
</entry>

<entry>
  <name><![CDATA[corba/<bad-operation>]]></name>
  <classdef>
    <modifiers></modifiers>
    <superclasses>
      <![CDATA[corba/<system-exception>]]>
    </superclasses>
    <keywords>
      <keyword>
        <name>completed:</name>
        <type><![CDATA[corba/<completion-status>]]></type>
        <description></description>
      </keyword>
      <keyword>
        <name>minor:</name>
        <type><![CDATA[corba/<unsigned-long>]]></type>
        <description></description>
      </keyword>
    </keywords>
  </classdef>
  <description></description>
  <seealso></seealso>
</entry>

<entry>
  <name><![CDATA[corba/<bad-param>]]></name>
  <classdef>
    <modifiers></modifiers>
    <superclasses>
      <![CDATA[corba/<system-exception>]]>
    </superclasses>
    <keywords>
      <keyword>
        <name>completed:</name>
        <type><![CDATA[corba/<completion-status>]]></type>
        <description></description>
      </keyword>
      <keyword>
        <name>minor:</name>
        <type><![CDATA[corba/<unsigned-long>]]></type>
        <description></description>
      </keyword>
    </keywords>
  </classdef>
  <description></description>
  <seealso></seealso>
</entry>

<entry>
  <name><![CDATA[corba/<bad-typecode>]]></name>
  <classdef>
    <modifiers></modifiers>
    <superclasses>
      <![CDATA[corba/<system-exception>]]>
    </superclasses>
    <keywords>
      <keyword>
        <name>completed:</name>
        <type><![CDATA[corba/<completion-status>]]></type>
        <description></description>
      </keyword>
      <keyword>
        <name>minor:</name>
        <type><![CDATA[corba/<unsigned-long>]]></type>
        <description></description>
      </keyword>
    </keywords>
  </classdef>
  <description></description>
  <seealso></seealso>
</entry>

<entry>
  <name><![CDATA[corba/<boolean>]]></name>
  <constantdef>
    <type><![CDATA[<object>]]></type>
    <value><![CDATA[#f]]></value>
  </constantdef>
  <description></description>
  <seealso></seealso>
</entry>

<entry>
  <name><![CDATA[corba/<char>]]></name>
  <constantdef>
    <type><![CDATA[<object>]]></type>
    <value><![CDATA[#f]]></value>
  </constantdef>
  <description></description>
  <seealso></seealso>
</entry>

<entry>
  <name><![CDATA[corba/<comm-failure>]]></name>
  <classdef>
    <modifiers></modifiers>
    <superclasses>
      <![CDATA[corba/<system-exception>]]>
    </superclasses>
    <keywords>
      <keyword>
        <name>completed:</name>
        <type><![CDATA[corba/<completion-status>]]></type>
        <description></description>
      </keyword>
      <keyword>
        <name>minor:</name>
        <type><![CDATA[corba/<unsigned-long>]]></type>
        <description></description>
      </keyword>
    </keywords>
  </classdef>
  <description></description>
  <seealso></seealso>
</entry>

<entry>
  <name><![CDATA[corba/<completion-status>]]></name>
  <constantdef>
    <type><![CDATA[<object>]]></type>
    <value><![CDATA[#f]]></value>
  </constantdef>
  <description></description>
  <seealso></seealso>
</entry>

<entry>
  <name><![CDATA[corba/<constantdef>]]></name>
  <classdef>
    <modifiers>Open Abstract </modifiers>
    <superclasses>
      <![CDATA[corba/<contained>]]>
    </superclasses>
    <keywords>
    </keywords>
  </classdef>
  <description>
<p>A <![CDATA[corba/<constantdef>]]> object defines a named constant.</p>

<p>The corba/constantdef/type attribute specifies the
<![CDATA[corba/<typecode>]]> describing the type of the constant. The
type of a constant must be one of the simple types
(<![CDATA[corba/<long>]]>, <![CDATA[corba/<short>]]>,
<![CDATA[corba/<float>]]>, <![CDATA[corba/<char>]]>,
<![CDATA[corba/<string>]]>, <![CDATA[corba/<octet>]]>, etc.).</p>

<p>The corba/constantdef/type-def attribute identifies the definition
of the type of the constant.</p>

<p>The value attribute contains the value of the constant, not the computation of the value
(e.g., the fact that it was defined as "1+2").</p>

<p>Setting the corba/constantdef/type-def attribute also updates the
corba/constantdef/type attribute.</p>

<p>When setting the corba/constantdef/value attribute, the
<![CDATA[corba/<typecode>]]> of the supplied any must be equal to the
<![CDATA[corba/<typecode>]]> of the corba/constantdef/type
attribute.</p>.
  </description>
  <seealso></seealso>
</entry>

<entry>
  <name><![CDATA[corba/<constantdescription>]]></name>
  <classdef>
    <modifiers></modifiers>
    <superclasses>
      <![CDATA[corba/<struct>]]>
    </superclasses>
    <keywords>
      <keyword>
        <name>defined-in:</name>
        <type><![CDATA[corba/<repositoryid>]]></type>
        <description></description>
      </keyword>
      <keyword>
        <name>id:</name>
        <type><![CDATA[corba/<repositoryid>]]></type>
        <description></description>
      </keyword>
      <keyword>
        <name>name:</name>
        <type><![CDATA[corba/<identifier>]]></type>
        <description></description>
      </keyword>
      <keyword>
        <name>type:</name>
        <type><![CDATA[corba/<typecode>]]></type>
        <description></description>
      </keyword>
      <keyword>
        <name>value:</name>
        <type><![CDATA[corba/<any>]]></type>
        <description></description>
      </keyword>
      <keyword>
        <name>version:</name>
        <type><![CDATA[corba/<versionspec>]]></type>
        <description></description>
      </keyword>
    </keywords>
  </classdef>
  <description>
<p>The inherited corba/contained/describe operation for a
<![CDATA[corba/<constantdef>]]> object returns a
<![CDATA[corba/<constantdescription>]]>.</p>
  </description>
  <seealso></seealso>
</entry>

<entry>
  <name><![CDATA[corba/<contained>]]></name>
  <classdef>
    <modifiers>Open Abstract </modifiers>
    <superclasses>
      <![CDATA[corba/<irobject>]]>
    </superclasses>
    <keywords>
    </keywords>
  </classdef>
  <description>
<p>The <![CDATA[corba/<contained>]]> interface is inherited by all
Interface Repository interfaces that are contained by other IR
objects. All objects within the Interface Repository, except the root
object (<![CDATA[corba/<repository>]]>) and definitions of anonymous
(<![CDATA[corba/<ArrayDef>]]>, <![CDATA[corba/<stringdef>]]>, and
<![CDATA[corba/<sequencedef>]]>), and primitive types are contained by
other objects.</p>
  </description>
  <seealso></seealso>
</entry>

<entry>
  <name><![CDATA[corba/<containedseq>]]></name>
  <constantdef>
    <type><![CDATA[<object>]]></type>
    <value><![CDATA[#f]]></value>
  </constantdef>
  <description></description>
  <seealso></seealso>
</entry>

<entry>
  <name><![CDATA[corba/<container>]]></name>
  <classdef>
    <modifiers>Open Abstract </modifiers>
    <superclasses>
      <![CDATA[corba/<irobject>]]>
    </superclasses>
    <keywords>
    </keywords>
  </classdef>
  <description>
<p>The <![CDATA[corba/<container>]]> interface is used to form a
containment hierarchy in the Interface Repository. A
<![CDATA[corba/<container>]]> can contain any number of objects
derived from the <![CDATA[corba/<contained>]]> interface. All
<![CDATA[corba/<container>]]>s, except for
<![CDATA[corba/<repository>]]>, are also derived from
<![CDATA[corba/<contained>]]>.</p>

<p>The <![CDATA[corba/<container>]]> interface provides operations to
create <![CDATA[corba/<moduledef>]]>s, <![CDATA[corba/<constantdef>s,
<![CDATA[corba/<structdef>]]>s, <![CDATA[corba/<uniondef>]]>s,
<![CDATA[corba/<enumdef>]]>s, <![CDATA[corba/<aliasdef>]]>s, and
<![CDATA[corba/<interfacedef>]]>s as contained objects. The defined-in
attribute of a definition created with any of these operations is
initialized to identify the <![CDATA[corba/<container>]]> on which the
operation is invoked, and the containing-repository attribute is
initialized to its <![CDATA[corba/<repository>]]>.</p>
  </description>
  <seealso></seealso>
</entry>

<entry>
  <name><![CDATA[corba/<context>]]></name>
  <classdef>
    <modifiers>Open Abstract </modifiers>
    <superclasses>
      <![CDATA[corba/<pseudo-object>:corba-protocol:corba-protocol]]>
    </superclasses>
    <keywords>
    </keywords>
  </classdef>
  <description>
<p>A context object contains a list of properties, each consisting of a name and a string
value associated with that name. By convention, context properties represent
information about the client, environment, or circumstances of a request that are
inconvenient to pass as parameters.</p>

<p>Context properties can represent a portion of a client's or application's environment
that is meant to be propagated to (and made implicitly part of) a server's environment
(for example, a window identifier, or user preference information). Once a server has
been invoked (i.e., after the properties are propagated), the server may query its context
object for these properties.</p>

<p>In addition, the context associated with a particular operation is passed as a
distinguished parameter, allowing particular ORBs to take advantage of context
properties, for example, using the values of certain properties to influence method
binding behavior, server location, or activation policy.</p>

<p>An operation definition may contain a clause specifying those context properties that
may be of interest to a particular operation. These context properties comprise the
minimum set of properties that will be propagated to the server's environment
(although a specified property may have no value associated with it). The ORB may
choose to pass more properties than those specified in the operation declaration.
When a context clause is present on an operation declaration, an additional argument is
added to the stub and skeleton interfaces. When an operation invocation occurs via
either the stub or Dynamic Invocation interface, the ORB causes the properties which
were named in the operation definition in OMG IDL and which are present in the
client's context object, to be provided in the context object parameter to the invoked
method.</p>

<p>Context property names (which are strings) typically have the form of an OMG IDL
identifier, or a series of OMG IDL identifiers separated by periods. A context property
name pattern is either a property name, or a property name followed by a single "*."
Property name patterns are used in the context clause of an operation definition and in
the get_values operation (described below).</p>

<p>A property name pattern without a trailing "*" is said to match only itself. A property
name pattern of the form <![CDATA["<name>*"]]> matches any property name that starts with
<![CDATA[<name>]]> and continues with zero or more additional characters.</p>

<p>Context objects may be created and deleted, and individual context properties may be
set and retrieved. There will often be context objects associated with particular
processes, users, or other things depending on the operating system, and there may be
conventions for having them supplied to calls by default.</p>

<p>It may be possible to keep context information in persistent implementations of context
objects, while other implementations may be transient. The creation and modification
of persistent context objects, however, is not addressed in this specification.</p>

<p>Context objects may be "chained" together to achieve a particular defaulting behavior.
Properties defined in a particular context object effectively override those properties in
the next higher level. This searching behavior may be restricted by specifying the
appropriate scope and the "restrict scope" option on the Context get_values call.</p>

<p>Context objects may be named for purposes of specifying a starting search scope.</p>

<p>When performing operations on a context object, properties are represented as named
value lists. Each property value corresponds to a named value item in the list.
A property name is represented by a string of characters (see "Identifiers" on page 3-6
for the valid set of characters that are allowed). Property names are stored preserving
their case, however names cannot differ simply by their case.</p>
  </description>
  <seealso></seealso>
</entry>

<entry>
  <name><![CDATA[corba/<contextidentifier>]]></name>
  <constantdef>
    <type><![CDATA[<object>]]></type>
    <value><![CDATA[#f]]></value>
  </constantdef>
  <description></description>
  <seealso></seealso>
</entry>

<entry>
  <name><![CDATA[corba/<contextidseq>]]></name>
  <constantdef>
    <type><![CDATA[<object>]]></type>
    <value><![CDATA[#f]]></value>
  </constantdef>
  <description></description>
  <seealso></seealso>
</entry>

<entry>
  <name><![CDATA[corba/<current>]]></name>
  <classdef>
    <modifiers>Open Abstract </modifiers>
    <superclasses>
      <![CDATA[corba/<object>]]>
    </superclasses>
    <keywords>
    </keywords>
  </classdef>
  <description>
<p>ORB and CORBA services may wish to provide access to information
(context) associated with the thread of execution in which they are
running. This information is accessed in a structured manner using
interfaces derived from the <![CDATA[corba/<current>]]> interface defined in the
CORBA module.</p>

<p>Each ORB or CORBA service that needs its own context derives an
interface from the CORBA module's Current. Users of the service can
obtain an instance of the appropriate Current interface by invoking
corba/orb/resolve-initial-references.  For example the Security
service obtains the Current relevant to it by invoking
corba/orb/resolve-initial-references("SecurityCurrent")</p>

<p>A CORBA service does not have to use this method of keeping context
but may choose to do so.</p>

<p>Operations on interfaces derived from Current access state
associated with the thread in which they are invoked, not state
associated with the thread from which the Current was obtained. This
prevents one thread from manipulating another thread's state, and
avoids the need to obtain and narrow a new Current in each method's
thread context.</p>

<p>Current objects must not be exported to other processes, or
externalized with corba/orb/object-to-string. If any attempt is made
to do so, the offending operation will raise a MARSHAL system
exception. Currents are per-process singleton objects, so no destroy
operation is needed.</p>
  </description>
  <seealso></seealso>
</entry>

<entry>
  <name><![CDATA[corba/<data-conversion>]]></name>
  <classdef>
    <modifiers></modifiers>
    <superclasses>
      <![CDATA[corba/<system-exception>]]>
    </superclasses>
    <keywords>
      <keyword>
        <name>completed:</name>
        <type><![CDATA[corba/<completion-status>]]></type>
        <description></description>
      </keyword>
      <keyword>
        <name>minor:</name>
        <type><![CDATA[corba/<unsigned-long>]]></type>
        <description></description>
      </keyword>
    </keywords>
  </classdef>
  <description></description>
  <seealso></seealso>
</entry>

<entry>
  <name><![CDATA[corba/<definitionkind>]]></name>
  <constantdef>
    <type><![CDATA[<object>]]></type>
    <value><![CDATA[#f]]></value>
  </constantdef>
  <description>
<p>A DefinitionKind identifies the type of an IR object.</p>
  </description>
  <seealso></seealso>
</entry>

<entry>
  <name><![CDATA[corba/<double>]]></name>
  <constantdef>
    <type><![CDATA[<object>]]></type>
    <value><![CDATA[#f]]></value>
  </constantdef>
  <description></description>
  <seealso></seealso>
</entry>

<entry>
  <name><![CDATA[corba/<encapsulation>]]></name>
  <constantdef>
    <type><![CDATA[<object>]]></type>
    <value><![CDATA[#f]]></value>
  </constantdef>
  <description></description>
  <seealso></seealso>
</entry>

<entry>
  <name><![CDATA[corba/<enumdef>]]></name>
  <classdef>
    <modifiers>Open Abstract </modifiers>
    <superclasses>
      <![CDATA[corba/<typedefdef>]]>
    </superclasses>
    <keywords>
    </keywords>
  </classdef>
  <description>
<p>An <![CDATA[corba/<enumdef>]]> represents an OMG IDL enumeration
definition.</p>

<p>The corba/enumdef/members attribute contains a distinct name for each possible value of the
enumeration.</p>

<p>The inherited corba/idltype/type attribute is a #"tk-enum"
<![CDATA[corba/<typecode>]]> describing the enumeration.</p>

<p>Setting the corba/enumdef/members attribute also updates the
corba/idltype/type attribute.</p>
  </description>
  <seealso></seealso>
</entry>

<entry>
  <name><![CDATA[corba/<enummemberseq>]]></name>
  <constantdef>
    <type><![CDATA[<object>]]></type>
    <value><![CDATA[#f]]></value>
  </constantdef>
  <description></description>
  <seealso></seealso>
</entry>

<entry>
  <name><![CDATA[corba/<excdescriptionseq>]]></name>
  <constantdef>
    <type><![CDATA[<object>]]></type>
    <value><![CDATA[#f]]></value>
  </constantdef>
  <description></description>
  <seealso></seealso>
</entry>

<entry>
  <name><![CDATA[corba/<exception-type>]]></name>
  <constantdef>
    <type><![CDATA[<object>]]></type>
    <value><![CDATA[#f]]></value>
  </constantdef>
  <description></description>
  <seealso></seealso>
</entry>

<entry>
  <name><![CDATA[corba/<exception>]]></name>
  <classdef>
    <modifiers>Open Abstract </modifiers>
    <superclasses>
      <![CDATA[corba/<struct>]]>
      <![CDATA[<error>]]>
    </superclasses>
    <keywords>
    </keywords>
  </classdef>
  <description></description>
  <seealso></seealso>
</entry>

<entry>
  <name><![CDATA[corba/<exceptiondef>]]></name>
  <classdef>
    <modifiers>Open Abstract </modifiers>
    <superclasses>
      <![CDATA[corba/<contained>]]>
      <![CDATA[corba/<container>]]>
    </superclasses>
    <keywords>
    </keywords>
  </classdef>
  <description>
<p>An <![CDATA[corba/<exceptiondef>]]> represents an exception
definition. It can contain structs, unions, and enums.</p>

<p>The corba/exceptiondef/type attribute is a #"tk-except"
<![CDATA[corba/<typecode>]]> describing the exception.</p>

<p>The corba/exceptiondef/members attribute describes any exception members.</p>

<p>The corba/contained/describe operation for a <![CDATA[corba/<exceptiondef>]]> object returns an
<![CDATA[corba/<exceptiondescription>]]>.</p>

<p>Setting the corba/exceptiondef/members attribute also updates the
corba/exceptiondef/type attribute. When setting the
corba/exceptiondef/members attribute, the corba/structmember/type
member of the <![CDATA[corba/<structmember>]]> structure is ignored
and should be set to #"tc-void".</p>
  </description>
  <seealso></seealso>
</entry>

<entry>
  <name><![CDATA[corba/<exceptiondefseq>]]></name>
  <constantdef>
    <type><![CDATA[<object>]]></type>
    <value><![CDATA[#f]]></value>
  </constantdef>
  <description></description>
  <seealso></seealso>
</entry>

<entry>
  <name><![CDATA[corba/<exceptiondescription>]]></name>
  <classdef>
    <modifiers></modifiers>
    <superclasses>
      <![CDATA[corba/<struct>]]>
    </superclasses>
    <keywords>
      <keyword>
        <name>defined-in:</name>
        <type><![CDATA[corba/<repositoryid>]]></type>
        <description></description>
      </keyword>
      <keyword>
        <name>id:</name>
        <type><![CDATA[corba/<repositoryid>]]></type>
        <description></description>
      </keyword>
      <keyword>
        <name>name:</name>
        <type><![CDATA[corba/<identifier>]]></type>
        <description></description>
      </keyword>
      <keyword>
        <name>type:</name>
        <type><![CDATA[corba/<typecode>]]></type>
        <description></description>
      </keyword>
      <keyword>
        <name>version:</name>
        <type><![CDATA[corba/<versionspec>]]></type>
        <description></description>
      </keyword>
    </keywords>
  </classdef>
  <description></description>
  <seealso></seealso>
</entry>

<entry>
  <name><![CDATA[corba/<fixeddef>]]></name>
  <classdef>
    <modifiers>Open Abstract </modifiers>
    <superclasses>
      <![CDATA[corba/<idltype>]]>
    </superclasses>
    <keywords>
    </keywords>
  </classdef>
  <description>
<p>A <![CDATA[corba/<fixeddef>]]> represents an IDL fixed point type.</p>

<p>The corba/fixeddef/digits attribute specifies the total number of
decimal digits in the number, and must be from 1 to 31, inclusive. The
corba/fixeddef/scale attribute specifies the position of the decimal
point.</p>

<p>The inherited corba/idltype/type attribute is a #"tk-fixed"
<![CDATA[corba/<typecode>]]>, which describes a fixed-point decimal
number.</p>
  </description>
  <seealso></seealso>
</entry>

<entry>
  <name><![CDATA[corba/<flags>]]></name>
  <constantdef>
    <type><![CDATA[<object>]]></type>
    <value><![CDATA[#f]]></value>
  </constantdef>
  <description></description>
  <seealso></seealso>
</entry>

<entry>
  <name><![CDATA[corba/<float>]]></name>
  <constantdef>
    <type><![CDATA[<object>]]></type>
    <value><![CDATA[#f]]></value>
  </constantdef>
  <description></description>
  <seealso></seealso>
</entry>

<entry>
  <name><![CDATA[corba/<free-mem>]]></name>
  <classdef>
    <modifiers></modifiers>
    <superclasses>
      <![CDATA[corba/<system-exception>]]>
    </superclasses>
    <keywords>
      <keyword>
        <name>completed:</name>
        <type><![CDATA[corba/<completion-status>]]></type>
        <description></description>
      </keyword>
      <keyword>
        <name>minor:</name>
        <type><![CDATA[corba/<unsigned-long>]]></type>
        <description></description>
      </keyword>
    </keywords>
  </classdef>
  <description></description>
  <seealso></seealso>
</entry>

<entry>
  <name><![CDATA[corba/<identifier>]]></name>
  <constantdef>
    <type><![CDATA[<object>]]></type>
    <value><![CDATA[#f]]></value>
  </constantdef>
  <description>
<p>Identifiers are the simple names that identify modules, interfaces,
constants, typedefs, exceptions, attributes, and operations. They
correspond exactly to OMG IDL identifiers. An Identifier is not
necessarily unique within an entire Interface Repository; it is unique
only within a particular <![CDATA[corba/<repository>]]>,
<![CDATA[corba/<moduledef>]]>, <![CDATA[corba/<interfacedef>]]>, or
<![CDATA[corba/<operationdef>]]>.</p>
  </description>
  <seealso></seealso>
</entry>

<entry>
  <name><![CDATA[corba/<idltype>]]></name>
  <classdef>
    <modifiers>Open Abstract </modifiers>
    <superclasses>
      <![CDATA[corba/<irobject>]]>
    </superclasses>
    <keywords>
    </keywords>
  </classdef>
  <description>
<p>The <![CDATA[corba/<idltype>]]> interface is an abstract interface
inherited by all IR objects that represent OMG IDL types. It provides
access to the <![CDATA[corba/<typecode>]]> describing the type, and is
used in defining other interfaces wherever definitions of IDL types
must be referenced.</p>
  </description>
  <seealso></seealso>
</entry>

<entry>
  <name><![CDATA[corba/<imp-limit>]]></name>
  <classdef>
    <modifiers></modifiers>
    <superclasses>
      <![CDATA[corba/<system-exception>]]>
    </superclasses>
    <keywords>
      <keyword>
        <name>completed:</name>
        <type><![CDATA[corba/<completion-status>]]></type>
        <description></description>
      </keyword>
      <keyword>
        <name>minor:</name>
        <type><![CDATA[corba/<unsigned-long>]]></type>
        <description></description>
      </keyword>
    </keywords>
  </classdef>
  <description></description>
  <seealso></seealso>
</entry>

<entry>
  <name><![CDATA[corba/<initialize>]]></name>
  <classdef>
    <modifiers></modifiers>
    <superclasses>
      <![CDATA[corba/<system-exception>]]>
    </superclasses>
    <keywords>
      <keyword>
        <name>completed:</name>
        <type><![CDATA[corba/<completion-status>]]></type>
        <description></description>
      </keyword>
      <keyword>
        <name>minor:</name>
        <type><![CDATA[corba/<unsigned-long>]]></type>
        <description></description>
      </keyword>
    </keywords>
  </classdef>
  <description></description>
  <seealso></seealso>
</entry>

<entry>
  <name><![CDATA[corba/<interfacedef>]]></name>
  <classdef>
    <modifiers>Open Abstract </modifiers>
    <superclasses>
      <![CDATA[corba/<container>]]>
      <![CDATA[corba/<contained>]]>
      <![CDATA[corba/<idltype>]]>
    </superclasses>
    <keywords>
    </keywords>
  </classdef>
  <description>
<p>An <![CDATA[corba/<interfacedef>]]> object represents an interface definition. It can contain constants,
typedefs, exceptions, operations, and attributes.</p>


<p>The inherited corba/contained/describe operation for an <![CDATA[corba/<interfacedef>]]> returns an
<![CDATA[corba/<interfacedescription>]]>.</p>

<p>The inherited corba/contained/contents operation returns the list of constants, typedefs, and
exceptions defined in this <![CDATA[corba/<interfacedef>]]> and the list of attributes and operations either
defined or inherited in this <![CDATA[corba/<interfacedef>]]>. If the exclude-inherited parameter is set to
#t, only attributes and operations defined within this interface are returned. If the
exclude-inherited parameter is set to #f, all attributes and operations are
returned.</p>
  </description>
  <seealso></seealso>
</entry>

<entry>
  <name><![CDATA[corba/<interfacedefseq>]]></name>
  <constantdef>
    <type><![CDATA[<object>]]></type>
    <value><![CDATA[#f]]></value>
  </constantdef>
  <description></description>
  <seealso></seealso>
</entry>

<entry>
  <name><![CDATA[corba/<interfacedescription>]]></name>
  <classdef>
    <modifiers></modifiers>
    <superclasses>
      <![CDATA[corba/<struct>]]>
    </superclasses>
    <keywords>
      <keyword>
        <name>base-interfaces:</name>
        <type><![CDATA[corba/<repositoryidseq>]]></type>
        <description></description>
      </keyword>
      <keyword>
        <name>defined-in:</name>
        <type><![CDATA[corba/<repositoryid>]]></type>
        <description></description>
      </keyword>
      <keyword>
        <name>id:</name>
        <type><![CDATA[corba/<repositoryid>]]></type>
        <description></description>
      </keyword>
      <keyword>
        <name>name:</name>
        <type><![CDATA[corba/<identifier>]]></type>
        <description></description>
      </keyword>
      <keyword>
        <name>version:</name>
        <type><![CDATA[corba/<versionspec>]]></type>
        <description></description>
      </keyword>
    </keywords>
  </classdef>
  <description></description>
  <seealso></seealso>
</entry>

<entry>
  <name><![CDATA[corba/<internal>]]></name>
  <classdef>
    <modifiers></modifiers>
    <superclasses>
      <![CDATA[corba/<system-exception>]]>
    </superclasses>
    <keywords>
      <keyword>
        <name>completed:</name>
        <type><![CDATA[corba/<completion-status>]]></type>
        <description></description>
      </keyword>
      <keyword>
        <name>minor:</name>
        <type><![CDATA[corba/<unsigned-long>]]></type>
        <description></description>
      </keyword>
    </keywords>
  </classdef>
  <description></description>
  <seealso></seealso>
</entry>

<entry>
  <name><![CDATA[corba/<intf-repos>]]></name>
  <classdef>
    <modifiers></modifiers>
    <superclasses>
      <![CDATA[corba/<system-exception>]]>
    </superclasses>
    <keywords>
      <keyword>
        <name>completed:</name>
        <type><![CDATA[corba/<completion-status>]]></type>
        <description></description>
      </keyword>
      <keyword>
        <name>minor:</name>
        <type><![CDATA[corba/<unsigned-long>]]></type>
        <description></description>
      </keyword>
    </keywords>
  </classdef>
  <description></description>
  <seealso></seealso>
</entry>

<entry>
  <name><![CDATA[corba/<inv-flag>]]></name>
  <classdef>
    <modifiers></modifiers>
    <superclasses>
      <![CDATA[corba/<system-exception>]]>
    </superclasses>
    <keywords>
      <keyword>
        <name>completed:</name>
        <type><![CDATA[corba/<completion-status>]]></type>
        <description></description>
      </keyword>
      <keyword>
        <name>minor:</name>
        <type><![CDATA[corba/<unsigned-long>]]></type>
        <description></description>
      </keyword>
    </keywords>
  </classdef>
  <description></description>
  <seealso></seealso>
</entry>

<entry>
  <name><![CDATA[corba/<inv-ident>]]></name>
  <classdef>
    <modifiers></modifiers>
    <superclasses>
      <![CDATA[corba/<system-exception>]]>
    </superclasses>
    <keywords>
      <keyword>
        <name>completed:</name>
        <type><![CDATA[corba/<completion-status>]]></type>
        <description></description>
      </keyword>
      <keyword>
        <name>minor:</name>
        <type><![CDATA[corba/<unsigned-long>]]></type>
        <description></description>
      </keyword>
    </keywords>
  </classdef>
  <description></description>
  <seealso></seealso>
</entry>

<entry>
  <name><![CDATA[corba/<inv-objref>]]></name>
  <classdef>
    <modifiers></modifiers>
    <superclasses>
      <![CDATA[corba/<system-exception>]]>
    </superclasses>
    <keywords>
      <keyword>
        <name>completed:</name>
        <type><![CDATA[corba/<completion-status>]]></type>
        <description></description>
      </keyword>
      <keyword>
        <name>minor:</name>
        <type><![CDATA[corba/<unsigned-long>]]></type>
        <description></description>
      </keyword>
    </keywords>
  </classdef>
  <description></description>
  <seealso></seealso>
</entry>

<entry>
  <name><![CDATA[corba/<invalid-transaction>]]></name>
  <classdef>
    <modifiers></modifiers>
    <superclasses>
      <![CDATA[corba/<system-exception>]]>
    </superclasses>
    <keywords>
      <keyword>
        <name>completed:</name>
        <type><![CDATA[corba/<completion-status>]]></type>
        <description></description>
      </keyword>
      <keyword>
        <name>minor:</name>
        <type><![CDATA[corba/<unsigned-long>]]></type>
        <description></description>
      </keyword>
    </keywords>
  </classdef>
  <description></description>
  <seealso></seealso>
</entry>

<entry>
  <name><![CDATA[corba/<irobject>]]></name>
  <classdef>
    <modifiers>Open Abstract </modifiers>
    <superclasses>
      <![CDATA[<object>]]>
    </superclasses>
    <keywords>
    </keywords>
  </classdef>
  <description>
<p>The IRObject interface represents the most generic interface from which all other
Interface Repository interfaces are derived, even the Repository itself.</p>
  </description>
  <seealso></seealso>
</entry>

<entry>
  <name><![CDATA[corba/<long>]]></name>
  <constantdef>
    <type><![CDATA[<object>]]></type>
    <value><![CDATA[#f]]></value>
  </constantdef>
  <description></description>
  <seealso></seealso>
</entry>

<entry>
  <name><![CDATA[corba/<marshal>]]></name>
  <classdef>
    <modifiers></modifiers>
    <superclasses>
      <![CDATA[corba/<system-exception>]]>
    </superclasses>
    <keywords>
      <keyword>
        <name>completed:</name>
        <type><![CDATA[corba/<completion-status>]]></type>
        <description></description>
      </keyword>
      <keyword>
        <name>minor:</name>
        <type><![CDATA[corba/<unsigned-long>]]></type>
        <description></description>
      </keyword>
    </keywords>
  </classdef>
  <description></description>
  <seealso></seealso>
</entry>

<entry>
  <name><![CDATA[corba/<moduledef>]]></name>
  <classdef>
    <modifiers>Open Abstract </modifiers>
    <superclasses>
      <![CDATA[corba/<container>]]>
      <![CDATA[corba/<contained>]]>
    </superclasses>
    <keywords>
    </keywords>
  </classdef>
  <description>
<p>A <![CDATA[corba/<moduledef>]]> can contain constants, typedefs,
exceptions, interfaces, and other module objects.</p>
  </description>
  <seealso></seealso>
</entry>

<entry>
  <name><![CDATA[corba/<moduledescription>]]></name>
  <classdef>
    <modifiers></modifiers>
    <superclasses>
      <![CDATA[corba/<struct>]]>
    </superclasses>
    <keywords>
      <keyword>
        <name>defined-in:</name>
        <type><![CDATA[corba/<repositoryid>]]></type>
        <description></description>
      </keyword>
      <keyword>
        <name>id:</name>
        <type><![CDATA[corba/<repositoryid>]]></type>
        <description></description>
      </keyword>
      <keyword>
        <name>name:</name>
        <type><![CDATA[corba/<identifier>]]></type>
        <description></description>
      </keyword>
      <keyword>
        <name>version:</name>
        <type><![CDATA[corba/<versionspec>]]></type>
        <description></description>
      </keyword>
    </keywords>
  </classdef>
  <description>
<p>The inherited corba/contained/describe operation for a
<![CDATA[corba/<moduledef>]]> object returns a
<![CDATA[corba/<moduledescription>]]>.</p>
  </description>
  <seealso></seealso>
</entry>

<entry>
  <name><![CDATA[corba/<namedvalue>]]></name>
  <classdef>
    <modifiers></modifiers>
    <superclasses>
      <![CDATA[corba/<struct>]]>
    </superclasses>
    <keywords>
      <keyword>
        <name>arg-modes:</name>
        <type><![CDATA[corba/<flags>]]></type>
        <description></description>
      </keyword>
      <keyword>
        <name>argument:</name>
        <type><![CDATA[corba/<any>]]></type>
        <description></description>
      </keyword>
      <keyword>
        <name>len:</name>
        <type><![CDATA[corba/<long>]]></type>
        <description></description>
      </keyword>
      <keyword>
        <name>name:</name>
        <type><![CDATA[corba/<identifier>]]></type>
        <description></description>
      </keyword>
    </keywords>
  </classdef>
  <description>
<p>The type <![CDATA[corba/<namedvalue>]]> is a well-known data type
in OMG IDL. It can be used either as a parameter type directly or as a
mechanism for describing arguments to a request.  The type
<![CDATA[corba/<nvlist>]]> is a pseudo-object useful for constructing
parameter lists.</p>

<p>The <![CDATA[corba/<namedvalue>]]> and <![CDATA[corba/<nvlist>]]>
structures are used in the request operations to describe arguments
and return values. They are also used in the context object routines
to pass lists of property names and values.</p>

<p>A named value includes an argument name, argument value (as an
any), and a set of argument mode flags. When named value structures
are used to describe arguments to a request, the names are the
argument identifiers specified in the OMG IDL definition for a
specific operation.</p>

<p>The arg_modes field is defined as a bitmask (long) and may contain the following
flag values:</p>

<p><![CDATA[corba/$arg-in]]> The associated value is an input only argument.</p>
<p><![CDATA[corba/$arg-out]]> The associated value is an output only argument.</p>
<p><![CDATA[corba/$arg-inout]]> The associated value is an in/out argument.</p>

<p>These flag values identify the parameter passing mode for
arguments. Additional flag values have specific meanings for request
and list routines, and are documented with their associated
routines.</p>

<p>All other bits are reserved. The high-order 16 bits are reserved
for implementation-specific flags.
  </description>
  <seealso>
    <see>corba/namedvalue/name</see>
    <see>corba/namedvalue/name-setter</see>
    <see>corba/namedvalue/argument</see>
    <see>corba/namedvalue/argument-setter</see>
    <see>corba/namedvalue/arg-modes</see>
    <see>corba/namedvalue/arg-modes-setter</see>
  </seealso>
</entry>

<entry>
  <name><![CDATA[corba/<no-implement>]]></name>
  <classdef>
    <modifiers></modifiers>
    <superclasses>
      <![CDATA[corba/<system-exception>]]>
    </superclasses>
    <keywords>
      <keyword>
        <name>completed:</name>
        <type><![CDATA[corba/<completion-status>]]></type>
        <description></description>
      </keyword>
      <keyword>
        <name>minor:</name>
        <type><![CDATA[corba/<unsigned-long>]]></type>
        <description></description>
      </keyword>
    </keywords>
  </classdef>
  <description></description>
  <seealso></seealso>
</entry>

<entry>
  <name><![CDATA[corba/<no-memory>]]></name>
  <classdef>
    <modifiers></modifiers>
    <superclasses>
      <![CDATA[corba/<system-exception>]]>
    </superclasses>
    <keywords>
      <keyword>
        <name>completed:</name>
        <type><![CDATA[corba/<completion-status>]]></type>
        <description></description>
      </keyword>
      <keyword>
        <name>minor:</name>
        <type><![CDATA[corba/<unsigned-long>]]></type>
        <description></description>
      </keyword>
    </keywords>
  </classdef>
  <description></description>
  <seealso></seealso>
</entry>

<entry>
  <name><![CDATA[corba/<no-permission>]]></name>
  <classdef>
    <modifiers></modifiers>
    <superclasses>
      <![CDATA[corba/<system-exception>]]>
    </superclasses>
    <keywords>
      <keyword>
        <name>completed:</name>
        <type><![CDATA[corba/<completion-status>]]></type>
        <description></description>
      </keyword>
      <keyword>
        <name>minor:</name>
        <type><![CDATA[corba/<unsigned-long>]]></type>
        <description></description>
      </keyword>
    </keywords>
  </classdef>
  <description></description>
  <seealso></seealso>
</entry>

<entry>
  <name><![CDATA[corba/<no-resources>]]></name>
  <classdef>
    <modifiers></modifiers>
    <superclasses>
      <![CDATA[corba/<system-exception>]]>
    </superclasses>
    <keywords>
      <keyword>
        <name>completed:</name>
        <type><![CDATA[corba/<completion-status>]]></type>
        <description></description>
      </keyword>
      <keyword>
        <name>minor:</name>
        <type><![CDATA[corba/<unsigned-long>]]></type>
        <description></description>
      </keyword>
    </keywords>
  </classdef>
  <description></description>
  <seealso></seealso>
</entry>

<entry>
  <name><![CDATA[corba/<no-response>]]></name>
  <classdef>
    <modifiers></modifiers>
    <superclasses>
      <![CDATA[corba/<system-exception>]]>
    </superclasses>
    <keywords>
      <keyword>
        <name>completed:</name>
        <type><![CDATA[corba/<completion-status>]]></type>
        <description></description>
      </keyword>
      <keyword>
        <name>minor:</name>
        <type><![CDATA[corba/<unsigned-long>]]></type>
        <description></description>
      </keyword>
    </keywords>
  </classdef>
  <description></description>
  <seealso></seealso>
</entry>

<entry>
  <name><![CDATA[corba/<null>]]></name>
  <constantdef>
    <type><![CDATA[<object>]]></type>
    <value><![CDATA[#f]]></value>
  </constantdef>
  <description></description>
  <seealso></seealso>
</entry>

<entry>
  <name><![CDATA[corba/<nvlist>]]></name>
  <constantdef>
    <type><![CDATA[<object>]]></type>
    <value><![CDATA[#f]]></value>
  </constantdef>
  <description></description>
  <seealso>
    <see><![CDATA[corba/<namedvalue>]]></see>
  </seealso>
</entry>

<entry>
  <name><![CDATA[corba/<obj-adapter>]]></name>
  <classdef>
    <modifiers></modifiers>
    <superclasses>
      <![CDATA[corba/<system-exception>]]>
    </superclasses>
    <keywords>
      <keyword>
        <name>completed:</name>
        <type><![CDATA[corba/<completion-status>]]></type>
        <description></description>
      </keyword>
      <keyword>
        <name>minor:</name>
        <type><![CDATA[corba/<unsigned-long>]]></type>
        <description></description>
      </keyword>
    </keywords>
  </classdef>
  <description></description>
  <seealso></seealso>
</entry>

<entry>
  <name><![CDATA[corba/<object-not-exist>]]></name>
  <classdef>
    <modifiers></modifiers>
    <superclasses>
      <![CDATA[corba/<system-exception>]]>
    </superclasses>
    <keywords>
      <keyword>
        <name>completed:</name>
        <type><![CDATA[corba/<completion-status>]]></type>
        <description></description>
      </keyword>
      <keyword>
        <name>minor:</name>
        <type><![CDATA[corba/<unsigned-long>]]></type>
        <description></description>
      </keyword>
    </keywords>
  </classdef>
  <description></description>
  <seealso></seealso>
</entry>

<entry>
  <name><![CDATA[corba/<object>]]></name>
  <classdef>
    <modifiers>Open Abstract </modifiers>
    <superclasses>
      <![CDATA[<object>]]>
    </superclasses>
    <keywords>
    </keywords>
  </classdef>
  <description>
<p>A class representing all object references. In general object
references will be returned by <emphasis>factory</emphasis>
operations. These are just operations that return object
references. It is not meaningful for application code to call make on
<![CDATA[corba/<object>]]> or one of its subclasses.</p>
  </description>
  <seealso></seealso>
</entry>

<entry>
  <name><![CDATA[corba/<octet>]]></name>
  <constantdef>
    <type><![CDATA[<object>]]></type>
    <value><![CDATA[#f]]></value>
  </constantdef>
  <description></description>
  <seealso></seealso>
</entry>

<entry>
  <name><![CDATA[corba/<opdescriptionseq>]]></name>
  <constantdef>
    <type><![CDATA[<object>]]></type>
    <value><![CDATA[#f]]></value>
  </constantdef>
  <description></description>
  <seealso></seealso>
</entry>

<entry>
  <name><![CDATA[corba/<operationdef>]]></name>
  <classdef>
    <modifiers>Open Abstract </modifiers>
    <superclasses>
      <![CDATA[corba/<contained>]]>
    </superclasses>
    <keywords>
    </keywords>
  </classdef>
  <description>
<p>An <![CDATA[corba/<operationdef>]]> represents the information
needed to define an operation of an interface.</p>

<p>The result corba/operationdef/attribute is a
<![CDATA[corba/<typecode>]]> describing the type of the value returned
by the operation. The corba/operationdef/result-def attribute
identifies the definition of the returned type.</p>

<p>The corba/operationdef/params attribute describes the parameters of
the operation. It is a sequence of
<![CDATA[corba/<parameterdescription>]]> structures. The order of the
<![CDATA[corba/<parameterdescription>]]>s in the sequence is
significant. The corba/parameterdescription/name member of each
structure provides the parameter name. The
corba/parameterdescription/type member is a
<![CDATA[corba/<typecode>]]> describing the type of the parameter. The
corba/parameterdescription/type-def member identifies the definition
of the type of the parameter. The corba/parameterdescription/mode
member indicates whether the parameter is an in, out, or inout
parameter.</p>

<p>The corba/operationdef/mode is either oneway (i.e., no output is returned) or normal.</p>

<p>The corba/operationdef/contexts attribute specifies the list of context identifiers that apply to the
operation.</p>

<p>The corba/operationdef/exceptions attribute specifies the list of exception types that can be raised by the
operation.</p>

<p>The inherited corba/contained/describe operation for an <![CDATA[corba/<operationdef>]]> object returns an
<![CDATA[corba/<operationdescription>]]>.</p>

<p>The inherited corba/contained/describe-contents operation provides a complete description of this
operation, including a description of each parameter defined for this operation.</p>

<p>Setting the corba/operationdef/result-def attribute also updates the corba/operationdef/result attribute.</p>

<p>The corba/operationdef/mode attribute can only be set to #"op-oneway" if the result is #"tc-void" and all
elements of params have a mode of #"param-in".</p>
  </description>
  <seealso></seealso>
</entry>

<entry>
  <name><![CDATA[corba/<operationdescription>]]></name>
  <classdef>
    <modifiers></modifiers>
    <superclasses>
      <![CDATA[corba/<struct>]]>
    </superclasses>
    <keywords>
      <keyword>
        <name>contexts:</name>
        <type><![CDATA[corba/<contextidseq>]]></type>
        <description></description>
      </keyword>
      <keyword>
        <name>defined-in:</name>
        <type><![CDATA[corba/<repositoryid>]]></type>
        <description></description>
      </keyword>
      <keyword>
        <name>exceptions:</name>
        <type><![CDATA[corba/<excdescriptionseq>]]></type>
        <description></description>
      </keyword>
      <keyword>
        <name>id:</name>
        <type><![CDATA[corba/<repositoryid>]]></type>
        <description></description>
      </keyword>
      <keyword>
        <name>mode:</name>
        <type><![CDATA[corba/<operationmode>]]></type>
        <description></description>
      </keyword>
      <keyword>
        <name>name:</name>
        <type><![CDATA[corba/<identifier>]]></type>
        <description></description>
      </keyword>
      <keyword>
        <name>parameters:</name>
        <type><![CDATA[corba/<pardescriptionseq>]]></type>
        <description></description>
      </keyword>
      <keyword>
        <name>result:</name>
        <type><![CDATA[corba/<typecode>]]></type>
        <description></description>
      </keyword>
      <keyword>
        <name>version:</name>
        <type><![CDATA[corba/<versionspec>]]></type>
        <description></description>
      </keyword>
    </keywords>
  </classdef>
  <description></description>
  <seealso></seealso>
</entry>

<entry>
  <name><![CDATA[corba/<operationmode>]]></name>
  <constantdef>
    <type><![CDATA[<object>]]></type>
    <value><![CDATA[#f]]></value>
  </constantdef>
  <description></description>
  <seealso></seealso>
</entry>

<entry>
  <name><![CDATA[corba/<orb>]]></name>
  <classdef>
    <modifiers>Open Abstract </modifiers>
    <superclasses>
      <![CDATA[corba/<pseudo-object>:corba-protocol:corba-protocol]]>
    </superclasses>
    <keywords>
    </keywords>
  </classdef>
  <description>
<p>A class representing the Dylan ORB. See corba/orb-init.</p>
  </description>
  <seealso></seealso>
</entry>

<entry>
  <name><![CDATA[corba/<orbid>]]></name>
  <constantdef>
    <type><![CDATA[<object>]]></type>
    <value><![CDATA[#f]]></value>
  </constantdef>
  <description>
<p>See corba/orb-init.</p>
  </description>
  <seealso></seealso>
</entry>

<entry>
  <name><![CDATA[corba/<parameterdescription>]]></name>
  <classdef>
    <modifiers></modifiers>
    <superclasses>
      <![CDATA[corba/<struct>]]>
    </superclasses>
    <keywords>
      <keyword>
        <name>mode:</name>
        <type><![CDATA[corba/<parametermode>]]></type>
        <description></description>
      </keyword>
      <keyword>
        <name>name:</name>
        <type><![CDATA[corba/<identifier>]]></type>
        <description></description>
      </keyword>
      <keyword>
        <name>type:</name>
        <type><![CDATA[corba/<typecode>]]></type>
        <description></description>
      </keyword>
      <keyword>
        <name>type-def:</name>
        <type><![CDATA[corba/<idltype>]]></type>
        <description></description>
      </keyword>
    </keywords>
  </classdef>
  <description></description>
  <seealso></seealso>
</entry>

<entry>
  <name><![CDATA[corba/<parametermode>]]></name>
  <constantdef>
    <type><![CDATA[<object>]]></type>
    <value><![CDATA[#f]]></value>
  </constantdef>
  <description></description>
  <seealso></seealso>
</entry>

<entry>
  <name><![CDATA[corba/<pardescriptionseq>]]></name>
  <constantdef>
    <type><![CDATA[<object>]]></type>
    <value><![CDATA[#f]]></value>
  </constantdef>
  <description></description>
  <seealso></seealso>
</entry>

<entry>
  <name><![CDATA[corba/<persist-store>]]></name>
  <classdef>
    <modifiers></modifiers>
    <superclasses>
      <![CDATA[corba/<system-exception>]]>
    </superclasses>
    <keywords>
      <keyword>
        <name>completed:</name>
        <type><![CDATA[corba/<completion-status>]]></type>
        <description></description>
      </keyword>
      <keyword>
        <name>minor:</name>
        <type><![CDATA[corba/<unsigned-long>]]></type>
        <description></description>
      </keyword>
    </keywords>
  </classdef>
  <description></description>
  <seealso></seealso>
</entry>

<entry>
  <name><![CDATA[corba/<primitivedef>]]></name>
  <classdef>
    <modifiers>Open Abstract </modifiers>
    <superclasses>
      <![CDATA[corba/<idltype>]]>
    </superclasses>
    <keywords>
    </keywords>
  </classdef>
  <description>
<p>A corba/<primitivedef> represents one of the OMG IDL primitive
types. As primitive types are unnamed, this interface is not derived
from <![CDATA[corba/<typedefdef>]]> or
<![CDATA[corba/<contained>]]>.</p>
  </description>
  <seealso></seealso>
</entry>

<entry>
  <name><![CDATA[corba/<primitivekind>]]></name>
  <constantdef>
    <type><![CDATA[<object>]]></type>
    <value><![CDATA[#f]]></value>
  </constantdef>
  <description>
<p>The corba/primitivedef/kind attribute indicates which primitive
type the <![CDATA[corba/<primitivedef>]]> represents. There are no
<![CDATA[corba/<primitivedefs>]]> with kind #"pk-null". A
<![CDATA[corba/<primitivedef>]]> with kind #"pk-string" represents an
unbounded string. A <![CDATA[corba/<primitivedef>]]> with kind
#"pk-objref" represents the IDL type <![CDATA[corba/<object>]]>.</p>

<p>The inherited corba/idltype/type attribute describes the primitive
type.</p>

<p>All <![CDATA[corba/<primitivedef>]]>s are owned by the
Repository. References to them are obtained using
corba/repository/get-primitive.</p>
  </description>
  <seealso></seealso>
</entry>

<entry>
  <name><![CDATA[corba/<repository>]]></name>
  <classdef>
    <modifiers>Open Abstract </modifiers>
    <superclasses>
      <![CDATA[corba/<container>]]>
    </superclasses>
    <keywords>
    </keywords>
  </classdef>
  <description>
<p><![CDATA[corba/<repository>]]> is an interface that provides global
access to the Interface Repository. The <![CDATA[corba/<repository>]]>
object can contain constants, typedefs, exceptions, interfaces, and
modules. As it inherits from <![CDATA[corba/<container>]]>, it can be
used to look up any definition (whether globally defined or defined
within a module or interface) either by name or by id.</p>

<p>There may be more than one Interface Repository in a particular ORB
environment (although some ORBs might require that definitions they
use be registered with a particular repository). Each ORB environment
will provide a means for obtaining object references to the
Repositories available within the environment.</p>

<p>The three <![CDATA[corba/repository/create-<type>]]> operations
create new objects defining anonymous types. As these interfaces are
not derived from <![CDATA[corba/<contained>]]>, it is the caller's
responsibility to invoke destroy on the returned object if it is not
successfully used in creating a definition that is derived from
<![CDATA[corba/<contained>]]>. Each anonymous type definition must be
used in defining exactly one other object.</p>
  </description>
  <seealso></seealso>
</entry>

<entry>
  <name><![CDATA[corba/<repositoryid>]]></name>
  <constantdef>
    <type><![CDATA[<object>]]></type>
    <value><![CDATA[#f]]></value>
  </constantdef>
  <description>
<p>A RepositoryId is an identifier used to uniquely and globally identify a module,
interface, constant, typedef, exception, attribute or operation. As RepositoryIds are
defined as strings, they can be manipulated (e.g., copied and compared) using a
language binding's string manipulation routines.</p>
  </description>
  <seealso></seealso>
</entry>

<entry>
  <name><![CDATA[corba/<repositoryidseq>]]></name>
  <constantdef>
    <type><![CDATA[<object>]]></type>
    <value><![CDATA[#f]]></value>
  </constantdef>
  <description></description>
  <seealso></seealso>
</entry>

<entry>
  <name><![CDATA[corba/<request>]]></name>
  <classdef>
    <modifiers>Open Abstract </modifiers>
    <superclasses>
      <![CDATA[corba/<pseudo-object>:corba-protocol:corba-protocol]]>
    </superclasses>
    <keywords>
    </keywords>
  </classdef>
  <description>
<p>The request operations are defined in terms of the Request pseudo-object. The Request
routines use the NVList definition defined in the preceding section.
  </description>
  <seealso></seealso>
</entry>

<entry>
  <name><![CDATA[corba/<scopedname>]]></name>
  <constantdef>
    <type><![CDATA[<object>]]></type>
    <value><![CDATA[#f]]></value>
  </constantdef>
  <description>
<p>A ScopedName is a name made up of one or more Identifiers separated by the
characters "::". They correspond to OMG IDL scoped names.
8-10 CORBA V2.2 February 1998</p>

<p>An absolute ScopedName is one that begins with "::" and unambiguously identifies
a definition in a Repository. An absolute ScopedName in a Repository
corresponds to a global name in an OMG IDL file. A relative ScopedName does not
begin with "::" and must be resolved relative to some context.</p>
  </description>
  <seealso></seealso>
</entry>

<entry>
  <name><![CDATA[corba/<sequence>]]></name>
  <constantdef>
    <type><![CDATA[<object>]]></type>
    <value><![CDATA[#f]]></value>
  </constantdef>
  <description></description>
  <seealso></seealso>
</entry>

<entry>
  <name><![CDATA[corba/<sequencedef>]]></name>
  <classdef>
    <modifiers>Open Abstract </modifiers>
    <superclasses>
      <![CDATA[corba/<idltype>]]>
    </superclasses>
    <keywords>
    </keywords>
  </classdef>
  <description>
<p>A <![CDATA[corba/<sequencedef>]]> represents an IDL sequence type. As sequence types are anonymous,
this interface is not derived from <![CDATA[corba/<typedefdef>]]> or <![CDATA[corba/<contained>]]>.

<p>The corba/sequencedef/bound attribute specifies the maximum number of elements in the sequence. A
bound of zero indicates an unbounded sequence.</p>

<p>The type of the elements is described by corba/sequencedef/element-type and identified by
corba/sequencedef/element-type-def.</p>

<p>The inherited corba/idltype/type attribute is a #"tk-sequence" <![CDATA[corba/<typecode>]]> describing the sequence.</p>

<p>Setting the corba/sequencedef/element-type-def attribute also updates the corba/sequencedef/element-type attribute.</p>

<p>Setting the corba/sequencedef/bound or
corba/sequencedef/element-type-def attribute also updates the
corba/idltype/type attribute.</p>
  </description>
  <seealso></seealso>
</entry>

<entry>
  <name><![CDATA[corba/<serverrequest>]]></name>
  <classdef>
    <modifiers>Open Abstract </modifiers>
    <superclasses>
      <![CDATA[corba/<pseudo-object>:corba-protocol:corba-protocol]]>
    </superclasses>
    <keywords>
    </keywords>
  </classdef>
  <description>
<p>The <![CDATA[corba/<serverrequest>]]> pseudo-object captures the
explicit state of a request for the DSI, analogous to the Request
pseudo-object in the DII. The object adapter dispatches an invocation
to a DSI-based object implementation by passing an instance of
<![CDATA[corba/<serverrequest>]]> to the DIR associated with the object
implementation.</p>

<p>The identity and/or reference of the target object of the
invocation is provided by the object adapter and its language
mapping. In the context of a bridge, the target object will typically
be a proxy for an object in some other ORB.</p>

<p>The Dynamic Skeleton Interface (DSI) allows dynamic handling of
object invocations.  That is, rather than being accessed through a
skeleton that is specific to a particular operation, an object's
implementation is reached through an interface that provides access to
the operation name and parameters in a manner analogous to the client
side's Dynamic Invocation Interface. Purely static knowledge of those
parameters may be used, or dynamic knowledge (perhaps determined
through an Interface Repository) may be also used, to determine the
parameters.</p>

<p>The Dynamic Skeleton Interface is a way to deliver requests from an
ORB to an object implementation that does not have compile-time
knowledge of the type of the object it is implementing. This contrasts
with the type-specific, OMG IDL-based skeletons, but serves the same
architectural role.</p>

<p>DSI is the server side's analogue to the client side's Dynamic
Invocation Interface (DII). Just as the implementation of an object
cannot distinguish whether its client is using type-specific stubs or
the DII, the client who invokes an object cannot determine whether the
implementation is using a type-specific skeleton or the DSI to connect
the implementation to the ORB.</p>

<p>Requests are delivered through skeletons, including dynamic ones
DSI, like DII, has many applications beyond interoperability
solutions. Uses include interactive software development tools based
on interpreters, debuggers and monitors that want to dynamically
interpose on objects, and support for dynamically-typed languages such
as LISP.</p>

<p>The basic idea of the DSI is to implement all requests on a
particular object by having the ORB invoke the same upcall routine, a
Dynamic Implementation Routine (DIR).  Since in any language binding
all DIRs have the same signature, a single DIR could be used as the
implementation for many objects, with different interfaces.</p>

<p>The DIR is passed all the explicit operation parameters, and an
indication of the object that was invoked and the operation that was
requested. The information is encoded in the request parameters. The
DIR can use the invoked object, its object adapter, and the Interface
Repository to learn more about the particular object and
invocation. It can access and operate on individual parameters. It can
make the same use of an object adapter as other object
implementations.</p>

<p>This chapter describes the elements of the DSI that are common to
all object adapters that provide a DSI. See "Single Servant, many
objects and types, using DSI" on page 9-57 for the specification of
the DSI for the Portable Object Adapter.</p>
  </description>
  <seealso></seealso>
</entry>

<entry>
  <name><![CDATA[corba/<short>]]></name>
  <constantdef>
    <type><![CDATA[<object>]]></type>
    <value><![CDATA[#f]]></value>
  </constantdef>
  <description></description>
  <seealso></seealso>
</entry>

<entry>
  <name><![CDATA[corba/<string>]]></name>
  <constantdef>
    <type><![CDATA[<object>]]></type>
    <value><![CDATA[#f]]></value>
  </constantdef>
  <description></description>
  <seealso></seealso>
</entry>

<entry>
  <name><![CDATA[corba/<stringdef>]]></name>
  <classdef>
    <modifiers>Open Abstract </modifiers>
    <superclasses>
      <![CDATA[corba/<idltype>]]>
    </superclasses>
    <keywords>
    </keywords>
  </classdef>
  <description>
<p>A <![CDATA[corba/<stringdef>]]> represents an IDL bounded string
type. The unbounded string type is represented as a
<![CDATA[corba/<primitivedef>]]>. As string types are anonymous, this
interface is not derived from <![CDATApcorba/<typedefdef>]]> or
<![CDATA[corba/<contained>]]>.</p>

<p>The corba/stringdef/bound attribute specifies the maximum number of
characters in the string and must not be zero.</p>

<p>The inherited corba/idltype/type attribute is a #"tk_string"
<![CDATA[corba/<typecode>]]> describing the string.</p>
  </description>
  <seealso></seealso>
</entry>

<entry>
  <name><![CDATA[corba/<struct>]]></name>
  <classdef>
    <modifiers>Open Abstract </modifiers>
    <superclasses>
      <![CDATA[<object>]]>
    </superclasses>
    <keywords>
    </keywords>
  </classdef>
  <description></description>
  <seealso></seealso>
</entry>

<entry>
  <name><![CDATA[corba/<structdef>]]></name>
  <classdef>
    <modifiers>Open Abstract </modifiers>
    <superclasses>
      <![CDATA[corba/<typedefdef>]]>
      <![CDATA[corba/<container>]]>
    </superclasses>
    <keywords>
    </keywords>
  </classdef>
  <description>
<p>A StructDef represents an OMG IDL structure definition. It can
contain structs, unions, and enums.</p>

<p>The corba/structdef/members attribute contains a description of
each structure member. It can contain structs, unions, and enums.</p>

<p>The inherited corba/idltype/type attribute is a
<![CDATA[corba/<typecode>]]> describing the structure.</p>

<p>Setting the corba/structdef/members attribute also updates the
corba/idltype/type attribute. When setting the corba/structdef/members
attribute, the corba/structmember/type member of the
<![CDATA[corba/<structmember>]]> structure is ignored and should be
set to #"tc-void".</p>
  </description>
  <seealso></seealso>
</entry>

<entry>
  <name><![CDATA[corba/<structmember>]]></name>
  <classdef>
    <modifiers></modifiers>
    <superclasses>
      <![CDATA[corba/<struct>]]>
    </superclasses>
    <keywords>
      <keyword>
        <name>name:</name>
        <type><![CDATA[corba/<identifier>]]></type>
        <description></description>
      </keyword>
      <keyword>
        <name>type:</name>
        <type><![CDATA[corba/<typecode>]]></type>
        <description></description>
      </keyword>
      <keyword>
        <name>type-def:</name>
        <type><![CDATA[corba/<idltype>]]></type>
        <description></description>
      </keyword>
    </keywords>
  </classdef>
  <description></description>
  <seealso></seealso>
</entry>

<entry>
  <name><![CDATA[corba/<structmemberseq>]]></name>
  <constantdef>
    <type><![CDATA[<object>]]></type>
    <value><![CDATA[#f]]></value>
  </constantdef>
  <description></description>
  <seealso></seealso>
</entry>

<entry>
  <name><![CDATA[corba/<system-exception>]]></name>
  <classdef>
    <modifiers>Open Abstract </modifiers>
    <superclasses>
      <![CDATA[corba/<exception>]]>
    </superclasses>
    <keywords>
    </keywords>
  </classdef>
  <description></description>
  <seealso></seealso>
</entry>

<entry>
  <name><![CDATA[corba/<tckind>]]></name>
  <constantdef>
    <type><![CDATA[<object>]]></type>
    <value><![CDATA[#f]]></value>
  </constantdef>
  <description></description>
  <seealso></seealso>
</entry>

<entry>
  <name><![CDATA[corba/<transaction-required>]]></name>
  <classdef>
    <modifiers></modifiers>
    <superclasses>
      <![CDATA[corba/<system-exception>]]>
    </superclasses>
    <keywords>
      <keyword>
        <name>completed:</name>
        <type><![CDATA[corba/<completion-status>]]></type>
        <description></description>
      </keyword>
      <keyword>
        <name>minor:</name>
        <type><![CDATA[corba/<unsigned-long>]]></type>
        <description></description>
      </keyword>
    </keywords>
  </classdef>
  <description></description>
  <seealso></seealso>
</entry>

<entry>
  <name><![CDATA[corba/<transaction-rolledback>]]></name>
  <classdef>
    <modifiers></modifiers>
    <superclasses>
      <![CDATA[corba/<system-exception>]]>
    </superclasses>
    <keywords>
      <keyword>
        <name>completed:</name>
        <type><![CDATA[corba/<completion-status>]]></type>
        <description></description>
      </keyword>
      <keyword>
        <name>minor:</name>
        <type><![CDATA[corba/<unsigned-long>]]></type>
        <description></description>
      </keyword>
    </keywords>
  </classdef>
  <description></description>
  <seealso></seealso>
</entry>

<entry>
  <name><![CDATA[corba/<transient>]]></name>
  <classdef>
    <modifiers></modifiers>
    <superclasses>
      <![CDATA[corba/<system-exception>]]>
    </superclasses>
    <keywords>
      <keyword>
        <name>completed:</name>
        <type><![CDATA[corba/<completion-status>]]></type>
        <description></description>
      </keyword>
      <keyword>
        <name>minor:</name>
        <type><![CDATA[corba/<unsigned-long>]]></type>
        <description></description>
      </keyword>
    </keywords>
  </classdef>
  <description></description>
  <seealso></seealso>
</entry>

<entry>
  <name><![CDATA[corba/<typecode>]]></name>
  <classdef>
    <modifiers>Open Abstract </modifiers>
    <superclasses>
      <![CDATA[<object>]]>
    </superclasses>
    <keywords>
    </keywords>
  </classdef>
  <description>
<p><![CDATA[corba/<typecode>]]>s are values that represent invocation argument types and attribute types.
They can be obtained from the Interface Repository or from IDL compilers.</p>

<p><![CDATA[corba/<typecode>]]>s have a number of uses. They are used
in the dynamic invocation interface to indicate the types of the
actual arguments. They are used by an Interface Repository to
represent the type specifications that are part of many OMG IDL
declarations.</p>

<p>Finally, they are crucial to the semantics of the any type.</p>

<p><![CDATA[corba/<typecode>]]>s are themselves values that can be passed as invocation arguments. To
allow different ORB implementations to hide extra information in TypeCodes, the
representation of <![CDATA[corba/<typecode>]]> is opaque (like object references). However, we
will assume that the representation is such that <![CDATA[corba/<typecode>]]> "literals" can be placed in
source files.</p>

<p>Abstractly, <![CDATA[corba/<typecode>]]> consist of a "kind" field, and a set of parameters appropriate
for that kind. For example, the <![CDATA[corba/<typecode>]]> describing OMG IDL type long has kind
#"tk-long" and no parameters. The <![CDATA[corba/<typecode>]]> describing OMG IDL type
"sequence<boolean,10>" has kind #"tk-sequence" and two parameters: 10 and
<![CDATA[corba/<boolean>]]>.</p>

<p>With its operations, any <![CDATA[corba/<typecode>]]> can be decomposed into its constituent
parts. The <![CDATA[corba/typecode/<badkind>]]> exception is raised if an operation is not appropriate for the
TypeCode kind it invoked.</p>

<p>An array <![CDATA[corba/<typecode>]]> only describes a single
dimension of an OMG IDL array. Multi-dimensional arrays are
represented by nesting <![CDATA[corba/<typecode>]]>s, one per
dimension. The outermost #"tk-array" <![CDATA[corba/<typecode>]]>
describes the leftmost array index of the array as defined in IDL. Its
content-type describes the next index. The innermost nested
#"tk-array" <![CDATA[corba/<typecode>]]> describes the rightmost index
and the array element type.</p>



<p>The #"tk-objref" <![CDATA[corba/<typecode>]]> represents an interface type. Its parameter is the
RepositoryId of that interface.</p>

<p>A structure with N members results in a #"tk-struct"
<![CDATA[corba/<typecode>]]> with 2N+1 parameters: first, the simple
name of the struct; the rest are member names alternating with the
corresponding member <![CDATA[corba/<typecode>]]>. Member names are
represented as strings.</p>

<p>A union with N members results in a #"tk-union" <![CDATA[corba/<typecode>]]> with 3N+2 parameters: the
simple name of the union, the discriminator <![CDATA[corba/<typecode>]]> followed by a label value,
member name, and member TypeCode for each of the N members. The label values
are all values of the data type designated by the discriminator <![CDATA[corba/<typecode>]]>, with one
exception. The default member (if present) is marked with a label value consisting of
the 0 octet. Recall that the operation "parameter(tc,i)" returns an any, and that anys
themselves carry a <![CDATA[corba/<typecode>]]> that can distinguish an octet from any of the legal
switch types.</p>

<p>The #"tk-enum" <![CDATA[corba/<typecode>]]> has the simple name of
the enum followed by the enumerator names as parameters. Enumerator
names are represented as strings.</p>

<p>The #"tk-string" <![CDATA[corba/<typecode>]]> has one parameter: an
integer giving the maximum string length. A maximum of 0 denotes an
unbounded string.</p>

<p>The #"tk-wstring" <![CDATA[corba/<typecode>]]> has one parameter,
an integer specifying the maximum length. A length of zero indicates
an unbounded wide string.</p>

<p>The #"tk-sequence" <![CDATA[corba/<typecode>]]> has 2 parameters: a
<![CDATA[corba/<typecode>]]> for the sequence elements, and an integer
giving the maximum sequence. Again, 0 denotes unbounded.

<p>The #"tk-array" <![CDATA[corba/<typecode>]]> has 2 parameters: a
TypeCode for the array elements, and an integer giving the array
length. Arrays are never unbounded.</p>

<p>The #"tk-alias" <![CDATA[corba/<typecode>]]> has 2 parameters: the
name of the alias followed by the TypeCode of the type being
aliased.</p>

<p>The #"tk-except" <![CDATA[corba/<typecode>]]> has the same format
as the #"tk-struct" <![CDATA[corba/<typecode>]]>, except that
exceptions with no members are allowed.</p>
  </description>
  <seealso></seealso>
</entry>

<entry>
  <name><![CDATA[corba/<typedefdef>]]></name>
  <classdef>
    <modifiers>Open Abstract </modifiers>
    <superclasses>
      <![CDATA[corba/<contained>]]>
      <![CDATA[corba/<idltype>]]>
    </superclasses>
    <keywords>
    </keywords>
  </classdef>
  <description></description>
  <seealso></seealso>
</entry>

<entry>
  <name><![CDATA[corba/<typedescription>]]></name>
  <classdef>
    <modifiers></modifiers>
    <superclasses>
      <![CDATA[corba/<struct>]]>
    </superclasses>
    <keywords>
      <keyword>
        <name>defined-in:</name>
        <type><![CDATA[corba/<repositoryid>]]></type>
        <description></description>
      </keyword>
      <keyword>
        <name>id:</name>
        <type><![CDATA[corba/<repositoryid>]]></type>
        <description></description>
      </keyword>
      <keyword>
        <name>name:</name>
        <type><![CDATA[corba/<identifier>]]></type>
        <description></description>
      </keyword>
      <keyword>
        <name>type:</name>
        <type><![CDATA[corba/<typecode>]]></type>
        <description></description>
      </keyword>
      <keyword>
        <name>version:</name>
        <type><![CDATA[corba/<versionspec>]]></type>
        <description></description>
      </keyword>
    </keywords>
  </classdef>
  <description>
<p>The inherited corba/contained/describe operation for a
<![CDATA[corba/<typedefdef>]]> object returns a
<![CDATA[corba/<typedescription>]]>.</p>
  </description>
  <seealso></seealso>
</entry>

<entry>
  <name><![CDATA[corba/<union>]]></name>
  <classdef>
    <modifiers>Open Abstract </modifiers>
    <superclasses>
      <![CDATA[<object>]]>
    </superclasses>
    <keywords>
      <keyword>
        <name>discriminator:</name>
        <type><![CDATA[<object>]]></type>
        <description></description>
      </keyword>
      <keyword>
        <name>value:</name>
        <type><![CDATA[<object>]]></type>
        <description></description>
      </keyword>
    </keywords>
  </classdef>
  <description></description>
  <seealso></seealso>
</entry>

<entry>
  <name><![CDATA[corba/<uniondef>]]></name>
  <classdef>
    <modifiers>Open Abstract </modifiers>
    <superclasses>
      <![CDATA[corba/<typedefdef>]]>
      <![CDATA[corba/<container>]]>
    </superclasses>
    <keywords>
    </keywords>
  </classdef>
  <description>
<p>A <![CDATA[corba/<uniondef>]]> represents an OMG IDL union
definition. It can contain structs, unions, and enums.</p>

<p>The corba/uniondef/discriminator-type and
corba/uniondef/discriminator-type-def attributes describe and identify
the union's discriminator type.</p>

<p>The corba/uniondef/members attribute contains a description of each
union member. The corba/unionmember/label of each
<![CDATA[corba/<unionmember>]]> is a distinct value of the
corba/uniondef/discriminator-type.</p>

<p>Adjacent members can have the same name. Members with the same name
must also have the same type. A corba/unionmember/label with
corba/unionmember/type of octet and corba/unionmember/value of 0
indicates the default union member.</p>

<p>The inherited corba/uniondef/type attribute is a #"tk-union"
<![CDATA[corba/<typecode>]]> describing the union.</p>

<p>Setting the corba/uniondef/discriminator-type-def attribute also
updates the corba/uniondef/discriminator-type attribute and setting
the corba/uniondef/discriminator-type-def or corba/uniondef/members
attribute also updates the corba/uniondef/type attribute.</p>

<p>When setting the corba/uniondef/members attribute, the
corba/unionmember/type member of the <![CDATA[corba/<unionmember>]]>
structure is ignored and should be set to #"tc-void".</p>
  </description>
  <seealso></seealso>
</entry>

<entry>
  <name><![CDATA[corba/<unionmember>]]></name>
  <classdef>
    <modifiers></modifiers>
    <superclasses>
      <![CDATA[corba/<struct>]]>
    </superclasses>
    <keywords>
      <keyword>
        <name>label:</name>
        <type><![CDATA[corba/<any>]]></type>
        <description></description>
      </keyword>
      <keyword>
        <name>name:</name>
        <type><![CDATA[corba/<identifier>]]></type>
        <description></description>
      </keyword>
      <keyword>
        <name>type:</name>
        <type><![CDATA[corba/<typecode>]]></type>
        <description></description>
      </keyword>
      <keyword>
        <name>type-def:</name>
        <type><![CDATA[corba/<idltype>]]></type>
        <description></description>
      </keyword>
    </keywords>
  </classdef>
  <description></description>
  <seealso></seealso>
</entry>

<entry>
  <name><![CDATA[corba/<unionmemberseq>]]></name>
  <constantdef>
    <type><![CDATA[<object>]]></type>
    <value><![CDATA[#f]]></value>
  </constantdef>
  <description></description>
  <seealso></seealso>
</entry>

<entry>
  <name><![CDATA[corba/<unknown>]]></name>
  <classdef>
    <modifiers></modifiers>
    <superclasses>
      <![CDATA[corba/<system-exception>]]>
    </superclasses>
    <keywords>
      <keyword>
        <name>completed:</name>
        <type><![CDATA[corba/<completion-status>]]></type>
        <description></description>
      </keyword>
      <keyword>
        <name>minor:</name>
        <type><![CDATA[corba/<unsigned-long>]]></type>
        <description></description>
      </keyword>
    </keywords>
  </classdef>
  <description></description>
  <seealso></seealso>
</entry>

<entry>
  <name><![CDATA[corba/<unsigned-long>]]></name>
  <constantdef>
    <type><![CDATA[<object>]]></type>
    <value><![CDATA[#f]]></value>
  </constantdef>
  <description></description>
  <seealso></seealso>
</entry>

<entry>
  <name><![CDATA[corba/<unsigned-short>]]></name>
  <constantdef>
    <type><![CDATA[<object>]]></type>
    <value><![CDATA[#f]]></value>
  </constantdef>
  <description></description>
  <seealso></seealso>
</entry>

<entry>
  <name><![CDATA[corba/<user-exception>]]></name>
  <classdef>
    <modifiers>Open Abstract </modifiers>
    <superclasses>
      <![CDATA[corba/<exception>]]>
    </superclasses>
    <keywords>
    </keywords>
  </classdef>
  <description></description>
  <seealso></seealso>
</entry>

<entry>
  <name><![CDATA[corba/<versionspec>]]></name>
  <constantdef>
    <type><![CDATA[<object>]]></type>
    <value><![CDATA[#f]]></value>
  </constantdef>
  <description></description>
  <seealso></seealso>
</entry>

<entry>
  <name><![CDATA[corba/<void>]]></name>
  <constantdef>
    <type><![CDATA[<object>]]></type>
    <value><![CDATA[#f]]></value>
  </constantdef>
  <description></description>
  <seealso></seealso>
</entry>

<entry>
  <name><![CDATA[corba/<wstringdef>]]></name>
  <classdef>
    <modifiers>Open Abstract </modifiers>
    <superclasses>
      <![CDATA[corba/<idltype>]]>
    </superclasses>
    <keywords>
    </keywords>
  </classdef>
  <description>
<p>A <![CDATA[corba/<wstringdef>]]> represents an IDL wide string. The
unbounded wide string type is represented as a
<![CDATA[corba/<primitivedef>]]>. As wide string types are anonymous,
this interface is not derived from <![CDATA[corba/<typedefdef>]]> or
<![CDATA[corba/<contained>]]>.</p>

<p>The corba/wstring/bound attribute specifies the maximum number of wide
characters in a wide string, and must not be zero.</p>

<p>The inherited corba/idltype/type attribute is a #"tk-wstring"
<![CDATA[corba/<typecode>]]> describing the wide string.</p>

  </description>
  <seealso></seealso>
</entry>

<entry>
  <name><![CDATA[corba/aliasdef/original-type-def]]></name>
  <functiondef>
    <ins>
      <in>
        <name>object</name>
        <type><![CDATA[corba/<aliasdef>]]></type>
        <description></description>
      </in>
    </ins>
    <outs>
      <out>
        <name>result</name>
        <type><![CDATA[corba/<idltype>]]></type>
        <description></description>
      </out>
    </outs>
  </functiondef>
  <description></description>
  <seealso></seealso>
</entry>

<entry>
  <name><![CDATA[corba/aliasdef/original-type-def-setter]]></name>
  <functiondef>
    <ins>
      <in>
        <name>new-value</name>
        <type><![CDATA[corba/<idltype>]]></type>
        <description></description>
      </in>
      <in>
        <name>object</name>
        <type><![CDATA[corba/<aliasdef>]]></type>
        <description></description>
      </in>
    </ins>
    <outs>
      <out>
        <name>result</name>
        <type><![CDATA[corba/<idltype>]]></type>
        <description></description>
      </out>
    </outs>
  </functiondef>
  <description></description>
  <seealso></seealso>
</entry>

<entry>
  <name><![CDATA[corba/any/type]]></name>
  <functiondef>
    <ins>
      <in>
        <name>object</name>
        <type><![CDATA[<object>]]></type>
        <description></description>
      </in>
    </ins>
    <outs>
      <out>
        <name>results</name>
        <type><![CDATA[<object>]]></type>
        <description></description>
      </out>
    </outs>
  </functiondef>
  <description></description>
  <seealso></seealso>
</entry>

<entry>
  <name><![CDATA[corba/any/type-setter]]></name>
  <functiondef>
    <ins>
      <in>
        <name>new-value</name>
        <type><![CDATA[<object>]]></type>
        <description></description>
      </in>
      <in>
        <name>object</name>
        <type><![CDATA[<object>]]></type>
        <description></description>
      </in>
    </ins>
    <outs>
      <out>
        <name>results</name>
        <type><![CDATA[<object>]]></type>
        <description></description>
      </out>
    </outs>
  </functiondef>
  <description></description>
  <seealso></seealso>
</entry>

<entry>
  <name><![CDATA[corba/any/value]]></name>
  <functiondef>
    <ins>
      <in>
        <name>object</name>
        <type><![CDATA[<object>]]></type>
        <description></description>
      </in>
    </ins>
    <outs>
      <out>
        <name>results</name>
        <type><![CDATA[<object>]]></type>
        <description></description>
      </out>
    </outs>
  </functiondef>
  <description></description>
  <seealso></seealso>
</entry>

<entry>
  <name><![CDATA[corba/any/value-setter]]></name>
  <functiondef>
    <ins>
      <in>
        <name>new-value</name>
        <type><![CDATA[<object>]]></type>
        <description></description>
      </in>
      <in>
        <name>object</name>
        <type><![CDATA[<object>]]></type>
        <description></description>
      </in>
    </ins>
    <outs>
      <out>
        <name>results</name>
        <type><![CDATA[<object>]]></type>
        <description></description>
      </out>
    </outs>
  </functiondef>
  <description></description>
  <seealso></seealso>
</entry>

<entry>
  <name><![CDATA[corba/arraydef/element-type]]></name>
  <functiondef>
    <ins>
      <in>
        <name>object</name>
        <type><![CDATA[corba/<arraydef>]]></type>
        <description></description>
      </in>
    </ins>
    <outs>
      <out>
        <name>result</name>
        <type><![CDATA[corba/<typecode>]]></type>
        <description></description>
      </out>
    </outs>
  </functiondef>
  <description></description>
  <seealso></seealso>
</entry>

<entry>
  <name><![CDATA[corba/arraydef/element-type-def]]></name>
  <functiondef>
    <ins>
      <in>
        <name>object</name>
        <type><![CDATA[corba/<arraydef>]]></type>
        <description></description>
      </in>
    </ins>
    <outs>
      <out>
        <name>result</name>
        <type><![CDATA[corba/<idltype>]]></type>
        <description></description>
      </out>
    </outs>
  </functiondef>
  <description></description>
  <seealso></seealso>
</entry>

<entry>
  <name><![CDATA[corba/arraydef/element-type-def-setter]]></name>
  <functiondef>
    <ins>
      <in>
        <name>new-value</name>
        <type><![CDATA[corba/<idltype>]]></type>
        <description></description>
      </in>
      <in>
        <name>object</name>
        <type><![CDATA[corba/<arraydef>]]></type>
        <description></description>
      </in>
    </ins>
    <outs>
      <out>
        <name>result</name>
        <type><![CDATA[corba/<idltype>]]></type>
        <description></description>
      </out>
    </outs>
  </functiondef>
  <description></description>
  <seealso></seealso>
</entry>

<entry>
  <name><![CDATA[corba/arraydef/length]]></name>
  <functiondef>
    <ins>
      <in>
        <name>object</name>
        <type><![CDATA[corba/<arraydef>]]></type>
        <description></description>
      </in>
    </ins>
    <outs>
      <out>
        <name>result</name>
        <type><![CDATA[corba/<unsigned-long>]]></type>
        <description></description>
      </out>
    </outs>
  </functiondef>
  <description></description>
  <seealso></seealso>
</entry>

<entry>
  <name><![CDATA[corba/arraydef/length-setter]]></name>
  <functiondef>
    <ins>
      <in>
        <name>new-value</name>
        <type><![CDATA[corba/<unsigned-long>]]></type>
        <description></description>
      </in>
      <in>
        <name>object</name>
        <type><![CDATA[corba/<arraydef>]]></type>
        <description></description>
      </in>
    </ins>
    <outs>
      <out>
        <name>result</name>
        <type><![CDATA[corba/<unsigned-long>]]></type>
        <description></description>
      </out>
    </outs>
  </functiondef>
  <description></description>
  <seealso></seealso>
</entry>

<entry>
  <name><![CDATA[corba/attributedef/mode]]></name>
  <functiondef>
    <ins>
      <in>
        <name>object</name>
        <type><![CDATA[corba/<attributedef>]]></type>
        <description></description>
      </in>
    </ins>
    <outs>
      <out>
        <name>result</name>
        <type><![CDATA[corba/<attributemode>]]></type>
        <description></description>
      </out>
    </outs>
  </functiondef>
  <description></description>
  <seealso></seealso>
</entry>

<entry>
  <name><![CDATA[corba/attributedef/mode-setter]]></name>
  <functiondef>
    <ins>
      <in>
        <name>new-value</name>
        <type><![CDATA[corba/<attributemode>]]></type>
        <description></description>
      </in>
      <in>
        <name>object</name>
        <type><![CDATA[corba/<attributedef>]]></type>
        <description></description>
      </in>
    </ins>
    <outs>
      <out>
        <name>result</name>
        <type><![CDATA[corba/<attributemode>]]></type>
        <description></description>
      </out>
    </outs>
  </functiondef>
  <description></description>
  <seealso></seealso>
</entry>

<entry>
  <name><![CDATA[corba/attributedef/type]]></name>
  <functiondef>
    <ins>
      <in>
        <name>object</name>
        <type><![CDATA[corba/<attributedef>]]></type>
        <description></description>
      </in>
    </ins>
    <outs>
      <out>
        <name>result</name>
        <type><![CDATA[corba/<typecode>]]></type>
        <description></description>
      </out>
    </outs>
  </functiondef>
  <description></description>
  <seealso></seealso>
</entry>

<entry>
  <name><![CDATA[corba/attributedef/type-def]]></name>
  <functiondef>
    <ins>
      <in>
        <name>object</name>
        <type><![CDATA[corba/<attributedef>]]></type>
        <description></description>
      </in>
    </ins>
    <outs>
      <out>
        <name>result</name>
        <type><![CDATA[corba/<idltype>]]></type>
        <description></description>
      </out>
    </outs>
  </functiondef>
  <description></description>
  <seealso></seealso>
</entry>

<entry>
  <name><![CDATA[corba/attributedef/type-def-setter]]></name>
  <functiondef>
    <ins>
      <in>
        <name>new-value</name>
        <type><![CDATA[corba/<idltype>]]></type>
        <description></description>
      </in>
      <in>
        <name>object</name>
        <type><![CDATA[corba/<attributedef>]]></type>
        <description></description>
      </in>
    </ins>
    <outs>
      <out>
        <name>result</name>
        <type><![CDATA[corba/<idltype>]]></type>
        <description></description>
      </out>
    </outs>
  </functiondef>
  <description></description>
  <seealso></seealso>
</entry>

<entry>
  <name><![CDATA[corba/attributedescription/defined-in]]></name>
  <functiondef>
    <ins>
      <in>
        <name>object</name>
        <type><![CDATA[<object>]]></type>
        <description></description>
      </in>
    </ins>
    <outs>
      <out>
        <name>results</name>
        <type><![CDATA[<object>]]></type>
        <description></description>
      </out>
    </outs>
  </functiondef>
  <description>
<p><![CDATA[corba/<contained>]]> objects have a
corba/contained/defined-in attribute that identifies the
<![CDATA[corba/<container>]]> within which they are defined. Objects
can be contained either because they are defined within the containing
object (for example, an interface is defined within a module) or
because they are inherited by the containing object (for example, an
operation may be contained by an interface because the interface
inherits the operation from another interface). If an object is
contained through inheritance, the corba/contained/defined-in
attribute identifies the <![CDATA[corba/<interfacedef>]]> from which
the object is inherited.</p>
  </description>
  <seealso></seealso>
</entry>

<entry>
  <name><![CDATA[corba/attributedescription/defined-in-setter]]></name>
  <functiondef>
    <ins>
      <in>
        <name>value</name>
        <type><![CDATA[<object>]]></type>
        <description></description>
      </in>
      <in>
        <name>object</name>
        <type><![CDATA[<object>]]></type>
        <description></description>
      </in>
    </ins>
    <outs>
      <out>
        <name>results</name>
        <type><![CDATA[<object>]]></type>
        <description></description>
      </out>
    </outs>
  </functiondef>
  <description></description>
  <seealso></seealso>
</entry>

<entry>
  <name><![CDATA[corba/attributedescription/id]]></name>
  <functiondef>
    <ins>
      <in>
        <name>object</name>
        <type><![CDATA[<object>]]></type>
        <description></description>
      </in>
    </ins>
    <outs>
      <out>
        <name>results</name>
        <type><![CDATA[<object>]]></type>
        <description></description>
      </out>
    </outs>
  </functiondef>
  <description></description>
  <seealso></seealso>
</entry>

<entry>
  <name><![CDATA[corba/attributedescription/id-setter]]></name>
  <functiondef>
    <ins>
      <in>
        <name>value</name>
        <type><![CDATA[<object>]]></type>
        <description></description>
      </in>
      <in>
        <name>object</name>
        <type><![CDATA[<object>]]></type>
        <description></description>
      </in>
    </ins>
    <outs>
      <out>
        <name>results</name>
        <type><![CDATA[<object>]]></type>
        <description></description>
      </out>
    </outs>
  </functiondef>
  <description>
<p>Setting the corba/contained/id attribute changes the global
identity of this definition. An error is returned if an object with
the specified corba/contained/id attribute already exists within this
object's Repository.</p>
  </description>
  <seealso></seealso>
</entry>

<entry>
  <name><![CDATA[corba/attributedescription/mode]]></name>
  <functiondef>
    <ins>
      <in>
        <name>object</name>
        <type><![CDATA[<object>]]></type>
        <description></description>
      </in>
    </ins>
    <outs>
      <out>
        <name>results</name>
        <type><![CDATA[<object>]]></type>
        <description></description>
      </out>
    </outs>
  </functiondef>
  <description></description>
  <seealso></seealso>
</entry>

<entry>
  <name><![CDATA[corba/attributedescription/mode-setter]]></name>
  <functiondef>
    <ins>
      <in>
        <name>value</name>
        <type><![CDATA[<object>]]></type>
        <description></description>
      </in>
      <in>
        <name>object</name>
        <type><![CDATA[<object>]]></type>
        <description></description>
      </in>
    </ins>
    <outs>
      <out>
        <name>results</name>
        <type><![CDATA[<object>]]></type>
        <description></description>
      </out>
    </outs>
  </functiondef>
  <description></description>
  <seealso></seealso>
</entry>

<entry>
  <name><![CDATA[corba/attributedescription/name]]></name>
  <functiondef>
    <ins>
      <in>
        <name>object</name>
        <type><![CDATA[<object>]]></type>
        <description></description>
      </in>
    </ins>
    <outs>
      <out>
        <name>results</name>
        <type><![CDATA[<object>]]></type>
        <description></description>
      </out>
    </outs>
  </functiondef>
  <description></description>
  <seealso></seealso>
</entry>

<entry>
  <name><![CDATA[corba/attributedescription/name-setter]]></name>
  <functiondef>
    <ins>
      <in>
        <name>value</name>
        <type><![CDATA[<object>]]></type>
        <description></description>
      </in>
      <in>
        <name>object</name>
        <type><![CDATA[<object>]]></type>
        <description></description>
      </in>
    </ins>
    <outs>
      <out>
        <name>results</name>
        <type><![CDATA[<object>]]></type>
        <description></description>
      </out>
    </outs>
  </functiondef>
  <description></description>
  <seealso></seealso>
</entry>

<entry>
  <name><![CDATA[corba/attributedescription/type]]></name>
  <functiondef>
    <ins>
      <in>
        <name>object</name>
        <type><![CDATA[<object>]]></type>
        <description></description>
      </in>
    </ins>
    <outs>
      <out>
        <name>results</name>
        <type><![CDATA[<object>]]></type>
        <description></description>
      </out>
    </outs>
  </functiondef>
  <description></description>
  <seealso></seealso>
</entry>

<entry>
  <name><![CDATA[corba/attributedescription/type-setter]]></name>
  <functiondef>
    <ins>
      <in>
        <name>value</name>
        <type><![CDATA[<object>]]></type>
        <description></description>
      </in>
      <in>
        <name>object</name>
        <type><![CDATA[<object>]]></type>
        <description></description>
      </in>
    </ins>
    <outs>
      <out>
        <name>results</name>
        <type><![CDATA[<object>]]></type>
        <description></description>
      </out>
    </outs>
  </functiondef>
  <description></description>
  <seealso></seealso>
</entry>

<entry>
  <name><![CDATA[corba/attributedescription/version]]></name>
  <functiondef>
    <ins>
      <in>
        <name>object</name>
        <type><![CDATA[<object>]]></type>
        <description></description>
      </in>
    </ins>
    <outs>
      <out>
        <name>results</name>
        <type><![CDATA[<object>]]></type>
        <description></description>
      </out>
    </outs>
  </functiondef>
  <description></description>
  <seealso></seealso>
</entry>

<entry>
  <name><![CDATA[corba/attributedescription/version-setter]]></name>
  <functiondef>
    <ins>
      <in>
        <name>value</name>
        <type><![CDATA[<object>]]></type>
        <description></description>
      </in>
      <in>
        <name>object</name>
        <type><![CDATA[<object>]]></type>
        <description></description>
      </in>
    </ins>
    <outs>
      <out>
        <name>results</name>
        <type><![CDATA[<object>]]></type>
        <description></description>
      </out>
    </outs>
  </functiondef>
  <description></description>
  <seealso></seealso>
</entry>

<entry>
  <name><![CDATA[corba/attributemode/<]]></name>
  <functiondef>
    <ins>
      <in>
        <name>lesser</name>
        <type><![CDATA[corba/<attributemode>]]></type>
        <description></description>
      </in>
      <in>
        <name>greater</name>
        <type><![CDATA[corba/<attributemode>]]></type>
        <description></description>
      </in>
    </ins>
    <outs>
      <out>
        <name>lesser?</name>
        <type><![CDATA[<boolean>]]></type>
        <description></description>
      </out>
    </outs>
  </functiondef>
  <description></description>
  <seealso></seealso>
</entry>

<entry>
  <name><![CDATA[corba/attributemode/>]]></name>
  <functiondef>
    <ins>
      <in>
        <name>greater</name>
        <type><![CDATA[corba/<attributemode>]]></type>
        <description></description>
      </in>
      <in>
        <name>lesser</name>
        <type><![CDATA[corba/<attributemode>]]></type>
        <description></description>
      </in>
    </ins>
    <outs>
      <out>
        <name>greater?</name>
        <type><![CDATA[<boolean>]]></type>
        <description></description>
      </out>
    </outs>
  </functiondef>
  <description></description>
  <seealso></seealso>
</entry>

<entry>
  <name><![CDATA[corba/attributemode/predecessor]]></name>
  <functiondef>
    <ins>
      <in>
        <name>symbol</name>
        <type><![CDATA[corba/<attributemode>]]></type>
        <description></description>
      </in>
    </ins>
    <outs>
      <out>
        <name>pred</name>
        <type><![CDATA[corba/<attributemode>]]></type>
        <description></description>
      </out>
    </outs>
  </functiondef>
  <description></description>
  <seealso></seealso>
</entry>

<entry>
  <name><![CDATA[corba/attributemode/successor]]></name>
  <functiondef>
    <ins>
      <in>
        <name>symbol</name>
        <type><![CDATA[corba/<attributemode>]]></type>
        <description></description>
      </in>
    </ins>
    <outs>
      <out>
        <name>succ</name>
        <type><![CDATA[corba/<attributemode>]]></type>
        <description></description>
      </out>
    </outs>
  </functiondef>
  <description></description>
  <seealso></seealso>
</entry>

<entry>
  <name><![CDATA[corba/bad-context/completed]]></name>
  <functiondef>
    <ins>
      <in>
        <name>object</name>
        <type><![CDATA[<object>]]></type>
        <description></description>
      </in>
    </ins>
    <outs>
      <out>
        <name>results</name>
        <type><![CDATA[<object>]]></type>
        <description></description>
      </out>
    </outs>
  </functiondef>
  <description></description>
  <seealso></seealso>
</entry>

<entry>
  <name><![CDATA[corba/bad-context/completed-setter]]></name>
  <functiondef>
    <ins>
      <in>
        <name>value</name>
        <type><![CDATA[<object>]]></type>
        <description></description>
      </in>
      <in>
        <name>object</name>
        <type><![CDATA[<object>]]></type>
        <description></description>
      </in>
    </ins>
    <outs>
      <out>
        <name>results</name>
        <type><![CDATA[<object>]]></type>
        <description></description>
      </out>
    </outs>
  </functiondef>
  <description></description>
  <seealso></seealso>
</entry>

<entry>
  <name><![CDATA[corba/bad-context/minor]]></name>
  <functiondef>
    <ins>
      <in>
        <name>object</name>
        <type><![CDATA[<object>]]></type>
        <description></description>
      </in>
    </ins>
    <outs>
      <out>
        <name>results</name>
        <type><![CDATA[<object>]]></type>
        <description></description>
      </out>
    </outs>
  </functiondef>
  <description></description>
  <seealso></seealso>
</entry>

<entry>
  <name><![CDATA[corba/bad-context/minor-setter]]></name>
  <functiondef>
    <ins>
      <in>
        <name>value</name>
        <type><![CDATA[<object>]]></type>
        <description></description>
      </in>
      <in>
        <name>object</name>
        <type><![CDATA[<object>]]></type>
        <description></description>
      </in>
    </ins>
    <outs>
      <out>
        <name>results</name>
        <type><![CDATA[<object>]]></type>
        <description></description>
      </out>
    </outs>
  </functiondef>
  <description></description>
  <seealso></seealso>
</entry>

<entry>
  <name><![CDATA[corba/bad-inv-order/completed]]></name>
  <functiondef>
    <ins>
      <in>
        <name>object</name>
        <type><![CDATA[<object>]]></type>
        <description></description>
      </in>
    </ins>
    <outs>
      <out>
        <name>results</name>
        <type><![CDATA[<object>]]></type>
        <description></description>
      </out>
    </outs>
  </functiondef>
  <description></description>
  <seealso></seealso>
</entry>

<entry>
  <name><![CDATA[corba/bad-inv-order/completed-setter]]></name>
  <functiondef>
    <ins>
      <in>
        <name>value</name>
        <type><![CDATA[<object>]]></type>
        <description></description>
      </in>
      <in>
        <name>object</name>
        <type><![CDATA[<object>]]></type>
        <description></description>
      </in>
    </ins>
    <outs>
      <out>
        <name>results</name>
        <type><![CDATA[<object>]]></type>
        <description></description>
      </out>
    </outs>
  </functiondef>
  <description></description>
  <seealso></seealso>
</entry>

<entry>
  <name><![CDATA[corba/bad-inv-order/minor]]></name>
  <functiondef>
    <ins>
      <in>
        <name>object</name>
        <type><![CDATA[<object>]]></type>
        <description></description>
      </in>
    </ins>
    <outs>
      <out>
        <name>results</name>
        <type><![CDATA[<object>]]></type>
        <description></description>
      </out>
    </outs>
  </functiondef>
  <description></description>
  <seealso></seealso>
</entry>

<entry>
  <name><![CDATA[corba/bad-inv-order/minor-setter]]></name>
  <functiondef>
    <ins>
      <in>
        <name>value</name>
        <type><![CDATA[<object>]]></type>
        <description></description>
      </in>
      <in>
        <name>object</name>
        <type><![CDATA[<object>]]></type>
        <description></description>
      </in>
    </ins>
    <outs>
      <out>
        <name>results</name>
        <type><![CDATA[<object>]]></type>
        <description></description>
      </out>
    </outs>
  </functiondef>
  <description></description>
  <seealso></seealso>
</entry>

<entry>
  <name><![CDATA[corba/bad-operation/completed]]></name>
  <functiondef>
    <ins>
      <in>
        <name>object</name>
        <type><![CDATA[<object>]]></type>
        <description></description>
      </in>
    </ins>
    <outs>
      <out>
        <name>results</name>
        <type><![CDATA[<object>]]></type>
        <description></description>
      </out>
    </outs>
  </functiondef>
  <description></description>
  <seealso></seealso>
</entry>

<entry>
  <name><![CDATA[corba/bad-operation/completed-setter]]></name>
  <functiondef>
    <ins>
      <in>
        <name>value</name>
        <type><![CDATA[<object>]]></type>
        <description></description>
      </in>
      <in>
        <name>object</name>
        <type><![CDATA[<object>]]></type>
        <description></description>
      </in>
    </ins>
    <outs>
      <out>
        <name>results</name>
        <type><![CDATA[<object>]]></type>
        <description></description>
      </out>
    </outs>
  </functiondef>
  <description></description>
  <seealso></seealso>
</entry>

<entry>
  <name><![CDATA[corba/bad-operation/minor]]></name>
  <functiondef>
    <ins>
      <in>
        <name>object</name>
        <type><![CDATA[<object>]]></type>
        <description></description>
      </in>
    </ins>
    <outs>
      <out>
        <name>results</name>
        <type><![CDATA[<object>]]></type>
        <description></description>
      </out>
    </outs>
  </functiondef>
  <description></description>
  <seealso></seealso>
</entry>

<entry>
  <name><![CDATA[corba/bad-operation/minor-setter]]></name>
  <functiondef>
    <ins>
      <in>
        <name>value</name>
        <type><![CDATA[<object>]]></type>
        <description></description>
      </in>
      <in>
        <name>object</name>
        <type><![CDATA[<object>]]></type>
        <description></description>
      </in>
    </ins>
    <outs>
      <out>
        <name>results</name>
        <type><![CDATA[<object>]]></type>
        <description></description>
      </out>
    </outs>
  </functiondef>
  <description></description>
  <seealso></seealso>
</entry>

<entry>
  <name><![CDATA[corba/bad-param/completed]]></name>
  <functiondef>
    <ins>
      <in>
        <name>object</name>
        <type><![CDATA[<object>]]></type>
        <description></description>
      </in>
    </ins>
    <outs>
      <out>
        <name>results</name>
        <type><![CDATA[<object>]]></type>
        <description></description>
      </out>
    </outs>
  </functiondef>
  <description></description>
  <seealso></seealso>
</entry>

<entry>
  <name><![CDATA[corba/bad-param/completed-setter]]></name>
  <functiondef>
    <ins>
      <in>
        <name>value</name>
        <type><![CDATA[<object>]]></type>
        <description></description>
      </in>
      <in>
        <name>object</name>
        <type><![CDATA[<object>]]></type>
        <description></description>
      </in>
    </ins>
    <outs>
      <out>
        <name>results</name>
        <type><![CDATA[<object>]]></type>
        <description></description>
      </out>
    </outs>
  </functiondef>
  <description></description>
  <seealso></seealso>
</entry>

<entry>
  <name><![CDATA[corba/bad-param/minor]]></name>
  <functiondef>
    <ins>
      <in>
        <name>object</name>
        <type><![CDATA[<object>]]></type>
        <description></description>
      </in>
    </ins>
    <outs>
      <out>
        <name>results</name>
        <type><![CDATA[<object>]]></type>
        <description></description>
      </out>
    </outs>
  </functiondef>
  <description></description>
  <seealso></seealso>
</entry>

<entry>
  <name><![CDATA[corba/bad-param/minor-setter]]></name>
  <functiondef>
    <ins>
      <in>
        <name>value</name>
        <type><![CDATA[<object>]]></type>
        <description></description>
      </in>
      <in>
        <name>object</name>
        <type><![CDATA[<object>]]></type>
        <description></description>
      </in>
    </ins>
    <outs>
      <out>
        <name>results</name>
        <type><![CDATA[<object>]]></type>
        <description></description>
      </out>
    </outs>
  </functiondef>
  <description></description>
  <seealso></seealso>
</entry>

<entry>
  <name><![CDATA[corba/bad-typecode/completed]]></name>
  <functiondef>
    <ins>
      <in>
        <name>object</name>
        <type><![CDATA[<object>]]></type>
        <description></description>
      </in>
    </ins>
    <outs>
      <out>
        <name>results</name>
        <type><![CDATA[<object>]]></type>
        <description></description>
      </out>
    </outs>
  </functiondef>
  <description></description>
  <seealso></seealso>
</entry>

<entry>
  <name><![CDATA[corba/bad-typecode/completed-setter]]></name>
  <functiondef>
    <ins>
      <in>
        <name>value</name>
        <type><![CDATA[<object>]]></type>
        <description></description>
      </in>
      <in>
        <name>object</name>
        <type><![CDATA[<object>]]></type>
        <description></description>
      </in>
    </ins>
    <outs>
      <out>
        <name>results</name>
        <type><![CDATA[<object>]]></type>
        <description></description>
      </out>
    </outs>
  </functiondef>
  <description></description>
  <seealso></seealso>
</entry>

<entry>
  <name><![CDATA[corba/bad-typecode/minor]]></name>
  <functiondef>
    <ins>
      <in>
        <name>object</name>
        <type><![CDATA[<object>]]></type>
        <description></description>
      </in>
    </ins>
    <outs>
      <out>
        <name>results</name>
        <type><![CDATA[<object>]]></type>
        <description></description>
      </out>
    </outs>
  </functiondef>
  <description></description>
  <seealso></seealso>
</entry>

<entry>
  <name><![CDATA[corba/bad-typecode/minor-setter]]></name>
  <functiondef>
    <ins>
      <in>
        <name>value</name>
        <type><![CDATA[<object>]]></type>
        <description></description>
      </in>
      <in>
        <name>object</name>
        <type><![CDATA[<object>]]></type>
        <description></description>
      </in>
    </ins>
    <outs>
      <out>
        <name>results</name>
        <type><![CDATA[<object>]]></type>
        <description></description>
      </out>
    </outs>
  </functiondef>
  <description></description>
  <seealso></seealso>
</entry>

<entry>
  <name><![CDATA[corba/comm-failure/completed]]></name>
  <functiondef>
    <ins>
      <in>
        <name>object</name>
        <type><![CDATA[<object>]]></type>
        <description></description>
      </in>
    </ins>
    <outs>
      <out>
        <name>results</name>
        <type><![CDATA[<object>]]></type>
        <description></description>
      </out>
    </outs>
  </functiondef>
  <description></description>
  <seealso></seealso>
</entry>

<entry>
  <name><![CDATA[corba/comm-failure/completed-setter]]></name>
  <functiondef>
    <ins>
      <in>
        <name>value</name>
        <type><![CDATA[<object>]]></type>
        <description></description>
      </in>
      <in>
        <name>object</name>
        <type><![CDATA[<object>]]></type>
        <description></description>
      </in>
    </ins>
    <outs>
      <out>
        <name>results</name>
        <type><![CDATA[<object>]]></type>
        <description></description>
      </out>
    </outs>
  </functiondef>
  <description></description>
  <seealso></seealso>
</entry>

<entry>
  <name><![CDATA[corba/comm-failure/minor]]></name>
  <functiondef>
    <ins>
      <in>
        <name>object</name>
        <type><![CDATA[<object>]]></type>
        <description></description>
      </in>
    </ins>
    <outs>
      <out>
        <name>results</name>
        <type><![CDATA[<object>]]></type>
        <description></description>
      </out>
    </outs>
  </functiondef>
  <description></description>
  <seealso></seealso>
</entry>

<entry>
  <name><![CDATA[corba/comm-failure/minor-setter]]></name>
  <functiondef>
    <ins>
      <in>
        <name>value</name>
        <type><![CDATA[<object>]]></type>
        <description></description>
      </in>
      <in>
        <name>object</name>
        <type><![CDATA[<object>]]></type>
        <description></description>
      </in>
    </ins>
    <outs>
      <out>
        <name>results</name>
        <type><![CDATA[<object>]]></type>
        <description></description>
      </out>
    </outs>
  </functiondef>
  <description></description>
  <seealso></seealso>
</entry>

<entry>
  <name><![CDATA[corba/constantdef/type]]></name>
  <functiondef>
    <ins>
      <in>
        <name>object</name>
        <type><![CDATA[corba/<constantdef>]]></type>
        <description></description>
      </in>
    </ins>
    <outs>
      <out>
        <name>result</name>
        <type><![CDATA[corba/<typecode>]]></type>
        <description></description>
      </out>
    </outs>
  </functiondef>
  <description></description>
  <seealso></seealso>
</entry>

<entry>
  <name><![CDATA[corba/constantdef/type-def]]></name>
  <functiondef>
    <ins>
      <in>
        <name>object</name>
        <type><![CDATA[corba/<constantdef>]]></type>
        <description></description>
      </in>
    </ins>
    <outs>
      <out>
        <name>result</name>
        <type><![CDATA[corba/<idltype>]]></type>
        <description></description>
      </out>
    </outs>
  </functiondef>
  <description></description>
  <seealso></seealso>
</entry>

<entry>
  <name><![CDATA[corba/constantdef/type-def-setter]]></name>
  <functiondef>
    <ins>
      <in>
        <name>new-value</name>
        <type><![CDATA[corba/<idltype>]]></type>
        <description></description>
      </in>
      <in>
        <name>object</name>
        <type><![CDATA[corba/<constantdef>]]></type>
        <description></description>
      </in>
    </ins>
    <outs>
      <out>
        <name>result</name>
        <type><![CDATA[corba/<idltype>]]></type>
        <description></description>
      </out>
    </outs>
  </functiondef>
  <description></description>
  <seealso></seealso>
</entry>

<entry>
  <name><![CDATA[corba/constantdef/value]]></name>
  <functiondef>
    <ins>
      <in>
        <name>object</name>
        <type><![CDATA[corba/<constantdef>]]></type>
        <description></description>
      </in>
    </ins>
    <outs>
      <out>
        <name>result</name>
        <type><![CDATA[corba/<any>]]></type>
        <description></description>
      </out>
    </outs>
  </functiondef>
  <description></description>
  <seealso></seealso>
</entry>

<entry>
  <name><![CDATA[corba/constantdef/value-setter]]></name>
  <functiondef>
    <ins>
      <in>
        <name>new-value</name>
        <type><![CDATA[corba/<any>]]></type>
        <description></description>
      </in>
      <in>
        <name>object</name>
        <type><![CDATA[corba/<constantdef>]]></type>
        <description></description>
      </in>
    </ins>
    <outs>
      <out>
        <name>result</name>
        <type><![CDATA[corba/<any>]]></type>
        <description></description>
      </out>
    </outs>
  </functiondef>
  <description></description>
  <seealso></seealso>
</entry>

<entry>
  <name><![CDATA[corba/constantdescription/defined-in]]></name>
  <functiondef>
    <ins>
      <in>
        <name>object</name>
        <type><![CDATA[<object>]]></type>
        <description></description>
      </in>
    </ins>
    <outs>
      <out>
        <name>results</name>
        <type><![CDATA[<object>]]></type>
        <description></description>
      </out>
    </outs>
  </functiondef>
  <description></description>
  <seealso></seealso>
</entry>

<entry>
  <name><![CDATA[corba/constantdescription/defined-in-setter]]></name>
  <functiondef>
    <ins>
      <in>
        <name>value</name>
        <type><![CDATA[<object>]]></type>
        <description></description>
      </in>
      <in>
        <name>object</name>
        <type><![CDATA[<object>]]></type>
        <description></description>
      </in>
    </ins>
    <outs>
      <out>
        <name>results</name>
        <type><![CDATA[<object>]]></type>
        <description></description>
      </out>
    </outs>
  </functiondef>
  <description></description>
  <seealso></seealso>
</entry>

<entry>
  <name><![CDATA[corba/constantdescription/id]]></name>
  <functiondef>
    <ins>
      <in>
        <name>object</name>
        <type><![CDATA[<object>]]></type>
        <description></description>
      </in>
    </ins>
    <outs>
      <out>
        <name>results</name>
        <type><![CDATA[<object>]]></type>
        <description></description>
      </out>
    </outs>
  </functiondef>
  <description></description>
  <seealso></seealso>
</entry>

<entry>
  <name><![CDATA[corba/constantdescription/id-setter]]></name>
  <functiondef>
    <ins>
      <in>
        <name>value</name>
        <type><![CDATA[<object>]]></type>
        <description></description>
      </in>
      <in>
        <name>object</name>
        <type><![CDATA[<object>]]></type>
        <description></description>
      </in>
    </ins>
    <outs>
      <out>
        <name>results</name>
        <type><![CDATA[<object>]]></type>
        <description></description>
      </out>
    </outs>
  </functiondef>
  <description></description>
  <seealso></seealso>
</entry>

<entry>
  <name><![CDATA[corba/constantdescription/name]]></name>
  <functiondef>
    <ins>
      <in>
        <name>object</name>
        <type><![CDATA[<object>]]></type>
        <description></description>
      </in>
    </ins>
    <outs>
      <out>
        <name>results</name>
        <type><![CDATA[<object>]]></type>
        <description></description>
      </out>
    </outs>
  </functiondef>
  <description></description>
  <seealso></seealso>
</entry>

<entry>
  <name><![CDATA[corba/constantdescription/name-setter]]></name>
  <functiondef>
    <ins>
      <in>
        <name>value</name>
        <type><![CDATA[<object>]]></type>
        <description></description>
      </in>
      <in>
        <name>object</name>
        <type><![CDATA[<object>]]></type>
        <description></description>
      </in>
    </ins>
    <outs>
      <out>
        <name>results</name>
        <type><![CDATA[<object>]]></type>
        <description></description>
      </out>
    </outs>
  </functiondef>
  <description></description>
  <seealso></seealso>
</entry>

<entry>
  <name><![CDATA[corba/constantdescription/type]]></name>
  <functiondef>
    <ins>
      <in>
        <name>object</name>
        <type><![CDATA[<object>]]></type>
        <description></description>
      </in>
    </ins>
    <outs>
      <out>
        <name>results</name>
        <type><![CDATA[<object>]]></type>
        <description></description>
      </out>
    </outs>
  </functiondef>
  <description></description>
  <seealso></seealso>
</entry>

<entry>
  <name><![CDATA[corba/constantdescription/type-setter]]></name>
  <functiondef>
    <ins>
      <in>
        <name>value</name>
        <type><![CDATA[<object>]]></type>
        <description></description>
      </in>
      <in>
        <name>object</name>
        <type><![CDATA[<object>]]></type>
        <description></description>
      </in>
    </ins>
    <outs>
      <out>
        <name>results</name>
        <type><![CDATA[<object>]]></type>
        <description></description>
      </out>
    </outs>
  </functiondef>
  <description></description>
  <seealso></seealso>
</entry>

<entry>
  <name><![CDATA[corba/constantdescription/value]]></name>
  <functiondef>
    <ins>
      <in>
        <name>object</name>
        <type><![CDATA[<object>]]></type>
        <description></description>
      </in>
    </ins>
    <outs>
      <out>
        <name>results</name>
        <type><![CDATA[<object>]]></type>
        <description></description>
      </out>
    </outs>
  </functiondef>
  <description></description>
  <seealso></seealso>
</entry>

<entry>
  <name><![CDATA[corba/constantdescription/value-setter]]></name>
  <functiondef>
    <ins>
      <in>
        <name>value</name>
        <type><![CDATA[<object>]]></type>
        <description></description>
      </in>
      <in>
        <name>object</name>
        <type><![CDATA[<object>]]></type>
        <description></description>
      </in>
    </ins>
    <outs>
      <out>
        <name>results</name>
        <type><![CDATA[<object>]]></type>
        <description></description>
      </out>
    </outs>
  </functiondef>
  <description></description>
  <seealso></seealso>
</entry>

<entry>
  <name><![CDATA[corba/constantdescription/version]]></name>
  <functiondef>
    <ins>
      <in>
        <name>object</name>
        <type><![CDATA[<object>]]></type>
        <description></description>
      </in>
    </ins>
    <outs>
      <out>
        <name>results</name>
        <type><![CDATA[<object>]]></type>
        <description></description>
      </out>
    </outs>
  </functiondef>
  <description></description>
  <seealso></seealso>
</entry>

<entry>
  <name><![CDATA[corba/constantdescription/version-setter]]></name>
  <functiondef>
    <ins>
      <in>
        <name>value</name>
        <type><![CDATA[<object>]]></type>
        <description></description>
      </in>
      <in>
        <name>object</name>
        <type><![CDATA[<object>]]></type>
        <description></description>
      </in>
    </ins>
    <outs>
      <out>
        <name>results</name>
        <type><![CDATA[<object>]]></type>
        <description></description>
      </out>
    </outs>
  </functiondef>
  <description></description>
  <seealso></seealso>
</entry>

<entry>
  <name><![CDATA[corba/contained/<description>]]></name>
  <classdef>
    <modifiers></modifiers>
    <superclasses>
      <![CDATA[corba/<struct>]]>
    </superclasses>
    <keywords>
      <keyword>
        <name>kind:</name>
        <type><![CDATA[corba/<definitionkind>]]></type>
        <description></description>
      </keyword>
      <keyword>
        <name>value:</name>
        <type><![CDATA[corba/<any>]]></type>
        <description></description>
      </keyword>
    </keywords>
  </classdef>
  <description></description>
  <seealso></seealso>
</entry>

<entry>
  <name><![CDATA[corba/contained/absolute-name]]></name>
  <functiondef>
    <ins>
      <in>
        <name>object</name>
        <type><![CDATA[corba/<contained>]]></type>
        <description></description>
      </in>
    </ins>
    <outs>
      <out>
        <name>result</name>
        <type><![CDATA[corba/<scopedname>]]></type>
        <description></description>
      </out>
    </outs>
  </functiondef>
  <description>
<p>The <![CDATA[corba/contained/absolute-name]]> attribute is an
absolute <![CDATA[corba/<scopedname>]]> that identifies a
<![CDATA[corba/<contained>]]> object uniquely within its enclosing
<![CDATA[corba/<repository>]]>. If this object's
<![CDATA[corba/contained/defined-in]]> attribute references a
<![CDATA[corba/<repository>]]>, the corba/contained/absolute-name
formed by concatenating the string "::" and this object's
corba/contained/name attribute. Otherwise, the
corba/contained/absolute-name is formed by concatenating the
corba/contained/absolute-name attribute of the object referenced by
this object's corba/contained/defined-in attribute, the string "::",
and this object's name attribute.</p>
  </description>
  <seealso></seealso>
</entry>

<entry>
  <name><![CDATA[corba/contained/containing-repository]]></name>
  <functiondef>
    <ins>
      <in>
        <name>object</name>
        <type><![CDATA[corba/<contained>]]></type>
        <description></description>
      </in>
    </ins>
    <outs>
      <out>
        <name>result</name>
        <type><![CDATA[corba/<repository>]]></type>
        <description></description>
      </out>
    </outs>
  </functiondef>
  <description>
<p>The corba/contained/containing-repository attribute identifies the
Repository that is eventually reached by recursively following the
object's corba/contained/defined-in attribute.</p>
  </description>
  <seealso></seealso>
</entry>

<entry>
  <name><![CDATA[corba/contained/defined-in]]></name>
  <functiondef>
    <ins>
      <in>
        <name>object</name>
        <type><![CDATA[corba/<contained>]]></type>
        <description></description>
      </in>
    </ins>
    <outs>
      <out>
        <name>result</name>
        <type><![CDATA[corba/<container>]]></type>
        <description></description>
      </out>
    </outs>
  </functiondef>
  <description></description>
  <seealso></seealso>
</entry>

<entry>
  <name><![CDATA[corba/contained/describe]]></name>
  <functiondef>
    <ins>
      <in>
        <name>object</name>
        <type><![CDATA[corba/<contained>]]></type>
        <description></description>
      </in>
    </ins>
    <outs>
      <out>
        <name>result</name>
        <type><![CDATA[corba/contained/<description>]]></type>
        <description></description>
      </out>
    </outs>
  </functiondef>
  <description>
<p>The corba/contained/describe operation returns a structure
containing information about the interface.</p>

<p>The kind of definition described by the structure returned is
provided with the returned structure. For example, if the
corba/contained/describe operation is invoked on an attribute object,
the corba/contained/description/kind field contains #"dk-attribute"
and the value field contains a <![CDATA[corba/<any>]]>, which contains
the <![CDATA[corba/<attributedescription>]]> structure.</p>
  </description>
  <seealso></seealso>
</entry>

<entry>
  <name><![CDATA[corba/contained/description/kind]]></name>
  <functiondef>
    <ins>
      <in>
        <name>object</name>
        <type><![CDATA[<object>]]></type>
        <description></description>
      </in>
    </ins>
    <outs>
      <out>
        <name>results</name>
        <type><![CDATA[<object>]]></type>
        <description></description>
      </out>
    </outs>
  </functiondef>
  <description></description>
  <seealso></seealso>
</entry>

<entry>
  <name><![CDATA[corba/contained/description/kind-setter]]></name>
  <functiondef>
    <ins>
      <in>
        <name>value</name>
        <type><![CDATA[<object>]]></type>
        <description></description>
      </in>
      <in>
        <name>object</name>
        <type><![CDATA[<object>]]></type>
        <description></description>
      </in>
    </ins>
    <outs>
      <out>
        <name>results</name>
        <type><![CDATA[<object>]]></type>
        <description></description>
      </out>
    </outs>
  </functiondef>
  <description></description>
  <seealso></seealso>
</entry>

<entry>
  <name><![CDATA[corba/contained/description/value]]></name>
  <functiondef>
    <ins>
      <in>
        <name>object</name>
        <type><![CDATA[<object>]]></type>
        <description></description>
      </in>
    </ins>
    <outs>
      <out>
        <name>results</name>
        <type><![CDATA[<object>]]></type>
        <description></description>
      </out>
    </outs>
  </functiondef>
  <description></description>
  <seealso></seealso>
</entry>

<entry>
  <name><![CDATA[corba/contained/description/value-setter]]></name>
  <functiondef>
    <ins>
      <in>
        <name>value</name>
        <type><![CDATA[<object>]]></type>
        <description></description>
      </in>
      <in>
        <name>object</name>
        <type><![CDATA[<object>]]></type>
        <description></description>
      </in>
    </ins>
    <outs>
      <out>
        <name>results</name>
        <type><![CDATA[<object>]]></type>
        <description></description>
      </out>
    </outs>
  </functiondef>
  <description></description>
  <seealso></seealso>
</entry>

<entry>
  <name><![CDATA[corba/contained/id]]></name>
  <functiondef>
    <ins>
      <in>
        <name>object</name>
        <type><![CDATA[corba/<contained>]]></type>
        <description></description>
      </in>
    </ins>
    <outs>
      <out>
        <name>result</name>
        <type><![CDATA[corba/<repositoryid>]]></type>
        <description></description>
      </out>
    </outs>
  </functiondef>
  <description>
<p>An object that is contained by another object has a corba/contained/id attribute that identifies it
globally.</p>
  </description>
  <seealso></seealso>
</entry>

<entry>
  <name><![CDATA[corba/contained/id-setter]]></name>
  <functiondef>
    <ins>
      <in>
        <name>new-value</name>
        <type><![CDATA[corba/<repositoryid>]]></type>
        <description></description>
      </in>
      <in>
        <name>object</name>
        <type><![CDATA[corba/<contained>]]></type>
        <description></description>
      </in>
    </ins>
    <outs>
      <out>
        <name>result</name>
        <type><![CDATA[corba/<repositoryid>]]></type>
        <description></description>
      </out>
    </outs>
  </functiondef>
  <description></description>
  <seealso></seealso>
</entry>

<entry>
  <name><![CDATA[corba/contained/move]]></name>
  <functiondef>
    <ins>
      <in>
        <name>object</name>
        <type><![CDATA[corba/<contained>]]></type>
        <description></description>
      </in>
      <in>
        <name>new-container</name>
        <type><![CDATA[corba/<container>]]></type>
        <description></description>
      </in>
      <in>
        <name>new-name</name>
        <type><![CDATA[corba/<identifier>]]></type>
        <description></description>
      </in>
      <in>
        <name>new-version</name>
        <type><![CDATA[corba/<versionspec>]]></type>
        <description></description>
      </in>
    </ins>
    <outs>
    </outs>
  </functiondef>
  <description>
<p>The corba/contained/move operation atomically removes this object
from its current <![CDATA[corba/<container>]]>, and adds it to the
<![CDATA[corba/<container>]]> specified by new-container, which must:

<p>Be in the same Repository,</p>

<p>Be capable of containing this object's type (see "Structure and
Navigation of Interface Objects" page 8-7); and</p>

<p>Not already contain an object with this object's name (unless
multiple versions are supported by the IR).</p>

<p>The name attribute is changed to new-name, and the version
attribute is changed to new-version.</p>

<p>The corba/contained/defined-in and corba/contained/absolute-name
attributes are updated to reflect the new container and name. If this
object is also a <![CDATA[corba/<container>]]>, the
corba/contained/absolute-name attributes of any objects it contains
are also updated.</p>
  </description>
  <seealso></seealso>
</entry>

<entry>
  <name><![CDATA[corba/contained/name]]></name>
  <functiondef>
    <ins>
      <in>
        <name>object</name>
        <type><![CDATA[corba/<contained>]]></type>
        <description></description>
      </in>
    </ins>
    <outs>
      <out>
        <name>result</name>
        <type><![CDATA[corba/<identifier>]]></type>
        <description></description>
      </out>
    </outs>
  </functiondef>
  <description>
<p>An object that is contained by another object has a
corba/contained/name attribute that identifies it uniquely within the
enclosing <![CDATA[corba/<container>]]> object.</p>
  </description>
  <seealso></seealso>
</entry>

<entry>
  <name><![CDATA[corba/contained/name-setter]]></name>
  <functiondef>
    <ins>
      <in>
        <name>new-value</name>
        <type><![CDATA[corba/<identifier>]]></type>
        <description></description>
      </in>
      <in>
        <name>object</name>
        <type><![CDATA[corba/<contained>]]></type>
        <description></description>
      </in>
    </ins>
    <outs>
      <out>
        <name>result</name>
        <type><![CDATA[corba/<identifier>]]></type>
        <description></description>
      </out>
    </outs>
  </functiondef>
  <description>
<p>Setting the corba/contained/name attribute changes the identity of
this definition within its <![CDATA[corba/<container>]]>.  An error is
returned if an object with the specified name attribute already exists
within this object's <![CDATA[corba/<container>]]>. The
corba/contained/absolute-name attribute is also updated, along with
any other attributes that reflect the name of the object. If this
object is a <![CDATA[corba/<container>]]>, the
corba/contained/absolute-name attribute of any objects it contains are
also updated.</p>
  </description>
  <seealso></seealso>
</entry>

<entry>
  <name><![CDATA[corba/contained/version]]></name>
  <functiondef>
    <ins>
      <in>
        <name>object</name>
        <type><![CDATA[corba/<contained>]]></type>
        <description></description>
      </in>
    </ins>
    <outs>
      <out>
        <name>result</name>
        <type><![CDATA[corba/<versionspec>]]></type>
        <description></description>
      </out>
    </outs>
  </functiondef>
  <description>
<p>An object that is contained by another object has a
corba/contained/version that distinguishes it from other versioned
objects with the same name. IRs are not required to support
simultaneous containment of multiple versions of the same named
object. Supporting multiple versions most likely requires mechanism
and policy not specified in this document.</p>
  </description>
  <seealso></seealso>
</entry>

<entry>
  <name><![CDATA[corba/contained/version-setter]]></name>
  <functiondef>
    <ins>
      <in>
        <name>new-value</name>
        <type><![CDATA[corba/<versionspec>]]></type>
        <description></description>
      </in>
      <in>
        <name>object</name>
        <type><![CDATA[corba/<contained>]]></type>
        <description></description>
      </in>
    </ins>
    <outs>
      <out>
        <name>result</name>
        <type><![CDATA[corba/<versionspec>]]></type>
        <description></description>
      </out>
    </outs>
  </functiondef>
  <description></description>
  <seealso>
    <see>corba/contained/version</see>
  </seealso>
</entry>

<entry>
  <name><![CDATA[corba/container/<description>]]></name>
  <classdef>
    <modifiers></modifiers>
    <superclasses>
      <![CDATA[corba/<struct>]]>
    </superclasses>
    <keywords>
      <keyword>
        <name>contained-object:</name>
        <type><![CDATA[corba/<contained>]]></type>
        <description></description>
      </keyword>
      <keyword>
        <name>kind:</name>
        <type><![CDATA[corba/<definitionkind>]]></type>
        <description></description>
      </keyword>
      <keyword>
        <name>value:</name>
        <type><![CDATA[corba/<any>]]></type>
        <description></description>
      </keyword>
    </keywords>
  </classdef>
  <description></description>
  <seealso></seealso>
</entry>

<entry>
  <name><![CDATA[corba/container/<descriptionseq>]]></name>
  <constantdef>
    <type><![CDATA[<object>]]></type>
    <value><![CDATA[#f]]></value>
  </constantdef>
  <description></description>
  <seealso></seealso>
</entry>

<entry>
  <name><![CDATA[corba/container/contents]]></name>
  <functiondef>
    <ins>
      <in>
        <name>object</name>
        <type><![CDATA[corba/<container>]]></type>
        <description></description>
      </in>
      <in>
        <name>limit-type</name>
        <type><![CDATA[corba/<definitionkind>]]></type>
        <description>
<p>If limit-type is set to #"dk-all", objects of all interface types
are returned. For example, if this is an
<![CDATA[corba/<interfacedef>]]>, the attribute, operation, and
exception objects are all returned. If limit-type is set to a specific
interface, only objects of that interface type are returned. For
example, only attribute objects are returned if limit-type is set to
#"dk-Attribute".</p>
	</description>
      </in>
      <in>
        <name>exclude-inherited</name>
        <type><![CDATA[corba/<boolean>]]></type>
        <description>
<p>If exclude-inherited is set to #t, inherited objects (if there are
any) are not returned. If exclude-inherited is set to #f, all
contained objects <emphasis>whether contained due to inheritance or
because they were defined within the object</emphasis> are
returned.</p>
	</description>
      </in>
    </ins>
    <outs>
      <out>
        <name>result</name>
        <type><![CDATA[corba/<containedseq>]]></type>
        <description></description>
      </out>
    </outs>
  </functiondef>
  <description>
<p>The contents operation returns the list of objects directly
contained by or inherited into the object. The operation is used to
navigate through the hierarchy of objects.  Starting with the
<![CDATA[corba/<repository>]]> object, a client uses this operation to
list all of the objects contained by the <![CDATA[corba/<repository>]]>, all of the
objects contained by the modules within the <![CDATA[corba/<repository>]]>, and then all
of the interfaces within a specific module, and so on.</p>
  </description>
  <seealso></seealso>
</entry>

<entry>
  <name><![CDATA[corba/container/create-alias]]></name>
  <functiondef>
    <ins>
      <in>
        <name>object</name>
        <type><![CDATA[corba/<container>]]></type>
        <description></description>
      </in>
      <in>
        <name>id</name>
        <type><![CDATA[corba/<repositoryid>]]></type>
        <description></description>
      </in>
      <in>
        <name>name</name>
        <type><![CDATA[corba/<identifier>]]></type>
        <description></description>
      </in>
      <in>
        <name>version</name>
        <type><![CDATA[corba/<versionspec>]]></type>
        <description></description>
      </in>
      <in>
        <name>original-type</name>
        <type><![CDATA[corba/<idltype>]]></type>
        <description></description>
      </in>
    </ins>
    <outs>
      <out>
        <name>result</name>
        <type><![CDATA[corba/<aliasdef>]]></type>
        <description></description>
      </out>
    </outs>
  </functiondef>
  <description>
<p>The corba/container/create-alias operation returns a new
<![CDATA[corba/<aliasdef>]]> with the specified original-type.</p>
  </description>
  <seealso></seealso>
</entry>

<entry>
  <name><![CDATA[corba/container/create-constant]]></name>
  <functiondef>
    <ins>
      <in>
        <name>object</name>
        <type><![CDATA[corba/<container>]]></type>
        <description></description>
      </in>
      <in>
        <name>id</name>
        <type><![CDATA[corba/<repositoryid>]]></type>
        <description></description>
      </in>
      <in>
        <name>name</name>
        <type><![CDATA[corba/<identifier>]]></type>
        <description></description>
      </in>
      <in>
        <name>version</name>
        <type><![CDATA[corba/<versionspec>]]></type>
        <description></description>
      </in>
      <in>
        <name>type</name>
        <type><![CDATA[corba/<idltype>]]></type>
        <description></description>
      </in>
      <in>
        <name>value</name>
        <type><![CDATA[corba/<any>]]></type>
        <description></description>
      </in>
    </ins>
    <outs>
      <out>
        <name>result</name>
        <type><![CDATA[corba/<constantdef>]]></type>
        <description></description>
      </out>
    </outs>
  </functiondef>
  <description>
<p>The corba/container/create-constant operation returns a new
<![CDATA[corba/<constantdef>]]> with the specified type and value.</p>
  </description>
  <seealso></seealso>
</entry>

<entry>
  <name><![CDATA[corba/container/create-enum]]></name>
  <functiondef>
    <ins>
      <in>
        <name>object</name>
        <type><![CDATA[corba/<container>]]></type>
        <description></description>
      </in>
      <in>
        <name>id</name>
        <type><![CDATA[corba/<repositoryid>]]></type>
        <description></description>
      </in>
      <in>
        <name>name</name>
        <type><![CDATA[corba/<identifier>]]></type>
        <description></description>
      </in>
      <in>
        <name>version</name>
        <type><![CDATA[corba/<versionspec>]]></type>
        <description></description>
      </in>
      <in>
        <name>members</name>
        <type><![CDATA[corba/<enummemberseq>]]></type>
        <description></description>
      </in>
    </ins>
    <outs>
      <out>
        <name>result</name>
        <type><![CDATA[corba/<enumdef>]]></type>
        <description></description>
      </out>
    </outs>
  </functiondef>
  <description>
<p>The corba/container/create-enum operation returns a new
<![CDATA[corba/<enumdef>]]> with the specified members.</p>
  </description>
  <seealso></seealso>
</entry>

<entry>
  <name><![CDATA[corba/container/create-exception]]></name>
  <functiondef>
    <ins>
      <in>
        <name>object</name>
        <type><![CDATA[corba/<container>]]></type>
        <description></description>
      </in>
      <in>
        <name>id</name>
        <type><![CDATA[corba/<repositoryid>]]></type>
        <description></description>
      </in>
      <in>
        <name>name</name>
        <type><![CDATA[corba/<identifier>]]></type>
        <description></description>
      </in>
      <in>
        <name>version</name>
        <type><![CDATA[corba/<versionspec>]]></type>
        <description></description>
      </in>
      <in>
        <name>members</name>
        <type><![CDATA[corba/<structmemberseq>]]></type>
        <description></description>
      </in>
    </ins>
    <outs>
      <out>
        <name>result</name>
        <type><![CDATA[corba/<exceptiondef>]]></type>
        <description></description>
      </out>
    </outs>
  </functiondef>
  <description>
<p>The corba/create-exception operation returns a new
<![CDATA[corba/<exceptiondef>]]> with the specified members. The type
member of the <![CDATA[corba/<structmember>]]> structures is ignored,
and should be set to #"TC_void".</p>
  </description>
  <seealso></seealso>
</entry>

<entry>
  <name><![CDATA[corba/container/create-interface]]></name>
  <functiondef>
    <ins>
      <in>
        <name>object</name>
        <type><![CDATA[corba/<container>]]></type>
        <description></description>
      </in>
      <in>
        <name>id</name>
        <type><![CDATA[corba/<repositoryid>]]></type>
        <description></description>
      </in>
      <in>
        <name>name</name>
        <type><![CDATA[corba/<identifier>]]></type>
        <description></description>
      </in>
      <in>
        <name>version</name>
        <type><![CDATA[corba/<versionspec>]]></type>
        <description></description>
      </in>
      <in>
        <name>base-interfaces</name>
        <type><![CDATA[corba/<interfacedefseq>]]></type>
        <description></description>
      </in>
    </ins>
    <outs>
      <out>
        <name>result</name>
        <type><![CDATA[corba/<interfacedef>]]></type>
        <description></description>
      </out>
    </outs>
  </functiondef>
  <description>
<p>The corba/container/create-interface operation returns a new empty
<![CDATA[corba/<interfacedef>]]> with the specified
base-interfaces. Type, exception, and constant definitions can be
added using <![CDATA[corba/container/create-<type>]]> operations on
the new
<![CDATA[corba/<interfacedef>]]>. <![CDATA[corba/<operationdef>]]>s
can be added using corba/interfacedef/create-operation and
<![CDATA[corba/<attributedef>]]>s can be added using
corba/interfacedef/create-attribute. Definitions can also be added using
the corba/contained/move operation.</p>
  </description>
  <seealso></seealso>
</entry>

<entry>
  <name><![CDATA[corba/container/create-module]]></name>
  <functiondef>
    <ins>
      <in>
        <name>object</name>
        <type><![CDATA[corba/<container>]]></type>
        <description></description>
      </in>
      <in>
        <name>id</name>
        <type><![CDATA[corba/<repositoryid>]]></type>
        <description></description>
      </in>
      <in>
        <name>name</name>
        <type><![CDATA[corba/<identifier>]]></type>
        <description></description>
      </in>
      <in>
        <name>version</name>
        <type><![CDATA[corba/<versionspec>]]></type>
        <description></description>
      </in>
    </ins>
    <outs>
      <out>
        <name>result</name>
        <type><![CDATA[corba/<moduledef>]]></type>
        <description></description>
      </out>
    </outs>
  </functiondef>
  <description>
<p>The <![CDATA[corba/container/create-<type>]]> operations all take id and name
parameters which are used to initialize the identity of the created
definition. An error is returned if an object with the specified id
already exists within this object's Repository, or, assuming multiple
versions are not supported, if an object with the specified name
already exists within this <![CDATA[corba/<container>]]>.</p>

<p>The corba/container/create-module operation returns a new empty
<![CDATA[corba/<moduledef>]]>. Definitions can be added using
<![CDATA[corba/container/create-<type>]]> operations on the new module, or by using the
corba/contained/move operation.</p>
  </description>
  <seealso></seealso>
</entry>

<entry>
  <name><![CDATA[corba/container/create-struct]]></name>
  <functiondef>
    <ins>
      <in>
        <name>object</name>
        <type><![CDATA[corba/<container>]]></type>
        <description></description>
      </in>
      <in>
        <name>id</name>
        <type><![CDATA[corba/<repositoryid>]]></type>
        <description></description>
      </in>
      <in>
        <name>name</name>
        <type><![CDATA[corba/<identifier>]]></type>
        <description></description>
      </in>
      <in>
        <name>version</name>
        <type><![CDATA[corba/<versionspec>]]></type>
        <description></description>
      </in>
      <in>
        <name>members</name>
        <type><![CDATA[corba/<structmemberseq>]]></type>
        <description></description>
      </in>
    </ins>
    <outs>
      <out>
        <name>result</name>
        <type><![CDATA[corba/<structdef>]]></type>
        <description></description>
      </out>
    </outs>
  </functiondef>
  <description>
<p>The corba/container/create-struct operation returns a new
<![CDATA[corba/<structdef>]]> with the specified members.  The type
member of the <![CDATA[corba/<structmember>]]> structures is ignored,
and should be set to #"tc-void".</p>
  </description>
  <seealso></seealso>
</entry>

<entry>
  <name><![CDATA[corba/container/create-union]]></name>
  <functiondef>
    <ins>
      <in>
        <name>object</name>
        <type><![CDATA[corba/<container>]]></type>
        <description></description>
      </in>
      <in>
        <name>id</name>
        <type><![CDATA[corba/<repositoryid>]]></type>
        <description></description>
      </in>
      <in>
        <name>name</name>
        <type><![CDATA[corba/<identifier>]]></type>
        <description></description>
      </in>
      <in>
        <name>version</name>
        <type><![CDATA[corba/<versionspec>]]></type>
        <description></description>
      </in>
      <in>
        <name>discriminator-type</name>
        <type><![CDATA[corba/<idltype>]]></type>
        <description></description>
      </in>
      <in>
        <name>members</name>
        <type><![CDATA[corba/<unionmemberseq>]]></type>
        <description></description>
      </in>
    </ins>
    <outs>
      <out>
        <name>result</name>
        <type><![CDATA[corba/<uniondef>]]></type>
        <description></description>
      </out>
    </outs>
  </functiondef>
  <description>
<p>The corba/container/create-union operation returns a new
<![CDATA[corba/<uniondef>]]> with the specified discriminator-type and
members. The type member of the <![CDATA[corba/<unionmember>]]>
structures is ignored, and should be set to #"tc_void".</p>
  </description>
  <seealso></seealso>
</entry>

<entry>
  <name><![CDATA[corba/container/describe-contents]]></name>
  <functiondef>
    <ins>
      <in>
        <name>object</name>
        <type><![CDATA[corba/<container>]]></type>
        <description></description>
      </in>
      <in>
        <name>limit-type</name>
        <type><![CDATA[corba/<definitionkind>]]></type>
        <description></description>
      </in>
      <in>
        <name>exclude-inherited</name>
        <type><![CDATA[corba/<boolean>]]></type>
        <description></description>
      </in>
      <in>
        <name>max-returned-objs</name>
        <type><![CDATA[corba/<long>]]></type>
        <description>
<p>max-returned-objs limits the number of objects that can be returned
in an invocation of the call to the number provided. Setting the
parameter to -1 means return all contained objects.</p>
	</description>
      </in>
    </ins>
    <outs>
      <out>
        <name>result</name>
        <type><![CDATA[corba/container/<descriptionseq>]]></type>
        <description></description>
      </out>
    </outs>
  </functiondef>
  <description>
<p>The corba/container/describe-contents operation combines the
corba/container/contents operation and the corba/container/describe
operation. For each object returned by the corba/container/contents
operation, the description of the object is returned (i.e., the
object's corba/container/describe operation is invoked and the results
returned).</p>
  </description>
  <seealso></seealso>
</entry>

<entry>
  <name><![CDATA[corba/container/description/contained-object]]></name>
  <functiondef>
    <ins>
      <in>
        <name>object</name>
        <type><![CDATA[<object>]]></type>
        <description></description>
      </in>
    </ins>
    <outs>
      <out>
        <name>results</name>
        <type><![CDATA[<object>]]></type>
        <description></description>
      </out>
    </outs>
  </functiondef>
  <description></description>
  <seealso></seealso>
</entry>

<entry>
  <name><![CDATA[corba/container/description/contained-object-setter]]></name>
  <functiondef>
    <ins>
      <in>
        <name>value</name>
        <type><![CDATA[<object>]]></type>
        <description></description>
      </in>
      <in>
        <name>object</name>
        <type><![CDATA[<object>]]></type>
        <description></description>
      </in>
    </ins>
    <outs>
      <out>
        <name>results</name>
        <type><![CDATA[<object>]]></type>
        <description></description>
      </out>
    </outs>
  </functiondef>
  <description></description>
  <seealso></seealso>
</entry>

<entry>
  <name><![CDATA[corba/container/description/kind]]></name>
  <functiondef>
    <ins>
      <in>
        <name>object</name>
        <type><![CDATA[<object>]]></type>
        <description></description>
      </in>
    </ins>
    <outs>
      <out>
        <name>results</name>
        <type><![CDATA[<object>]]></type>
        <description></description>
      </out>
    </outs>
  </functiondef>
  <description></description>
  <seealso></seealso>
</entry>

<entry>
  <name><![CDATA[corba/container/description/kind-setter]]></name>
  <functiondef>
    <ins>
      <in>
        <name>value</name>
        <type><![CDATA[<object>]]></type>
        <description></description>
      </in>
      <in>
        <name>object</name>
        <type><![CDATA[<object>]]></type>
        <description></description>
      </in>
    </ins>
    <outs>
      <out>
        <name>results</name>
        <type><![CDATA[<object>]]></type>
        <description></description>
      </out>
    </outs>
  </functiondef>
  <description></description>
  <seealso></seealso>
</entry>

<entry>
  <name><![CDATA[corba/container/description/value]]></name>
  <functiondef>
    <ins>
      <in>
        <name>object</name>
        <type><![CDATA[<object>]]></type>
        <description></description>
      </in>
    </ins>
    <outs>
      <out>
        <name>results</name>
        <type><![CDATA[<object>]]></type>
        <description></description>
      </out>
    </outs>
  </functiondef>
  <description></description>
  <seealso></seealso>
</entry>

<entry>
  <name><![CDATA[corba/container/description/value-setter]]></name>
  <functiondef>
    <ins>
      <in>
        <name>value</name>
        <type><![CDATA[<object>]]></type>
        <description></description>
      </in>
      <in>
        <name>object</name>
        <type><![CDATA[<object>]]></type>
        <description></description>
      </in>
    </ins>
    <outs>
      <out>
        <name>results</name>
        <type><![CDATA[<object>]]></type>
        <description></description>
      </out>
    </outs>
  </functiondef>
  <description></description>
  <seealso></seealso>
</entry>

<entry>
  <name><![CDATA[corba/container/lookup]]></name>
  <functiondef>
    <ins>
      <in>
        <name>object</name>
        <type><![CDATA[corba/<container>]]></type>
        <description></description>
      </in>
      <in>
        <name>search-name</name>
        <type><![CDATA[corba/<scopedname>]]></type>
        <description></description>
      </in>
    </ins>
    <outs>
      <out>
        <name>result</name>
        <type><![CDATA[corba/<contained>]]></type>
        <description></description>
      </out>
    </outs>
  </functiondef>
  <description>
<p>The corba/container/lookup operation locates a definition relative
to this container given a scoped name using OMG IDL's name scoping
rules. An absolute scoped name (beginning with "::" the definition
relative to the enclosing <![CDATA[corba/<repository>]]>. If no object
is found, a nil object reference is returned.</p>
  </description>
  <seealso></seealso>
</entry>

<entry>
  <name><![CDATA[corba/container/lookup-name]]></name>
  <functiondef>
    <ins>
      <in>
        <name>object</name>
        <type><![CDATA[corba/<container>]]></type>
        <description></description>
      </in>
      <in>
        <name>search-name</name>
        <type><![CDATA[corba/<identifier>]]></type>
        <description>
<p>search-name specifies which name is to be searched for.</p>
	</description>
      </in>
      <in>
        <name>levels-to-search</name>
        <type><![CDATA[corba/<long>]]></type>
        <description>
<p>levels-to-search controls whether the lookup is constrained to the
object the operation is invoked on or whether it should search through
objects contained by the object as well.</p>

<p>Setting levels_to_search to -1 searches the current object and all
contained objects. Setting levels_to_search to 1 searches only the
current object.</p>
	</description>
      </in>
      <in>
        <name>limit-type</name>
        <type><![CDATA[corba/<definitionkind>]]></type>
        <description></description>
      </in>
      <in>
        <name>exclude-inherited</name>
        <type><![CDATA[corba/<boolean>]]></type>
        <description></description>
      </in>
    </ins>
    <outs>
      <out>
        <name>result</name>
        <type><![CDATA[corba/<containedseq>]]></type>
        <description></description>
      </out>
    </outs>
  </functiondef>
  <description>
<p>The corba/container/lookup-name operation is used to locate an
object by name within a particular object or within
the objects contained by that object.</p>
  </description>
  <seealso></seealso>
</entry>

<entry>
  <name><![CDATA[corba/context/context-name]]></name>
  <functiondef>
    <ins>
      <in>
        <name>object</name>
        <type><![CDATA[corba/<context>]]></type>
        <description></description>
      </in>
    </ins>
    <outs>
      <out>
        <name>name</name>
        <type><![CDATA[corba/<identifier>]]></type>
        <description></description>
      </out>
    </outs>
  </functiondef>
  <description></description>
  <seealso></seealso>
</entry>

<entry>
  <name><![CDATA[corba/context/create-child]]></name>
  <functiondef>
    <ins>
      <in>
        <name>object</name>
        <type><![CDATA[corba/<context>]]></type>
        <description></description>
      </in>
      <in>
        <name>child-ctx-name</name>
        <type><![CDATA[corba/<identifier>]]></type>
        <description></description>
      </in>
    </ins>
    <outs>
      <out>
        <name>child-ctx</name>
        <type><![CDATA[corba/<context>]]></type>
        <description></description>
      </out>
    </outs>
  </functiondef>
  <description>
<p>This operation creates a child context object.</p>

<p>The returned context object is chained into its parent context. That is, searches on the
child context object will look in the parent context (and so on, up the context tree), if
necessary, for matching property names.</p>

<p>Context object names follow the rules for OMG IDL identifiers (see "Identifiers" on
page 3-6).</p>
  </description>
  <seealso></seealso>
</entry>

<entry>
  <name><![CDATA[corba/context/delete-values]]></name>
  <functiondef>
    <ins>
      <in>
        <name>object</name>
        <type><![CDATA[corba/<context>]]></type>
        <description></description>
      </in>
      <in>
        <name>propname</name>
        <type><![CDATA[corba/<identifier>]]></type>
        <description></description>
      </in>
    </ins>
    <outs>
    </outs>
  </functiondef>
  <description>
<p>This operation deletes the specified property value(s) from the
context object. If prop_name has a trailing wildcard character ("*"),
then all property names that match will be deleted.</p>

<p>Search scope is always limited to the specified context object.</p>

<p>If no matching property is found, an exception is returned.</p>
  </description>
  <seealso></seealso>
</entry>

<entry>
  <name><![CDATA[corba/context/get-values]]></name>
  <functiondef>
    <ins>
      <in>
        <name>object</name>
        <type><![CDATA[corba/<context>]]></type>
        <description></description>
      </in>
      <in>
        <name>start-scope</name>
        <type><![CDATA[corba/<identifier>]]></type>
        <description></description>
      </in>
      <in>
        <name>op-flags</name>
        <type><![CDATA[corba/<flags>]]></type>
        <description></description>
      </in>
      <in>
        <name>pattern</name>
        <type><![CDATA[corba/<identifier>]]></type>
        <description></description>
      </in>
    </ins>
    <outs>
      <out>
        <name>value</name>
        <type><![CDATA[corba/<nvlist>]]></type>
        <description></description>
      </out>
    </outs>
  </functiondef>
  <description>
<p>This operation retrieves the specified context property
value(s). If prop_name has a trailing wildcard character ("*"), then
all matching properties and their values are returned. The values
returned may be freed by a call to the list free operation.  If no
properties are found, an error is returned and no property list is
returned.  Scope indicates the context object level at which to
initiate the search for the specified properties (e.g., "_USER",
"_SYSTEM"). If the property is not found at the indicated level, the
search continues up the context object tree until a match is found or
all context objects in the chain have been exhausted.</p>

<p>Valid scope names are implementation-specific.</p>

<p>If scope name is omitted, the search begins with the specified
context object. If the specified scope name is not found, an exception
is returned.  The following operation flags may be specified:</p>

<p>corba/$ctx-restrict-scope - Searching is limited to the specified search
scope or context object.</p>
  </description>
  <seealso></seealso>
</entry>

<entry>
  <name><![CDATA[corba/context/parent]]></name>
  <functiondef>
    <ins>
      <in>
        <name>object</name>
        <type><![CDATA[corba/<context>]]></type>
        <description></description>
      </in>
    </ins>
    <outs>
      <out>
        <name>parent</name>
        <type><![CDATA[{complex type}]]></type>
        <description></description>
      </out>
    </outs>
  </functiondef>
  <description></description>
  <seealso></seealso>
</entry>

<entry>
  <name><![CDATA[corba/context/set-one-value]]></name>
  <functiondef>
    <ins>
      <in>
        <name>object</name>
        <type><![CDATA[corba/<context>]]></type>
        <description></description>
      </in>
      <in>
        <name>propname</name>
        <type><![CDATA[corba/<identifier>]]></type>
        <description></description>
      </in>
      <in>
        <name>propvalue</name>
        <type><![CDATA[corba/<any>]]></type>
        <description></description>
      </in>
    </ins>
    <outs>
    </outs>
  </functiondef>
  <description>
<p>This operation sets a single context object property. Currently,
only string values are supported by the context object.</p>
  </description>
  <seealso></seealso>
</entry>

<entry>
  <name><![CDATA[corba/context/set-values]]></name>
  <functiondef>
    <ins>
      <in>
        <name>object</name>
        <type><![CDATA[corba/<context>]]></type>
        <description></description>
      </in>
      <in>
        <name>values</name>
        <type><![CDATA[corba/<nvlist>]]></type>
        <description></description>
      </in>
    </ins>
    <outs>
    </outs>
  </functiondef>
  <description>
<p>This operation sets one or more property values in the context
object. In the NVList, the flags field must be set to zero, and the
TypeCode field associated with an attribute value must be
#"tc-string". Currently, only string values are supported by the context
object.</p>
  </description>
  <seealso></seealso>
</entry>

<entry>
  <name><![CDATA[corba/data-conversion/completed]]></name>
  <functiondef>
    <ins>
      <in>
        <name>object</name>
        <type><![CDATA[<object>]]></type>
        <description></description>
      </in>
    </ins>
    <outs>
      <out>
        <name>results</name>
        <type><![CDATA[<object>]]></type>
        <description></description>
      </out>
    </outs>
  </functiondef>
  <description></description>
  <seealso></seealso>
</entry>

<entry>
  <name><![CDATA[corba/data-conversion/completed-setter]]></name>
  <functiondef>
    <ins>
      <in>
        <name>value</name>
        <type><![CDATA[<object>]]></type>
        <description></description>
      </in>
      <in>
        <name>object</name>
        <type><![CDATA[<object>]]></type>
        <description></description>
      </in>
    </ins>
    <outs>
      <out>
        <name>results</name>
        <type><![CDATA[<object>]]></type>
        <description></description>
      </out>
    </outs>
  </functiondef>
  <description></description>
  <seealso></seealso>
</entry>

<entry>
  <name><![CDATA[corba/data-conversion/minor]]></name>
  <functiondef>
    <ins>
      <in>
        <name>object</name>
        <type><![CDATA[<object>]]></type>
        <description></description>
      </in>
    </ins>
    <outs>
      <out>
        <name>results</name>
        <type><![CDATA[<object>]]></type>
        <description></description>
      </out>
    </outs>
  </functiondef>
  <description></description>
  <seealso></seealso>
</entry>

<entry>
  <name><![CDATA[corba/data-conversion/minor-setter]]></name>
  <functiondef>
    <ins>
      <in>
        <name>value</name>
        <type><![CDATA[<object>]]></type>
        <description></description>
      </in>
      <in>
        <name>object</name>
        <type><![CDATA[<object>]]></type>
        <description></description>
      </in>
    </ins>
    <outs>
      <out>
        <name>results</name>
        <type><![CDATA[<object>]]></type>
        <description></description>
      </out>
    </outs>
  </functiondef>
  <description></description>
  <seealso></seealso>
</entry>

<entry>
  <name><![CDATA[corba/definitionkind/<]]></name>
  <functiondef>
    <ins>
      <in>
        <name>lesser</name>
        <type><![CDATA[corba/<definitionkind>]]></type>
        <description></description>
      </in>
      <in>
        <name>greater</name>
        <type><![CDATA[corba/<definitionkind>]]></type>
        <description></description>
      </in>
    </ins>
    <outs>
      <out>
        <name>lesser?</name>
        <type><![CDATA[<boolean>]]></type>
        <description></description>
      </out>
    </outs>
  </functiondef>
  <description></description>
  <seealso></seealso>
</entry>

<entry>
  <name><![CDATA[corba/definitionkind/>]]></name>
  <functiondef>
    <ins>
      <in>
        <name>greater</name>
        <type><![CDATA[corba/<definitionkind>]]></type>
        <description></description>
      </in>
      <in>
        <name>lesser</name>
        <type><![CDATA[corba/<definitionkind>]]></type>
        <description></description>
      </in>
    </ins>
    <outs>
      <out>
        <name>greater?</name>
        <type><![CDATA[<boolean>]]></type>
        <description></description>
      </out>
    </outs>
  </functiondef>
  <description></description>
  <seealso></seealso>
</entry>

<entry>
  <name><![CDATA[corba/definitionkind/predecessor]]></name>
  <functiondef>
    <ins>
      <in>
        <name>symbol</name>
        <type><![CDATA[corba/<definitionkind>]]></type>
        <description></description>
      </in>
    </ins>
    <outs>
      <out>
        <name>pred</name>
        <type><![CDATA[corba/<definitionkind>]]></type>
        <description></description>
      </out>
    </outs>
  </functiondef>
  <description></description>
  <seealso></seealso>
</entry>

<entry>
  <name><![CDATA[corba/definitionkind/successor]]></name>
  <functiondef>
    <ins>
      <in>
        <name>symbol</name>
        <type><![CDATA[corba/<definitionkind>]]></type>
        <description></description>
      </in>
    </ins>
    <outs>
      <out>
        <name>succ</name>
        <type><![CDATA[corba/<definitionkind>]]></type>
        <description></description>
      </out>
    </outs>
  </functiondef>
  <description></description>
  <seealso></seealso>
</entry>

<entry>
  <name><![CDATA[corba/enumdef/members]]></name>
  <functiondef>
    <ins>
      <in>
        <name>object</name>
        <type><![CDATA[corba/<enumdef>]]></type>
        <description></description>
      </in>
    </ins>
    <outs>
      <out>
        <name>result</name>
        <type><![CDATA[corba/<enummemberseq>]]></type>
        <description></description>
      </out>
    </outs>
  </functiondef>
  <description></description>
  <seealso></seealso>
</entry>

<entry>
  <name><![CDATA[corba/enumdef/members-setter]]></name>
  <functiondef>
    <ins>
      <in>
        <name>new-value</name>
        <type><![CDATA[corba/<enummemberseq>]]></type>
        <description></description>
      </in>
      <in>
        <name>object</name>
        <type><![CDATA[corba/<enumdef>]]></type>
        <description></description>
      </in>
    </ins>
    <outs>
      <out>
        <name>result</name>
        <type><![CDATA[corba/<enummemberseq>]]></type>
        <description></description>
      </out>
    </outs>
  </functiondef>
  <description></description>
  <seealso></seealso>
</entry>

<entry>
  <name><![CDATA[corba/exceptiondef/members]]></name>
  <functiondef>
    <ins>
      <in>
        <name>object</name>
        <type><![CDATA[corba/<exceptiondef>]]></type>
        <description></description>
      </in>
    </ins>
    <outs>
      <out>
        <name>result</name>
        <type><![CDATA[corba/<structmemberseq>]]></type>
        <description></description>
      </out>
    </outs>
  </functiondef>
  <description></description>
  <seealso></seealso>
</entry>

<entry>
  <name><![CDATA[corba/exceptiondef/members-setter]]></name>
  <functiondef>
    <ins>
      <in>
        <name>new-value</name>
        <type><![CDATA[corba/<structmemberseq>]]></type>
        <description></description>
      </in>
      <in>
        <name>object</name>
        <type><![CDATA[corba/<exceptiondef>]]></type>
        <description></description>
      </in>
    </ins>
    <outs>
      <out>
        <name>result</name>
        <type><![CDATA[corba/<structmemberseq>]]></type>
        <description></description>
      </out>
    </outs>
  </functiondef>
  <description></description>
  <seealso></seealso>
</entry>

<entry>
  <name><![CDATA[corba/exceptiondef/type]]></name>
  <functiondef>
    <ins>
      <in>
        <name>object</name>
        <type><![CDATA[corba/<exceptiondef>]]></type>
        <description></description>
      </in>
    </ins>
    <outs>
      <out>
        <name>result</name>
        <type><![CDATA[corba/<typecode>]]></type>
        <description></description>
      </out>
    </outs>
  </functiondef>
  <description></description>
  <seealso></seealso>
</entry>

<entry>
  <name><![CDATA[corba/exceptiondescription/defined-in]]></name>
  <functiondef>
    <ins>
      <in>
        <name>object</name>
        <type><![CDATA[<object>]]></type>
        <description></description>
      </in>
    </ins>
    <outs>
      <out>
        <name>results</name>
        <type><![CDATA[<object>]]></type>
        <description></description>
      </out>
    </outs>
  </functiondef>
  <description></description>
  <seealso></seealso>
</entry>

<entry>
  <name><![CDATA[corba/exceptiondescription/defined-in-setter]]></name>
  <functiondef>
    <ins>
      <in>
        <name>value</name>
        <type><![CDATA[<object>]]></type>
        <description></description>
      </in>
      <in>
        <name>object</name>
        <type><![CDATA[<object>]]></type>
        <description></description>
      </in>
    </ins>
    <outs>
      <out>
        <name>results</name>
        <type><![CDATA[<object>]]></type>
        <description></description>
      </out>
    </outs>
  </functiondef>
  <description></description>
  <seealso></seealso>
</entry>

<entry>
  <name><![CDATA[corba/exceptiondescription/id]]></name>
  <functiondef>
    <ins>
      <in>
        <name>object</name>
        <type><![CDATA[<object>]]></type>
        <description></description>
      </in>
    </ins>
    <outs>
      <out>
        <name>results</name>
        <type><![CDATA[<object>]]></type>
        <description></description>
      </out>
    </outs>
  </functiondef>
  <description></description>
  <seealso></seealso>
</entry>

<entry>
  <name><![CDATA[corba/exceptiondescription/id-setter]]></name>
  <functiondef>
    <ins>
      <in>
        <name>value</name>
        <type><![CDATA[<object>]]></type>
        <description></description>
      </in>
      <in>
        <name>object</name>
        <type><![CDATA[<object>]]></type>
        <description></description>
      </in>
    </ins>
    <outs>
      <out>
        <name>results</name>
        <type><![CDATA[<object>]]></type>
        <description></description>
      </out>
    </outs>
  </functiondef>
  <description></description>
  <seealso></seealso>
</entry>

<entry>
  <name><![CDATA[corba/exceptiondescription/name]]></name>
  <functiondef>
    <ins>
      <in>
        <name>object</name>
        <type><![CDATA[<object>]]></type>
        <description></description>
      </in>
    </ins>
    <outs>
      <out>
        <name>results</name>
        <type><![CDATA[<object>]]></type>
        <description></description>
      </out>
    </outs>
  </functiondef>
  <description></description>
  <seealso></seealso>
</entry>

<entry>
  <name><![CDATA[corba/exceptiondescription/name-setter]]></name>
  <functiondef>
    <ins>
      <in>
        <name>value</name>
        <type><![CDATA[<object>]]></type>
        <description></description>
      </in>
      <in>
        <name>object</name>
        <type><![CDATA[<object>]]></type>
        <description></description>
      </in>
    </ins>
    <outs>
      <out>
        <name>results</name>
        <type><![CDATA[<object>]]></type>
        <description></description>
      </out>
    </outs>
  </functiondef>
  <description></description>
  <seealso></seealso>
</entry>

<entry>
  <name><![CDATA[corba/exceptiondescription/type]]></name>
  <functiondef>
    <ins>
      <in>
        <name>object</name>
        <type><![CDATA[<object>]]></type>
        <description></description>
      </in>
    </ins>
    <outs>
      <out>
        <name>results</name>
        <type><![CDATA[<object>]]></type>
        <description></description>
      </out>
    </outs>
  </functiondef>
  <description></description>
  <seealso></seealso>
</entry>

<entry>
  <name><![CDATA[corba/exceptiondescription/type-setter]]></name>
  <functiondef>
    <ins>
      <in>
        <name>value</name>
        <type><![CDATA[<object>]]></type>
        <description></description>
      </in>
      <in>
        <name>object</name>
        <type><![CDATA[<object>]]></type>
        <description></description>
      </in>
    </ins>
    <outs>
      <out>
        <name>results</name>
        <type><![CDATA[<object>]]></type>
        <description></description>
      </out>
    </outs>
  </functiondef>
  <description></description>
  <seealso></seealso>
</entry>

<entry>
  <name><![CDATA[corba/exceptiondescription/version]]></name>
  <functiondef>
    <ins>
      <in>
        <name>object</name>
        <type><![CDATA[<object>]]></type>
        <description></description>
      </in>
    </ins>
    <outs>
      <out>
        <name>results</name>
        <type><![CDATA[<object>]]></type>
        <description></description>
      </out>
    </outs>
  </functiondef>
  <description></description>
  <seealso></seealso>
</entry>

<entry>
  <name><![CDATA[corba/exceptiondescription/version-setter]]></name>
  <functiondef>
    <ins>
      <in>
        <name>value</name>
        <type><![CDATA[<object>]]></type>
        <description></description>
      </in>
      <in>
        <name>object</name>
        <type><![CDATA[<object>]]></type>
        <description></description>
      </in>
    </ins>
    <outs>
      <out>
        <name>results</name>
        <type><![CDATA[<object>]]></type>
        <description></description>
      </out>
    </outs>
  </functiondef>
  <description></description>
  <seealso></seealso>
</entry>

<entry>
  <name><![CDATA[corba/fixeddef/digits]]></name>
  <functiondef>
    <ins>
      <in>
        <name>object</name>
        <type><![CDATA[corba/<fixeddef>]]></type>
        <description></description>
      </in>
    </ins>
    <outs>
      <out>
        <name>result</name>
        <type><![CDATA[corba/<unsigned-short>]]></type>
        <description></description>
      </out>
    </outs>
  </functiondef>
  <description></description>
  <seealso></seealso>
</entry>

<entry>
  <name><![CDATA[corba/fixeddef/digits-setter]]></name>
  <functiondef>
    <ins>
      <in>
        <name>new-value</name>
        <type><![CDATA[corba/<unsigned-short>]]></type>
        <description></description>
      </in>
      <in>
        <name>object</name>
        <type><![CDATA[corba/<fixeddef>]]></type>
        <description></description>
      </in>
    </ins>
    <outs>
      <out>
        <name>result</name>
        <type><![CDATA[corba/<unsigned-short>]]></type>
        <description></description>
      </out>
    </outs>
  </functiondef>
  <description></description>
  <seealso></seealso>
</entry>

<entry>
  <name><![CDATA[corba/fixeddef/scale]]></name>
  <functiondef>
    <ins>
      <in>
        <name>object</name>
        <type><![CDATA[corba/<fixeddef>]]></type>
        <description></description>
      </in>
    </ins>
    <outs>
      <out>
        <name>result</name>
        <type><![CDATA[corba/<short>]]></type>
        <description></description>
      </out>
    </outs>
  </functiondef>
  <description></description>
  <seealso></seealso>
</entry>

<entry>
  <name><![CDATA[corba/fixeddef/scale-setter]]></name>
  <functiondef>
    <ins>
      <in>
        <name>new-value</name>
        <type><![CDATA[corba/<short>]]></type>
        <description></description>
      </in>
      <in>
        <name>object</name>
        <type><![CDATA[corba/<fixeddef>]]></type>
        <description></description>
      </in>
    </ins>
    <outs>
      <out>
        <name>result</name>
        <type><![CDATA[corba/<short>]]></type>
        <description></description>
      </out>
    </outs>
  </functiondef>
  <description></description>
  <seealso></seealso>
</entry>

<entry>
  <name><![CDATA[corba/free-mem/completed]]></name>
  <functiondef>
    <ins>
      <in>
        <name>object</name>
        <type><![CDATA[<object>]]></type>
        <description></description>
      </in>
    </ins>
    <outs>
      <out>
        <name>results</name>
        <type><![CDATA[<object>]]></type>
        <description></description>
      </out>
    </outs>
  </functiondef>
  <description></description>
  <seealso></seealso>
</entry>

<entry>
  <name><![CDATA[corba/free-mem/completed-setter]]></name>
  <functiondef>
    <ins>
      <in>
        <name>value</name>
        <type><![CDATA[<object>]]></type>
        <description></description>
      </in>
      <in>
        <name>object</name>
        <type><![CDATA[<object>]]></type>
        <description></description>
      </in>
    </ins>
    <outs>
      <out>
        <name>results</name>
        <type><![CDATA[<object>]]></type>
        <description></description>
      </out>
    </outs>
  </functiondef>
  <description></description>
  <seealso></seealso>
</entry>

<entry>
  <name><![CDATA[corba/free-mem/minor]]></name>
  <functiondef>
    <ins>
      <in>
        <name>object</name>
        <type><![CDATA[<object>]]></type>
        <description></description>
      </in>
    </ins>
    <outs>
      <out>
        <name>results</name>
        <type><![CDATA[<object>]]></type>
        <description></description>
      </out>
    </outs>
  </functiondef>
  <description></description>
  <seealso></seealso>
</entry>

<entry>
  <name><![CDATA[corba/free-mem/minor-setter]]></name>
  <functiondef>
    <ins>
      <in>
        <name>value</name>
        <type><![CDATA[<object>]]></type>
        <description></description>
      </in>
      <in>
        <name>object</name>
        <type><![CDATA[<object>]]></type>
        <description></description>
      </in>
    </ins>
    <outs>
      <out>
        <name>results</name>
        <type><![CDATA[<object>]]></type>
        <description></description>
      </out>
    </outs>
  </functiondef>
  <description></description>
  <seealso></seealso>
</entry>

<entry>
  <name><![CDATA[corba/idltype/type]]></name>
  <functiondef>
    <ins>
      <in>
        <name>object</name>
        <type><![CDATA[corba/<idltype>]]></type>
        <description></description>
      </in>
    </ins>
    <outs>
      <out>
        <name>result</name>
        <type><![CDATA[corba/<typecode>]]></type>
        <description></description>
      </out>
    </outs>
  </functiondef>
  <description></description>
  <seealso></seealso>
</entry>

<entry>
  <name><![CDATA[corba/imp-limit/completed]]></name>
  <functiondef>
    <ins>
      <in>
        <name>object</name>
        <type><![CDATA[<object>]]></type>
        <description></description>
      </in>
    </ins>
    <outs>
      <out>
        <name>results</name>
        <type><![CDATA[<object>]]></type>
        <description></description>
      </out>
    </outs>
  </functiondef>
  <description></description>
  <seealso></seealso>
</entry>

<entry>
  <name><![CDATA[corba/imp-limit/completed-setter]]></name>
  <functiondef>
    <ins>
      <in>
        <name>value</name>
        <type><![CDATA[<object>]]></type>
        <description></description>
      </in>
      <in>
        <name>object</name>
        <type><![CDATA[<object>]]></type>
        <description></description>
      </in>
    </ins>
    <outs>
      <out>
        <name>results</name>
        <type><![CDATA[<object>]]></type>
        <description></description>
      </out>
    </outs>
  </functiondef>
  <description></description>
  <seealso></seealso>
</entry>

<entry>
  <name><![CDATA[corba/imp-limit/minor]]></name>
  <functiondef>
    <ins>
      <in>
        <name>object</name>
        <type><![CDATA[<object>]]></type>
        <description></description>
      </in>
    </ins>
    <outs>
      <out>
        <name>results</name>
        <type><![CDATA[<object>]]></type>
        <description></description>
      </out>
    </outs>
  </functiondef>
  <description></description>
  <seealso></seealso>
</entry>

<entry>
  <name><![CDATA[corba/imp-limit/minor-setter]]></name>
  <functiondef>
    <ins>
      <in>
        <name>value</name>
        <type><![CDATA[<object>]]></type>
        <description></description>
      </in>
      <in>
        <name>object</name>
        <type><![CDATA[<object>]]></type>
        <description></description>
      </in>
    </ins>
    <outs>
      <out>
        <name>results</name>
        <type><![CDATA[<object>]]></type>
        <description></description>
      </out>
    </outs>
  </functiondef>
  <description></description>
  <seealso></seealso>
</entry>

<entry>
  <name><![CDATA[corba/initialize/completed]]></name>
  <functiondef>
    <ins>
      <in>
        <name>object</name>
        <type><![CDATA[<object>]]></type>
        <description></description>
      </in>
    </ins>
    <outs>
      <out>
        <name>results</name>
        <type><![CDATA[<object>]]></type>
        <description></description>
      </out>
    </outs>
  </functiondef>
  <description></description>
  <seealso></seealso>
</entry>

<entry>
  <name><![CDATA[corba/initialize/completed-setter]]></name>
  <functiondef>
    <ins>
      <in>
        <name>value</name>
        <type><![CDATA[<object>]]></type>
        <description></description>
      </in>
      <in>
        <name>object</name>
        <type><![CDATA[<object>]]></type>
        <description></description>
      </in>
    </ins>
    <outs>
      <out>
        <name>results</name>
        <type><![CDATA[<object>]]></type>
        <description></description>
      </out>
    </outs>
  </functiondef>
  <description></description>
  <seealso></seealso>
</entry>

<entry>
  <name><![CDATA[corba/initialize/minor]]></name>
  <functiondef>
    <ins>
      <in>
        <name>object</name>
        <type><![CDATA[<object>]]></type>
        <description></description>
      </in>
    </ins>
    <outs>
      <out>
        <name>results</name>
        <type><![CDATA[<object>]]></type>
        <description></description>
      </out>
    </outs>
  </functiondef>
  <description></description>
  <seealso></seealso>
</entry>

<entry>
  <name><![CDATA[corba/initialize/minor-setter]]></name>
  <functiondef>
    <ins>
      <in>
        <name>value</name>
        <type><![CDATA[<object>]]></type>
        <description></description>
      </in>
      <in>
        <name>object</name>
        <type><![CDATA[<object>]]></type>
        <description></description>
      </in>
    </ins>
    <outs>
      <out>
        <name>results</name>
        <type><![CDATA[<object>]]></type>
        <description></description>
      </out>
    </outs>
  </functiondef>
  <description></description>
  <seealso></seealso>
</entry>

<entry>
  <name><![CDATA[corba/interfacedef/<fullinterfacedescription>]]></name>
  <classdef>
    <modifiers></modifiers>
    <superclasses>
      <![CDATA[corba/<struct>]]>
    </superclasses>
    <keywords>
      <keyword>
        <name>attributes:</name>
        <type><![CDATA[corba/<attrdescriptionseq>]]></type>
        <description></description>
      </keyword>
      <keyword>
        <name>base-interfaces:</name>
        <type><![CDATA[corba/<repositoryidseq>]]></type>
        <description></description>
      </keyword>
      <keyword>
        <name>defined-in:</name>
        <type><![CDATA[corba/<repositoryid>]]></type>
        <description></description>
      </keyword>
      <keyword>
        <name>id:</name>
        <type><![CDATA[corba/<repositoryid>]]></type>
        <description></description>
      </keyword>
      <keyword>
        <name>name:</name>
        <type><![CDATA[corba/<identifier>]]></type>
        <description></description>
      </keyword>
      <keyword>
        <name>operations:</name>
        <type><![CDATA[corba/<opdescriptionseq>]]></type>
        <description></description>
      </keyword>
      <keyword>
        <name>type:</name>
        <type><![CDATA[corba/<typecode>]]></type>
        <description></description>
      </keyword>
      <keyword>
        <name>version:</name>
        <type><![CDATA[corba/<versionspec>]]></type>
        <description></description>
      </keyword>
    </keywords>
  </classdef>
  <description></description>
  <seealso></seealso>
</entry>

<entry>
  <name><![CDATA[corba/interfacedef/base-interfaces]]></name>
  <functiondef>
    <ins>
      <in>
        <name>object</name>
        <type><![CDATA[corba/<interfacedef>]]></type>
        <description></description>
      </in>
    </ins>
    <outs>
      <out>
        <name>result</name>
        <type><![CDATA[corba/<interfacedefseq>]]></type>
        <description></description>
      </out>
    </outs>
  </functiondef>
  <description>
The corba/interfacedef/base-interfaces attribute lists all the interfaces from which this interface
inherits. The corba/interfacedef/is-a operation returns #t if the interface on which it is invoked either
is identical to or inherits, directly or indirectly, from the interface identified by its
interface-id parameter. Otherwise it returns #f.
  </description>
  <seealso></seealso>
</entry>

<entry>
  <name><![CDATA[corba/interfacedef/base-interfaces-setter]]></name>
  <functiondef>
    <ins>
      <in>
        <name>new-value</name>
        <type><![CDATA[corba/<interfacedefseq>]]></type>
        <description></description>
      </in>
      <in>
        <name>object</name>
        <type><![CDATA[corba/<interfacedef>]]></type>
        <description></description>
      </in>
    </ins>
    <outs>
      <out>
        <name>result</name>
        <type><![CDATA[corba/<interfacedefseq>]]></type>
        <description></description>
      </out>
    </outs>
  </functiondef>
  <description>
<p>Setting the corba/interfacedef/base-interfaces attribute returns an error if the name attribute of any
object contained by this <![CDATA[corba/<interfacedef>]]> conflicts with the name attribute of any object
contained by any of the specified base <![CDATA[corba/<interfacedef>]]>s.</p>
  </description>
  <seealso></seealso>
</entry>

<entry>
  <name><![CDATA[corba/interfacedef/create-attribute]]></name>
  <functiondef>
    <ins>
      <in>
        <name>object</name>
        <type><![CDATA[corba/<interfacedef>]]></type>
        <description></description>
      </in>
      <in>
        <name>id</name>
        <type><![CDATA[corba/<repositoryid>]]></type>
        <description></description>
      </in>
      <in>
        <name>name</name>
        <type><![CDATA[corba/<identifier>]]></type>
        <description></description>
      </in>
      <in>
        <name>version</name>
        <type><![CDATA[corba/<versionspec>]]></type>
        <description></description>
      </in>
      <in>
        <name>type</name>
        <type><![CDATA[corba/<idltype>]]></type>
        <description></description>
      </in>
      <in>
        <name>mode</name>
        <type><![CDATA[corba/<attributemode>]]></type>
        <description></description>
      </in>
    </ins>
    <outs>
      <out>
        <name>result</name>
        <type><![CDATA[corba/<attributedef>]]></type>
        <description></description>
      </out>
    </outs>
  </functiondef>
  <description>
<p>The corba/interfacedef/create-attribute operation returns a new <![CDATA[corba/<attributedef>]]> contained in the
<![CDATA[corba/<interfacedef>]]> on which it is invoked. The id, name, version, type-def, and mode
attributes are set as specified. The type attribute is also set. The defined-in attribute
is initialized to identify the containing <![CDATA[corba/<interfacedef>]]>. An error is returned if an object
with the specified id already exists within this object's Repository, or if an object
with the specified name already exists within this <![CDATA[corba/<interfacedef>]]>.</p>
  </description>
  <seealso></seealso>
</entry>

<entry>
  <name><![CDATA[corba/interfacedef/create-operation]]></name>
  <functiondef>
    <ins>
      <in>
        <name>object</name>
        <type><![CDATA[corba/<interfacedef>]]></type>
        <description></description>
      </in>
      <in>
        <name>id</name>
        <type><![CDATA[corba/<repositoryid>]]></type>
        <description></description>
      </in>
      <in>
        <name>name</name>
        <type><![CDATA[corba/<identifier>]]></type>
        <description></description>
      </in>
      <in>
        <name>version</name>
        <type><![CDATA[corba/<versionspec>]]></type>
        <description></description>
      </in>
      <in>
        <name>result</name>
        <type><![CDATA[corba/<idltype>]]></type>
        <description></description>
      </in>
      <in>
        <name>mode</name>
        <type><![CDATA[corba/<operationmode>]]></type>
        <description></description>
      </in>
      <in>
        <name>params</name>
        <type><![CDATA[corba/<pardescriptionseq>]]></type>
        <description></description>
      </in>
      <in>
        <name>exceptions</name>
        <type><![CDATA[corba/<exceptiondefseq>]]></type>
        <description></description>
      </in>
      <in>
        <name>contexts</name>
        <type><![CDATA[corba/<contextidseq>]]></type>
        <description></description>
      </in>
    </ins>
    <outs>
      <out>
        <name>result</name>
        <type><![CDATA[corba/<operationdef>]]></type>
        <description></description>
      </out>
    </outs>
  </functiondef>
  <description>
<p>The corba/interfacedef/create-operation operation returns a new <![CDATA[corba/<operationdef>]]> contained in the
<![CDATA[corba/<interfacedef>]]> on which it is invoked. The id, name, version, result-def, mode,
params, exceptions, and contexts attributes are set as specified. The result
attribute is also set. The defined-in attribute is initialized to identify the containing
<![CDATA[corba/<interfacedef>]]>. An error is returned if an object with the specified id already exists
within this object's Repository, or if an object with the specified name already exists
within this <![CDATA[corba/<interfacedef>]]>.</p>
  </description>
  <seealso></seealso>
</entry>

<entry>
  <name><![CDATA[corba/interfacedef/describe-interface]]></name>
  <functiondef>
    <ins>
      <in>
        <name>object</name>
        <type><![CDATA[corba/<interfacedef>]]></type>
        <description></description>
      </in>
    </ins>
    <outs>
      <out>
        <name>result</name>
        <type><![CDATA[corba/interfacedef/<fullinterfacedescription>]]></type>
        <description></description>
      </out>
    </outs>
  </functiondef>
  <description>
<p>The corba/interfacedef/describe-interface operation returns a
<![CDATA[corba/interfacedef/<fullinterfacedescription>]]> describing
the interface, including its operations and attributes.</p>
  </description>
  <seealso></seealso>
</entry>

<entry>
  <name><![CDATA[corba/interfacedef/fullinterfacedescription/attributes]]></name>
  <functiondef>
    <ins>
      <in>
        <name>object</name>
        <type><![CDATA[<object>]]></type>
        <description></description>
      </in>
    </ins>
    <outs>
      <out>
        <name>results</name>
        <type><![CDATA[<object>]]></type>
        <description></description>
      </out>
    </outs>
  </functiondef>
  <description></description>
  <seealso></seealso>
</entry>

<entry>
  <name><![CDATA[corba/interfacedef/fullinterfacedescription/attributes-setter]]></name>
  <functiondef>
    <ins>
      <in>
        <name>value</name>
        <type><![CDATA[<object>]]></type>
        <description></description>
      </in>
      <in>
        <name>object</name>
        <type><![CDATA[<object>]]></type>
        <description></description>
      </in>
    </ins>
    <outs>
      <out>
        <name>results</name>
        <type><![CDATA[<object>]]></type>
        <description></description>
      </out>
    </outs>
  </functiondef>
  <description></description>
  <seealso></seealso>
</entry>

<entry>
  <name><![CDATA[corba/interfacedef/fullinterfacedescription/base-interfaces]]></name>
  <functiondef>
    <ins>
      <in>
        <name>object</name>
        <type><![CDATA[<object>]]></type>
        <description></description>
      </in>
    </ins>
    <outs>
      <out>
        <name>results</name>
        <type><![CDATA[<object>]]></type>
        <description></description>
      </out>
    </outs>
  </functiondef>
  <description></description>
  <seealso></seealso>
</entry>

<entry>
  <name><![CDATA[corba/interfacedef/fullinterfacedescription/base-interfaces-setter]]></name>
  <functiondef>
    <ins>
      <in>
        <name>value</name>
        <type><![CDATA[<object>]]></type>
        <description></description>
      </in>
      <in>
        <name>object</name>
        <type><![CDATA[<object>]]></type>
        <description></description>
      </in>
    </ins>
    <outs>
      <out>
        <name>results</name>
        <type><![CDATA[<object>]]></type>
        <description></description>
      </out>
    </outs>
  </functiondef>
  <description></description>
  <seealso></seealso>
</entry>

<entry>
  <name><![CDATA[corba/interfacedef/fullinterfacedescription/defined-in]]></name>
  <functiondef>
    <ins>
      <in>
        <name>object</name>
        <type><![CDATA[<object>]]></type>
        <description></description>
      </in>
    </ins>
    <outs>
      <out>
        <name>results</name>
        <type><![CDATA[<object>]]></type>
        <description></description>
      </out>
    </outs>
  </functiondef>
  <description></description>
  <seealso></seealso>
</entry>

<entry>
  <name><![CDATA[corba/interfacedef/fullinterfacedescription/defined-in-setter]]></name>
  <functiondef>
    <ins>
      <in>
        <name>value</name>
        <type><![CDATA[<object>]]></type>
        <description></description>
      </in>
      <in>
        <name>object</name>
        <type><![CDATA[<object>]]></type>
        <description></description>
      </in>
    </ins>
    <outs>
      <out>
        <name>results</name>
        <type><![CDATA[<object>]]></type>
        <description></description>
      </out>
    </outs>
  </functiondef>
  <description></description>
  <seealso></seealso>
</entry>

<entry>
  <name><![CDATA[corba/interfacedef/fullinterfacedescription/id]]></name>
  <functiondef>
    <ins>
      <in>
        <name>object</name>
        <type><![CDATA[<object>]]></type>
        <description></description>
      </in>
    </ins>
    <outs>
      <out>
        <name>results</name>
        <type><![CDATA[<object>]]></type>
        <description></description>
      </out>
    </outs>
  </functiondef>
  <description></description>
  <seealso></seealso>
</entry>

<entry>
  <name><![CDATA[corba/interfacedef/fullinterfacedescription/id-setter]]></name>
  <functiondef>
    <ins>
      <in>
        <name>value</name>
        <type><![CDATA[<object>]]></type>
        <description></description>
      </in>
      <in>
        <name>object</name>
        <type><![CDATA[<object>]]></type>
        <description></description>
      </in>
    </ins>
    <outs>
      <out>
        <name>results</name>
        <type><![CDATA[<object>]]></type>
        <description></description>
      </out>
    </outs>
  </functiondef>
  <description></description>
  <seealso></seealso>
</entry>

<entry>
  <name><![CDATA[corba/interfacedef/fullinterfacedescription/name]]></name>
  <functiondef>
    <ins>
      <in>
        <name>object</name>
        <type><![CDATA[<object>]]></type>
        <description></description>
      </in>
    </ins>
    <outs>
      <out>
        <name>results</name>
        <type><![CDATA[<object>]]></type>
        <description></description>
      </out>
    </outs>
  </functiondef>
  <description></description>
  <seealso></seealso>
</entry>

<entry>
  <name><![CDATA[corba/interfacedef/fullinterfacedescription/name-setter]]></name>
  <functiondef>
    <ins>
      <in>
        <name>value</name>
        <type><![CDATA[<object>]]></type>
        <description></description>
      </in>
      <in>
        <name>object</name>
        <type><![CDATA[<object>]]></type>
        <description></description>
      </in>
    </ins>
    <outs>
      <out>
        <name>results</name>
        <type><![CDATA[<object>]]></type>
        <description></description>
      </out>
    </outs>
  </functiondef>
  <description></description>
  <seealso></seealso>
</entry>

<entry>
  <name><![CDATA[corba/interfacedef/fullinterfacedescription/operations]]></name>
  <functiondef>
    <ins>
      <in>
        <name>object</name>
        <type><![CDATA[<object>]]></type>
        <description></description>
      </in>
    </ins>
    <outs>
      <out>
        <name>results</name>
        <type><![CDATA[<object>]]></type>
        <description></description>
      </out>
    </outs>
  </functiondef>
  <description></description>
  <seealso></seealso>
</entry>

<entry>
  <name><![CDATA[corba/interfacedef/fullinterfacedescription/operations-setter]]></name>
  <functiondef>
    <ins>
      <in>
        <name>value</name>
        <type><![CDATA[<object>]]></type>
        <description></description>
      </in>
      <in>
        <name>object</name>
        <type><![CDATA[<object>]]></type>
        <description></description>
      </in>
    </ins>
    <outs>
      <out>
        <name>results</name>
        <type><![CDATA[<object>]]></type>
        <description></description>
      </out>
    </outs>
  </functiondef>
  <description></description>
  <seealso></seealso>
</entry>

<entry>
  <name><![CDATA[corba/interfacedef/fullinterfacedescription/type]]></name>
  <functiondef>
    <ins>
      <in>
        <name>object</name>
        <type><![CDATA[<object>]]></type>
        <description></description>
      </in>
    </ins>
    <outs>
      <out>
        <name>results</name>
        <type><![CDATA[<object>]]></type>
        <description></description>
      </out>
    </outs>
  </functiondef>
  <description></description>
  <seealso></seealso>
</entry>

<entry>
  <name><![CDATA[corba/interfacedef/fullinterfacedescription/type-setter]]></name>
  <functiondef>
    <ins>
      <in>
        <name>value</name>
        <type><![CDATA[<object>]]></type>
        <description></description>
      </in>
      <in>
        <name>object</name>
        <type><![CDATA[<object>]]></type>
        <description></description>
      </in>
    </ins>
    <outs>
      <out>
        <name>results</name>
        <type><![CDATA[<object>]]></type>
        <description></description>
      </out>
    </outs>
  </functiondef>
  <description></description>
  <seealso></seealso>
</entry>

<entry>
  <name><![CDATA[corba/interfacedef/fullinterfacedescription/version]]></name>
  <functiondef>
    <ins>
      <in>
        <name>object</name>
        <type><![CDATA[<object>]]></type>
        <description></description>
      </in>
    </ins>
    <outs>
      <out>
        <name>results</name>
        <type><![CDATA[<object>]]></type>
        <description></description>
      </out>
    </outs>
  </functiondef>
  <description></description>
  <seealso></seealso>
</entry>

<entry>
  <name><![CDATA[corba/interfacedef/fullinterfacedescription/version-setter]]></name>
  <functiondef>
    <ins>
      <in>
        <name>value</name>
        <type><![CDATA[<object>]]></type>
        <description></description>
      </in>
      <in>
        <name>object</name>
        <type><![CDATA[<object>]]></type>
        <description></description>
      </in>
    </ins>
    <outs>
      <out>
        <name>results</name>
        <type><![CDATA[<object>]]></type>
        <description></description>
      </out>
    </outs>
  </functiondef>
  <description></description>
  <seealso></seealso>
</entry>

<entry>
  <name><![CDATA[corba/interfacedef/is-a]]></name>
  <functiondef>
    <ins>
      <in>
        <name>object</name>
        <type><![CDATA[corba/<interfacedef>]]></type>
        <description></description>
      </in>
      <in>
        <name>interface-id</name>
        <type><![CDATA[corba/<repositoryid>]]></type>
        <description></description>
      </in>
    </ins>
    <outs>
      <out>
        <name>result</name>
        <type><![CDATA[corba/<boolean>]]></type>
        <description></description>
      </out>
    </outs>
  </functiondef>
  <description>
<p>The logical-type-id is a string denoting a shared type identifier
(<![CDATA[corba/<repository>]]>). The operation returns true if the object
is really an instance of that type, including if that type is an
ancestor of the <emphasis>most derived</emphasis> of that object.</p>

<p>This operation exposes to application programmers functionality
that must already exist in ORBs which support <emphasis>type safe
narrow</emphasis> and allows programmers working in environments that
do not have compile time type checking to explicitly maintain type
safety.</p>
  </description>
  <seealso></seealso>
</entry>

<entry>
  <name><![CDATA[corba/interfacedescription/base-interfaces]]></name>
  <functiondef>
    <ins>
      <in>
        <name>object</name>
        <type><![CDATA[<object>]]></type>
        <description></description>
      </in>
    </ins>
    <outs>
      <out>
        <name>results</name>
        <type><![CDATA[<object>]]></type>
        <description></description>
      </out>
    </outs>
  </functiondef>
  <description></description>
  <seealso></seealso>
</entry>

<entry>
  <name><![CDATA[corba/interfacedescription/base-interfaces-setter]]></name>
  <functiondef>
    <ins>
      <in>
        <name>value</name>
        <type><![CDATA[<object>]]></type>
        <description></description>
      </in>
      <in>
        <name>object</name>
        <type><![CDATA[<object>]]></type>
        <description></description>
      </in>
    </ins>
    <outs>
      <out>
        <name>results</name>
        <type><![CDATA[<object>]]></type>
        <description></description>
      </out>
    </outs>
  </functiondef>
  <description></description>
  <seealso></seealso>
</entry>

<entry>
  <name><![CDATA[corba/interfacedescription/defined-in]]></name>
  <functiondef>
    <ins>
      <in>
        <name>object</name>
        <type><![CDATA[<object>]]></type>
        <description></description>
      </in>
    </ins>
    <outs>
      <out>
        <name>results</name>
        <type><![CDATA[<object>]]></type>
        <description></description>
      </out>
    </outs>
  </functiondef>
  <description></description>
  <seealso></seealso>
</entry>

<entry>
  <name><![CDATA[corba/interfacedescription/defined-in-setter]]></name>
  <functiondef>
    <ins>
      <in>
        <name>value</name>
        <type><![CDATA[<object>]]></type>
        <description></description>
      </in>
      <in>
        <name>object</name>
        <type><![CDATA[<object>]]></type>
        <description></description>
      </in>
    </ins>
    <outs>
      <out>
        <name>results</name>
        <type><![CDATA[<object>]]></type>
        <description></description>
      </out>
    </outs>
  </functiondef>
  <description></description>
  <seealso></seealso>
</entry>

<entry>
  <name><![CDATA[corba/interfacedescription/id]]></name>
  <functiondef>
    <ins>
      <in>
        <name>object</name>
        <type><![CDATA[<object>]]></type>
        <description></description>
      </in>
    </ins>
    <outs>
      <out>
        <name>results</name>
        <type><![CDATA[<object>]]></type>
        <description></description>
      </out>
    </outs>
  </functiondef>
  <description></description>
  <seealso></seealso>
</entry>

<entry>
  <name><![CDATA[corba/interfacedescription/id-setter]]></name>
  <functiondef>
    <ins>
      <in>
        <name>value</name>
        <type><![CDATA[<object>]]></type>
        <description></description>
      </in>
      <in>
        <name>object</name>
        <type><![CDATA[<object>]]></type>
        <description></description>
      </in>
    </ins>
    <outs>
      <out>
        <name>results</name>
        <type><![CDATA[<object>]]></type>
        <description></description>
      </out>
    </outs>
  </functiondef>
  <description></description>
  <seealso></seealso>
</entry>

<entry>
  <name><![CDATA[corba/interfacedescription/name]]></name>
  <functiondef>
    <ins>
      <in>
        <name>object</name>
        <type><![CDATA[<object>]]></type>
        <description></description>
      </in>
    </ins>
    <outs>
      <out>
        <name>results</name>
        <type><![CDATA[<object>]]></type>
        <description></description>
      </out>
    </outs>
  </functiondef>
  <description></description>
  <seealso></seealso>
</entry>

<entry>
  <name><![CDATA[corba/interfacedescription/name-setter]]></name>
  <functiondef>
    <ins>
      <in>
        <name>value</name>
        <type><![CDATA[<object>]]></type>
        <description></description>
      </in>
      <in>
        <name>object</name>
        <type><![CDATA[<object>]]></type>
        <description></description>
      </in>
    </ins>
    <outs>
      <out>
        <name>results</name>
        <type><![CDATA[<object>]]></type>
        <description></description>
      </out>
    </outs>
  </functiondef>
  <description></description>
  <seealso></seealso>
</entry>

<entry>
  <name><![CDATA[corba/interfacedescription/version]]></name>
  <functiondef>
    <ins>
      <in>
        <name>object</name>
        <type><![CDATA[<object>]]></type>
        <description></description>
      </in>
    </ins>
    <outs>
      <out>
        <name>results</name>
        <type><![CDATA[<object>]]></type>
        <description></description>
      </out>
    </outs>
  </functiondef>
  <description></description>
  <seealso></seealso>
</entry>

<entry>
  <name><![CDATA[corba/interfacedescription/version-setter]]></name>
  <functiondef>
    <ins>
      <in>
        <name>value</name>
        <type><![CDATA[<object>]]></type>
        <description></description>
      </in>
      <in>
        <name>object</name>
        <type><![CDATA[<object>]]></type>
        <description></description>
      </in>
    </ins>
    <outs>
      <out>
        <name>results</name>
        <type><![CDATA[<object>]]></type>
        <description></description>
      </out>
    </outs>
  </functiondef>
  <description></description>
  <seealso></seealso>
</entry>

<entry>
  <name><![CDATA[corba/internal/completed]]></name>
  <functiondef>
    <ins>
      <in>
        <name>object</name>
        <type><![CDATA[<object>]]></type>
        <description></description>
      </in>
    </ins>
    <outs>
      <out>
        <name>results</name>
        <type><![CDATA[<object>]]></type>
        <description></description>
      </out>
    </outs>
  </functiondef>
  <description></description>
  <seealso></seealso>
</entry>

<entry>
  <name><![CDATA[corba/internal/completed-setter]]></name>
  <functiondef>
    <ins>
      <in>
        <name>value</name>
        <type><![CDATA[<object>]]></type>
        <description></description>
      </in>
      <in>
        <name>object</name>
        <type><![CDATA[<object>]]></type>
        <description></description>
      </in>
    </ins>
    <outs>
      <out>
        <name>results</name>
        <type><![CDATA[<object>]]></type>
        <description></description>
      </out>
    </outs>
  </functiondef>
  <description></description>
  <seealso></seealso>
</entry>

<entry>
  <name><![CDATA[corba/internal/minor]]></name>
  <functiondef>
    <ins>
      <in>
        <name>object</name>
        <type><![CDATA[<object>]]></type>
        <description></description>
      </in>
    </ins>
    <outs>
      <out>
        <name>results</name>
        <type><![CDATA[<object>]]></type>
        <description></description>
      </out>
    </outs>
  </functiondef>
  <description></description>
  <seealso></seealso>
</entry>

<entry>
  <name><![CDATA[corba/internal/minor-setter]]></name>
  <functiondef>
    <ins>
      <in>
        <name>value</name>
        <type><![CDATA[<object>]]></type>
        <description></description>
      </in>
      <in>
        <name>object</name>
        <type><![CDATA[<object>]]></type>
        <description></description>
      </in>
    </ins>
    <outs>
      <out>
        <name>results</name>
        <type><![CDATA[<object>]]></type>
        <description></description>
      </out>
    </outs>
  </functiondef>
  <description></description>
  <seealso></seealso>
</entry>

<entry>
  <name><![CDATA[corba/intf-repos/completed]]></name>
  <functiondef>
    <ins>
      <in>
        <name>object</name>
        <type><![CDATA[<object>]]></type>
        <description></description>
      </in>
    </ins>
    <outs>
      <out>
        <name>results</name>
        <type><![CDATA[<object>]]></type>
        <description></description>
      </out>
    </outs>
  </functiondef>
  <description></description>
  <seealso></seealso>
</entry>

<entry>
  <name><![CDATA[corba/intf-repos/completed-setter]]></name>
  <functiondef>
    <ins>
      <in>
        <name>value</name>
        <type><![CDATA[<object>]]></type>
        <description></description>
      </in>
      <in>
        <name>object</name>
        <type><![CDATA[<object>]]></type>
        <description></description>
      </in>
    </ins>
    <outs>
      <out>
        <name>results</name>
        <type><![CDATA[<object>]]></type>
        <description></description>
      </out>
    </outs>
  </functiondef>
  <description></description>
  <seealso></seealso>
</entry>

<entry>
  <name><![CDATA[corba/intf-repos/minor]]></name>
  <functiondef>
    <ins>
      <in>
        <name>object</name>
        <type><![CDATA[<object>]]></type>
        <description></description>
      </in>
    </ins>
    <outs>
      <out>
        <name>results</name>
        <type><![CDATA[<object>]]></type>
        <description></description>
      </out>
    </outs>
  </functiondef>
  <description></description>
  <seealso></seealso>
</entry>

<entry>
  <name><![CDATA[corba/intf-repos/minor-setter]]></name>
  <functiondef>
    <ins>
      <in>
        <name>value</name>
        <type><![CDATA[<object>]]></type>
        <description></description>
      </in>
      <in>
        <name>object</name>
        <type><![CDATA[<object>]]></type>
        <description></description>
      </in>
    </ins>
    <outs>
      <out>
        <name>results</name>
        <type><![CDATA[<object>]]></type>
        <description></description>
      </out>
    </outs>
  </functiondef>
  <description></description>
  <seealso></seealso>
</entry>

<entry>
  <name><![CDATA[corba/inv-flag/completed]]></name>
  <functiondef>
    <ins>
      <in>
        <name>object</name>
        <type><![CDATA[<object>]]></type>
        <description></description>
      </in>
    </ins>
    <outs>
      <out>
        <name>results</name>
        <type><![CDATA[<object>]]></type>
        <description></description>
      </out>
    </outs>
  </functiondef>
  <description></description>
  <seealso></seealso>
</entry>

<entry>
  <name><![CDATA[corba/inv-flag/completed-setter]]></name>
  <functiondef>
    <ins>
      <in>
        <name>value</name>
        <type><![CDATA[<object>]]></type>
        <description></description>
      </in>
      <in>
        <name>object</name>
        <type><![CDATA[<object>]]></type>
        <description></description>
      </in>
    </ins>
    <outs>
      <out>
        <name>results</name>
        <type><![CDATA[<object>]]></type>
        <description></description>
      </out>
    </outs>
  </functiondef>
  <description></description>
  <seealso></seealso>
</entry>

<entry>
  <name><![CDATA[corba/inv-flag/minor]]></name>
  <functiondef>
    <ins>
      <in>
        <name>object</name>
        <type><![CDATA[<object>]]></type>
        <description></description>
      </in>
    </ins>
    <outs>
      <out>
        <name>results</name>
        <type><![CDATA[<object>]]></type>
        <description></description>
      </out>
    </outs>
  </functiondef>
  <description></description>
  <seealso></seealso>
</entry>

<entry>
  <name><![CDATA[corba/inv-flag/minor-setter]]></name>
  <functiondef>
    <ins>
      <in>
        <name>value</name>
        <type><![CDATA[<object>]]></type>
        <description></description>
      </in>
      <in>
        <name>object</name>
        <type><![CDATA[<object>]]></type>
        <description></description>
      </in>
    </ins>
    <outs>
      <out>
        <name>results</name>
        <type><![CDATA[<object>]]></type>
        <description></description>
      </out>
    </outs>
  </functiondef>
  <description></description>
  <seealso></seealso>
</entry>

<entry>
  <name><![CDATA[corba/inv-ident/completed]]></name>
  <functiondef>
    <ins>
      <in>
        <name>object</name>
        <type><![CDATA[<object>]]></type>
        <description></description>
      </in>
    </ins>
    <outs>
      <out>
        <name>results</name>
        <type><![CDATA[<object>]]></type>
        <description></description>
      </out>
    </outs>
  </functiondef>
  <description></description>
  <seealso></seealso>
</entry>

<entry>
  <name><![CDATA[corba/inv-ident/completed-setter]]></name>
  <functiondef>
    <ins>
      <in>
        <name>value</name>
        <type><![CDATA[<object>]]></type>
        <description></description>
      </in>
      <in>
        <name>object</name>
        <type><![CDATA[<object>]]></type>
        <description></description>
      </in>
    </ins>
    <outs>
      <out>
        <name>results</name>
        <type><![CDATA[<object>]]></type>
        <description></description>
      </out>
    </outs>
  </functiondef>
  <description></description>
  <seealso></seealso>
</entry>

<entry>
  <name><![CDATA[corba/inv-ident/minor]]></name>
  <functiondef>
    <ins>
      <in>
        <name>object</name>
        <type><![CDATA[<object>]]></type>
        <description></description>
      </in>
    </ins>
    <outs>
      <out>
        <name>results</name>
        <type><![CDATA[<object>]]></type>
        <description></description>
      </out>
    </outs>
  </functiondef>
  <description></description>
  <seealso></seealso>
</entry>

<entry>
  <name><![CDATA[corba/inv-ident/minor-setter]]></name>
  <functiondef>
    <ins>
      <in>
        <name>value</name>
        <type><![CDATA[<object>]]></type>
        <description></description>
      </in>
      <in>
        <name>object</name>
        <type><![CDATA[<object>]]></type>
        <description></description>
      </in>
    </ins>
    <outs>
      <out>
        <name>results</name>
        <type><![CDATA[<object>]]></type>
        <description></description>
      </out>
    </outs>
  </functiondef>
  <description></description>
  <seealso></seealso>
</entry>

<entry>
  <name><![CDATA[corba/inv-objref/completed]]></name>
  <functiondef>
    <ins>
      <in>
        <name>object</name>
        <type><![CDATA[<object>]]></type>
        <description></description>
      </in>
    </ins>
    <outs>
      <out>
        <name>results</name>
        <type><![CDATA[<object>]]></type>
        <description></description>
      </out>
    </outs>
  </functiondef>
  <description></description>
  <seealso></seealso>
</entry>

<entry>
  <name><![CDATA[corba/inv-objref/completed-setter]]></name>
  <functiondef>
    <ins>
      <in>
        <name>value</name>
        <type><![CDATA[<object>]]></type>
        <description></description>
      </in>
      <in>
        <name>object</name>
        <type><![CDATA[<object>]]></type>
        <description></description>
      </in>
    </ins>
    <outs>
      <out>
        <name>results</name>
        <type><![CDATA[<object>]]></type>
        <description></description>
      </out>
    </outs>
  </functiondef>
  <description></description>
  <seealso></seealso>
</entry>

<entry>
  <name><![CDATA[corba/inv-objref/minor]]></name>
  <functiondef>
    <ins>
      <in>
        <name>object</name>
        <type><![CDATA[<object>]]></type>
        <description></description>
      </in>
    </ins>
    <outs>
      <out>
        <name>results</name>
        <type><![CDATA[<object>]]></type>
        <description></description>
      </out>
    </outs>
  </functiondef>
  <description></description>
  <seealso></seealso>
</entry>

<entry>
  <name><![CDATA[corba/inv-objref/minor-setter]]></name>
  <functiondef>
    <ins>
      <in>
        <name>value</name>
        <type><![CDATA[<object>]]></type>
        <description></description>
      </in>
      <in>
        <name>object</name>
        <type><![CDATA[<object>]]></type>
        <description></description>
      </in>
    </ins>
    <outs>
      <out>
        <name>results</name>
        <type><![CDATA[<object>]]></type>
        <description></description>
      </out>
    </outs>
  </functiondef>
  <description></description>
  <seealso></seealso>
</entry>

<entry>
  <name><![CDATA[corba/invalid-transaction/completed]]></name>
  <functiondef>
    <ins>
      <in>
        <name>object</name>
        <type><![CDATA[<object>]]></type>
        <description></description>
      </in>
    </ins>
    <outs>
      <out>
        <name>results</name>
        <type><![CDATA[<object>]]></type>
        <description></description>
      </out>
    </outs>
  </functiondef>
  <description></description>
  <seealso></seealso>
</entry>

<entry>
  <name><![CDATA[corba/invalid-transaction/completed-setter]]></name>
  <functiondef>
    <ins>
      <in>
        <name>value</name>
        <type><![CDATA[<object>]]></type>
        <description></description>
      </in>
      <in>
        <name>object</name>
        <type><![CDATA[<object>]]></type>
        <description></description>
      </in>
    </ins>
    <outs>
      <out>
        <name>results</name>
        <type><![CDATA[<object>]]></type>
        <description></description>
      </out>
    </outs>
  </functiondef>
  <description></description>
  <seealso></seealso>
</entry>

<entry>
  <name><![CDATA[corba/invalid-transaction/minor]]></name>
  <functiondef>
    <ins>
      <in>
        <name>object</name>
        <type><![CDATA[<object>]]></type>
        <description></description>
      </in>
    </ins>
    <outs>
      <out>
        <name>results</name>
        <type><![CDATA[<object>]]></type>
        <description></description>
      </out>
    </outs>
  </functiondef>
  <description></description>
  <seealso></seealso>
</entry>

<entry>
  <name><![CDATA[corba/invalid-transaction/minor-setter]]></name>
  <functiondef>
    <ins>
      <in>
        <name>value</name>
        <type><![CDATA[<object>]]></type>
        <description></description>
      </in>
      <in>
        <name>object</name>
        <type><![CDATA[<object>]]></type>
        <description></description>
      </in>
    </ins>
    <outs>
      <out>
        <name>results</name>
        <type><![CDATA[<object>]]></type>
        <description></description>
      </out>
    </outs>
  </functiondef>
  <description></description>
  <seealso></seealso>
</entry>

<entry>
  <name><![CDATA[corba/irobject/def-kind]]></name>
  <functiondef>
    <ins>
      <in>
        <name>object</name>
        <type><![CDATA[corba/<irobject>]]></type>
        <description></description>
      </in>
    </ins>
    <outs>
      <out>
        <name>result</name>
        <type><![CDATA[corba/<definitionkind>]]></type>
        <description></description>
      </out>
    </outs>
  </functiondef>
  <description>
<p>The corba/irobject/def-kind attribute identifies the type of the definition.</p>
  </description>
  <seealso></seealso>
</entry>

<entry>
  <name><![CDATA[corba/irobject/destroy]]></name>
  <functiondef>
    <ins>
      <in>
        <name>object</name>
        <type><![CDATA[corba/<irobject>]]></type>
        <description></description>
      </in>
    </ins>
    <outs>
    </outs>
  </functiondef>
  <description>
<p>The corba/irobject/destroy operation causes the object to cease to
exist. If the object is a <![CDATA[corba/<container>]]>,
corba/irobject/destroy is applied to all its contents. If the object
contains an <![CDATA[corba/<idltype>]]> attribute for an anonymous
type, that <![CDATA[corba/<idltype>]]> is destroyed. If the object is
currently contained in some other object, it is removed. Invoking
corba/irobject/destroy on a <![CDATA[corba/<repository>]]> or on a
<![CDATA[corba/<primitivedef>]]> is an error. Implementations may vary
in their handling of references to an object that is being destroyed,
but the Repository should not be left in an incoherent state.</p>
  </description>
  <seealso></seealso>
</entry>

<entry>
  <name><![CDATA[corba/marshal/completed]]></name>
  <functiondef>
    <ins>
      <in>
        <name>object</name>
        <type><![CDATA[<object>]]></type>
        <description></description>
      </in>
    </ins>
    <outs>
      <out>
        <name>results</name>
        <type><![CDATA[<object>]]></type>
        <description></description>
      </out>
    </outs>
  </functiondef>
  <description></description>
  <seealso></seealso>
</entry>

<entry>
  <name><![CDATA[corba/marshal/completed-setter]]></name>
  <functiondef>
    <ins>
      <in>
        <name>value</name>
        <type><![CDATA[<object>]]></type>
        <description></description>
      </in>
      <in>
        <name>object</name>
        <type><![CDATA[<object>]]></type>
        <description></description>
      </in>
    </ins>
    <outs>
      <out>
        <name>results</name>
        <type><![CDATA[<object>]]></type>
        <description></description>
      </out>
    </outs>
  </functiondef>
  <description></description>
  <seealso></seealso>
</entry>

<entry>
  <name><![CDATA[corba/marshal/minor]]></name>
  <functiondef>
    <ins>
      <in>
        <name>object</name>
        <type><![CDATA[<object>]]></type>
        <description></description>
      </in>
    </ins>
    <outs>
      <out>
        <name>results</name>
        <type><![CDATA[<object>]]></type>
        <description></description>
      </out>
    </outs>
  </functiondef>
  <description></description>
  <seealso></seealso>
</entry>

<entry>
  <name><![CDATA[corba/marshal/minor-setter]]></name>
  <functiondef>
    <ins>
      <in>
        <name>value</name>
        <type><![CDATA[<object>]]></type>
        <description></description>
      </in>
      <in>
        <name>object</name>
        <type><![CDATA[<object>]]></type>
        <description></description>
      </in>
    </ins>
    <outs>
      <out>
        <name>results</name>
        <type><![CDATA[<object>]]></type>
        <description></description>
      </out>
    </outs>
  </functiondef>
  <description></description>
  <seealso></seealso>
</entry>

<entry>
  <name><![CDATA[corba/moduledescription/defined-in]]></name>
  <functiondef>
    <ins>
      <in>
        <name>object</name>
        <type><![CDATA[<object>]]></type>
        <description></description>
      </in>
    </ins>
    <outs>
      <out>
        <name>results</name>
        <type><![CDATA[<object>]]></type>
        <description></description>
      </out>
    </outs>
  </functiondef>
  <description></description>
  <seealso></seealso>
</entry>

<entry>
  <name><![CDATA[corba/moduledescription/defined-in-setter]]></name>
  <functiondef>
    <ins>
      <in>
        <name>value</name>
        <type><![CDATA[<object>]]></type>
        <description></description>
      </in>
      <in>
        <name>object</name>
        <type><![CDATA[<object>]]></type>
        <description></description>
      </in>
    </ins>
    <outs>
      <out>
        <name>results</name>
        <type><![CDATA[<object>]]></type>
        <description></description>
      </out>
    </outs>
  </functiondef>
  <description></description>
  <seealso></seealso>
</entry>

<entry>
  <name><![CDATA[corba/moduledescription/id]]></name>
  <functiondef>
    <ins>
      <in>
        <name>object</name>
        <type><![CDATA[<object>]]></type>
        <description></description>
      </in>
    </ins>
    <outs>
      <out>
        <name>results</name>
        <type><![CDATA[<object>]]></type>
        <description></description>
      </out>
    </outs>
  </functiondef>
  <description></description>
  <seealso></seealso>
</entry>

<entry>
  <name><![CDATA[corba/moduledescription/id-setter]]></name>
  <functiondef>
    <ins>
      <in>
        <name>value</name>
        <type><![CDATA[<object>]]></type>
        <description></description>
      </in>
      <in>
        <name>object</name>
        <type><![CDATA[<object>]]></type>
        <description></description>
      </in>
    </ins>
    <outs>
      <out>
        <name>results</name>
        <type><![CDATA[<object>]]></type>
        <description></description>
      </out>
    </outs>
  </functiondef>
  <description></description>
  <seealso></seealso>
</entry>

<entry>
  <name><![CDATA[corba/moduledescription/name]]></name>
  <functiondef>
    <ins>
      <in>
        <name>object</name>
        <type><![CDATA[<object>]]></type>
        <description></description>
      </in>
    </ins>
    <outs>
      <out>
        <name>results</name>
        <type><![CDATA[<object>]]></type>
        <description></description>
      </out>
    </outs>
  </functiondef>
  <description></description>
  <seealso></seealso>
</entry>

<entry>
  <name><![CDATA[corba/moduledescription/name-setter]]></name>
  <functiondef>
    <ins>
      <in>
        <name>value</name>
        <type><![CDATA[<object>]]></type>
        <description></description>
      </in>
      <in>
        <name>object</name>
        <type><![CDATA[<object>]]></type>
        <description></description>
      </in>
    </ins>
    <outs>
      <out>
        <name>results</name>
        <type><![CDATA[<object>]]></type>
        <description></description>
      </out>
    </outs>
  </functiondef>
  <description></description>
  <seealso></seealso>
</entry>

<entry>
  <name><![CDATA[corba/moduledescription/version]]></name>
  <functiondef>
    <ins>
      <in>
        <name>object</name>
        <type><![CDATA[<object>]]></type>
        <description></description>
      </in>
    </ins>
    <outs>
      <out>
        <name>results</name>
        <type><![CDATA[<object>]]></type>
        <description></description>
      </out>
    </outs>
  </functiondef>
  <description></description>
  <seealso></seealso>
</entry>

<entry>
  <name><![CDATA[corba/moduledescription/version-setter]]></name>
  <functiondef>
    <ins>
      <in>
        <name>value</name>
        <type><![CDATA[<object>]]></type>
        <description></description>
      </in>
      <in>
        <name>object</name>
        <type><![CDATA[<object>]]></type>
        <description></description>
      </in>
    </ins>
    <outs>
      <out>
        <name>results</name>
        <type><![CDATA[<object>]]></type>
        <description></description>
      </out>
    </outs>
  </functiondef>
  <description></description>
  <seealso></seealso>
</entry>

<entry>
  <name><![CDATA[corba/namedvalue/arg-modes]]></name>
  <functiondef>
    <ins>
      <in>
        <name>object</name>
        <type><![CDATA[<object>]]></type>
        <description></description>
      </in>
    </ins>
    <outs>
      <out>
        <name>results</name>
        <type><![CDATA[<object>]]></type>
        <description></description>
      </out>
    </outs>
  </functiondef>
  <description></description>
  <seealso></seealso>
</entry>

<entry>
  <name><![CDATA[corba/namedvalue/argument]]></name>
  <functiondef>
    <ins>
      <in>
        <name>object</name>
        <type><![CDATA[<object>]]></type>
        <description></description>
      </in>
    </ins>
    <outs>
      <out>
        <name>results</name>
        <type><![CDATA[<object>]]></type>
        <description></description>
      </out>
    </outs>
  </functiondef>
  <description></description>
  <seealso></seealso>
</entry>

<entry>
  <name><![CDATA[corba/namedvalue/len]]></name>
  <functiondef>
    <ins>
      <in>
        <name>object</name>
        <type><![CDATA[<object>]]></type>
        <description></description>
      </in>
    </ins>
    <outs>
      <out>
        <name>results</name>
        <type><![CDATA[<object>]]></type>
        <description></description>
      </out>
    </outs>
  </functiondef>
  <description></description>
  <seealso></seealso>
</entry>

<entry>
  <name><![CDATA[corba/namedvalue/name]]></name>
  <functiondef>
    <ins>
      <in>
        <name>object</name>
        <type><![CDATA[<object>]]></type>
        <description></description>
      </in>
    </ins>
    <outs>
      <out>
        <name>results</name>
        <type><![CDATA[<object>]]></type>
        <description></description>
      </out>
    </outs>
  </functiondef>
  <description></description>
  <seealso></seealso>
</entry>

<entry>
  <name><![CDATA[corba/no-implement/completed]]></name>
  <functiondef>
    <ins>
      <in>
        <name>object</name>
        <type><![CDATA[<object>]]></type>
        <description></description>
      </in>
    </ins>
    <outs>
      <out>
        <name>results</name>
        <type><![CDATA[<object>]]></type>
        <description></description>
      </out>
    </outs>
  </functiondef>
  <description></description>
  <seealso></seealso>
</entry>

<entry>
  <name><![CDATA[corba/no-implement/completed-setter]]></name>
  <functiondef>
    <ins>
      <in>
        <name>value</name>
        <type><![CDATA[<object>]]></type>
        <description></description>
      </in>
      <in>
        <name>object</name>
        <type><![CDATA[<object>]]></type>
        <description></description>
      </in>
    </ins>
    <outs>
      <out>
        <name>results</name>
        <type><![CDATA[<object>]]></type>
        <description></description>
      </out>
    </outs>
  </functiondef>
  <description></description>
  <seealso></seealso>
</entry>

<entry>
  <name><![CDATA[corba/no-implement/minor]]></name>
  <functiondef>
    <ins>
      <in>
        <name>object</name>
        <type><![CDATA[<object>]]></type>
        <description></description>
      </in>
    </ins>
    <outs>
      <out>
        <name>results</name>
        <type><![CDATA[<object>]]></type>
        <description></description>
      </out>
    </outs>
  </functiondef>
  <description></description>
  <seealso></seealso>
</entry>

<entry>
  <name><![CDATA[corba/no-implement/minor-setter]]></name>
  <functiondef>
    <ins>
      <in>
        <name>value</name>
        <type><![CDATA[<object>]]></type>
        <description></description>
      </in>
      <in>
        <name>object</name>
        <type><![CDATA[<object>]]></type>
        <description></description>
      </in>
    </ins>
    <outs>
      <out>
        <name>results</name>
        <type><![CDATA[<object>]]></type>
        <description></description>
      </out>
    </outs>
  </functiondef>
  <description></description>
  <seealso></seealso>
</entry>

<entry>
  <name><![CDATA[corba/no-memory/completed]]></name>
  <functiondef>
    <ins>
      <in>
        <name>object</name>
        <type><![CDATA[<object>]]></type>
        <description></description>
      </in>
    </ins>
    <outs>
      <out>
        <name>results</name>
        <type><![CDATA[<object>]]></type>
        <description></description>
      </out>
    </outs>
  </functiondef>
  <description></description>
  <seealso></seealso>
</entry>

<entry>
  <name><![CDATA[corba/no-memory/completed-setter]]></name>
  <functiondef>
    <ins>
      <in>
        <name>value</name>
        <type><![CDATA[<object>]]></type>
        <description></description>
      </in>
      <in>
        <name>object</name>
        <type><![CDATA[<object>]]></type>
        <description></description>
      </in>
    </ins>
    <outs>
      <out>
        <name>results</name>
        <type><![CDATA[<object>]]></type>
        <description></description>
      </out>
    </outs>
  </functiondef>
  <description></description>
  <seealso></seealso>
</entry>

<entry>
  <name><![CDATA[corba/no-memory/minor]]></name>
  <functiondef>
    <ins>
      <in>
        <name>object</name>
        <type><![CDATA[<object>]]></type>
        <description></description>
      </in>
    </ins>
    <outs>
      <out>
        <name>results</name>
        <type><![CDATA[<object>]]></type>
        <description></description>
      </out>
    </outs>
  </functiondef>
  <description></description>
  <seealso></seealso>
</entry>

<entry>
  <name><![CDATA[corba/no-memory/minor-setter]]></name>
  <functiondef>
    <ins>
      <in>
        <name>value</name>
        <type><![CDATA[<object>]]></type>
        <description></description>
      </in>
      <in>
        <name>object</name>
        <type><![CDATA[<object>]]></type>
        <description></description>
      </in>
    </ins>
    <outs>
      <out>
        <name>results</name>
        <type><![CDATA[<object>]]></type>
        <description></description>
      </out>
    </outs>
  </functiondef>
  <description></description>
  <seealso></seealso>
</entry>

<entry>
  <name><![CDATA[corba/no-permission/completed]]></name>
  <functiondef>
    <ins>
      <in>
        <name>object</name>
        <type><![CDATA[<object>]]></type>
        <description></description>
      </in>
    </ins>
    <outs>
      <out>
        <name>results</name>
        <type><![CDATA[<object>]]></type>
        <description></description>
      </out>
    </outs>
  </functiondef>
  <description></description>
  <seealso></seealso>
</entry>

<entry>
  <name><![CDATA[corba/no-permission/completed-setter]]></name>
  <functiondef>
    <ins>
      <in>
        <name>value</name>
        <type><![CDATA[<object>]]></type>
        <description></description>
      </in>
      <in>
        <name>object</name>
        <type><![CDATA[<object>]]></type>
        <description></description>
      </in>
    </ins>
    <outs>
      <out>
        <name>results</name>
        <type><![CDATA[<object>]]></type>
        <description></description>
      </out>
    </outs>
  </functiondef>
  <description></description>
  <seealso></seealso>
</entry>

<entry>
  <name><![CDATA[corba/no-permission/minor]]></name>
  <functiondef>
    <ins>
      <in>
        <name>object</name>
        <type><![CDATA[<object>]]></type>
        <description></description>
      </in>
    </ins>
    <outs>
      <out>
        <name>results</name>
        <type><![CDATA[<object>]]></type>
        <description></description>
      </out>
    </outs>
  </functiondef>
  <description></description>
  <seealso></seealso>
</entry>

<entry>
  <name><![CDATA[corba/no-permission/minor-setter]]></name>
  <functiondef>
    <ins>
      <in>
        <name>value</name>
        <type><![CDATA[<object>]]></type>
        <description></description>
      </in>
      <in>
        <name>object</name>
        <type><![CDATA[<object>]]></type>
        <description></description>
      </in>
    </ins>
    <outs>
      <out>
        <name>results</name>
        <type><![CDATA[<object>]]></type>
        <description></description>
      </out>
    </outs>
  </functiondef>
  <description></description>
  <seealso></seealso>
</entry>

<entry>
  <name><![CDATA[corba/no-resources/completed]]></name>
  <functiondef>
    <ins>
      <in>
        <name>object</name>
        <type><![CDATA[<object>]]></type>
        <description></description>
      </in>
    </ins>
    <outs>
      <out>
        <name>results</name>
        <type><![CDATA[<object>]]></type>
        <description></description>
      </out>
    </outs>
  </functiondef>
  <description></description>
  <seealso></seealso>
</entry>

<entry>
  <name><![CDATA[corba/no-resources/completed-setter]]></name>
  <functiondef>
    <ins>
      <in>
        <name>value</name>
        <type><![CDATA[<object>]]></type>
        <description></description>
      </in>
      <in>
        <name>object</name>
        <type><![CDATA[<object>]]></type>
        <description></description>
      </in>
    </ins>
    <outs>
      <out>
        <name>results</name>
        <type><![CDATA[<object>]]></type>
        <description></description>
      </out>
    </outs>
  </functiondef>
  <description></description>
  <seealso></seealso>
</entry>

<entry>
  <name><![CDATA[corba/no-resources/minor]]></name>
  <functiondef>
    <ins>
      <in>
        <name>object</name>
        <type><![CDATA[<object>]]></type>
        <description></description>
      </in>
    </ins>
    <outs>
      <out>
        <name>results</name>
        <type><![CDATA[<object>]]></type>
        <description></description>
      </out>
    </outs>
  </functiondef>
  <description></description>
  <seealso></seealso>
</entry>

<entry>
  <name><![CDATA[corba/no-resources/minor-setter]]></name>
  <functiondef>
    <ins>
      <in>
        <name>value</name>
        <type><![CDATA[<object>]]></type>
        <description></description>
      </in>
      <in>
        <name>object</name>
        <type><![CDATA[<object>]]></type>
        <description></description>
      </in>
    </ins>
    <outs>
      <out>
        <name>results</name>
        <type><![CDATA[<object>]]></type>
        <description></description>
      </out>
    </outs>
  </functiondef>
  <description></description>
  <seealso></seealso>
</entry>

<entry>
  <name><![CDATA[corba/no-response/completed]]></name>
  <functiondef>
    <ins>
      <in>
        <name>object</name>
        <type><![CDATA[<object>]]></type>
        <description></description>
      </in>
    </ins>
    <outs>
      <out>
        <name>results</name>
        <type><![CDATA[<object>]]></type>
        <description></description>
      </out>
    </outs>
  </functiondef>
  <description></description>
  <seealso></seealso>
</entry>

<entry>
  <name><![CDATA[corba/no-response/completed-setter]]></name>
  <functiondef>
    <ins>
      <in>
        <name>value</name>
        <type><![CDATA[<object>]]></type>
        <description></description>
      </in>
      <in>
        <name>object</name>
        <type><![CDATA[<object>]]></type>
        <description></description>
      </in>
    </ins>
    <outs>
      <out>
        <name>results</name>
        <type><![CDATA[<object>]]></type>
        <description></description>
      </out>
    </outs>
  </functiondef>
  <description></description>
  <seealso></seealso>
</entry>

<entry>
  <name><![CDATA[corba/no-response/minor]]></name>
  <functiondef>
    <ins>
      <in>
        <name>object</name>
        <type><![CDATA[<object>]]></type>
        <description></description>
      </in>
    </ins>
    <outs>
      <out>
        <name>results</name>
        <type><![CDATA[<object>]]></type>
        <description></description>
      </out>
    </outs>
  </functiondef>
  <description></description>
  <seealso></seealso>
</entry>

<entry>
  <name><![CDATA[corba/no-response/minor-setter]]></name>
  <functiondef>
    <ins>
      <in>
        <name>value</name>
        <type><![CDATA[<object>]]></type>
        <description></description>
      </in>
      <in>
        <name>object</name>
        <type><![CDATA[<object>]]></type>
        <description></description>
      </in>
    </ins>
    <outs>
      <out>
        <name>results</name>
        <type><![CDATA[<object>]]></type>
        <description></description>
      </out>
    </outs>
  </functiondef>
  <description></description>
  <seealso></seealso>
</entry>

<entry>
  <name><![CDATA[corba/obj-adapter/completed]]></name>
  <functiondef>
    <ins>
      <in>
        <name>object</name>
        <type><![CDATA[<object>]]></type>
        <description></description>
      </in>
    </ins>
    <outs>
      <out>
        <name>results</name>
        <type><![CDATA[<object>]]></type>
        <description></description>
      </out>
    </outs>
  </functiondef>
  <description></description>
  <seealso></seealso>
</entry>

<entry>
  <name><![CDATA[corba/obj-adapter/completed-setter]]></name>
  <functiondef>
    <ins>
      <in>
        <name>value</name>
        <type><![CDATA[<object>]]></type>
        <description></description>
      </in>
      <in>
        <name>object</name>
        <type><![CDATA[<object>]]></type>
        <description></description>
      </in>
    </ins>
    <outs>
      <out>
        <name>results</name>
        <type><![CDATA[<object>]]></type>
        <description></description>
      </out>
    </outs>
  </functiondef>
  <description></description>
  <seealso></seealso>
</entry>

<entry>
  <name><![CDATA[corba/obj-adapter/minor]]></name>
  <functiondef>
    <ins>
      <in>
        <name>object</name>
        <type><![CDATA[<object>]]></type>
        <description></description>
      </in>
    </ins>
    <outs>
      <out>
        <name>results</name>
        <type><![CDATA[<object>]]></type>
        <description></description>
      </out>
    </outs>
  </functiondef>
  <description></description>
  <seealso></seealso>
</entry>

<entry>
  <name><![CDATA[corba/obj-adapter/minor-setter]]></name>
  <functiondef>
    <ins>
      <in>
        <name>value</name>
        <type><![CDATA[<object>]]></type>
        <description></description>
      </in>
      <in>
        <name>object</name>
        <type><![CDATA[<object>]]></type>
        <description></description>
      </in>
    </ins>
    <outs>
      <out>
        <name>results</name>
        <type><![CDATA[<object>]]></type>
        <description></description>
      </out>
    </outs>
  </functiondef>
  <description></description>
  <seealso></seealso>
</entry>

<entry>
  <name><![CDATA[corba/object-not-exist/completed]]></name>
  <functiondef>
    <ins>
      <in>
        <name>object</name>
        <type><![CDATA[<object>]]></type>
        <description></description>
      </in>
    </ins>
    <outs>
      <out>
        <name>results</name>
        <type><![CDATA[<object>]]></type>
        <description></description>
      </out>
    </outs>
  </functiondef>
  <description></description>
  <seealso></seealso>
</entry>

<entry>
  <name><![CDATA[corba/object-not-exist/completed-setter]]></name>
  <functiondef>
    <ins>
      <in>
        <name>value</name>
        <type><![CDATA[<object>]]></type>
        <description></description>
      </in>
      <in>
        <name>object</name>
        <type><![CDATA[<object>]]></type>
        <description></description>
      </in>
    </ins>
    <outs>
      <out>
        <name>results</name>
        <type><![CDATA[<object>]]></type>
        <description></description>
      </out>
    </outs>
  </functiondef>
  <description></description>
  <seealso></seealso>
</entry>

<entry>
  <name><![CDATA[corba/object-not-exist/minor]]></name>
  <functiondef>
    <ins>
      <in>
        <name>object</name>
        <type><![CDATA[<object>]]></type>
        <description></description>
      </in>
    </ins>
    <outs>
      <out>
        <name>results</name>
        <type><![CDATA[<object>]]></type>
        <description></description>
      </out>
    </outs>
  </functiondef>
  <description></description>
  <seealso></seealso>
</entry>

<entry>
  <name><![CDATA[corba/object-not-exist/minor-setter]]></name>
  <functiondef>
    <ins>
      <in>
        <name>value</name>
        <type><![CDATA[<object>]]></type>
        <description></description>
      </in>
      <in>
        <name>object</name>
        <type><![CDATA[<object>]]></type>
        <description></description>
      </in>
    </ins>
    <outs>
      <out>
        <name>results</name>
        <type><![CDATA[<object>]]></type>
        <description></description>
      </out>
    </outs>
  </functiondef>
  <description></description>
  <seealso></seealso>
</entry>

<entry>
  <name><![CDATA[corba/object/create-request]]></name>
  <functiondef>
    <ins>
      <in>
        <name>object</name>
        <type><![CDATA[<object>]]></type>
        <description></description>
      </in>
      <in>
        <name>ctx</name>
        <type><![CDATA[corba/<context>]]></type>
        <description></description>
      </in>
      <in>
        <name>operation</name>
        <type><![CDATA[corba/<identifier>]]></type>
        <description></description>
      </in>
      <in>
        <name>arg-list</name>
        <type><![CDATA[corba/<nvlist>]]></type>
        <description></description>
      </in>
      <in>
        <name>result</name>
        <type><![CDATA[corba/<namedvalue>]]></type>
        <description></description>
      </in>
      <in>
        <name>req-flags</name>
        <type><![CDATA[corba/<flags>]]></type>
        <description></description>
      </in>
    </ins>
    <outs>
      <out>
        <name>result</name>
        <type><![CDATA[corba/<namedvalue>]]></type>
        <description></description>
      </out>
      <out>
        <name>request</name>
        <type><![CDATA[corba/<request>]]></type>
        <description></description>
      </out>
    </outs>
  </functiondef>
  <description>
<p>The corba/object/create-request operation is performed on the Object which is to
be invoked.</p>

<p>This operation creates an ORB request. The actual invocation occurs
by calling corba/request/invoke or by using the corba/request/send and
corba/request/get-response calls.</p>

<p>The operation name specified on corba/object/create-request is the
same operation identifier that is specified in the OMG IDL definition
for this operation. In the case of attributes, it is the name as
constructed following the rules specified in the ServerRequest
interface as described in the DSI in
"ServerRequestPseudo-Object" on page 6-3.</p>

<p>The arg-list, if specified, contains a list of arguments (input,
output, and/or input/output) which become associated with the
request. If arg-list is empty, the arguments (if any) must be
specified using the corba/request/add-arg call below.</p>

<p>Arguments may be associated with a request by passing in an
argument list or by using repetitive calls to
corba/request/add-arg. One mechanism or the other may be used for
supplying arguments to a given request; a mixture of the two
approaches is not supported.</p>

<p>If specified, the arg-list becomes associated with the request;
until the invoke call has completed (or the request has been deleted),
the ORB assumes that arg-list (and any values it points to) remains
unchanged.</p>

<p>When specifying an argument list, the value for each
argument must be specified. An argument's datatype, name, and usage
flags (i.e., in, out, inout) may also be specified; if so indicated,
arguments are validated for data type, order, name, and usage
correctness against the set of arguments expected for the indicated
operation.  An implementation of the request services may relax the
order constraint (and allow arguments to be specified out of order) by
doing ordering based upon argument name.  The context properties
associated with the operation are passed to the object
implementation. The object implementation may not modify the context
information passed to it.</p>

<p>The operation result is placed in the result argument after the invocation completes.</p>

<p>The req_flags argument is defined as a bitmask (long) that may
contain the following flag values:</p>

<p>none are meaningful in Dylan at present.</p>
  </description>
  <seealso></seealso>
</entry>

<entry>
  <name><![CDATA[corba/object/duplicate]]></name>
  <functiondef>
    <ins>
      <in>
        <name>object</name>
        <type><![CDATA[<object>]]></type>
        <description></description>
      </in>
    </ins>
    <outs>
      <out>
        <name>result</name>
        <type><![CDATA[corba/<object>]]></type>
        <description></description>
      </out>
    </outs>
  </functiondef>
  <description>
<p>This is a null operation in Functional Developer ORB.</p>
  </description>
  <seealso></seealso>
</entry>

<entry>
  <name><![CDATA[corba/object/get-interface]]></name>
  <functiondef>
    <ins>
      <in>
        <name>object</name>
        <type><![CDATA[<object>]]></type>
        <description></description>
      </in>
    </ins>
    <outs>
      <out>
        <name>result</name>
        <type><![CDATA[corba/<interfacedef>]]></type>
        <description></description>
      </out>
    </outs>
  </functiondef>
  <description>
<p>An operation on the object reference, corba/object/get-interface,
returns an object in the Interface Repository, which provides type
information that may be useful to a program. See the Interface
Repository chapter for a definition of operations on the Interface
Repository.</p>
  </description>
  <seealso></seealso>
</entry>

<entry>
  <name><![CDATA[corba/object/hash]]></name>
  <functiondef>
    <ins>
      <in>
        <name>object</name>
        <type><![CDATA[<object>]]></type>
        <description></description>
      </in>
      <in>
        <name>maximum</name>
        <type><![CDATA[corba/<unsigned-long>]]></type>
        <description></description>
      </in>
    </ins>
    <outs>
      <out>
        <name>result</name>
        <type><![CDATA[corba/<unsigned-long>]]></type>
        <description></description>
      </out>
    </outs>
  </functiondef>
  <description>
<p>In order to efficiently manage state that include large numbers of object references,
services need to support a notion of object reference identity. Such services include not
just bridges, but relationship services and other layered facilities.</p>

<p>Two identity-related operations are provided. One maps object references into disjoint
groups of potentially equivalent references, and the other supports more expensive
pairwise equivalence testing. Together, these operations support efficient maintenance
and search of tables keyed by object references.</p>

<p>Object references are associated with ORB-internal identifiers which may indirectly be
accessed by applications using the hash() operation. The value of this identifier does
not change during the lifetime of the object reference, and so neither will any hash
function of that identifier.</p>

<p>The value of this operation is not guaranteed to be unique; that is, another object
reference may return the same hash value. However, if two object references hash
differently, applications can determine that the two object references are not identical.</p>

<p>The maximum parameter to the hash operation specifies an upper bound on the hash
value returned by the ORB. The lower bound of that value is zero. Since a typical use
of this feature is to construct and access a collision chained hash table of object
references, the more randomly distributed the values are within that range, and the
cheaper those values are to compute, the better.</p>

<p>For bridge construction, note that proxy objects are themselves objects, so there could
be many proxy objects representing a given <emphasis>real</emphasis> object. Those proxies would not
necessarily hash to the same value.</p>
  </description>
  <seealso></seealso>
</entry>

<entry>
  <name><![CDATA[corba/object/is-a]]></name>
  <functiondef>
    <ins>
      <in>
        <name>object</name>
        <type><![CDATA[<object>]]></type>
        <description></description>
      </in>
      <in>
        <name>logical-type-id</name>
        <type><![CDATA[corba/<string>]]></type>
        <description></description>
      </in>
    </ins>
    <outs>
      <out>
        <name>result</name>
        <type><![CDATA[corba/<boolean>]]></type>
        <description></description>
      </out>
    </outs>
  </functiondef>
  <description></description>
  <seealso></seealso>
</entry>

<entry>
  <name><![CDATA[corba/object/is-equivalent]]></name>
  <functiondef>
    <ins>
      <in>
        <name>object</name>
        <type><![CDATA[<object>]]></type>
        <description></description>
      </in>
      <in>
        <name>other-object</name>
        <type><![CDATA[corba/<object>]]></type>
        <description></description>
      </in>
    </ins>
    <outs>
      <out>
        <name>result</name>
        <type><![CDATA[corba/<boolean>]]></type>
        <description></description>
      </out>
    </outs>
  </functiondef>
  <description>
<p>An operation is defined to facilitate maintaining type-safety for object references over
the scope of an ORB.</p>

<p>The corba/object/is-equivalent operation is used to determine if two
object references are equivalent, so far as the ORB can easily
determine. It returns #t if the target object reference is known to be
equivalent to the other object reference passed as its parameter, and
#f otherwise.</p>

<p>If two object references are identical, they are equivalent. Two
different object references which in fact refer to the same object are
also equivalent.  ORBs are allowed, but not required, to attempt
determination of whether two distinct object references refer to the
same object. In general, the existence of reference translation and
encapsulation, in the absence of an omniscient topology service, can
make such determination impractically expensive. This means that a #f
return from corba/object/is-equivalent() should be viewed as only
indicating that the object references are distinct, and not
necessarily an indication that the references indicate distinct
objects.</p>

<p>A typical application use of this operation is to match object
references in a hash table.  Bridges could use it to shorten the
lengths of chains of proxy object references.  Externalization
services could use it to <emphasis>flatten</emphasis> graphs that
represent cyclical relationships between objects. Some might do this
as they construct the table, others during idle time.</p>
  </description>
  <seealso></seealso>
</entry>

<entry>
  <name><![CDATA[corba/object/is-nil]]></name>
  <functiondef>
    <ins>
      <in>
        <name>object</name>
        <type><![CDATA[{complex type}]]></type>
        <description></description>
      </in>
    </ins>
    <outs>
      <out>
        <name>result</name>
        <type><![CDATA[corba/<boolean>]]></type>
        <description></description>
      </out>
    </outs>
  </functiondef>
  <description>
<p>An object reference whose value denotes no object. An object reference
can be tested for this value by the corba/object/is-nil operation. The
object implementation is not involved in the nil test.</p>
  </description>
  <seealso></seealso>
</entry>

<entry>
  <name><![CDATA[corba/object/non-existent]]></name>
  <functiondef>
    <ins>
      <in>
        <name>object</name>
        <type><![CDATA[<object>]]></type>
        <description></description>
      </in>
    </ins>
    <outs>
      <out>
        <name>result</name>
        <type><![CDATA[corba/<boolean>]]></type>
        <description></description>
      </out>
    </outs>
  </functiondef>
  <description>
  <description>
<p>The corba/object/non-existent operation may be used to test whether
an object (e.g., a proxy object) has been destroyed. It does this
without invoking any application level operation on the object, and so
will never affect the object itself. It returns true (rather than
raising <![CDATA[corba/<object-not-exist>]]>) if the ORB knows authoritatively
that the object does not exist; otherwise, it returns false.</p>

<p>Services that maintain state that includes object references, such
as bridges, event channels, and base relationship services, might use
this operation in their <emphasis>idle time</emphasis> to sift through
object tables for objects that no longer exist, deleting them as they
go, as a form of garbage collection. In the case of proxies, this kind
of activity can cascade, such that cleaning up one table allows others
then to be cleaned up.</p>
  </description>
  <seealso></seealso>
</entry>

<entry>
  <name><![CDATA[corba/object/release]]></name>
  <functiondef>
    <ins>
      <in>
        <name>object</name>
        <type><![CDATA[<object>]]></type>
        <description></description>
      </in>
    </ins>
    <outs>
    </outs>
  </functiondef>
  <description>
<p>This is a null operation in Functional Developer ORB.</p>
  </description>
  <seealso></seealso>
</entry>

<entry>
  <name><![CDATA[corba/operationdef/contexts]]></name>
  <functiondef>
    <ins>
      <in>
        <name>object</name>
        <type><![CDATA[corba/<operationdef>]]></type>
        <description></description>
      </in>
    </ins>
    <outs>
      <out>
        <name>result</name>
        <type><![CDATA[corba/<contextidseq>]]></type>
        <description></description>
      </out>
    </outs>
  </functiondef>
  <description></description>
  <seealso></seealso>
</entry>

<entry>
  <name><![CDATA[corba/operationdef/contexts-setter]]></name>
  <functiondef>
    <ins>
      <in>
        <name>new-value</name>
        <type><![CDATA[corba/<contextidseq>]]></type>
        <description></description>
      </in>
      <in>
        <name>object</name>
        <type><![CDATA[corba/<operationdef>]]></type>
        <description></description>
      </in>
    </ins>
    <outs>
      <out>
        <name>result</name>
        <type><![CDATA[corba/<contextidseq>]]></type>
        <description></description>
      </out>
    </outs>
  </functiondef>
  <description></description>
  <seealso></seealso>
</entry>

<entry>
  <name><![CDATA[corba/operationdef/exceptions]]></name>
  <functiondef>
    <ins>
      <in>
        <name>object</name>
        <type><![CDATA[corba/<operationdef>]]></type>
        <description></description>
      </in>
    </ins>
    <outs>
      <out>
        <name>result</name>
        <type><![CDATA[corba/<exceptiondefseq>]]></type>
        <description></description>
      </out>
    </outs>
  </functiondef>
  <description></description>
  <seealso></seealso>
</entry>

<entry>
  <name><![CDATA[corba/operationdef/exceptions-setter]]></name>
  <functiondef>
    <ins>
      <in>
        <name>new-value</name>
        <type><![CDATA[corba/<exceptiondefseq>]]></type>
        <description></description>
      </in>
      <in>
        <name>object</name>
        <type><![CDATA[corba/<operationdef>]]></type>
        <description></description>
      </in>
    </ins>
    <outs>
      <out>
        <name>result</name>
        <type><![CDATA[corba/<exceptiondefseq>]]></type>
        <description></description>
      </out>
    </outs>
  </functiondef>
  <description></description>
  <seealso></seealso>
</entry>

<entry>
  <name><![CDATA[corba/operationdef/mode]]></name>
  <functiondef>
    <ins>
      <in>
        <name>object</name>
        <type><![CDATA[corba/<operationdef>]]></type>
        <description></description>
      </in>
    </ins>
    <outs>
      <out>
        <name>result</name>
        <type><![CDATA[corba/<operationmode>]]></type>
        <description></description>
      </out>
    </outs>
  </functiondef>
  <description></description>
  <seealso></seealso>
</entry>

<entry>
  <name><![CDATA[corba/operationdef/mode-setter]]></name>
  <functiondef>
    <ins>
      <in>
        <name>new-value</name>
        <type><![CDATA[corba/<operationmode>]]></type>
        <description></description>
      </in>
      <in>
        <name>object</name>
        <type><![CDATA[corba/<operationdef>]]></type>
        <description></description>
      </in>
    </ins>
    <outs>
      <out>
        <name>result</name>
        <type><![CDATA[corba/<operationmode>]]></type>
        <description></description>
      </out>
    </outs>
  </functiondef>
  <description></description>
  <seealso></seealso>
</entry>

<entry>
  <name><![CDATA[corba/operationdef/params]]></name>
  <functiondef>
    <ins>
      <in>
        <name>object</name>
        <type><![CDATA[corba/<operationdef>]]></type>
        <description></description>
      </in>
    </ins>
    <outs>
      <out>
        <name>result</name>
        <type><![CDATA[corba/<pardescriptionseq>]]></type>
        <description></description>
      </out>
    </outs>
  </functiondef>
  <description></description>
  <seealso></seealso>
</entry>

<entry>
  <name><![CDATA[corba/operationdef/params-setter]]></name>
  <functiondef>
    <ins>
      <in>
        <name>new-value</name>
        <type><![CDATA[corba/<pardescriptionseq>]]></type>
        <description></description>
      </in>
      <in>
        <name>object</name>
        <type><![CDATA[corba/<operationdef>]]></type>
        <description></description>
      </in>
    </ins>
    <outs>
      <out>
        <name>result</name>
        <type><![CDATA[corba/<pardescriptionseq>]]></type>
        <description></description>
      </out>
    </outs>
  </functiondef>
  <description></description>
  <seealso></seealso>
</entry>

<entry>
  <name><![CDATA[corba/operationdef/result]]></name>
  <functiondef>
    <ins>
      <in>
        <name>object</name>
        <type><![CDATA[corba/<operationdef>]]></type>
        <description></description>
      </in>
    </ins>
    <outs>
      <out>
        <name>result</name>
        <type><![CDATA[corba/<typecode>]]></type>
        <description></description>
      </out>
    </outs>
  </functiondef>
  <description></description>
  <seealso></seealso>
</entry>

<entry>
  <name><![CDATA[corba/operationdef/result-def]]></name>
  <functiondef>
    <ins>
      <in>
        <name>object</name>
        <type><![CDATA[corba/<operationdef>]]></type>
        <description></description>
      </in>
    </ins>
    <outs>
      <out>
        <name>result</name>
        <type><![CDATA[corba/<idltype>]]></type>
        <description></description>
      </out>
    </outs>
  </functiondef>
  <description></description>
  <seealso></seealso>
</entry>

<entry>
  <name><![CDATA[corba/operationdef/result-def-setter]]></name>
  <functiondef>
    <ins>
      <in>
        <name>new-value</name>
        <type><![CDATA[corba/<idltype>]]></type>
        <description></description>
      </in>
      <in>
        <name>object</name>
        <type><![CDATA[corba/<operationdef>]]></type>
        <description></description>
      </in>
    </ins>
    <outs>
      <out>
        <name>result</name>
        <type><![CDATA[corba/<idltype>]]></type>
        <description></description>
      </out>
    </outs>
  </functiondef>
  <description></description>
  <seealso></seealso>
</entry>

<entry>
  <name><![CDATA[corba/operationdescription/contexts]]></name>
  <functiondef>
    <ins>
      <in>
        <name>object</name>
        <type><![CDATA[<object>]]></type>
        <description></description>
      </in>
    </ins>
    <outs>
      <out>
        <name>results</name>
        <type><![CDATA[<object>]]></type>
        <description></description>
      </out>
    </outs>
  </functiondef>
  <description></description>
  <seealso></seealso>
</entry>

<entry>
  <name><![CDATA[corba/operationdescription/contexts-setter]]></name>
  <functiondef>
    <ins>
      <in>
        <name>value</name>
        <type><![CDATA[<object>]]></type>
        <description></description>
      </in>
      <in>
        <name>object</name>
        <type><![CDATA[<object>]]></type>
        <description></description>
      </in>
    </ins>
    <outs>
      <out>
        <name>results</name>
        <type><![CDATA[<object>]]></type>
        <description></description>
      </out>
    </outs>
  </functiondef>
  <description></description>
  <seealso></seealso>
</entry>

<entry>
  <name><![CDATA[corba/operationdescription/defined-in]]></name>
  <functiondef>
    <ins>
      <in>
        <name>object</name>
        <type><![CDATA[<object>]]></type>
        <description></description>
      </in>
    </ins>
    <outs>
      <out>
        <name>results</name>
        <type><![CDATA[<object>]]></type>
        <description></description>
      </out>
    </outs>
  </functiondef>
  <description></description>
  <seealso></seealso>
</entry>

<entry>
  <name><![CDATA[corba/operationdescription/defined-in-setter]]></name>
  <functiondef>
    <ins>
      <in>
        <name>value</name>
        <type><![CDATA[<object>]]></type>
        <description></description>
      </in>
      <in>
        <name>object</name>
        <type><![CDATA[<object>]]></type>
        <description></description>
      </in>
    </ins>
    <outs>
      <out>
        <name>results</name>
        <type><![CDATA[<object>]]></type>
        <description></description>
      </out>
    </outs>
  </functiondef>
  <description></description>
  <seealso></seealso>
</entry>

<entry>
  <name><![CDATA[corba/operationdescription/exceptions]]></name>
  <functiondef>
    <ins>
      <in>
        <name>object</name>
        <type><![CDATA[<object>]]></type>
        <description></description>
      </in>
    </ins>
    <outs>
      <out>
        <name>results</name>
        <type><![CDATA[<object>]]></type>
        <description></description>
      </out>
    </outs>
  </functiondef>
  <description></description>
  <seealso></seealso>
</entry>

<entry>
  <name><![CDATA[corba/operationdescription/exceptions-setter]]></name>
  <functiondef>
    <ins>
      <in>
        <name>value</name>
        <type><![CDATA[<object>]]></type>
        <description></description>
      </in>
      <in>
        <name>object</name>
        <type><![CDATA[<object>]]></type>
        <description></description>
      </in>
    </ins>
    <outs>
      <out>
        <name>results</name>
        <type><![CDATA[<object>]]></type>
        <description></description>
      </out>
    </outs>
  </functiondef>
  <description></description>
  <seealso></seealso>
</entry>

<entry>
  <name><![CDATA[corba/operationdescription/id]]></name>
  <functiondef>
    <ins>
      <in>
        <name>object</name>
        <type><![CDATA[<object>]]></type>
        <description></description>
      </in>
    </ins>
    <outs>
      <out>
        <name>results</name>
        <type><![CDATA[<object>]]></type>
        <description></description>
      </out>
    </outs>
  </functiondef>
  <description></description>
  <seealso></seealso>
</entry>

<entry>
  <name><![CDATA[corba/operationdescription/id-setter]]></name>
  <functiondef>
    <ins>
      <in>
        <name>value</name>
        <type><![CDATA[<object>]]></type>
        <description></description>
      </in>
      <in>
        <name>object</name>
        <type><![CDATA[<object>]]></type>
        <description></description>
      </in>
    </ins>
    <outs>
      <out>
        <name>results</name>
        <type><![CDATA[<object>]]></type>
        <description></description>
      </out>
    </outs>
  </functiondef>
  <description></description>
  <seealso></seealso>
</entry>

<entry>
  <name><![CDATA[corba/operationdescription/mode]]></name>
  <functiondef>
    <ins>
      <in>
        <name>object</name>
        <type><![CDATA[<object>]]></type>
        <description></description>
      </in>
    </ins>
    <outs>
      <out>
        <name>results</name>
        <type><![CDATA[<object>]]></type>
        <description></description>
      </out>
    </outs>
  </functiondef>
  <description></description>
  <seealso></seealso>
</entry>

<entry>
  <name><![CDATA[corba/operationdescription/mode-setter]]></name>
  <functiondef>
    <ins>
      <in>
        <name>value</name>
        <type><![CDATA[<object>]]></type>
        <description></description>
      </in>
      <in>
        <name>object</name>
        <type><![CDATA[<object>]]></type>
        <description></description>
      </in>
    </ins>
    <outs>
      <out>
        <name>results</name>
        <type><![CDATA[<object>]]></type>
        <description></description>
      </out>
    </outs>
  </functiondef>
  <description></description>
  <seealso></seealso>
</entry>

<entry>
  <name><![CDATA[corba/operationdescription/name]]></name>
  <functiondef>
    <ins>
      <in>
        <name>object</name>
        <type><![CDATA[<object>]]></type>
        <description></description>
      </in>
    </ins>
    <outs>
      <out>
        <name>results</name>
        <type><![CDATA[<object>]]></type>
        <description></description>
      </out>
    </outs>
  </functiondef>
  <description></description>
  <seealso></seealso>
</entry>

<entry>
  <name><![CDATA[corba/operationdescription/name-setter]]></name>
  <functiondef>
    <ins>
      <in>
        <name>value</name>
        <type><![CDATA[<object>]]></type>
        <description></description>
      </in>
      <in>
        <name>object</name>
        <type><![CDATA[<object>]]></type>
        <description></description>
      </in>
    </ins>
    <outs>
      <out>
        <name>results</name>
        <type><![CDATA[<object>]]></type>
        <description></description>
      </out>
    </outs>
  </functiondef>
  <description></description>
  <seealso></seealso>
</entry>

<entry>
  <name><![CDATA[corba/operationdescription/parameters]]></name>
  <functiondef>
    <ins>
      <in>
        <name>object</name>
        <type><![CDATA[<object>]]></type>
        <description></description>
      </in>
    </ins>
    <outs>
      <out>
        <name>results</name>
        <type><![CDATA[<object>]]></type>
        <description></description>
      </out>
    </outs>
  </functiondef>
  <description></description>
  <seealso></seealso>
</entry>

<entry>
  <name><![CDATA[corba/operationdescription/parameters-setter]]></name>
  <functiondef>
    <ins>
      <in>
        <name>value</name>
        <type><![CDATA[<object>]]></type>
        <description></description>
      </in>
      <in>
        <name>object</name>
        <type><![CDATA[<object>]]></type>
        <description></description>
      </in>
    </ins>
    <outs>
      <out>
        <name>results</name>
        <type><![CDATA[<object>]]></type>
        <description></description>
      </out>
    </outs>
  </functiondef>
  <description></description>
  <seealso></seealso>
</entry>

<entry>
  <name><![CDATA[corba/operationdescription/result]]></name>
  <functiondef>
    <ins>
      <in>
        <name>object</name>
        <type><![CDATA[<object>]]></type>
        <description></description>
      </in>
    </ins>
    <outs>
      <out>
        <name>results</name>
        <type><![CDATA[<object>]]></type>
        <description></description>
      </out>
    </outs>
  </functiondef>
  <description></description>
  <seealso></seealso>
</entry>

<entry>
  <name><![CDATA[corba/operationdescription/result-setter]]></name>
  <functiondef>
    <ins>
      <in>
        <name>value</name>
        <type><![CDATA[<object>]]></type>
        <description></description>
      </in>
      <in>
        <name>object</name>
        <type><![CDATA[<object>]]></type>
        <description></description>
      </in>
    </ins>
    <outs>
      <out>
        <name>results</name>
        <type><![CDATA[<object>]]></type>
        <description></description>
      </out>
    </outs>
  </functiondef>
  <description></description>
  <seealso></seealso>
</entry>

<entry>
  <name><![CDATA[corba/operationdescription/version]]></name>
  <functiondef>
    <ins>
      <in>
        <name>object</name>
        <type><![CDATA[<object>]]></type>
        <description></description>
      </in>
    </ins>
    <outs>
      <out>
        <name>results</name>
        <type><![CDATA[<object>]]></type>
        <description></description>
      </out>
    </outs>
  </functiondef>
  <description></description>
  <seealso></seealso>
</entry>

<entry>
  <name><![CDATA[corba/operationdescription/version-setter]]></name>
  <functiondef>
    <ins>
      <in>
        <name>value</name>
        <type><![CDATA[<object>]]></type>
        <description></description>
      </in>
      <in>
        <name>object</name>
        <type><![CDATA[<object>]]></type>
        <description></description>
      </in>
    </ins>
    <outs>
      <out>
        <name>results</name>
        <type><![CDATA[<object>]]></type>
        <description></description>
      </out>
    </outs>
  </functiondef>
  <description></description>
  <seealso></seealso>
</entry>

<entry>
  <name><![CDATA[corba/operationmode/<]]></name>
  <functiondef>
    <ins>
      <in>
        <name>lesser</name>
        <type><![CDATA[corba/<operationmode>]]></type>
        <description></description>
      </in>
      <in>
        <name>greater</name>
        <type><![CDATA[corba/<operationmode>]]></type>
        <description></description>
      </in>
    </ins>
    <outs>
      <out>
        <name>lesser?</name>
        <type><![CDATA[<boolean>]]></type>
        <description></description>
      </out>
    </outs>
  </functiondef>
  <description></description>
  <seealso></seealso>
</entry>

<entry>
  <name><![CDATA[corba/operationmode/>]]></name>
  <functiondef>
    <ins>
      <in>
        <name>greater</name>
        <type><![CDATA[corba/<operationmode>]]></type>
        <description></description>
      </in>
      <in>
        <name>lesser</name>
        <type><![CDATA[corba/<operationmode>]]></type>
        <description></description>
      </in>
    </ins>
    <outs>
      <out>
        <name>greater?</name>
        <type><![CDATA[<boolean>]]></type>
        <description></description>
      </out>
    </outs>
  </functiondef>
  <description></description>
  <seealso></seealso>
</entry>

<entry>
  <name><![CDATA[corba/operationmode/predecessor]]></name>
  <functiondef>
    <ins>
      <in>
        <name>symbol</name>
        <type><![CDATA[corba/<operationmode>]]></type>
        <description></description>
      </in>
    </ins>
    <outs>
      <out>
        <name>pred</name>
        <type><![CDATA[corba/<operationmode>]]></type>
        <description></description>
      </out>
    </outs>
  </functiondef>
  <description></description>
  <seealso></seealso>
</entry>

<entry>
  <name><![CDATA[corba/operationmode/successor]]></name>
  <functiondef>
    <ins>
      <in>
        <name>symbol</name>
        <type><![CDATA[corba/<operationmode>]]></type>
        <description></description>
      </in>
    </ins>
    <outs>
      <out>
        <name>succ</name>
        <type><![CDATA[corba/<operationmode>]]></type>
        <description></description>
      </out>
    </outs>
  </functiondef>
  <description></description>
  <seealso></seealso>
</entry>

<entry>
  <name><![CDATA[corba/orb-init]]></name>
  <functiondef>
    <ins>
      <in>
        <name>argv</name>
        <type><![CDATA[corba/<arg-list>]]></type>
        <description></description>
      </in>
      <in>
        <name>orb-identifier</name>
        <type><![CDATA[corba/<orbid>]]></type>
        <description></description>
      </in>
    </ins>
    <outs>
      <out>
        <name>orb</name>
        <type><![CDATA[corba/<orb>]]></type>
        <description></description>
      </out>
      <out>
        <name>argv</name>
        <type><![CDATA[corba/<arg-list>]]></type>
        <description></description>
      </out>
    </outs>
  </functiondef>
  <description>
<p>When an application requires a CORBA environment it needs a mechanism to get the
ORB pseudo-object reference and possibly an OA object reference. This serves two
purposes. First, it initializes an application into the ORB and OA environments.
Second, it returns the ORB pseudo-object reference and the OA object reference to the
application for use in future ORB and OA operations.</p>

<p><![CDATA[corba/<bad-param>]]> raised when the value of policy type is not valid either
because the specified type is not supported by this ORB
or because a policy object of that type is not associated
with this Object.</p>

<p>The ORB and OA initialization operations must be ordered with ORB
occurring before OA: an application cannot call OA initialization
routines until ORB initialization routines have been called for the
given ORB. The operation to initialize an application in the ORB and
get its pseudo-object reference is not performed on an object. This is
because applications do not initially have an object on which to
invoke operations. The ORB initialization operation is an
application's bootstrap call into the CORBA world.  The PIDL for the
call (Figure 7-1) shows that the corba/orb-init call is part of the
CORBA module but not part of the ORB interface.</p>

<p>Applications can be initialized in one or more ORBs. When an ORB
initialization is complete, its pseudo reference is returned and can
be used to obtain other references for that ORB.</p>

<p>In order to obtain an ORB pseudo-object reference, applications
call the corba/orb-init operation. The parameters to the call comprise
an identifier for the ORB for which the pseudo-object reference is
required, and an <![CDATA[corba/<arg-list>]]>, which is used to allow
environment-specific data to be passed into the call.</p>

<p>The identifier for the ORB will be a name of type
<![CDATA[corba/<ORBid>]]>. All ORBid strings other than the empty string are
allocated by ORB administrators and are not managed by the OMG. ORBid
strings other than the empty string are intended to be used to
uniquely identify each ORB used within the same address space in a
multi-ORB application. These special ORBid strings are specific to
each ORB implementation and the ORB administrator is responsible for
ensuring that the names are unambiguous.</p>

<p>If an empty ORBid string is passed to corba/orb-init, then the
<![CDATA[corba/<arg-list>]]> arguments shall be examined to determine if they
indicate an ORB reference that should be returned. This is achieved by
searching the arg_list parameters for one preceded by "-ORBid," for
example, "-ORBid example_orb" (the whitespace after the "-ORBid" tag
is ignored) or "-ORBidMyFavoriteORB" (with no whitespace following the
"-ORBid" tag).</p>

<p>Alternatively, two sequential parameters with the first being the
string "-ORBid" indicates that the second is to be treated as an ORBid
parameter. If an empty string is passed and no <![CDATA[corba/<arg-list>]]>
parameters indicate the ORB reference to be returned, the default ORB
for the environment will be returned.</p>

<p>Other parameters of significance to the ORB can also be identified
in <![CDATA[corba/<arg-list>]]>, for example, "Hostname," "SpawnedServer," and
so forth. To allow for other parameters to be specified without
causing applications to be re-written, it is necessary to specify the
parameter format that ORB parameters may take. In general, parameters
shall be formatted as either one single <![CDATA[corba/<arg-list>]]>
parameter:</p>

<p><![CDATA[
-ORB<suffix><optional-whitespace> <value>
]]></p>

<p>or as two sequential <![CDATA[corba/<arg-list>]]> parameters:</p>

<p><![CDATA[
-ORB<suffix>
<value>
]]></p>

<p>Regardless of whether an empty or non-empty ORBid string is passed
to corba/orb-init, the <![CDATA[corba/<arg-list>]]> arguments are examined to
determine if any ORB parameters are given. If a non-empty ORBid string
is passed to corba/orb-init, all ORBid parameters in the
<![CDATA[corba/<arg-list>]]> are ignored. All other <![CDATA[-ORB<suffix>]]>
parameters in the <![CDATA[corba/<arg-list>]]> may be of significance during
the ORB initialization process.</p>

<p>The corba/orb-init operation may be called any number of times and
shall return the same ORB reference when the same ORBid string is
passed, either explicitly as an argument to corba/orb-init or through
the <![CDATA[corba/<arg-list>]]>. All other <![CDATA[-ORB<suffix>]]> parameters in the
<![CDATA[corba/<arg-list>]]> may be considered on subsequent calls to
corba/orb-init.</p>
  </description>
  <seealso></seealso>
</entry>

<entry>
  <name><![CDATA[corba/orb/<invalidname>]]></name>
  <classdef>
    <modifiers></modifiers>
    <superclasses>
      <![CDATA[corba/<user-exception>]]>
    </superclasses>
    <keywords>
    </keywords>
  </classdef>
  <description>
<p>May be raised by corba/orb/resolve-initial-references if objectid
represents an invalid service.</p>
  </description>
  <seealso></seealso>
</entry>

<entry>
  <name><![CDATA[corba/orb/<objectid>]]></name>
  <constantdef>
    <type><![CDATA[<object>]]></type>
    <value><![CDATA[#f]]></value>
  </constantdef>
  <description>
  </description>
  <seealso>
    <see>corba/orb/resolve-initial-references</see>
    <see><![CDATA[corba/orb/<objectidlist>]]></see>
  </seealso>
</entry>

<entry>
  <name><![CDATA[corba/orb/<objectidlist>]]></name>
  <constantdef>
    <type><![CDATA[<object>]]></type>
    <value><![CDATA[#f]]></value>
  </constantdef>
  <description></description>
  <seealso>
    <see>corba/orb/list-initial-services</see>
  </seealso>
</entry>

<entry>
  <name><![CDATA[corba/orb/create-alias-tc]]></name>
  <functiondef>
    <ins>
      <in>
        <name>object</name>
        <type><![CDATA[corba/<orb>]]></type>
        <description></description>
      </in>
      <in>
        <name>id</name>
        <type><![CDATA[corba/<repositoryid>]]></type>
        <description></description>
      </in>
      <in>
        <name>name</name>
        <type><![CDATA[corba/<identifier>]]></type>
        <description></description>
      </in>
      <in>
        <name>original-type</name>
        <type><![CDATA[corba/<typecode>]]></type>
        <description></description>
      </in>
    </ins>
    <outs>
      <out>
        <name>result</name>
        <type><![CDATA[corba/<typecode>]]></type>
        <description></description>
      </out>
    </outs>
  </functiondef>
  <description></description>
  <seealso>
    <see>corba/orb/create-struct-tc</see>
  </seealso>
</entry>

<entry>
  <name><![CDATA[corba/orb/create-array-tc]]></name>
  <functiondef>
    <ins>
      <in>
        <name>object</name>
        <type><![CDATA[corba/<orb>]]></type>
        <description></description>
      </in>
      <in>
        <name>length</name>
        <type><![CDATA[corba/<unsigned-long>]]></type>
        <description></description>
      </in>
      <in>
        <name>element-type</name>
        <type><![CDATA[corba/<typecode>]]></type>
        <description></description>
      </in>
    </ins>
    <outs>
      <out>
        <name>result</name>
        <type><![CDATA[corba/<typecode>]]></type>
        <description></description>
      </out>
    </outs>
  </functiondef>
  <description></description>
  <seealso>
    <see>corba/orb/create-struct-tc</see>
  </seealso>
</entry>

<entry>
  <name><![CDATA[corba/orb/create-enum-tc]]></name>
  <functiondef>
    <ins>
      <in>
        <name>object</name>
        <type><![CDATA[corba/<orb>]]></type>
        <description></description>
      </in>
      <in>
        <name>id</name>
        <type><![CDATA[corba/<repositoryid>]]></type>
        <description></description>
      </in>
      <in>
        <name>name</name>
        <type><![CDATA[corba/<identifier>]]></type>
        <description></description>
      </in>
      <in>
        <name>members</name>
        <type><![CDATA[corba/<enummemberseq>]]></type>
        <description></description>
      </in>
    </ins>
    <outs>
      <out>
        <name>result</name>
        <type><![CDATA[corba/<typecode>]]></type>
        <description></description>
      </out>
    </outs>
  </functiondef>
  <description></description>
  <seealso>
    <see>corba/orb/create-struct-tc</see>
  </seealso>
</entry>

<entry>
  <name><![CDATA[corba/orb/create-exception-tc]]></name>
  <functiondef>
    <ins>
      <in>
        <name>object</name>
        <type><![CDATA[corba/<orb>]]></type>
        <description></description>
      </in>
      <in>
        <name>id</name>
        <type><![CDATA[corba/<repositoryid>]]></type>
        <description></description>
      </in>
      <in>
        <name>name</name>
        <type><![CDATA[corba/<identifier>]]></type>
        <description></description>
      </in>
      <in>
        <name>members</name>
        <type><![CDATA[corba/<structmemberseq>]]></type>
        <description></description>
      </in>
    </ins>
    <outs>
      <out>
        <name>result</name>
        <type><![CDATA[corba/<typecode>]]></type>
        <description></description>
      </out>
    </outs>
  </functiondef>
  <description></description>
  <seealso>
    <see>corba/orb/create-struct-tc</see>
  </seealso>
</entry>

<entry>
  <name><![CDATA[corba/orb/create-fixed-tc]]></name>
  <functiondef>
    <ins>
      <in>
        <name>object</name>
        <type><![CDATA[corba/<orb>]]></type>
        <description></description>
      </in>
      <in>
        <name>digits</name>
        <type><![CDATA[corba/<unsigned-short>]]></type>
        <description></description>
      </in>
      <in>
        <name>scale</name>
        <type><![CDATA[corba/<short>]]></type>
        <description></description>
      </in>
    </ins>
    <outs>
      <out>
        <name>result</name>
        <type><![CDATA[corba/<typecode>]]></type>
        <description></description>
      </out>
    </outs>
  </functiondef>
  <description>
    <see>corba/orb/create-struct-tc</see>
  </description>
  <seealso></seealso>
</entry>

<entry>
  <name><![CDATA[corba/orb/create-interface-tc]]></name>
  <functiondef>
    <ins>
      <in>
        <name>object</name>
        <type><![CDATA[corba/<orb>]]></type>
        <description></description>
      </in>
      <in>
        <name>id</name>
        <type><![CDATA[corba/<repositoryid>]]></type>
        <description></description>
      </in>
      <in>
        <name>name</name>
        <type><![CDATA[corba/<identifier>]]></type>
        <description></description>
      </in>
    </ins>
    <outs>
      <out>
        <name>result</name>
        <type><![CDATA[corba/<typecode>]]></type>
        <description></description>
      </out>
    </outs>
  </functiondef>
  <description></description>
  <seealso>
    <see>corba/orb/create-struct-tc</see>
  </seealso>
</entry>

<entry>
  <name><![CDATA[corba/orb/create-list]]></name>
  <functiondef>
    <ins>
      <in>
        <name>orb</name>
        <type><![CDATA[corba/<orb>]]></type>
        <description></description>
      </in>
      <in>
        <name>count</name>
        <type><![CDATA[corba/<long>]]></type>
        <description></description>
      </in>
    </ins>
    <outs>
      <out>
        <name>new-list</name>
        <type><![CDATA[corba/<nvlist>]]></type>
        <description></description>
      </out>
    </outs>
  </functiondef>
  <description></description>
  <seealso>
    <see>corba/orb/create-struct-tc</see>
  </seealso>
</entry>

<entry>
  <name><![CDATA[corba/orb/create-operation-list]]></name>
  <functiondef>
    <ins>
      <in>
        <name>orb</name>
        <type><![CDATA[corba/<orb>]]></type>
        <description></description>
      </in>
      <in>
        <name>operationdef</name>
        <type><![CDATA[corba/<operationdef>]]></type>
        <description></description>
      </in>
    </ins>
    <outs>
      <out>
        <name>new-list</name>
        <type><![CDATA[corba/<nvlist>]]></type>
        <description></description>
      </out>
    </outs>
  </functiondef>
  <description>
<p>This operation returns an <![CDATA[corba/<nvlist>]]> initialized
with the argument descriptions for a given operation. The information
is returned in a form that may be used in Dynamic Invocation
requests. The arguments are returned in the same order as they were
defined for the operation.</p>
  </description>
  <seealso></seealso>
</entry>

<entry>
  <name><![CDATA[corba/orb/create-recursive-sequence-tc]]></name>
  <functiondef>
    <ins>
      <in>
        <name>object</name>
        <type><![CDATA[corba/<orb>]]></type>
        <description></description>
      </in>
      <in>
        <name>bound</name>
        <type><![CDATA[corba/<unsigned-long>]]></type>
        <description></description>
      </in>
      <in>
        <name>offset</name>
        <type><![CDATA[corba/<unsigned-long>]]></type>
        <description></description>
      </in>
    </ins>
    <outs>
      <out>
        <name>result</name>
        <type><![CDATA[corba/<typecode>]]></type>
        <description></description>
      </out>
    </outs>
  </functiondef>
  <description>
<p>The corba/orb/create-recursive-sequence-tc operation is used to create <![CDATA[corba/<typecode>]]>s
describing recursive sequences. The result of this operation is used in constructing
other types, with the offset parameter determining which enclosing <![CDATA[corba/<typecode>]]>
describes the elements of this sequence. For instance, to construct a <![CDATA[corba/<typecode>]]> for the
following OMG IDL structure, the offset used when creating its sequence <![CDATA[corba/<typecode>]]>
would be one:</p>

<p>struct foo {
	long value;
	sequence <foo> chain;
};</p>
  </description>
  <seealso>
    <see>corba/orb/create-struct-tc</see>
  </seealso>
</entry>

<entry>
  <name><![CDATA[corba/orb/create-sequence-tc]]></name>
  <functiondef>
    <ins>
      <in>
        <name>object</name>
        <type><![CDATA[corba/<orb>]]></type>
        <description></description>
      </in>
      <in>
        <name>bound</name>
        <type><![CDATA[corba/<unsigned-long>]]></type>
        <description></description>
      </in>
      <in>
        <name>element-type</name>
        <type><![CDATA[corba/<typecode>]]></type>
        <description></description>
      </in>
    </ins>
    <outs>
      <out>
        <name>result</name>
        <type><![CDATA[corba/<typecode>]]></type>
        <description></description>
      </out>
    </outs>
  </functiondef>
  <description></description>
  <seealso>
    <see>corba/orb/create-struct-tc</see>
  </seealso>
</entry>

<entry>
  <name><![CDATA[corba/orb/create-string-tc]]></name>
  <functiondef>
    <ins>
      <in>
        <name>object</name>
        <type><![CDATA[corba/<orb>]]></type>
        <description></description>
      </in>
      <in>
        <name>bound</name>
        <type><![CDATA[corba/<unsigned-long>]]></type>
        <description></description>
      </in>
    </ins>
    <outs>
      <out>
        <name>result</name>
        <type><![CDATA[corba/<typecode>]]></type>
        <description></description>
      </out>
    </outs>
  </functiondef>
  <description></description>
  <seealso>
    <see>corba/orb/create-struct-tc</see>
  </seealso>
</entry>

<entry>
  <name><![CDATA[corba/orb/create-struct-tc]]></name>
  <functiondef>
    <ins>
      <in>
        <name>object</name>
        <type><![CDATA[corba/<orb>]]></type>
        <description></description>
      </in>
      <in>
        <name>id</name>
        <type><![CDATA[corba/<repositoryid>]]></type>
        <description></description>
      </in>
      <in>
        <name>name</name>
        <type><![CDATA[corba/<identifier>]]></type>
        <description></description>
      </in>
      <in>
        <name>members</name>
        <type><![CDATA[corba/<structmemberseq>]]></type>
        <description></description>
      </in>
    </ins>
    <outs>
      <out>
        <name>result</name>
        <type><![CDATA[corba/<typecode>]]></type>
        <description></description>
      </out>
    </outs>
  </functiondef>
  <description>
<p>Most of these operations are similar to corresponding IR operations
for creating type definitions. <![CDATA[corba/<typecode>]]>s are used
here instead of <![CDATA[corba/<idltype>]]> object references to refer
to other types. In the <![CDATA[corba/<structmember>]]> and
<![CDATA[corba/<unionmember>]]> structures, only the type is used, and
the type-def should be set to nil.</p>

<p>Operations to create primitive <![CDATA[corba/<typecode>]]>s are
not needed, since <![CDATA[corba/<typecode>]]> constants for these are
available.</p>
  </description>
  <seealso></seealso>
</entry>

<entry>
  <name><![CDATA[corba/orb/create-union-tc]]></name>
  <functiondef>
    <ins>
      <in>
        <name>object</name>
        <type><![CDATA[corba/<orb>]]></type>
        <description></description>
      </in>
      <in>
        <name>id</name>
        <type><![CDATA[corba/<repositoryid>]]></type>
        <description></description>
      </in>
      <in>
        <name>name</name>
        <type><![CDATA[corba/<identifier>]]></type>
        <description></description>
      </in>
      <in>
        <name>discriminator-type</name>
        <type><![CDATA[corba/<typecode>]]></type>
        <description></description>
      </in>
      <in>
        <name>members</name>
        <type><![CDATA[corba/<unionmemberseq>]]></type>
        <description></description>
      </in>
    </ins>
    <outs>
      <out>
        <name>result</name>
        <type><![CDATA[corba/<typecode>]]></type>
        <description></description>
      </out>
    </outs>
  </functiondef>
  <description></description>
  <seealso>
    <see>corba/orb/create-struct-tc</see>
  </seealso>
</entry>

<entry>
  <name><![CDATA[corba/orb/create-wstring-tc]]></name>
  <functiondef>
    <ins>
      <in>
        <name>object</name>
        <type><![CDATA[corba/<orb>]]></type>
        <description></description>
      </in>
      <in>
        <name>bound</name>
        <type><![CDATA[corba/<unsigned-long>]]></type>
        <description></description>
      </in>
    </ins>
    <outs>
      <out>
        <name>result</name>
        <type><![CDATA[corba/<typecode>]]></type>
        <description></description>
      </out>
    </outs>
  </functiondef>
  <description></description>
  <seealso>
    <see>corba/orb/create-struct-tc</see>
  </seealso>
</entry>

<entry>
  <name><![CDATA[corba/orb/file-to-object]]></name>
  <functiondef>
    <ins>
      <in>
        <name>orb</name>
        <type><![CDATA[corba/<orb>]]></type>
        <description></description>
      </in>
      <in>
        <name>file</name>
        <type><![CDATA[corba/<string>]]></type>
        <description></description>
      </in>
    </ins>
    <outs>
      <out>
        <name>object</name>
        <type><![CDATA[corba/<object>]]></type>
        <description></description>
      </out>
    </outs>
  </functiondef>
  <description></description>
  <seealso></seealso>
</entry>

<entry>
  <name><![CDATA[corba/orb/get-default-context]]></name>
  <functiondef>
    <ins>
      <in>
        <name>orb</name>
        <type><![CDATA[corba/<orb>]]></type>
        <description></description>
      </in>
    </ins>
    <outs>
      <out>
        <name>ctx</name>
        <type><![CDATA[corba/<context>]]></type>
        <description></description>
      </out>
    </outs>
  </functiondef>
  <description>
<p>This operation returns a reference to the default process context
object. The default context object may be chained into other context
objects. For example, an ORB implementation may chain the default
context object into its User, Group, and System context objects.
  </description>
  <seealso></seealso>
</entry>

<entry>
  <name><![CDATA[corba/orb/list-initial-services]]></name>
  <functiondef>
    <ins>
      <in>
        <name>orb</name>
        <type><![CDATA[corba/<orb>]]></type>
        <description></description>
      </in>
    </ins>
    <outs>
      <out>
        <name>list</name>
        <type><![CDATA[corba/orb/<objectidlist>]]></type>
        <description></description>
      </out>
    </outs>
  </functiondef>
  <description>
<p>See corba/orb/resolve-initial-references.</p>
  </description>
  <seealso></seealso>
</entry>

<entry>
  <name><![CDATA[corba/orb/object-to-file]]></name>
  <functiondef>
    <ins>
      <in>
        <name>orb</name>
        <type><![CDATA[corba/<orb>]]></type>
        <description></description>
      </in>
      <in>
        <name>file</name>
        <type><![CDATA[corba/<string>]]></type>
        <description></description>
      </in>
      <in>
        <name>object</name>
        <type><![CDATA[corba/<object>]]></type>
        <description></description>
      </in>
    </ins>
    <outs>
    </outs>
  </functiondef>
  <description></description>
  <seealso></seealso>
</entry>

<entry>
  <name><![CDATA[corba/orb/object-to-string]]></name>
  <functiondef>
    <ins>
      <in>
        <name>orb</name>
        <type><![CDATA[corba/<orb>]]></type>
        <description></description>
      </in>
      <in>
        <name>object</name>
        <type><![CDATA[corba/<object>]]></type>
        <description></description>
      </in>
    </ins>
    <outs>
      <out>
        <name>str</name>
        <type><![CDATA[corba/<string>]]></type>
        <description></description>
      </out>
    </outs>
  </functiondef>
  <description>
<p>Because an object reference is opaque and may differ from ORB to ORB, the object
reference itself is not a convenient value for storing references to objects in persistent
storage or communicating references by means other than invocation. Two problems
must be solved: allowing an object reference to be turned into a value that a client can
store in some other medium, and ensuring that the value can subsequently be turned
into the appropriate object reference.</p>

<p>An object reference may be translated into a string by the operation
corba/orb/object-to-string. The value may be stored or communicated in whatever ways
strings may be manipulated.</p>

<p>Subsequently, the corba/orb/string-to-object operation will accept
a string produced by corba/orb/object-to-string and return the
corresponding object reference.</p>

<p>To guarantee that an ORB will understand the string form of an
object reference, that ORB's corba/orb/object-to-string operation must
be used to produce the string. For all conforming ORBs, if obj is a
valid reference to an object, then</p>

<p><![CDATA[corba/orb/string-to-object(corba/orb/object-to-string(object))]]></p>

<p>will return a valid reference to the same object, if the two
operations are performed on the same ORB.  For all conforming ORB's
supporting IOP, this remains true even if the two operations are
performed on different ORBs.</p>
  </description>
  <seealso></seealso>
</entry>

<entry>
  <name><![CDATA[corba/orb/perform-work]]></name>
  <functiondef>
    <ins>
      <in>
        <name>orb</name>
        <type><![CDATA[corba/<orb>]]></type>
        <description></description>
      </in>
    </ins>
    <outs>
    </outs>
  </functiondef>
  <description>
<p>If called by the main thread, this operation performs an implementation-defined unit of
work. Otherwise, it does nothing.</p>

<p>It is platform specific how the application and ORB arrange to use compatible
threading primitives.</p>

<p>The corba/orb/work-pending and corba/orb/perform-work operations can be used to write a
simple polling loop that multiplexes the main thread among the ORB and other
activities. Such a loop would most likely be needed in a single-threaded server. A
multi-threaded server would need a polling loop only if there were both ORB and other
code that required use of the main thread.</p>

<p>Here is an example of such a polling loop:</p>

<p><![CDATA[
// Dylan
while (#t)
  if (corba/orb/work-pending(orb))
    corba/orb/perform-work(orb);
  end if;
  // do other things
  // sleep?
end while;
]]></p>
  </description>
  <seealso>
    <see>corba/orb/run</see>
    <see>corba/orb/work-pending</see>
    <see>corba/orb/shutdown</see>
  </seealso>
</entry>

<entry>
  <name><![CDATA[corba/orb/resolve-initial-references]]></name>
  <functiondef>
    <ins>
      <in>
        <name>orb</name>
        <type><![CDATA[corba/<orb>]]></type>
        <description></description>
      </in>
      <in>
        <name>objectid</name>
        <type><![CDATA[corba/orb/<objectid>]]></type>
        <description></description>
      </in>
    </ins>
    <outs>
      <out>
        <name>object</name>
        <type><![CDATA[corba/<object>]]></type>
        <description></description>
      </out>
    </outs>
  </functiondef>
  <description>
<p>Applications require a portable means by which to obtain their initial object references.
References are required for the root POA, POA Current, Interface Repository and
various Object Services instances. (The POA is described in Chapter 9 of this manual;
The Interface Repository is described in Chapter 8 of this manual; Object Services are
described in CORBAservices: Common Object Services Specification.) The
functionality required by the application is similar to that provided by the Naming
Service. However, the OMG does not want to mandate that the Naming Service be
made available to all applications in order that they may be portably initialized.
Consequently, the operations shown in this section provide a simplified, local version
of the Naming Service that applications can use to obtain a small, defined set of object
references which are essential to its operation. Because only a small well defined set of
objects are expected with this mechanism, the naming context can be flattened to be a
single-level name space. This simplification results in only two operations being
defined to achieve the functionality required.</p>

<p>Initial references are obtained via operations on the ORB pseudo-object interface,
providing facilities to list and resolve initial object references. The PIDL for these
operations is shown below.</p>

<p>The corba/orb/resolve-initial-references operation is an operation
on the ORB rather than the Naming Service's NamingContext. The
interface differs from the Naming Service's resolve in that ObjectId
(a string) replaces the more complex Naming Service construct (a
sequence of structures containing string pairs for the components of
the name). This simplification reduces the name space to one context.
ObjectIds are strings that identify the object whose reference is
required. To maintain the simplicity of the interface for obtaining
initial references, only a limited set of objects are expected to have
their references found via this route. Unlike the ORB identifiers, the
ObjectId name space requires careful management. To achieve this.  the
OMG may, in the future, define which services are required by
applications through this interface and specify names for those
services.</p>

<p>Currently, reserved ObjectIds for CORBA Core are RootPOA,
POACurrent, and InterfaceRepository; for CORBA Services, they are
NameService, TradingService, SecurityCurrent, and TransactionCurrent.</p>

<p>To allow an application to determine which objects have references
available via the initial references mechanism, the
corba/orb/list-initial-services operation (also a call on the ORB) is
provided. It returns an ObjectIdList, which is a sequence of
ObjectIds.  ObjectIds are typed as strings. Each object, which may
need to be made available at initialization time, is allocated a
string value to represent it. In addition to defining the id, the type
of object being returned must be defined, i.e. "InterfaceRepository"
returns a object of type Repository, and "NameService" returns a
CosNamingContext object.</p>

<p>The application is responsible for narrowing the object reference returned from
corba/orb/resolve-initial-references to the type which was requested in the ObjectId. For
example, for InterfaceRepository the object returned would be narrowed to
Repository type.</p>

<p>In the future, specifications for Object Services (in CORBAservices: Common Object
Services Specification) will state whether it is expected that a service's initial reference
be made available via the corba/orb/resolve-initial-references operation or not (i.e., whether
the service is necessary or desirable for bootstrap purposes).</p>
  </description>
  <seealso></seealso>
</entry>

<entry>
  <name><![CDATA[corba/orb/run]]></name>
  <functiondef>
    <ins>
      <in>
        <name>orb</name>
        <type><![CDATA[corba/<orb>]]></type>
        <description></description>
      </in>
    </ins>
    <outs>
    </outs>
  </functiondef>
  <description>
<p>To support single-threaded ORBs, as well as multi-threaded ORBs that run multi-thread-
unaware code, several operations are included in the ORB interface. These
operations can be used by single-threaded and multi-threaded applications. An
application that is a pure ORB client would not need to use these operations. Both the
corba/orb/run and corba/orb/shutdown are useful in fully multi-threaded programs.</p>

<p>Note: These operations are defined on the ORB rather than on an object adapter to
allow the main thread to be used for all kinds of asynchronous processing by the ORB.
Defining these operations on the ORB also allows the ORB to support multiple object
adapters, without requiring the application main to know about all the object adapters.
The interface between the ORB and an object adapter is not standardized.</p>

<p>This operation returns when the ORB has shut down. If called by the main thread, it
enables the ORB to perform work using the main thread. Otherwise, it simply waits
until the ORB has shut down.</p>

<p>This operation can be used instead of corba/orb/perform-work to give the main thread to
the ORB if there are no other activities that need to share the main thread. Even in a
pure multi-threaded server, calling run() in the main thread is useful to ensure that the
process does not exit until the ORB has been shut down.</p>
  </description>
  <seealso>
    <see>corba/orb/perform-work</see>
    <see>corba/orb/work-pending</see>
    <see>corba/orb/shutdown</see>
  </seealso>
</entry>

<entry>
  <name><![CDATA[corba/orb/shutdown]]></name>
  <functiondef>
    <ins>
      <in>
        <name>orb</name>
        <type><![CDATA[corba/<orb>]]></type>
        <description></description>
      </in>
      <in>
        <name>wait-for-completion</name>
        <type><![CDATA[<boolean>]]></type>
        <description></description>
      </in>
    </ins>
    <outs>
    </outs>
  </functiondef>
  <description>
<p>This operation instructs the ORB to shut down. Shutting down the ORB causes all
object adapters to be shut down. If the wait-for-completion parameter is #t,
this operation blocks until all ORB processing (including request processing and object
deactivation or other operations associated with object adapters) has completed.</p>
  </description>
  <seealso>
    <see>corba/orb/run</see>
    <see>corba/orb/perform-work</see>
    <see>corba/orb/work-pending</see>
  </seealso>
</entry>

<entry>
  <name><![CDATA[corba/orb/string-to-object]]></name>
  <functiondef>
    <ins>
      <in>
        <name>orb</name>
        <type><![CDATA[corba/<orb>]]></type>
        <description></description>
      </in>
      <in>
        <name>str</name>
        <type><![CDATA[corba/<string>]]></type>
        <description></description>
      </in>
    </ins>
    <outs>
      <out>
        <name>object</name>
        <type><![CDATA[corba/<object>]]></type>
        <description></description>
      </out>
    </outs>
  </functiondef>
  <description>
<p>See corba/orb/object-to-string.</p>
  </description>
  <seealso></seealso>
</entry>

<entry>
  <name><![CDATA[corba/orb/work-pending]]></name>
  <functiondef>
    <ins>
      <in>
        <name>orb</name>
        <type><![CDATA[corba/<orb>]]></type>
        <description></description>
      </in>
    </ins>
    <outs>
      <out>
        <name>work?</name>
        <type><![CDATA[corba/<boolean>]]></type>
        <description></description>
      </out>
    </outs>
  </functiondef>
  <description>
<p>This operation returns an indication of whether the ORB needs the main thread to
perform some work.</p>

<p>A result of #t indicates that the ORB needs the main thread to perform some work
and a result of #f indicates that the ORB does not need the main thread.</p>
  </description>
  <seealso>
    <see>corba/orb/run</see>
    <see>corba/orb/perform-work</see>
    <see>corba/orb/shutdown</see>
  </seealso>
</entry>

<entry>
  <name><![CDATA[corba/parameterdescription/mode]]></name>
  <functiondef>
    <ins>
      <in>
        <name>object</name>
        <type><![CDATA[<object>]]></type>
        <description></description>
      </in>
    </ins>
    <outs>
      <out>
        <name>results</name>
        <type><![CDATA[<object>]]></type>
        <description></description>
      </out>
    </outs>
  </functiondef>
  <description></description>
  <seealso></seealso>
</entry>

<entry>
  <name><![CDATA[corba/parameterdescription/mode-setter]]></name>
  <functiondef>
    <ins>
      <in>
        <name>value</name>
        <type><![CDATA[<object>]]></type>
        <description></description>
      </in>
      <in>
        <name>object</name>
        <type><![CDATA[<object>]]></type>
        <description></description>
      </in>
    </ins>
    <outs>
      <out>
        <name>results</name>
        <type><![CDATA[<object>]]></type>
        <description></description>
      </out>
    </outs>
  </functiondef>
  <description></description>
  <seealso></seealso>
</entry>

<entry>
  <name><![CDATA[corba/parameterdescription/name]]></name>
  <functiondef>
    <ins>
      <in>
        <name>object</name>
        <type><![CDATA[<object>]]></type>
        <description></description>
      </in>
    </ins>
    <outs>
      <out>
        <name>results</name>
        <type><![CDATA[<object>]]></type>
        <description></description>
      </out>
    </outs>
  </functiondef>
  <description></description>
  <seealso></seealso>
</entry>

<entry>
  <name><![CDATA[corba/parameterdescription/name-setter]]></name>
  <functiondef>
    <ins>
      <in>
        <name>value</name>
        <type><![CDATA[<object>]]></type>
        <description></description>
      </in>
      <in>
        <name>object</name>
        <type><![CDATA[<object>]]></type>
        <description></description>
      </in>
    </ins>
    <outs>
      <out>
        <name>results</name>
        <type><![CDATA[<object>]]></type>
        <description></description>
      </out>
    </outs>
  </functiondef>
  <description></description>
  <seealso></seealso>
</entry>

<entry>
  <name><![CDATA[corba/parameterdescription/type]]></name>
  <functiondef>
    <ins>
      <in>
        <name>object</name>
        <type><![CDATA[<object>]]></type>
        <description></description>
      </in>
    </ins>
    <outs>
      <out>
        <name>results</name>
        <type><![CDATA[<object>]]></type>
        <description></description>
      </out>
    </outs>
  </functiondef>
  <description></description>
  <seealso></seealso>
</entry>

<entry>
  <name><![CDATA[corba/parameterdescription/type-def]]></name>
  <functiondef>
    <ins>
      <in>
        <name>object</name>
        <type><![CDATA[<object>]]></type>
        <description></description>
      </in>
    </ins>
    <outs>
      <out>
        <name>results</name>
        <type><![CDATA[<object>]]></type>
        <description></description>
      </out>
    </outs>
  </functiondef>
  <description></description>
  <seealso></seealso>
</entry>

<entry>
  <name><![CDATA[corba/parameterdescription/type-def-setter]]></name>
  <functiondef>
    <ins>
      <in>
        <name>value</name>
        <type><![CDATA[<object>]]></type>
        <description></description>
      </in>
      <in>
        <name>object</name>
        <type><![CDATA[<object>]]></type>
        <description></description>
      </in>
    </ins>
    <outs>
      <out>
        <name>results</name>
        <type><![CDATA[<object>]]></type>
        <description></description>
      </out>
    </outs>
  </functiondef>
  <description></description>
  <seealso></seealso>
</entry>

<entry>
  <name><![CDATA[corba/parameterdescription/type-setter]]></name>
  <functiondef>
    <ins>
      <in>
        <name>value</name>
        <type><![CDATA[<object>]]></type>
        <description></description>
      </in>
      <in>
        <name>object</name>
        <type><![CDATA[<object>]]></type>
        <description></description>
      </in>
    </ins>
    <outs>
      <out>
        <name>results</name>
        <type><![CDATA[<object>]]></type>
        <description></description>
      </out>
    </outs>
  </functiondef>
  <description></description>
  <seealso></seealso>
</entry>

<entry>
  <name><![CDATA[corba/parametermode/<]]></name>
  <functiondef>
    <ins>
      <in>
        <name>lesser</name>
        <type><![CDATA[corba/<parametermode>]]></type>
        <description></description>
      </in>
      <in>
        <name>greater</name>
        <type><![CDATA[corba/<parametermode>]]></type>
        <description></description>
      </in>
    </ins>
    <outs>
      <out>
        <name>lesser?</name>
        <type><![CDATA[<boolean>]]></type>
        <description></description>
      </out>
    </outs>
  </functiondef>
  <description></description>
  <seealso></seealso>
</entry>

<entry>
  <name><![CDATA[corba/parametermode/>]]></name>
  <functiondef>
    <ins>
      <in>
        <name>greater</name>
        <type><![CDATA[corba/<parametermode>]]></type>
        <description></description>
      </in>
      <in>
        <name>lesser</name>
        <type><![CDATA[corba/<parametermode>]]></type>
        <description></description>
      </in>
    </ins>
    <outs>
      <out>
        <name>greater?</name>
        <type><![CDATA[<boolean>]]></type>
        <description></description>
      </out>
    </outs>
  </functiondef>
  <description></description>
  <seealso></seealso>
</entry>

<entry>
  <name><![CDATA[corba/parametermode/predecessor]]></name>
  <functiondef>
    <ins>
      <in>
        <name>symbol</name>
        <type><![CDATA[corba/<parametermode>]]></type>
        <description></description>
      </in>
    </ins>
    <outs>
      <out>
        <name>pred</name>
        <type><![CDATA[corba/<parametermode>]]></type>
        <description></description>
      </out>
    </outs>
  </functiondef>
  <description></description>
  <seealso></seealso>
</entry>

<entry>
  <name><![CDATA[corba/parametermode/successor]]></name>
  <functiondef>
    <ins>
      <in>
        <name>symbol</name>
        <type><![CDATA[corba/<parametermode>]]></type>
        <description></description>
      </in>
    </ins>
    <outs>
      <out>
        <name>succ</name>
        <type><![CDATA[corba/<parametermode>]]></type>
        <description></description>
      </out>
    </outs>
  </functiondef>
  <description></description>
  <seealso></seealso>
</entry>

<entry>
  <name><![CDATA[corba/persist-store/completed]]></name>
  <functiondef>
    <ins>
      <in>
        <name>object</name>
        <type><![CDATA[<object>]]></type>
        <description></description>
      </in>
    </ins>
    <outs>
      <out>
        <name>results</name>
        <type><![CDATA[<object>]]></type>
        <description></description>
      </out>
    </outs>
  </functiondef>
  <description></description>
  <seealso></seealso>
</entry>

<entry>
  <name><![CDATA[corba/persist-store/completed-setter]]></name>
  <functiondef>
    <ins>
      <in>
        <name>value</name>
        <type><![CDATA[<object>]]></type>
        <description></description>
      </in>
      <in>
        <name>object</name>
        <type><![CDATA[<object>]]></type>
        <description></description>
      </in>
    </ins>
    <outs>
      <out>
        <name>results</name>
        <type><![CDATA[<object>]]></type>
        <description></description>
      </out>
    </outs>
  </functiondef>
  <description></description>
  <seealso></seealso>
</entry>

<entry>
  <name><![CDATA[corba/persist-store/minor]]></name>
  <functiondef>
    <ins>
      <in>
        <name>object</name>
        <type><![CDATA[<object>]]></type>
        <description></description>
      </in>
    </ins>
    <outs>
      <out>
        <name>results</name>
        <type><![CDATA[<object>]]></type>
        <description></description>
      </out>
    </outs>
  </functiondef>
  <description></description>
  <seealso></seealso>
</entry>

<entry>
  <name><![CDATA[corba/persist-store/minor-setter]]></name>
  <functiondef>
    <ins>
      <in>
        <name>value</name>
        <type><![CDATA[<object>]]></type>
        <description></description>
      </in>
      <in>
        <name>object</name>
        <type><![CDATA[<object>]]></type>
        <description></description>
      </in>
    </ins>
    <outs>
      <out>
        <name>results</name>
        <type><![CDATA[<object>]]></type>
        <description></description>
      </out>
    </outs>
  </functiondef>
  <description></description>
  <seealso></seealso>
</entry>

<entry>
  <name><![CDATA[corba/primitivedef/kind]]></name>
  <functiondef>
    <ins>
      <in>
        <name>object</name>
        <type><![CDATA[corba/<primitivedef>]]></type>
        <description></description>
      </in>
    </ins>
    <outs>
      <out>
        <name>result</name>
        <type><![CDATA[corba/<primitivekind>]]></type>
        <description></description>
      </out>
    </outs>
  </functiondef>
  <description></description>
  <seealso></seealso>
</entry>

<entry>
  <name><![CDATA[corba/primitivekind/<]]></name>
  <functiondef>
    <ins>
      <in>
        <name>lesser</name>
        <type><![CDATA[corba/<primitivekind>]]></type>
        <description></description>
      </in>
      <in>
        <name>greater</name>
        <type><![CDATA[corba/<primitivekind>]]></type>
        <description></description>
      </in>
    </ins>
    <outs>
      <out>
        <name>lesser?</name>
        <type><![CDATA[<boolean>]]></type>
        <description></description>
      </out>
    </outs>
  </functiondef>
  <description></description>
  <seealso></seealso>
</entry>

<entry>
  <name><![CDATA[corba/primitivekind/>]]></name>
  <functiondef>
    <ins>
      <in>
        <name>greater</name>
        <type><![CDATA[corba/<primitivekind>]]></type>
        <description></description>
      </in>
      <in>
        <name>lesser</name>
        <type><![CDATA[corba/<primitivekind>]]></type>
        <description></description>
      </in>
    </ins>
    <outs>
      <out>
        <name>greater?</name>
        <type><![CDATA[<boolean>]]></type>
        <description></description>
      </out>
    </outs>
  </functiondef>
  <description></description>
  <seealso></seealso>
</entry>

<entry>
  <name><![CDATA[corba/primitivekind/predecessor]]></name>
  <functiondef>
    <ins>
      <in>
        <name>symbol</name>
        <type><![CDATA[corba/<primitivekind>]]></type>
        <description></description>
      </in>
    </ins>
    <outs>
      <out>
        <name>pred</name>
        <type><![CDATA[corba/<primitivekind>]]></type>
        <description></description>
      </out>
    </outs>
  </functiondef>
  <description></description>
  <seealso></seealso>
</entry>

<entry>
  <name><![CDATA[corba/primitivekind/successor]]></name>
  <functiondef>
    <ins>
      <in>
        <name>symbol</name>
        <type><![CDATA[corba/<primitivekind>]]></type>
        <description></description>
      </in>
    </ins>
    <outs>
      <out>
        <name>succ</name>
        <type><![CDATA[corba/<primitivekind>]]></type>
        <description></description>
      </out>
    </outs>
  </functiondef>
  <description></description>
  <seealso></seealso>
</entry>

<entry>
  <name><![CDATA[corba/repository/create-array]]></name>
  <functiondef>
    <ins>
      <in>
        <name>object</name>
        <type><![CDATA[corba/<repository>]]></type>
        <description></description>
      </in>
      <in>
        <name>length</name>
        <type><![CDATA[corba/<unsigned-long>]]></type>
        <description></description>
      </in>
      <in>
        <name>element-type</name>
        <type><![CDATA[corba/<idltype>]]></type>
        <description></description>
      </in>
    </ins>
    <outs>
      <out>
        <name>result</name>
        <type><![CDATA[corba/<arraydef>]]></type>
        <description></description>
      </out>
    </outs>
  </functiondef>
  <description>
<p>The corba/repository/create-array operation returns a new
<![CDATA[corba/<arraydef>]]> with the specified length and
element_type.</p>
  </description>
  <seealso></seealso>
</entry>

<entry>
  <name><![CDATA[corba/repository/create-fixed]]></name>
  <functiondef>
    <ins>
      <in>
        <name>object</name>
        <type><![CDATA[corba/<repository>]]></type>
        <description></description>
      </in>
      <in>
        <name>digits</name>
        <type><![CDATA[corba/<unsigned-short>]]></type>
        <description></description>
      </in>
      <in>
        <name>scale</name>
        <type><![CDATA[corba/<short>]]></type>
        <description></description>
      </in>
    </ins>
    <outs>
      <out>
        <name>result</name>
        <type><![CDATA[corba/<fixeddef>]]></type>
        <description></description>
      </out>
    </outs>
  </functiondef>
  <description></description>
  <seealso></seealso>
</entry>

<entry>
  <name><![CDATA[corba/repository/create-sequence]]></name>
  <functiondef>
    <ins>
      <in>
        <name>object</name>
        <type><![CDATA[corba/<repository>]]></type>
        <description></description>
      </in>
      <in>
        <name>bound</name>
        <type><![CDATA[corba/<unsigned-long>]]></type>
        <description></description>
      </in>
      <in>
        <name>element-type</name>
        <type><![CDATA[corba/<idltype>]]></type>
        <description></description>
      </in>
    </ins>
    <outs>
      <out>
        <name>result</name>
        <type><![CDATA[corba/<sequencedef>]]></type>
        <description></description>
      </out>
    </outs>
  </functiondef>
  <description>
<p>The corba/repository/create-sequence operation returns a new
<![CDATA[corba/<sequencedef>]]> with the specified bound and
element_type.</p>
  </description>
  <seealso></seealso>
</entry>

<entry>
  <name><![CDATA[corba/repository/create-string]]></name>
  <functiondef>
    <ins>
      <in>
        <name>object</name>
        <type><![CDATA[corba/<repository>]]></type>
        <description></description>
      </in>
      <in>
        <name>bound</name>
        <type><![CDATA[corba/<unsigned-long>]]></type>
        <description></description>
      </in>
    </ins>
    <outs>
      <out>
        <name>result</name>
        <type><![CDATA[corba/<stringdef>]]></type>
        <description></description>
      </out>
    </outs>
  </functiondef>
  <description>
<p>The corba/repository/create-string operation returns a new
<![CDATA[corba/<stringdef>]]> with the specified bound, which must be
non-zero. The corba/repository/get-primitive operation is used for
unbounded strings.</p>
  </description>
  <seealso></seealso>
</entry>

<entry>
  <name><![CDATA[corba/repository/create-wstring]]></name>
  <functiondef>
    <ins>
      <in>
        <name>object</name>
        <type><![CDATA[corba/<repository>]]></type>
        <description></description>
      </in>
      <in>
        <name>bound</name>
        <type><![CDATA[corba/<unsigned-long>]]></type>
        <description></description>
      </in>
    </ins>
    <outs>
      <out>
        <name>result</name>
        <type><![CDATA[corba/<wstringdef>]]></type>
        <description></description>
      </out>
    </outs>
  </functiondef>
  <description>
<p>The corba/repository/create-wstring operation returns a new
<![CDATA[corba/<wstringdef>]]> with the specified bound, which must be
non-zero. The corba/repository/get-primitive operation is used for
unbounded strings.</p>
  </description>
  <seealso></seealso>
</entry>

<entry>
  <name><![CDATA[corba/repository/get-primitive]]></name>
  <functiondef>
    <ins>
      <in>
        <name>object</name>
        <type><![CDATA[corba/<repository>]]></type>
        <description></description>
      </in>
      <in>
        <name>kind</name>
        <type><![CDATA[corba/<primitivekind>]]></type>
        <description></description>
      </in>
    </ins>
    <outs>
      <out>
        <name>result</name>
        <type><![CDATA[corba/<primitivedef>]]></type>
        <description></description>
      </out>
    </outs>
  </functiondef>
  <description>
<p>The corba/repository/get-primitive operation returns a reference to
a <![CDATA[corba/<primitivedef>]]> with the specified kind
attribute. All <![CDATA[corba/<primitivedef>]]>s are immutable and
owned by the <![CDATA[corba/<repository>]]>.</p>
  </description>
  <seealso></seealso>
</entry>

<entry>
  <name><![CDATA[corba/repository/lookup-id]]></name>
  <functiondef>
    <ins>
      <in>
        <name>object</name>
        <type><![CDATA[corba/<repository>]]></type>
        <description></description>
      </in>
      <in>
        <name>search-id</name>
        <type><![CDATA[corba/<repositoryid>]]></type>
        <description></description>
      </in>
    </ins>
    <outs>
      <out>
        <name>result</name>
        <type><![CDATA[corba/<contained>]]></type>
        <description></description>
      </out>
    </outs>
  </functiondef>
  <description>
<p>The corba/repository/lookup-id operation is used to lookup an
object in a <![CDATA[corba/<repository>]]> given its RepositoryId. If
the Repository does not contain a definition for search-id, a nil
object reference is returned.</p>
  </description>
  <seealso></seealso>
</entry>

<entry>
  <name><![CDATA[corba/request/add-arg]]></name>
  <functiondef>
    <ins>
      <in>
        <name>request</name>
        <type><![CDATA[corba/<request>]]></type>
        <description></description>
      </in>
      <in>
        <name>name</name>
        <type><![CDATA[corba/<identifier>]]></type>
        <description></description>
      </in>
      <in>
        <name>arg-type</name>
        <type><![CDATA[<typecode>:corba-protocol:corba-protocol]]></type>
        <description></description>
      </in>
      <in>
        <name>value</name>
        <type><![CDATA[<object>]]></type>
        <description></description>
      </in>
      <in>
        <name>len</name>
        <type><![CDATA[corba/<long>]]></type>
        <description></description>
      </in>
      <in>
        <name>arg-flags</name>
        <type><![CDATA[corba/<flags>]]></type>
        <description></description>
      </in>
    </ins>
    <outs>
    </outs>
  </functiondef>
  <description>
<p>corba/request/add-arg incrementally adds arguments to the request.</p>

<p>For each argument, minimally its value must be specified. An argument's data
type, name, and usage flags (i.e., in, out, inout) may also be specified. If so indicated,
arguments are validated for data type, order, name, and usage correctness against the
set of arguments expected for the indicated operation.</p>

<p>An implementation of the request services may relax the order constraint (and allow
arguments to be specified out of order) by doing ordering based upon argument name.
The arguments added to the request become associated with the request and are
assumed to be unchanged until the invoke has completed (or the request has been
deleted).</p>

<p>Arguments may be associated with a request by specifying them on
the corba/object/create-request call or by adding them via calls to
corba/request/add-arg. Using both methods for specifying arguments,
for the same request, is not currently supported.</p>
  </description>
  <seealso></seealso>
</entry>

<entry>
  <name><![CDATA[corba/request/add-context]]></name>
  <functiondef>
    <ins>
      <in>
        <name>request</name>
        <type><![CDATA[corba/<request>]]></type>
        <description></description>
      </in>
      <in>
        <name>propname</name>
        <type><![CDATA[corba/<identifier>]]></type>
        <description></description>
      </in>
    </ins>
    <outs>
    </outs>
  </functiondef>
  <description></description>
  <seealso></seealso>
</entry>

<entry>
  <name><![CDATA[corba/request/add-exception]]></name>
  <functiondef>
    <ins>
      <in>
        <name>request</name>
        <type><![CDATA[corba/<request>]]></type>
        <description></description>
      </in>
      <in>
        <name>exception-type</name>
        <type><![CDATA[<typecode>:corba-protocol:corba-protocol]]></type>
        <description></description>
      </in>
    </ins>
    <outs>
    </outs>
  </functiondef>
  <description></description>
  <seealso></seealso>
</entry>

<entry>
  <name><![CDATA[corba/request/delete]]></name>
  <functiondef>
    <ins>
      <in>
        <name>request</name>
        <type><![CDATA[corba/<request>]]></type>
        <description></description>
      </in>
    </ins>
    <outs>
    </outs>
  </functiondef>
  <description></description>
  <seealso></seealso>
</entry>

<entry>
  <name><![CDATA[corba/request/get-response]]></name>
  <functiondef>
    <ins>
      <in>
        <name>request</name>
        <type><![CDATA[corba/<request>]]></type>
        <description></description>
      </in>
      <in>
        <name>response-flags</name>
        <type><![CDATA[corba/<flags>]]></type>
        <description></description>
      </in>
    </ins>
    <outs>
    </outs>
    <raises>
      <type><![CDATA[corba/<wrongtransaction>]]></type>
    </raises>
  </functiondef>
  <description>
<p>corba/request/get-response determines whether a request has
completed. If corba/request/get-response indicates that the operation
is done, the out parameters and return values defined in the Request
are valid, and they may be treated as if the Request invoke operation
had been used to perform the request.</p>

<p>If the corba/$resp-no-wait flag is set, corba/request/get-response
returns immediately even if the request is still in
progress. Otherwise, get_response waits until the request is done
before returning.</p>

<p>The following response flag is defined for get_response:</p>

<p>CORBA::RESP_NO_WAIT indicates that the caller does not want to wait for a
response.</p>

<p>A request has an associated transaction context if the thread
originating the request had a non-null transaction context and the
target object is a transactional object. The
corba/request/get-response operation may raise the WrongTransaction
exception if the request has an associated transaction context, and
the thread invoking get_response either has a null transaction context
or a non-null transaction context that differs from that of the
request.</p>
  </description>
  <seealso></seealso>
</entry>

<entry>
  <name><![CDATA[corba/request/invoke]]></name>
  <functiondef>
    <ins>
      <in>
        <name>request</name>
        <type><![CDATA[corba/<request>]]></type>
        <description></description>
      </in>
      <in>
        <name>invoke-flags</name>
        <type><![CDATA[corba/<flags>]]></type>
        <description></description>
      </in>
    </ins>
    <outs>
    </outs>
  </functiondef>
  <description>
<p>This operation calls the ORB, which performs method resolution and
invokes an appropriate method. If the method returns successfully, its
result is placed in the result argument specified on
corba/object/create-request. The behavior is undefined if the Request
pseudo-object has already been used with a previous call to
corba/request/invoke, corba/request/send, or
corba/orb/send_multiple_requests.</p>
  </description>
  <seealso></seealso>
</entry>

<entry>
  <name><![CDATA[corba/request/send]]></name>
  <functiondef>
    <ins>
      <in>
        <name>request</name>
        <type><![CDATA[corba/<request>]]></type>
        <description></description>
      </in>
      <in>
        <name>invoke-flags</name>
        <type><![CDATA[corba/<flags>]]></type>
        <description></description>
      </in>
    </ins>
    <outs>
    </outs>
  </functiondef>
  <description>
<p>send initiates an operation according to the information in the Request. Unlike
invoke, send returns control to the caller without waiting for the operation to finish.
To determine when the operation is done, the caller must use the get_response or
get_next_response operations described below. The out parameters and return value
must not be used until the operation is done.</p>

<p>Although it is possible for some standard exceptions to be raised by the send
operation, there is no guarantee that all possible errors will be detected. For example,
if the object reference is not valid, send might detect it and raise an exception, or
might return before the object reference is validated, in which case the exception will
be raised when get_response is called.</p>

<p>If the operation is defined to be oneway or if corba/$inv-no-response is specified, then
get_response does not need to be called. In such cases, some errors might go
unreported, since if they are not detected before send returns there is no way to
inform the caller of the error.</p>

<p>The following invocation flags are currently defined for send:</p>

<p>corba/$inv-no-response indicates that the invoker does not intend to wait for a
response, nor does it expect any of the output arguments (in/out and out) to be updated.
This option may be specified even if the operation has not been defined to be oneway.</p>
  </description>
  <seealso></seealso>
</entry>

<entry>
  <name><![CDATA[corba/sequencedef/bound]]></name>
  <functiondef>
    <ins>
      <in>
        <name>object</name>
        <type><![CDATA[corba/<sequencedef>]]></type>
        <description></description>
      </in>
    </ins>
    <outs>
      <out>
        <name>result</name>
        <type><![CDATA[corba/<unsigned-long>]]></type>
        <description></description>
      </out>
    </outs>
  </functiondef>
  <description></description>
  <seealso></seealso>
</entry>

<entry>
  <name><![CDATA[corba/sequencedef/bound-setter]]></name>
  <functiondef>
    <ins>
      <in>
        <name>new-value</name>
        <type><![CDATA[corba/<unsigned-long>]]></type>
        <description></description>
      </in>
      <in>
        <name>object</name>
        <type><![CDATA[corba/<sequencedef>]]></type>
        <description></description>
      </in>
    </ins>
    <outs>
      <out>
        <name>result</name>
        <type><![CDATA[corba/<unsigned-long>]]></type>
        <description></description>
      </out>
    </outs>
  </functiondef>
  <description></description>
  <seealso></seealso>
</entry>

<entry>
  <name><![CDATA[corba/sequencedef/element-type]]></name>
  <functiondef>
    <ins>
      <in>
        <name>object</name>
        <type><![CDATA[corba/<sequencedef>]]></type>
        <description></description>
      </in>
    </ins>
    <outs>
      <out>
        <name>result</name>
        <type><![CDATA[corba/<typecode>]]></type>
        <description></description>
      </out>
    </outs>
  </functiondef>
  <description></description>
  <seealso></seealso>
</entry>

<entry>
  <name><![CDATA[corba/sequencedef/element-type-def]]></name>
  <functiondef>
    <ins>
      <in>
        <name>object</name>
        <type><![CDATA[corba/<sequencedef>]]></type>
        <description></description>
      </in>
    </ins>
    <outs>
      <out>
        <name>result</name>
        <type><![CDATA[corba/<idltype>]]></type>
        <description></description>
      </out>
    </outs>
  </functiondef>
  <description></description>
  <seealso></seealso>
</entry>

<entry>
  <name><![CDATA[corba/sequencedef/element-type-def-setter]]></name>
  <functiondef>
    <ins>
      <in>
        <name>new-value</name>
        <type><![CDATA[corba/<idltype>]]></type>
        <description></description>
      </in>
      <in>
        <name>object</name>
        <type><![CDATA[corba/<sequencedef>]]></type>
        <description></description>
      </in>
    </ins>
    <outs>
      <out>
        <name>result</name>
        <type><![CDATA[corba/<idltype>]]></type>
        <description></description>
      </out>
    </outs>
  </functiondef>
  <description></description>
  <seealso></seealso>
</entry>

<entry>
  <name><![CDATA[corba/serverrequest/arguments]]></name>
  <functiondef>
    <ins>
      <in>
        <name>request</name>
        <type><![CDATA[corba/<serverrequest>]]></type>
        <description></description>
      </in>
      <in>
        <name>nv</name>
        <type><![CDATA[corba/<nvlist>]]></type>
        <description></description>
      </in>
    </ins>
    <outs>
      <out>
        <name>nv</name>
        <type><![CDATA[corba/<nvlist>]]></type>
        <description></description>
      </out>
    </outs>
  </functiondef>
  <description>
<p>Operation parameter types will be specified, and "in" and "inout"
argument values will be retrieved, with corba/serverrequest/arguments. Unless it calls
corba/serverrequest/set-exception, the DIR must call corba/serverrequest/arguments exactly
once, even if the operation signature contains no parameters. Once
corba/serverrequest/arguments or corba/serverrequest/set-exception has
been called, calling corba/serverrequest/arguments on the same
<![CDATA[corba/<serverrequest>]]> will result in a
<![CDATA[corba/<bad-inv-order>]]> system exception. The DIR must pass
in to corba/serverrequest/arguments an <![CDATA[corba/<nvlist>]]> initialized with
TypeCodes and Flags describing the parameter types for the operation,
in the order in which they appear in the IDL specification (left to
right). A potentially-different NVList will be returned from
corba/serverrequest/arguments, with the "in" and "inout" argument values supplied. If it
does not call corba/serverrequest/set-exception, the DIR must supply
the returned <![CDATA[corba/<nvlist>]]> with return values for any
"out" arguments before returning, and may also change the return
values for any "inout" arguments.</p>
  </description>
  <seealso></seealso>
</entry>

<entry>
  <name><![CDATA[corba/serverrequest/ctx]]></name>
  <functiondef>
    <ins>
      <in>
        <name>request</name>
        <type><![CDATA[corba/<serverrequest>]]></type>
        <description></description>
      </in>
    </ins>
    <outs>
      <out>
        <name>context</name>
        <type><![CDATA[corba/<context>]]></type>
        <description></description>
      </out>
    </outs>
  </functiondef>
  <description>
<p>When the operation is not an attribute access, and the operation's
IDL definition contains a context expression, corba/serverrequest/ctx
will return the context information specified in IDL for the
operation. Otherwise it will return a nil Context reference. Calling
corba/serverrequest/ctx before corba/serverrequest/arguments has been called or after
corba/serverrequest/ctx, corba/serverrequest/set-result or
corba/serverrequest/set-exception has been called will result in a
<![CDATA[corba/<bad-inv-order>]]> system exception.</p>
  </description>
  <seealso></seealso>
</entry>

<entry>
  <name><![CDATA[corba/serverrequest/forward]]></name>
  <functiondef>
    <ins>
      <in>
        <name>request</name>
        <type><![CDATA[corba/<serverrequest>]]></type>
        <description></description>
      </in>
      <in>
        <name>forward</name>
        <type><![CDATA[corba/<object>]]></type>
        <description></description>
      </in>
      <in>
        <name>context</name>
        <type><![CDATA[<object>]]></type>
        <description></description>
      </in>
    </ins>
    <outs>
    </outs>
  </functiondef>
  <description></description>
  <seealso></seealso>
</entry>

<entry>
  <name><![CDATA[corba/serverrequest/invoke]]></name>
  <functiondef>
    <ins>
      <in>
        <name>request</name>
        <type><![CDATA[corba/<serverrequest>]]></type>
        <description></description>
      </in>
      <in>
        <name>servant</name>
        <type><![CDATA[portableserver/<servant>]]></type>
        <description></description>
      </in>
    </ins>
    <outs>
    </outs>
  </functiondef>
  <description>
<p>This is called by the ORB as part of the DSI. A dynamic server
application need only define a method on this
portableserver/<dynamic-servant> in order to implement every request.</p>

<p>The method must call methods on the
<![CDATA[corba/<serverrequest>]]> object itself in order to extract
the arguments and the expected result etc.</p>

<p>This method is known as the Dynamic Implementation Routine (DIR).</p>
  </description>
  <seealso>
    <see><![CDATA[portableserver/<dynamic-servant>]]></see>
    <see><![CDATA[corba/serverrequest/operation]]></see>
    <see><![CDATA[corba/serverrequest/arguments]]></see>
    <see><![CDATA[corba/serverrequest/ctx]]></see>
    <see><![CDATA[corba/serverrequest/set-result]]></see>
    <see><![CDATA[corba/serverrequest/set-exception]]></see>
  </seealso>
</entry>

<entry>
  <name><![CDATA[corba/serverrequest/operation]]></name>
  <functiondef>
    <ins>
      <in>
        <name>request</name>
        <type><![CDATA[corba/<serverrequest>]]></type>
        <description></description>
      </in>
    </ins>
    <outs>
      <out>
        <name>identifier</name>
        <type><![CDATA[corba/<identifier>]]></type>
        <description></description>
      </out>
    </outs>
  </functiondef>
  <description>
<p>The operation attribute provides the identifier naming the
operation being invoked; according to OMG IDL's rules, these names
must be unique among all operations supported by the object's
"most-derived" interface. Note that the operation names for getting
and setting attributes are <![CDATA[_get_<attribute_name>]]> and
<![CDATA[_set_<attribute_name>]]>, respectively. The operation
attribute can be accessed by the DIR at any time.</p>
  </description>
  <seealso></seealso>
</entry>

<entry>
  <name><![CDATA[corba/serverrequest/set-exception]]></name>
  <functiondef>
    <ins>
      <in>
        <name>request</name>
        <type><![CDATA[corba/<serverrequest>]]></type>
        <description></description>
      </in>
      <in>
        <name>val</name>
        <type><![CDATA[corba/<any>]]></type>
        <description></description>
      </in>
    </ins>
    <outs>
    </outs>
  </functiondef>
  <description>
<p>The DIR may call corba/serverrequest/set-exception at any time to
return an exception to the client. The <![CDATA[corba/<any>]]> passed
to corba/serverrequest/set-exception must contain either a system
exception or one of the user exceptions specified in the raises
expression of the invoked operation's IDL definition.  Passing in a
<![CDATA[corba/<any>]]> that does not contain an exception will result
in a <![CDATA[corba/<bad-param>]]> system exception. Passing in an
unlisted user exception will result in either the DIR receiving a
<![CDATA[corba/<bad-param>]]> system exception or in the client
receiving an <![CDATA[corba/<unknown-exception>]]> system
exception.</p>
  </description>
  <seealso></seealso>
</entry>

<entry>
  <name><![CDATA[corba/serverrequest/set-result]]></name>
  <functiondef>
    <ins>
      <in>
        <name>request</name>
        <type><![CDATA[corba/<serverrequest>]]></type>
        <description></description>
      </in>
      <in>
        <name>val</name>
        <type><![CDATA[corba/<any>]]></type>
        <description></description>
      </in>
    </ins>
    <outs>
    </outs>
  </functiondef>
  <description>
<p>The corba/serverrequest/set-result operation is used to specify any
return value for the call. Unless corba/serverrequest/set-exception is
called, if the invoked operation has a non-void result type,
corba/serverrequest/set-result must be called exactly once before the
DIR returns. If the operation has a void result type,
corba/serverrequest/set-result may optionally be called once with an
Any whose type is #"tk-void".  Calling corba/serverrequest/set-result
before corba/serverrequest/arguments has been called or after
corba/serverrequest/set-result or corba/serverrequest/set-exception
has been called will result in a <![CDATA[corba/<bad-inv-order>]]>
system exception.  Calling corba/serverrequest/set-result without
having previously called corba/serverrequest/ctx when the operation
IDL contains a context expression, or when the NVList passed to
corba/serverrequest/arguments did not describe all parameters passed
by the client, may result in a MARSHAL system exception.</p>
  </description>
  <seealso></seealso>
</entry>

<entry>
  <name><![CDATA[corba/stringdef/bound]]></name>
  <functiondef>
    <ins>
      <in>
        <name>object</name>
        <type><![CDATA[corba/<stringdef>]]></type>
        <description></description>
      </in>
    </ins>
    <outs>
      <out>
        <name>result</name>
        <type><![CDATA[corba/<unsigned-long>]]></type>
        <description></description>
      </out>
    </outs>
  </functiondef>
  <description></description>
  <seealso></seealso>
</entry>

<entry>
  <name><![CDATA[corba/stringdef/bound-setter]]></name>
  <functiondef>
    <ins>
      <in>
        <name>new-value</name>
        <type><![CDATA[corba/<unsigned-long>]]></type>
        <description></description>
      </in>
      <in>
        <name>object</name>
        <type><![CDATA[corba/<stringdef>]]></type>
        <description></description>
      </in>
    </ins>
    <outs>
      <out>
        <name>result</name>
        <type><![CDATA[corba/<unsigned-long>]]></type>
        <description></description>
      </out>
    </outs>
  </functiondef>
  <description></description>
  <seealso></seealso>
</entry>

<entry>
  <name><![CDATA[corba/structdef/members]]></name>
  <functiondef>
    <ins>
      <in>
        <name>object</name>
        <type><![CDATA[corba/<structdef>]]></type>
        <description></description>
      </in>
    </ins>
    <outs>
      <out>
        <name>result</name>
        <type><![CDATA[corba/<structmemberseq>]]></type>
        <description></description>
      </out>
    </outs>
  </functiondef>
  <description></description>
  <seealso></seealso>
</entry>

<entry>
  <name><![CDATA[corba/structdef/members-setter]]></name>
  <functiondef>
    <ins>
      <in>
        <name>new-value</name>
        <type><![CDATA[corba/<structmemberseq>]]></type>
        <description></description>
      </in>
      <in>
        <name>object</name>
        <type><![CDATA[corba/<structdef>]]></type>
        <description></description>
      </in>
    </ins>
    <outs>
      <out>
        <name>result</name>
        <type><![CDATA[corba/<structmemberseq>]]></type>
        <description></description>
      </out>
    </outs>
  </functiondef>
  <description></description>
  <seealso></seealso>
</entry>

<entry>
  <name><![CDATA[corba/structmember/name]]></name>
  <functiondef>
    <ins>
      <in>
        <name>object</name>
        <type><![CDATA[<object>]]></type>
        <description></description>
      </in>
    </ins>
    <outs>
      <out>
        <name>results</name>
        <type><![CDATA[<object>]]></type>
        <description></description>
      </out>
    </outs>
  </functiondef>
  <description></description>
  <seealso></seealso>
</entry>

<entry>
  <name><![CDATA[corba/structmember/name-setter]]></name>
  <functiondef>
    <ins>
      <in>
        <name>value</name>
        <type><![CDATA[<object>]]></type>
        <description></description>
      </in>
      <in>
        <name>object</name>
        <type><![CDATA[<object>]]></type>
        <description></description>
      </in>
    </ins>
    <outs>
      <out>
        <name>results</name>
        <type><![CDATA[<object>]]></type>
        <description></description>
      </out>
    </outs>
  </functiondef>
  <description></description>
  <seealso></seealso>
</entry>

<entry>
  <name><![CDATA[corba/structmember/type]]></name>
  <functiondef>
    <ins>
      <in>
        <name>object</name>
        <type><![CDATA[<object>]]></type>
        <description></description>
      </in>
    </ins>
    <outs>
      <out>
        <name>results</name>
        <type><![CDATA[<object>]]></type>
        <description></description>
      </out>
    </outs>
  </functiondef>
  <description></description>
  <seealso></seealso>
</entry>

<entry>
  <name><![CDATA[corba/structmember/type-def]]></name>
  <functiondef>
    <ins>
      <in>
        <name>object</name>
        <type><![CDATA[<object>]]></type>
        <description></description>
      </in>
    </ins>
    <outs>
      <out>
        <name>results</name>
        <type><![CDATA[<object>]]></type>
        <description></description>
      </out>
    </outs>
  </functiondef>
  <description></description>
  <seealso></seealso>
</entry>

<entry>
  <name><![CDATA[corba/structmember/type-def-setter]]></name>
  <functiondef>
    <ins>
      <in>
        <name>value</name>
        <type><![CDATA[<object>]]></type>
        <description></description>
      </in>
      <in>
        <name>object</name>
        <type><![CDATA[<object>]]></type>
        <description></description>
      </in>
    </ins>
    <outs>
      <out>
        <name>results</name>
        <type><![CDATA[<object>]]></type>
        <description></description>
      </out>
    </outs>
  </functiondef>
  <description></description>
  <seealso></seealso>
</entry>

<entry>
  <name><![CDATA[corba/structmember/type-setter]]></name>
  <functiondef>
    <ins>
      <in>
        <name>value</name>
        <type><![CDATA[<object>]]></type>
        <description></description>
      </in>
      <in>
        <name>object</name>
        <type><![CDATA[<object>]]></type>
        <description></description>
      </in>
    </ins>
    <outs>
      <out>
        <name>results</name>
        <type><![CDATA[<object>]]></type>
        <description></description>
      </out>
    </outs>
  </functiondef>
  <description></description>
  <seealso></seealso>
</entry>

<entry>
  <name><![CDATA[corba/tckind/<]]></name>
  <functiondef>
    <ins>
      <in>
        <name>lesser</name>
        <type><![CDATA[corba/<tckind>]]></type>
        <description></description>
      </in>
      <in>
        <name>greater</name>
        <type><![CDATA[corba/<tckind>]]></type>
        <description></description>
      </in>
    </ins>
    <outs>
      <out>
        <name>lesser?</name>
        <type><![CDATA[<boolean>]]></type>
        <description></description>
      </out>
    </outs>
  </functiondef>
  <description></description>
  <seealso></seealso>
</entry>

<entry>
  <name><![CDATA[corba/tckind/>]]></name>
  <functiondef>
    <ins>
      <in>
        <name>greater</name>
        <type><![CDATA[corba/<tckind>]]></type>
        <description></description>
      </in>
      <in>
        <name>lesser</name>
        <type><![CDATA[corba/<tckind>]]></type>
        <description></description>
      </in>
    </ins>
    <outs>
      <out>
        <name>greater?</name>
        <type><![CDATA[<boolean>]]></type>
        <description></description>
      </out>
    </outs>
  </functiondef>
  <description></description>
  <seealso></seealso>
</entry>

<entry>
  <name><![CDATA[corba/tckind/predecessor]]></name>
  <functiondef>
    <ins>
      <in>
        <name>symbol</name>
        <type><![CDATA[corba/<tckind>]]></type>
        <description></description>
      </in>
    </ins>
    <outs>
      <out>
        <name>pred</name>
        <type><![CDATA[corba/<tckind>]]></type>
        <description></description>
      </out>
    </outs>
  </functiondef>
  <description></description>
  <seealso></seealso>
</entry>

<entry>
  <name><![CDATA[corba/tckind/successor]]></name>
  <functiondef>
    <ins>
      <in>
        <name>symbol</name>
        <type><![CDATA[corba/<tckind>]]></type>
        <description></description>
      </in>
    </ins>
    <outs>
      <out>
        <name>succ</name>
        <type><![CDATA[corba/<tckind>]]></type>
        <description></description>
      </out>
    </outs>
  </functiondef>
  <description></description>
  <seealso></seealso>
</entry>

<entry>
  <name><![CDATA[corba/transaction-required/completed]]></name>
  <functiondef>
    <ins>
      <in>
        <name>object</name>
        <type><![CDATA[<object>]]></type>
        <description></description>
      </in>
    </ins>
    <outs>
      <out>
        <name>results</name>
        <type><![CDATA[<object>]]></type>
        <description></description>
      </out>
    </outs>
  </functiondef>
  <description></description>
  <seealso></seealso>
</entry>

<entry>
  <name><![CDATA[corba/transaction-required/completed-setter]]></name>
  <functiondef>
    <ins>
      <in>
        <name>value</name>
        <type><![CDATA[<object>]]></type>
        <description></description>
      </in>
      <in>
        <name>object</name>
        <type><![CDATA[<object>]]></type>
        <description></description>
      </in>
    </ins>
    <outs>
      <out>
        <name>results</name>
        <type><![CDATA[<object>]]></type>
        <description></description>
      </out>
    </outs>
  </functiondef>
  <description></description>
  <seealso></seealso>
</entry>

<entry>
  <name><![CDATA[corba/transaction-required/minor]]></name>
  <functiondef>
    <ins>
      <in>
        <name>object</name>
        <type><![CDATA[<object>]]></type>
        <description></description>
      </in>
    </ins>
    <outs>
      <out>
        <name>results</name>
        <type><![CDATA[<object>]]></type>
        <description></description>
      </out>
    </outs>
  </functiondef>
  <description></description>
  <seealso></seealso>
</entry>

<entry>
  <name><![CDATA[corba/transaction-required/minor-setter]]></name>
  <functiondef>
    <ins>
      <in>
        <name>value</name>
        <type><![CDATA[<object>]]></type>
        <description></description>
      </in>
      <in>
        <name>object</name>
        <type><![CDATA[<object>]]></type>
        <description></description>
      </in>
    </ins>
    <outs>
      <out>
        <name>results</name>
        <type><![CDATA[<object>]]></type>
        <description></description>
      </out>
    </outs>
  </functiondef>
  <description></description>
  <seealso></seealso>
</entry>

<entry>
  <name><![CDATA[corba/transaction-rolledback/completed]]></name>
  <functiondef>
    <ins>
      <in>
        <name>object</name>
        <type><![CDATA[<object>]]></type>
        <description></description>
      </in>
    </ins>
    <outs>
      <out>
        <name>results</name>
        <type><![CDATA[<object>]]></type>
        <description></description>
      </out>
    </outs>
  </functiondef>
  <description></description>
  <seealso></seealso>
</entry>

<entry>
  <name><![CDATA[corba/transaction-rolledback/completed-setter]]></name>
  <functiondef>
    <ins>
      <in>
        <name>value</name>
        <type><![CDATA[<object>]]></type>
        <description></description>
      </in>
      <in>
        <name>object</name>
        <type><![CDATA[<object>]]></type>
        <description></description>
      </in>
    </ins>
    <outs>
      <out>
        <name>results</name>
        <type><![CDATA[<object>]]></type>
        <description></description>
      </out>
    </outs>
  </functiondef>
  <description></description>
  <seealso></seealso>
</entry>

<entry>
  <name><![CDATA[corba/transaction-rolledback/minor]]></name>
  <functiondef>
    <ins>
      <in>
        <name>object</name>
        <type><![CDATA[<object>]]></type>
        <description></description>
      </in>
    </ins>
    <outs>
      <out>
        <name>results</name>
        <type><![CDATA[<object>]]></type>
        <description></description>
      </out>
    </outs>
  </functiondef>
  <description></description>
  <seealso></seealso>
</entry>

<entry>
  <name><![CDATA[corba/transaction-rolledback/minor-setter]]></name>
  <functiondef>
    <ins>
      <in>
        <name>value</name>
        <type><![CDATA[<object>]]></type>
        <description></description>
      </in>
      <in>
        <name>object</name>
        <type><![CDATA[<object>]]></type>
        <description></description>
      </in>
    </ins>
    <outs>
      <out>
        <name>results</name>
        <type><![CDATA[<object>]]></type>
        <description></description>
      </out>
    </outs>
  </functiondef>
  <description></description>
  <seealso></seealso>
</entry>

<entry>
  <name><![CDATA[corba/transient/completed]]></name>
  <functiondef>
    <ins>
      <in>
        <name>object</name>
        <type><![CDATA[<object>]]></type>
        <description></description>
      </in>
    </ins>
    <outs>
      <out>
        <name>results</name>
        <type><![CDATA[<object>]]></type>
        <description></description>
      </out>
    </outs>
  </functiondef>
  <description></description>
  <seealso></seealso>
</entry>

<entry>
  <name><![CDATA[corba/transient/completed-setter]]></name>
  <functiondef>
    <ins>
      <in>
        <name>value</name>
        <type><![CDATA[<object>]]></type>
        <description></description>
      </in>
      <in>
        <name>object</name>
        <type><![CDATA[<object>]]></type>
        <description></description>
      </in>
    </ins>
    <outs>
      <out>
        <name>results</name>
        <type><![CDATA[<object>]]></type>
        <description></description>
      </out>
    </outs>
  </functiondef>
  <description></description>
  <seealso></seealso>
</entry>

<entry>
  <name><![CDATA[corba/transient/minor]]></name>
  <functiondef>
    <ins>
      <in>
        <name>object</name>
        <type><![CDATA[<object>]]></type>
        <description></description>
      </in>
    </ins>
    <outs>
      <out>
        <name>results</name>
        <type><![CDATA[<object>]]></type>
        <description></description>
      </out>
    </outs>
  </functiondef>
  <description></description>
  <seealso></seealso>
</entry>

<entry>
  <name><![CDATA[corba/transient/minor-setter]]></name>
  <functiondef>
    <ins>
      <in>
        <name>value</name>
        <type><![CDATA[<object>]]></type>
        <description></description>
      </in>
      <in>
        <name>object</name>
        <type><![CDATA[<object>]]></type>
        <description></description>
      </in>
    </ins>
    <outs>
      <out>
        <name>results</name>
        <type><![CDATA[<object>]]></type>
        <description></description>
      </out>
    </outs>
  </functiondef>
  <description></description>
  <seealso></seealso>
</entry>

<entry>
  <name><![CDATA[corba/typecode/$badkind-typecode]]></name>
  <constantdef>
    <type><![CDATA[<object>]]></type>
    <value><![CDATA[#f]]></value>
  </constantdef>
  <description></description>
  <seealso></seealso>
</entry>

<entry>
  <name><![CDATA[corba/typecode/$bounds-typecode]]></name>
  <constantdef>
    <type><![CDATA[<object>]]></type>
    <value><![CDATA[#f]]></value>
  </constantdef>
  <description></description>
  <seealso></seealso>
</entry>

<entry>
  <name><![CDATA[corba/typecode/<badkind>]]></name>
  <classdef>
    <modifiers></modifiers>
    <superclasses>
      <![CDATA[corba/<user-exception>]]>
    </superclasses>
    <keywords>
    </keywords>
  </classdef>
  <description></description>
  <seealso></seealso>
</entry>

<entry>
  <name><![CDATA[corba/typecode/<bounds>]]></name>
  <classdef>
    <modifiers></modifiers>
    <superclasses>
      <![CDATA[corba/<user-exception>]]>
    </superclasses>
    <keywords>
    </keywords>
  </classdef>
  <description></description>
  <seealso></seealso>
</entry>

<entry>
  <name><![CDATA[corba/typecode/content-type]]></name>
  <functiondef>
    <ins>
      <in>
        <name>object</name>
        <type><![CDATA[corba/<typecode>]]></type>
        <description></description>
      </in>
    </ins>
    <outs>
      <out>
        <name>result</name>
        <type><![CDATA[corba/<typecode>]]></type>
        <description></description>
      </out>
    </outs>
  </functiondef>
  <description>
<p>The corba/typecode/content-type operation can be invoked on
sequence, array, and alias <![CDATA[corba/<typecode>]]>s. For
sequences and arrays, it returns the element type. For aliases, it
returns the original type.</p>
  </description>
  <seealso></seealso>
</entry>

<entry>
  <name><![CDATA[corba/typecode/default-index]]></name>
  <functiondef>
    <ins>
      <in>
        <name>object</name>
        <type><![CDATA[corba/<typecode>]]></type>
        <description></description>
      </in>
    </ins>
    <outs>
      <out>
        <name>result</name>
        <type><![CDATA[corba/<long>]]></type>
        <description></description>
      </out>
    </outs>
  </functiondef>
  <description>
  </description>
  <seealso>
    <see>corba/typecode/member-label</see>
  </seealso>
</entry>

<entry>
  <name><![CDATA[corba/typecode/discriminator-type]]></name>
  <functiondef>
    <ins>
      <in>
        <name>object</name>
        <type><![CDATA[corba/<typecode>]]></type>
        <description></description>
      </in>
    </ins>
    <outs>
      <out>
        <name>result</name>
        <type><![CDATA[corba/<typecode>]]></type>
        <description></description>
      </out>
    </outs>
  </functiondef>
  <description>
  </description>
  <seealso>
    <see>corba/typecode/member-label</see>
  </seealso>
</entry>

<entry>
  <name><![CDATA[corba/typecode/equal]]></name>
  <functiondef>
    <ins>
      <in>
        <name>object</name>
        <type><![CDATA[corba/<typecode>]]></type>
        <description></description>
      </in>
      <in>
        <name>tc</name>
        <type><![CDATA[corba/<typecode>]]></type>
        <description></description>
      </in>
    </ins>
    <outs>
      <out>
        <name>result</name>
        <type><![CDATA[corba/<boolean>]]></type>
        <description></description>
      </out>
    </outs>
  </functiondef>
  <description>
<p>The corba/typecode/equal operation can be invoked on any
<![CDATA[corba/<typecode>]]>. Equal <![CDATA[corba/<typecode>]]>s are
interchangeable, and give identical results when
<![CDATA[corba/<typecode>]]> operations are applied to them.</p>
  </description>
  <seealso></seealso>
</entry>

<entry>
  <name><![CDATA[corba/typecode/id]]></name>
  <functiondef>
    <ins>
      <in>
        <name>object</name>
        <type><![CDATA[corba/<typecode>]]></type>
        <description></description>
      </in>
    </ins>
    <outs>
      <out>
        <name>result</name>
        <type><![CDATA[corba/<repositoryid>]]></type>
        <description></description>
      </out>
    </outs>
  </functiondef>
  <description>
<p>The corba/typecode/id operation can be invoked on object reference, structure, union, enumeration,
alias, and exception <![CDATA[corba/<typecode>]]>. It returns the <![CDATA[corba/<repositoryid>]]> globally identifying the
type. Object reference and exception <![CDATA[corba/<typecode>]]>s always have a <![CDATA[corba/<repositoryid>]]>.</p>

<p>Structure, union, enumeration, and alias
<![CDATA[corba/<typecode>]]>s obtained from the Interface Repository
or the corba/orb/create-operation-list operation also always have a
<![CDATA[corba/<repositoryid>]]>. Otherwise, the corba/typecode/id
operation can return an empty string.</p>
  </description>
  <seealso></seealso>
</entry>

<entry>
  <name><![CDATA[corba/typecode/kind]]></name>
  <functiondef>
    <ins>
      <in>
        <name>object</name>
        <type><![CDATA[corba/<typecode>]]></type>
        <description></description>
      </in>
    </ins>
    <outs>
      <out>
        <name>result</name>
        <type><![CDATA[corba/<tckind>]]></type>
        <description></description>
      </out>
    </outs>
  </functiondef>
  <description>
<p>The corba/typecode/kind operation can be invoked on any <![CDATA[corba/<typecode>]]>. Its result determines what
other operations can be invoked on the <![CDATA[corba/<typecode>]]>.</p>
  </description>
  <seealso></seealso>
</entry>

<entry>
  <name><![CDATA[corba/typecode/length]]></name>
  <functiondef>
    <ins>
      <in>
        <name>object</name>
        <type><![CDATA[corba/<typecode>]]></type>
        <description></description>
      </in>
    </ins>
    <outs>
      <out>
        <name>result</name>
        <type><![CDATA[corba/<unsigned-long>]]></type>
        <description></description>
      </out>
    </outs>
  </functiondef>
  <description>
<p>The corba/typecode/length operation can be invoked on string, wide
string, sequence, and array <![CDATA[corba/<typecode>]]>s. For strings
and sequences, it returns the bound, with zero indicating an unbounded
string or sequence. For arrays, it returns the number of elements in
the array. For wide strings, it returns the bound, or zero for
unbounded wide strings.</p>
  </description>
  <seealso></seealso>
</entry>

<entry>
  <name><![CDATA[corba/typecode/member-count]]></name>
  <functiondef>
    <ins>
      <in>
        <name>object</name>
        <type><![CDATA[corba/<typecode>]]></type>
        <description></description>
      </in>
    </ins>
    <outs>
      <out>
        <name>result</name>
        <type><![CDATA[corba/<unsigned-long>]]></type>
        <description></description>
      </out>
    </outs>
  </functiondef>
  <description>
  </description>
  <seealso>
    <see>corba/typecode/member-name</see>
  </seealso>
</entry>

<entry>
  <name><![CDATA[corba/typecode/member-label]]></name>
  <functiondef>
    <ins>
      <in>
        <name>object</name>
        <type><![CDATA[corba/<typecode>]]></type>
        <description></description>
      </in>
      <in>
        <name>index</name>
        <type><![CDATA[corba/<unsigned-long>]]></type>
        <description></description>
      </in>
    </ins>
    <outs>
      <out>
        <name>result</name>
        <type><![CDATA[corba/<any>]]></type>
        <description></description>
      </out>
    </outs>
  </functiondef>
  <description>
<p>The corba/typecode/member-label, corba/typecode/discriminator-type, and corba/typecode/default-index operations can only
be invoked on union <![CDATA[corba/<typecode>]]>s. corba/typecode/member-label returns the label of the union
member identified by corba/typecode/index. For the default member, the corba/typecode/label is the zero octet. The
corba/typecode/discriminator-type operation returns the type of all non-default member labels. The
corba/typecode/default-index operation returns the index of the default member, or -1 if there is no
default member.</p>
  </description>
  <seealso></seealso>
</entry>

<entry>
  <name><![CDATA[corba/typecode/member-name]]></name>
  <functiondef>
    <ins>
      <in>
        <name>object</name>
        <type><![CDATA[corba/<typecode>]]></type>
        <description></description>
      </in>
      <in>
        <name>index</name>
        <type><![CDATA[corba/<unsigned-long>]]></type>
        <description></description>
      </in>
    </ins>
    <outs>
      <out>
        <name>result</name>
        <type><![CDATA[corba/<identifier>]]></type>
        <description></description>
      </out>
    </outs>
  </functiondef>
  <description>
<p>The corba/typecode/member-count and corba/typecode/member-name
operations can be invoked on structure, union, and enumeration
TypeCodes. corba/typecode/member-count returns the number of members
constituting the type. corba/typecode/member-name returns the simple
name of the member identified by corba/typecode/index. Since names are
local to a <![CDATA[corba/<repository>]]>, the name returned from a
<![CDATA[corba/<typecode>]]> may not match the name of the member in
any particular <![CDATA[corba/<repository>]]>, and may even be an
empty string.</p>

<p>The corba/typecode/member-name, corba/typecode/member-type, and
corba/typecode/member-label operations raise
<![CDATA[corba/typecode/<bounds>]]> if the index parameter is greater
than or equal to the number of members constituting the type.</p>
  </description>
  <seealso></seealso>
</entry>

<entry>
  <name><![CDATA[corba/typecode/member-type]]></name>
  <functiondef>
    <ins>
      <in>
        <name>object</name>
        <type><![CDATA[corba/<typecode>]]></type>
        <description></description>
      </in>
      <in>
        <name>index</name>
        <type><![CDATA[corba/<unsigned-long>]]></type>
        <description></description>
      </in>
    </ins>
    <outs>
      <out>
        <name>result</name>
        <type><![CDATA[corba/<typecode>]]></type>
        <description></description>
      </out>
    </outs>
  </functiondef>
  <description>
<p>The corba/typecode/member-type operation can be invoked on structure and union <![CDATA[corba/<typecode>]]>. It
returns the <![CDATA[corba/<typecode>]]> describing the type of the member identified by corba/typecode/index.</p>
  </description>
  <seealso></seealso>
</entry>

<entry>
  <name><![CDATA[corba/typecode/name]]></name>
  <functiondef>
    <ins>
      <in>
        <name>object</name>
        <type><![CDATA[corba/<typecode>]]></type>
        <description></description>
      </in>
    </ins>
    <outs>
      <out>
        <name>result</name>
        <type><![CDATA[corba/<identifier>]]></type>
        <description></description>
      </out>
    </outs>
  </functiondef>
  <description>
<p>The corba/typecode/name operation can also be invoked on object
reference, structure, union, enumeration, alias, and exception
<![CDATA[corba/<typecode>]]>s. It returns the simple name identifying
the type within its enclosing scope. Since names are local to a
<![CDATA[corba/<repository>]]>, the name returned from a
<![CDATA[corba/<typecode>]]> may not match the name of the type in any
particular <![CDATA[corba/<repository>]]>, and may even be an empty
string.</p>
  </description>
  <seealso></seealso>
</entry>

<entry>
  <name><![CDATA[corba/typedescription/defined-in]]></name>
  <functiondef>
    <ins>
      <in>
        <name>object</name>
        <type><![CDATA[<object>]]></type>
        <description></description>
      </in>
    </ins>
    <outs>
      <out>
        <name>results</name>
        <type><![CDATA[<object>]]></type>
        <description></description>
      </out>
    </outs>
  </functiondef>
  <description></description>
  <seealso></seealso>
</entry>

<entry>
  <name><![CDATA[corba/typedescription/defined-in-setter]]></name>
  <functiondef>
    <ins>
      <in>
        <name>value</name>
        <type><![CDATA[<object>]]></type>
        <description></description>
      </in>
      <in>
        <name>object</name>
        <type><![CDATA[<object>]]></type>
        <description></description>
      </in>
    </ins>
    <outs>
      <out>
        <name>results</name>
        <type><![CDATA[<object>]]></type>
        <description></description>
      </out>
    </outs>
  </functiondef>
  <description></description>
  <seealso></seealso>
</entry>

<entry>
  <name><![CDATA[corba/typedescription/id]]></name>
  <functiondef>
    <ins>
      <in>
        <name>object</name>
        <type><![CDATA[<object>]]></type>
        <description></description>
      </in>
    </ins>
    <outs>
      <out>
        <name>results</name>
        <type><![CDATA[<object>]]></type>
        <description></description>
      </out>
    </outs>
  </functiondef>
  <description></description>
  <seealso></seealso>
</entry>

<entry>
  <name><![CDATA[corba/typedescription/id-setter]]></name>
  <functiondef>
    <ins>
      <in>
        <name>value</name>
        <type><![CDATA[<object>]]></type>
        <description></description>
      </in>
      <in>
        <name>object</name>
        <type><![CDATA[<object>]]></type>
        <description></description>
      </in>
    </ins>
    <outs>
      <out>
        <name>results</name>
        <type><![CDATA[<object>]]></type>
        <description></description>
      </out>
    </outs>
  </functiondef>
  <description></description>
  <seealso></seealso>
</entry>

<entry>
  <name><![CDATA[corba/typedescription/name]]></name>
  <functiondef>
    <ins>
      <in>
        <name>object</name>
        <type><![CDATA[<object>]]></type>
        <description></description>
      </in>
    </ins>
    <outs>
      <out>
        <name>results</name>
        <type><![CDATA[<object>]]></type>
        <description></description>
      </out>
    </outs>
  </functiondef>
  <description></description>
  <seealso></seealso>
</entry>

<entry>
  <name><![CDATA[corba/typedescription/name-setter]]></name>
  <functiondef>
    <ins>
      <in>
        <name>value</name>
        <type><![CDATA[<object>]]></type>
        <description></description>
      </in>
      <in>
        <name>object</name>
        <type><![CDATA[<object>]]></type>
        <description></description>
      </in>
    </ins>
    <outs>
      <out>
        <name>results</name>
        <type><![CDATA[<object>]]></type>
        <description></description>
      </out>
    </outs>
  </functiondef>
  <description></description>
  <seealso></seealso>
</entry>

<entry>
  <name><![CDATA[corba/typedescription/type]]></name>
  <functiondef>
    <ins>
      <in>
        <name>object</name>
        <type><![CDATA[<object>]]></type>
        <description></description>
      </in>
    </ins>
    <outs>
      <out>
        <name>results</name>
        <type><![CDATA[<object>]]></type>
        <description></description>
      </out>
    </outs>
  </functiondef>
  <description></description>
  <seealso></seealso>
</entry>

<entry>
  <name><![CDATA[corba/typedescription/type-setter]]></name>
  <functiondef>
    <ins>
      <in>
        <name>value</name>
        <type><![CDATA[<object>]]></type>
        <description></description>
      </in>
      <in>
        <name>object</name>
        <type><![CDATA[<object>]]></type>
        <description></description>
      </in>
    </ins>
    <outs>
      <out>
        <name>results</name>
        <type><![CDATA[<object>]]></type>
        <description></description>
      </out>
    </outs>
  </functiondef>
  <description></description>
  <seealso></seealso>
</entry>

<entry>
  <name><![CDATA[corba/typedescription/version]]></name>
  <functiondef>
    <ins>
      <in>
        <name>object</name>
        <type><![CDATA[<object>]]></type>
        <description></description>
      </in>
    </ins>
    <outs>
      <out>
        <name>results</name>
        <type><![CDATA[<object>]]></type>
        <description></description>
      </out>
    </outs>
  </functiondef>
  <description></description>
  <seealso></seealso>
</entry>

<entry>
  <name><![CDATA[corba/typedescription/version-setter]]></name>
  <functiondef>
    <ins>
      <in>
        <name>value</name>
        <type><![CDATA[<object>]]></type>
        <description></description>
      </in>
      <in>
        <name>object</name>
        <type><![CDATA[<object>]]></type>
        <description></description>
      </in>
    </ins>
    <outs>
      <out>
        <name>results</name>
        <type><![CDATA[<object>]]></type>
        <description></description>
      </out>
    </outs>
  </functiondef>
  <description></description>
  <seealso></seealso>
</entry>

<entry>
  <name><![CDATA[corba/union/discriminator]]></name>
  <functiondef>
    <ins>
      <in>
        <name>object</name>
        <type><![CDATA[<object>]]></type>
        <description></description>
      </in>
    </ins>
    <outs>
      <out>
        <name>results</name>
        <type><![CDATA[<object>]]></type>
        <description></description>
      </out>
    </outs>
  </functiondef>
  <description></description>
  <seealso></seealso>
</entry>

<entry>
  <name><![CDATA[corba/union/discriminator-setter]]></name>
  <functiondef>
    <ins>
      <in>
        <name>value</name>
        <type><![CDATA[<object>]]></type>
        <description></description>
      </in>
      <in>
        <name>object</name>
        <type><![CDATA[<object>]]></type>
        <description></description>
      </in>
    </ins>
    <outs>
      <out>
        <name>results</name>
        <type><![CDATA[<object>]]></type>
        <description></description>
      </out>
    </outs>
  </functiondef>
  <description></description>
  <seealso></seealso>
</entry>

<entry>
  <name><![CDATA[corba/union/value]]></name>
  <functiondef>
    <ins>
      <in>
        <name>object</name>
        <type><![CDATA[<object>]]></type>
        <description></description>
      </in>
    </ins>
    <outs>
      <out>
        <name>results</name>
        <type><![CDATA[<object>]]></type>
        <description></description>
      </out>
    </outs>
  </functiondef>
  <description></description>
  <seealso></seealso>
</entry>

<entry>
  <name><![CDATA[corba/union/value-setter]]></name>
  <functiondef>
    <ins>
      <in>
        <name>value</name>
        <type><![CDATA[<object>]]></type>
        <description></description>
      </in>
      <in>
        <name>object</name>
        <type><![CDATA[<object>]]></type>
        <description></description>
      </in>
    </ins>
    <outs>
      <out>
        <name>results</name>
        <type><![CDATA[<object>]]></type>
        <description></description>
      </out>
    </outs>
  </functiondef>
  <description></description>
  <seealso></seealso>
</entry>

<entry>
  <name><![CDATA[corba/uniondef/discriminator-type]]></name>
  <functiondef>
    <ins>
      <in>
        <name>object</name>
        <type><![CDATA[corba/<uniondef>]]></type>
        <description></description>
      </in>
    </ins>
    <outs>
      <out>
        <name>result</name>
        <type><![CDATA[corba/<typecode>]]></type>
        <description></description>
      </out>
    </outs>
  </functiondef>
  <description></description>
  <seealso></seealso>
</entry>

<entry>
  <name><![CDATA[corba/uniondef/discriminator-type-def]]></name>
  <functiondef>
    <ins>
      <in>
        <name>object</name>
        <type><![CDATA[corba/<uniondef>]]></type>
        <description></description>
      </in>
    </ins>
    <outs>
      <out>
        <name>result</name>
        <type><![CDATA[corba/<idltype>]]></type>
        <description></description>
      </out>
    </outs>
  </functiondef>
  <description></description>
  <seealso></seealso>
</entry>

<entry>
  <name><![CDATA[corba/uniondef/discriminator-type-def-setter]]></name>
  <functiondef>
    <ins>
      <in>
        <name>new-value</name>
        <type><![CDATA[corba/<idltype>]]></type>
        <description></description>
      </in>
      <in>
        <name>object</name>
        <type><![CDATA[corba/<uniondef>]]></type>
        <description></description>
      </in>
    </ins>
    <outs>
      <out>
        <name>result</name>
        <type><![CDATA[corba/<idltype>]]></type>
        <description></description>
      </out>
    </outs>
  </functiondef>
  <description></description>
  <seealso></seealso>
</entry>

<entry>
  <name><![CDATA[corba/uniondef/members]]></name>
  <functiondef>
    <ins>
      <in>
        <name>object</name>
        <type><![CDATA[corba/<uniondef>]]></type>
        <description></description>
      </in>
    </ins>
    <outs>
      <out>
        <name>result</name>
        <type><![CDATA[corba/<unionmemberseq>]]></type>
        <description></description>
      </out>
    </outs>
  </functiondef>
  <description></description>
  <seealso></seealso>
</entry>

<entry>
  <name><![CDATA[corba/uniondef/members-setter]]></name>
  <functiondef>
    <ins>
      <in>
        <name>new-value</name>
        <type><![CDATA[corba/<unionmemberseq>]]></type>
        <description></description>
      </in>
      <in>
        <name>object</name>
        <type><![CDATA[corba/<uniondef>]]></type>
        <description></description>
      </in>
    </ins>
    <outs>
      <out>
        <name>result</name>
        <type><![CDATA[corba/<unionmemberseq>]]></type>
        <description></description>
      </out>
    </outs>
  </functiondef>
  <description></description>
  <seealso></seealso>
</entry>

<entry>
  <name><![CDATA[corba/unionmember/label]]></name>
  <functiondef>
    <ins>
      <in>
        <name>object</name>
        <type><![CDATA[<object>]]></type>
        <description></description>
      </in>
    </ins>
    <outs>
      <out>
        <name>results</name>
        <type><![CDATA[<object>]]></type>
        <description></description>
      </out>
    </outs>
  </functiondef>
  <description></description>
  <seealso></seealso>
</entry>

<entry>
  <name><![CDATA[corba/unionmember/label-setter]]></name>
  <functiondef>
    <ins>
      <in>
        <name>value</name>
        <type><![CDATA[<object>]]></type>
        <description></description>
      </in>
      <in>
        <name>object</name>
        <type><![CDATA[<object>]]></type>
        <description></description>
      </in>
    </ins>
    <outs>
      <out>
        <name>results</name>
        <type><![CDATA[<object>]]></type>
        <description></description>
      </out>
    </outs>
  </functiondef>
  <description></description>
  <seealso></seealso>
</entry>

<entry>
  <name><![CDATA[corba/unionmember/name]]></name>
  <functiondef>
    <ins>
      <in>
        <name>object</name>
        <type><![CDATA[<object>]]></type>
        <description></description>
      </in>
    </ins>
    <outs>
      <out>
        <name>results</name>
        <type><![CDATA[<object>]]></type>
        <description></description>
      </out>
    </outs>
  </functiondef>
  <description></description>
  <seealso></seealso>
</entry>

<entry>
  <name><![CDATA[corba/unionmember/name-setter]]></name>
  <functiondef>
    <ins>
      <in>
        <name>value</name>
        <type><![CDATA[<object>]]></type>
        <description></description>
      </in>
      <in>
        <name>object</name>
        <type><![CDATA[<object>]]></type>
        <description></description>
      </in>
    </ins>
    <outs>
      <out>
        <name>results</name>
        <type><![CDATA[<object>]]></type>
        <description></description>
      </out>
    </outs>
  </functiondef>
  <description></description>
  <seealso></seealso>
</entry>

<entry>
  <name><![CDATA[corba/unionmember/type]]></name>
  <functiondef>
    <ins>
      <in>
        <name>object</name>
        <type><![CDATA[<object>]]></type>
        <description></description>
      </in>
    </ins>
    <outs>
      <out>
        <name>results</name>
        <type><![CDATA[<object>]]></type>
        <description></description>
      </out>
    </outs>
  </functiondef>
  <description></description>
  <seealso></seealso>
</entry>

<entry>
  <name><![CDATA[corba/unionmember/type-def]]></name>
  <functiondef>
    <ins>
      <in>
        <name>object</name>
        <type><![CDATA[<object>]]></type>
        <description></description>
      </in>
    </ins>
    <outs>
      <out>
        <name>results</name>
        <type><![CDATA[<object>]]></type>
        <description></description>
      </out>
    </outs>
  </functiondef>
  <description></description>
  <seealso></seealso>
</entry>

<entry>
  <name><![CDATA[corba/unionmember/type-def-setter]]></name>
  <functiondef>
    <ins>
      <in>
        <name>value</name>
        <type><![CDATA[<object>]]></type>
        <description></description>
      </in>
      <in>
        <name>object</name>
        <type><![CDATA[<object>]]></type>
        <description></description>
      </in>
    </ins>
    <outs>
      <out>
        <name>results</name>
        <type><![CDATA[<object>]]></type>
        <description></description>
      </out>
    </outs>
  </functiondef>
  <description></description>
  <seealso></seealso>
</entry>

<entry>
  <name><![CDATA[corba/unionmember/type-setter]]></name>
  <functiondef>
    <ins>
      <in>
        <name>value</name>
        <type><![CDATA[<object>]]></type>
        <description></description>
      </in>
      <in>
        <name>object</name>
        <type><![CDATA[<object>]]></type>
        <description></description>
      </in>
    </ins>
    <outs>
      <out>
        <name>results</name>
        <type><![CDATA[<object>]]></type>
        <description></description>
      </out>
    </outs>
  </functiondef>
  <description></description>
  <seealso></seealso>
</entry>

<entry>
  <name><![CDATA[corba/unknown/completed]]></name>
  <functiondef>
    <ins>
      <in>
        <name>object</name>
        <type><![CDATA[<object>]]></type>
        <description></description>
      </in>
    </ins>
    <outs>
      <out>
        <name>results</name>
        <type><![CDATA[<object>]]></type>
        <description></description>
      </out>
    </outs>
  </functiondef>
  <description></description>
  <seealso></seealso>
</entry>

<entry>
  <name><![CDATA[corba/unknown/completed-setter]]></name>
  <functiondef>
    <ins>
      <in>
        <name>value</name>
        <type><![CDATA[<object>]]></type>
        <description></description>
      </in>
      <in>
        <name>object</name>
        <type><![CDATA[<object>]]></type>
        <description></description>
      </in>
    </ins>
    <outs>
      <out>
        <name>results</name>
        <type><![CDATA[<object>]]></type>
        <description></description>
      </out>
    </outs>
  </functiondef>
  <description></description>
  <seealso></seealso>
</entry>

<entry>
  <name><![CDATA[corba/unknown/minor]]></name>
  <functiondef>
    <ins>
      <in>
        <name>object</name>
        <type><![CDATA[<object>]]></type>
        <description></description>
      </in>
    </ins>
    <outs>
      <out>
        <name>results</name>
        <type><![CDATA[<object>]]></type>
        <description></description>
      </out>
    </outs>
  </functiondef>
  <description></description>
  <seealso></seealso>
</entry>

<entry>
  <name><![CDATA[corba/unknown/minor-setter]]></name>
  <functiondef>
    <ins>
      <in>
        <name>value</name>
        <type><![CDATA[<object>]]></type>
        <description></description>
      </in>
      <in>
        <name>object</name>
        <type><![CDATA[<object>]]></type>
        <description></description>
      </in>
    </ins>
    <outs>
      <out>
        <name>results</name>
        <type><![CDATA[<object>]]></type>
        <description></description>
      </out>
    </outs>
  </functiondef>
  <description></description>
  <seealso></seealso>
</entry>

<entry>
  <name><![CDATA[corba/wstringdef/bound]]></name>
  <functiondef>
    <ins>
      <in>
        <name>object</name>
        <type><![CDATA[corba/<wstringdef>]]></type>
        <description></description>
      </in>
    </ins>
    <outs>
      <out>
        <name>result</name>
        <type><![CDATA[corba/<unsigned-long>]]></type>
        <description></description>
      </out>
    </outs>
  </functiondef>
  <description></description>
  <seealso></seealso>
</entry>

<entry>
  <name><![CDATA[corba/wstringdef/bound-setter]]></name>
  <functiondef>
    <ins>
      <in>
        <name>new-value</name>
        <type><![CDATA[corba/<unsigned-long>]]></type>
        <description></description>
      </in>
      <in>
        <name>object</name>
        <type><![CDATA[corba/<wstringdef>]]></type>
        <description></description>
      </in>
    </ins>
    <outs>
      <out>
        <name>result</name>
        <type><![CDATA[corba/<unsigned-long>]]></type>
        <description></description>
      </out>
    </outs>
  </functiondef>
  <description></description>
  <seealso></seealso>
</entry>

<entry>
  <name><![CDATA[dii]]></name>
  <functiondef>
    <ins>
      <in>
        <name>operation</name>
        <type><![CDATA[<object>]]></type>
        <description></description>
      </in>
      <in>
        <name>object</name>
        <type><![CDATA[<object>]]></type>
        <description></description>
      </in>
      <in>
        <name>arguments</name>
        <type><![CDATA[<object>]]></type>
        <description></description>
      </in>
    </ins>
    <outs>
      <out>
        <name>results</name>
        <type><![CDATA[<object>]]></type>
        <description></description>
      </out>
    </outs>
  </functiondef>
  <description></description>
  <seealso></seealso>
</entry>

<entry>
  <name><![CDATA[dii-methods-definer]]></name>
  <macrodef>
  </macrodef>
  <description>
<p>define dii-methods operation, .. end;</p>

<p>Defines module-scope methods with the same signatures as the with-dii form.</p>
  </description>
  <seealso></seealso>
</entry>

<entry>
  <name><![CDATA[invalidate-requests]]></name>
  <functiondef>
    <ins>
      <in>
        <name>object</name>
        <type><![CDATA[<object>]]></type>
        <description></description>
      </in>
    </ins>
    <outs>
      <out>
        <name>results</name>
        <type><![CDATA[<object>]]></type>
        <description></description>
      </out>
    </outs>
  </functiondef>
  <description>
<p>Clears the cache of information about a request and forces the DII
function to refetch the information from the IR.</p>
  </description>
  <seealso></seealso>
</entry>

<entry>
  <name><![CDATA[invoke-operation]]></name>
  <functiondef>
    <ins>
      <in>
        <name>object</name>
        <type><![CDATA[portableserver/<servant>]]></type>
        <description></description>
      </in>
      <in>
        <name>server-request</name>
        <type><![CDATA[corba/<serverrequest>]]></type>
        <description></description>
      </in>
      <in>
        <name>operation</name>
        <type><![CDATA[<symbol>]]></type>
        <description></description>
      </in>
    </ins>
    <outs>
    </outs>
  </functiondef>
  <description></description>
  <seealso></seealso>
</entry>

<entry>
  <name><![CDATA[make-nil]]></name>
  <functiondef>
    <ins>
      <in>
        <name>class</name>
        <type><![CDATA[<class>]]></type>
        <description></description>
      </in>
    </ins>
    <outs>
      <out>
        <name>object</name>
        <type><![CDATA[corba/<object>]]></type>
        <description></description>
      </out>
    </outs>
  </functiondef>
  <description></description>
  <seealso></seealso>
</entry>

<entry>
  <name><![CDATA[maybe-collocated-invoke]]></name>
  <functiondef>
    <ins>
      <in>
        <name>request</name>
        <type><![CDATA[corba/<request>]]></type>
        <description></description>
      </in>
      <in>
        <name>flags</name>
        <type><![CDATA[corba/<flags>]]></type>
        <description></description>
      </in>
    </ins>
    <outs>
      <out>
        <name>invoked?</name>
        <type><![CDATA[<boolean>]]></type>
        <description></description>
      </out>
      <out>
        <name>forwarded?</name>
        <type><![CDATA[<boolean>]]></type>
        <description></description>
      </out>
    </outs>
  </functiondef>
  <description></description>
  <seealso></seealso>
</entry>

<entry>
  <name><![CDATA[object-typecode]]></name>
  <functiondef>
    <ins>
      <in>
        <name>object</name>
        <type><![CDATA[<object>]]></type>
        <description></description>
      </in>
    </ins>
    <outs>
      <out>
        <name>typecode</name>
        <type><![CDATA[<typecode>:corba-protocol:corba-protocol]]></type>
        <description></description>
      </out>
    </outs>
  </functiondef>
  <description></description>
  <seealso></seealso>
</entry>

<entry>
  <name><![CDATA[orb-service-port]]></name>
  <functiondef>
    <ins>
      <in>
        <name>object</name>
        <type><![CDATA[<object>]]></type>
        <description></description>
      </in>
    </ins>
    <outs>
      <out>
        <name>results</name>
        <type><![CDATA[<object>]]></type>
        <description></description>
      </out>
    </outs>
  </functiondef>
  <description></description>
  <seealso></seealso>
</entry>

<entry>
  <name><![CDATA[orb-service-port-setter]]></name>
  <functiondef>
    <ins>
      <in>
        <name>port</name>
        <type><![CDATA[<object>]]></type>
        <description></description>
      </in>
      <in>
        <name>orb</name>
        <type><![CDATA[<object>]]></type>
        <description></description>
      </in>
    </ins>
    <outs>
      <out>
        <name>results</name>
        <type><![CDATA[<object>]]></type>
        <description></description>
      </out>
    </outs>
  </functiondef>
  <description></description>
  <seealso></seealso>
</entry>

<entry>
  <name><![CDATA[portableserver/<adapteractivator>]]></name>
  <classdef>
    <modifiers>Open Abstract </modifiers>
    <superclasses>
      <![CDATA[corba/<object>]]>
    </superclasses>
    <keywords>
    </keywords>
  </classdef>
  <description></description>
  <seealso></seealso>
</entry>

<entry>
  <name><![CDATA[portableserver/<current>]]></name>
  <classdef>
    <modifiers>Open Abstract </modifiers>
    <superclasses>
      <![CDATA[corba/<current>]]>
    </superclasses>
    <keywords>
    </keywords>
  </classdef>
  <description></description>
  <seealso></seealso>
</entry>

<entry>
  <name><![CDATA[portableserver/<dynamic-servant>]]></name>
  <classdef>
    <modifiers>Open Abstract </modifiers>
    <superclasses>
      <![CDATA[portableserver/<servant>]]>
    </superclasses>
    <keywords>
    </keywords>
  </classdef>
  <description></description>
  <seealso></seealso>
</entry>

<entry>
  <name><![CDATA[portableserver/<forwardrequest>]]></name>
  <classdef>
    <modifiers></modifiers>
    <superclasses>
      <![CDATA[corba/<user-exception>]]>
    </superclasses>
    <keywords>
      <keyword>
        <name>forward-reference:</name>
        <type><![CDATA[<object>]]></type>
        <description></description>
      </keyword>
    </keywords>
  </classdef>
  <description></description>
  <seealso></seealso>
</entry>

<entry>
  <name><![CDATA[portableserver/<poa>]]></name>
  <classdef>
    <modifiers>Open Abstract </modifiers>
    <superclasses>
      <![CDATA[corba/<object>]]>
    </superclasses>
    <keywords>
    </keywords>
  </classdef>
  <description></description>
  <seealso></seealso>
</entry>

<entry>
  <name><![CDATA[portableserver/<poamanager>]]></name>
  <classdef>
    <modifiers>Open Abstract </modifiers>
    <superclasses>
      <![CDATA[corba/<object>]]>
    </superclasses>
    <keywords>
    </keywords>
  </classdef>
  <description></description>
  <seealso></seealso>
</entry>

<entry>
  <name><![CDATA[portableserver/<servant>]]></name>
  <classdef>
    <modifiers>Open Abstract </modifiers>
    <superclasses>
      <![CDATA[<object>]]>
    </superclasses>
    <keywords>
    </keywords>
  </classdef>
  <description></description>
  <seealso></seealso>
</entry>

<entry>
  <name><![CDATA[portableserver/<servantactivator>]]></name>
  <classdef>
    <modifiers>Open Abstract </modifiers>
    <superclasses>
      <![CDATA[portableserver/<servantmanager>]]>
    </superclasses>
    <keywords>
    </keywords>
  </classdef>
  <description></description>
  <seealso></seealso>
</entry>

<entry>
  <name><![CDATA[portableserver/<servantlocator>]]></name>
  <classdef>
    <modifiers>Open Abstract </modifiers>
    <superclasses>
      <![CDATA[portableserver/<servantmanager>]]>
    </superclasses>
    <keywords>
    </keywords>
  </classdef>
  <description></description>
  <seealso></seealso>
</entry>

<entry>
  <name><![CDATA[portableserver/<servantmanager>]]></name>
  <classdef>
    <modifiers>Open Abstract </modifiers>
    <superclasses>
      <![CDATA[corba/<object>]]>
    </superclasses>
    <keywords>
    </keywords>
  </classdef>
  <description></description>
  <seealso></seealso>
</entry>

<entry>
  <name><![CDATA[portableserver/adapteractivator/unknown-adapter]]></name>
  <functiondef>
    <ins>
      <in>
        <name>object</name>
        <type><![CDATA[portableserver/<adapteractivator>]]></type>
        <description></description>
      </in>
      <in>
        <name>parent</name>
        <type><![CDATA[portableserver/<poa>]]></type>
        <description></description>
      </in>
      <in>
        <name>name</name>
        <type><![CDATA[corba/<string>]]></type>
        <description></description>
      </in>
    </ins>
    <outs>
      <out>
        <name>created?</name>
        <type><![CDATA[corba/<boolean>]]></type>
        <description></description>
      </out>
    </outs>
  </functiondef>
  <description></description>
  <seealso></seealso>
</entry>

<entry>
  <name><![CDATA[portableserver/current/<nocontext>]]></name>
  <classdef>
    <modifiers></modifiers>
    <superclasses>
      <![CDATA[corba/<user-exception>]]>
    </superclasses>
    <keywords>
    </keywords>
  </classdef>
  <description></description>
  <seealso></seealso>
</entry>

<entry>
  <name><![CDATA[portableserver/current/get-object-id]]></name>
  <functiondef>
    <ins>
      <in>
        <name>current</name>
        <type><![CDATA[portableserver/<current>]]></type>
        <description></description>
      </in>
    </ins>
    <outs>
      <out>
        <name>objectid</name>
        <type><![CDATA[<string>]]></type>
        <description></description>
      </out>
    </outs>
  </functiondef>
  <description></description>
  <seealso></seealso>
</entry>

<entry>
  <name><![CDATA[portableserver/current/get-poa]]></name>
  <functiondef>
    <ins>
      <in>
        <name>current</name>
        <type><![CDATA[portableserver/<current>]]></type>
        <description></description>
      </in>
    </ins>
    <outs>
      <out>
        <name>poa</name>
        <type><![CDATA[portableserver/<poa>]]></type>
        <description></description>
      </out>
    </outs>
  </functiondef>
  <description></description>
  <seealso></seealso>
</entry>

<entry>
  <name><![CDATA[portableserver/forwardrequest/forward-reference]]></name>
  <functiondef>
    <ins>
      <in>
        <name>object</name>
        <type><![CDATA[<object>]]></type>
        <description></description>
      </in>
    </ins>
    <outs>
      <out>
        <name>results</name>
        <type><![CDATA[<object>]]></type>
        <description></description>
      </out>
    </outs>
  </functiondef>
  <description></description>
  <seealso></seealso>
</entry>

<entry>
  <name><![CDATA[portableserver/forwardrequest/forward-reference-setter]]></name>
  <functiondef>
    <ins>
      <in>
        <name>value</name>
        <type><![CDATA[<object>]]></type>
        <description></description>
      </in>
      <in>
        <name>object</name>
        <type><![CDATA[<object>]]></type>
        <description></description>
      </in>
    </ins>
    <outs>
      <out>
        <name>results</name>
        <type><![CDATA[<object>]]></type>
        <description></description>
      </out>
    </outs>
  </functiondef>
  <description></description>
  <seealso></seealso>
</entry>

<entry>
  <name><![CDATA[portableserver/poa/<adapteralreadyexists>]]></name>
  <classdef>
    <modifiers></modifiers>
    <superclasses>
      <![CDATA[corba/<user-exception>]]>
    </superclasses>
    <keywords>
    </keywords>
  </classdef>
  <description></description>
  <seealso></seealso>
</entry>

<entry>
  <name><![CDATA[portableserver/poa/<adapternonexistent>]]></name>
  <classdef>
    <modifiers></modifiers>
    <superclasses>
      <![CDATA[corba/<user-exception>]]>
    </superclasses>
    <keywords>
    </keywords>
  </classdef>
  <description></description>
  <seealso></seealso>
</entry>

<entry>
  <name><![CDATA[portableserver/poa/<invalidpolicy>]]></name>
  <classdef>
    <modifiers></modifiers>
    <superclasses>
      <![CDATA[corba/<user-exception>]]>
    </superclasses>
    <keywords>
    </keywords>
  </classdef>
  <description></description>
  <seealso></seealso>
</entry>

<entry>
  <name><![CDATA[portableserver/poa/<noservant>]]></name>
  <classdef>
    <modifiers></modifiers>
    <superclasses>
      <![CDATA[corba/<user-exception>]]>
    </superclasses>
    <keywords>
    </keywords>
  </classdef>
  <description></description>
  <seealso></seealso>
</entry>

<entry>
  <name><![CDATA[portableserver/poa/<objectalreadyactive>]]></name>
  <classdef>
    <modifiers></modifiers>
    <superclasses>
      <![CDATA[corba/<user-exception>]]>
    </superclasses>
    <keywords>
    </keywords>
  </classdef>
  <description></description>
  <seealso></seealso>
</entry>

<entry>
  <name><![CDATA[portableserver/poa/<objectnotactive>]]></name>
  <classdef>
    <modifiers></modifiers>
    <superclasses>
      <![CDATA[corba/<user-exception>]]>
    </superclasses>
    <keywords>
    </keywords>
  </classdef>
  <description></description>
  <seealso></seealso>
</entry>

<entry>
  <name><![CDATA[portableserver/poa/<servantalreadyactive>]]></name>
  <classdef>
    <modifiers></modifiers>
    <superclasses>
      <![CDATA[corba/<user-exception>]]>
    </superclasses>
    <keywords>
    </keywords>
  </classdef>
  <description></description>
  <seealso></seealso>
</entry>

<entry>
  <name><![CDATA[portableserver/poa/<servantnotactive>]]></name>
  <classdef>
    <modifiers></modifiers>
    <superclasses>
      <![CDATA[corba/<user-exception>]]>
    </superclasses>
    <keywords>
    </keywords>
  </classdef>
  <description></description>
  <seealso></seealso>
</entry>

<entry>
  <name><![CDATA[portableserver/poa/<wrongadapter>]]></name>
  <classdef>
    <modifiers></modifiers>
    <superclasses>
      <![CDATA[corba/<user-exception>]]>
    </superclasses>
    <keywords>
    </keywords>
  </classdef>
  <description></description>
  <seealso></seealso>
</entry>

<entry>
  <name><![CDATA[portableserver/poa/<wrongpolicy>]]></name>
  <classdef>
    <modifiers></modifiers>
    <superclasses>
      <![CDATA[corba/<user-exception>]]>
    </superclasses>
    <keywords>
    </keywords>
  </classdef>
  <description></description>
  <seealso></seealso>
</entry>

<entry>
  <name><![CDATA[portableserver/poa/activate-object]]></name>
  <functiondef>
    <ins>
      <in>
        <name>poa</name>
        <type><![CDATA[portableserver/<poa>]]></type>
        <description></description>
      </in>
      <in>
        <name>servant</name>
        <type><![CDATA[portableserver/<servant>]]></type>
        <description></description>
      </in>
    </ins>
    <outs>
    </outs>
  </functiondef>
  <description></description>
  <seealso></seealso>
</entry>

<entry>
  <name><![CDATA[portableserver/poa/activate-object-with-id]]></name>
  <functiondef>
    <ins>
      <in>
        <name>poa</name>
        <type><![CDATA[portableserver/<poa>]]></type>
        <description></description>
      </in>
      <in>
        <name>objectid</name>
        <type><![CDATA[<string>]]></type>
        <description></description>
      </in>
      <in>
        <name>servant</name>
        <type><![CDATA[portableserver/<servant>]]></type>
        <description></description>
      </in>
    </ins>
    <outs>
    </outs>
  </functiondef>
  <description></description>
  <seealso></seealso>
</entry>

<entry>
  <name><![CDATA[portableserver/poa/create-poa]]></name>
  <functiondef>
    <ins>
      <in>
        <name>poa</name>
        <type><![CDATA[portableserver/<poa>]]></type>
        <description></description>
      </in>
      <in>
        <name>adapter-name</name>
        <type><![CDATA[corba/<string>]]></type>
        <description></description>
      </in>
      <in>
        <name>poa-manager</name>
        <type><![CDATA[{complex type}]]></type>
        <description></description>
      </in>
      <in>
        <name>initargs</name>
        <type><![CDATA[<object>]]></type>
        <description></description>
      </in>
    </ins>
    <outs>
      <out>
        <name>poa</name>
        <type><![CDATA[portableserver/<poa>]]></type>
        <description></description>
      </out>
    </outs>
  </functiondef>
  <description></description>
  <seealso></seealso>
</entry>

<entry>
  <name><![CDATA[portableserver/poa/create-reference]]></name>
  <functiondef>
    <ins>
      <in>
        <name>poa</name>
        <type><![CDATA[portableserver/<poa>]]></type>
        <description></description>
      </in>
      <in>
        <name>repositoryid</name>
        <type><![CDATA[<string>]]></type>
        <description></description>
      </in>
    </ins>
    <outs>
      <out>
        <name>object</name>
        <type><![CDATA[corba/<object>]]></type>
        <description></description>
      </out>
    </outs>
  </functiondef>
  <description></description>
  <seealso></seealso>
</entry>

<entry>
  <name><![CDATA[portableserver/poa/create-reference-with-id]]></name>
  <functiondef>
    <ins>
      <in>
        <name>poa</name>
        <type><![CDATA[portableserver/<poa>]]></type>
        <description></description>
      </in>
      <in>
        <name>objectid</name>
        <type><![CDATA[<string>]]></type>
        <description></description>
      </in>
      <in>
        <name>repositoryid</name>
        <type><![CDATA[<string>]]></type>
        <description></description>
      </in>
    </ins>
    <outs>
      <out>
        <name>object</name>
        <type><![CDATA[corba/<object>]]></type>
        <description></description>
      </out>
    </outs>
  </functiondef>
  <description></description>
  <seealso></seealso>
</entry>

<entry>
  <name><![CDATA[portableserver/poa/deactivate-object]]></name>
  <functiondef>
    <ins>
      <in>
        <name>poa</name>
        <type><![CDATA[portableserver/<poa>]]></type>
        <description></description>
      </in>
      <in>
        <name>objectid</name>
        <type><![CDATA[<string>]]></type>
        <description></description>
      </in>
    </ins>
    <outs>
    </outs>
  </functiondef>
  <description></description>
  <seealso></seealso>
</entry>

<entry>
  <name><![CDATA[portableserver/poa/destroy]]></name>
  <functiondef>
    <ins>
      <in>
        <name>poa</name>
        <type><![CDATA[portableserver/<poa>]]></type>
        <description></description>
      </in>
      <in>
        <name>etherealize-objects</name>
        <type><![CDATA[corba/<boolean>]]></type>
        <description></description>
      </in>
      <in>
        <name>wait-for-completion</name>
        <type><![CDATA[corba/<boolean>]]></type>
        <description></description>
      </in>
    </ins>
    <outs>
    </outs>
  </functiondef>
  <description></description>
  <seealso></seealso>
</entry>

<entry>
  <name><![CDATA[portableserver/poa/find-poa]]></name>
  <functiondef>
    <ins>
      <in>
        <name>poa</name>
        <type><![CDATA[portableserver/<poa>]]></type>
        <description></description>
      </in>
      <in>
        <name>adapter-name</name>
        <type><![CDATA[corba/<string>]]></type>
        <description></description>
      </in>
      <in>
        <name>activate-it</name>
        <type><![CDATA[<boolean>]]></type>
        <description></description>
      </in>
    </ins>
    <outs>
      <out>
        <name>poa</name>
        <type><![CDATA[portableserver/<poa>]]></type>
        <description></description>
      </out>
    </outs>
  </functiondef>
  <description></description>
  <seealso></seealso>
</entry>

<entry>
  <name><![CDATA[portableserver/poa/get-servant]]></name>
  <functiondef>
    <ins>
      <in>
        <name>poa</name>
        <type><![CDATA[portableserver/<poa>]]></type>
        <description></description>
      </in>
    </ins>
    <outs>
      <out>
        <name>servant</name>
        <type><![CDATA[portableserver/<servant>]]></type>
        <description></description>
      </out>
    </outs>
  </functiondef>
  <description></description>
  <seealso></seealso>
</entry>

<entry>
  <name><![CDATA[portableserver/poa/get-servant-manager]]></name>
  <functiondef>
    <ins>
      <in>
        <name>poa</name>
        <type><![CDATA[portableserver/<poa>]]></type>
        <description></description>
      </in>
    </ins>
    <outs>
      <out>
        <name>manager</name>
        <type><![CDATA[{complex type}]]></type>
        <description></description>
      </out>
    </outs>
  </functiondef>
  <description></description>
  <seealso></seealso>
</entry>

<entry>
  <name><![CDATA[portableserver/poa/id-to-reference]]></name>
  <functiondef>
    <ins>
      <in>
        <name>poa</name>
        <type><![CDATA[portableserver/<poa>]]></type>
        <description></description>
      </in>
      <in>
        <name>objectid</name>
        <type><![CDATA[<string>]]></type>
        <description></description>
      </in>
    </ins>
    <outs>
      <out>
        <name>object</name>
        <type><![CDATA[corba/<object>]]></type>
        <description></description>
      </out>
    </outs>
  </functiondef>
  <description></description>
  <seealso></seealso>
</entry>

<entry>
  <name><![CDATA[portableserver/poa/id-to-servant]]></name>
  <functiondef>
    <ins>
      <in>
        <name>poa</name>
        <type><![CDATA[portableserver/<poa>]]></type>
        <description></description>
      </in>
      <in>
        <name>objectid</name>
        <type><![CDATA[<string>]]></type>
        <description></description>
      </in>
    </ins>
    <outs>
      <out>
        <name>servant</name>
        <type><![CDATA[portableserver/<servant>]]></type>
        <description></description>
      </out>
    </outs>
  </functiondef>
  <description></description>
  <seealso></seealso>
</entry>

<entry>
  <name><![CDATA[portableserver/poa/invalidpolicy/index]]></name>
  <functiondef>
    <ins>
      <in>
        <name>object</name>
        <type><![CDATA[<object>]]></type>
        <description></description>
      </in>
    </ins>
    <outs>
      <out>
        <name>results</name>
        <type><![CDATA[<object>]]></type>
        <description></description>
      </out>
    </outs>
  </functiondef>
  <description></description>
  <seealso></seealso>
</entry>

<entry>
  <name><![CDATA[portableserver/poa/invalidpolicy/index-setter]]></name>
  <functiondef>
    <ins>
      <in>
        <name>value</name>
        <type><![CDATA[<object>]]></type>
        <description></description>
      </in>
      <in>
        <name>object</name>
        <type><![CDATA[<object>]]></type>
        <description></description>
      </in>
    </ins>
    <outs>
      <out>
        <name>results</name>
        <type><![CDATA[<object>]]></type>
        <description></description>
      </out>
    </outs>
  </functiondef>
  <description></description>
  <seealso></seealso>
</entry>

<entry>
  <name><![CDATA[portableserver/poa/reference-to-id]]></name>
  <functiondef>
    <ins>
      <in>
        <name>poa</name>
        <type><![CDATA[portableserver/<poa>]]></type>
        <description></description>
      </in>
      <in>
        <name>object</name>
        <type><![CDATA[corba/<object>]]></type>
        <description></description>
      </in>
    </ins>
    <outs>
      <out>
        <name>id</name>
        <type><![CDATA[<string>]]></type>
        <description></description>
      </out>
    </outs>
  </functiondef>
  <description></description>
  <seealso></seealso>
</entry>

<entry>
  <name><![CDATA[portableserver/poa/reference-to-servant]]></name>
  <functiondef>
    <ins>
      <in>
        <name>poa</name>
        <type><![CDATA[portableserver/<poa>]]></type>
        <description></description>
      </in>
      <in>
        <name>object</name>
        <type><![CDATA[corba/<object>]]></type>
        <description></description>
      </in>
    </ins>
    <outs>
      <out>
        <name>servant</name>
        <type><![CDATA[portableserver/<servant>]]></type>
        <description></description>
      </out>
    </outs>
  </functiondef>
  <description></description>
  <seealso></seealso>
</entry>

<entry>
  <name><![CDATA[portableserver/poa/servant-to-id]]></name>
  <functiondef>
    <ins>
      <in>
        <name>poa</name>
        <type><![CDATA[portableserver/<poa>]]></type>
        <description></description>
      </in>
      <in>
        <name>servant</name>
        <type><![CDATA[portableserver/<servant>]]></type>
        <description></description>
      </in>
    </ins>
    <outs>
      <out>
        <name>id</name>
        <type><![CDATA[<string>]]></type>
        <description></description>
      </out>
    </outs>
  </functiondef>
  <description></description>
  <seealso></seealso>
</entry>

<entry>
  <name><![CDATA[portableserver/poa/servant-to-reference]]></name>
  <functiondef>
    <ins>
      <in>
        <name>poa</name>
        <type><![CDATA[portableserver/<poa>]]></type>
        <description></description>
      </in>
      <in>
        <name>servant</name>
        <type><![CDATA[portableserver/<servant>]]></type>
        <description></description>
      </in>
    </ins>
    <outs>
      <out>
        <name>object</name>
        <type><![CDATA[corba/<object>]]></type>
        <description></description>
      </out>
    </outs>
  </functiondef>
  <description></description>
  <seealso></seealso>
</entry>

<entry>
  <name><![CDATA[portableserver/poa/set-servant]]></name>
  <functiondef>
    <ins>
      <in>
        <name>poa</name>
        <type><![CDATA[portableserver/<poa>]]></type>
        <description></description>
      </in>
      <in>
        <name>new-servant</name>
        <type><![CDATA[portableserver/<servant>]]></type>
        <description></description>
      </in>
    </ins>
    <outs>
    </outs>
  </functiondef>
  <description></description>
  <seealso></seealso>
</entry>

<entry>
  <name><![CDATA[portableserver/poa/set-servant-manager]]></name>
  <functiondef>
    <ins>
      <in>
        <name>poa</name>
        <type><![CDATA[portableserver/<poa>]]></type>
        <description></description>
      </in>
      <in>
        <name>new-servant-manager</name>
        <type><![CDATA[portableserver/<servantmanager>]]></type>
        <description></description>
      </in>
    </ins>
    <outs>
    </outs>
  </functiondef>
  <description></description>
  <seealso></seealso>
</entry>

<entry>
  <name><![CDATA[portableserver/poa/the-activator]]></name>
  <functiondef>
    <ins>
      <in>
        <name>poa</name>
        <type><![CDATA[portableserver/<poa>]]></type>
        <description></description>
      </in>
    </ins>
    <outs>
      <out>
        <name>activator</name>
        <type><![CDATA[portableserver/<adapteractivator>]]></type>
        <description></description>
      </out>
    </outs>
  </functiondef>
  <description></description>
  <seealso></seealso>
</entry>

<entry>
  <name><![CDATA[portableserver/poa/the-activator-setter]]></name>
  <functiondef>
    <ins>
      <in>
        <name>activator</name>
        <type><![CDATA[portableserver/<adapteractivator>]]></type>
        <description></description>
      </in>
      <in>
        <name>poa</name>
        <type><![CDATA[portableserver/<poa>]]></type>
        <description></description>
      </in>
    </ins>
    <outs>
      <out>
        <name>activator</name>
        <type><![CDATA[portableserver/<adapteractivator>]]></type>
        <description></description>
      </out>
    </outs>
  </functiondef>
  <description></description>
  <seealso></seealso>
</entry>

<entry>
  <name><![CDATA[portableserver/poa/the-name]]></name>
  <functiondef>
    <ins>
      <in>
        <name>poa</name>
        <type><![CDATA[portableserver/<poa>]]></type>
        <description></description>
      </in>
    </ins>
    <outs>
      <out>
        <name>name</name>
        <type><![CDATA[corba/<string>]]></type>
        <description></description>
      </out>
    </outs>
  </functiondef>
  <description></description>
  <seealso></seealso>
</entry>

<entry>
  <name><![CDATA[portableserver/poa/the-parent]]></name>
  <functiondef>
    <ins>
      <in>
        <name>poa</name>
        <type><![CDATA[portableserver/<poa>]]></type>
        <description></description>
      </in>
    </ins>
    <outs>
      <out>
        <name>parent</name>
        <type><![CDATA[{complex type}]]></type>
        <description></description>
      </out>
    </outs>
  </functiondef>
  <description></description>
  <seealso></seealso>
</entry>

<entry>
  <name><![CDATA[portableserver/poa/the-poamanager]]></name>
  <functiondef>
    <ins>
      <in>
        <name>poa</name>
        <type><![CDATA[portableserver/<poa>]]></type>
        <description></description>
      </in>
    </ins>
    <outs>
      <out>
        <name>manager</name>
        <type><![CDATA[portableserver/<poamanager>]]></type>
        <description></description>
      </out>
    </outs>
  </functiondef>
  <description></description>
  <seealso></seealso>
</entry>

<entry>
  <name><![CDATA[portableserver/poamanager/<adapterinactive>]]></name>
  <classdef>
    <modifiers></modifiers>
    <superclasses>
      <![CDATA[corba/<user-exception>]]>
    </superclasses>
    <keywords>
    </keywords>
  </classdef>
  <description></description>
  <seealso></seealso>
</entry>

<entry>
  <name><![CDATA[portableserver/poamanager/activate]]></name>
  <functiondef>
    <ins>
      <in>
        <name>poa-manager</name>
        <type><![CDATA[portableserver/<poamanager>]]></type>
        <description></description>
      </in>
    </ins>
    <outs>
    </outs>
  </functiondef>
  <description></description>
  <seealso></seealso>
</entry>

<entry>
  <name><![CDATA[portableserver/poamanager/deactivate]]></name>
  <functiondef>
    <ins>
      <in>
        <name>poamanager</name>
        <type><![CDATA[portableserver/<poamanager>]]></type>
        <description></description>
      </in>
      <in>
        <name>etherealize-objects</name>
        <type><![CDATA[corba/<boolean>]]></type>
        <description></description>
      </in>
      <in>
        <name>wait-for-completion</name>
        <type><![CDATA[corba/<boolean>]]></type>
        <description></description>
      </in>
    </ins>
    <outs>
    </outs>
  </functiondef>
  <description></description>
  <seealso></seealso>
</entry>

<entry>
  <name><![CDATA[portableserver/poamanager/discard-requests]]></name>
  <functiondef>
    <ins>
      <in>
        <name>poamanager</name>
        <type><![CDATA[portableserver/<poamanager>]]></type>
        <description></description>
      </in>
      <in>
        <name>wait-for-completion</name>
        <type><![CDATA[corba/<boolean>]]></type>
        <description></description>
      </in>
    </ins>
    <outs>
    </outs>
  </functiondef>
  <description></description>
  <seealso></seealso>
</entry>

<entry>
  <name><![CDATA[portableserver/poamanager/hold-requests]]></name>
  <functiondef>
    <ins>
      <in>
        <name>poamanager</name>
        <type><![CDATA[portableserver/<poamanager>]]></type>
        <description></description>
      </in>
      <in>
        <name>wait-for-completion</name>
        <type><![CDATA[corba/<boolean>]]></type>
        <description></description>
      </in>
    </ins>
    <outs>
    </outs>
  </functiondef>
  <description></description>
  <seealso></seealso>
</entry>

<entry>
  <name><![CDATA[portableserver/servant/primary-interface]]></name>
  <functiondef>
    <ins>
      <in>
        <name>servant</name>
        <type><![CDATA[portableserver/<servant>]]></type>
        <description></description>
      </in>
      <in>
        <name>objectid</name>
        <type><![CDATA[<string>]]></type>
        <description></description>
      </in>
      <in>
        <name>poa</name>
        <type><![CDATA[portableserver/<poa>]]></type>
        <description></description>
      </in>
    </ins>
    <outs>
      <out>
        <name>repository-id</name>
        <type><![CDATA[<string>]]></type>
        <description></description>
      </out>
    </outs>
  </functiondef>
  <description></description>
  <seealso></seealso>
</entry>

<entry>
  <name><![CDATA[portableserver/servantactivator/etherealize]]></name>
  <functiondef>
    <ins>
      <in>
        <name>object</name>
        <type><![CDATA[portableserver/<servantactivator>]]></type>
        <description></description>
      </in>
      <in>
        <name>objectid</name>
        <type><![CDATA[corba/<string>]]></type>
        <description></description>
      </in>
      <in>
        <name>adapter</name>
        <type><![CDATA[portableserver/<poa>]]></type>
        <description></description>
      </in>
      <in>
        <name>servant</name>
        <type><![CDATA[portableserver/<servant>]]></type>
        <description></description>
      </in>
      <in>
        <name>cleanup-in-progress</name>
        <type><![CDATA[<object>]]></type>
        <description></description>
      </in>
      <in>
        <name>remaining-activations</name>
        <type><![CDATA[<object>]]></type>
        <description></description>
      </in>
    </ins>
    <outs>
    </outs>
  </functiondef>
  <description></description>
  <seealso></seealso>
</entry>

<entry>
  <name><![CDATA[portableserver/servantactivator/incarnate]]></name>
  <functiondef>
    <ins>
      <in>
        <name>object</name>
        <type><![CDATA[portableserver/<servantactivator>]]></type>
        <description></description>
      </in>
      <in>
        <name>objectid</name>
        <type><![CDATA[corba/<string>]]></type>
        <description></description>
      </in>
      <in>
        <name>adapter</name>
        <type><![CDATA[portableserver/<poa>]]></type>
        <description></description>
      </in>
    </ins>
    <outs>
      <out>
        <name>servant</name>
        <type><![CDATA[portableserver/<servant>]]></type>
        <description></description>
      </out>
    </outs>
  </functiondef>
  <description></description>
  <seealso></seealso>
</entry>

<entry>
  <name><![CDATA[portableserver/servantlocator/postinvoke]]></name>
  <functiondef>
    <ins>
      <in>
        <name>object</name>
        <type><![CDATA[portableserver/<servantlocator>]]></type>
        <description></description>
      </in>
      <in>
        <name>objectid</name>
        <type><![CDATA[corba/<string>]]></type>
        <description></description>
      </in>
      <in>
        <name>adapter</name>
        <type><![CDATA[portableserver/<poa>]]></type>
        <description></description>
      </in>
      <in>
        <name>operation</name>
        <type><![CDATA[corba/<identifier>]]></type>
        <description></description>
      </in>
      <in>
        <name>cookie</name>
        <type><![CDATA[<object>]]></type>
        <description></description>
      </in>
      <in>
        <name>servant</name>
        <type><![CDATA[portableserver/<servant>]]></type>
        <description></description>
      </in>
    </ins>
    <outs>
    </outs>
  </functiondef>
  <description></description>
  <seealso></seealso>
</entry>

<entry>
  <name><![CDATA[portableserver/servantlocator/preinvoke]]></name>
  <functiondef>
    <ins>
      <in>
        <name>object</name>
        <type><![CDATA[portableserver/<servantlocator>]]></type>
        <description></description>
      </in>
      <in>
        <name>objectid</name>
        <type><![CDATA[corba/<string>]]></type>
        <description></description>
      </in>
      <in>
        <name>adapter</name>
        <type><![CDATA[portableserver/<poa>]]></type>
        <description></description>
      </in>
      <in>
        <name>operation</name>
        <type><![CDATA[corba/<identifier>]]></type>
        <description></description>
      </in>
    </ins>
    <outs>
      <out>
        <name>servant</name>
        <type><![CDATA[portableserver/<servant>]]></type>
        <description></description>
      </out>
      <out>
        <name>cookie</name>
        <type><![CDATA[<object>]]></type>
        <description></description>
      </out>
    </outs>
  </functiondef>
  <description></description>
  <seealso></seealso>
</entry>

<entry>
  <name><![CDATA[with-dii]]></name>
  <macrodef>
  </macrodef>
  <description>
<p>with-dii (operation, ..) ..body.. end;</p>

<p>Within the body of this macro the following functions are defined:</p>

<p>operation(object :: corba/<object>, #rest arguments) => (#rest results)

<p>If the operation is a proper operation and not an attribute then
calling this function is equivalent to:</p>

<p>call-dii("operation", object :: corba/<object>, #rest arguments)</p>

<p>otherwise for an attribute it is equivalent to:</p>

<p>call-dii("_get_operation", object :: corba/<object>, #rest arguments)</p>

<p>operation-setter(value, object :: corba/<object>) => (#rest results)</p>

<p>This call is equivalent to:</p>

<p>call-dii("_set_operation", object :: corba/<object>, #rest arguments)</p>

<p>// without compiling any stubs into the program:</p>

<p>with-dii (width, height, set, get)
    width(grid);
    height(grid);
    width(grid) := 10;
    height(grid) := 10;
    set(grid, 5, 5, 99);
    get(grid, 5, 5);
  end with-dii;</p>
  </description>
  <seealso></seealso>
</entry>

</library>
</refman>
