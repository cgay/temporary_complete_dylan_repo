Module:    Win32-dialog
Copyright:    Original Code is Copyright (c) 1995-2004 Functional Objects, Inc.
              All rights reserved.
License:      Functional Objects Library Public License Version 1.0
Dual-license: GNU Lesser General Public License
Warranty:     Distributed WITHOUT WARRANTY OF ANY KIND

// This file is automatically generated from "commdlg.h"; do not edit.


// Adapted from:
/************************************************************************
*                                                                       *
*   commdlg.h -- This module defines the 32-Bit Common Dialog APIs      *
*                                                                       *
*   
*                                                                       *
************************************************************************/
define constant <LPOFNHOOKPROC> = <C-function-pointer>;

define C-struct <OPENFILENAMEA>
  sealed inline-only slot lStructSize-value :: <DWORD>;
  sealed inline-only slot hwndOwner-value :: <HWND>;
  sealed inline-only slot hInstance-value :: <HINSTANCE>;
  sealed inline-only slot lpstrFilter-value :: <LPCSTR>;
  sealed inline-only slot lpstrCustomFilter-value :: <LPSTR>;
  sealed inline-only slot nMaxCustFilter-value :: <DWORD>;
  sealed inline-only slot nFilterIndex-value :: <DWORD>;
  sealed inline-only slot lpstrFile-value :: <LPSTR>;
  sealed inline-only slot nMaxFile-value :: <DWORD>;
  sealed inline-only slot lpstrFileTitle-value :: <LPSTR>;
  sealed inline-only slot nMaxFileTitle-value :: <DWORD>;
  sealed inline-only slot lpstrInitialDir-value :: <LPCSTR>;
  sealed inline-only slot lpstrTitle-value :: <LPCSTR>;
  sealed inline-only slot Flags-value    :: <DWORD>;
  sealed inline-only slot nFileOffset-value :: <WORD>;
  sealed inline-only slot nFileExtension-value :: <WORD>;
  sealed inline-only slot lpstrDefExt-value :: <LPCSTR>;
  sealed inline-only slot lCustData-value :: <LPARAM>;
  sealed inline-only slot lpfnHook-value :: <LPOFNHOOKPROC>;
  sealed inline-only slot lpTemplateName-value :: <LPCSTR>;
  pack: 1;
  pointer-type-name: <LPOPENFILENAMEA>;
  c-name: "struct tagOFNA";
end C-struct <OPENFILENAMEA>;
define inline constant <OPENFILENAME> = <OPENFILENAMEA>;
define inline constant <LPOPENFILENAME> = <LPOPENFILENAMEA>;

define inline-only C-function GetOpenFileName
  parameter lpopenfilenamea1 :: <LPOPENFILENAMEA>;
  result value :: <BOOL>;
  c-name: "GetOpenFileNameA", c-modifiers: "__stdcall";
end;

define inline-only C-function GetSaveFileName
  parameter lpopenfilenamea1 :: <LPOPENFILENAMEA>;
  result value :: <BOOL>;
  c-name: "GetSaveFileNameA", c-modifiers: "__stdcall";
end;

define inline-only C-function GetFileTitle
  parameter lpcstr1    :: <LPCSTR>;
  parameter lpstr2     :: <LPSTR>;
  parameter word3      :: <WORD>;
  result value :: <C-short>;
  c-name: "GetFileTitleA", c-modifiers: "__stdcall";
end;
define inline-only constant $OFN-READONLY               = #x00000001;
define inline-only constant $OFN-OVERWRITEPROMPT        = #x00000002;
define inline-only constant $OFN-HIDEREADONLY           = #x00000004;
define inline-only constant $OFN-NOCHANGEDIR            = #x00000008;
define inline-only constant $OFN-SHOWHELP               = #x00000010;
define inline-only constant $OFN-ENABLEHOOK             = #x00000020;
define inline-only constant $OFN-ENABLETEMPLATE         = #x00000040;
define inline-only constant $OFN-ENABLETEMPLATEHANDLE   = #x00000080;
define inline-only constant $OFN-NOVALIDATE             = #x00000100;
define inline-only constant $OFN-ALLOWMULTISELECT       = #x00000200;
define inline-only constant $OFN-EXTENSIONDIFFERENT     = #x00000400;
define inline-only constant $OFN-PATHMUSTEXIST          = #x00000800;
define inline-only constant $OFN-FILEMUSTEXIST          = #x00001000;
define inline-only constant $OFN-CREATEPROMPT           = #x00002000;
define inline-only constant $OFN-SHAREAWARE             = #x00004000;
define inline-only constant $OFN-NOREADONLYRETURN       = #x00008000;
define inline-only constant $OFN-NOTESTFILECREATE       = #x00010000;
define inline-only constant $OFN-NONETWORKBUTTON        = #x00020000;
define inline-only constant $OFN-NOLONGNAMES            = #x00040000;
define inline-only constant $OFN-EXPLORER               = #x00080000;
define inline-only constant $OFN-NODEREFERENCELINKS     = #x00100000;
define inline-only constant $OFN-LONGNAMES              = #x00200000;
define inline-only constant $OFN-ENABLEINCLUDENOTIFY    = #x00400000;
define inline-only constant $OFN-ENABLESIZING           = #x00800000;
define inline-only constant $OFN-SHAREFALLTHROUGH       =    2;
define inline-only constant $OFN-SHARENOWARN            =    1;
define inline-only constant $OFN-SHAREWARN              =    0;
define constant <LPCCHOOKPROC> = <C-function-pointer>;

define C-struct <OFNOTIFYA>
  sealed inline-only slot hdr-value      :: <NMHDR>;
  sealed inline-only slot lpOFN-value    :: <LPOPENFILENAMEA>;
  sealed inline-only slot pszFile-value  :: <LPSTR>;
  pack: 1;
  pointer-type-name: <LPOFNOTIFYA>;
  c-name: "struct _OFNOTIFYA";
end C-struct <OFNOTIFYA>;
define inline constant <OFNOTIFY> = <OFNOTIFYA>;
define inline constant <LPOFNOTIFY> = <LPOFNOTIFYA>;

define C-struct <OFNOTIFYEXA>
  sealed inline-only slot hdr-value      :: <NMHDR>;
  sealed inline-only slot lpOFN-value    :: <LPOPENFILENAMEA>;
  sealed inline-only slot psf-value      :: <LPVOID>;
  sealed inline-only slot pidl-value     :: <LPVOID>;
  pack: 1;
  pointer-type-name: <LPOFNOTIFYEXA>;
  c-name: "struct _OFNOTIFYEXA";
end C-struct <OFNOTIFYEXA>;
define inline constant <OFNOTIFYEX> = <OFNOTIFYEXA>;
define inline constant <LPOFNOTIFYEX> = <LPOFNOTIFYEXA>;
define inline-only constant $CDM-FIRST                  =
	$WM-USER + 100;
define inline-only constant $CDM-LAST                   =
	$WM-USER + 200;

define C-struct <CHOOSECOLORA>
  sealed inline-only slot lStructSize-value :: <DWORD>;
  sealed inline-only slot hwndOwner-value :: <HWND>;
  sealed inline-only slot hInstance-value :: <HWND>;
  sealed inline-only slot rgbResult-value :: <COLORREF>;
  sealed inline-only slot lpCustColors-value :: <LPCOLORREF>;
  sealed inline-only slot Flags-value    :: <DWORD>;
  sealed inline-only slot lCustData-value :: <LPARAM>;
  sealed inline-only slot lpfnHook-value :: <LPCCHOOKPROC>;
  sealed inline-only slot lpTemplateName-value :: <LPCSTR>;
  pack: 1;
  pointer-type-name: <LPCHOOSECOLORA>;
  c-name: "struct tagCHOOSECOLORA";
end C-struct <CHOOSECOLORA>;
define inline constant <CHOOSECOLOR> = <CHOOSECOLORA>;
define inline constant <LPCHOOSECOLOR> = <LPCHOOSECOLORA>;

define inline-only C-function ChooseColor
  parameter lpchoosecolora1 :: <LPCHOOSECOLORA>;
  result value :: <BOOL>;
  c-name: "ChooseColorA", c-modifiers: "__stdcall";
end;
define inline-only constant $CC-RGBINIT                 = #x00000001;
define inline-only constant $CC-FULLOPEN                = #x00000002;
define inline-only constant $CC-PREVENTFULLOPEN         = #x00000004;
define inline-only constant $CC-SHOWHELP                = #x00000008;
define inline-only constant $CC-ENABLEHOOK              = #x00000010;
define inline-only constant $CC-ENABLETEMPLATE          = #x00000020;
define inline-only constant $CC-ENABLETEMPLATEHANDLE    = #x00000040;
define inline-only constant $CC-SOLIDCOLOR              = #x00000080;
define inline-only constant $CC-ANYCOLOR                = #x00000100;
define constant <LPFRHOOKPROC> = <C-function-pointer>;

define C-struct <FINDREPLACEA>
  sealed inline-only slot lStructSize-value :: <DWORD>;
  sealed inline-only slot hwndOwner-value :: <HWND>;
  sealed inline-only slot hInstance-value :: <HINSTANCE>;
  sealed inline-only slot Flags-value    :: <DWORD>;
  sealed inline-only slot lpstrFindWhat-value :: <LPSTR>;
  sealed inline-only slot lpstrReplaceWith-value :: <LPSTR>;
  sealed inline-only slot wFindWhatLen-value :: <WORD>;
  sealed inline-only slot wReplaceWithLen-value :: <WORD>;
  sealed inline-only slot lCustData-value :: <LPARAM>;
  sealed inline-only slot lpfnHook-value :: <LPFRHOOKPROC>;
  sealed inline-only slot lpTemplateName-value :: <LPCSTR>;
  pack: 1;
  pointer-type-name: <LPFINDREPLACEA>;
  c-name: "struct tagFINDREPLACEA";
end C-struct <FINDREPLACEA>;
define inline constant <FINDREPLACE> = <FINDREPLACEA>;
define inline constant <LPFINDREPLACE> = <LPFINDREPLACEA>;
define inline-only constant $FR-DOWN                    = #x00000001;
define inline-only constant $FR-WHOLEWORD               = #x00000002;
define inline-only constant $FR-MATCHCASE               = #x00000004;
define inline-only constant $FR-FINDNEXT                = #x00000008;
define inline-only constant $FR-REPLACE                 = #x00000010;
define inline-only constant $FR-REPLACEALL              = #x00000020;
define inline-only constant $FR-DIALOGTERM              = #x00000040;
define inline-only constant $FR-SHOWHELP                = #x00000080;
define inline-only constant $FR-ENABLEHOOK              = #x00000100;
define inline-only constant $FR-ENABLETEMPLATE          = #x00000200;
define inline-only constant $FR-NOUPDOWN                = #x00000400;
define inline-only constant $FR-NOMATCHCASE             = #x00000800;
define inline-only constant $FR-NOWHOLEWORD             = #x00001000;
define inline-only constant $FR-ENABLETEMPLATEHANDLE    = #x00002000;
define inline-only constant $FR-HIDEUPDOWN              = #x00004000;
define inline-only constant $FR-HIDEMATCHCASE           = #x00008000;
define inline-only constant $FR-HIDEWHOLEWORD           = #x00010000;

define inline-only C-function FindText
  parameter lpfindreplacea1 :: <LPFINDREPLACEA>;
  result value :: <HWND>;
  c-name: "FindTextA", c-modifiers: "__stdcall";
end;

define inline-only C-function ReplaceText
  parameter lpfindreplacea1 :: <LPFINDREPLACEA>;
  result value :: <HWND>;
  c-name: "ReplaceTextA", c-modifiers: "__stdcall";
end;
define constant <LPCFHOOKPROC> = <C-function-pointer>;

define C-struct <CHOOSEFONTA>
  sealed inline-only slot lStructSize-value :: <DWORD>;
  sealed inline-only slot hwndOwner-value :: <HWND>;
  sealed inline-only slot hDC-value      :: <HDC>;
  sealed inline-only slot lpLogFont-value :: <LPLOGFONTA>;
  sealed inline-only slot iPointSize-value :: <INT>;
  sealed inline-only slot Flags-value    :: <DWORD>;
  sealed inline-only slot rgbColors-value :: <COLORREF>;
  sealed inline-only slot lCustData-value :: <LPARAM>;
  sealed inline-only slot lpfnHook-value :: <LPCFHOOKPROC>;
  sealed inline-only slot lpTemplateName-value :: <LPCSTR>;
  sealed inline-only slot hInstance-value :: <HINSTANCE>;
  sealed inline-only slot lpszStyle-value :: <LPSTR>;
  sealed inline-only slot nFontType-value :: <WORD>;
  sealed inline-only slot ___MISSING_ALIGNMENT__ :: <WORD>;
  sealed inline-only slot nSizeMin-value :: <INT>;
  sealed inline-only slot nSizeMax-value :: <INT>;
  pack: 1;
  pointer-type-name: <LPCHOOSEFONTA>;
  c-name: "struct tagCHOOSEFONTA";
end C-struct <CHOOSEFONTA>;
define inline constant <CHOOSEFONT> = <CHOOSEFONTA>;
define inline constant <LPCHOOSEFONT> = <LPCHOOSEFONTA>;

define inline-only C-function ChooseFont
  parameter lpchoosefonta1 :: <LPCHOOSEFONTA>;
  result value :: <BOOL>;
  c-name: "ChooseFontA", c-modifiers: "__stdcall";
end;
define inline-only constant $CF-SCREENFONTS             = #x00000001;
define inline-only constant $CF-PRINTERFONTS            = #x00000002;
define inline-only constant $CF-BOTH                    =
	logior($CF-SCREENFONTS, $CF-PRINTERFONTS);
define inline-only constant $CF-SHOWHELP                = #x00000004;
define inline-only constant $CF-ENABLEHOOK              = #x00000008;
define inline-only constant $CF-ENABLETEMPLATE          = #x00000010;
define inline-only constant $CF-ENABLETEMPLATEHANDLE    = #x00000020;
define inline-only constant $CF-INITTOLOGFONTSTRUCT     = #x00000040;
define inline-only constant $CF-USESTYLE                = #x00000080;
define inline-only constant $CF-EFFECTS                 = #x00000100;
define inline-only constant $CF-APPLY                   = #x00000200;
define inline-only constant $CF-ANSIONLY                = #x00000400;
define inline-only constant $CF-NOVECTORFONTS           = #x00000800;
define inline-only constant $CF-NOSIMULATIONS           = #x00001000;
define inline-only constant $CF-LIMITSIZE               = #x00002000;
define inline-only constant $CF-FIXEDPITCHONLY          = #x00004000;
define inline-only constant $CF-WYSIWYG                 = #x00008000;
define inline-only constant $CF-FORCEFONTEXIST          = #x00010000;
define inline-only constant $CF-SCALABLEONLY            = #x00020000;
define inline-only constant $CF-TTONLY                  = #x00040000;
define inline-only constant $CF-NOFACESEL               = #x00080000;
define inline-only constant $CF-NOSTYLESEL              = #x00100000;
define inline-only constant $CF-NOSIZESEL               = #x00200000;
define inline-only constant $CF-SELECTSCRIPT            = #x00400000;
define inline-only constant $CF-NOSCRIPTSEL             = #x00800000;
define inline-only constant $CF-NOVERTFONTS             = #x01000000;
define inline-only constant $SIMULATED-FONTTYPE         = #x8000;
define inline-only constant $PRINTER-FONTTYPE           = #x4000;
define inline-only constant $SCREEN-FONTTYPE            = #x2000;
define inline-only constant $BOLD-FONTTYPE              = #x0100;
define inline-only constant $ITALIC-FONTTYPE            = #x0200;
define inline-only constant $REGULAR-FONTTYPE           = #x0400;
define inline-only constant $OPENTYPE-FONTTYPE          = #x10000;
define inline-only constant $TYPE1-FONTTYPE             = #x20000;
define inline-only constant $DSIG-FONTTYPE              = #x40000;
define inline-only constant $WM-CHOOSEFONT-GETLOGFONT   =
	$WM-USER + 1;
define inline-only constant $WM-CHOOSEFONT-SETLOGFONT   =
	$WM-USER + 101;
define inline-only constant $WM-CHOOSEFONT-SETFLAGS     =
	$WM-USER + 102;
define constant $LBSELCHSTRING = "commdlg_LBSelChangedNotify";
define constant $SHAREVISTRING = "commdlg_ShareViolation";
define constant $FILEOKSTRING  = "commdlg_FileNameOK";
define constant $COLOROKSTRING = "commdlg_ColorOK";
define constant $SETRGBSTRING  = "commdlg_SetRGBColor";
define constant $HELPMSGSTRING = "commdlg_help";
define constant $FINDMSGSTRING = "commdlg_FindReplace";
define inline-only constant $CD-LBSELNOITEMS            =   -1;
define inline-only constant $CD-LBSELCHANGE             =    0;
define inline-only constant $CD-LBSELSUB                =    1;
define inline-only constant $CD-LBSELADD                =    2;
define constant <LPPRINTHOOKPROC> = <C-function-pointer>;
define constant <LPSETUPHOOKPROC> = <C-function-pointer>;

define C-struct <PRINTDLGA>
  sealed inline-only slot lStructSize-value :: <DWORD>;
  sealed inline-only slot hwndOwner-value :: <HWND>;
  sealed inline-only slot hDevMode-value :: <HGLOBAL>;
  sealed inline-only slot hDevNames-value :: <HGLOBAL>;
  sealed inline-only slot hDC-value      :: <HDC>;
  sealed inline-only slot Flags-value    :: <DWORD>;
  sealed inline-only slot nFromPage-value :: <WORD>;
  sealed inline-only slot nToPage-value  :: <WORD>;
  sealed inline-only slot nMinPage-value :: <WORD>;
  sealed inline-only slot nMaxPage-value :: <WORD>;
  sealed inline-only slot nCopies-value  :: <WORD>;
  sealed inline-only slot hInstance-value :: <HINSTANCE>;
  sealed inline-only slot lCustData-value :: <LPARAM>;
  sealed inline-only slot lpfnPrintHook-value :: <LPPRINTHOOKPROC>;
  sealed inline-only slot lpfnSetupHook-value :: <LPSETUPHOOKPROC>;
  sealed inline-only slot lpPrintTemplateName-value :: <LPCSTR>;
  sealed inline-only slot lpSetupTemplateName-value :: <LPCSTR>;
  sealed inline-only slot hPrintTemplate-value :: <HGLOBAL>;
  sealed inline-only slot hSetupTemplate-value :: <HGLOBAL>;
  pack: 1;
  pointer-type-name: <LPPRINTDLGA>;
  c-name: "struct tagPDA";
end C-struct <PRINTDLGA>;
define inline constant <PRINTDLG> = <PRINTDLGA>;
define inline constant <LPPRINTDLG> = <LPPRINTDLGA>;

define inline-only C-function PrintDlg
  parameter lpprintdlga1 :: <LPPRINTDLGA>;
  result value :: <BOOL>;
  c-name: "PrintDlgA", c-modifiers: "__stdcall";
end;
define inline-only constant $PD-ALLPAGES                = #x00000000;
define inline-only constant $PD-SELECTION               = #x00000001;
define inline-only constant $PD-PAGENUMS                = #x00000002;
define inline-only constant $PD-NOSELECTION             = #x00000004;
define inline-only constant $PD-NOPAGENUMS              = #x00000008;
define inline-only constant $PD-COLLATE                 = #x00000010;
define inline-only constant $PD-PRINTTOFILE             = #x00000020;
define inline-only constant $PD-PRINTSETUP              = #x00000040;
define inline-only constant $PD-NOWARNING               = #x00000080;
define inline-only constant $PD-RETURNDC                = #x00000100;
define inline-only constant $PD-RETURNIC                = #x00000200;
define inline-only constant $PD-RETURNDEFAULT           = #x00000400;
define inline-only constant $PD-SHOWHELP                = #x00000800;
define inline-only constant $PD-ENABLEPRINTHOOK         = #x00001000;
define inline-only constant $PD-ENABLESETUPHOOK         = #x00002000;
define inline-only constant $PD-ENABLEPRINTTEMPLATE     = #x00004000;
define inline-only constant $PD-ENABLESETUPTEMPLATE     = #x00008000;
define inline-only constant $PD-ENABLEPRINTTEMPLATEHANDLE =
	#x00010000;
define inline-only constant $PD-ENABLESETUPTEMPLATEHANDLE =
	#x00020000;
define inline-only constant $PD-USEDEVMODECOPIES        = #x00040000;
define inline-only constant $PD-USEDEVMODECOPIESANDCOLLATE =
	#x00040000;
define inline-only constant $PD-DISABLEPRINTTOFILE      = #x00080000;
define inline-only constant $PD-HIDEPRINTTOFILE         = #x00100000;
define inline-only constant $PD-NONETWORKBUTTON         = #x00200000;

define C-struct <DEVNAMES>
  sealed inline-only slot wDriverOffset-value :: <WORD>;
  sealed inline-only slot wDeviceOffset-value :: <WORD>;
  sealed inline-only slot wOutputOffset-value :: <WORD>;
  sealed inline-only slot wDefault-value :: <WORD>;
  pack: 1;
  pointer-type-name: <LPDEVNAMES>;
  c-name: "struct tagDEVNAMES";
end C-struct <DEVNAMES>;
define inline-only constant $DN-DEFAULTPRN              = #x0001;

define inline-only C-function CommDlgExtendedError
  result value :: <DWORD>;
  c-name: "CommDlgExtendedError", c-modifiers: "__stdcall";
end;
define inline-only constant $WM-PSD-PAGESETUPDLG        = $WM-USER;
define inline-only constant $WM-PSD-FULLPAGERECT        =
	$WM-USER + 1;
define inline-only constant $WM-PSD-MINMARGINRECT       =
	$WM-USER + 2;
define inline-only constant $WM-PSD-MARGINRECT          =
	$WM-USER + 3;
define inline-only constant $WM-PSD-GREEKTEXTRECT       =
	$WM-USER + 4;
define inline-only constant $WM-PSD-ENVSTAMPRECT        =
	$WM-USER + 5;
define inline-only constant $WM-PSD-YAFULLPAGERECT      =
	$WM-USER + 6;
define constant <LPPAGEPAINTHOOK> = <C-function-pointer>;
define constant <LPPAGESETUPHOOK> = <C-function-pointer>;

define C-struct <PAGESETUPDLGA>
  sealed inline-only slot lStructSize-value :: <DWORD>;
  sealed inline-only slot hwndOwner-value :: <HWND>;
  sealed inline-only slot hDevMode-value :: <HGLOBAL>;
  sealed inline-only slot hDevNames-value :: <HGLOBAL>;
  sealed inline-only slot Flags-value    :: <DWORD>;
  sealed inline-only slot ptPaperSize-value :: <POINT>;
  sealed inline-only slot rtMinMargin-value :: <RECT>;
  sealed inline-only slot rtMargin-value :: <RECT>;
  sealed inline-only slot hInstance-value :: <HINSTANCE>;
  sealed inline-only slot lCustData-value :: <LPARAM>;
  sealed inline-only slot lpfnPageSetupHook-value :: <LPPAGESETUPHOOK>;
  sealed inline-only slot lpfnPagePaintHook-value :: <LPPAGEPAINTHOOK>;
  sealed inline-only slot lpPageSetupTemplateName-value :: <LPCSTR>;
  sealed inline-only slot hPageSetupTemplate-value :: <HGLOBAL>;
  pack: 1;
  pointer-type-name: <LPPAGESETUPDLGA>;
  c-name: "struct tagPSDA";
end C-struct <PAGESETUPDLGA>;
define inline constant <PAGESETUPDLG> = <PAGESETUPDLGA>;
define inline constant <LPPAGESETUPDLG> = <LPPAGESETUPDLGA>;

define inline-only C-function PageSetupDlg
  parameter lppagesetupdlga1 :: <LPPAGESETUPDLGA>;
  result value :: <BOOL>;
  c-name: "PageSetupDlgA", c-modifiers: "__stdcall";
end;
define inline-only constant $PSD-DEFAULTMINMARGINS      = #x00000000;
define inline-only constant $PSD-INWININIINTLMEASURE    = #x00000000;
define inline-only constant $PSD-MINMARGINS             = #x00000001;
define inline-only constant $PSD-MARGINS                = #x00000002;
define inline-only constant $PSD-INTHOUSANDTHSOFINCHES  = #x00000004;
define inline-only constant $PSD-INHUNDREDTHSOFMILLIMETERS =
	#x00000008;
define inline-only constant $PSD-DISABLEMARGINS         = #x00000010;
define inline-only constant $PSD-DISABLEPRINTER         = #x00000020;
define inline-only constant $PSD-NOWARNING              = #x00000080;
define inline-only constant $PSD-DISABLEORIENTATION     = #x00000100;
define inline-only constant $PSD-RETURNDEFAULT          = #x00000400;
define inline-only constant $PSD-DISABLEPAPER           = #x00000200;
define inline-only constant $PSD-SHOWHELP               = #x00000800;
define inline-only constant $PSD-ENABLEPAGESETUPHOOK    = #x00002000;
define inline-only constant $PSD-ENABLEPAGESETUPTEMPLATE =
	#x00008000;
define inline-only constant $PSD-ENABLEPAGESETUPTEMPLATEHANDLE =
	#x00020000;
define inline-only constant $PSD-ENABLEPAGEPAINTHOOK    = #x00040000;
define inline-only constant $PSD-DISABLEPAGEPAINTING    = #x00080000;
define inline-only constant $PSD-NONETWORKBUTTON        = #x00200000;

define sealed domain make (singleton(<LPOPENFILENAMEA>));
define sealed domain initialize (<LPOPENFILENAMEA>);
define sealed domain make (singleton(<LPOFNOTIFYA>));
define sealed domain initialize (<LPOFNOTIFYA>);
define sealed domain make (singleton(<LPOFNOTIFYEXA>));
define sealed domain initialize (<LPOFNOTIFYEXA>);
define sealed domain make (singleton(<LPCHOOSECOLORA>));
define sealed domain initialize (<LPCHOOSECOLORA>);
define sealed domain make (singleton(<LPFINDREPLACEA>));
define sealed domain initialize (<LPFINDREPLACEA>);
define sealed domain make (singleton(<LPCHOOSEFONTA>));
define sealed domain initialize (<LPCHOOSEFONTA>);
define inline-only constant $CF-SCRIPTSONLY = $CF-ANSIONLY;
define inline-only constant $CF-NOOEMFONTS = $CF-NOVECTORFONTS;
define sealed domain make (singleton(<LPPRINTDLGA>));
define sealed domain initialize (<LPPRINTDLGA>);
define sealed domain make (singleton(<LPDEVNAMES>));
define sealed domain initialize (<LPDEVNAMES>);
define sealed domain make (singleton(<LPPAGESETUPDLGA>));
define sealed domain initialize (<LPPAGESETUPDLGA>);
