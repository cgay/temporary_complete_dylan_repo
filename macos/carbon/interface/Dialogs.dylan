Module:    carbon-interface
Copyright:    Original Code is Copyright (c) 1995-2004 Functional Objects, Inc.
              All rights reserved.
License:      Functional Objects Library Public License Version 1.0
Dual-license: GNU Lesser General Public License
Warranty:     Distributed WITHOUT WARRANTY OF ANY KIND

// This file is automatically generated from "Dialogs.h"; do not edit.

// unnamed enum:
define inline-only constant $gestaltDialogMgrAttr      = FOUR_CHAR_CODE('d', 'l', 'o', 'g');
define inline-only constant $gestaltDialogMgrPresent   = ash(1, 0);
define inline-only constant $dialogNoTimeoutErr        = -5640;

// unnamed enum:
define inline-only constant $kControlDialogItem        = 4;
define inline-only constant $kButtonDialogItem         = %logior($kControlDialogItem, 0);
define inline-only constant $kCheckBoxDialogItem       = %logior($kControlDialogItem, 1);
define inline-only constant $kRadioButtonDialogItem    = %logior($kControlDialogItem, 2);
define inline-only constant $kResourceControlDialogItem = %logior($kControlDialogItem, 3);
define inline-only constant $kStaticTextDialogItem     = 8;
define inline-only constant $kEditTextDialogItem       = 16;
define inline-only constant $kIconDialogItem           = 32;
define inline-only constant $kPictureDialogItem        = 64;
define inline-only constant $kUserDialogItem           = 0;
define inline-only constant $kItemDisableBit           = 128;

// unnamed enum:
define inline-only constant $ctrlItem                  = 4;
define inline-only constant $btnCtrl                   = 0;
define inline-only constant $chkCtrl                   = 1;
define inline-only constant $radCtrl                   = 2;
define inline-only constant $resCtrl                   = 3;
define inline-only constant $statText                  = 8;
define inline-only constant $editText                  = 16;
define inline-only constant $iconItem                  = 32;
define inline-only constant $picItem                   = 64;
define inline-only constant $userItem                  = 0;
define inline-only constant $itemDisable               = 128;

// unnamed enum:
define inline-only constant $kStdOkItemIndex           = 1;
define inline-only constant $kStdCancelItemIndex       = 2;
define inline-only constant $ok                        = $kStdOkItemIndex;
define inline-only constant $cancel                    = $kStdCancelItemIndex;

// unnamed enum:
define inline-only constant $kStopIcon                 = 0;
define inline-only constant $kNoteIcon                 = 1;
define inline-only constant $kCautionIcon              = 2;
define inline-only constant $stopIcon                  = $kStopIcon;
define inline-only constant $noteIcon                  = $kNoteIcon;
define inline-only constant $cautionIcon               = $kCautionIcon;

define inline constant <DITLMethod> = <SInt16>;
define C-pointer-type <DITLMethod*> => <DITLMethod>;
define C-pointer-type <DITLMethod**> => <DITLMethod*>;
// unnamed enum:
define inline-only constant $overlayDITL               = 0;
define inline-only constant $appendDITLRight           = 1;
define inline-only constant $appendDITLBottom          = 2;

define inline constant <StageList> = <SInt16>;
define C-pointer-type <StageList*> => <StageList>;
define C-pointer-type <StageList**> => <StageList*>;
define inline constant <DialogRef> = <DialogPtr>;
define C-pointer-type <DialogRef*> => <DialogRef>;
define C-pointer-type <DialogRef**> => <DialogRef*>;

define C-struct <DialogRecord>
  sealed inline-only slot window-value   :: <WindowRecord>;
  sealed inline-only slot items-value    :: <Handle>;
  sealed inline-only slot textH-value    :: <TEHandle>;
  sealed inline-only slot editField-value :: <SInt16>;
  sealed inline-only slot editOpen-value :: <SInt16>;
  sealed inline-only slot aDefItem-value :: <SInt16>;
  pack: 2;
  c-name: "struct DialogRecord";
end;
define C-pointer-type <DialogRecord*> => <DialogRecord>;
define C-pointer-type <DialogRecord**> => <DialogRecord*>;
define C-pointer-type <DialogPeek> => <DialogRecord>;

define C-struct <DialogTemplate>
  sealed inline-only slot boundsRect-value :: <Rect>;
  sealed inline-only slot procID-value   :: <SInt16>;
  sealed inline-only slot visible-value  :: <MacBoolean>;
  sealed inline-only slot filler1-value  :: <MacBoolean>;
  sealed inline-only slot goAwayFlag-value :: <MacBoolean>;
  sealed inline-only slot filler2-value  :: <MacBoolean>;
  sealed inline-only slot refCon-value   :: <SInt32>;
  sealed inline-only slot itemsID-value  :: <SInt16>;
  sealed inline-only slot title-value    :: <Str255>;
  pack: 2;
  c-name: "struct DialogTemplate";
end;
define C-pointer-type <DialogTemplate*> => <DialogTemplate>;
define C-pointer-type <DialogTemplate**> => <DialogTemplate*>;
define C-pointer-type <DialogTPtr> => <DialogTemplate>;
define C-pointer-type <DialogTHndl> => <DialogTPtr>;

define C-struct <AlertTemplate>
  sealed inline-only slot boundsRect-value :: <Rect>;
  sealed inline-only slot itemsID-value  :: <SInt16>;
  sealed inline-only slot stages-value   :: <StageList>;
  pack: 2;
  c-name: "struct AlertTemplate";
end;
define C-pointer-type <AlertTemplate*> => <AlertTemplate>;
define C-pointer-type <AlertTemplate**> => <AlertTemplate*>;
define C-pointer-type <AlertTPtr> => <AlertTemplate>;
define C-pointer-type <AlertTHndl> => <AlertTPtr>;
define inline constant <DialogItemIndexZeroBased> = <SInt16>;
define C-pointer-type <DialogItemIndexZeroBased*> => <DialogItemIndexZeroBased>;
define C-pointer-type <DialogItemIndexZeroBased**> => <DialogItemIndexZeroBased*>;
define inline constant <DialogItemIndex> = <SInt16>;
define C-pointer-type <DialogItemIndex*> => <DialogItemIndex>;
define C-pointer-type <DialogItemIndex**> => <DialogItemIndex*>;
define inline constant <DialogItemType> = <SInt16>;
define C-pointer-type <DialogItemType*> => <DialogItemType>;
define C-pointer-type <DialogItemType**> => <DialogItemType*>;
define constant <SoundProcPtr> = <C-function-pointer>;
define constant <ModalFilterProcPtr> = <C-function-pointer>;
define constant <UserItemProcPtr> = <C-function-pointer>;
define constant <SoundUPP> = <UniversalProcPtr>;
define constant <ModalFilterUPP> = <UniversalProcPtr>;
define constant <UserItemUPP> = <UniversalProcPtr>;
// unnamed enum:
define inline-only constant $uppSoundProcInfo          = #x00000080;

// unnamed enum:
define inline-only constant $uppModalFilterProcInfo    = #x00000FD0;

// unnamed enum:
define inline-only constant $uppUserItemProcInfo       = #x000002C0;

// unnamed enum:
define inline-only constant $kAlertStopAlert           = 0;
define inline-only constant $kAlertNoteAlert           = 1;
define inline-only constant $kAlertCautionAlert        = 2;
define inline-only constant $kAlertPlainAlert          = 3;

define inline constant <AlertType> = <SInt16>;
define C-pointer-type <AlertType*> => <AlertType>;
define C-pointer-type <AlertType**> => <AlertType*>;
// unnamed enum:
define inline-only constant $kAlertDefaultOKText       = -1;
define inline-only constant $kAlertDefaultCancelText   = -1;
define inline-only constant $kAlertDefaultOtherText    = -1;

// unnamed enum:
define inline-only constant $kAlertStdAlertOKButton    = 1;
define inline-only constant $kAlertStdAlertCancelButton = 2;
define inline-only constant $kAlertStdAlertOtherButton = 3;
define inline-only constant $kAlertStdAlertHelpButton  = 4;

// unnamed enum:
define inline-only constant $kDialogFlagsUseThemeBackground = ash(1, 0);
define inline-only constant $kDialogFlagsUseControlHierarchy = ash(1, 1);
define inline-only constant $kDialogFlagsHandleMovableModal = ash(1, 2);
define inline-only constant $kDialogFlagsUseThemeControls = ash(1, 3);

// unnamed enum:
define inline-only constant $kAlertFlagsUseThemeBackground = ash(1, 0);
define inline-only constant $kAlertFlagsUseControlHierarchy = ash(1, 1);
define inline-only constant $kAlertFlagsAlertIsMovable = ash(1, 2);
define inline-only constant $kAlertFlagsUseThemeControls = ash(1, 3);

// unnamed enum:
define inline-only constant $kDialogFontNoFontStyle    = 0;
define inline-only constant $kDialogFontUseFontMask    = #x0001;
define inline-only constant $kDialogFontUseFaceMask    = #x0002;
define inline-only constant $kDialogFontUseSizeMask    = #x0004;
define inline-only constant $kDialogFontUseForeColorMask = #x0008;
define inline-only constant $kDialogFontUseBackColorMask = #x0010;
define inline-only constant $kDialogFontUseModeMask    = #x0020;
define inline-only constant $kDialogFontUseJustMask    = #x0040;
define inline-only constant $kDialogFontUseAllMask     = #x00FF;
define inline-only constant $kDialogFontAddFontSizeMask = #x0100;
define inline-only constant $kDialogFontUseFontNameMask = #x0200;
define inline-only constant $kDialogFontAddToMetaFontMask = #x0400;


define C-struct <AlertStdAlertParamRec>
  sealed inline-only slot movable-value  :: <MacBoolean>;
  sealed inline-only slot helpButton-value :: <MacBoolean>;
  sealed inline-only slot filterProc-value :: <ModalFilterUPP>;
  sealed inline-only slot defaultText-value :: <StringPtr>;
  sealed inline-only slot cancelText-value :: <StringPtr>;
  sealed inline-only slot otherText-value :: <StringPtr>;
  sealed inline-only slot defaultButton-value :: <SInt16>;
  sealed inline-only slot cancelButton-value :: <SInt16>;
  sealed inline-only slot position-value :: <UInt16>;
  pack: 2;
  c-name: "struct AlertStdAlertParamRec";
end;
define C-pointer-type <AlertStdAlertParamRec*> => <AlertStdAlertParamRec>;
define C-pointer-type <AlertStdAlertParamRec**> => <AlertStdAlertParamRec*>;
define C-pointer-type <AlertStdAlertParamPtr> => <AlertStdAlertParamRec>;

define inline-only C-function InitDialogs
  parameter ignored    :: <C-void*>;
  c-name: "InitDialogs";
  c-modifiers: "pascal";
end;

define inline-only C-function ErrorSound
  parameter soundProc  :: <SoundUPP>;
  c-name: "ErrorSound";
  c-modifiers: "pascal";
end;

define inline-only C-function NewDialog
  parameter dStorage   :: <C-void*>;
  parameter boundsRect ::  /* const */ <Rect*>;
  parameter title      :: <ConstStr255Param>;
  parameter visible    :: <MacBoolean>;
  parameter procID     :: <SInt16>;
  parameter behind     :: <WindowPtr>;
  parameter goAwayFlag :: <MacBoolean>;
  parameter refCon     :: <SInt32>;
  parameter items      :: <Handle>;
  result value :: <DialogPtr>;
  c-name: "NewDialog";
  c-modifiers: "pascal";
end;

define inline-only C-function GetNewDialog
  parameter dialogID   :: <SInt16>;
  parameter dStorage   :: <C-void*>;
  parameter behind     :: <WindowPtr>;
  result value :: <DialogPtr>;
  c-name: "GetNewDialog";
  c-modifiers: "pascal";
end;

define inline-only C-function NewColorDialog
  parameter dStorage   :: <C-void*>;
  parameter boundsRect ::  /* const */ <Rect*>;
  parameter title      :: <ConstStr255Param>;
  parameter visible    :: <MacBoolean>;
  parameter procID     :: <SInt16>;
  parameter behind     :: <WindowPtr>;
  parameter goAwayFlag :: <MacBoolean>;
  parameter refCon     :: <SInt32>;
  parameter items      :: <Handle>;
  result value :: <DialogPtr>;
  c-name: "NewColorDialog";
  c-modifiers: "pascal";
end;

define inline-only C-function CloseDialog
  parameter theDialog  :: <DialogPtr>;
  c-name: "CloseDialog";
  c-modifiers: "pascal";
end;

define inline-only C-function DisposeDialog
  parameter theDialog  :: <DialogPtr>;
  c-name: "DisposeDialog";
  c-modifiers: "pascal";
end;

define inline-only C-function ModalDialog
  parameter modalFilter :: <ModalFilterUPP>;
  parameter itemHit    :: <DialogItemIndex*>;
  c-name: "ModalDialog";
  c-modifiers: "pascal";
end;

define inline-only C-function IsDialogEvent
  parameter theEvent   ::  /* const */ <EventRecord*>;
  result value :: <MacBoolean>;
  c-name: "IsDialogEvent";
  c-modifiers: "pascal";
end;

define inline-only C-function DialogSelect
  parameter theEvent   ::  /* const */ <EventRecord*>;
  parameter theDialog  :: <DialogPtr*>;
  parameter itemHit    :: <DialogItemIndex*>;
  result value :: <MacBoolean>;
  c-name: "DialogSelect";
  c-modifiers: "pascal";
end;

define inline-only C-function DrawDialog
  parameter theDialog  :: <DialogPtr>;
  c-name: "DrawDialog";
  c-modifiers: "pascal";
end;

define inline-only C-function UpdateDialog
  parameter theDialog  :: <DialogPtr>;
  parameter updateRgn  :: <RgnHandle>;
  c-name: "UpdateDialog";
  c-modifiers: "pascal";
end;

define inline-only C-function HideDialogItem
  parameter theDialog  :: <DialogPtr>;
  parameter itemNo     :: <DialogItemIndex>;
  c-name: "HideDialogItem";
  c-modifiers: "pascal";
end;

define inline-only C-function ShowDialogItem
  parameter theDialog  :: <DialogPtr>;
  parameter itemNo     :: <DialogItemIndex>;
  c-name: "ShowDialogItem";
  c-modifiers: "pascal";
end;

define inline-only C-function FindDialogItem
  parameter theDialog  :: <DialogPtr>;
  parameter thePt      :: <Point>;
  result value :: <DialogItemIndexZeroBased>;
  c-name: "FindDialogItem";
  c-modifiers: "pascal";
end;

define inline-only C-function DialogCut
  parameter theDialog  :: <DialogPtr>;
  c-name: "DialogCut";
  c-modifiers: "pascal";
end;

define inline-only C-function DialogPaste
  parameter theDialog  :: <DialogPtr>;
  c-name: "DialogPaste";
  c-modifiers: "pascal";
end;

define inline-only C-function DialogCopy
  parameter theDialog  :: <DialogPtr>;
  c-name: "DialogCopy";
  c-modifiers: "pascal";
end;

define inline-only C-function DialogDelete
  parameter theDialog  :: <DialogPtr>;
  c-name: "DialogDelete";
  c-modifiers: "pascal";
end;

define inline-only C-function Alert
  parameter alertID    :: <SInt16>;
  parameter modalFilter :: <ModalFilterUPP>;
  result value :: <DialogItemIndex>;
  c-name: "Alert";
  c-modifiers: "pascal";
end;

define inline-only C-function StopAlert
  parameter alertID    :: <SInt16>;
  parameter modalFilter :: <ModalFilterUPP>;
  result value :: <DialogItemIndex>;
  c-name: "StopAlert";
  c-modifiers: "pascal";
end;

define inline-only C-function NoteAlert
  parameter alertID    :: <SInt16>;
  parameter modalFilter :: <ModalFilterUPP>;
  result value :: <DialogItemIndex>;
  c-name: "NoteAlert";
  c-modifiers: "pascal";
end;

define inline-only C-function CautionAlert
  parameter alertID    :: <SInt16>;
  parameter modalFilter :: <ModalFilterUPP>;
  result value :: <DialogItemIndex>;
  c-name: "CautionAlert";
  c-modifiers: "pascal";
end;

define inline-only C-function GetDialogItem
  parameter theDialog  :: <DialogPtr>;
  parameter itemNo     :: <DialogItemIndex>;
  parameter itemType   :: <DialogItemType*>;
  parameter item       :: <Handle*>;
  parameter box        :: <Rect*>;
  c-name: "GetDialogItem";
  c-modifiers: "pascal";
end;

define inline-only C-function SetDialogItem
  parameter theDialog  :: <DialogPtr>;
  parameter itemNo     :: <DialogItemIndex>;
  parameter itemType   :: <DialogItemType>;
  parameter item       :: <Handle>;
  parameter box        ::  /* const */ <Rect*>;
  c-name: "SetDialogItem";
  c-modifiers: "pascal";
end;

define inline-only C-function ParamText
  parameter param0     :: <ConstStr255Param>;
  parameter param1     :: <ConstStr255Param>;
  parameter param2     :: <ConstStr255Param>;
  parameter param3     :: <ConstStr255Param>;
  c-name: "ParamText";
  c-modifiers: "pascal";
end;

define inline-only C-function SelectDialogItemText
  parameter theDialog  :: <DialogPtr>;
  parameter itemNo     :: <DialogItemIndex>;
  parameter strtSel    :: <SInt16>;
  parameter endSel     :: <SInt16>;
  c-name: "SelectDialogItemText";
  c-modifiers: "pascal";
end;

define inline-only C-function GetDialogItemText
  parameter item       :: <Handle>;
  parameter text       :: <Str255>;
  c-name: "GetDialogItemText";
  c-modifiers: "pascal";
end;

define inline-only C-function SetDialogItemText
  parameter item       :: <Handle>;
  parameter text       :: <ConstStr255Param>;
  c-name: "SetDialogItemText";
  c-modifiers: "pascal";
end;

define inline-only C-function GetAlertStage
  result value :: <SInt16>;
  c-name: "GetAlertStage";
  c-modifiers: "pascal";
end;

define inline-only C-function SetDialogFont
  parameter fontNum    :: <SInt16>;
  c-name: "SetDialogFont";
  c-modifiers: "pascal";
end;

define inline-only C-function ResetAlertStage
  c-name: "ResetAlertStage";
  c-modifiers: "pascal";
end;

define inline-only C-function AppendDITL
  parameter theDialog  :: <DialogPtr>;
  parameter theHandle  :: <Handle>;
  parameter method%1   :: <DITLMethod>;
  c-name: "AppendDITL";
  c-modifiers: "pascal";
end;

define inline-only C-function CountDITL
  parameter theDialog  :: <DialogPtr>;
  result value :: <DialogItemIndex>;
  c-name: "CountDITL";
  c-modifiers: "pascal";
end;

define inline-only C-function ShortenDITL
  parameter theDialog  :: <DialogPtr>;
  parameter numberItems :: <DialogItemIndex>;
  c-name: "ShortenDITL";
  c-modifiers: "pascal";
end;

define inline-only C-function StdFilterProc
  parameter theDialog  :: <DialogPtr>;
  parameter event      :: <EventRecord*>;
  parameter itemHit    :: <DialogItemIndex*>;
  result value :: <MacBoolean>;
  c-name: "StdFilterProc";
  c-modifiers: "pascal";
end;

define inline-only C-function GetStdFilterProc
  parameter theProc    :: <ModalFilterUPP*>;
  result value :: <OSErr>;
  c-name: "GetStdFilterProc";
  c-modifiers: "pascal";
end;

define inline-only C-function SetDialogDefaultItem
  parameter theDialog  :: <DialogPtr>;
  parameter newItem    :: <DialogItemIndex>;
  result value :: <OSErr>;
  c-name: "SetDialogDefaultItem";
  c-modifiers: "pascal";
end;

define inline-only C-function SetDialogCancelItem
  parameter theDialog  :: <DialogPtr>;
  parameter newItem    :: <DialogItemIndex>;
  result value :: <OSErr>;
  c-name: "SetDialogCancelItem";
  c-modifiers: "pascal";
end;

define inline-only C-function SetDialogTracksCursor
  parameter theDialog  :: <DialogPtr>;
  parameter tracks     :: <MacBoolean>;
  result value :: <OSErr>;
  c-name: "SetDialogTracksCursor";
  c-modifiers: "pascal";
end;

define inline-only C-function NewFeaturesDialog
  parameter inStorage  :: <C-void*>;
  parameter inBoundsRect ::  /* const */ <Rect*>;
  parameter inTitle    :: <ConstStr255Param>;
  parameter inIsVisible :: <MacBoolean>;
  parameter inProcID   :: <SInt16>;
  parameter inBehind   :: <WindowPtr>;
  parameter inGoAwayFlag :: <MacBoolean>;
  parameter inRefCon   :: <SInt32>;
  parameter inItemListHandle :: <Handle>;
  parameter inFlags    :: <UInt32>;
  result value :: <DialogPtr>;
  c-name: "NewFeaturesDialog";
  c-modifiers: "pascal";
end;

define inline-only C-function AutoSizeDialog
  parameter inDialog   :: <DialogPtr>;
  result value :: <OSErr>;
  c-name: "AutoSizeDialog";
  c-modifiers: "pascal";
end;

define inline-only C-function StandardAlert
  parameter inAlertType :: <AlertType>;
  parameter inError    :: <StringPtr>;
  parameter inExplanation :: <StringPtr>;
  parameter inAlertParam :: <AlertStdAlertParamPtr>;
  parameter outItemHit :: <SInt16*>;
  result value :: <OSErr>;
  c-name: "StandardAlert";
  c-modifiers: "pascal";
end;

define inline-only C-function GetDialogItemAsControl
  parameter inDialog   :: <DialogPtr>;
  parameter inItemNo   :: <SInt16>;
  parameter outControl :: <ControlHandle*>;
  result value :: <OSErr>;
  c-name: "GetDialogItemAsControl";
  c-modifiers: "pascal";
end;

define inline-only C-function MoveDialogItem
  parameter inDialog   :: <DialogPtr>;
  parameter inItemNo   :: <SInt16>;
  parameter inHoriz    :: <SInt16>;
  parameter inVert     :: <SInt16>;
  result value :: <OSErr>;
  c-name: "MoveDialogItem";
  c-modifiers: "pascal";
end;

define inline-only C-function SizeDialogItem
  parameter inDialog   :: <DialogPtr>;
  parameter inItemNo   :: <SInt16>;
  parameter inWidth    :: <SInt16>;
  parameter inHeight   :: <SInt16>;
  result value :: <OSErr>;
  c-name: "SizeDialogItem";
  c-modifiers: "pascal";
end;

define inline-only C-function AppendDialogItemList
  parameter dialog     :: <DialogPtr>;
  parameter ditlID     :: <SInt16>;
  parameter method%1   :: <DITLMethod>;
  result value :: <OSErr>;
  c-name: "AppendDialogItemList";
  c-modifiers: "pascal";
end;

define inline-only C-function SetDialogTimeout
  parameter inDialog   :: <DialogPtr>;
  parameter inButtonToPress :: <SInt16>;
  parameter inSecondsToWait :: <UInt32>;
  result value :: <OSStatus>;
  c-name: "SetDialogTimeout";
  c-modifiers: "pascal";
end;

define inline-only C-function GetDialogTimeout
  parameter inDialog   :: <DialogPtr>;
  parameter outButtonToPress :: <SInt16*>;
  parameter outSecondsToWait :: <UInt32*>;
  parameter outSecondsRemaining :: <UInt32*>;
  result value :: <OSStatus>;
  c-name: "GetDialogTimeout";
  c-modifiers: "pascal";
end;

define inline-only C-function SetModalDialogEventMask
  parameter inDialog   :: <DialogPtr>;
  parameter inMask     :: <EventMask>;
  result value :: <OSStatus>;
  c-name: "SetModalDialogEventMask";
  c-modifiers: "pascal";
end;

define inline-only C-function GetModalDialogEventMask
  parameter inDialog   :: <DialogPtr>;
  parameter outMask    :: <EventMask*>;
  result value :: <OSStatus>;
  c-name: "GetModalDialogEventMask";
  c-modifiers: "pascal";
end;

define inline-only C-function CouldDialog
  parameter dialogID   :: <SInt16>;
  c-name: "CouldDialog";
  c-modifiers: "pascal";
end;

define inline-only C-function FreeDialog
  parameter dialogID   :: <SInt16>;
  c-name: "FreeDialog";
  c-modifiers: "pascal";
end;

define inline-only C-function CouldAlert
  parameter alertID    :: <SInt16>;
  c-name: "CouldAlert";
  c-modifiers: "pascal";
end;

define inline-only C-function FreeAlert
  parameter alertID    :: <SInt16>;
  c-name: "FreeAlert";
  c-modifiers: "pascal";
end;

