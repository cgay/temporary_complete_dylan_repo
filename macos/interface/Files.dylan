Module:    macos-interface
Copyright:    Original Code is Copyright (c) 1995-2004 Functional Objects, Inc.
              All rights reserved.
License:      Functional Objects Library Public License Version 1.0
Dual-license: GNU Lesser General Public License
Warranty:     Distributed WITHOUT WARRANTY OF ANY KIND

// This file is automatically generated from "Files.h"; do not edit.

// unnamed enum:
define inline-only constant $fsAtMark                  = 0;
define inline-only constant $fsCurPerm                 = 0;
define inline-only constant $fsRdPerm                  = 1;
define inline-only constant $fInvisible                = 16384;
define inline-only constant $fsWrPerm                  = 2;
define inline-only constant $fsRdWrPerm                = 3;
define inline-only constant $fsRdWrShPerm              = 4;
define inline-only constant $fsFromStart               = 1;
define inline-only constant $fsFromLEOF                = 2;
define inline-only constant $fsFromMark                = 3;
define inline-only constant $rdVerify                  = 64;
define inline-only constant $ioMapBuffer               = 4;
define inline-only constant $ioModeReserved            = 8;
define inline-only constant $ioDirFlg                  = 4;
define inline-only constant $ioDirMask                 = #x10;
define inline-only constant $fsRtParID                 = 1;
define inline-only constant $fsRtDirID                 = 2;

// unnamed enum:
define inline-only constant $fsSBPartialName           = 1;
define inline-only constant $fsSBFullName              = 2;
define inline-only constant $fsSBFlAttrib              = 4;
define inline-only constant $fsSBFlFndrInfo            = 8;
define inline-only constant $fsSBFlLgLen               = 32;
define inline-only constant $fsSBFlPyLen               = 64;
define inline-only constant $fsSBFlRLgLen              = 128;
define inline-only constant $fsSBFlRPyLen              = 256;
define inline-only constant $fsSBFlCrDat               = 512;
define inline-only constant $fsSBFlMdDat               = 1024;
define inline-only constant $fsSBFlBkDat               = 2048;
define inline-only constant $fsSBFlXFndrInfo           = 4096;
define inline-only constant $fsSBFlParID               = 8192;
define inline-only constant $fsSBNegate                = 16384;
define inline-only constant $fsSBDrUsrWds              = 8;
define inline-only constant $fsSBDrNmFls               = 16;
define inline-only constant $fsSBDrCrDat               = 512;
define inline-only constant $fsSBDrMdDat               = 1024;
define inline-only constant $fsSBDrBkDat               = 2048;
define inline-only constant $fsSBDrFndrInfo            = 4096;
define inline-only constant $fsSBDrParID               = 8192;

// unnamed enum:
define inline-only constant $fsSBPartialNameBit        = 0;
define inline-only constant $fsSBFullNameBit           = 1;
define inline-only constant $fsSBFlAttribBit           = 2;
define inline-only constant $fsSBFlFndrInfoBit         = 3;
define inline-only constant $fsSBFlLgLenBit            = 5;
define inline-only constant $fsSBFlPyLenBit            = 6;
define inline-only constant $fsSBFlRLgLenBit           = 7;
define inline-only constant $fsSBFlRPyLenBit           = 8;
define inline-only constant $fsSBFlCrDatBit            = 9;
define inline-only constant $fsSBFlMdDatBit            = 10;
define inline-only constant $fsSBFlBkDatBit            = 11;
define inline-only constant $fsSBFlXFndrInfoBit        = 12;
define inline-only constant $fsSBFlParIDBit            = 13;
define inline-only constant $fsSBNegateBit             = 14;
define inline-only constant $fsSBDrUsrWdsBit           = 3;
define inline-only constant $fsSBDrNmFlsBit            = 4;
define inline-only constant $fsSBDrCrDatBit            = 9;
define inline-only constant $fsSBDrMdDatBit            = 10;
define inline-only constant $fsSBDrBkDatBit            = 11;
define inline-only constant $fsSBDrFndrInfoBit         = 12;
define inline-only constant $fsSBDrParIDBit            = 13;

// unnamed enum:
define inline-only constant $bLimitFCBs                = 31;
define inline-only constant $bLocalWList               = 30;
define inline-only constant $bNoMiniFndr               = 29;
define inline-only constant $bNoVNEdit                 = 28;
define inline-only constant $bNoLclSync                = 27;
define inline-only constant $bTrshOffLine              = 26;
define inline-only constant $bNoSwitchTo               = 25;
define inline-only constant $bNoDeskItems              = 20;
define inline-only constant $bNoBootBlks               = 19;
define inline-only constant $bAccessCntl               = 18;
define inline-only constant $bNoSysDir                 = 17;
define inline-only constant $bHasExtFSVol              = 16;
define inline-only constant $bHasOpenDeny              = 15;
define inline-only constant $bHasCopyFile              = 14;
define inline-only constant $bHasMoveRename            = 13;
define inline-only constant $bHasDesktopMgr            = 12;
define inline-only constant $bHasShortName             = 11;
define inline-only constant $bHasFolderLock            = 10;
define inline-only constant $bHasPersonalAccessPrivileges = 9;
define inline-only constant $bHasUserGroupList         = 8;
define inline-only constant $bHasCatSearch             = 7;
define inline-only constant $bHasFileIDs               = 6;
define inline-only constant $bHasBTreeMgr              = 5;
define inline-only constant $bHasBlankAccessPrivileges = 4;
define inline-only constant $bSupportsAsyncRequests    = 3;
define inline-only constant $bSupportsTrashVolumeCache = 2;

// unnamed enum:
define inline-only constant $kLargeIcon                = 1;
define inline-only constant $kLarge4BitIcon            = 2;
define inline-only constant $kLarge8BitIcon            = 3;
define inline-only constant $kSmallIcon                = 4;
define inline-only constant $kSmall4BitIcon            = 5;
define inline-only constant $kSmall8BitIcon            = 6;

// unnamed enum:
define inline-only constant $kLargeIconSize            = 256;
define inline-only constant $kLarge4BitIconSize        = 512;
define inline-only constant $kLarge8BitIconSize        = 1024;
define inline-only constant $kSmallIconSize            = 64;
define inline-only constant $kSmall4BitIconSize        = 128;
define inline-only constant $kSmall8BitIconSize        = 256;

// unnamed enum:
define inline-only constant $fsUnixPriv                = 1;

// unnamed enum:
define inline-only constant $kNoUserAuthentication     = 1;
define inline-only constant $kPassword                 = 2;
define inline-only constant $kEncryptPassword          = 3;
define inline-only constant $kTwoWayEncryptPassword    = 6;

// unnamed enum:
define inline-only constant $kOwnerID2Name             = 1;
define inline-only constant $kGroupID2Name             = 2;
define inline-only constant $kOwnerName2ID             = 3;
define inline-only constant $kGroupName2ID             = 4;
define inline-only constant $kReturnNextUser           = 1;
define inline-only constant $kReturnNextGroup          = 2;
define inline-only constant $kReturnNextUG             = 3;

// unnamed enum:
define inline-only constant $kfullPrivileges           = #x00070007;
define inline-only constant $kownerPrivileges          = #x00000007;

// unnamed enum:
define inline-only constant $knoUser                   = 0;
define inline-only constant $kadministratorUser        = 1;

// unnamed enum:
define inline-only constant $knoGroup                  = 0;


define C-struct <GetVolParmsInfoBuffer>
  sealed inline-only slot vMVersion-value :: <C-short>;
  sealed inline-only slot vMAttrib-value :: <C-both-long>;
  sealed inline-only slot vMLocalHand-value :: <Handle>;
  sealed inline-only slot vMServerAdr-value :: <C-both-long>;
  sealed inline-only slot vMVolumeGrade-value :: <C-both-long>;
  sealed inline-only slot vMForeignPrivID-value :: <C-short>;
  pack: 2;
  c-name: "struct GetVolParmsInfoBuffer";
end;
define C-pointer-type <GetVolParmsInfoBuffer*> => <GetVolParmsInfoBuffer>;
define C-pointer-type <GetVolParmsInfoBuffer**> => <GetVolParmsInfoBuffer*>;
define C-pointer-type <ParamBlockRec*> => <ParamBlockRec>;
define C-pointer-type <ParamBlockRec**> => <ParamBlockRec*>;
define C-pointer-type <ParmBlkPtr> => <ParamBlockRec>;
define constant <IOCompletionProcPtr> = <C-function-pointer>;
define constant <IOCompletionUPP> = <UniversalProcPtr>;

define C-struct <IOParam>
  sealed inline-only slot qLink-value    :: <QElemPtr>;
  sealed inline-only slot qType-value    :: <C-short>;
  sealed inline-only slot ioTrap-value   :: <C-short>;
  sealed inline-only slot ioCmdAddr-value :: <Ptr>;
  sealed inline-only slot ioCompletion-value :: <IOCompletionUPP>;
  sealed inline-only slot ioResult-value :: <OSErr>;
  sealed inline-only slot ioNamePtr-value :: <StringPtr>;
  sealed inline-only slot ioVRefNum-value :: <C-short>;
  sealed inline-only slot ioRefNum-value :: <C-short>;
  sealed inline-only slot ioVersNum-value :: <SInt8>;
  sealed inline-only slot ioPermssn-value :: <SInt8>;
  sealed inline-only slot ioMisc-value   :: <Ptr>;
  sealed inline-only slot ioBuffer-value :: <Ptr>;
  sealed inline-only slot ioReqCount-value :: <C-both-long>;
  sealed inline-only slot ioActCount-value :: <C-both-long>;
  sealed inline-only slot ioPosMode-value :: <C-short>;
  sealed inline-only slot ioPosOffset-value :: <C-both-long>;
  pack: 2;
  c-name: "struct IOParam";
end;
define C-pointer-type <IOParam*> => <IOParam>;
define C-pointer-type <IOParam**> => <IOParam*>;
define C-pointer-type <IOParamPtr> => <IOParam>;

define C-struct <FileParam>
  sealed inline-only slot qLink-value    :: <QElemPtr>;
  sealed inline-only slot qType-value    :: <C-short>;
  sealed inline-only slot ioTrap-value   :: <C-short>;
  sealed inline-only slot ioCmdAddr-value :: <Ptr>;
  sealed inline-only slot ioCompletion-value :: <IOCompletionUPP>;
  sealed inline-only slot ioResult-value :: <OSErr>;
  sealed inline-only slot ioNamePtr-value :: <StringPtr>;
  sealed inline-only slot ioVRefNum-value :: <C-short>;
  sealed inline-only slot ioFRefNum-value :: <C-short>;
  sealed inline-only slot ioFVersNum-value :: <SInt8>;
  sealed inline-only slot filler1-value  :: <SInt8>;
  sealed inline-only slot ioFDirIndex-value :: <C-short>;
  sealed inline-only slot ioFlAttrib-value :: <SInt8>;
  sealed inline-only slot ioFlVersNum-value :: <SInt8>;
  sealed inline-only slot ioFlFndrInfo-value :: <FInfo>;
  sealed inline-only slot ioFlNum-value  :: <C-both-unsigned-long>;
  sealed inline-only slot ioFlStBlk-value :: <C-unsigned-short>;
  sealed inline-only slot ioFlLgLen-value :: <C-both-long>;
  sealed inline-only slot ioFlPyLen-value :: <C-both-long>;
  sealed inline-only slot ioFlRStBlk-value :: <C-unsigned-short>;
  sealed inline-only slot ioFlRLgLen-value :: <C-both-long>;
  sealed inline-only slot ioFlRPyLen-value :: <C-both-long>;
  sealed inline-only slot ioFlCrDat-value :: <C-both-unsigned-long>;
  sealed inline-only slot ioFlMdDat-value :: <C-both-unsigned-long>;
  pack: 2;
  c-name: "struct FileParam";
end;
define C-pointer-type <FileParam*> => <FileParam>;
define C-pointer-type <FileParam**> => <FileParam*>;
define C-pointer-type <FileParamPtr> => <FileParam>;

define C-struct <VolumeParam>
  sealed inline-only slot qLink-value    :: <QElemPtr>;
  sealed inline-only slot qType-value    :: <C-short>;
  sealed inline-only slot ioTrap-value   :: <C-short>;
  sealed inline-only slot ioCmdAddr-value :: <Ptr>;
  sealed inline-only slot ioCompletion-value :: <IOCompletionUPP>;
  sealed inline-only slot ioResult-value :: <OSErr>;
  sealed inline-only slot ioNamePtr-value :: <StringPtr>;
  sealed inline-only slot ioVRefNum-value :: <C-short>;
  sealed inline-only slot filler2-value  :: <C-both-long>;
  sealed inline-only slot ioVolIndex-value :: <C-short>;
  sealed inline-only slot ioVCrDate-value :: <C-both-unsigned-long>;
  sealed inline-only slot ioVLsBkUp-value :: <C-both-unsigned-long>;
  sealed inline-only slot ioVAtrb-value  :: <C-unsigned-short>;
  sealed inline-only slot ioVNmFls-value :: <C-unsigned-short>;
  sealed inline-only slot ioVDirSt-value :: <C-unsigned-short>;
  sealed inline-only slot ioVBlLn-value  :: <C-short>;
  sealed inline-only slot ioVNmAlBlks-value :: <C-unsigned-short>;
  sealed inline-only slot ioVAlBlkSiz-value :: <C-both-unsigned-long>;
  sealed inline-only slot ioVClpSiz-value :: <C-both-unsigned-long>;
  sealed inline-only slot ioAlBlSt-value :: <C-unsigned-short>;
  sealed inline-only slot ioVNxtFNum-value :: <C-both-unsigned-long>;
  sealed inline-only slot ioVFrBlk-value :: <C-unsigned-short>;
  pack: 2;
  c-name: "struct VolumeParam";
end;
define C-pointer-type <VolumeParam*> => <VolumeParam>;
define C-pointer-type <VolumeParam**> => <VolumeParam*>;
define C-pointer-type <VolumeParamPtr> => <VolumeParam>;

define C-struct <CntrlParam>
  sealed inline-only slot qLink-value    :: <QElemPtr>;
  sealed inline-only slot qType-value    :: <C-short>;
  sealed inline-only slot ioTrap-value   :: <C-short>;
  sealed inline-only slot ioCmdAddr-value :: <Ptr>;
  sealed inline-only slot ioCompletion-value :: <IOCompletionUPP>;
  sealed inline-only slot ioResult-value :: <OSErr>;
  sealed inline-only slot ioNamePtr-value :: <StringPtr>;
  sealed inline-only slot ioVRefNum-value :: <C-short>;
  sealed inline-only slot ioCRefNum-value :: <C-short>;
  sealed inline-only slot csCode-value   :: <C-short>;
  sealed inline-only array slot csParam-array :: <C-short>,
    length: 11,
    address-getter: csParam-value;
  pack: 2;
  c-name: "struct CntrlParam";
end;
define C-pointer-type <CntrlParam*> => <CntrlParam>;
define C-pointer-type <CntrlParam**> => <CntrlParam*>;
define C-pointer-type <CntrlParamPtr> => <CntrlParam>;

define C-struct <SlotDevParam>
  sealed inline-only slot qLink-value    :: <QElemPtr>;
  sealed inline-only slot qType-value    :: <C-short>;
  sealed inline-only slot ioTrap-value   :: <C-short>;
  sealed inline-only slot ioCmdAddr-value :: <Ptr>;
  sealed inline-only slot ioCompletion-value :: <IOCompletionUPP>;
  sealed inline-only slot ioResult-value :: <OSErr>;
  sealed inline-only slot ioNamePtr-value :: <StringPtr>;
  sealed inline-only slot ioVRefNum-value :: <C-short>;
  sealed inline-only slot ioSRefNum-value :: <C-short>;
  sealed inline-only slot ioSVersNum-value :: <SInt8>;
  sealed inline-only slot ioSPermssn-value :: <SInt8>;
  sealed inline-only slot ioSMix-value   :: <Ptr>;
  sealed inline-only slot ioSFlags-value :: <C-short>;
  sealed inline-only slot ioSlot-value   :: <SInt8>;
  sealed inline-only slot ioID-value     :: <SInt8>;
  pack: 2;
  c-name: "struct SlotDevParam";
end;
define C-pointer-type <SlotDevParam*> => <SlotDevParam>;
define C-pointer-type <SlotDevParam**> => <SlotDevParam*>;
define C-pointer-type <SlotDevParamPtr> => <SlotDevParam>;

define C-struct <MultiDevParam>
  sealed inline-only slot qLink-value    :: <QElemPtr>;
  sealed inline-only slot qType-value    :: <C-short>;
  sealed inline-only slot ioTrap-value   :: <C-short>;
  sealed inline-only slot ioCmdAddr-value :: <Ptr>;
  sealed inline-only slot ioCompletion-value :: <IOCompletionUPP>;
  sealed inline-only slot ioResult-value :: <OSErr>;
  sealed inline-only slot ioNamePtr-value :: <StringPtr>;
  sealed inline-only slot ioVRefNum-value :: <C-short>;
  sealed inline-only slot ioMRefNum-value :: <C-short>;
  sealed inline-only slot ioMVersNum-value :: <SInt8>;
  sealed inline-only slot ioMPermssn-value :: <SInt8>;
  sealed inline-only slot ioMMix-value   :: <Ptr>;
  sealed inline-only slot ioMFlags-value :: <C-short>;
  sealed inline-only slot ioSEBlkPtr-value :: <Ptr>;
  pack: 2;
  c-name: "struct MultiDevParam";
end;
define C-pointer-type <MultiDevParam*> => <MultiDevParam>;
define C-pointer-type <MultiDevParam**> => <MultiDevParam*>;
define C-pointer-type <MultiDevParamPtr> => <MultiDevParam>;

define C-union <ParamBlockRec>
  sealed inline-only slot ioParam-value  :: <IOParam>;
  sealed inline-only slot fileParam-value :: <FileParam>;
  sealed inline-only slot volumeParam-value :: <VolumeParam>;
  sealed inline-only slot cntrlParam-value :: <CntrlParam>;
  sealed inline-only slot slotDevParam-value :: <SlotDevParam>;
  sealed inline-only slot multiDevParam-value :: <MultiDevParam>;
  pack: 2;
end;

define C-struct <HFileInfo>
  sealed inline-only slot qLink-value    :: <QElemPtr>;
  sealed inline-only slot qType-value    :: <C-short>;
  sealed inline-only slot ioTrap-value   :: <C-short>;
  sealed inline-only slot ioCmdAddr-value :: <Ptr>;
  sealed inline-only slot ioCompletion-value :: <IOCompletionUPP>;
  sealed inline-only slot ioResult-value :: <OSErr>;
  sealed inline-only slot ioNamePtr-value :: <StringPtr>;
  sealed inline-only slot ioVRefNum-value :: <C-short>;
  sealed inline-only slot ioFRefNum-value :: <C-short>;
  sealed inline-only slot ioFVersNum-value :: <SInt8>;
  sealed inline-only slot filler1-value  :: <SInt8>;
  sealed inline-only slot ioFDirIndex-value :: <C-short>;
  sealed inline-only slot ioFlAttrib-value :: <SInt8>;
  sealed inline-only slot ioACUser-value :: <SInt8>;
  sealed inline-only slot ioFlFndrInfo-value :: <FInfo>;
  sealed inline-only slot ioDirID-value  :: <C-both-long>;
  sealed inline-only slot ioFlStBlk-value :: <C-unsigned-short>;
  sealed inline-only slot ioFlLgLen-value :: <C-both-long>;
  sealed inline-only slot ioFlPyLen-value :: <C-both-long>;
  sealed inline-only slot ioFlRStBlk-value :: <C-unsigned-short>;
  sealed inline-only slot ioFlRLgLen-value :: <C-both-long>;
  sealed inline-only slot ioFlRPyLen-value :: <C-both-long>;
  sealed inline-only slot ioFlCrDat-value :: <C-both-unsigned-long>;
  sealed inline-only slot ioFlMdDat-value :: <C-both-unsigned-long>;
  sealed inline-only slot ioFlBkDat-value :: <C-both-unsigned-long>;
  sealed inline-only slot ioFlXFndrInfo-value :: <FXInfo>;
  sealed inline-only slot ioFlParID-value :: <C-both-long>;
  sealed inline-only slot ioFlClpSiz-value :: <C-both-long>;
  pack: 2;
  c-name: "struct HFileInfo";
end;
define C-pointer-type <HFileInfo*> => <HFileInfo>;
define C-pointer-type <HFileInfo**> => <HFileInfo*>;

define C-struct <DirInfo>
  sealed inline-only slot qLink-value    :: <QElemPtr>;
  sealed inline-only slot qType-value    :: <C-short>;
  sealed inline-only slot ioTrap-value   :: <C-short>;
  sealed inline-only slot ioCmdAddr-value :: <Ptr>;
  sealed inline-only slot ioCompletion-value :: <IOCompletionUPP>;
  sealed inline-only slot ioResult-value :: <OSErr>;
  sealed inline-only slot ioNamePtr-value :: <StringPtr>;
  sealed inline-only slot ioVRefNum-value :: <C-short>;
  sealed inline-only slot ioFRefNum-value :: <C-short>;
  sealed inline-only slot ioFVersNum-value :: <SInt8>;
  sealed inline-only slot filler1-value  :: <SInt8>;
  sealed inline-only slot ioFDirIndex-value :: <C-short>;
  sealed inline-only slot ioFlAttrib-value :: <SInt8>;
  sealed inline-only slot ioACUser-value :: <SInt8>;
  sealed inline-only slot ioDrUsrWds-value :: <DInfo>;
  sealed inline-only slot ioDrDirID-value :: <C-both-long>;
  sealed inline-only slot ioDrNmFls-value :: <C-unsigned-short>;
  sealed inline-only array slot filler3-array :: <C-short>,
    length: 9,
    address-getter: filler3-value;
  sealed inline-only slot ioDrCrDat-value :: <C-both-unsigned-long>;
  sealed inline-only slot ioDrMdDat-value :: <C-both-unsigned-long>;
  sealed inline-only slot ioDrBkDat-value :: <C-both-unsigned-long>;
  sealed inline-only slot ioDrFndrInfo-value :: <DXInfo>;
  sealed inline-only slot ioDrParID-value :: <C-both-long>;
  pack: 2;
  c-name: "struct DirInfo";
end;
define C-pointer-type <DirInfo*> => <DirInfo>;
define C-pointer-type <DirInfo**> => <DirInfo*>;

define C-union <CInfoPBRec>
  sealed inline-only slot hFileInfo-value :: <HFileInfo>;
  sealed inline-only slot dirInfo-value  :: <DirInfo>;
  pack: 2;
end;
define C-pointer-type <CInfoPBRec*> => <CInfoPBRec>;
define C-pointer-type <CInfoPBRec**> => <CInfoPBRec*>;
define C-pointer-type <CInfoPBPtr> => <CInfoPBRec>;

define C-struct <XCInfoPBRec>
  sealed inline-only slot qLink-value    :: <QElemPtr>;
  sealed inline-only slot qType-value    :: <C-short>;
  sealed inline-only slot ioTrap-value   :: <C-short>;
  sealed inline-only slot ioCmdAddr-value :: <Ptr>;
  sealed inline-only slot ioCompletion-value :: <ProcPtr>;
  sealed inline-only slot ioResult-value :: <OSErr>;
  sealed inline-only slot ioNamePtr-value :: <StringPtr>;
  sealed inline-only slot ioVRefNum-value :: <C-short>;
  sealed inline-only slot filler1-value  :: <C-both-long>;
  sealed inline-only slot ioShortNamePtr-value :: <StringPtr>;
  sealed inline-only slot filler2-value  :: <C-short>;
  sealed inline-only slot ioPDType-value :: <C-short>;
  sealed inline-only slot ioPDAuxType-value :: <C-both-long>;
  sealed inline-only array slot filler3-array :: <C-both-long>,
    length: 2,
    address-getter: filler3-value;
  sealed inline-only slot ioDirID-value  :: <C-both-long>;
  pack: 2;
  c-name: "struct XCInfoPBRec";
end;
define C-pointer-type <XCInfoPBRec*> => <XCInfoPBRec>;
define C-pointer-type <XCInfoPBRec**> => <XCInfoPBRec*>;
define C-pointer-type <XCInfoPBPtr> => <XCInfoPBRec>;

define C-struct <CatPositionRec>
  sealed inline-only slot initialize-value :: <C-both-long>;
  sealed inline-only array slot priv-array :: <C-short>,
    length: 6,
    address-getter: priv-value;
  pack: 2;
  c-name: "struct CatPositionRec";
end;
define C-pointer-type <CatPositionRec*> => <CatPositionRec>;
define C-pointer-type <CatPositionRec**> => <CatPositionRec*>;

define C-struct <FSSpec>
  sealed inline-only slot vRefNum-value  :: <C-short>;
  sealed inline-only slot parID-value    :: <C-both-long>;
  sealed inline-only slot name-value     :: <StrFileName>;
  pack: 2;
  c-name: "struct FSSpec";
end;
define C-pointer-type <FSSpec*> => <FSSpec>;
define C-pointer-type <FSSpec**> => <FSSpec*>;
define C-pointer-type <FSSpecPtr> => <FSSpec>;
define C-pointer-type <FSSpecHandle> => <FSSpecPtr>;
define inline constant <FSSpecArrayPtr> = <FSSpecPtr>;
define C-pointer-type <FSSpecArrayPtr*> => <FSSpecArrayPtr>;
define C-pointer-type <FSSpecArrayPtr**> => <FSSpecArrayPtr*>;
define C-pointer-type <ConstFSSpecPtr> =>  /* const */ <FSSpec>;
define inline constant <VolumeType> = <OSType>;
define C-pointer-type <VolumeType*> => <VolumeType>;
define C-pointer-type <VolumeType**> => <VolumeType*>;
// unnamed enum:
define inline-only constant $AppleShareMediaType       = FOUR_CHAR_CODE('a', 'f', 'p', 'm');


define C-struct <VolMountInfoHeader>
  sealed inline-only slot length-value   :: <C-short>;
  sealed inline-only slot media-value    :: <VolumeType>;
  pack: 2;
  c-name: "struct VolMountInfoHeader";
end;
define C-pointer-type <VolMountInfoHeader*> => <VolMountInfoHeader>;
define C-pointer-type <VolMountInfoHeader**> => <VolMountInfoHeader*>;
define C-pointer-type <VolMountInfoPtr> => <VolMountInfoHeader>;

define C-struct <VolumeMountInfoHeader>
  sealed inline-only slot length-value   :: <C-short>;
  sealed inline-only slot media-value    :: <VolumeType>;
  sealed inline-only slot flags-value    :: <C-short>;
  pack: 2;
  c-name: "struct VolumeMountInfoHeader";
end;
define C-pointer-type <VolumeMountInfoHeader*> => <VolumeMountInfoHeader>;
define C-pointer-type <VolumeMountInfoHeader**> => <VolumeMountInfoHeader*>;
define C-pointer-type <VolumeMountInfoHeaderPtr> => <VolumeMountInfoHeader>;
// unnamed enum:
define inline-only constant $volMountNoLoginMsgFlagBit = 0;
define inline-only constant $volMountNoLoginMsgFlagMask = #x0001;
define inline-only constant $volMountExtendedFlagsBit  = 7;
define inline-only constant $volMountExtendedFlagsMask = #x0080;
define inline-only constant $volMountInteractBit       = 15;
define inline-only constant $volMountInteractMask      = #x8000;
define inline-only constant $volMountChangedBit        = 14;
define inline-only constant $volMountChangedMask       = #x4000;
define inline-only constant $volMountFSReservedMask    = #x00FF;
define inline-only constant $volMountSysReservedMask   = #xFF00;


define C-struct <AFPVolMountInfo>
  sealed inline-only slot length-value   :: <C-short>;
  sealed inline-only slot media-value    :: <VolumeType>;
  sealed inline-only slot flags-value    :: <C-short>;
  sealed inline-only slot nbpInterval-value :: <SInt8>;
  sealed inline-only slot nbpCount-value :: <SInt8>;
  sealed inline-only slot uamType-value  :: <C-short>;
  sealed inline-only slot zoneNameOffset-value :: <C-short>;
  sealed inline-only slot serverNameOffset-value :: <C-short>;
  sealed inline-only slot volNameOffset-value :: <C-short>;
  sealed inline-only slot userNameOffset-value :: <C-short>;
  sealed inline-only slot userPasswordOffset-value :: <C-short>;
  sealed inline-only slot volPasswordOffset-value :: <C-short>;
  sealed inline-only array slot AFPData-array :: <C-char>,
    length: 144,
    address-getter: AFPData-value;
  pack: 2;
  c-name: "struct AFPVolMountInfo";
end;
define C-pointer-type <AFPVolMountInfo*> => <AFPVolMountInfo>;
define C-pointer-type <AFPVolMountInfo**> => <AFPVolMountInfo*>;
define C-pointer-type <AFPVolMountInfoPtr> => <AFPVolMountInfo>;

define C-struct <AFPXVolMountInfo>
  sealed inline-only slot length-value   :: <C-short>;
  sealed inline-only slot media-value    :: <VolumeType>;
  sealed inline-only slot flags-value    :: <C-short>;
  sealed inline-only slot nbpInterval-value :: <SInt8>;
  sealed inline-only slot nbpCount-value :: <SInt8>;
  sealed inline-only slot uamType-value  :: <C-short>;
  sealed inline-only slot zoneNameOffset-value :: <C-short>;
  sealed inline-only slot serverNameOffset-value :: <C-short>;
  sealed inline-only slot volNameOffset-value :: <C-short>;
  sealed inline-only slot userNameOffset-value :: <C-short>;
  sealed inline-only slot userPasswordOffset-value :: <C-short>;
  sealed inline-only slot volPasswordOffset-value :: <C-short>;
  sealed inline-only slot extendedFlags-value :: <C-short>;
  sealed inline-only slot uamNameOffset-value :: <C-short>;
  sealed inline-only slot alternateAddressOffset-value :: <C-short>;
  sealed inline-only array slot AFPData-array :: <C-char>,
    length: 176,
    address-getter: AFPData-value;
  pack: 2;
  c-name: "struct AFPXVolMountInfo";
end;
define C-pointer-type <AFPXVolMountInfo*> => <AFPXVolMountInfo>;
define C-pointer-type <AFPXVolMountInfo**> => <AFPXVolMountInfo*>;
define C-pointer-type <AFPXVolMountInfoPtr> => <AFPXVolMountInfo>;
// unnamed enum:
define inline-only constant $kAFPExtendedFlagsAlternateAddressMask = 1;

// unnamed enum:
define inline-only constant $kAFPTagTypeIP             = #x01;
define inline-only constant $kAFPTagTypeIPPort         = #x02;
define inline-only constant $kAFPTagTypeDDP            = #x03;

// unnamed enum:
define inline-only constant $kAFPTagLengthIP           = #x06;
define inline-only constant $kAFPTagLengthIPPort       = #x08;
define inline-only constant $kAFPTagLengthDDP          = #x06;


define C-struct <AFPTagData>
  sealed inline-only slot fLength-value  :: <UInt8>;
  sealed inline-only slot fType-value    :: <UInt8>;
  sealed inline-only array slot fData-array :: <UInt8>,
    length: 1,
    address-getter: fData-value;
  pack: 2;
  c-name: "struct AFPTagData";
end;
define C-pointer-type <AFPTagData*> => <AFPTagData>;
define C-pointer-type <AFPTagData**> => <AFPTagData*>;

define C-struct <AFPAlternateAddress>
  sealed inline-only slot fAddressCount-value :: <UInt8>;
  sealed inline-only array slot fAddressList-array :: <UInt8>,
    length: 1,
    address-getter: fAddressList-value;
  pack: 2;
  c-name: "struct AFPAlternateAddress";
end;
define C-pointer-type <AFPAlternateAddress*> => <AFPAlternateAddress>;
define C-pointer-type <AFPAlternateAddress**> => <AFPAlternateAddress*>;

define C-struct <DTPBRec>
  sealed inline-only slot qLink-value    :: <QElemPtr>;
  sealed inline-only slot qType-value    :: <C-short>;
  sealed inline-only slot ioTrap-value   :: <C-short>;
  sealed inline-only slot ioCmdAddr-value :: <Ptr>;
  sealed inline-only slot ioCompletion-value :: <IOCompletionUPP>;
  sealed inline-only slot ioResult-value :: <OSErr>;
  sealed inline-only slot ioNamePtr-value :: <StringPtr>;
  sealed inline-only slot ioVRefNum-value :: <C-short>;
  sealed inline-only slot ioDTRefNum-value :: <C-short>;
  sealed inline-only slot ioIndex-value  :: <C-short>;
  sealed inline-only slot ioTagInfo-value :: <C-both-long>;
  sealed inline-only slot ioDTBuffer-value :: <Ptr>;
  sealed inline-only slot ioDTReqCount-value :: <C-both-long>;
  sealed inline-only slot ioDTActCount-value :: <C-both-long>;
  sealed inline-only slot ioFiller1-value :: <SInt8>;
  sealed inline-only slot ioIconType-value :: <SInt8>;
  sealed inline-only slot ioFiller2-value :: <C-short>;
  sealed inline-only slot ioDirID-value  :: <C-both-long>;
  sealed inline-only slot ioFileCreator-value :: <OSType>;
  sealed inline-only slot ioFileType-value :: <OSType>;
  sealed inline-only slot ioFiller3-value :: <C-both-long>;
  sealed inline-only slot ioDTLgLen-value :: <C-both-long>;
  sealed inline-only slot ioDTPyLen-value :: <C-both-long>;
  sealed inline-only array slot ioFiller4-array :: <C-short>,
    length: 14,
    address-getter: ioFiller4-value;
  sealed inline-only slot ioAPPLParID-value :: <C-both-long>;
  pack: 2;
  c-name: "struct DTPBRec";
end;
define C-pointer-type <DTPBRec*> => <DTPBRec>;
define C-pointer-type <DTPBRec**> => <DTPBRec*>;
define C-pointer-type <DTPBPtr> => <DTPBRec>;

define C-struct <HIOParam>
  sealed inline-only slot qLink-value    :: <QElemPtr>;
  sealed inline-only slot qType-value    :: <C-short>;
  sealed inline-only slot ioTrap-value   :: <C-short>;
  sealed inline-only slot ioCmdAddr-value :: <Ptr>;
  sealed inline-only slot ioCompletion-value :: <IOCompletionUPP>;
  sealed inline-only slot ioResult-value :: <OSErr>;
  sealed inline-only slot ioNamePtr-value :: <StringPtr>;
  sealed inline-only slot ioVRefNum-value :: <C-short>;
  sealed inline-only slot ioRefNum-value :: <C-short>;
  sealed inline-only slot ioVersNum-value :: <SInt8>;
  sealed inline-only slot ioPermssn-value :: <SInt8>;
  sealed inline-only slot ioMisc-value   :: <Ptr>;
  sealed inline-only slot ioBuffer-value :: <Ptr>;
  sealed inline-only slot ioReqCount-value :: <C-both-long>;
  sealed inline-only slot ioActCount-value :: <C-both-long>;
  sealed inline-only slot ioPosMode-value :: <C-short>;
  sealed inline-only slot ioPosOffset-value :: <C-both-long>;
  pack: 2;
  c-name: "struct HIOParam";
end;
define C-pointer-type <HIOParam*> => <HIOParam>;
define C-pointer-type <HIOParam**> => <HIOParam*>;
define C-pointer-type <HIOParamPtr> => <HIOParam>;

define C-struct <HFileParam>
  sealed inline-only slot qLink-value    :: <QElemPtr>;
  sealed inline-only slot qType-value    :: <C-short>;
  sealed inline-only slot ioTrap-value   :: <C-short>;
  sealed inline-only slot ioCmdAddr-value :: <Ptr>;
  sealed inline-only slot ioCompletion-value :: <IOCompletionUPP>;
  sealed inline-only slot ioResult-value :: <OSErr>;
  sealed inline-only slot ioNamePtr-value :: <StringPtr>;
  sealed inline-only slot ioVRefNum-value :: <C-short>;
  sealed inline-only slot ioFRefNum-value :: <C-short>;
  sealed inline-only slot ioFVersNum-value :: <SInt8>;
  sealed inline-only slot filler1-value  :: <SInt8>;
  sealed inline-only slot ioFDirIndex-value :: <C-short>;
  sealed inline-only slot ioFlAttrib-value :: <SInt8>;
  sealed inline-only slot ioFlVersNum-value :: <SInt8>;
  sealed inline-only slot ioFlFndrInfo-value :: <FInfo>;
  sealed inline-only slot ioDirID-value  :: <C-both-long>;
  sealed inline-only slot ioFlStBlk-value :: <C-unsigned-short>;
  sealed inline-only slot ioFlLgLen-value :: <C-both-long>;
  sealed inline-only slot ioFlPyLen-value :: <C-both-long>;
  sealed inline-only slot ioFlRStBlk-value :: <C-unsigned-short>;
  sealed inline-only slot ioFlRLgLen-value :: <C-both-long>;
  sealed inline-only slot ioFlRPyLen-value :: <C-both-long>;
  sealed inline-only slot ioFlCrDat-value :: <C-both-unsigned-long>;
  sealed inline-only slot ioFlMdDat-value :: <C-both-unsigned-long>;
  pack: 2;
  c-name: "struct HFileParam";
end;
define C-pointer-type <HFileParam*> => <HFileParam>;
define C-pointer-type <HFileParam**> => <HFileParam*>;
define C-pointer-type <HFileParamPtr> => <HFileParam>;

define C-struct <HVolumeParam>
  sealed inline-only slot qLink-value    :: <QElemPtr>;
  sealed inline-only slot qType-value    :: <C-short>;
  sealed inline-only slot ioTrap-value   :: <C-short>;
  sealed inline-only slot ioCmdAddr-value :: <Ptr>;
  sealed inline-only slot ioCompletion-value :: <IOCompletionUPP>;
  sealed inline-only slot ioResult-value :: <OSErr>;
  sealed inline-only slot ioNamePtr-value :: <StringPtr>;
  sealed inline-only slot ioVRefNum-value :: <C-short>;
  sealed inline-only slot filler2-value  :: <C-both-long>;
  sealed inline-only slot ioVolIndex-value :: <C-short>;
  sealed inline-only slot ioVCrDate-value :: <C-both-unsigned-long>;
  sealed inline-only slot ioVLsMod-value :: <C-both-unsigned-long>;
  sealed inline-only slot ioVAtrb-value  :: <C-short>;
  sealed inline-only slot ioVNmFls-value :: <C-unsigned-short>;
  sealed inline-only slot ioVBitMap-value :: <C-unsigned-short>;
  sealed inline-only slot ioAllocPtr-value :: <C-unsigned-short>;
  sealed inline-only slot ioVNmAlBlks-value :: <C-unsigned-short>;
  sealed inline-only slot ioVAlBlkSiz-value :: <C-both-unsigned-long>;
  sealed inline-only slot ioVClpSiz-value :: <C-both-unsigned-long>;
  sealed inline-only slot ioAlBlSt-value :: <C-unsigned-short>;
  sealed inline-only slot ioVNxtCNID-value :: <C-both-unsigned-long>;
  sealed inline-only slot ioVFrBlk-value :: <C-unsigned-short>;
  sealed inline-only slot ioVSigWord-value :: <C-unsigned-short>;
  sealed inline-only slot ioVDrvInfo-value :: <C-short>;
  sealed inline-only slot ioVDRefNum-value :: <C-short>;
  sealed inline-only slot ioVFSID-value  :: <C-short>;
  sealed inline-only slot ioVBkUp-value  :: <C-both-unsigned-long>;
  sealed inline-only slot ioVSeqNum-value :: <C-short>;
  sealed inline-only slot ioVWrCnt-value :: <C-both-unsigned-long>;
  sealed inline-only slot ioVFilCnt-value :: <C-both-unsigned-long>;
  sealed inline-only slot ioVDirCnt-value :: <C-both-unsigned-long>;
  sealed inline-only array slot ioVFndrInfo-array :: <C-both-long>,
    length: 8,
    address-getter: ioVFndrInfo-value;
  pack: 2;
  c-name: "struct HVolumeParam";
end;
define C-pointer-type <HVolumeParam*> => <HVolumeParam>;
define C-pointer-type <HVolumeParam**> => <HVolumeParam*>;
define C-pointer-type <HVolumeParamPtr> => <HVolumeParam>;
// unnamed enum:
define inline-only constant $kWidePosOffsetBit         = 8;
define inline-only constant $kMaximumBlocksIn4GB       = #x007FFFFF;


define C-struct <XIOParam>
  sealed inline-only slot qLink-value    :: <QElemPtr>;
  sealed inline-only slot qType-value    :: <C-short>;
  sealed inline-only slot ioTrap-value   :: <C-short>;
  sealed inline-only slot ioCmdAddr-value :: <Ptr>;
  sealed inline-only slot ioCompletion-value :: <IOCompletionUPP>;
  sealed inline-only slot ioResult-value :: <OSErr>;
  sealed inline-only slot ioNamePtr-value :: <StringPtr>;
  sealed inline-only slot ioVRefNum-value :: <C-short>;
  sealed inline-only slot ioRefNum-value :: <C-short>;
  sealed inline-only slot ioVersNum-value :: <SInt8>;
  sealed inline-only slot ioPermssn-value :: <SInt8>;
  sealed inline-only slot ioMisc-value   :: <Ptr>;
  sealed inline-only slot ioBuffer-value :: <Ptr>;
  sealed inline-only slot ioReqCount-value :: <C-both-long>;
  sealed inline-only slot ioActCount-value :: <C-both-long>;
  sealed inline-only slot ioPosMode-value :: <C-short>;
  sealed inline-only slot ioWPosOffset-value :: <wide>;
  pack: 2;
  c-name: "struct XIOParam";
end;
define C-pointer-type <XIOParam*> => <XIOParam>;
define C-pointer-type <XIOParam**> => <XIOParam*>;
define C-pointer-type <XIOParamPtr> => <XIOParam>;

define C-struct <XVolumeParam>
  sealed inline-only slot qLink-value    :: <QElemPtr>;
  sealed inline-only slot qType-value    :: <C-short>;
  sealed inline-only slot ioTrap-value   :: <C-short>;
  sealed inline-only slot ioCmdAddr-value :: <Ptr>;
  sealed inline-only slot ioCompletion-value :: <IOCompletionUPP>;
  sealed inline-only slot ioResult-value :: <OSErr>;
  sealed inline-only slot ioNamePtr-value :: <StringPtr>;
  sealed inline-only slot ioVRefNum-value :: <C-short>;
  sealed inline-only slot ioXVersion-value :: <C-both-unsigned-long>;
  sealed inline-only slot ioVolIndex-value :: <C-short>;
  sealed inline-only slot ioVCrDate-value :: <C-both-unsigned-long>;
  sealed inline-only slot ioVLsMod-value :: <C-both-unsigned-long>;
  sealed inline-only slot ioVAtrb-value  :: <C-short>;
  sealed inline-only slot ioVNmFls-value :: <C-unsigned-short>;
  sealed inline-only slot ioVBitMap-value :: <C-unsigned-short>;
  sealed inline-only slot ioAllocPtr-value :: <C-unsigned-short>;
  sealed inline-only slot ioVNmAlBlks-value :: <C-unsigned-short>;
  sealed inline-only slot ioVAlBlkSiz-value :: <C-both-unsigned-long>;
  sealed inline-only slot ioVClpSiz-value :: <C-both-unsigned-long>;
  sealed inline-only slot ioAlBlSt-value :: <C-unsigned-short>;
  sealed inline-only slot ioVNxtCNID-value :: <C-both-unsigned-long>;
  sealed inline-only slot ioVFrBlk-value :: <C-unsigned-short>;
  sealed inline-only slot ioVSigWord-value :: <C-unsigned-short>;
  sealed inline-only slot ioVDrvInfo-value :: <C-short>;
  sealed inline-only slot ioVDRefNum-value :: <C-short>;
  sealed inline-only slot ioVFSID-value  :: <C-short>;
  sealed inline-only slot ioVBkUp-value  :: <C-both-unsigned-long>;
  sealed inline-only slot ioVSeqNum-value :: <C-short>;
  sealed inline-only slot ioVWrCnt-value :: <C-both-unsigned-long>;
  sealed inline-only slot ioVFilCnt-value :: <C-both-unsigned-long>;
  sealed inline-only slot ioVDirCnt-value :: <C-both-unsigned-long>;
  sealed inline-only array slot ioVFndrInfo-array :: <C-both-long>,
    length: 8,
    address-getter: ioVFndrInfo-value;
  sealed inline-only slot ioVTotalBytes-value :: <UnsignedWide>;
  sealed inline-only slot ioVFreeBytes-value :: <UnsignedWide>;
  pack: 2;
  c-name: "struct XVolumeParam";
end;
define C-pointer-type <XVolumeParam*> => <XVolumeParam>;
define C-pointer-type <XVolumeParam**> => <XVolumeParam*>;
define C-pointer-type <XVolumeParamPtr> => <XVolumeParam>;

define C-struct <AccessParam>
  sealed inline-only slot qLink-value    :: <QElemPtr>;
  sealed inline-only slot qType-value    :: <C-short>;
  sealed inline-only slot ioTrap-value   :: <C-short>;
  sealed inline-only slot ioCmdAddr-value :: <Ptr>;
  sealed inline-only slot ioCompletion-value :: <IOCompletionUPP>;
  sealed inline-only slot ioResult-value :: <OSErr>;
  sealed inline-only slot ioNamePtr-value :: <StringPtr>;
  sealed inline-only slot ioVRefNum-value :: <C-short>;
  sealed inline-only slot filler3-value  :: <C-short>;
  sealed inline-only slot ioDenyModes-value :: <C-short>;
  sealed inline-only slot filler4-value  :: <C-short>;
  sealed inline-only slot filler5-value  :: <SInt8>;
  sealed inline-only slot ioACUser-value :: <SInt8>;
  sealed inline-only slot filler6-value  :: <C-both-long>;
  sealed inline-only slot ioACOwnerID-value :: <C-both-long>;
  sealed inline-only slot ioACGroupID-value :: <C-both-long>;
  sealed inline-only slot ioACAccess-value :: <C-both-long>;
  sealed inline-only slot ioDirID-value  :: <C-both-long>;
  pack: 2;
  c-name: "struct AccessParam";
end;
define C-pointer-type <AccessParam*> => <AccessParam>;
define C-pointer-type <AccessParam**> => <AccessParam*>;
define C-pointer-type <AccessParamPtr> => <AccessParam>;

define C-struct <ObjParam>
  sealed inline-only slot qLink-value    :: <QElemPtr>;
  sealed inline-only slot qType-value    :: <C-short>;
  sealed inline-only slot ioTrap-value   :: <C-short>;
  sealed inline-only slot ioCmdAddr-value :: <Ptr>;
  sealed inline-only slot ioCompletion-value :: <IOCompletionUPP>;
  sealed inline-only slot ioResult-value :: <OSErr>;
  sealed inline-only slot ioNamePtr-value :: <StringPtr>;
  sealed inline-only slot ioVRefNum-value :: <C-short>;
  sealed inline-only slot filler7-value  :: <C-short>;
  sealed inline-only slot ioObjType-value :: <C-short>;
  sealed inline-only slot ioObjNamePtr-value :: <StringPtr>;
  sealed inline-only slot ioObjID-value  :: <C-both-long>;
  pack: 2;
  c-name: "struct ObjParam";
end;
define C-pointer-type <ObjParam*> => <ObjParam>;
define C-pointer-type <ObjParam**> => <ObjParam*>;
define C-pointer-type <ObjParamPtr> => <ObjParam>;

define C-struct <CopyParam>
  sealed inline-only slot qLink-value    :: <QElemPtr>;
  sealed inline-only slot qType-value    :: <C-short>;
  sealed inline-only slot ioTrap-value   :: <C-short>;
  sealed inline-only slot ioCmdAddr-value :: <Ptr>;
  sealed inline-only slot ioCompletion-value :: <IOCompletionUPP>;
  sealed inline-only slot ioResult-value :: <OSErr>;
  sealed inline-only slot ioNamePtr-value :: <StringPtr>;
  sealed inline-only slot ioVRefNum-value :: <C-short>;
  sealed inline-only slot ioDstVRefNum-value :: <C-short>;
  sealed inline-only slot filler8-value  :: <C-short>;
  sealed inline-only slot ioNewName-value :: <StringPtr>;
  sealed inline-only slot ioCopyName-value :: <StringPtr>;
  sealed inline-only slot ioNewDirID-value :: <C-both-long>;
  sealed inline-only slot filler14-value :: <C-both-long>;
  sealed inline-only slot filler15-value :: <C-both-long>;
  sealed inline-only slot ioDirID-value  :: <C-both-long>;
  pack: 2;
  c-name: "struct CopyParam";
end;
define C-pointer-type <CopyParam*> => <CopyParam>;
define C-pointer-type <CopyParam**> => <CopyParam*>;
define C-pointer-type <CopyParamPtr> => <CopyParam>;

define C-struct <WDParam>
  sealed inline-only slot qLink-value    :: <QElemPtr>;
  sealed inline-only slot qType-value    :: <C-short>;
  sealed inline-only slot ioTrap-value   :: <C-short>;
  sealed inline-only slot ioCmdAddr-value :: <Ptr>;
  sealed inline-only slot ioCompletion-value :: <IOCompletionUPP>;
  sealed inline-only slot ioResult-value :: <OSErr>;
  sealed inline-only slot ioNamePtr-value :: <StringPtr>;
  sealed inline-only slot ioVRefNum-value :: <C-short>;
  sealed inline-only slot filler9-value  :: <C-short>;
  sealed inline-only slot ioWDIndex-value :: <C-short>;
  sealed inline-only slot ioWDProcID-value :: <C-both-long>;
  sealed inline-only slot ioWDVRefNum-value :: <C-short>;
  sealed inline-only slot filler10-value :: <C-short>;
  sealed inline-only slot filler11-value :: <C-both-long>;
  sealed inline-only slot filler12-value :: <C-both-long>;
  sealed inline-only slot filler13-value :: <C-both-long>;
  sealed inline-only slot ioWDDirID-value :: <C-both-long>;
  pack: 2;
  c-name: "struct WDParam";
end;
define C-pointer-type <WDParam*> => <WDParam>;
define C-pointer-type <WDParam**> => <WDParam*>;
define C-pointer-type <WDParamPtr> => <WDParam>;

define C-struct <FIDParam>
  sealed inline-only slot qLink-value    :: <QElemPtr>;
  sealed inline-only slot qType-value    :: <C-short>;
  sealed inline-only slot ioTrap-value   :: <C-short>;
  sealed inline-only slot ioCmdAddr-value :: <Ptr>;
  sealed inline-only slot ioCompletion-value :: <IOCompletionUPP>;
  sealed inline-only slot ioResult-value :: <OSErr>;
  sealed inline-only slot ioNamePtr-value :: <StringPtr>;
  sealed inline-only slot ioVRefNum-value :: <C-short>;
  sealed inline-only slot filler14-value :: <C-both-long>;
  sealed inline-only slot ioDestNamePtr-value :: <StringPtr>;
  sealed inline-only slot filler15-value :: <C-both-long>;
  sealed inline-only slot ioDestDirID-value :: <C-both-long>;
  sealed inline-only slot filler16-value :: <C-both-long>;
  sealed inline-only slot filler17-value :: <C-both-long>;
  sealed inline-only slot ioSrcDirID-value :: <C-both-long>;
  sealed inline-only slot filler18-value :: <C-short>;
  sealed inline-only slot ioFileID-value :: <C-both-long>;
  pack: 2;
  c-name: "struct FIDParam";
end;
define C-pointer-type <FIDParam*> => <FIDParam>;
define C-pointer-type <FIDParam**> => <FIDParam*>;
define C-pointer-type <FIDParamPtr> => <FIDParam>;

define C-struct <ForeignPrivParam>
  sealed inline-only slot qLink-value    :: <QElemPtr>;
  sealed inline-only slot qType-value    :: <C-short>;
  sealed inline-only slot ioTrap-value   :: <C-short>;
  sealed inline-only slot ioCmdAddr-value :: <Ptr>;
  sealed inline-only slot ioCompletion-value :: <IOCompletionUPP>;
  sealed inline-only slot ioResult-value :: <OSErr>;
  sealed inline-only slot ioNamePtr-value :: <StringPtr>;
  sealed inline-only slot ioVRefNum-value :: <C-short>;
  sealed inline-only slot ioFiller21-value :: <C-both-long>;
  sealed inline-only slot ioFiller22-value :: <C-both-long>;
  sealed inline-only slot ioForeignPrivBuffer-value :: <Ptr>;
  sealed inline-only slot ioForeignPrivActCount-value :: <C-both-long>;
  sealed inline-only slot ioForeignPrivReqCount-value :: <C-both-long>;
  sealed inline-only slot ioFiller23-value :: <C-both-long>;
  sealed inline-only slot ioForeignPrivDirID-value :: <C-both-long>;
  sealed inline-only slot ioForeignPrivInfo1-value :: <C-both-long>;
  sealed inline-only slot ioForeignPrivInfo2-value :: <C-both-long>;
  sealed inline-only slot ioForeignPrivInfo3-value :: <C-both-long>;
  sealed inline-only slot ioForeignPrivInfo4-value :: <C-both-long>;
  pack: 2;
  c-name: "struct ForeignPrivParam";
end;
define C-pointer-type <ForeignPrivParam*> => <ForeignPrivParam>;
define C-pointer-type <ForeignPrivParam**> => <ForeignPrivParam*>;
define C-pointer-type <ForeignPrivParamPtr> => <ForeignPrivParam>;

define C-struct <CSParam>
  sealed inline-only slot qLink-value    :: <QElemPtr>;
  sealed inline-only slot qType-value    :: <C-short>;
  sealed inline-only slot ioTrap-value   :: <C-short>;
  sealed inline-only slot ioCmdAddr-value :: <Ptr>;
  sealed inline-only slot ioCompletion-value :: <IOCompletionUPP>;
  sealed inline-only slot ioResult-value :: <OSErr>;
  sealed inline-only slot ioNamePtr-value :: <StringPtr>;
  sealed inline-only slot ioVRefNum-value :: <C-short>;
  sealed inline-only slot ioMatchPtr-value :: <FSSpecPtr>;
  sealed inline-only slot ioReqMatchCount-value :: <C-both-long>;
  sealed inline-only slot ioActMatchCount-value :: <C-both-long>;
  sealed inline-only slot ioSearchBits-value :: <C-both-long>;
  sealed inline-only slot ioSearchInfo1-value :: <CInfoPBPtr>;
  sealed inline-only slot ioSearchInfo2-value :: <CInfoPBPtr>;
  sealed inline-only slot ioSearchTime-value :: <C-both-long>;
  sealed inline-only slot ioCatPosition-value :: <CatPositionRec>;
  sealed inline-only slot ioOptBuffer-value :: <Ptr>;
  sealed inline-only slot ioOptBufSize-value :: <C-both-long>;
  pack: 2;
  c-name: "struct CSParam";
end;
define C-pointer-type <CSParam*> => <CSParam>;
define C-pointer-type <CSParam**> => <CSParam*>;
define C-pointer-type <CSParamPtr> => <CSParam>;

define C-union <HParamBlockRec>
  sealed inline-only slot ioParam-value  :: <HIOParam>;
  sealed inline-only slot fileParam-value :: <HFileParam>;
  sealed inline-only slot volumeParam-value :: <HVolumeParam>;
  sealed inline-only slot accessParam-value :: <AccessParam>;
  sealed inline-only slot objParam-value :: <ObjParam>;
  sealed inline-only slot copyParam-value :: <CopyParam>;
  sealed inline-only slot wdParam-value  :: <WDParam>;
  sealed inline-only slot fidParam-value :: <FIDParam>;
  sealed inline-only slot csParam-value  :: <CSParam>;
  sealed inline-only slot foreignPrivParam-value :: <ForeignPrivParam>;
  pack: 2;
end;
define C-pointer-type <HParamBlockRec*> => <HParamBlockRec>;
define C-pointer-type <HParamBlockRec**> => <HParamBlockRec*>;
define C-pointer-type <HParmBlkPtr> => <HParamBlockRec>;

define C-struct <CMovePBRec>
  sealed inline-only slot qLink-value    :: <QElemPtr>;
  sealed inline-only slot qType-value    :: <C-short>;
  sealed inline-only slot ioTrap-value   :: <C-short>;
  sealed inline-only slot ioCmdAddr-value :: <Ptr>;
  sealed inline-only slot ioCompletion-value :: <IOCompletionUPP>;
  sealed inline-only slot ioResult-value :: <OSErr>;
  sealed inline-only slot ioNamePtr-value :: <StringPtr>;
  sealed inline-only slot ioVRefNum-value :: <C-short>;
  sealed inline-only slot filler1-value  :: <C-both-long>;
  sealed inline-only slot ioNewName-value :: <StringPtr>;
  sealed inline-only slot filler2-value  :: <C-both-long>;
  sealed inline-only slot ioNewDirID-value :: <C-both-long>;
  sealed inline-only array slot filler3-array :: <C-both-long>,
    length: 2,
    address-getter: filler3-value;
  sealed inline-only slot ioDirID-value  :: <C-both-long>;
  pack: 2;
  c-name: "struct CMovePBRec";
end;
define C-pointer-type <CMovePBRec*> => <CMovePBRec>;
define C-pointer-type <CMovePBRec**> => <CMovePBRec*>;
define C-pointer-type <CMovePBPtr> => <CMovePBRec>;

define C-struct <WDPBRec>
  sealed inline-only slot qLink-value    :: <QElemPtr>;
  sealed inline-only slot qType-value    :: <C-short>;
  sealed inline-only slot ioTrap-value   :: <C-short>;
  sealed inline-only slot ioCmdAddr-value :: <Ptr>;
  sealed inline-only slot ioCompletion-value :: <IOCompletionUPP>;
  sealed inline-only slot ioResult-value :: <OSErr>;
  sealed inline-only slot ioNamePtr-value :: <StringPtr>;
  sealed inline-only slot ioVRefNum-value :: <C-short>;
  sealed inline-only slot filler1-value  :: <C-short>;
  sealed inline-only slot ioWDIndex-value :: <C-short>;
  sealed inline-only slot ioWDProcID-value :: <C-both-long>;
  sealed inline-only slot ioWDVRefNum-value :: <C-short>;
  sealed inline-only array slot filler2-array :: <C-short>,
    length: 7,
    address-getter: filler2-value;
  sealed inline-only slot ioWDDirID-value :: <C-both-long>;
  pack: 2;
  c-name: "struct WDPBRec";
end;
define C-pointer-type <WDPBRec*> => <WDPBRec>;
define C-pointer-type <WDPBRec**> => <WDPBRec*>;
define C-pointer-type <WDPBPtr> => <WDPBRec>;

define C-struct <FCBPBRec>
  sealed inline-only slot qLink-value    :: <QElemPtr>;
  sealed inline-only slot qType-value    :: <C-short>;
  sealed inline-only slot ioTrap-value   :: <C-short>;
  sealed inline-only slot ioCmdAddr-value :: <Ptr>;
  sealed inline-only slot ioCompletion-value :: <IOCompletionUPP>;
  sealed inline-only slot ioResult-value :: <OSErr>;
  sealed inline-only slot ioNamePtr-value :: <StringPtr>;
  sealed inline-only slot ioVRefNum-value :: <C-short>;
  sealed inline-only slot ioRefNum-value :: <C-short>;
  sealed inline-only slot filler-value   :: <C-short>;
  sealed inline-only slot ioFCBIndx-value :: <C-short>;
  sealed inline-only slot filler1-value  :: <C-short>;
  sealed inline-only slot ioFCBFlNm-value :: <C-both-long>;
  sealed inline-only slot ioFCBFlags-value :: <C-short>;
  sealed inline-only slot ioFCBStBlk-value :: <C-unsigned-short>;
  sealed inline-only slot ioFCBEOF-value :: <C-both-long>;
  sealed inline-only slot ioFCBPLen-value :: <C-both-long>;
  sealed inline-only slot ioFCBCrPs-value :: <C-both-long>;
  sealed inline-only slot ioFCBVRefNum-value :: <C-short>;
  sealed inline-only slot ioFCBClpSiz-value :: <C-both-long>;
  sealed inline-only slot ioFCBParID-value :: <C-both-long>;
  pack: 2;
  c-name: "struct FCBPBRec";
end;
define C-pointer-type <FCBPBRec*> => <FCBPBRec>;
define C-pointer-type <FCBPBRec**> => <FCBPBRec*>;
define C-pointer-type <FCBPBPtr> => <FCBPBRec>;

define C-struct <VCB>
  sealed inline-only slot qLink-value    :: <QElemPtr>;
  sealed inline-only slot qType-value    :: <C-short>;
  sealed inline-only slot vcbFlags-value :: <C-short>;
  sealed inline-only slot vcbSigWord-value :: <C-unsigned-short>;
  sealed inline-only slot vcbCrDate-value :: <C-both-unsigned-long>;
  sealed inline-only slot vcbLsMod-value :: <C-both-unsigned-long>;
  sealed inline-only slot vcbAtrb-value  :: <C-short>;
  sealed inline-only slot vcbNmFls-value :: <C-unsigned-short>;
  sealed inline-only slot vcbVBMSt-value :: <C-short>;
  sealed inline-only slot vcbAllocPtr-value :: <C-short>;
  sealed inline-only slot vcbNmAlBlks-value :: <C-unsigned-short>;
  sealed inline-only slot vcbAlBlkSiz-value :: <C-both-long>;
  sealed inline-only slot vcbClpSiz-value :: <C-both-long>;
  sealed inline-only slot vcbAlBlSt-value :: <C-short>;
  sealed inline-only slot vcbNxtCNID-value :: <C-both-long>;
  sealed inline-only slot vcbFreeBks-value :: <C-unsigned-short>;
  sealed inline-only slot vcbVN-value    :: <Str27>;
  sealed inline-only slot vcbDrvNum-value :: <C-short>;
  sealed inline-only slot vcbDRefNum-value :: <C-short>;
  sealed inline-only slot vcbFSID-value  :: <C-short>;
  sealed inline-only slot vcbVRefNum-value :: <C-short>;
  sealed inline-only slot vcbMAdr-value  :: <Ptr>;
  sealed inline-only slot vcbBufAdr-value :: <Ptr>;
  sealed inline-only slot vcbMLen-value  :: <C-short>;
  sealed inline-only slot vcbDirIndex-value :: <C-short>;
  sealed inline-only slot vcbDirBlk-value :: <C-short>;
  sealed inline-only slot vcbVolBkUp-value :: <C-both-unsigned-long>;
  sealed inline-only slot vcbVSeqNum-value :: <C-unsigned-short>;
  sealed inline-only slot vcbWrCnt-value :: <C-both-long>;
  sealed inline-only slot vcbXTClpSiz-value :: <C-both-long>;
  sealed inline-only slot vcbCTClpSiz-value :: <C-both-long>;
  sealed inline-only slot vcbNmRtDirs-value :: <C-unsigned-short>;
  sealed inline-only slot vcbFilCnt-value :: <C-both-long>;
  sealed inline-only slot vcbDirCnt-value :: <C-both-long>;
  sealed inline-only array slot vcbFndrInfo-array :: <C-both-long>,
    length: 8,
    address-getter: vcbFndrInfo-value;
  sealed inline-only slot vcbVCSize-value :: <C-unsigned-short>;
  sealed inline-only slot vcbVBMCSiz-value :: <C-unsigned-short>;
  sealed inline-only slot vcbCtlCSiz-value :: <C-unsigned-short>;
  sealed inline-only slot vcbXTAlBlks-value :: <C-unsigned-short>;
  sealed inline-only slot vcbCTAlBlks-value :: <C-unsigned-short>;
  sealed inline-only slot vcbXTRef-value :: <C-short>;
  sealed inline-only slot vcbCTRef-value :: <C-short>;
  sealed inline-only slot vcbCtlBuf-value :: <Ptr>;
  sealed inline-only slot vcbDirIDM-value :: <C-both-long>;
  sealed inline-only slot vcbOffsM-value :: <C-short>;
  pack: 2;
  c-name: "struct VCB";
end;
define C-pointer-type <VCB*> => <VCB>;
define C-pointer-type <VCB**> => <VCB*>;
define C-pointer-type <VCBPtr> => <VCB>;

define C-struct <DrvQEl>
  sealed inline-only slot qLink-value    :: <QElemPtr>;
  sealed inline-only slot qType-value    :: <C-short>;
  sealed inline-only slot dQDrive-value  :: <C-short>;
  sealed inline-only slot dQRefNum-value :: <C-short>;
  sealed inline-only slot dQFSID-value   :: <C-short>;
  sealed inline-only slot dQDrvSz-value  :: <C-unsigned-short>;
  sealed inline-only slot dQDrvSz2-value :: <C-unsigned-short>;
  pack: 2;
  c-name: "struct DrvQEl";
end;
define C-pointer-type <DrvQEl*> => <DrvQEl>;
define C-pointer-type <DrvQEl**> => <DrvQEl*>;
define C-pointer-type <DrvQElPtr> => <DrvQEl>;
// unnamed enum:
define inline-only constant $uppIOCompletionProcInfo   = #x00009802;


define inline-only C-function PBGetVInfoSync
  parameter paramBlock :: <ParmBlkPtr>;
  result value :: <OSErr>;
  c-name: "PBGetVInfoSync";
  c-modifiers: "pascal";
end;

define inline-only C-function PBGetVInfoAsync
  parameter paramBlock :: <ParmBlkPtr>;
  result value :: <OSErr>;
  c-name: "PBGetVInfoAsync";
  c-modifiers: "pascal";
end;

define inline-only C-function PBXGetVolInfoSync
  parameter paramBlock :: <XVolumeParamPtr>;
  result value :: <OSErr>;
  c-name: "PBXGetVolInfoSync";
  c-modifiers: "pascal";
end;

define inline-only C-function PBXGetVolInfoAsync
  parameter paramBlock :: <XVolumeParamPtr>;
  result value :: <OSErr>;
  c-name: "PBXGetVolInfoAsync";
  c-modifiers: "pascal";
end;

define inline-only C-function PBGetVolSync
  parameter paramBlock :: <ParmBlkPtr>;
  result value :: <OSErr>;
  c-name: "PBGetVolSync";
  c-modifiers: "pascal";
end;

define inline-only C-function PBGetVolAsync
  parameter paramBlock :: <ParmBlkPtr>;
  result value :: <OSErr>;
  c-name: "PBGetVolAsync";
  c-modifiers: "pascal";
end;

define inline-only C-function PBSetVolSync
  parameter paramBlock :: <ParmBlkPtr>;
  result value :: <OSErr>;
  c-name: "PBSetVolSync";
  c-modifiers: "pascal";
end;

define inline-only C-function PBSetVolAsync
  parameter paramBlock :: <ParmBlkPtr>;
  result value :: <OSErr>;
  c-name: "PBSetVolAsync";
  c-modifiers: "pascal";
end;

define inline-only C-function PBFlushVolSync
  parameter paramBlock :: <ParmBlkPtr>;
  result value :: <OSErr>;
  c-name: "PBFlushVolSync";
  c-modifiers: "pascal";
end;

define inline-only C-function PBFlushVolAsync
  parameter paramBlock :: <ParmBlkPtr>;
  result value :: <OSErr>;
  c-name: "PBFlushVolAsync";
  c-modifiers: "pascal";
end;

define inline-only C-function PBCreateSync
  parameter paramBlock :: <ParmBlkPtr>;
  result value :: <OSErr>;
  c-name: "PBCreateSync";
  c-modifiers: "pascal";
end;

define inline-only C-function PBCreateAsync
  parameter paramBlock :: <ParmBlkPtr>;
  result value :: <OSErr>;
  c-name: "PBCreateAsync";
  c-modifiers: "pascal";
end;

define inline-only C-function PBDeleteSync
  parameter paramBlock :: <ParmBlkPtr>;
  result value :: <OSErr>;
  c-name: "PBDeleteSync";
  c-modifiers: "pascal";
end;

define inline-only C-function PBDeleteAsync
  parameter paramBlock :: <ParmBlkPtr>;
  result value :: <OSErr>;
  c-name: "PBDeleteAsync";
  c-modifiers: "pascal";
end;

define inline-only C-function PBOpenDFSync
  parameter paramBlock :: <ParmBlkPtr>;
  result value :: <OSErr>;
  c-name: "PBOpenDFSync";
  c-modifiers: "pascal";
end;

define inline-only C-function PBOpenDFAsync
  parameter paramBlock :: <ParmBlkPtr>;
  result value :: <OSErr>;
  c-name: "PBOpenDFAsync";
  c-modifiers: "pascal";
end;

define inline-only C-function PBOpenRFSync
  parameter paramBlock :: <ParmBlkPtr>;
  result value :: <OSErr>;
  c-name: "PBOpenRFSync";
  c-modifiers: "pascal";
end;

define inline-only C-function PBOpenRFAsync
  parameter paramBlock :: <ParmBlkPtr>;
  result value :: <OSErr>;
  c-name: "PBOpenRFAsync";
  c-modifiers: "pascal";
end;

define inline-only C-function PBRenameSync
  parameter paramBlock :: <ParmBlkPtr>;
  result value :: <OSErr>;
  c-name: "PBRenameSync";
  c-modifiers: "pascal";
end;

define inline-only C-function PBRenameAsync
  parameter paramBlock :: <ParmBlkPtr>;
  result value :: <OSErr>;
  c-name: "PBRenameAsync";
  c-modifiers: "pascal";
end;

define inline-only C-function PBGetFInfoSync
  parameter paramBlock :: <ParmBlkPtr>;
  result value :: <OSErr>;
  c-name: "PBGetFInfoSync";
  c-modifiers: "pascal";
end;

define inline-only C-function PBGetFInfoAsync
  parameter paramBlock :: <ParmBlkPtr>;
  result value :: <OSErr>;
  c-name: "PBGetFInfoAsync";
  c-modifiers: "pascal";
end;

define inline-only C-function PBSetFInfoSync
  parameter paramBlock :: <ParmBlkPtr>;
  result value :: <OSErr>;
  c-name: "PBSetFInfoSync";
  c-modifiers: "pascal";
end;

define inline-only C-function PBSetFInfoAsync
  parameter paramBlock :: <ParmBlkPtr>;
  result value :: <OSErr>;
  c-name: "PBSetFInfoAsync";
  c-modifiers: "pascal";
end;

define inline-only C-function PBSetFLockSync
  parameter paramBlock :: <ParmBlkPtr>;
  result value :: <OSErr>;
  c-name: "PBSetFLockSync";
  c-modifiers: "pascal";
end;

define inline-only C-function PBSetFLockAsync
  parameter paramBlock :: <ParmBlkPtr>;
  result value :: <OSErr>;
  c-name: "PBSetFLockAsync";
  c-modifiers: "pascal";
end;

define inline-only C-function PBRstFLockSync
  parameter paramBlock :: <ParmBlkPtr>;
  result value :: <OSErr>;
  c-name: "PBRstFLockSync";
  c-modifiers: "pascal";
end;

define inline-only C-function PBRstFLockAsync
  parameter paramBlock :: <ParmBlkPtr>;
  result value :: <OSErr>;
  c-name: "PBRstFLockAsync";
  c-modifiers: "pascal";
end;

define inline-only C-function PBSetFVersSync
  parameter paramBlock :: <ParmBlkPtr>;
  result value :: <OSErr>;
  c-name: "PBSetFVersSync";
  c-modifiers: "pascal";
end;

define inline-only C-function PBSetFVersAsync
  parameter paramBlock :: <ParmBlkPtr>;
  result value :: <OSErr>;
  c-name: "PBSetFVersAsync";
  c-modifiers: "pascal";
end;

define inline-only C-function PBAllocateSync
  parameter paramBlock :: <ParmBlkPtr>;
  result value :: <OSErr>;
  c-name: "PBAllocateSync";
  c-modifiers: "pascal";
end;

define inline-only C-function PBAllocateAsync
  parameter paramBlock :: <ParmBlkPtr>;
  result value :: <OSErr>;
  c-name: "PBAllocateAsync";
  c-modifiers: "pascal";
end;

define inline-only C-function PBGetEOFSync
  parameter paramBlock :: <ParmBlkPtr>;
  result value :: <OSErr>;
  c-name: "PBGetEOFSync";
  c-modifiers: "pascal";
end;

define inline-only C-function PBGetEOFAsync
  parameter paramBlock :: <ParmBlkPtr>;
  result value :: <OSErr>;
  c-name: "PBGetEOFAsync";
  c-modifiers: "pascal";
end;

define inline-only C-function PBSetEOFSync
  parameter paramBlock :: <ParmBlkPtr>;
  result value :: <OSErr>;
  c-name: "PBSetEOFSync";
  c-modifiers: "pascal";
end;

define inline-only C-function PBSetEOFAsync
  parameter paramBlock :: <ParmBlkPtr>;
  result value :: <OSErr>;
  c-name: "PBSetEOFAsync";
  c-modifiers: "pascal";
end;

define inline-only C-function PBGetFPosSync
  parameter paramBlock :: <ParmBlkPtr>;
  result value :: <OSErr>;
  c-name: "PBGetFPosSync";
  c-modifiers: "pascal";
end;

define inline-only C-function PBGetFPosAsync
  parameter paramBlock :: <ParmBlkPtr>;
  result value :: <OSErr>;
  c-name: "PBGetFPosAsync";
  c-modifiers: "pascal";
end;

define inline-only C-function PBSetFPosSync
  parameter paramBlock :: <ParmBlkPtr>;
  result value :: <OSErr>;
  c-name: "PBSetFPosSync";
  c-modifiers: "pascal";
end;

define inline-only C-function PBSetFPosAsync
  parameter paramBlock :: <ParmBlkPtr>;
  result value :: <OSErr>;
  c-name: "PBSetFPosAsync";
  c-modifiers: "pascal";
end;

define inline-only C-function PBFlushFileSync
  parameter paramBlock :: <ParmBlkPtr>;
  result value :: <OSErr>;
  c-name: "PBFlushFileSync";
  c-modifiers: "pascal";
end;

define inline-only C-function PBFlushFileAsync
  parameter paramBlock :: <ParmBlkPtr>;
  result value :: <OSErr>;
  c-name: "PBFlushFileAsync";
  c-modifiers: "pascal";
end;

define inline-only C-function PBMountVol
  parameter paramBlock :: <ParmBlkPtr>;
  result value :: <OSErr>;
  c-name: "PBMountVol";
  c-modifiers: "pascal";
end;

define inline-only C-function PBUnmountVol
  parameter paramBlock :: <ParmBlkPtr>;
  result value :: <OSErr>;
  c-name: "PBUnmountVol";
  c-modifiers: "pascal";
end;

define inline-only C-function PBUnmountVolImmed
  parameter paramBlock :: <ParmBlkPtr>;
  result value :: <OSErr>;
  c-name: "PBUnmountVolImmed";
  c-modifiers: "pascal";
end;

define inline-only C-function PBEject
  parameter paramBlock :: <ParmBlkPtr>;
  result value :: <OSErr>;
  c-name: "PBEject";
  c-modifiers: "pascal";
end;

define inline-only C-function PBOffLine
  parameter paramBlock :: <ParmBlkPtr>;
  result value :: <OSErr>;
  c-name: "PBOffLine";
  c-modifiers: "pascal";
end;

define inline-only C-function PBCatSearchSync
  parameter paramBlock :: <CSParamPtr>;
  result value :: <OSErr>;
  c-name: "PBCatSearchSync";
  c-modifiers: "pascal";
end;

define inline-only C-function PBCatSearchAsync
  parameter paramBlock :: <CSParamPtr>;
  result value :: <OSErr>;
  c-name: "PBCatSearchAsync";
  c-modifiers: "pascal";
end;

define inline-only C-function SetVol
  parameter volName    :: <ConstStr63Param>;
  parameter vRefNum    :: <C-short>;
  result value :: <OSErr>;
  c-name: "SetVol";
  c-modifiers: "pascal";
end;

define inline-only C-function UnmountVol
  parameter volName    :: <ConstStr63Param>;
  parameter vRefNum    :: <C-short>;
  result value :: <OSErr>;
  c-name: "UnmountVol";
  c-modifiers: "pascal";
end;

define inline-only C-function Eject
  parameter volName    :: <ConstStr63Param>;
  parameter vRefNum    :: <C-short>;
  result value :: <OSErr>;
  c-name: "Eject";
  c-modifiers: "pascal";
end;

define inline-only C-function FlushVol
  parameter volName    :: <ConstStr63Param>;
  parameter vRefNum    :: <C-short>;
  result value :: <OSErr>;
  c-name: "FlushVol";
  c-modifiers: "pascal";
end;

define inline-only C-function HSetVol
  parameter volName    :: <ConstStr63Param>;
  parameter vRefNum    :: <C-short>;
  parameter dirID      :: <C-both-long>;
  result value :: <OSErr>;
  c-name: "HSetVol";
  c-modifiers: "pascal";
end;

define inline-only C-function FSOpen
  parameter fileName   :: <ConstStr255Param>;
  parameter vRefNum    :: <C-short>;
  parameter refNum     :: <C-short*>;
  result value :: <OSErr>;
  c-name: "FSOpen";
  c-modifiers: "pascal";
end;

define inline-only C-function OpenDF
  parameter fileName   :: <ConstStr255Param>;
  parameter vRefNum    :: <C-short>;
  parameter refNum     :: <C-short*>;
  result value :: <OSErr>;
  c-name: "OpenDF";
  c-modifiers: "pascal";
end;

define inline-only C-function FSClose
  parameter refNum     :: <C-short>;
  result value :: <OSErr>;
  c-name: "FSClose";
  c-modifiers: "pascal";
end;

define inline-only C-function FSRead
  parameter refNum     :: <C-short>;
  parameter count      :: <C-both-long*>;
  parameter buffPtr    :: <C-void*>;
  result value :: <OSErr>;
  c-name: "FSRead";
  c-modifiers: "pascal";
end;

define inline-only C-function FSWrite
  parameter refNum     :: <C-short>;
  parameter count      :: <C-both-long*>;
  parameter buffPtr    ::  /* const */ <C-void*>;
  result value :: <OSErr>;
  c-name: "FSWrite";
  c-modifiers: "pascal";
end;

define inline-only C-function GetVInfo
  parameter drvNum     :: <C-short>;
  parameter volName    :: <StringPtr>;
  parameter vRefNum    :: <C-short*>;
  parameter freeBytes  :: <C-both-long*>;
  result value :: <OSErr>;
  c-name: "GetVInfo";
  c-modifiers: "pascal";
end;

define inline-only C-function GetFInfo
  parameter fileName   :: <ConstStr255Param>;
  parameter vRefNum    :: <C-short>;
  parameter fndrInfo   :: <FInfo*>;
  result value :: <OSErr>;
  c-name: "GetFInfo";
  c-modifiers: "pascal";
end;

define inline-only C-function GetVol
  parameter volName    :: <StringPtr>;
  parameter vRefNum    :: <C-short*>;
  result value :: <OSErr>;
  c-name: "GetVol";
  c-modifiers: "pascal";
end;

define inline-only C-function Create
  parameter fileName   :: <ConstStr255Param>;
  parameter vRefNum    :: <C-short>;
  parameter creator    :: <OSType>;
  parameter fileType   :: <OSType>;
  result value :: <OSErr>;
  c-name: "Create";
  c-modifiers: "pascal";
end;

define inline-only C-function FSDelete
  parameter fileName   :: <ConstStr255Param>;
  parameter vRefNum    :: <C-short>;
  result value :: <OSErr>;
  c-name: "FSDelete";
  c-modifiers: "pascal";
end;

define inline-only C-function OpenRF
  parameter fileName   :: <ConstStr255Param>;
  parameter vRefNum    :: <C-short>;
  parameter refNum     :: <C-short*>;
  result value :: <OSErr>;
  c-name: "OpenRF";
  c-modifiers: "pascal";
end;

define inline-only C-function Rename
  parameter oldName    :: <ConstStr255Param>;
  parameter vRefNum    :: <C-short>;
  parameter newName    :: <ConstStr255Param>;
  result value :: <OSErr>;
  c-name: "Rename";
  c-modifiers: "pascal";
end;

define inline-only C-function SetFInfo
  parameter fileName   :: <ConstStr255Param>;
  parameter vRefNum    :: <C-short>;
  parameter fndrInfo   ::  /* const */ <FInfo*>;
  result value :: <OSErr>;
  c-name: "SetFInfo";
  c-modifiers: "pascal";
end;

define inline-only C-function SetFLock
  parameter fileName   :: <ConstStr255Param>;
  parameter vRefNum    :: <C-short>;
  result value :: <OSErr>;
  c-name: "SetFLock";
  c-modifiers: "pascal";
end;

define inline-only C-function RstFLock
  parameter fileName   :: <ConstStr255Param>;
  parameter vRefNum    :: <C-short>;
  result value :: <OSErr>;
  c-name: "RstFLock";
  c-modifiers: "pascal";
end;

define inline-only C-function Allocate
  parameter refNum     :: <C-short>;
  parameter count      :: <C-both-long*>;
  result value :: <OSErr>;
  c-name: "Allocate";
  c-modifiers: "pascal";
end;

define inline-only C-function GetEOF
  parameter refNum     :: <C-short>;
  parameter logEOF     :: <C-both-long*>;
  result value :: <OSErr>;
  c-name: "GetEOF";
  c-modifiers: "pascal";
end;

define inline-only C-function SetEOF
  parameter refNum     :: <C-short>;
  parameter logEOF     :: <C-both-long>;
  result value :: <OSErr>;
  c-name: "SetEOF";
  c-modifiers: "pascal";
end;

define inline-only C-function GetFPos
  parameter refNum     :: <C-short>;
  parameter filePos    :: <C-both-long*>;
  result value :: <OSErr>;
  c-name: "GetFPos";
  c-modifiers: "pascal";
end;

define inline-only C-function SetFPos
  parameter refNum     :: <C-short>;
  parameter posMode    :: <C-short>;
  parameter posOff     :: <C-both-long>;
  result value :: <OSErr>;
  c-name: "SetFPos";
  c-modifiers: "pascal";
end;

define inline-only C-function GetVRefNum
  parameter fileRefNum :: <C-short>;
  parameter vRefNum    :: <C-short*>;
  result value :: <OSErr>;
  c-name: "GetVRefNum";
  c-modifiers: "pascal";
end;

define inline-only C-function PBOpenWDSync
  parameter paramBlock :: <WDPBPtr>;
  result value :: <OSErr>;
  c-name: "PBOpenWDSync";
  c-modifiers: "pascal";
end;

define inline-only C-function PBOpenWDAsync
  parameter paramBlock :: <WDPBPtr>;
  result value :: <OSErr>;
  c-name: "PBOpenWDAsync";
  c-modifiers: "pascal";
end;

define inline-only C-function PBCloseWDSync
  parameter paramBlock :: <WDPBPtr>;
  result value :: <OSErr>;
  c-name: "PBCloseWDSync";
  c-modifiers: "pascal";
end;

define inline-only C-function PBCloseWDAsync
  parameter paramBlock :: <WDPBPtr>;
  result value :: <OSErr>;
  c-name: "PBCloseWDAsync";
  c-modifiers: "pascal";
end;

define inline-only C-function PBHSetVolSync
  parameter paramBlock :: <WDPBPtr>;
  result value :: <OSErr>;
  c-name: "PBHSetVolSync";
  c-modifiers: "pascal";
end;

define inline-only C-function PBHSetVolAsync
  parameter paramBlock :: <WDPBPtr>;
  result value :: <OSErr>;
  c-name: "PBHSetVolAsync";
  c-modifiers: "pascal";
end;

define inline-only C-function PBHGetVolSync
  parameter paramBlock :: <WDPBPtr>;
  result value :: <OSErr>;
  c-name: "PBHGetVolSync";
  c-modifiers: "pascal";
end;

define inline-only C-function PBHGetVolAsync
  parameter paramBlock :: <WDPBPtr>;
  result value :: <OSErr>;
  c-name: "PBHGetVolAsync";
  c-modifiers: "pascal";
end;

define inline-only C-function PBCatMoveSync
  parameter paramBlock :: <CMovePBPtr>;
  result value :: <OSErr>;
  c-name: "PBCatMoveSync";
  c-modifiers: "pascal";
end;

define inline-only C-function PBCatMoveAsync
  parameter paramBlock :: <CMovePBPtr>;
  result value :: <OSErr>;
  c-name: "PBCatMoveAsync";
  c-modifiers: "pascal";
end;

define inline-only C-function PBDirCreateSync
  parameter paramBlock :: <HParmBlkPtr>;
  result value :: <OSErr>;
  c-name: "PBDirCreateSync";
  c-modifiers: "pascal";
end;

define inline-only C-function PBDirCreateAsync
  parameter paramBlock :: <HParmBlkPtr>;
  result value :: <OSErr>;
  c-name: "PBDirCreateAsync";
  c-modifiers: "pascal";
end;

define inline-only C-function PBGetWDInfoSync
  parameter paramBlock :: <WDPBPtr>;
  result value :: <OSErr>;
  c-name: "PBGetWDInfoSync";
  c-modifiers: "pascal";
end;

define inline-only C-function PBGetWDInfoAsync
  parameter paramBlock :: <WDPBPtr>;
  result value :: <OSErr>;
  c-name: "PBGetWDInfoAsync";
  c-modifiers: "pascal";
end;

define inline-only C-function PBGetFCBInfoSync
  parameter paramBlock :: <FCBPBPtr>;
  result value :: <OSErr>;
  c-name: "PBGetFCBInfoSync";
  c-modifiers: "pascal";
end;

define inline-only C-function PBGetFCBInfoAsync
  parameter paramBlock :: <FCBPBPtr>;
  result value :: <OSErr>;
  c-name: "PBGetFCBInfoAsync";
  c-modifiers: "pascal";
end;

define inline-only C-function PBGetCatInfoSync
  parameter paramBlock :: <CInfoPBPtr>;
  result value :: <OSErr>;
  c-name: "PBGetCatInfoSync";
  c-modifiers: "pascal";
end;

define inline-only C-function PBGetCatInfoAsync
  parameter paramBlock :: <CInfoPBPtr>;
  result value :: <OSErr>;
  c-name: "PBGetCatInfoAsync";
  c-modifiers: "pascal";
end;

define inline-only C-function PBSetCatInfoSync
  parameter paramBlock :: <CInfoPBPtr>;
  result value :: <OSErr>;
  c-name: "PBSetCatInfoSync";
  c-modifiers: "pascal";
end;

define inline-only C-function PBSetCatInfoAsync
  parameter paramBlock :: <CInfoPBPtr>;
  result value :: <OSErr>;
  c-name: "PBSetCatInfoAsync";
  c-modifiers: "pascal";
end;

define inline-only C-function PBAllocContigSync
  parameter paramBlock :: <ParmBlkPtr>;
  result value :: <OSErr>;
  c-name: "PBAllocContigSync";
  c-modifiers: "pascal";
end;

define inline-only C-function PBAllocContigAsync
  parameter paramBlock :: <ParmBlkPtr>;
  result value :: <OSErr>;
  c-name: "PBAllocContigAsync";
  c-modifiers: "pascal";
end;

define inline-only C-function PBLockRangeSync
  parameter paramBlock :: <ParmBlkPtr>;
  result value :: <OSErr>;
  c-name: "PBLockRangeSync";
  c-modifiers: "pascal";
end;

define inline-only C-function PBLockRangeAsync
  parameter paramBlock :: <ParmBlkPtr>;
  result value :: <OSErr>;
  c-name: "PBLockRangeAsync";
  c-modifiers: "pascal";
end;

define inline-only C-function PBUnlockRangeSync
  parameter paramBlock :: <ParmBlkPtr>;
  result value :: <OSErr>;
  c-name: "PBUnlockRangeSync";
  c-modifiers: "pascal";
end;

define inline-only C-function PBUnlockRangeAsync
  parameter paramBlock :: <ParmBlkPtr>;
  result value :: <OSErr>;
  c-name: "PBUnlockRangeAsync";
  c-modifiers: "pascal";
end;

define inline-only C-function PBSetVInfoSync
  parameter paramBlock :: <HParmBlkPtr>;
  result value :: <OSErr>;
  c-name: "PBSetVInfoSync";
  c-modifiers: "pascal";
end;

define inline-only C-function PBSetVInfoAsync
  parameter paramBlock :: <HParmBlkPtr>;
  result value :: <OSErr>;
  c-name: "PBSetVInfoAsync";
  c-modifiers: "pascal";
end;

define inline-only C-function PBHGetVInfoSync
  parameter paramBlock :: <HParmBlkPtr>;
  result value :: <OSErr>;
  c-name: "PBHGetVInfoSync";
  c-modifiers: "pascal";
end;

define inline-only C-function PBHGetVInfoAsync
  parameter paramBlock :: <HParmBlkPtr>;
  result value :: <OSErr>;
  c-name: "PBHGetVInfoAsync";
  c-modifiers: "pascal";
end;

define inline-only C-function PBHOpenSync
  parameter paramBlock :: <HParmBlkPtr>;
  result value :: <OSErr>;
  c-name: "PBHOpenSync";
  c-modifiers: "pascal";
end;

define inline-only C-function PBHOpenAsync
  parameter paramBlock :: <HParmBlkPtr>;
  result value :: <OSErr>;
  c-name: "PBHOpenAsync";
  c-modifiers: "pascal";
end;

define inline-only C-function PBHOpenRFSync
  parameter paramBlock :: <HParmBlkPtr>;
  result value :: <OSErr>;
  c-name: "PBHOpenRFSync";
  c-modifiers: "pascal";
end;

define inline-only C-function PBHOpenRFAsync
  parameter paramBlock :: <HParmBlkPtr>;
  result value :: <OSErr>;
  c-name: "PBHOpenRFAsync";
  c-modifiers: "pascal";
end;

define inline-only C-function PBHOpenDFSync
  parameter paramBlock :: <HParmBlkPtr>;
  result value :: <OSErr>;
  c-name: "PBHOpenDFSync";
  c-modifiers: "pascal";
end;

define inline-only C-function PBHOpenDFAsync
  parameter paramBlock :: <HParmBlkPtr>;
  result value :: <OSErr>;
  c-name: "PBHOpenDFAsync";
  c-modifiers: "pascal";
end;

define inline-only C-function PBHCreateSync
  parameter paramBlock :: <HParmBlkPtr>;
  result value :: <OSErr>;
  c-name: "PBHCreateSync";
  c-modifiers: "pascal";
end;

define inline-only C-function PBHCreateAsync
  parameter paramBlock :: <HParmBlkPtr>;
  result value :: <OSErr>;
  c-name: "PBHCreateAsync";
  c-modifiers: "pascal";
end;

define inline-only C-function PBHDeleteSync
  parameter paramBlock :: <HParmBlkPtr>;
  result value :: <OSErr>;
  c-name: "PBHDeleteSync";
  c-modifiers: "pascal";
end;

define inline-only C-function PBHDeleteAsync
  parameter paramBlock :: <HParmBlkPtr>;
  result value :: <OSErr>;
  c-name: "PBHDeleteAsync";
  c-modifiers: "pascal";
end;

define inline-only C-function PBHRenameSync
  parameter paramBlock :: <HParmBlkPtr>;
  result value :: <OSErr>;
  c-name: "PBHRenameSync";
  c-modifiers: "pascal";
end;

define inline-only C-function PBHRenameAsync
  parameter paramBlock :: <HParmBlkPtr>;
  result value :: <OSErr>;
  c-name: "PBHRenameAsync";
  c-modifiers: "pascal";
end;

define inline-only C-function PBHRstFLockSync
  parameter paramBlock :: <HParmBlkPtr>;
  result value :: <OSErr>;
  c-name: "PBHRstFLockSync";
  c-modifiers: "pascal";
end;

define inline-only C-function PBHRstFLockAsync
  parameter paramBlock :: <HParmBlkPtr>;
  result value :: <OSErr>;
  c-name: "PBHRstFLockAsync";
  c-modifiers: "pascal";
end;

define inline-only C-function PBHSetFLockSync
  parameter paramBlock :: <HParmBlkPtr>;
  result value :: <OSErr>;
  c-name: "PBHSetFLockSync";
  c-modifiers: "pascal";
end;

define inline-only C-function PBHSetFLockAsync
  parameter paramBlock :: <HParmBlkPtr>;
  result value :: <OSErr>;
  c-name: "PBHSetFLockAsync";
  c-modifiers: "pascal";
end;

define inline-only C-function PBHGetFInfoSync
  parameter paramBlock :: <HParmBlkPtr>;
  result value :: <OSErr>;
  c-name: "PBHGetFInfoSync";
  c-modifiers: "pascal";
end;

define inline-only C-function PBHGetFInfoAsync
  parameter paramBlock :: <HParmBlkPtr>;
  result value :: <OSErr>;
  c-name: "PBHGetFInfoAsync";
  c-modifiers: "pascal";
end;

define inline-only C-function PBHSetFInfoSync
  parameter paramBlock :: <HParmBlkPtr>;
  result value :: <OSErr>;
  c-name: "PBHSetFInfoSync";
  c-modifiers: "pascal";
end;

define inline-only C-function PBHSetFInfoAsync
  parameter paramBlock :: <HParmBlkPtr>;
  result value :: <OSErr>;
  c-name: "PBHSetFInfoAsync";
  c-modifiers: "pascal";
end;

define inline-only C-function PBMakeFSSpecSync
  parameter paramBlock :: <HParmBlkPtr>;
  result value :: <OSErr>;
  c-name: "PBMakeFSSpecSync";
  c-modifiers: "pascal";
end;

define inline-only C-function PBMakeFSSpecAsync
  parameter paramBlock :: <HParmBlkPtr>;
  result value :: <OSErr>;
  c-name: "PBMakeFSSpecAsync";
  c-modifiers: "pascal";
end;

define inline-only C-function FInitQueue
  c-name: "FInitQueue";
  c-modifiers: "pascal";
end;

define inline-only C-function GetFSQHdr
  result value :: <QHdrPtr>;
  c-name: "GetFSQHdr";
  c-modifiers: "pascal";
end;

define inline-only C-function GetVCBQHdr
  result value :: <QHdrPtr>;
  c-name: "GetVCBQHdr";
  c-modifiers: "pascal";
end;

define inline-only C-function HGetVol
  parameter volName    :: <StringPtr>;
  parameter vRefNum    :: <C-short*>;
  parameter dirID      :: <C-both-long*>;
  result value :: <OSErr>;
  c-name: "HGetVol";
  c-modifiers: "pascal";
end;

define inline-only C-function HOpen
  parameter vRefNum    :: <C-short>;
  parameter dirID      :: <C-both-long>;
  parameter fileName   :: <ConstStr255Param>;
  parameter permission :: <SInt8>;
  parameter refNum     :: <C-short*>;
  result value :: <OSErr>;
  c-name: "HOpen";
  c-modifiers: "pascal";
end;

define inline-only C-function HOpenDF
  parameter vRefNum    :: <C-short>;
  parameter dirID      :: <C-both-long>;
  parameter fileName   :: <ConstStr255Param>;
  parameter permission :: <SInt8>;
  parameter refNum     :: <C-short*>;
  result value :: <OSErr>;
  c-name: "HOpenDF";
  c-modifiers: "pascal";
end;

define inline-only C-function HOpenRF
  parameter vRefNum    :: <C-short>;
  parameter dirID      :: <C-both-long>;
  parameter fileName   :: <ConstStr255Param>;
  parameter permission :: <SInt8>;
  parameter refNum     :: <C-short*>;
  result value :: <OSErr>;
  c-name: "HOpenRF";
  c-modifiers: "pascal";
end;

define inline-only C-function AllocContig
  parameter refNum     :: <C-short>;
  parameter count      :: <C-both-long*>;
  result value :: <OSErr>;
  c-name: "AllocContig";
  c-modifiers: "pascal";
end;

define inline-only C-function HCreate
  parameter vRefNum    :: <C-short>;
  parameter dirID      :: <C-both-long>;
  parameter fileName   :: <ConstStr255Param>;
  parameter creator    :: <OSType>;
  parameter fileType   :: <OSType>;
  result value :: <OSErr>;
  c-name: "HCreate";
  c-modifiers: "pascal";
end;

define inline-only C-function DirCreate
  parameter vRefNum    :: <C-short>;
  parameter parentDirID :: <C-both-long>;
  parameter directoryName :: <ConstStr255Param>;
  parameter createdDirID :: <C-both-long*>;
  result value :: <OSErr>;
  c-name: "DirCreate";
  c-modifiers: "pascal";
end;

define inline-only C-function HDelete
  parameter vRefNum    :: <C-short>;
  parameter dirID      :: <C-both-long>;
  parameter fileName   :: <ConstStr255Param>;
  result value :: <OSErr>;
  c-name: "HDelete";
  c-modifiers: "pascal";
end;

define inline-only C-function HGetFInfo
  parameter vRefNum    :: <C-short>;
  parameter dirID      :: <C-both-long>;
  parameter fileName   :: <ConstStr255Param>;
  parameter fndrInfo   :: <FInfo*>;
  result value :: <OSErr>;
  c-name: "HGetFInfo";
  c-modifiers: "pascal";
end;

define inline-only C-function HSetFInfo
  parameter vRefNum    :: <C-short>;
  parameter dirID      :: <C-both-long>;
  parameter fileName   :: <ConstStr255Param>;
  parameter fndrInfo   ::  /* const */ <FInfo*>;
  result value :: <OSErr>;
  c-name: "HSetFInfo";
  c-modifiers: "pascal";
end;

define inline-only C-function HSetFLock
  parameter vRefNum    :: <C-short>;
  parameter dirID      :: <C-both-long>;
  parameter fileName   :: <ConstStr255Param>;
  result value :: <OSErr>;
  c-name: "HSetFLock";
  c-modifiers: "pascal";
end;

define inline-only C-function HRstFLock
  parameter vRefNum    :: <C-short>;
  parameter dirID      :: <C-both-long>;
  parameter fileName   :: <ConstStr255Param>;
  result value :: <OSErr>;
  c-name: "HRstFLock";
  c-modifiers: "pascal";
end;

define inline-only C-function HRename
  parameter vRefNum    :: <C-short>;
  parameter dirID      :: <C-both-long>;
  parameter oldName    :: <ConstStr255Param>;
  parameter newName    :: <ConstStr255Param>;
  result value :: <OSErr>;
  c-name: "HRename";
  c-modifiers: "pascal";
end;

define inline-only C-function CatMove
  parameter vRefNum    :: <C-short>;
  parameter dirID      :: <C-both-long>;
  parameter oldName    :: <ConstStr255Param>;
  parameter newDirID   :: <C-both-long>;
  parameter newName    :: <ConstStr255Param>;
  result value :: <OSErr>;
  c-name: "CatMove";
  c-modifiers: "pascal";
end;

define inline-only C-function OpenWD
  parameter vRefNum    :: <C-short>;
  parameter dirID      :: <C-both-long>;
  parameter procID     :: <C-both-long>;
  parameter wdRefNum   :: <C-short*>;
  result value :: <OSErr>;
  c-name: "OpenWD";
  c-modifiers: "pascal";
end;

define inline-only C-function CloseWD
  parameter wdRefNum   :: <C-short>;
  result value :: <OSErr>;
  c-name: "CloseWD";
  c-modifiers: "pascal";
end;

define inline-only C-function GetWDInfo
  parameter wdRefNum   :: <C-short>;
  parameter vRefNum    :: <C-short*>;
  parameter dirID      :: <C-both-long*>;
  parameter procID     :: <C-both-long*>;
  result value :: <OSErr>;
  c-name: "GetWDInfo";
  c-modifiers: "pascal";
end;

define inline-only C-function PBHGetVolParmsSync
  parameter paramBlock :: <HParmBlkPtr>;
  result value :: <OSErr>;
  c-name: "PBHGetVolParmsSync";
  c-modifiers: "pascal";
end;

define inline-only C-function PBHGetVolParmsAsync
  parameter paramBlock :: <HParmBlkPtr>;
  result value :: <OSErr>;
  c-name: "PBHGetVolParmsAsync";
  c-modifiers: "pascal";
end;

define inline-only C-function PBHGetLogInInfoSync
  parameter paramBlock :: <HParmBlkPtr>;
  result value :: <OSErr>;
  c-name: "PBHGetLogInInfoSync";
  c-modifiers: "pascal";
end;

define inline-only C-function PBHGetLogInInfoAsync
  parameter paramBlock :: <HParmBlkPtr>;
  result value :: <OSErr>;
  c-name: "PBHGetLogInInfoAsync";
  c-modifiers: "pascal";
end;

define inline-only C-function PBHGetDirAccessSync
  parameter paramBlock :: <HParmBlkPtr>;
  result value :: <OSErr>;
  c-name: "PBHGetDirAccessSync";
  c-modifiers: "pascal";
end;

define inline-only C-function PBHGetDirAccessAsync
  parameter paramBlock :: <HParmBlkPtr>;
  result value :: <OSErr>;
  c-name: "PBHGetDirAccessAsync";
  c-modifiers: "pascal";
end;

define inline-only C-function PBHSetDirAccessSync
  parameter paramBlock :: <HParmBlkPtr>;
  result value :: <OSErr>;
  c-name: "PBHSetDirAccessSync";
  c-modifiers: "pascal";
end;

define inline-only C-function PBHSetDirAccessAsync
  parameter paramBlock :: <HParmBlkPtr>;
  result value :: <OSErr>;
  c-name: "PBHSetDirAccessAsync";
  c-modifiers: "pascal";
end;

define inline-only C-function PBHMapIDSync
  parameter paramBlock :: <HParmBlkPtr>;
  result value :: <OSErr>;
  c-name: "PBHMapIDSync";
  c-modifiers: "pascal";
end;

define inline-only C-function PBHMapIDAsync
  parameter paramBlock :: <HParmBlkPtr>;
  result value :: <OSErr>;
  c-name: "PBHMapIDAsync";
  c-modifiers: "pascal";
end;

define inline-only C-function PBHMapNameSync
  parameter paramBlock :: <HParmBlkPtr>;
  result value :: <OSErr>;
  c-name: "PBHMapNameSync";
  c-modifiers: "pascal";
end;

define inline-only C-function PBHMapNameAsync
  parameter paramBlock :: <HParmBlkPtr>;
  result value :: <OSErr>;
  c-name: "PBHMapNameAsync";
  c-modifiers: "pascal";
end;

define inline-only C-function PBHCopyFileSync
  parameter paramBlock :: <HParmBlkPtr>;
  result value :: <OSErr>;
  c-name: "PBHCopyFileSync";
  c-modifiers: "pascal";
end;

define inline-only C-function PBHCopyFileAsync
  parameter paramBlock :: <HParmBlkPtr>;
  result value :: <OSErr>;
  c-name: "PBHCopyFileAsync";
  c-modifiers: "pascal";
end;

define inline-only C-function PBHMoveRenameSync
  parameter paramBlock :: <HParmBlkPtr>;
  result value :: <OSErr>;
  c-name: "PBHMoveRenameSync";
  c-modifiers: "pascal";
end;

define inline-only C-function PBHMoveRenameAsync
  parameter paramBlock :: <HParmBlkPtr>;
  result value :: <OSErr>;
  c-name: "PBHMoveRenameAsync";
  c-modifiers: "pascal";
end;

define inline-only C-function PBHOpenDenySync
  parameter paramBlock :: <HParmBlkPtr>;
  result value :: <OSErr>;
  c-name: "PBHOpenDenySync";
  c-modifiers: "pascal";
end;

define inline-only C-function PBHOpenDenyAsync
  parameter paramBlock :: <HParmBlkPtr>;
  result value :: <OSErr>;
  c-name: "PBHOpenDenyAsync";
  c-modifiers: "pascal";
end;

define inline-only C-function PBHOpenRFDenySync
  parameter paramBlock :: <HParmBlkPtr>;
  result value :: <OSErr>;
  c-name: "PBHOpenRFDenySync";
  c-modifiers: "pascal";
end;

define inline-only C-function PBHOpenRFDenyAsync
  parameter paramBlock :: <HParmBlkPtr>;
  result value :: <OSErr>;
  c-name: "PBHOpenRFDenyAsync";
  c-modifiers: "pascal";
end;

define inline-only C-function PBGetXCatInfoSync
  parameter paramBlock :: <XCInfoPBPtr>;
  result value :: <OSErr>;
  c-name: "PBGetXCatInfoSync";
  c-modifiers: "pascal";
end;

define inline-only C-function PBGetXCatInfoAsync
  parameter paramBlock :: <XCInfoPBPtr>;
  result value :: <OSErr>;
  c-name: "PBGetXCatInfoAsync";
  c-modifiers: "pascal";
end;

define inline-only C-function PBExchangeFilesSync
  parameter paramBlock :: <HParmBlkPtr>;
  result value :: <OSErr>;
  c-name: "PBExchangeFilesSync";
  c-modifiers: "pascal";
end;

define inline-only C-function PBExchangeFilesAsync
  parameter paramBlock :: <HParmBlkPtr>;
  result value :: <OSErr>;
  c-name: "PBExchangeFilesAsync";
  c-modifiers: "pascal";
end;

define inline-only C-function PBCreateFileIDRefSync
  parameter paramBlock :: <HParmBlkPtr>;
  result value :: <OSErr>;
  c-name: "PBCreateFileIDRefSync";
  c-modifiers: "pascal";
end;

define inline-only C-function PBCreateFileIDRefAsync
  parameter paramBlock :: <HParmBlkPtr>;
  result value :: <OSErr>;
  c-name: "PBCreateFileIDRefAsync";
  c-modifiers: "pascal";
end;

define inline-only C-function PBResolveFileIDRefSync
  parameter paramBlock :: <HParmBlkPtr>;
  result value :: <OSErr>;
  c-name: "PBResolveFileIDRefSync";
  c-modifiers: "pascal";
end;

define inline-only C-function PBResolveFileIDRefAsync
  parameter paramBlock :: <HParmBlkPtr>;
  result value :: <OSErr>;
  c-name: "PBResolveFileIDRefAsync";
  c-modifiers: "pascal";
end;

define inline-only C-function PBDeleteFileIDRefSync
  parameter paramBlock :: <HParmBlkPtr>;
  result value :: <OSErr>;
  c-name: "PBDeleteFileIDRefSync";
  c-modifiers: "pascal";
end;

define inline-only C-function PBDeleteFileIDRefAsync
  parameter paramBlock :: <HParmBlkPtr>;
  result value :: <OSErr>;
  c-name: "PBDeleteFileIDRefAsync";
  c-modifiers: "pascal";
end;

define inline-only C-function PBGetForeignPrivsSync
  parameter paramBlock :: <HParmBlkPtr>;
  result value :: <OSErr>;
  c-name: "PBGetForeignPrivsSync";
  c-modifiers: "pascal";
end;

define inline-only C-function PBGetForeignPrivsAsync
  parameter paramBlock :: <HParmBlkPtr>;
  result value :: <OSErr>;
  c-name: "PBGetForeignPrivsAsync";
  c-modifiers: "pascal";
end;

define inline-only C-function PBSetForeignPrivsSync
  parameter paramBlock :: <HParmBlkPtr>;
  result value :: <OSErr>;
  c-name: "PBSetForeignPrivsSync";
  c-modifiers: "pascal";
end;

define inline-only C-function PBSetForeignPrivsAsync
  parameter paramBlock :: <HParmBlkPtr>;
  result value :: <OSErr>;
  c-name: "PBSetForeignPrivsAsync";
  c-modifiers: "pascal";
end;

define inline-only C-function PBDTGetPath
  parameter paramBlock :: <DTPBPtr>;
  result value :: <OSErr>;
  c-name: "PBDTGetPath";
  c-modifiers: "pascal";
end;

define inline-only C-function PBDTCloseDown
  parameter paramBlock :: <DTPBPtr>;
  result value :: <OSErr>;
  c-name: "PBDTCloseDown";
  c-modifiers: "pascal";
end;

define inline-only C-function PBDTAddIconSync
  parameter paramBlock :: <DTPBPtr>;
  result value :: <OSErr>;
  c-name: "PBDTAddIconSync";
  c-modifiers: "pascal";
end;

define inline-only C-function PBDTAddIconAsync
  parameter paramBlock :: <DTPBPtr>;
  result value :: <OSErr>;
  c-name: "PBDTAddIconAsync";
  c-modifiers: "pascal";
end;

define inline-only C-function PBDTGetIconSync
  parameter paramBlock :: <DTPBPtr>;
  result value :: <OSErr>;
  c-name: "PBDTGetIconSync";
  c-modifiers: "pascal";
end;

define inline-only C-function PBDTGetIconAsync
  parameter paramBlock :: <DTPBPtr>;
  result value :: <OSErr>;
  c-name: "PBDTGetIconAsync";
  c-modifiers: "pascal";
end;

define inline-only C-function PBDTGetIconInfoSync
  parameter paramBlock :: <DTPBPtr>;
  result value :: <OSErr>;
  c-name: "PBDTGetIconInfoSync";
  c-modifiers: "pascal";
end;

define inline-only C-function PBDTGetIconInfoAsync
  parameter paramBlock :: <DTPBPtr>;
  result value :: <OSErr>;
  c-name: "PBDTGetIconInfoAsync";
  c-modifiers: "pascal";
end;

define inline-only C-function PBDTAddAPPLSync
  parameter paramBlock :: <DTPBPtr>;
  result value :: <OSErr>;
  c-name: "PBDTAddAPPLSync";
  c-modifiers: "pascal";
end;

define inline-only C-function PBDTAddAPPLAsync
  parameter paramBlock :: <DTPBPtr>;
  result value :: <OSErr>;
  c-name: "PBDTAddAPPLAsync";
  c-modifiers: "pascal";
end;

define inline-only C-function PBDTRemoveAPPLSync
  parameter paramBlock :: <DTPBPtr>;
  result value :: <OSErr>;
  c-name: "PBDTRemoveAPPLSync";
  c-modifiers: "pascal";
end;

define inline-only C-function PBDTRemoveAPPLAsync
  parameter paramBlock :: <DTPBPtr>;
  result value :: <OSErr>;
  c-name: "PBDTRemoveAPPLAsync";
  c-modifiers: "pascal";
end;

define inline-only C-function PBDTGetAPPLSync
  parameter paramBlock :: <DTPBPtr>;
  result value :: <OSErr>;
  c-name: "PBDTGetAPPLSync";
  c-modifiers: "pascal";
end;

define inline-only C-function PBDTGetAPPLAsync
  parameter paramBlock :: <DTPBPtr>;
  result value :: <OSErr>;
  c-name: "PBDTGetAPPLAsync";
  c-modifiers: "pascal";
end;

define inline-only C-function PBDTSetCommentSync
  parameter paramBlock :: <DTPBPtr>;
  result value :: <OSErr>;
  c-name: "PBDTSetCommentSync";
  c-modifiers: "pascal";
end;

define inline-only C-function PBDTSetCommentAsync
  parameter paramBlock :: <DTPBPtr>;
  result value :: <OSErr>;
  c-name: "PBDTSetCommentAsync";
  c-modifiers: "pascal";
end;

define inline-only C-function PBDTRemoveCommentSync
  parameter paramBlock :: <DTPBPtr>;
  result value :: <OSErr>;
  c-name: "PBDTRemoveCommentSync";
  c-modifiers: "pascal";
end;

define inline-only C-function PBDTRemoveCommentAsync
  parameter paramBlock :: <DTPBPtr>;
  result value :: <OSErr>;
  c-name: "PBDTRemoveCommentAsync";
  c-modifiers: "pascal";
end;

define inline-only C-function PBDTGetCommentSync
  parameter paramBlock :: <DTPBPtr>;
  result value :: <OSErr>;
  c-name: "PBDTGetCommentSync";
  c-modifiers: "pascal";
end;

define inline-only C-function PBDTGetCommentAsync
  parameter paramBlock :: <DTPBPtr>;
  result value :: <OSErr>;
  c-name: "PBDTGetCommentAsync";
  c-modifiers: "pascal";
end;

define inline-only C-function PBDTFlushSync
  parameter paramBlock :: <DTPBPtr>;
  result value :: <OSErr>;
  c-name: "PBDTFlushSync";
  c-modifiers: "pascal";
end;

define inline-only C-function PBDTFlushAsync
  parameter paramBlock :: <DTPBPtr>;
  result value :: <OSErr>;
  c-name: "PBDTFlushAsync";
  c-modifiers: "pascal";
end;

define inline-only C-function PBDTResetSync
  parameter paramBlock :: <DTPBPtr>;
  result value :: <OSErr>;
  c-name: "PBDTResetSync";
  c-modifiers: "pascal";
end;

define inline-only C-function PBDTResetAsync
  parameter paramBlock :: <DTPBPtr>;
  result value :: <OSErr>;
  c-name: "PBDTResetAsync";
  c-modifiers: "pascal";
end;

define inline-only C-function PBDTGetInfoSync
  parameter paramBlock :: <DTPBPtr>;
  result value :: <OSErr>;
  c-name: "PBDTGetInfoSync";
  c-modifiers: "pascal";
end;

define inline-only C-function PBDTGetInfoAsync
  parameter paramBlock :: <DTPBPtr>;
  result value :: <OSErr>;
  c-name: "PBDTGetInfoAsync";
  c-modifiers: "pascal";
end;

define inline-only C-function PBDTOpenInform
  parameter paramBlock :: <DTPBPtr>;
  result value :: <OSErr>;
  c-name: "PBDTOpenInform";
  c-modifiers: "pascal";
end;

define inline-only C-function PBDTDeleteSync
  parameter paramBlock :: <DTPBPtr>;
  result value :: <OSErr>;
  c-name: "PBDTDeleteSync";
  c-modifiers: "pascal";
end;

define inline-only C-function PBDTDeleteAsync
  parameter paramBlock :: <DTPBPtr>;
  result value :: <OSErr>;
  c-name: "PBDTDeleteAsync";
  c-modifiers: "pascal";
end;

define inline-only C-function PBGetVolMountInfoSize
  parameter paramBlock :: <ParmBlkPtr>;
  result value :: <OSErr>;
  c-name: "PBGetVolMountInfoSize";
  c-modifiers: "pascal";
end;

define inline-only C-function PBGetVolMountInfo
  parameter paramBlock :: <ParmBlkPtr>;
  result value :: <OSErr>;
  c-name: "PBGetVolMountInfo";
  c-modifiers: "pascal";
end;

define inline-only C-function PBVolumeMount
  parameter paramBlock :: <ParmBlkPtr>;
  result value :: <OSErr>;
  c-name: "PBVolumeMount";
  c-modifiers: "pascal";
end;

define inline-only C-function FSMakeFSSpec
  parameter vRefNum    :: <C-short>;
  parameter dirID      :: <C-both-long>;
  parameter fileName   :: <ConstStr255Param>;
  parameter spec       :: <FSSpec*>;
  result value :: <OSErr>;
  c-name: "FSMakeFSSpec";
  c-modifiers: "pascal";
end;

define inline-only C-function FSpOpenDF
  parameter spec       ::  /* const */ <FSSpec*>;
  parameter permission :: <SInt8>;
  parameter refNum     :: <C-short*>;
  result value :: <OSErr>;
  c-name: "FSpOpenDF";
  c-modifiers: "pascal";
end;

define inline-only C-function FSpOpenRF
  parameter spec       ::  /* const */ <FSSpec*>;
  parameter permission :: <SInt8>;
  parameter refNum     :: <C-short*>;
  result value :: <OSErr>;
  c-name: "FSpOpenRF";
  c-modifiers: "pascal";
end;

define inline-only C-function FSpCreate
  parameter spec       ::  /* const */ <FSSpec*>;
  parameter creator    :: <OSType>;
  parameter fileType   :: <OSType>;
  parameter scriptTag  :: <ScriptCode>;
  result value :: <OSErr>;
  c-name: "FSpCreate";
  c-modifiers: "pascal";
end;

define inline-only C-function FSpDirCreate
  parameter spec       ::  /* const */ <FSSpec*>;
  parameter scriptTag  :: <ScriptCode>;
  parameter createdDirID :: <C-both-long*>;
  result value :: <OSErr>;
  c-name: "FSpDirCreate";
  c-modifiers: "pascal";
end;

define inline-only C-function FSpDelete
  parameter spec       ::  /* const */ <FSSpec*>;
  result value :: <OSErr>;
  c-name: "FSpDelete";
  c-modifiers: "pascal";
end;

define inline-only C-function FSpGetFInfo
  parameter spec       ::  /* const */ <FSSpec*>;
  parameter fndrInfo   :: <FInfo*>;
  result value :: <OSErr>;
  c-name: "FSpGetFInfo";
  c-modifiers: "pascal";
end;

define inline-only C-function FSpSetFInfo
  parameter spec       ::  /* const */ <FSSpec*>;
  parameter fndrInfo   ::  /* const */ <FInfo*>;
  result value :: <OSErr>;
  c-name: "FSpSetFInfo";
  c-modifiers: "pascal";
end;

define inline-only C-function FSpSetFLock
  parameter spec       ::  /* const */ <FSSpec*>;
  result value :: <OSErr>;
  c-name: "FSpSetFLock";
  c-modifiers: "pascal";
end;

define inline-only C-function FSpRstFLock
  parameter spec       ::  /* const */ <FSSpec*>;
  result value :: <OSErr>;
  c-name: "FSpRstFLock";
  c-modifiers: "pascal";
end;

define inline-only C-function FSpRename
  parameter spec       ::  /* const */ <FSSpec*>;
  parameter newName    :: <ConstStr255Param>;
  result value :: <OSErr>;
  c-name: "FSpRename";
  c-modifiers: "pascal";
end;

define inline-only C-function FSpCatMove
  parameter source     ::  /* const */ <FSSpec*>;
  parameter dest       ::  /* const */ <FSSpec*>;
  result value :: <OSErr>;
  c-name: "FSpCatMove";
  c-modifiers: "pascal";
end;

define inline-only C-function FSpExchangeFiles
  parameter source     ::  /* const */ <FSSpec*>;
  parameter dest       ::  /* const */ <FSSpec*>;
  result value :: <OSErr>;
  c-name: "FSpExchangeFiles";
  c-modifiers: "pascal";
end;

define inline-only C-function PBShareSync
  parameter paramBlock :: <HParmBlkPtr>;
  result value :: <OSErr>;
  c-name: "PBShareSync";
  c-modifiers: "pascal";
end;

define inline-only C-function PBShareAsync
  parameter paramBlock :: <HParmBlkPtr>;
  result value :: <OSErr>;
  c-name: "PBShareAsync";
  c-modifiers: "pascal";
end;

define inline-only C-function PBUnshareSync
  parameter paramBlock :: <HParmBlkPtr>;
  result value :: <OSErr>;
  c-name: "PBUnshareSync";
  c-modifiers: "pascal";
end;

define inline-only C-function PBUnshareAsync
  parameter paramBlock :: <HParmBlkPtr>;
  result value :: <OSErr>;
  c-name: "PBUnshareAsync";
  c-modifiers: "pascal";
end;

define inline-only C-function PBGetUGEntrySync
  parameter paramBlock :: <HParmBlkPtr>;
  result value :: <OSErr>;
  c-name: "PBGetUGEntrySync";
  c-modifiers: "pascal";
end;

define inline-only C-function PBGetUGEntryAsync
  parameter paramBlock :: <HParmBlkPtr>;
  result value :: <OSErr>;
  c-name: "PBGetUGEntryAsync";
  c-modifiers: "pascal";
end;

