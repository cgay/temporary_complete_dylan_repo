
$D2CFLAGS = '-L../../runtime/c-code -L../../runtime/gc '
    . '-L../../runtime/dylan -L../../runtime/streams '
    . '-L../../runtime/standard-io '
    . '-L../../runtime/print -L../../runtime/format '
    . '-L../../runtime/random -L../../runtime/coll-ext '
    . '-L../../runtime/string-ext';
$CPPFLAGS = '-I$(SRCROOT)/runtime';

push(@compile_dependencies, ' parser.dylan ');
if ($stage2) {
    push(@compile_dependencies, 'compiler-parser.lib.du libparser.a');
}
else {
    push(@compile_dependencies, 'parserlib.dbc');
    push(@files_to_clean, '*.dbc', 'parser.dylan');
    $D2C = 'mindy -f $(BUILDROOT)/compiler/main/d2c.dbc';
    print <<'EOF';

.PHONY: d2c-compile

d2c-compile: compiler-parser.lib.du libparser.a

MC = mindycomp
MINDYFLAGS = -lcompiler-parser
MINDY = mindy

%.dbc: %.dylan
	$(MC) ${MINDYFLAGS} -o $@ $(subst ./,$(BUILDDIR)/,$(findstring ./,$(dir $<)))$<

OBJS = \
	parser-exports.dbc \
	tokenize.dbc \
	srcutil.dbc \
	lexer.dbc \
	fragments.dbc \
	parse-tree.dbc \
	support.dbc \
	parser.dbc \
	macros.dbc


parserlib.dbc: ${OBJS}
	cat $^ > $@

EOF
}

do emit_library_rule(
    'Parser', '$(BUILDROOT)/force.timestamp', '-L../base'
);

print <<'EOF';
parser.dylan: parsergen.lisp parser.input do-parsergen.lisp
	cmucl $(word 1, $^) $(word 2, $^) -load $(word 3, $^)
EOF
