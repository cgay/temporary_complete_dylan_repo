Module:    carbon-interface
Copyright:    Original Code is Copyright (c) 1995-2004 Functional Objects, Inc.
              All rights reserved.
License:      Functional Objects Library Public License Version 1.0
Dual-license: GNU Lesser General Public License
Warranty:     Distributed WITHOUT WARRANTY OF ANY KIND

// This file is automatically generated from "Processes.h"; do not edit.


define C-struct <ProcessSerialNumber>
  sealed inline-only slot highLongOfPSN-value :: <C-both-unsigned-long>;
  sealed inline-only slot lowLongOfPSN-value :: <C-both-unsigned-long>;
  pack: 2;
  c-name: "struct ProcessSerialNumber";
end;
define C-pointer-type <ProcessSerialNumber*> => <ProcessSerialNumber>;
define C-pointer-type <ProcessSerialNumber**> => <ProcessSerialNumber*>;
define C-pointer-type <ProcessSerialNumberPtr> => <ProcessSerialNumber>;
// unnamed enum:
define inline-only constant $kNoProcess                = 0;
define inline-only constant $kSystemProcess            = 1;
define inline-only constant $kCurrentProcess           = 2;

define inline constant <LaunchFlags> = <C-unsigned-short>;
define C-pointer-type <LaunchFlags*> => <LaunchFlags>;
define C-pointer-type <LaunchFlags**> => <LaunchFlags*>;
// unnamed enum:
define inline-only constant $launchContinue            = #x4000;
define inline-only constant $launchNoFileFlags         = #x0800;
define inline-only constant $launchUseMinimum          = #x0400;
define inline-only constant $launchDontSwitch          = #x0200;
define inline-only constant $launchAllow24Bit          = #x0100;
define inline-only constant $launchInhibitDaemon       = #x0080;


define C-struct <AppParameters>
  sealed inline-only slot theMsgEvent-value :: <EventRecord>;
  sealed inline-only slot eventRefCon-value :: <C-both-unsigned-long>;
  sealed inline-only slot messageLength-value :: <C-both-unsigned-long>;
  pack: 2;
  c-name: "struct AppParameters";
end;
define C-pointer-type <AppParameters*> => <AppParameters>;
define C-pointer-type <AppParameters**> => <AppParameters*>;
define C-pointer-type <AppParametersPtr> => <AppParameters>;

define C-struct <LaunchParamBlockRec>
  sealed inline-only slot reserved1-value :: <C-both-unsigned-long>;
  sealed inline-only slot reserved2-value :: <C-unsigned-short>;
  sealed inline-only slot launchBlockID-value :: <C-unsigned-short>;
  sealed inline-only slot launchEPBLength-value :: <C-both-unsigned-long>;
  sealed inline-only slot launchFileFlags-value :: <C-unsigned-short>;
  sealed inline-only slot launchControlFlags-value :: <LaunchFlags>;
  sealed inline-only slot launchAppSpec-value :: <FSSpecPtr>;
  sealed inline-only slot launchProcessSN-value :: <ProcessSerialNumber>;
  sealed inline-only slot launchPreferredSize-value :: <C-both-unsigned-long>;
  sealed inline-only slot launchMinimumSize-value :: <C-both-unsigned-long>;
  sealed inline-only slot launchAvailableSize-value :: <C-both-unsigned-long>;
  sealed inline-only slot launchAppParameters-value :: <AppParametersPtr>;
  pack: 2;
  c-name: "struct LaunchParamBlockRec";
end;
define C-pointer-type <LaunchParamBlockRec*> => <LaunchParamBlockRec>;
define C-pointer-type <LaunchParamBlockRec**> => <LaunchParamBlockRec*>;
define C-pointer-type <LaunchPBPtr> => <LaunchParamBlockRec>;
// unnamed enum:
define inline-only constant $extendedBlock             = #x4C43;
define inline-only constant $extendedBlockLen          = size-of(<LaunchParamBlockRec>) - 12;

// unnamed enum:
define inline-only constant $modeLaunchDontSwitch      = #x00040000;
define inline-only constant $modeDeskAccessory         = #x00020000;
define inline-only constant $modeMultiLaunch           = #x00010000;
define inline-only constant $modeNeedSuspendResume     = #x00004000;
define inline-only constant $modeCanBackground         = #x00001000;
define inline-only constant $modeDoesActivateOnFGSwitch = #x00000800;
define inline-only constant $modeOnlyBackground        = #x00000400;
define inline-only constant $modeGetFrontClicks        = #x00000200;
define inline-only constant $modeGetAppDiedMsg         = #x00000100;
define inline-only constant $mode32BitCompatible       = #x00000080;
define inline-only constant $modeHighLevelEventAware   = #x00000040;
define inline-only constant $modeLocalAndRemoteHLEvents = #x00000020;
define inline-only constant $modeStationeryAware       = #x00000010;
define inline-only constant $modeUseTextEditServices   = #x00000008;
define inline-only constant $modeDisplayManagerAware   = #x00000004;
define inline-only constant $modeGuardPageAware        = #x00000002;


define C-struct <ProcessInfoRec>
  sealed inline-only slot processInfoLength-value :: <C-both-unsigned-long>;
  sealed inline-only slot processName-value :: <StringPtr>;
  sealed inline-only slot processNumber-value :: <ProcessSerialNumber>;
  sealed inline-only slot processType-value :: <C-both-unsigned-long>;
  sealed inline-only slot processSignature-value :: <OSType>;
  sealed inline-only slot processMode-value :: <C-both-unsigned-long>;
  sealed inline-only slot processLocation-value :: <Ptr>;
  sealed inline-only slot processSize-value :: <C-both-unsigned-long>;
  sealed inline-only slot processFreeMem-value :: <C-both-unsigned-long>;
  sealed inline-only slot processLauncher-value :: <ProcessSerialNumber>;
  sealed inline-only slot processLaunchDate-value :: <C-both-unsigned-long>;
  sealed inline-only slot processActiveTime-value :: <C-both-unsigned-long>;
  sealed inline-only slot processAppSpec-value :: <FSSpecPtr>;
  pack: 2;
  c-name: "struct ProcessInfoRec";
end;
define C-pointer-type <ProcessInfoRec*> => <ProcessInfoRec>;
define C-pointer-type <ProcessInfoRec**> => <ProcessInfoRec*>;
define C-pointer-type <ProcessInfoRecPtr> => <ProcessInfoRec>;

define inline-only C-function LaunchApplication
  parameter LaunchParams :: <LaunchPBPtr>;
  result value :: <OSErr>;
  c-name: "LaunchApplication";
  c-modifiers: "pascal";
end;

define inline-only C-function LaunchDeskAccessory
  parameter pFileSpec  ::  /* const */ <FSSpec*>;
  parameter pDAName    :: <ConstStr255Param>;
  result value :: <OSErr>;
  c-name: "LaunchDeskAccessory";
  c-modifiers: "pascal";
end;

define inline-only C-function MacGetCurrentProcess
  parameter PSN        :: <ProcessSerialNumber*>;
  result value :: <OSErr>;
  c-name: "MacGetCurrentProcess";
  c-modifiers: "pascal";
end;

define inline-only C-function GetFrontProcess
  parameter PSN        :: <ProcessSerialNumber*>;
  result value :: <OSErr>;
  c-name: "GetFrontProcess";
  c-modifiers: "pascal";
end;

define inline-only C-function GetNextProcess
  parameter PSN        :: <ProcessSerialNumber*>;
  result value :: <OSErr>;
  c-name: "GetNextProcess";
  c-modifiers: "pascal";
end;

define inline-only C-function GetProcessInformation
  parameter PSN        ::  /* const */ <ProcessSerialNumber*>;
  parameter info       :: <ProcessInfoRec*>;
  result value :: <OSErr>;
  c-name: "GetProcessInformation";
  c-modifiers: "pascal";
end;

define inline-only C-function SetFrontProcess
  parameter PSN        ::  /* const */ <ProcessSerialNumber*>;
  result value :: <OSErr>;
  c-name: "SetFrontProcess";
  c-modifiers: "pascal";
end;

define inline-only C-function WakeUpProcess
  parameter PSN        ::  /* const */ <ProcessSerialNumber*>;
  result value :: <OSErr>;
  c-name: "WakeUpProcess";
  c-modifiers: "pascal";
end;

define inline-only C-function SameProcess
  parameter PSN1       ::  /* const */ <ProcessSerialNumber*>;
  parameter PSN2       ::  /* const */ <ProcessSerialNumber*>;
  parameter result     :: <MacBoolean*>;
  result value :: <OSErr>;
  c-name: "SameProcess";
  c-modifiers: "pascal";
end;

define inline-only C-function ExitToShell
  c-name: "ExitToShell";
  c-modifiers: "pascal";
end;

