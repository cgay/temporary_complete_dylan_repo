Module:    OLE
Copyright:    Original Code is Copyright (c) 1995-2004 Functional Objects, Inc.
              All rights reserved.
License:      See License.txt in this distribution for details.
Warranty:     Distributed WITHOUT WARRANTY OF ANY KIND

// This file is automatically generated from winerror.h; do not edit.


// Invalid OLEVERB structure
define inline-only constant $OLE-E-OLEVERB =
	as(<machine-word>, #x80040000);

// Invalid advise flags
define inline-only constant $OLE-E-ADVF =
	as(<machine-word>, #x80040001);

// Can't enumerate any more, because the associated data is missing
define inline-only constant $OLE-E-ENUM-NOMORE =
	as(<machine-word>, #x80040002);

// This implementation doesn't take advises
define inline-only constant $OLE-E-ADVISENOTSUPPORTED =
	as(<machine-word>, #x80040003);

// There is no connection for this connection ID
define inline-only constant $OLE-E-NOCONNECTION =
	as(<machine-word>, #x80040004);

// Need to run the object to perform this operation
define inline-only constant $OLE-E-NOTRUNNING =
	as(<machine-word>, #x80040005);

// There is no cache to operate on
define inline-only constant $OLE-E-NOCACHE =
	as(<machine-word>, #x80040006);

// Uninitialized object
define inline-only constant $OLE-E-BLANK =
	as(<machine-word>, #x80040007);

// Linked object's source class has changed
define inline-only constant $OLE-E-CLASSDIFF =
	as(<machine-word>, #x80040008);

// Not able to get the moniker of the object
define inline-only constant $OLE-E-CANT-GETMONIKER =
	as(<machine-word>, #x80040009);

// Not able to bind to the source
define inline-only constant $OLE-E-CANT-BINDTOSOURCE =
	as(<machine-word>, #x8004000A);

// Object is static; operation not allowed
define inline-only constant $OLE-E-STATIC =
	as(<machine-word>, #x8004000B);

// User canceled out of save dialog
define inline-only constant $OLE-E-PROMPTSAVECANCELLED =
	as(<machine-word>, #x8004000C);

// Invalid rectangle
define inline-only constant $OLE-E-INVALIDRECT =
	as(<machine-word>, #x8004000D);

// compobj.dll is too old for the ole2.dll initialized
define inline-only constant $OLE-E-WRONGCOMPOBJ =
	as(<machine-word>, #x8004000E);

// Invalid window handle
define inline-only constant $OLE-E-INVALIDHWND =
	as(<machine-word>, #x8004000F);

// Object is not in any of the inplace active states
define inline-only constant $OLE-E-NOT-INPLACEACTIVE =
	as(<machine-word>, #x80040010);

// Not able to convert object
define inline-only constant $OLE-E-CANTCONVERT =
	as(<machine-word>, #x80040011);

// Not able to perform the operation because object is not given storage yet
define inline-only constant $OLE-E-NOSTORAGE =
	as(<machine-word>, #x80040012);

// Invalid FORMATETC structure
define inline-only constant $DV-E-FORMATETC =
	as(<machine-word>, #x80040064);

// Invalid DVTARGETDEVICE structure
define inline-only constant $DV-E-DVTARGETDEVICE =
	as(<machine-word>, #x80040065);

// Invalid STDGMEDIUM structure
define inline-only constant $DV-E-STGMEDIUM =
	as(<machine-word>, #x80040066);

// Invalid STATDATA structure
define inline-only constant $DV-E-STATDATA =
	as(<machine-word>, #x80040067);

// Invalid lindex
define inline-only constant $DV-E-LINDEX =
	as(<machine-word>, #x80040068);

// Invalid tymed
define inline-only constant $DV-E-TYMED =
	as(<machine-word>, #x80040069);

// Invalid clipboard format
define inline-only constant $DV-E-CLIPFORMAT =
	as(<machine-word>, #x8004006A);

// Invalid aspect(s)
define inline-only constant $DV-E-DVASPECT =
	as(<machine-word>, #x8004006B);

// tdSize parameter of the DVTARGETDEVICE structure is invalid
define inline-only constant $DV-E-DVTARGETDEVICE-SIZE =
	as(<machine-word>, #x8004006C);

// Object doesn't support IViewObject interface
define inline-only constant $DV-E-NOIVIEWOBJECT =
	as(<machine-word>, #x8004006D);

// Trying to revoke a drop target that has not been registered
define inline-only constant $DRAGDROP-E-NOTREGISTERED =
	as(<machine-word>, #x80040100);

// This window has already been registered as a drop target
define inline-only constant $DRAGDROP-E-ALREADYREGISTERED =
	as(<machine-word>, #x80040101);

// Invalid window handle
define inline-only constant $DRAGDROP-E-INVALIDHWND =
	as(<machine-word>, #x80040102);

// Error drawing view
define inline-only constant $VIEW-E-DRAW =
	as(<machine-word>, #x80040140);

// CATID does not exist
define inline-only constant $CAT-E-CATIDNOEXIST =
	as(<machine-word>, #x80040160);

// Description not found
define inline-only constant $CAT-E-NODESCRIPTION =
	as(<machine-word>, #x80040161);

// No package in Class Store meets this criteria
define inline-only constant $CS-E-PACKAGE-NOTFOUND =
	as(<machine-word>, #x80040164);

// Deleting this will break referential integrity
define inline-only constant $CS-E-NOT-DELETABLE =
	as(<machine-word>, #x80040165);

// No such CLSID in Class Store
define inline-only constant $CS-E-CLASS-NOTFOUND =
	as(<machine-word>, #x80040166);

// The Class Store is corrupted or has a version that is no more supported
define inline-only constant $CS-E-INVALID-VERSION =
	as(<machine-word>, #x80040167);

// No such Class Store
define inline-only constant $CS-E-NO-CLASSSTORE =
	as(<machine-word>, #x80040168);

// Cache not updated
define inline-only constant $CACHE-E-NOCACHE-UPDATED =
	as(<machine-word>, #x80040170);

// No verbs for OLE object
define inline-only constant $OLEOBJ-E-NOVERBS =
	as(<machine-word>, #x80040180);

// Invalid verb for OLE object
define inline-only constant $OLEOBJ-E-INVALIDVERB =
	as(<machine-word>, #x80040181);

// Undo is not available
define inline-only constant $INPLACE-E-NOTUNDOABLE =
	as(<machine-word>, #x800401A0);

// Space for tools is not available
define inline-only constant $INPLACE-E-NOTOOLSPACE =
	as(<machine-word>, #x800401A1);

// OLESTREAM Get method failed
define inline-only constant $CONVERT10-E-OLESTREAM-GET =
	as(<machine-word>, #x800401C0);

// OLESTREAM Put method failed
define inline-only constant $CONVERT10-E-OLESTREAM-PUT =
	as(<machine-word>, #x800401C1);

// Contents of the OLESTREAM not in correct format
define inline-only constant $CONVERT10-E-OLESTREAM-FMT =
	as(<machine-word>, #x800401C2);

// There was an error in a Windows GDI call while converting the bitmap to a DIB
define inline-only constant $CONVERT10-E-OLESTREAM-BITMAP-TO-DIB =
	as(<machine-word>, #x800401C3);

// Contents of the IStorage not in correct format
define inline-only constant $CONVERT10-E-STG-FMT =
	as(<machine-word>, #x800401C4);

// Contents of IStorage is missing one of the standard streams
define inline-only constant $CONVERT10-E-STG-NO-STD-STREAM =
	as(<machine-word>, #x800401C5);

// There was an error in a Windows GDI call while converting the DIB to a bitmap.
define inline-only constant $CONVERT10-E-STG-DIB-TO-BITMAP =
	as(<machine-word>, #x800401C6);

// OpenClipboard Failed
define inline-only constant $CLIPBRD-E-CANT-OPEN =
	as(<machine-word>, #x800401D0);

// EmptyClipboard Failed
define inline-only constant $CLIPBRD-E-CANT-EMPTY =
	as(<machine-word>, #x800401D1);

// SetClipboard Failed
define inline-only constant $CLIPBRD-E-CANT-SET =
	as(<machine-word>, #x800401D2);

// Data on clipboard is invalid
define inline-only constant $CLIPBRD-E-BAD-DATA =
	as(<machine-word>, #x800401D3);

// CloseClipboard Failed
define inline-only constant $CLIPBRD-E-CANT-CLOSE =
	as(<machine-word>, #x800401D4);
define inline-only constant $OLE-S-USEREG =
	as(<machine-word>, #x00040000);
define inline-only constant $OLE-S-STATIC =
	as(<machine-word>, #x00040001);
define inline-only constant $OLE-S-MAC-CLIPFORMAT =
	as(<machine-word>, #x00040002);
define inline-only constant $DRAGDROP-S-DROP =
	as(<machine-word>, #x00040100);
define inline-only constant $DRAGDROP-S-CANCEL =
	as(<machine-word>, #x00040101);
define inline-only constant $DRAGDROP-S-USEDEFAULTCURSORS =
	as(<machine-word>, #x00040102);
define inline-only constant $DATA-S-SAMEFORMATETC =
	as(<machine-word>, #x00040130);
define inline-only constant $VIEW-S-ALREADY-FROZEN =
	as(<machine-word>, #x00040140);
define inline-only constant $CACHE-S-FORMATETC-NOTSUPPORTED =
	as(<machine-word>, #x00040170);
define inline-only constant $CACHE-S-SAMECACHE =
	as(<machine-word>, #x00040171);
define inline-only constant $CACHE-S-SOMECACHES-NOTUPDATED =
	as(<machine-word>, #x00040172);
define inline-only constant $OLEOBJ-S-INVALIDVERB =
	as(<machine-word>, #x00040180);
define inline-only constant $OLEOBJ-S-CANNOT-DOVERB-NOW =
	as(<machine-word>, #x00040181);
define inline-only constant $OLEOBJ-S-INVALIDHWND =
	as(<machine-word>, #x00040182);
define inline-only constant $INPLACE-S-TRUNCATED =
	as(<machine-word>, #x000401A0);
define inline-only constant $CONVERT10-S-NO-PRESENTATION =
	as(<machine-word>, #x000401C0);

// An invalid root block pointer was specified
define inline-only constant $MEM-E-INVALID-ROOT =
	as(<machine-word>, #x80080009);

// An allocation chain contained an invalid link pointer
define inline-only constant $MEM-E-INVALID-LINK =
	as(<machine-word>, #x80080010);

// The requested allocation size was too large
define inline-only constant $MEM-E-INVALID-SIZE =
	as(<machine-word>, #x80080011);
