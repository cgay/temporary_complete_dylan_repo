Module:    WIN32-Automation
Copyright:    Original Code is Copyright (c) 1995-2004 Functional Objects, Inc.
              All rights reserved.
License:      See License.txt in this distribution for details.
Warranty:     Distributed WITHOUT WARRANTY OF ANY KIND

// This file is automatically generated from winerror.h; do not edit.


// Unknown interface.
define constant $DISP-E-UNKNOWNINTERFACE =
	as(<machine-word>, #x80020001);

// Member not found.
define constant $DISP-E-MEMBERNOTFOUND =
	as(<machine-word>, #x80020003);

// Parameter not found.
define constant $DISP-E-PARAMNOTFOUND =
	as(<machine-word>, #x80020004);

// Type mismatch.
define constant $DISP-E-TYPEMISMATCH = as(<machine-word>, #x80020005);

// Unknown name.
define constant $DISP-E-UNKNOWNNAME  = as(<machine-word>, #x80020006);

// No named arguments.
define constant $DISP-E-NONAMEDARGS  = as(<machine-word>, #x80020007);

// Bad variable type.
define constant $DISP-E-BADVARTYPE   = as(<machine-word>, #x80020008);

// Exception occurred.
define constant $DISP-E-EXCEPTION    = as(<machine-word>, #x80020009);

// Out of present range.
define constant $DISP-E-OVERFLOW     = as(<machine-word>, #x8002000A);

// Invalid index.
define constant $DISP-E-BADINDEX     = as(<machine-word>, #x8002000B);

// Unknown language.
define constant $DISP-E-UNKNOWNLCID  = as(<machine-word>, #x8002000C);

// Memory is locked.
define constant $DISP-E-ARRAYISLOCKED =
	as(<machine-word>, #x8002000D);

// Invalid number of parameters.
define constant $DISP-E-BADPARAMCOUNT =
	as(<machine-word>, #x8002000E);

// Parameter not optional.
define constant $DISP-E-PARAMNOTOPTIONAL =
	as(<machine-word>, #x8002000F);

// Invalid callee.
define constant $DISP-E-BADCALLEE    = as(<machine-word>, #x80020010);

// Does not support a collection.
define constant $DISP-E-NOTACOLLECTION =
	as(<machine-word>, #x80020011);

// Division by zero.
define constant $DISP-E-DIVBYZERO    = as(<machine-word>, #x80020012);

// Buffer too small.
define constant $TYPE-E-BUFFERTOOSMALL =
	as(<machine-word>, #x80028016);

// Field name not defined in the record.
define constant $TYPE-E-FIELDNOTFOUND =
	as(<machine-word>, #x80028017);

// Old format or invalid type library.
define constant $TYPE-E-INVDATAREAD  = as(<machine-word>, #x80028018);

// Old format or invalid type library.
define constant $TYPE-E-UNSUPFORMAT  = as(<machine-word>, #x80028019);

// Error accessing the OLE registry.
define constant $TYPE-E-REGISTRYACCESS =
	as(<machine-word>, #x8002801C);

// Library not registered.
define constant $TYPE-E-LIBNOTREGISTERED =
	as(<machine-word>, #x8002801D);

// Bound to unknown type.
define constant $TYPE-E-UNDEFINEDTYPE =
	as(<machine-word>, #x80028027);

// Qualified name disallowed.
define constant $TYPE-E-QUALIFIEDNAMEDISALLOWED =
	as(<machine-word>, #x80028028);

// Invalid forward reference, or reference to uncompiled type.
define constant $TYPE-E-INVALIDSTATE = as(<machine-word>, #x80028029);

// Type mismatch.
define constant $TYPE-E-WRONGTYPEKIND =
	as(<machine-word>, #x8002802A);

// Element not found.
define constant $TYPE-E-ELEMENTNOTFOUND =
	as(<machine-word>, #x8002802B);

// Ambiguous name.
define constant $TYPE-E-AMBIGUOUSNAME =
	as(<machine-word>, #x8002802C);

// Name already exists in the library.
define constant $TYPE-E-NAMECONFLICT = as(<machine-word>, #x8002802D);

// Unknown LCID.
define constant $TYPE-E-UNKNOWNLCID  = as(<machine-word>, #x8002802E);

// Function not defined in specified DLL.
define constant $TYPE-E-DLLFUNCTIONNOTFOUND =
	as(<machine-word>, #x8002802F);

// Wrong module kind for the operation.
define constant $TYPE-E-BADMODULEKIND =
	as(<machine-word>, #x800288BD);

// Size may not exceed 64K.
define constant $TYPE-E-SIZETOOBIG   = as(<machine-word>, #x800288C5);

// Duplicate ID in inheritance hierarchy.
define constant $TYPE-E-DUPLICATEID  = as(<machine-word>, #x800288C6);

// Incorrect inheritance depth in standard OLE hmember.
define constant $TYPE-E-INVALIDID    = as(<machine-word>, #x800288CF);

// Type mismatch.
define constant $TYPE-E-TYPEMISMATCH = as(<machine-word>, #x80028CA0);

// Invalid number of arguments.
define constant $TYPE-E-OUTOFBOUNDS  = as(<machine-word>, #x80028CA1);

// I/O Error.
define constant $TYPE-E-IOERROR      = as(<machine-word>, #x80028CA2);

// Error creating unique tmp file.
define constant $TYPE-E-CANTCREATETMPFILE =
	as(<machine-word>, #x80028CA3);

// Error loading type library/DLL.
define constant $TYPE-E-CANTLOADLIBRARY =
	as(<machine-word>, #x80029C4A);

// Inconsistent property functions.
define constant $TYPE-E-INCONSISTENTPROPFUNCS =
	as(<machine-word>, #x80029C83);

// Circular dependency between types/modules.
define constant $TYPE-E-CIRCULARTYPE = as(<machine-word>, #x80029C84);
