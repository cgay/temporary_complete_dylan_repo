Module:    Ole-Controls
Copyright:    Original Code is Copyright (c) 1995-2004 Functional Objects, Inc.
              All rights reserved.
License:      See License.txt in this distribution for details.
Warranty:     Distributed WITHOUT WARRANTY OF ANY KIND

// This file is automatically generated from "ocidl.h"; do not edit.

// enum UASFLAGS:
define inline-only constant $UAS-NORMAL = 0;
define inline-only constant $UAS-BLOCKED = #x1;
define inline-only constant $UAS-NOPARENTENABLE = #x2;
define inline-only constant $UAS-MASK = #x3;

// enum READYSTATE:
define inline-only constant $READYSTATE-UNINITIALIZED = 0;
define inline-only constant $READYSTATE-LOADING = 1;
define inline-only constant $READYSTATE-LOADED = 2;
define inline-only constant $READYSTATE-INTERACTIVE = 3;
define inline-only constant $READYSTATE-COMPLETE = 4;

define inline constant <LPENUMCONNECTIONS> = <Interface> /* IEnumConnections */;

define C-struct <CONNECTDATA>
  sealed inline-only slot pUnk-value     :: <Interface> /* IUnknown */;
  sealed inline-only slot dwCookie-value :: <DWORD>;
  pointer-type-name: <LPCONNECTDATA>;
  c-name: "struct tagCONNECTDATA";
end C-struct <CONNECTDATA>;
define inline constant <LPCONNECTIONPOINT> = <Interface> /* IConnectionPoint */;
define inline constant <LPENUMCONNECTIONPOINTS> = <Interface> /* IEnumConnectionPoints */;
define inline constant <LPCONNECTIONPOINTCONTAINER> = <Interface> /* IConnectionPointContainer */;

define C-struct <LICINFO>
  sealed inline-only slot cbLicInfo-value :: <LONG>;
  sealed inline-only slot fRuntimeKeyAvail-value :: <BOOL>;
  sealed inline-only slot fLicVerified-value :: <BOOL>;
  pointer-type-name: <LPLICINFO>;
  c-name: "struct tagLICINFO";
end C-struct <LICINFO>;
define inline constant <LPPROVIDECLASSINFO> = <Interface> /* IProvideClassInfo */;
// enum GUIDKIND:
define inline-only constant $GUIDKIND-DEFAULT-SOURCE-DISP-IID = 1;

define inline constant <LPOLECONTROL> = <Interface> /* IOleControl */;

define C-struct <CONTROLINFO>
  sealed inline-only slot cb-value       :: <ULONG>;
  sealed inline-only slot hAccel-value   :: <HACCEL>;
  sealed inline-only slot cAccel-value   :: <USHORT>;
  sealed inline-only slot dwFlags-value  :: <DWORD>;
  pointer-type-name: <LPCONTROLINFO>;
  c-name: "struct tagCONTROLINFO";
end C-struct <CONTROLINFO>;
// enum CTRLINFO:
define inline-only constant $CTRLINFO-EATS-RETURN = 1;
define inline-only constant $CTRLINFO-EATS-ESCAPE = 2;

define inline constant <LPOLECONTROLSITE> = <Interface> /* IOleControlSite */;

define C-struct <POINTF>
  sealed inline-only slot x-value        :: <C-FLOAT>;
  sealed inline-only slot y-value        :: <C-FLOAT>;
  pointer-type-name: <LPPOINTF>;
  c-name: "struct tagPOINTF";
end C-struct <POINTF>;
// enum XFORMCOORDS:
define inline-only constant $XFORMCOORDS-POSITION = #x1;
define inline-only constant $XFORMCOORDS-SIZE = #x2;
define inline-only constant $XFORMCOORDS-HIMETRICTOCONTAINER = #x4;
define inline-only constant $XFORMCOORDS-CONTAINERTOHIMETRIC = #x8;
define inline-only constant $XFORMCOORDS-EVENTCOMPAT = #x10;

define inline constant <LPPROPERTYPAGE> = <Interface> /* IPropertyPage */;

define C-struct <PROPPAGEINFO>
  sealed inline-only slot cb-value       :: <ULONG>;
  sealed inline-only slot pszTitle-value :: <LPOLESTR>;
  sealed inline-only slot size-value     :: <SIZE>;
  sealed inline-only slot pszDocString-value :: <LPOLESTR>;
  sealed inline-only slot pszHelpFile-value :: <LPOLESTR>;
  sealed inline-only slot dwHelpContext-value :: <DWORD>;
  pointer-type-name: <LPPROPPAGEINFO>;
  c-name: "struct tagPROPPAGEINFO";
end C-struct <PROPPAGEINFO>;
define inline constant <LPPROPERTYPAGESITE> = <Interface> /* IPropertyPageSite */;
// enum PROPPAGESTATUS:
define inline-only constant $PROPPAGESTATUS-DIRTY = #x1;
define inline-only constant $PROPPAGESTATUS-VALIDATE = #x2;
define inline-only constant $PROPPAGESTATUS-CLEAN = #x4;

define inline constant <LPSPECIFYPROPERTYPAGES> = <Interface> /* ISpecifyPropertyPages */;

define C-struct <CAUUID>
  sealed inline-only slot cElems-value   :: <ULONG>;
  sealed inline-only slot pElems-value   :: <LPGUID>;
  pointer-type-name: <LPCAUUID>;
  c-name: "struct tagCAUUID";
end C-struct <CAUUID>;
define inline constant <LPPERSISTMEMORY> = <Interface> /* IPersistMemory */;
define inline constant <LPPERSISTSTREAMINIT> = <Interface> /* IPersistStreamInit */;
define inline constant <LPPERSISTPROPERTYBAG> = <Interface> /* IPersistPropertyBag */;
define inline constant <LPSIMPLEFRAMESITE> = <Interface> /* ISimpleFrameSite */;
define inline constant <LPFONT> = <Interface> /* IFont */;
define inline constant <TEXTMETRICOLE> = <TEXTMETRICW>;
define C-pointer-type <LPTEXTMETRICOLE> => <TEXTMETRICOLE>;
define inline constant <LPPICTURE> = <Interface> /* IPicture */;
// enum PICTUREATTRIBUTES:
define inline-only constant $PICTURE-SCALABLE = #x1;
define inline-only constant $PICTURE-TRANSPARENT = #x2;

define inline constant <OLE-HANDLE> = <UINT>;
define inline constant <OLE-XPOS-HIMETRIC> = <LONG>;
define inline constant <OLE-YPOS-HIMETRIC> = <LONG>;
define inline constant <OLE-XSIZE-HIMETRIC> = <LONG>;
define inline constant <OLE-YSIZE-HIMETRIC> = <LONG>;
define inline constant <LPFONTDISP> = <Interface> /* IFontDisp */;
define inline constant <LPPICTUREDISP> = <Interface> /* IPictureDisp */;
// enum ACTIVATEFLAGS:
define inline-only constant $ACTIVATE-WINDOWLESS = 1;

// enum OLEDCFLAGS:
define inline-only constant $OLEDC-NODRAW = #x1;
define inline-only constant $OLEDC-PAINTBKGND = #x2;
define inline-only constant $OLEDC-OFFSCREEN = #x4;

// enum VIEWSTATUS:
define inline-only constant $VIEWSTATUS-OPAQUE = 1;
define inline-only constant $VIEWSTATUS-SOLIDBKGND = 2;
define inline-only constant $VIEWSTATUS-DVASPECTOPAQUE = 4;
define inline-only constant $VIEWSTATUS-DVASPECTTRANSPARENT = 8;
define inline-only constant $VIEWSTATUS-SURFACE = 16;
define inline-only constant $VIEWSTATUS-3DSURFACE = 32;

// enum HITRESULT:
define inline-only constant $HITRESULT-OUTSIDE = 0;
define inline-only constant $HITRESULT-TRANSPARENT = 1;
define inline-only constant $HITRESULT-CLOSE = 2;
define inline-only constant $HITRESULT-HIT = 3;

// enum DVASPECT2:
define inline-only constant $DVASPECT-OPAQUE = 16;
define inline-only constant $DVASPECT-TRANSPARENT = 32;


define C-struct <DVEXTENTINFO>
  sealed inline-only slot cb-value       :: <ULONG>;
  sealed inline-only slot dwExtentMode-value :: <DWORD>;
  sealed inline-only slot sizelProposed-value :: <SIZEL>;
  pointer-type-name: <LPDVEXTENTINFO>;
  c-name: "struct tagExtentInfo";
end C-struct <DVEXTENTINFO>;
// enum DVEXTENTMODE:
define inline-only constant $DVEXTENT-CONTENT = 0;
define inline-only constant $DVEXTENT-INTEGRAL = $DVEXTENT-CONTENT + 1;

// enum DVASPECTINFOFLAG:
define inline-only constant $DVASPECTINFOFLAG-CANOPTIMIZE = 1;

// enum POINTERINACTIVE:
define inline-only constant $POINTERINACTIVE-ACTIVATEONENTRY = 1;
define inline-only constant $POINTERINACTIVE-DEACTIVATEONLEAVE = 2;
define inline-only constant $POINTERINACTIVE-ACTIVATEONDRAG = 4;

define inline constant <LPERRORLOG> = <Interface> /* IErrorLog */;
define inline constant <LPPROPERTYBAG> = <Interface> /* IPropertyBag */;
define inline constant <LPPERPROPERTYBROWSING> = <Interface> /* IPerPropertyBrowsing */;

define C-struct <CALPOLESTR>
  sealed inline-only slot cElems-value   :: <ULONG>;
  sealed inline-only slot pElems-value   :: <LPLPOLESTR>;
  pointer-type-name: <LPCALPOLESTR>;
  c-name: "struct tagCALPOLESTR";
end C-struct <CALPOLESTR>;

define C-struct <CADWORD>
  sealed inline-only slot cElems-value   :: <ULONG>;
  sealed inline-only slot pElems-value   :: <LPDWORD>;
  pointer-type-name: <LPCADWORD>;
  c-name: "struct tagCADWORD";
end C-struct <CADWORD>;
// enum PROPBAG2_TYPE:
define inline-only constant $PROPBAG2-TYPE-UNDEFINED = 0;
define inline-only constant $PROPBAG2-TYPE-DATA = 1;
define inline-only constant $PROPBAG2-TYPE-URL = 2;
define inline-only constant $PROPBAG2-TYPE-OBJECT = 3;
define inline-only constant $PROPBAG2-TYPE-STREAM = 4;
define inline-only constant $PROPBAG2-TYPE-STORAGE = 5;
define inline-only constant $PROPBAG2-TYPE-MONIKER = 6;


define C-struct <PROPBAG2>
  sealed inline-only slot dwType-value   :: <DWORD>;
  sealed inline-only slot vt-value       :: <VARTYPE>;
  sealed inline-only slot cfType-value   :: <CLIPFORMAT>;
  sealed inline-only slot dwHint-value   :: <DWORD>;
  sealed inline-only slot pstrName-value :: <LPOLESTR>;
  sealed inline-only slot clsid-value    :: <CLSID>;
  pointer-type-name: <LPPROPBAG2>;
  c-name: "struct tagPROPBAG2";
end C-struct <PROPBAG2>;
// enum QACONTAINERFLAGS:
define inline-only constant $QACONTAINER-SHOWHATCHING = #x1;
define inline-only constant $QACONTAINER-SHOWGRABHANDLES = #x2;
define inline-only constant $QACONTAINER-USERMODE = #x4;
define inline-only constant $QACONTAINER-DISPLAYASDEFAULT = #x8;
define inline-only constant $QACONTAINER-UIDEAD = #x10;
define inline-only constant $QACONTAINER-AUTOCLIP = #x20;
define inline-only constant $QACONTAINER-MESSAGEREFLECT = #x40;
define inline-only constant $QACONTAINER-SUPPORTSMNEMONICS = #x80;

define inline constant <OLE-COLOR> = <DWORD>;

define C-struct <QACONTAINER>
  sealed inline-only slot cbSize-value   :: <ULONG>;
  sealed inline-only slot pClientSite-value :: <Interface> /* IOleClientSite */;
  sealed inline-only slot pAdviseSink-value :: <Interface> /* IAdviseSinkEx */;
  sealed inline-only slot pPropertyNotifySink-value :: <Interface> /* IPropertyNotifySink */;
  sealed inline-only slot pUnkEventSink-value :: <Interface> /* IUnknown */;
  sealed inline-only slot dwAmbientFlags-value :: <DWORD>;
  sealed inline-only slot colorFore-value :: <OLE-COLOR>;
  sealed inline-only slot colorBack-value :: <OLE-COLOR>;
  sealed inline-only slot pFont-value    :: <Interface> /* IFont */;
  sealed inline-only slot pUndoMgr-value :: <Interface> /* IOleUndoManager */;
  sealed inline-only slot dwAppearance-value :: <DWORD>;
  sealed inline-only slot lcid-value     :: <LONG>;
  sealed inline-only slot hpal-value     :: <HPALETTE>;
  sealed inline-only slot pBindHost-value :: <Interface> /* IBindHost */;
  sealed inline-only slot pOleControlSite-value :: <Interface> /* IOleControlSite */;
  sealed inline-only slot pServiceProvider-value :: <Interface> /* IServiceProvider */;
  pointer-type-name: <LPQACONTAINER>;
  c-name: "struct tagQACONTAINER";
end C-struct <QACONTAINER>;

define C-struct <QACONTROL>
  sealed inline-only slot cbSize-value   :: <ULONG>;
  sealed inline-only slot dwMiscStatus-value :: <DWORD>;
  sealed inline-only slot dwViewStatus-value :: <DWORD>;
  sealed inline-only slot dwEventCookie-value :: <DWORD>;
  sealed inline-only slot dwPropNotifyCookie-value :: <DWORD>;
  sealed inline-only slot dwPointerActivationPolicy-value :: <DWORD>;
  pointer-type-name: <LPQACONTROL>;
  c-name: "struct tagQACONTROL";
end C-struct <QACONTROL>;

