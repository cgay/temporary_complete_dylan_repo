Module:    win32-gl
Copyright:    Original Code is Copyright (c) 1995-2004 Functional Objects, Inc.
              All rights reserved.
License:      See License.txt in this distribution for details.
Warranty:     Distributed WITHOUT WARRANTY OF ANY KIND

// This file is automatically generated from "GL.H"; do not edit.


// Adapted from:
/*++ BUILD Version: 0004    // Increment this if a change has global effects


Module Name:

    gl.h

Abstract:

    Procedure declarations, constant definitions and macros for the OpenGL
    component.

--*/
define inline constant <GLenum> = <C-unsigned-int>;
define C-pointer-type <GLenum*> => <GLenum>;
define C-pointer-type <GLenum**> => <GLenum*>;
define inline constant <GLboolean> = <C-unsigned-char>;
define C-pointer-type <GLboolean*> => <GLboolean>;
define C-pointer-type <GLboolean**> => <GLboolean*>;
define inline constant <GLbitfield> = <C-unsigned-int>;
define C-pointer-type <GLbitfield*> => <GLbitfield>;
define C-pointer-type <GLbitfield**> => <GLbitfield*>;
define inline constant <GLbyte> = <C-signed-char>;
define C-pointer-type <GLbyte*> => <GLbyte>;
define C-pointer-type <GLbyte**> => <GLbyte*>;
define inline constant <GLshort> = <C-short>;
define C-pointer-type <GLshort*> => <GLshort>;
define C-pointer-type <GLshort**> => <GLshort*>;
define inline constant <GLint> = <C-int>;
define C-pointer-type <GLint*> => <GLint>;
define C-pointer-type <GLint**> => <GLint*>;
define inline constant <GLsizei> = <C-int>;
define C-pointer-type <GLsizei*> => <GLsizei>;
define C-pointer-type <GLsizei**> => <GLsizei*>;
define inline constant <GLubyte> = <C-unsigned-char>;
define C-pointer-type <GLubyte*> => <GLubyte>;
define C-pointer-type <GLubyte**> => <GLubyte*>;
define inline constant <GLushort> = <C-unsigned-short>;
define C-pointer-type <GLushort*> => <GLushort>;
define C-pointer-type <GLushort**> => <GLushort*>;
define inline constant <GLuint> = <C-unsigned-int>;
define C-pointer-type <GLuint*> => <GLuint>;
define C-pointer-type <GLuint**> => <GLuint*>;
define inline constant <GLfloat> = <C-float>;
define C-pointer-type <GLfloat*> => <GLfloat>;
define C-pointer-type <GLfloat**> => <GLfloat*>;
define inline constant <GLclampf> = <C-float>;
define C-pointer-type <GLclampf*> => <GLclampf>;
define C-pointer-type <GLclampf**> => <GLclampf*>;
define inline constant <GLdouble> = <C-double>;
define C-pointer-type <GLdouble*> => <GLdouble>;
define C-pointer-type <GLdouble**> => <GLdouble*>;
define inline constant <GLclampd> = <C-double>;
define C-pointer-type <GLclampd*> => <GLclampd>;
define C-pointer-type <GLclampd**> => <GLclampd*>;
define inline constant <GLvoid> = <C-void>;
define C-pointer-type <GLvoid*> => <GLvoid>;
define C-pointer-type <GLvoid**> => <GLvoid*>;
define inline-only constant $GL-VERSION-1-1             =    1;
define inline-only constant $GL-ACCUM                   = #x0100;
define inline-only constant $GL-LOAD                    = #x0101;
define inline-only constant $GL-RETURN                  = #x0102;
define inline-only constant $GL-MULT                    = #x0103;
define inline-only constant $GL-ADD                     = #x0104;
define inline-only constant $GL-NEVER                   = #x0200;
define inline-only constant $GL-LESS                    = #x0201;
define inline-only constant $GL-EQUAL                   = #x0202;
define inline-only constant $GL-LEQUAL                  = #x0203;
define inline-only constant $GL-GREATER                 = #x0204;
define inline-only constant $GL-NOTEQUAL                = #x0205;
define inline-only constant $GL-GEQUAL                  = #x0206;
define inline-only constant $GL-ALWAYS                  = #x0207;
define inline-only constant $GL-CURRENT-BIT             = #x00000001;
define inline-only constant $GL-POINT-BIT               = #x00000002;
define inline-only constant $GL-LINE-BIT                = #x00000004;
define inline-only constant $GL-POLYGON-BIT             = #x00000008;
define inline-only constant $GL-POLYGON-STIPPLE-BIT     = #x00000010;
define inline-only constant $GL-PIXEL-MODE-BIT          = #x00000020;
define inline-only constant $GL-LIGHTING-BIT            = #x00000040;
define inline-only constant $GL-FOG-BIT                 = #x00000080;
define inline-only constant $GL-DEPTH-BUFFER-BIT        = #x00000100;
define inline-only constant $GL-ACCUM-BUFFER-BIT        = #x00000200;
define inline-only constant $GL-STENCIL-BUFFER-BIT      = #x00000400;
define inline-only constant $GL-VIEWPORT-BIT            = #x00000800;
define inline-only constant $GL-TRANSFORM-BIT           = #x00001000;
define inline-only constant $GL-ENABLE-BIT              = #x00002000;
define inline-only constant $GL-COLOR-BUFFER-BIT        = #x00004000;
define inline-only constant $GL-HINT-BIT                = #x00008000;
define inline-only constant $GL-EVAL-BIT                = #x00010000;
define inline-only constant $GL-LIST-BIT                = #x00020000;
define inline-only constant $GL-TEXTURE-BIT             = #x00040000;
define inline-only constant $GL-SCISSOR-BIT             = #x00080000;
define inline-only constant $GL-ALL-ATTRIB-BITS         = #x000fffff;
define inline-only constant $GL-POINTS                  = #x0000;
define inline-only constant $GL-LINES                   = #x0001;
define inline-only constant $GL-LINE-LOOP               = #x0002;
define inline-only constant $GL-LINE-STRIP              = #x0003;
define inline-only constant $GL-TRIANGLES               = #x0004;
define inline-only constant $GL-TRIANGLE-STRIP          = #x0005;
define inline-only constant $GL-TRIANGLE-FAN            = #x0006;
define inline-only constant $GL-QUADS                   = #x0007;
define inline-only constant $GL-QUAD-STRIP              = #x0008;
define inline-only constant $GL-POLYGON                 = #x0009;
define inline-only constant $GL-ZERO                    =    0;
define inline-only constant $GL-ONE                     =    1;
define inline-only constant $GL-SRC-COLOR               = #x0300;
define inline-only constant $GL-ONE-MINUS-SRC-COLOR     = #x0301;
define inline-only constant $GL-SRC-ALPHA               = #x0302;
define inline-only constant $GL-ONE-MINUS-SRC-ALPHA     = #x0303;
define inline-only constant $GL-DST-ALPHA               = #x0304;
define inline-only constant $GL-ONE-MINUS-DST-ALPHA     = #x0305;
define inline-only constant $GL-DST-COLOR               = #x0306;
define inline-only constant $GL-ONE-MINUS-DST-COLOR     = #x0307;
define inline-only constant $GL-SRC-ALPHA-SATURATE      = #x0308;
define inline-only constant $GL-TRUE                    =    1;
define inline-only constant $GL-FALSE                   =    0;
define inline-only constant $GL-CLIP-PLANE0             = #x3000;
define inline-only constant $GL-CLIP-PLANE1             = #x3001;
define inline-only constant $GL-CLIP-PLANE2             = #x3002;
define inline-only constant $GL-CLIP-PLANE3             = #x3003;
define inline-only constant $GL-CLIP-PLANE4             = #x3004;
define inline-only constant $GL-CLIP-PLANE5             = #x3005;
define inline-only constant $GL-BYTE                    = #x1400;
define inline-only constant $GL-UNSIGNED-BYTE           = #x1401;
define inline-only constant $GL-SHORT                   = #x1402;
define inline-only constant $GL-UNSIGNED-SHORT          = #x1403;
define inline-only constant $GL-INT                     = #x1404;
define inline-only constant $GL-UNSIGNED-INT            = #x1405;
define inline-only constant $GL-FLOAT                   = #x1406;
define inline-only constant $GL-2-BYTES                 = #x1407;
define inline-only constant $GL-3-BYTES                 = #x1408;
define inline-only constant $GL-4-BYTES                 = #x1409;
define inline-only constant $GL-DOUBLE                  = #x140A;
define inline-only constant $GL-NONE                    =    0;
define inline-only constant $GL-FRONT-LEFT              = #x0400;
define inline-only constant $GL-FRONT-RIGHT             = #x0401;
define inline-only constant $GL-BACK-LEFT               = #x0402;
define inline-only constant $GL-BACK-RIGHT              = #x0403;
define inline-only constant $GL-FRONT                   = #x0404;
define inline-only constant $GL-BACK                    = #x0405;
define inline-only constant $GL-LEFT                    = #x0406;
define inline-only constant $GL-RIGHT                   = #x0407;
define inline-only constant $GL-FRONT-AND-BACK          = #x0408;
define inline-only constant $GL-AUX0                    = #x0409;
define inline-only constant $GL-AUX1                    = #x040A;
define inline-only constant $GL-AUX2                    = #x040B;
define inline-only constant $GL-AUX3                    = #x040C;
define inline-only constant $GL-NO-ERROR                =    0;
define inline-only constant $GL-INVALID-ENUM            = #x0500;
define inline-only constant $GL-INVALID-VALUE           = #x0501;
define inline-only constant $GL-INVALID-OPERATION       = #x0502;
define inline-only constant $GL-STACK-OVERFLOW          = #x0503;
define inline-only constant $GL-STACK-UNDERFLOW         = #x0504;
define inline-only constant $GL-OUT-OF-MEMORY           = #x0505;
define inline-only constant $GL-2D                      = #x0600;
define inline-only constant $GL-3D                      = #x0601;
define inline-only constant $GL-3D-COLOR                = #x0602;
define inline-only constant $GL-3D-COLOR-TEXTURE        = #x0603;
define inline-only constant $GL-4D-COLOR-TEXTURE        = #x0604;
define inline-only constant $GL-PASS-THROUGH-TOKEN      = #x0700;
define inline-only constant $GL-POINT-TOKEN             = #x0701;
define inline-only constant $GL-LINE-TOKEN              = #x0702;
define inline-only constant $GL-POLYGON-TOKEN           = #x0703;
define inline-only constant $GL-BITMAP-TOKEN            = #x0704;
define inline-only constant $GL-DRAW-PIXEL-TOKEN        = #x0705;
define inline-only constant $GL-COPY-PIXEL-TOKEN        = #x0706;
define inline-only constant $GL-LINE-RESET-TOKEN        = #x0707;
define inline-only constant $GL-EXP                     = #x0800;
define inline-only constant $GL-EXP2                    = #x0801;
define inline-only constant $GL-CW                      = #x0900;
define inline-only constant $GL-CCW                     = #x0901;
define inline-only constant $GL-COEFF                   = #x0A00;
define inline-only constant $GL-ORDER                   = #x0A01;
define inline-only constant $GL-DOMAIN                  = #x0A02;
define inline-only constant $GL-CURRENT-COLOR           = #x0B00;
define inline-only constant $GL-CURRENT-INDEX           = #x0B01;
define inline-only constant $GL-CURRENT-NORMAL          = #x0B02;
define inline-only constant $GL-CURRENT-TEXTURE-COORDS  = #x0B03;
define inline-only constant $GL-CURRENT-RASTER-COLOR    = #x0B04;
define inline-only constant $GL-CURRENT-RASTER-INDEX    = #x0B05;
define inline-only constant $GL-CURRENT-RASTER-TEXTURE-COORDS =
	#x0B06;
define inline-only constant $GL-CURRENT-RASTER-POSITION = #x0B07;
define inline-only constant $GL-CURRENT-RASTER-POSITION-VALID =
	#x0B08;
define inline-only constant $GL-CURRENT-RASTER-DISTANCE = #x0B09;
define inline-only constant $GL-POINT-SMOOTH            = #x0B10;
define inline-only constant $GL-POINT-SIZE              = #x0B11;
define inline-only constant $GL-POINT-SIZE-RANGE        = #x0B12;
define inline-only constant $GL-POINT-SIZE-GRANULARITY  = #x0B13;
define inline-only constant $GL-LINE-SMOOTH             = #x0B20;
define inline-only constant $GL-LINE-WIDTH              = #x0B21;
define inline-only constant $GL-LINE-WIDTH-RANGE        = #x0B22;
define inline-only constant $GL-LINE-WIDTH-GRANULARITY  = #x0B23;
define inline-only constant $GL-LINE-STIPPLE            = #x0B24;
define inline-only constant $GL-LINE-STIPPLE-PATTERN    = #x0B25;
define inline-only constant $GL-LINE-STIPPLE-REPEAT     = #x0B26;
define inline-only constant $GL-LIST-MODE               = #x0B30;
define inline-only constant $GL-MAX-LIST-NESTING        = #x0B31;
define inline-only constant $GL-LIST-BASE               = #x0B32;
define inline-only constant $GL-LIST-INDEX              = #x0B33;
define inline-only constant $GL-POLYGON-MODE            = #x0B40;
define inline-only constant $GL-POLYGON-SMOOTH          = #x0B41;
define inline-only constant $GL-POLYGON-STIPPLE         = #x0B42;
define inline-only constant $GL-EDGE-FLAG               = #x0B43;
define inline-only constant $GL-CULL-FACE               = #x0B44;
define inline-only constant $GL-CULL-FACE-MODE          = #x0B45;
define inline-only constant $GL-FRONT-FACE              = #x0B46;
define inline-only constant $GL-LIGHTING                = #x0B50;
define inline-only constant $GL-LIGHT-MODEL-LOCAL-VIEWER = #x0B51;
define inline-only constant $GL-LIGHT-MODEL-TWO-SIDE    = #x0B52;
define inline-only constant $GL-LIGHT-MODEL-AMBIENT     = #x0B53;
define inline-only constant $GL-SHADE-MODEL             = #x0B54;
define inline-only constant $GL-COLOR-MATERIAL-FACE     = #x0B55;
define inline-only constant $GL-COLOR-MATERIAL-PARAMETER = #x0B56;
define inline-only constant $GL-COLOR-MATERIAL          = #x0B57;
define inline-only constant $GL-FOG                     = #x0B60;
define inline-only constant $GL-FOG-INDEX               = #x0B61;
define inline-only constant $GL-FOG-DENSITY             = #x0B62;
define inline-only constant $GL-FOG-START               = #x0B63;
define inline-only constant $GL-FOG-END                 = #x0B64;
define inline-only constant $GL-FOG-MODE                = #x0B65;
define inline-only constant $GL-FOG-COLOR               = #x0B66;
define inline-only constant $GL-DEPTH-RANGE             = #x0B70;
define inline-only constant $GL-DEPTH-TEST              = #x0B71;
define inline-only constant $GL-DEPTH-WRITEMASK         = #x0B72;
define inline-only constant $GL-DEPTH-CLEAR-VALUE       = #x0B73;
define inline-only constant $GL-DEPTH-FUNC              = #x0B74;
define inline-only constant $GL-ACCUM-CLEAR-VALUE       = #x0B80;
define inline-only constant $GL-STENCIL-TEST            = #x0B90;
define inline-only constant $GL-STENCIL-CLEAR-VALUE     = #x0B91;
define inline-only constant $GL-STENCIL-FUNC            = #x0B92;
define inline-only constant $GL-STENCIL-VALUE-MASK      = #x0B93;
define inline-only constant $GL-STENCIL-FAIL            = #x0B94;
define inline-only constant $GL-STENCIL-PASS-DEPTH-FAIL = #x0B95;
define inline-only constant $GL-STENCIL-PASS-DEPTH-PASS = #x0B96;
define inline-only constant $GL-STENCIL-REF             = #x0B97;
define inline-only constant $GL-STENCIL-WRITEMASK       = #x0B98;
define inline-only constant $GL-MATRIX-MODE             = #x0BA0;
define inline-only constant $GL-NORMALIZE               = #x0BA1;
define inline-only constant $GL-VIEWPORT                = #x0BA2;
define inline-only constant $GL-MODELVIEW-STACK-DEPTH   = #x0BA3;
define inline-only constant $GL-PROJECTION-STACK-DEPTH  = #x0BA4;
define inline-only constant $GL-TEXTURE-STACK-DEPTH     = #x0BA5;
define inline-only constant $GL-MODELVIEW-MATRIX        = #x0BA6;
define inline-only constant $GL-PROJECTION-MATRIX       = #x0BA7;
define inline-only constant $GL-TEXTURE-MATRIX          = #x0BA8;
define inline-only constant $GL-ATTRIB-STACK-DEPTH      = #x0BB0;
define inline-only constant $GL-CLIENT-ATTRIB-STACK-DEPTH = #x0BB1;
define inline-only constant $GL-ALPHA-TEST              = #x0BC0;
define inline-only constant $GL-ALPHA-TEST-FUNC         = #x0BC1;
define inline-only constant $GL-ALPHA-TEST-REF          = #x0BC2;
define inline-only constant $GL-DITHER                  = #x0BD0;
define inline-only constant $GL-BLEND-DST               = #x0BE0;
define inline-only constant $GL-BLEND-SRC               = #x0BE1;
define inline-only constant $GL-BLEND                   = #x0BE2;
define inline-only constant $GL-LOGIC-OP-MODE           = #x0BF0;
define inline-only constant $GL-INDEX-LOGIC-OP          = #x0BF1;
define inline-only constant $GL-COLOR-LOGIC-OP          = #x0BF2;
define inline-only constant $GL-AUX-BUFFERS             = #x0C00;
define inline-only constant $GL-DRAW-BUFFER             = #x0C01;
define inline-only constant $GL-READ-BUFFER             = #x0C02;
define inline-only constant $GL-SCISSOR-BOX             = #x0C10;
define inline-only constant $GL-SCISSOR-TEST            = #x0C11;
define inline-only constant $GL-INDEX-CLEAR-VALUE       = #x0C20;
define inline-only constant $GL-INDEX-WRITEMASK         = #x0C21;
define inline-only constant $GL-COLOR-CLEAR-VALUE       = #x0C22;
define inline-only constant $GL-COLOR-WRITEMASK         = #x0C23;
define inline-only constant $GL-INDEX-MODE              = #x0C30;
define inline-only constant $GL-RGBA-MODE               = #x0C31;
define inline-only constant $GL-DOUBLEBUFFER            = #x0C32;
define inline-only constant $GL-STEREO                  = #x0C33;
define inline-only constant $GL-RENDER-MODE             = #x0C40;
define inline-only constant $GL-PERSPECTIVE-CORRECTION-HINT = #x0C50;
define inline-only constant $GL-POINT-SMOOTH-HINT       = #x0C51;
define inline-only constant $GL-LINE-SMOOTH-HINT        = #x0C52;
define inline-only constant $GL-POLYGON-SMOOTH-HINT     = #x0C53;
define inline-only constant $GL-FOG-HINT                = #x0C54;
define inline-only constant $GL-TEXTURE-GEN-S           = #x0C60;
define inline-only constant $GL-TEXTURE-GEN-T           = #x0C61;
define inline-only constant $GL-TEXTURE-GEN-R           = #x0C62;
define inline-only constant $GL-TEXTURE-GEN-Q           = #x0C63;
define inline-only constant $GL-PIXEL-MAP-I-TO-I        = #x0C70;
define inline-only constant $GL-PIXEL-MAP-S-TO-S        = #x0C71;
define inline-only constant $GL-PIXEL-MAP-I-TO-R        = #x0C72;
define inline-only constant $GL-PIXEL-MAP-I-TO-G        = #x0C73;
define inline-only constant $GL-PIXEL-MAP-I-TO-B        = #x0C74;
define inline-only constant $GL-PIXEL-MAP-I-TO-A        = #x0C75;
define inline-only constant $GL-PIXEL-MAP-R-TO-R        = #x0C76;
define inline-only constant $GL-PIXEL-MAP-G-TO-G        = #x0C77;
define inline-only constant $GL-PIXEL-MAP-B-TO-B        = #x0C78;
define inline-only constant $GL-PIXEL-MAP-A-TO-A        = #x0C79;
define inline-only constant $GL-PIXEL-MAP-I-TO-I-SIZE   = #x0CB0;
define inline-only constant $GL-PIXEL-MAP-S-TO-S-SIZE   = #x0CB1;
define inline-only constant $GL-PIXEL-MAP-I-TO-R-SIZE   = #x0CB2;
define inline-only constant $GL-PIXEL-MAP-I-TO-G-SIZE   = #x0CB3;
define inline-only constant $GL-PIXEL-MAP-I-TO-B-SIZE   = #x0CB4;
define inline-only constant $GL-PIXEL-MAP-I-TO-A-SIZE   = #x0CB5;
define inline-only constant $GL-PIXEL-MAP-R-TO-R-SIZE   = #x0CB6;
define inline-only constant $GL-PIXEL-MAP-G-TO-G-SIZE   = #x0CB7;
define inline-only constant $GL-PIXEL-MAP-B-TO-B-SIZE   = #x0CB8;
define inline-only constant $GL-PIXEL-MAP-A-TO-A-SIZE   = #x0CB9;
define inline-only constant $GL-UNPACK-SWAP-BYTES       = #x0CF0;
define inline-only constant $GL-UNPACK-LSB-FIRST        = #x0CF1;
define inline-only constant $GL-UNPACK-ROW-LENGTH       = #x0CF2;
define inline-only constant $GL-UNPACK-SKIP-ROWS        = #x0CF3;
define inline-only constant $GL-UNPACK-SKIP-PIXELS      = #x0CF4;
define inline-only constant $GL-UNPACK-ALIGNMENT        = #x0CF5;
define inline-only constant $GL-PACK-SWAP-BYTES         = #x0D00;
define inline-only constant $GL-PACK-LSB-FIRST          = #x0D01;
define inline-only constant $GL-PACK-ROW-LENGTH         = #x0D02;
define inline-only constant $GL-PACK-SKIP-ROWS          = #x0D03;
define inline-only constant $GL-PACK-SKIP-PIXELS        = #x0D04;
define inline-only constant $GL-PACK-ALIGNMENT          = #x0D05;
define inline-only constant $GL-MAP-COLOR               = #x0D10;
define inline-only constant $GL-MAP-STENCIL             = #x0D11;
define inline-only constant $GL-INDEX-SHIFT             = #x0D12;
define inline-only constant $GL-INDEX-OFFSET            = #x0D13;
define inline-only constant $GL-RED-SCALE               = #x0D14;
define inline-only constant $GL-RED-BIAS                = #x0D15;
define inline-only constant $GL-ZOOM-X                  = #x0D16;
define inline-only constant $GL-ZOOM-Y                  = #x0D17;
define inline-only constant $GL-GREEN-SCALE             = #x0D18;
define inline-only constant $GL-GREEN-BIAS              = #x0D19;
define inline-only constant $GL-BLUE-SCALE              = #x0D1A;
define inline-only constant $GL-BLUE-BIAS               = #x0D1B;
define inline-only constant $GL-ALPHA-SCALE             = #x0D1C;
define inline-only constant $GL-ALPHA-BIAS              = #x0D1D;
define inline-only constant $GL-DEPTH-SCALE             = #x0D1E;
define inline-only constant $GL-DEPTH-BIAS              = #x0D1F;
define inline-only constant $GL-MAX-EVAL-ORDER          = #x0D30;
define inline-only constant $GL-MAX-LIGHTS              = #x0D31;
define inline-only constant $GL-MAX-CLIP-PLANES         = #x0D32;
define inline-only constant $GL-MAX-TEXTURE-SIZE        = #x0D33;
define inline-only constant $GL-MAX-PIXEL-MAP-TABLE     = #x0D34;
define inline-only constant $GL-MAX-ATTRIB-STACK-DEPTH  = #x0D35;
define inline-only constant $GL-MAX-MODELVIEW-STACK-DEPTH = #x0D36;
define inline-only constant $GL-MAX-NAME-STACK-DEPTH    = #x0D37;
define inline-only constant $GL-MAX-PROJECTION-STACK-DEPTH = #x0D38;
define inline-only constant $GL-MAX-TEXTURE-STACK-DEPTH = #x0D39;
define inline-only constant $GL-MAX-VIEWPORT-DIMS       = #x0D3A;
define inline-only constant $GL-MAX-CLIENT-ATTRIB-STACK-DEPTH =
	#x0D3B;
define inline-only constant $GL-SUBPIXEL-BITS           = #x0D50;
define inline-only constant $GL-INDEX-BITS              = #x0D51;
define inline-only constant $GL-RED-BITS                = #x0D52;
define inline-only constant $GL-GREEN-BITS              = #x0D53;
define inline-only constant $GL-BLUE-BITS               = #x0D54;
define inline-only constant $GL-ALPHA-BITS              = #x0D55;
define inline-only constant $GL-DEPTH-BITS              = #x0D56;
define inline-only constant $GL-STENCIL-BITS            = #x0D57;
define inline-only constant $GL-ACCUM-RED-BITS          = #x0D58;
define inline-only constant $GL-ACCUM-GREEN-BITS        = #x0D59;
define inline-only constant $GL-ACCUM-BLUE-BITS         = #x0D5A;
define inline-only constant $GL-ACCUM-ALPHA-BITS        = #x0D5B;
define inline-only constant $GL-NAME-STACK-DEPTH        = #x0D70;
define inline-only constant $GL-AUTO-NORMAL             = #x0D80;
define inline-only constant $GL-MAP1-COLOR-4            = #x0D90;
define inline-only constant $GL-MAP1-INDEX              = #x0D91;
define inline-only constant $GL-MAP1-NORMAL             = #x0D92;
define inline-only constant $GL-MAP1-TEXTURE-COORD-1    = #x0D93;
define inline-only constant $GL-MAP1-TEXTURE-COORD-2    = #x0D94;
define inline-only constant $GL-MAP1-TEXTURE-COORD-3    = #x0D95;
define inline-only constant $GL-MAP1-TEXTURE-COORD-4    = #x0D96;
define inline-only constant $GL-MAP1-VERTEX-3           = #x0D97;
define inline-only constant $GL-MAP1-VERTEX-4           = #x0D98;
define inline-only constant $GL-MAP2-COLOR-4            = #x0DB0;
define inline-only constant $GL-MAP2-INDEX              = #x0DB1;
define inline-only constant $GL-MAP2-NORMAL             = #x0DB2;
define inline-only constant $GL-MAP2-TEXTURE-COORD-1    = #x0DB3;
define inline-only constant $GL-MAP2-TEXTURE-COORD-2    = #x0DB4;
define inline-only constant $GL-MAP2-TEXTURE-COORD-3    = #x0DB5;
define inline-only constant $GL-MAP2-TEXTURE-COORD-4    = #x0DB6;
define inline-only constant $GL-MAP2-VERTEX-3           = #x0DB7;
define inline-only constant $GL-MAP2-VERTEX-4           = #x0DB8;
define inline-only constant $GL-MAP1-GRID-DOMAIN        = #x0DD0;
define inline-only constant $GL-MAP1-GRID-SEGMENTS      = #x0DD1;
define inline-only constant $GL-MAP2-GRID-DOMAIN        = #x0DD2;
define inline-only constant $GL-MAP2-GRID-SEGMENTS      = #x0DD3;
define inline-only constant $GL-TEXTURE-1D              = #x0DE0;
define inline-only constant $GL-TEXTURE-2D              = #x0DE1;
define inline-only constant $GL-FEEDBACK-BUFFER-POINTER = #x0DF0;
define inline-only constant $GL-FEEDBACK-BUFFER-SIZE    = #x0DF1;
define inline-only constant $GL-FEEDBACK-BUFFER-TYPE    = #x0DF2;
define inline-only constant $GL-SELECTION-BUFFER-POINTER = #x0DF3;
define inline-only constant $GL-SELECTION-BUFFER-SIZE   = #x0DF4;
define inline-only constant $GL-TEXTURE-WIDTH           = #x1000;
define inline-only constant $GL-TEXTURE-HEIGHT          = #x1001;
define inline-only constant $GL-TEXTURE-COMPONENTS      = #x1003;
define inline-only constant $GL-TEXTURE-BORDER-COLOR    = #x1004;
define inline-only constant $GL-TEXTURE-BORDER          = #x1005;
define inline-only constant $GL-DONT-CARE               = #x1100;
define inline-only constant $GL-FASTEST                 = #x1101;
define inline-only constant $GL-NICEST                  = #x1102;
define inline-only constant $GL-LIGHT0                  = #x4000;
define inline-only constant $GL-LIGHT1                  = #x4001;
define inline-only constant $GL-LIGHT2                  = #x4002;
define inline-only constant $GL-LIGHT3                  = #x4003;
define inline-only constant $GL-LIGHT4                  = #x4004;
define inline-only constant $GL-LIGHT5                  = #x4005;
define inline-only constant $GL-LIGHT6                  = #x4006;
define inline-only constant $GL-LIGHT7                  = #x4007;
define inline-only constant $GL-AMBIENT                 = #x1200;
define inline-only constant $GL-DIFFUSE                 = #x1201;
define inline-only constant $GL-SPECULAR                = #x1202;
define inline-only constant $GL-POSITION                = #x1203;
define inline-only constant $GL-SPOT-DIRECTION          = #x1204;
define inline-only constant $GL-SPOT-EXPONENT           = #x1205;
define inline-only constant $GL-SPOT-CUTOFF             = #x1206;
define inline-only constant $GL-CONSTANT-ATTENUATION    = #x1207;
define inline-only constant $GL-LINEAR-ATTENUATION      = #x1208;
define inline-only constant $GL-QUADRATIC-ATTENUATION   = #x1209;
define inline-only constant $GL-COMPILE                 = #x1300;
define inline-only constant $GL-COMPILE-AND-EXECUTE     = #x1301;
define inline-only constant $GL-CLEAR                   = #x1500;
define inline-only constant $GL-AND                     = #x1501;
define inline-only constant $GL-AND-REVERSE             = #x1502;
define inline-only constant $GL-COPY                    = #x1503;
define inline-only constant $GL-AND-INVERTED            = #x1504;
define inline-only constant $GL-NOOP                    = #x1505;
define inline-only constant $GL-XOR                     = #x1506;
define inline-only constant $GL-OR                      = #x1507;
define inline-only constant $GL-NOR                     = #x1508;
define inline-only constant $GL-EQUIV                   = #x1509;
define inline-only constant $GL-INVERT                  = #x150A;
define inline-only constant $GL-OR-REVERSE              = #x150B;
define inline-only constant $GL-COPY-INVERTED           = #x150C;
define inline-only constant $GL-OR-INVERTED             = #x150D;
define inline-only constant $GL-NAND                    = #x150E;
define inline-only constant $GL-SET                     = #x150F;
define inline-only constant $GL-EMISSION                = #x1600;
define inline-only constant $GL-SHININESS               = #x1601;
define inline-only constant $GL-AMBIENT-AND-DIFFUSE     = #x1602;
define inline-only constant $GL-COLOR-INDEXES           = #x1603;
define inline-only constant $GL-MODELVIEW               = #x1700;
define inline-only constant $GL-PROJECTION              = #x1701;
define inline-only constant $GL-TEXTURE                 = #x1702;
define inline-only constant $GL-COLOR                   = #x1800;
define inline-only constant $GL-DEPTH                   = #x1801;
define inline-only constant $GL-STENCIL                 = #x1802;
define inline-only constant $GL-COLOR-INDEX             = #x1900;
define inline-only constant $GL-STENCIL-INDEX           = #x1901;
define inline-only constant $GL-DEPTH-COMPONENT         = #x1902;
define inline-only constant $GL-RED                     = #x1903;
define inline-only constant $GL-GREEN                   = #x1904;
define inline-only constant $GL-BLUE                    = #x1905;
define inline-only constant $GL-ALPHA                   = #x1906;
define inline-only constant $GL-RGB                     = #x1907;
define inline-only constant $GL-RGBA                    = #x1908;
define inline-only constant $GL-LUMINANCE               = #x1909;
define inline-only constant $GL-LUMINANCE-ALPHA         = #x190A;
define inline-only constant $GL-BITMAP                  = #x1A00;
define inline-only constant $GL-POINT                   = #x1B00;
define inline-only constant $GL-LINE                    = #x1B01;
define inline-only constant $GL-FILL                    = #x1B02;
define inline-only constant $GL-RENDER                  = #x1C00;
define inline-only constant $GL-FEEDBACK                = #x1C01;
define inline-only constant $GL-SELECT                  = #x1C02;
define inline-only constant $GL-FLAT                    = #x1D00;
define inline-only constant $GL-SMOOTH                  = #x1D01;
define inline-only constant $GL-KEEP                    = #x1E00;
define inline-only constant $GL-REPLACE                 = #x1E01;
define inline-only constant $GL-INCR                    = #x1E02;
define inline-only constant $GL-DECR                    = #x1E03;
define inline-only constant $GL-VENDOR                  = #x1F00;
define inline-only constant $GL-RENDERER                = #x1F01;
define inline-only constant $GL-VERSION                 = #x1F02;
define inline-only constant $GL-EXTENSIONS              = #x1F03;
define inline-only constant $GL-S                       = #x2000;
define inline-only constant $GL-T                       = #x2001;
define inline-only constant $GL-R                       = #x2002;
define inline-only constant $GL-Q                       = #x2003;
define inline-only constant $GL-MODULATE                = #x2100;
define inline-only constant $GL-DECAL                   = #x2101;
define inline-only constant $GL-TEXTURE-ENV-MODE        = #x2200;
define inline-only constant $GL-TEXTURE-ENV-COLOR       = #x2201;
define inline-only constant $GL-TEXTURE-ENV             = #x2300;
define inline-only constant $GL-EYE-LINEAR              = #x2400;
define inline-only constant $GL-OBJECT-LINEAR           = #x2401;
define inline-only constant $GL-SPHERE-MAP              = #x2402;
define inline-only constant $GL-TEXTURE-GEN-MODE        = #x2500;
define inline-only constant $GL-OBJECT-PLANE            = #x2501;
define inline-only constant $GL-EYE-PLANE               = #x2502;
define inline-only constant $GL-NEAREST                 = #x2600;
define inline-only constant $GL-LINEAR                  = #x2601;
define inline-only constant $GL-NEAREST-MIPMAP-NEAREST  = #x2700;
define inline-only constant $GL-LINEAR-MIPMAP-NEAREST   = #x2701;
define inline-only constant $GL-NEAREST-MIPMAP-LINEAR   = #x2702;
define inline-only constant $GL-LINEAR-MIPMAP-LINEAR    = #x2703;
define inline-only constant $GL-TEXTURE-MAG-FILTER      = #x2800;
define inline-only constant $GL-TEXTURE-MIN-FILTER      = #x2801;
define inline-only constant $GL-TEXTURE-WRAP-S          = #x2802;
define inline-only constant $GL-TEXTURE-WRAP-T          = #x2803;
define inline-only constant $GL-CLAMP                   = #x2900;
define inline-only constant $GL-REPEAT                  = #x2901;
define inline-only constant $GL-CLIENT-PIXEL-STORE-BIT  = #x00000001;
define inline-only constant $GL-CLIENT-VERTEX-ARRAY-BIT = #x00000002;
define inline-only constant $GL-CLIENT-ALL-ATTRIB-BITS  = $FFFFFFFF;
define inline-only constant $GL-POLYGON-OFFSET-FACTOR   = #x8038;
define inline-only constant $GL-POLYGON-OFFSET-UNITS    = #x2A00;
define inline-only constant $GL-POLYGON-OFFSET-POINT    = #x2A01;
define inline-only constant $GL-POLYGON-OFFSET-LINE     = #x2A02;
define inline-only constant $GL-POLYGON-OFFSET-FILL     = #x8037;
define inline-only constant $GL-ALPHA4                  = #x803B;
define inline-only constant $GL-ALPHA8                  = #x803C;
define inline-only constant $GL-ALPHA12                 = #x803D;
define inline-only constant $GL-ALPHA16                 = #x803E;
define inline-only constant $GL-LUMINANCE4              = #x803F;
define inline-only constant $GL-LUMINANCE8              = #x8040;
define inline-only constant $GL-LUMINANCE12             = #x8041;
define inline-only constant $GL-LUMINANCE16             = #x8042;
define inline-only constant $GL-LUMINANCE4-ALPHA4       = #x8043;
define inline-only constant $GL-LUMINANCE6-ALPHA2       = #x8044;
define inline-only constant $GL-LUMINANCE8-ALPHA8       = #x8045;
define inline-only constant $GL-LUMINANCE12-ALPHA4      = #x8046;
define inline-only constant $GL-LUMINANCE12-ALPHA12     = #x8047;
define inline-only constant $GL-LUMINANCE16-ALPHA16     = #x8048;
define inline-only constant $GL-INTENSITY               = #x8049;
define inline-only constant $GL-INTENSITY4              = #x804A;
define inline-only constant $GL-INTENSITY8              = #x804B;
define inline-only constant $GL-INTENSITY12             = #x804C;
define inline-only constant $GL-INTENSITY16             = #x804D;
define inline-only constant $GL-R3-G3-B2                = #x2A10;
define inline-only constant $GL-RGB4                    = #x804F;
define inline-only constant $GL-RGB5                    = #x8050;
define inline-only constant $GL-RGB8                    = #x8051;
define inline-only constant $GL-RGB10                   = #x8052;
define inline-only constant $GL-RGB12                   = #x8053;
define inline-only constant $GL-RGB16                   = #x8054;
define inline-only constant $GL-RGBA2                   = #x8055;
define inline-only constant $GL-RGBA4                   = #x8056;
define inline-only constant $GL-RGB5-A1                 = #x8057;
define inline-only constant $GL-RGBA8                   = #x8058;
define inline-only constant $GL-RGB10-A2                = #x8059;
define inline-only constant $GL-RGBA12                  = #x805A;
define inline-only constant $GL-RGBA16                  = #x805B;
define inline-only constant $GL-TEXTURE-RED-SIZE        = #x805C;
define inline-only constant $GL-TEXTURE-GREEN-SIZE      = #x805D;
define inline-only constant $GL-TEXTURE-BLUE-SIZE       = #x805E;
define inline-only constant $GL-TEXTURE-ALPHA-SIZE      = #x805F;
define inline-only constant $GL-TEXTURE-LUMINANCE-SIZE  = #x8060;
define inline-only constant $GL-TEXTURE-INTENSITY-SIZE  = #x8061;
define inline-only constant $GL-PROXY-TEXTURE-1D        = #x8063;
define inline-only constant $GL-PROXY-TEXTURE-2D        = #x8064;
define inline-only constant $GL-TEXTURE-PRIORITY        = #x8066;
define inline-only constant $GL-TEXTURE-RESIDENT        = #x8067;
define inline-only constant $GL-TEXTURE-BINDING-1D      = #x8068;
define inline-only constant $GL-TEXTURE-BINDING-2D      = #x8069;
define inline-only constant $GL-VERTEX-ARRAY            = #x8074;
define inline-only constant $GL-NORMAL-ARRAY            = #x8075;
define inline-only constant $GL-COLOR-ARRAY             = #x8076;
define inline-only constant $GL-INDEX-ARRAY             = #x8077;
define inline-only constant $GL-TEXTURE-COORD-ARRAY     = #x8078;
define inline-only constant $GL-EDGE-FLAG-ARRAY         = #x8079;
define inline-only constant $GL-VERTEX-ARRAY-SIZE       = #x807A;
define inline-only constant $GL-VERTEX-ARRAY-TYPE       = #x807B;
define inline-only constant $GL-VERTEX-ARRAY-STRIDE     = #x807C;
define inline-only constant $GL-NORMAL-ARRAY-TYPE       = #x807E;
define inline-only constant $GL-NORMAL-ARRAY-STRIDE     = #x807F;
define inline-only constant $GL-COLOR-ARRAY-SIZE        = #x8081;
define inline-only constant $GL-COLOR-ARRAY-TYPE        = #x8082;
define inline-only constant $GL-COLOR-ARRAY-STRIDE      = #x8083;
define inline-only constant $GL-INDEX-ARRAY-TYPE        = #x8085;
define inline-only constant $GL-INDEX-ARRAY-STRIDE      = #x8086;
define inline-only constant $GL-TEXTURE-COORD-ARRAY-SIZE = #x8088;
define inline-only constant $GL-TEXTURE-COORD-ARRAY-TYPE = #x8089;
define inline-only constant $GL-TEXTURE-COORD-ARRAY-STRIDE = #x808A;
define inline-only constant $GL-EDGE-FLAG-ARRAY-STRIDE  = #x808C;
define inline-only constant $GL-VERTEX-ARRAY-POINTER    = #x808E;
define inline-only constant $GL-NORMAL-ARRAY-POINTER    = #x808F;
define inline-only constant $GL-COLOR-ARRAY-POINTER     = #x8090;
define inline-only constant $GL-INDEX-ARRAY-POINTER     = #x8091;
define inline-only constant $GL-TEXTURE-COORD-ARRAY-POINTER = #x8092;
define inline-only constant $GL-EDGE-FLAG-ARRAY-POINTER = #x8093;
define inline-only constant $GL-V2F                     = #x2A20;
define inline-only constant $GL-V3F                     = #x2A21;
define inline-only constant $GL-C4UB-V2F                = #x2A22;
define inline-only constant $GL-C4UB-V3F                = #x2A23;
define inline-only constant $GL-C3F-V3F                 = #x2A24;
define inline-only constant $GL-N3F-V3F                 = #x2A25;
define inline-only constant $GL-C4F-N3F-V3F             = #x2A26;
define inline-only constant $GL-T2F-V3F                 = #x2A27;
define inline-only constant $GL-T4F-V4F                 = #x2A28;
define inline-only constant $GL-T2F-C4UB-V3F            = #x2A29;
define inline-only constant $GL-T2F-C3F-V3F             = #x2A2A;
define inline-only constant $GL-T2F-N3F-V3F             = #x2A2B;
define inline-only constant $GL-T2F-C4F-N3F-V3F         = #x2A2C;
define inline-only constant $GL-T4F-C4F-N3F-V4F         = #x2A2D;
define inline-only constant $GL-EXT-vertex-array        =    1;
define inline-only constant $GL-WIN-swap-hint           =    1;
define inline-only constant $GL-EXT-bgra                =    1;
define inline-only constant $GL-EXT-paletted-texture    =    1;
define inline-only constant $GL-EXT-clip-disable        =    1;
define inline-only constant $GL-VERTEX-ARRAY-EXT        = #x8074;
define inline-only constant $GL-NORMAL-ARRAY-EXT        = #x8075;
define inline-only constant $GL-COLOR-ARRAY-EXT         = #x8076;
define inline-only constant $GL-INDEX-ARRAY-EXT         = #x8077;
define inline-only constant $GL-TEXTURE-COORD-ARRAY-EXT = #x8078;
define inline-only constant $GL-EDGE-FLAG-ARRAY-EXT     = #x8079;
define inline-only constant $GL-VERTEX-ARRAY-SIZE-EXT   = #x807A;
define inline-only constant $GL-VERTEX-ARRAY-TYPE-EXT   = #x807B;
define inline-only constant $GL-VERTEX-ARRAY-STRIDE-EXT = #x807C;
define inline-only constant $GL-VERTEX-ARRAY-COUNT-EXT  = #x807D;
define inline-only constant $GL-NORMAL-ARRAY-TYPE-EXT   = #x807E;
define inline-only constant $GL-NORMAL-ARRAY-STRIDE-EXT = #x807F;
define inline-only constant $GL-NORMAL-ARRAY-COUNT-EXT  = #x8080;
define inline-only constant $GL-COLOR-ARRAY-SIZE-EXT    = #x8081;
define inline-only constant $GL-COLOR-ARRAY-TYPE-EXT    = #x8082;
define inline-only constant $GL-COLOR-ARRAY-STRIDE-EXT  = #x8083;
define inline-only constant $GL-COLOR-ARRAY-COUNT-EXT   = #x8084;
define inline-only constant $GL-INDEX-ARRAY-TYPE-EXT    = #x8085;
define inline-only constant $GL-INDEX-ARRAY-STRIDE-EXT  = #x8086;
define inline-only constant $GL-INDEX-ARRAY-COUNT-EXT   = #x8087;
define inline-only constant $GL-TEXTURE-COORD-ARRAY-SIZE-EXT =
	#x8088;
define inline-only constant $GL-TEXTURE-COORD-ARRAY-TYPE-EXT =
	#x8089;
define inline-only constant $GL-TEXTURE-COORD-ARRAY-STRIDE-EXT =
	#x808A;
define inline-only constant $GL-TEXTURE-COORD-ARRAY-COUNT-EXT =
	#x808B;
define inline-only constant $GL-EDGE-FLAG-ARRAY-STRIDE-EXT = #x808C;
define inline-only constant $GL-EDGE-FLAG-ARRAY-COUNT-EXT = #x808D;
define inline-only constant $GL-VERTEX-ARRAY-POINTER-EXT = #x808E;
define inline-only constant $GL-NORMAL-ARRAY-POINTER-EXT = #x808F;
define inline-only constant $GL-COLOR-ARRAY-POINTER-EXT = #x8090;
define inline-only constant $GL-INDEX-ARRAY-POINTER-EXT = #x8091;
define inline-only constant $GL-TEXTURE-COORD-ARRAY-POINTER-EXT =
	#x8092;
define inline-only constant $GL-EDGE-FLAG-ARRAY-POINTER-EXT = #x8093;
define inline-only constant $GL-BGR-EXT                 = #x80E0;
define inline-only constant $GL-BGRA-EXT                = #x80E1;
define inline-only constant $GL-COLOR-TABLE-FORMAT-EXT  = #x80D8;
define inline-only constant $GL-COLOR-TABLE-WIDTH-EXT   = #x80D9;
define inline-only constant $GL-COLOR-TABLE-RED-SIZE-EXT = #x80DA;
define inline-only constant $GL-COLOR-TABLE-GREEN-SIZE-EXT = #x80DB;
define inline-only constant $GL-COLOR-TABLE-BLUE-SIZE-EXT = #x80DC;
define inline-only constant $GL-COLOR-TABLE-ALPHA-SIZE-EXT = #x80DD;
define inline-only constant $GL-COLOR-TABLE-LUMINANCE-SIZE-EXT =
	#x80DE;
define inline-only constant $GL-COLOR-TABLE-INTENSITY-SIZE-EXT =
	#x80DF;
define inline-only constant $GL-COLOR-INDEX1-EXT        = #x80E2;
define inline-only constant $GL-COLOR-INDEX2-EXT        = #x80E3;
define inline-only constant $GL-COLOR-INDEX4-EXT        = #x80E4;
define inline-only constant $GL-COLOR-INDEX8-EXT        = #x80E5;
define inline-only constant $GL-COLOR-INDEX12-EXT       = #x80E6;
define inline-only constant $GL-COLOR-INDEX16-EXT       = #x80E7;
define inline-only constant $GL-CLIP-EXT                = #x80F0;

define inline-only C-function glAccum
  parameter op         :: <GLenum>;
  parameter value      :: <GLfloat>;
  c-name: "glAccum", c-modifiers: "__stdcall";
end;

define inline-only C-function glAlphaFunc
  parameter func       :: <GLenum>;
  parameter ref        :: <GLclampf>;
  c-name: "glAlphaFunc", c-modifiers: "__stdcall";
end;

define inline-only C-function glAreTexturesResident
  parameter n          :: <GLsizei>;
  parameter textures   :: <GLuint*>;
  parameter residences :: <GLboolean*>;
  result value :: <GLboolean>;
  c-name: "glAreTexturesResident", c-modifiers: "__stdcall";
end;

define inline-only C-function glArrayElement
  parameter i          :: <GLint>;
  c-name: "glArrayElement", c-modifiers: "__stdcall";
end;

define inline-only C-function glBegin
  parameter mode       :: <GLenum>;
  c-name: "glBegin", c-modifiers: "__stdcall";
end;

define inline-only C-function glBindTexture
  parameter target     :: <GLenum>;
  parameter texture    :: <GLuint>;
  c-name: "glBindTexture", c-modifiers: "__stdcall";
end;

define inline-only C-function glBitmap
  parameter width      :: <GLsizei>;
  parameter height     :: <GLsizei>;
  parameter xorig      :: <GLfloat>;
  parameter yorig      :: <GLfloat>;
  parameter xmove      :: <GLfloat>;
  parameter ymove      :: <GLfloat>;
  parameter bitmap     :: <GLubyte*>;
  c-name: "glBitmap", c-modifiers: "__stdcall";
end;

define inline-only C-function glBlendFunc
  parameter sfactor    :: <GLenum>;
  parameter dfactor    :: <GLenum>;
  c-name: "glBlendFunc", c-modifiers: "__stdcall";
end;

define inline-only C-function glCallList
  parameter list       :: <GLuint>;
  c-name: "glCallList", c-modifiers: "__stdcall";
end;

define inline-only C-function glCallLists
  parameter n          :: <GLsizei>;
  parameter type       :: <GLenum>;
  parameter lists      :: <GLvoid*>;
  c-name: "glCallLists", c-modifiers: "__stdcall";
end;

define inline-only C-function glClear
  parameter mask       :: <GLbitfield>;
  c-name: "glClear", c-modifiers: "__stdcall";
end;

define inline-only C-function glClearAccum
  parameter red        :: <GLfloat>;
  parameter green      :: <GLfloat>;
  parameter blue       :: <GLfloat>;
  parameter alpha      :: <GLfloat>;
  c-name: "glClearAccum", c-modifiers: "__stdcall";
end;

define inline-only C-function glClearColor
  parameter red        :: <GLclampf>;
  parameter green      :: <GLclampf>;
  parameter blue       :: <GLclampf>;
  parameter alpha      :: <GLclampf>;
  c-name: "glClearColor", c-modifiers: "__stdcall";
end;

define inline-only C-function glClearDepth
  parameter depth      :: <GLclampd>;
  c-name: "glClearDepth", c-modifiers: "__stdcall";
end;

define inline-only C-function glClearIndex
  parameter c          :: <GLfloat>;
  c-name: "glClearIndex", c-modifiers: "__stdcall";
end;

define inline-only C-function glClearStencil
  parameter s          :: <GLint>;
  c-name: "glClearStencil", c-modifiers: "__stdcall";
end;

define inline-only C-function glClipPlane
  parameter plane      :: <GLenum>;
  parameter equation   :: <GLdouble*>;
  c-name: "glClipPlane", c-modifiers: "__stdcall";
end;

define inline-only C-function glColor3b
  parameter red        :: <GLbyte>;
  parameter green      :: <GLbyte>;
  parameter blue       :: <GLbyte>;
  c-name: "glColor3b", c-modifiers: "__stdcall";
end;

define inline-only C-function glColor3bv
  parameter v          :: <GLbyte*>;
  c-name: "glColor3bv", c-modifiers: "__stdcall";
end;

define inline-only C-function glColor3d
  parameter red        :: <GLdouble>;
  parameter green      :: <GLdouble>;
  parameter blue       :: <GLdouble>;
  c-name: "glColor3d", c-modifiers: "__stdcall";
end;

define inline-only C-function glColor3dv
  parameter v          :: <GLdouble*>;
  c-name: "glColor3dv", c-modifiers: "__stdcall";
end;

define inline-only C-function glColor3f
  parameter red        :: <GLfloat>;
  parameter green      :: <GLfloat>;
  parameter blue       :: <GLfloat>;
  c-name: "glColor3f", c-modifiers: "__stdcall";
end;

define inline-only C-function glColor3fv
  parameter v          :: <GLfloat*>;
  c-name: "glColor3fv", c-modifiers: "__stdcall";
end;

define inline-only C-function glColor3i
  parameter red        :: <GLint>;
  parameter green      :: <GLint>;
  parameter blue       :: <GLint>;
  c-name: "glColor3i", c-modifiers: "__stdcall";
end;

define inline-only C-function glColor3iv
  parameter v          :: <GLint*>;
  c-name: "glColor3iv", c-modifiers: "__stdcall";
end;

define inline-only C-function glColor3s
  parameter red        :: <GLshort>;
  parameter green      :: <GLshort>;
  parameter blue       :: <GLshort>;
  c-name: "glColor3s", c-modifiers: "__stdcall";
end;

define inline-only C-function glColor3sv
  parameter v          :: <GLshort*>;
  c-name: "glColor3sv", c-modifiers: "__stdcall";
end;

define inline-only C-function glColor3ub
  parameter red        :: <GLubyte>;
  parameter green      :: <GLubyte>;
  parameter blue       :: <GLubyte>;
  c-name: "glColor3ub", c-modifiers: "__stdcall";
end;

define inline-only C-function glColor3ubv
  parameter v          :: <GLubyte*>;
  c-name: "glColor3ubv", c-modifiers: "__stdcall";
end;

define inline-only C-function glColor3ui
  parameter red        :: <GLuint>;
  parameter green      :: <GLuint>;
  parameter blue       :: <GLuint>;
  c-name: "glColor3ui", c-modifiers: "__stdcall";
end;

define inline-only C-function glColor3uiv
  parameter v          :: <GLuint*>;
  c-name: "glColor3uiv", c-modifiers: "__stdcall";
end;

define inline-only C-function glColor3us
  parameter red        :: <GLushort>;
  parameter green      :: <GLushort>;
  parameter blue       :: <GLushort>;
  c-name: "glColor3us", c-modifiers: "__stdcall";
end;

define inline-only C-function glColor3usv
  parameter v          :: <GLushort*>;
  c-name: "glColor3usv", c-modifiers: "__stdcall";
end;

define inline-only C-function glColor4b
  parameter red        :: <GLbyte>;
  parameter green      :: <GLbyte>;
  parameter blue       :: <GLbyte>;
  parameter alpha      :: <GLbyte>;
  c-name: "glColor4b", c-modifiers: "__stdcall";
end;

define inline-only C-function glColor4bv
  parameter v          :: <GLbyte*>;
  c-name: "glColor4bv", c-modifiers: "__stdcall";
end;

define inline-only C-function glColor4d
  parameter red        :: <GLdouble>;
  parameter green      :: <GLdouble>;
  parameter blue       :: <GLdouble>;
  parameter alpha      :: <GLdouble>;
  c-name: "glColor4d", c-modifiers: "__stdcall";
end;

define inline-only C-function glColor4dv
  parameter v          :: <GLdouble*>;
  c-name: "glColor4dv", c-modifiers: "__stdcall";
end;

define inline-only C-function glColor4f
  parameter red        :: <GLfloat>;
  parameter green      :: <GLfloat>;
  parameter blue       :: <GLfloat>;
  parameter alpha      :: <GLfloat>;
  c-name: "glColor4f", c-modifiers: "__stdcall";
end;

define inline-only C-function glColor4fv
  parameter v          :: <GLfloat*>;
  c-name: "glColor4fv", c-modifiers: "__stdcall";
end;

define inline-only C-function glColor4i
  parameter red        :: <GLint>;
  parameter green      :: <GLint>;
  parameter blue       :: <GLint>;
  parameter alpha      :: <GLint>;
  c-name: "glColor4i", c-modifiers: "__stdcall";
end;

define inline-only C-function glColor4iv
  parameter v          :: <GLint*>;
  c-name: "glColor4iv", c-modifiers: "__stdcall";
end;

define inline-only C-function glColor4s
  parameter red        :: <GLshort>;
  parameter green      :: <GLshort>;
  parameter blue       :: <GLshort>;
  parameter alpha      :: <GLshort>;
  c-name: "glColor4s", c-modifiers: "__stdcall";
end;

define inline-only C-function glColor4sv
  parameter v          :: <GLshort*>;
  c-name: "glColor4sv", c-modifiers: "__stdcall";
end;

define inline-only C-function glColor4ub
  parameter red        :: <GLubyte>;
  parameter green      :: <GLubyte>;
  parameter blue       :: <GLubyte>;
  parameter alpha      :: <GLubyte>;
  c-name: "glColor4ub", c-modifiers: "__stdcall";
end;

define inline-only C-function glColor4ubv
  parameter v          :: <GLubyte*>;
  c-name: "glColor4ubv", c-modifiers: "__stdcall";
end;

define inline-only C-function glColor4ui
  parameter red        :: <GLuint>;
  parameter green      :: <GLuint>;
  parameter blue       :: <GLuint>;
  parameter alpha      :: <GLuint>;
  c-name: "glColor4ui", c-modifiers: "__stdcall";
end;

define inline-only C-function glColor4uiv
  parameter v          :: <GLuint*>;
  c-name: "glColor4uiv", c-modifiers: "__stdcall";
end;

define inline-only C-function glColor4us
  parameter red        :: <GLushort>;
  parameter green      :: <GLushort>;
  parameter blue       :: <GLushort>;
  parameter alpha      :: <GLushort>;
  c-name: "glColor4us", c-modifiers: "__stdcall";
end;

define inline-only C-function glColor4usv
  parameter v          :: <GLushort*>;
  c-name: "glColor4usv", c-modifiers: "__stdcall";
end;

define inline-only C-function glColorMask
  parameter red        :: <GLboolean>;
  parameter green      :: <GLboolean>;
  parameter blue       :: <GLboolean>;
  parameter alpha      :: <GLboolean>;
  c-name: "glColorMask", c-modifiers: "__stdcall";
end;

define inline-only C-function glColorMaterial
  parameter face       :: <GLenum>;
  parameter mode       :: <GLenum>;
  c-name: "glColorMaterial", c-modifiers: "__stdcall";
end;

define inline-only C-function glColorPointer
  parameter size       :: <GLint>;
  parameter type       :: <GLenum>;
  parameter stride     :: <GLsizei>;
  parameter pointer    :: <GLvoid*>;
  c-name: "glColorPointer", c-modifiers: "__stdcall";
end;

define inline-only C-function glCopyPixels
  parameter x          :: <GLint>;
  parameter y          :: <GLint>;
  parameter width      :: <GLsizei>;
  parameter height     :: <GLsizei>;
  parameter type       :: <GLenum>;
  c-name: "glCopyPixels", c-modifiers: "__stdcall";
end;

define inline-only C-function glCopyTexImage1D
  parameter target     :: <GLenum>;
  parameter level      :: <GLint>;
  parameter internalFormat :: <GLenum>;
  parameter x          :: <GLint>;
  parameter y          :: <GLint>;
  parameter width      :: <GLsizei>;
  parameter border     :: <GLint>;
  c-name: "glCopyTexImage1D", c-modifiers: "__stdcall";
end;

define inline-only C-function glCopyTexImage2D
  parameter target     :: <GLenum>;
  parameter level      :: <GLint>;
  parameter internalFormat :: <GLenum>;
  parameter x          :: <GLint>;
  parameter y          :: <GLint>;
  parameter width      :: <GLsizei>;
  parameter height     :: <GLsizei>;
  parameter border     :: <GLint>;
  c-name: "glCopyTexImage2D", c-modifiers: "__stdcall";
end;

define inline-only C-function glCopyTexSubImage1D
  parameter target     :: <GLenum>;
  parameter level      :: <GLint>;
  parameter xoffset    :: <GLint>;
  parameter x          :: <GLint>;
  parameter y          :: <GLint>;
  parameter width      :: <GLsizei>;
  c-name: "glCopyTexSubImage1D", c-modifiers: "__stdcall";
end;

define inline-only C-function glCopyTexSubImage2D
  parameter target     :: <GLenum>;
  parameter level      :: <GLint>;
  parameter xoffset    :: <GLint>;
  parameter yoffset    :: <GLint>;
  parameter x          :: <GLint>;
  parameter y          :: <GLint>;
  parameter width      :: <GLsizei>;
  parameter height     :: <GLsizei>;
  c-name: "glCopyTexSubImage2D", c-modifiers: "__stdcall";
end;

define inline-only C-function glCullFace
  parameter mode       :: <GLenum>;
  c-name: "glCullFace", c-modifiers: "__stdcall";
end;

define inline-only C-function glDeleteLists
  parameter list       :: <GLuint>;
  parameter range      :: <GLsizei>;
  c-name: "glDeleteLists", c-modifiers: "__stdcall";
end;

define inline-only C-function glDeleteTextures
  parameter n          :: <GLsizei>;
  parameter textures   :: <GLuint*>;
  c-name: "glDeleteTextures", c-modifiers: "__stdcall";
end;

define inline-only C-function glDepthFunc
  parameter func       :: <GLenum>;
  c-name: "glDepthFunc", c-modifiers: "__stdcall";
end;

define inline-only C-function glDepthMask
  parameter flag       :: <GLboolean>;
  c-name: "glDepthMask", c-modifiers: "__stdcall";
end;

define inline-only C-function glDepthRange
  parameter zNear      :: <GLclampd>;
  parameter zFar       :: <GLclampd>;
  c-name: "glDepthRange", c-modifiers: "__stdcall";
end;

define inline-only C-function glDisable
  parameter cap        :: <GLenum>;
  c-name: "glDisable", c-modifiers: "__stdcall";
end;

define inline-only C-function glDisableClientState
  parameter array      :: <GLenum>;
  c-name: "glDisableClientState", c-modifiers: "__stdcall";
end;

define inline-only C-function glDrawArrays
  parameter mode       :: <GLenum>;
  parameter first      :: <GLint>;
  parameter count      :: <GLsizei>;
  c-name: "glDrawArrays", c-modifiers: "__stdcall";
end;

define inline-only C-function glDrawBuffer
  parameter mode       :: <GLenum>;
  c-name: "glDrawBuffer", c-modifiers: "__stdcall";
end;

define inline-only C-function glDrawElements
  parameter mode       :: <GLenum>;
  parameter count      :: <GLsizei>;
  parameter type       :: <GLenum>;
  parameter indices    :: <GLvoid*>;
  c-name: "glDrawElements", c-modifiers: "__stdcall";
end;

define inline-only C-function glDrawPixels
  parameter width      :: <GLsizei>;
  parameter height     :: <GLsizei>;
  parameter format     :: <GLenum>;
  parameter type       :: <GLenum>;
  parameter pixels     :: <GLvoid*>;
  c-name: "glDrawPixels", c-modifiers: "__stdcall";
end;

define inline-only C-function glEdgeFlag
  parameter flag       :: <GLboolean>;
  c-name: "glEdgeFlag", c-modifiers: "__stdcall";
end;

define inline-only C-function glEdgeFlagPointer
  parameter stride     :: <GLsizei>;
  parameter pointer    :: <GLvoid*>;
  c-name: "glEdgeFlagPointer", c-modifiers: "__stdcall";
end;

define inline-only C-function glEdgeFlagv
  parameter flag       :: <GLboolean*>;
  c-name: "glEdgeFlagv", c-modifiers: "__stdcall";
end;

define inline-only C-function glEnable
  parameter cap        :: <GLenum>;
  c-name: "glEnable", c-modifiers: "__stdcall";
end;

define inline-only C-function glEnableClientState
  parameter array      :: <GLenum>;
  c-name: "glEnableClientState", c-modifiers: "__stdcall";
end;

define inline-only C-function glEnd
  c-name: "glEnd", c-modifiers: "__stdcall";
end;

define inline-only C-function glEndList
  c-name: "glEndList", c-modifiers: "__stdcall";
end;

define inline-only C-function glEvalCoord1d
  parameter u          :: <GLdouble>;
  c-name: "glEvalCoord1d", c-modifiers: "__stdcall";
end;

define inline-only C-function glEvalCoord1dv
  parameter u          :: <GLdouble*>;
  c-name: "glEvalCoord1dv", c-modifiers: "__stdcall";
end;

define inline-only C-function glEvalCoord1f
  parameter u          :: <GLfloat>;
  c-name: "glEvalCoord1f", c-modifiers: "__stdcall";
end;

define inline-only C-function glEvalCoord1fv
  parameter u          :: <GLfloat*>;
  c-name: "glEvalCoord1fv", c-modifiers: "__stdcall";
end;

define inline-only C-function glEvalCoord2d
  parameter u          :: <GLdouble>;
  parameter v          :: <GLdouble>;
  c-name: "glEvalCoord2d", c-modifiers: "__stdcall";
end;

define inline-only C-function glEvalCoord2dv
  parameter u          :: <GLdouble*>;
  c-name: "glEvalCoord2dv", c-modifiers: "__stdcall";
end;

define inline-only C-function glEvalCoord2f
  parameter u          :: <GLfloat>;
  parameter v          :: <GLfloat>;
  c-name: "glEvalCoord2f", c-modifiers: "__stdcall";
end;

define inline-only C-function glEvalCoord2fv
  parameter u          :: <GLfloat*>;
  c-name: "glEvalCoord2fv", c-modifiers: "__stdcall";
end;

define inline-only C-function glEvalMesh1
  parameter mode       :: <GLenum>;
  parameter i1         :: <GLint>;
  parameter i2         :: <GLint>;
  c-name: "glEvalMesh1", c-modifiers: "__stdcall";
end;

define inline-only C-function glEvalMesh2
  parameter mode       :: <GLenum>;
  parameter i1         :: <GLint>;
  parameter i2         :: <GLint>;
  parameter j1         :: <GLint>;
  parameter j2         :: <GLint>;
  c-name: "glEvalMesh2", c-modifiers: "__stdcall";
end;

define inline-only C-function glEvalPoint1
  parameter i          :: <GLint>;
  c-name: "glEvalPoint1", c-modifiers: "__stdcall";
end;

define inline-only C-function glEvalPoint2
  parameter i          :: <GLint>;
  parameter j          :: <GLint>;
  c-name: "glEvalPoint2", c-modifiers: "__stdcall";
end;

define inline-only C-function glFeedbackBuffer
  parameter size       :: <GLsizei>;
  parameter type       :: <GLenum>;
  parameter buffer     :: <GLfloat*>;
  c-name: "glFeedbackBuffer", c-modifiers: "__stdcall";
end;

define inline-only C-function glFinish
  c-name: "glFinish", c-modifiers: "__stdcall";
end;

define inline-only C-function glFlush
  c-name: "glFlush", c-modifiers: "__stdcall";
end;

define inline-only C-function glFogf
  parameter pname      :: <GLenum>;
  parameter param      :: <GLfloat>;
  c-name: "glFogf", c-modifiers: "__stdcall";
end;

define inline-only C-function glFogfv
  parameter pname      :: <GLenum>;
  parameter params     :: <GLfloat*>;
  c-name: "glFogfv", c-modifiers: "__stdcall";
end;

define inline-only C-function glFogi
  parameter pname      :: <GLenum>;
  parameter param      :: <GLint>;
  c-name: "glFogi", c-modifiers: "__stdcall";
end;

define inline-only C-function glFogiv
  parameter pname      :: <GLenum>;
  parameter params     :: <GLint*>;
  c-name: "glFogiv", c-modifiers: "__stdcall";
end;

define inline-only C-function glFrontFace
  parameter mode       :: <GLenum>;
  c-name: "glFrontFace", c-modifiers: "__stdcall";
end;

define inline-only C-function glFrustum
  parameter left       :: <GLdouble>;
  parameter right      :: <GLdouble>;
  parameter bottom     :: <GLdouble>;
  parameter top        :: <GLdouble>;
  parameter zNear      :: <GLdouble>;
  parameter zFar       :: <GLdouble>;
  c-name: "glFrustum", c-modifiers: "__stdcall";
end;

define inline-only C-function glGenLists
  parameter range      :: <GLsizei>;
  result value :: <GLuint>;
  c-name: "glGenLists", c-modifiers: "__stdcall";
end;

define inline-only C-function glGenTextures
  parameter n          :: <GLsizei>;
  parameter textures   :: <GLuint*>;
  c-name: "glGenTextures", c-modifiers: "__stdcall";
end;

define inline-only C-function glGetBooleanv
  parameter pname      :: <GLenum>;
  parameter params     :: <GLboolean*>;
  c-name: "glGetBooleanv", c-modifiers: "__stdcall";
end;

define inline-only C-function glGetClipPlane
  parameter plane      :: <GLenum>;
  parameter equation   :: <GLdouble*>;
  c-name: "glGetClipPlane", c-modifiers: "__stdcall";
end;

define inline-only C-function glGetDoublev
  parameter pname      :: <GLenum>;
  parameter params     :: <GLdouble*>;
  c-name: "glGetDoublev", c-modifiers: "__stdcall";
end;

define inline-only C-function glGetError
  result value :: <GLenum>;
  c-name: "glGetError", c-modifiers: "__stdcall";
end;

define inline-only C-function glGetFloatv
  parameter pname      :: <GLenum>;
  parameter params     :: <GLfloat*>;
  c-name: "glGetFloatv", c-modifiers: "__stdcall";
end;

define inline-only C-function glGetIntegerv
  parameter pname      :: <GLenum>;
  parameter params     :: <GLint*>;
  c-name: "glGetIntegerv", c-modifiers: "__stdcall";
end;

define inline-only C-function glGetLightfv
  parameter light      :: <GLenum>;
  parameter pname      :: <GLenum>;
  parameter params     :: <GLfloat*>;
  c-name: "glGetLightfv", c-modifiers: "__stdcall";
end;

define inline-only C-function glGetLightiv
  parameter light      :: <GLenum>;
  parameter pname      :: <GLenum>;
  parameter params     :: <GLint*>;
  c-name: "glGetLightiv", c-modifiers: "__stdcall";
end;

define inline-only C-function glGetMapdv
  parameter target     :: <GLenum>;
  parameter query      :: <GLenum>;
  parameter v          :: <GLdouble*>;
  c-name: "glGetMapdv", c-modifiers: "__stdcall";
end;

define inline-only C-function glGetMapfv
  parameter target     :: <GLenum>;
  parameter query      :: <GLenum>;
  parameter v          :: <GLfloat*>;
  c-name: "glGetMapfv", c-modifiers: "__stdcall";
end;

define inline-only C-function glGetMapiv
  parameter target     :: <GLenum>;
  parameter query      :: <GLenum>;
  parameter v          :: <GLint*>;
  c-name: "glGetMapiv", c-modifiers: "__stdcall";
end;

define inline-only C-function glGetMaterialfv
  parameter face       :: <GLenum>;
  parameter pname      :: <GLenum>;
  parameter params     :: <GLfloat*>;
  c-name: "glGetMaterialfv", c-modifiers: "__stdcall";
end;

define inline-only C-function glGetMaterialiv
  parameter face       :: <GLenum>;
  parameter pname      :: <GLenum>;
  parameter params     :: <GLint*>;
  c-name: "glGetMaterialiv", c-modifiers: "__stdcall";
end;

define inline-only C-function glGetPixelMapfv
  parameter map        :: <GLenum>;
  parameter valuze     :: <GLfloat*>;
  c-name: "glGetPixelMapfv", c-modifiers: "__stdcall";
end;

define inline-only C-function glGetPixelMapuiv
  parameter map        :: <GLenum>;
  parameter valuze     :: <GLuint*>;
  c-name: "glGetPixelMapuiv", c-modifiers: "__stdcall";
end;

define inline-only C-function glGetPixelMapusv
  parameter map        :: <GLenum>;
  parameter valuze     :: <GLushort*>;
  c-name: "glGetPixelMapusv", c-modifiers: "__stdcall";
end;

define inline-only C-function glGetPointerv
  parameter pname      :: <GLenum>;
  parameter params     :: <GLvoid**>;
  c-name: "glGetPointerv", c-modifiers: "__stdcall";
end;

define inline-only C-function glGetPolygonStipple
  parameter mask       :: <GLubyte*>;
  c-name: "glGetPolygonStipple", c-modifiers: "__stdcall";
end;

define inline-only C-function glGetString
  parameter name       :: <GLenum>;
  result value ::  /* const */ <GLubyte*>;
  c-name: "glGetString", c-modifiers: "__stdcall";
end;

define inline-only C-function glGetTexEnvfv
  parameter target     :: <GLenum>;
  parameter pname      :: <GLenum>;
  parameter params     :: <GLfloat*>;
  c-name: "glGetTexEnvfv", c-modifiers: "__stdcall";
end;

define inline-only C-function glGetTexEnviv
  parameter target     :: <GLenum>;
  parameter pname      :: <GLenum>;
  parameter params     :: <GLint*>;
  c-name: "glGetTexEnviv", c-modifiers: "__stdcall";
end;

define inline-only C-function glGetTexGendv
  parameter coord      :: <GLenum>;
  parameter pname      :: <GLenum>;
  parameter params     :: <GLdouble*>;
  c-name: "glGetTexGendv", c-modifiers: "__stdcall";
end;

define inline-only C-function glGetTexGenfv
  parameter coord      :: <GLenum>;
  parameter pname      :: <GLenum>;
  parameter params     :: <GLfloat*>;
  c-name: "glGetTexGenfv", c-modifiers: "__stdcall";
end;

define inline-only C-function glGetTexGeniv
  parameter coord      :: <GLenum>;
  parameter pname      :: <GLenum>;
  parameter params     :: <GLint*>;
  c-name: "glGetTexGeniv", c-modifiers: "__stdcall";
end;

define inline-only C-function glGetTexImage
  parameter target     :: <GLenum>;
  parameter level      :: <GLint>;
  parameter format     :: <GLenum>;
  parameter type       :: <GLenum>;
  parameter pixels     :: <GLvoid*>;
  c-name: "glGetTexImage", c-modifiers: "__stdcall";
end;

define inline-only C-function glGetTexLevelParameterfv
  parameter target     :: <GLenum>;
  parameter level      :: <GLint>;
  parameter pname      :: <GLenum>;
  parameter params     :: <GLfloat*>;
  c-name: "glGetTexLevelParameterfv", c-modifiers: "__stdcall";
end;

define inline-only C-function glGetTexLevelParameteriv
  parameter target     :: <GLenum>;
  parameter level      :: <GLint>;
  parameter pname      :: <GLenum>;
  parameter params     :: <GLint*>;
  c-name: "glGetTexLevelParameteriv", c-modifiers: "__stdcall";
end;

define inline-only C-function glGetTexParameterfv
  parameter target     :: <GLenum>;
  parameter pname      :: <GLenum>;
  parameter params     :: <GLfloat*>;
  c-name: "glGetTexParameterfv", c-modifiers: "__stdcall";
end;

define inline-only C-function glGetTexParameteriv
  parameter target     :: <GLenum>;
  parameter pname      :: <GLenum>;
  parameter params     :: <GLint*>;
  c-name: "glGetTexParameteriv", c-modifiers: "__stdcall";
end;

define inline-only C-function glHint
  parameter target     :: <GLenum>;
  parameter mode       :: <GLenum>;
  c-name: "glHint", c-modifiers: "__stdcall";
end;

define inline-only C-function glIndexMask
  parameter mask       :: <GLuint>;
  c-name: "glIndexMask", c-modifiers: "__stdcall";
end;

define inline-only C-function glIndexPointer
  parameter type       :: <GLenum>;
  parameter stride     :: <GLsizei>;
  parameter pointer    :: <GLvoid*>;
  c-name: "glIndexPointer", c-modifiers: "__stdcall";
end;

define inline-only C-function glIndexd
  parameter c          :: <GLdouble>;
  c-name: "glIndexd", c-modifiers: "__stdcall";
end;

define inline-only C-function glIndexdv
  parameter c          :: <GLdouble*>;
  c-name: "glIndexdv", c-modifiers: "__stdcall";
end;

define inline-only C-function glIndexf
  parameter c          :: <GLfloat>;
  c-name: "glIndexf", c-modifiers: "__stdcall";
end;

define inline-only C-function glIndexfv
  parameter c          :: <GLfloat*>;
  c-name: "glIndexfv", c-modifiers: "__stdcall";
end;

define inline-only C-function glIndexi
  parameter c          :: <GLint>;
  c-name: "glIndexi", c-modifiers: "__stdcall";
end;

define inline-only C-function glIndexiv
  parameter c          :: <GLint*>;
  c-name: "glIndexiv", c-modifiers: "__stdcall";
end;

define inline-only C-function glIndexs
  parameter c          :: <GLshort>;
  c-name: "glIndexs", c-modifiers: "__stdcall";
end;

define inline-only C-function glIndexsv
  parameter c          :: <GLshort*>;
  c-name: "glIndexsv", c-modifiers: "__stdcall";
end;

define inline-only C-function glIndexub
  parameter c          :: <GLubyte>;
  c-name: "glIndexub", c-modifiers: "__stdcall";
end;

define inline-only C-function glIndexubv
  parameter c          :: <GLubyte*>;
  c-name: "glIndexubv", c-modifiers: "__stdcall";
end;

define inline-only C-function glInitNames
  c-name: "glInitNames", c-modifiers: "__stdcall";
end;

define inline-only C-function glInterleavedArrays
  parameter format     :: <GLenum>;
  parameter stride     :: <GLsizei>;
  parameter pointer    :: <GLvoid*>;
  c-name: "glInterleavedArrays", c-modifiers: "__stdcall";
end;

define inline-only C-function glIsEnabled
  parameter cap        :: <GLenum>;
  result value :: <GLboolean>;
  c-name: "glIsEnabled", c-modifiers: "__stdcall";
end;

define inline-only C-function glIsList
  parameter list       :: <GLuint>;
  result value :: <GLboolean>;
  c-name: "glIsList", c-modifiers: "__stdcall";
end;

define inline-only C-function glIsTexture
  parameter texture    :: <GLuint>;
  result value :: <GLboolean>;
  c-name: "glIsTexture", c-modifiers: "__stdcall";
end;

define inline-only C-function glLightModelf
  parameter pname      :: <GLenum>;
  parameter param      :: <GLfloat>;
  c-name: "glLightModelf", c-modifiers: "__stdcall";
end;

define inline-only C-function glLightModelfv
  parameter pname      :: <GLenum>;
  parameter params     :: <GLfloat*>;
  c-name: "glLightModelfv", c-modifiers: "__stdcall";
end;

define inline-only C-function glLightModeli
  parameter pname      :: <GLenum>;
  parameter param      :: <GLint>;
  c-name: "glLightModeli", c-modifiers: "__stdcall";
end;

define inline-only C-function glLightModeliv
  parameter pname      :: <GLenum>;
  parameter params     :: <GLint*>;
  c-name: "glLightModeliv", c-modifiers: "__stdcall";
end;

define inline-only C-function glLightf
  parameter light      :: <GLenum>;
  parameter pname      :: <GLenum>;
  parameter param      :: <GLfloat>;
  c-name: "glLightf", c-modifiers: "__stdcall";
end;

define inline-only C-function glLightfv
  parameter light      :: <GLenum>;
  parameter pname      :: <GLenum>;
  parameter params     :: <GLfloat*>;
  c-name: "glLightfv", c-modifiers: "__stdcall";
end;

define inline-only C-function glLighti
  parameter light      :: <GLenum>;
  parameter pname      :: <GLenum>;
  parameter param      :: <GLint>;
  c-name: "glLighti", c-modifiers: "__stdcall";
end;

define inline-only C-function glLightiv
  parameter light      :: <GLenum>;
  parameter pname      :: <GLenum>;
  parameter params     :: <GLint*>;
  c-name: "glLightiv", c-modifiers: "__stdcall";
end;

define inline-only C-function glLineStipple
  parameter factor     :: <GLint>;
  parameter pattern    :: <GLushort>;
  c-name: "glLineStipple", c-modifiers: "__stdcall";
end;

define inline-only C-function glLineWidth
  parameter width      :: <GLfloat>;
  c-name: "glLineWidth", c-modifiers: "__stdcall";
end;

define inline-only C-function glListBase
  parameter base       :: <GLuint>;
  c-name: "glListBase", c-modifiers: "__stdcall";
end;

define inline-only C-function glLoadIdentity
  c-name: "glLoadIdentity", c-modifiers: "__stdcall";
end;

define inline-only C-function glLoadMatrixd
  parameter m          :: <GLdouble*>;
  c-name: "glLoadMatrixd", c-modifiers: "__stdcall";
end;

define inline-only C-function glLoadMatrixf
  parameter m          :: <GLfloat*>;
  c-name: "glLoadMatrixf", c-modifiers: "__stdcall";
end;

define inline-only C-function glLoadName
  parameter name       :: <GLuint>;
  c-name: "glLoadName", c-modifiers: "__stdcall";
end;

define inline-only C-function glLogicOp
  parameter opcode     :: <GLenum>;
  c-name: "glLogicOp", c-modifiers: "__stdcall";
end;

define inline-only C-function glMap1d
  parameter target     :: <GLenum>;
  parameter u1         :: <GLdouble>;
  parameter u2         :: <GLdouble>;
  parameter stride     :: <GLint>;
  parameter order      :: <GLint>;
  parameter points     :: <GLdouble*>;
  c-name: "glMap1d", c-modifiers: "__stdcall";
end;

define inline-only C-function glMap1f
  parameter target     :: <GLenum>;
  parameter u1         :: <GLfloat>;
  parameter u2         :: <GLfloat>;
  parameter stride     :: <GLint>;
  parameter order      :: <GLint>;
  parameter points     :: <GLfloat*>;
  c-name: "glMap1f", c-modifiers: "__stdcall";
end;

define inline-only C-function glMap2d
  parameter target     :: <GLenum>;
  parameter u1         :: <GLdouble>;
  parameter u2         :: <GLdouble>;
  parameter ustride    :: <GLint>;
  parameter uorder     :: <GLint>;
  parameter v1         :: <GLdouble>;
  parameter v2         :: <GLdouble>;
  parameter vstride    :: <GLint>;
  parameter vorder     :: <GLint>;
  parameter points     :: <GLdouble*>;
  c-name: "glMap2d", c-modifiers: "__stdcall";
end;

define inline-only C-function glMap2f
  parameter target     :: <GLenum>;
  parameter u1         :: <GLfloat>;
  parameter u2         :: <GLfloat>;
  parameter ustride    :: <GLint>;
  parameter uorder     :: <GLint>;
  parameter v1         :: <GLfloat>;
  parameter v2         :: <GLfloat>;
  parameter vstride    :: <GLint>;
  parameter vorder     :: <GLint>;
  parameter points     :: <GLfloat*>;
  c-name: "glMap2f", c-modifiers: "__stdcall";
end;

define inline-only C-function glMapGrid1d
  parameter un         :: <GLint>;
  parameter u1         :: <GLdouble>;
  parameter u2         :: <GLdouble>;
  c-name: "glMapGrid1d", c-modifiers: "__stdcall";
end;

define inline-only C-function glMapGrid1f
  parameter un         :: <GLint>;
  parameter u1         :: <GLfloat>;
  parameter u2         :: <GLfloat>;
  c-name: "glMapGrid1f", c-modifiers: "__stdcall";
end;

define inline-only C-function glMapGrid2d
  parameter un         :: <GLint>;
  parameter u1         :: <GLdouble>;
  parameter u2         :: <GLdouble>;
  parameter vn         :: <GLint>;
  parameter v1         :: <GLdouble>;
  parameter v2         :: <GLdouble>;
  c-name: "glMapGrid2d", c-modifiers: "__stdcall";
end;

define inline-only C-function glMapGrid2f
  parameter un         :: <GLint>;
  parameter u1         :: <GLfloat>;
  parameter u2         :: <GLfloat>;
  parameter vn         :: <GLint>;
  parameter v1         :: <GLfloat>;
  parameter v2         :: <GLfloat>;
  c-name: "glMapGrid2f", c-modifiers: "__stdcall";
end;

define inline-only C-function glMaterialf
  parameter face       :: <GLenum>;
  parameter pname      :: <GLenum>;
  parameter param      :: <GLfloat>;
  c-name: "glMaterialf", c-modifiers: "__stdcall";
end;

define inline-only C-function glMaterialfv
  parameter face       :: <GLenum>;
  parameter pname      :: <GLenum>;
  parameter params     :: <GLfloat*>;
  c-name: "glMaterialfv", c-modifiers: "__stdcall";
end;

define inline-only C-function glMateriali
  parameter face       :: <GLenum>;
  parameter pname      :: <GLenum>;
  parameter param      :: <GLint>;
  c-name: "glMateriali", c-modifiers: "__stdcall";
end;

define inline-only C-function glMaterialiv
  parameter face       :: <GLenum>;
  parameter pname      :: <GLenum>;
  parameter params     :: <GLint*>;
  c-name: "glMaterialiv", c-modifiers: "__stdcall";
end;

define inline-only C-function glMatrixMode
  parameter mode       :: <GLenum>;
  c-name: "glMatrixMode", c-modifiers: "__stdcall";
end;

define inline-only C-function glMultMatrixd
  parameter m          :: <GLdouble*>;
  c-name: "glMultMatrixd", c-modifiers: "__stdcall";
end;

define inline-only C-function glMultMatrixf
  parameter m          :: <GLfloat*>;
  c-name: "glMultMatrixf", c-modifiers: "__stdcall";
end;

define inline-only C-function glNewList
  parameter list       :: <GLuint>;
  parameter mode       :: <GLenum>;
  c-name: "glNewList", c-modifiers: "__stdcall";
end;

define inline-only C-function glNormal3b
  parameter nx         :: <GLbyte>;
  parameter ny         :: <GLbyte>;
  parameter nz         :: <GLbyte>;
  c-name: "glNormal3b", c-modifiers: "__stdcall";
end;

define inline-only C-function glNormal3bv
  parameter v          :: <GLbyte*>;
  c-name: "glNormal3bv", c-modifiers: "__stdcall";
end;

define inline-only C-function glNormal3d
  parameter nx         :: <GLdouble>;
  parameter ny         :: <GLdouble>;
  parameter nz         :: <GLdouble>;
  c-name: "glNormal3d", c-modifiers: "__stdcall";
end;

define inline-only C-function glNormal3dv
  parameter v          :: <GLdouble*>;
  c-name: "glNormal3dv", c-modifiers: "__stdcall";
end;

define inline-only C-function glNormal3f
  parameter nx         :: <GLfloat>;
  parameter ny         :: <GLfloat>;
  parameter nz         :: <GLfloat>;
  c-name: "glNormal3f", c-modifiers: "__stdcall";
end;

define inline-only C-function glNormal3fv
  parameter v          :: <GLfloat*>;
  c-name: "glNormal3fv", c-modifiers: "__stdcall";
end;

define inline-only C-function glNormal3i
  parameter nx         :: <GLint>;
  parameter ny         :: <GLint>;
  parameter nz         :: <GLint>;
  c-name: "glNormal3i", c-modifiers: "__stdcall";
end;

define inline-only C-function glNormal3iv
  parameter v          :: <GLint*>;
  c-name: "glNormal3iv", c-modifiers: "__stdcall";
end;

define inline-only C-function glNormal3s
  parameter nx         :: <GLshort>;
  parameter ny         :: <GLshort>;
  parameter nz         :: <GLshort>;
  c-name: "glNormal3s", c-modifiers: "__stdcall";
end;

define inline-only C-function glNormal3sv
  parameter v          :: <GLshort*>;
  c-name: "glNormal3sv", c-modifiers: "__stdcall";
end;

define inline-only C-function glNormalPointer
  parameter type       :: <GLenum>;
  parameter stride     :: <GLsizei>;
  parameter pointer    :: <GLvoid*>;
  c-name: "glNormalPointer", c-modifiers: "__stdcall";
end;

define inline-only C-function glOrtho
  parameter left       :: <GLdouble>;
  parameter right      :: <GLdouble>;
  parameter bottom     :: <GLdouble>;
  parameter top        :: <GLdouble>;
  parameter zNear      :: <GLdouble>;
  parameter zFar       :: <GLdouble>;
  c-name: "glOrtho", c-modifiers: "__stdcall";
end;

define inline-only C-function glPassThrough
  parameter token      :: <GLfloat>;
  c-name: "glPassThrough", c-modifiers: "__stdcall";
end;

define inline-only C-function glPixelMapfv
  parameter map        :: <GLenum>;
  parameter mapsize    :: <GLsizei>;
  parameter valuze     :: <GLfloat*>;
  c-name: "glPixelMapfv", c-modifiers: "__stdcall";
end;

define inline-only C-function glPixelMapuiv
  parameter map        :: <GLenum>;
  parameter mapsize    :: <GLsizei>;
  parameter valuze     :: <GLuint*>;
  c-name: "glPixelMapuiv", c-modifiers: "__stdcall";
end;

define inline-only C-function glPixelMapusv
  parameter map        :: <GLenum>;
  parameter mapsize    :: <GLsizei>;
  parameter valuze     :: <GLushort*>;
  c-name: "glPixelMapusv", c-modifiers: "__stdcall";
end;

define inline-only C-function glPixelStoref
  parameter pname      :: <GLenum>;
  parameter param      :: <GLfloat>;
  c-name: "glPixelStoref", c-modifiers: "__stdcall";
end;

define inline-only C-function glPixelStorei
  parameter pname      :: <GLenum>;
  parameter param      :: <GLint>;
  c-name: "glPixelStorei", c-modifiers: "__stdcall";
end;

define inline-only C-function glPixelTransferf
  parameter pname      :: <GLenum>;
  parameter param      :: <GLfloat>;
  c-name: "glPixelTransferf", c-modifiers: "__stdcall";
end;

define inline-only C-function glPixelTransferi
  parameter pname      :: <GLenum>;
  parameter param      :: <GLint>;
  c-name: "glPixelTransferi", c-modifiers: "__stdcall";
end;

define inline-only C-function glPixelZoom
  parameter xfactor    :: <GLfloat>;
  parameter yfactor    :: <GLfloat>;
  c-name: "glPixelZoom", c-modifiers: "__stdcall";
end;

define inline-only C-function glPointSize
  parameter size       :: <GLfloat>;
  c-name: "glPointSize", c-modifiers: "__stdcall";
end;

define inline-only C-function glPolygonMode
  parameter face       :: <GLenum>;
  parameter mode       :: <GLenum>;
  c-name: "glPolygonMode", c-modifiers: "__stdcall";
end;

define inline-only C-function glPolygonOffset
  parameter factor     :: <GLfloat>;
  parameter units      :: <GLfloat>;
  c-name: "glPolygonOffset", c-modifiers: "__stdcall";
end;

define inline-only C-function glPolygonStipple
  parameter mask       :: <GLubyte*>;
  c-name: "glPolygonStipple", c-modifiers: "__stdcall";
end;

define inline-only C-function glPopAttrib
  c-name: "glPopAttrib", c-modifiers: "__stdcall";
end;

define inline-only C-function glPopClientAttrib
  c-name: "glPopClientAttrib", c-modifiers: "__stdcall";
end;

define inline-only C-function glPopMatrix
  c-name: "glPopMatrix", c-modifiers: "__stdcall";
end;

define inline-only C-function glPopName
  c-name: "glPopName", c-modifiers: "__stdcall";
end;

define inline-only C-function glPrioritizeTextures
  parameter n          :: <GLsizei>;
  parameter textures   :: <GLuint*>;
  parameter priorities :: <GLclampf*>;
  c-name: "glPrioritizeTextures", c-modifiers: "__stdcall";
end;

define inline-only C-function glPushAttrib
  parameter mask       :: <GLbitfield>;
  c-name: "glPushAttrib", c-modifiers: "__stdcall";
end;

define inline-only C-function glPushClientAttrib
  parameter mask       :: <GLbitfield>;
  c-name: "glPushClientAttrib", c-modifiers: "__stdcall";
end;

define inline-only C-function glPushMatrix
  c-name: "glPushMatrix", c-modifiers: "__stdcall";
end;

define inline-only C-function glPushName
  parameter name       :: <GLuint>;
  c-name: "glPushName", c-modifiers: "__stdcall";
end;

define inline-only C-function glRasterPos2d
  parameter x          :: <GLdouble>;
  parameter y          :: <GLdouble>;
  c-name: "glRasterPos2d", c-modifiers: "__stdcall";
end;

define inline-only C-function glRasterPos2dv
  parameter v          :: <GLdouble*>;
  c-name: "glRasterPos2dv", c-modifiers: "__stdcall";
end;

define inline-only C-function glRasterPos2f
  parameter x          :: <GLfloat>;
  parameter y          :: <GLfloat>;
  c-name: "glRasterPos2f", c-modifiers: "__stdcall";
end;

define inline-only C-function glRasterPos2fv
  parameter v          :: <GLfloat*>;
  c-name: "glRasterPos2fv", c-modifiers: "__stdcall";
end;

define inline-only C-function glRasterPos2i
  parameter x          :: <GLint>;
  parameter y          :: <GLint>;
  c-name: "glRasterPos2i", c-modifiers: "__stdcall";
end;

define inline-only C-function glRasterPos2iv
  parameter v          :: <GLint*>;
  c-name: "glRasterPos2iv", c-modifiers: "__stdcall";
end;

define inline-only C-function glRasterPos2s
  parameter x          :: <GLshort>;
  parameter y          :: <GLshort>;
  c-name: "glRasterPos2s", c-modifiers: "__stdcall";
end;

define inline-only C-function glRasterPos2sv
  parameter v          :: <GLshort*>;
  c-name: "glRasterPos2sv", c-modifiers: "__stdcall";
end;

define inline-only C-function glRasterPos3d
  parameter x          :: <GLdouble>;
  parameter y          :: <GLdouble>;
  parameter z          :: <GLdouble>;
  c-name: "glRasterPos3d", c-modifiers: "__stdcall";
end;

define inline-only C-function glRasterPos3dv
  parameter v          :: <GLdouble*>;
  c-name: "glRasterPos3dv", c-modifiers: "__stdcall";
end;

define inline-only C-function glRasterPos3f
  parameter x          :: <GLfloat>;
  parameter y          :: <GLfloat>;
  parameter z          :: <GLfloat>;
  c-name: "glRasterPos3f", c-modifiers: "__stdcall";
end;

define inline-only C-function glRasterPos3fv
  parameter v          :: <GLfloat*>;
  c-name: "glRasterPos3fv", c-modifiers: "__stdcall";
end;

define inline-only C-function glRasterPos3i
  parameter x          :: <GLint>;
  parameter y          :: <GLint>;
  parameter z          :: <GLint>;
  c-name: "glRasterPos3i", c-modifiers: "__stdcall";
end;

define inline-only C-function glRasterPos3iv
  parameter v          :: <GLint*>;
  c-name: "glRasterPos3iv", c-modifiers: "__stdcall";
end;

define inline-only C-function glRasterPos3s
  parameter x          :: <GLshort>;
  parameter y          :: <GLshort>;
  parameter z          :: <GLshort>;
  c-name: "glRasterPos3s", c-modifiers: "__stdcall";
end;

define inline-only C-function glRasterPos3sv
  parameter v          :: <GLshort*>;
  c-name: "glRasterPos3sv", c-modifiers: "__stdcall";
end;

define inline-only C-function glRasterPos4d
  parameter x          :: <GLdouble>;
  parameter y          :: <GLdouble>;
  parameter z          :: <GLdouble>;
  parameter w          :: <GLdouble>;
  c-name: "glRasterPos4d", c-modifiers: "__stdcall";
end;

define inline-only C-function glRasterPos4dv
  parameter v          :: <GLdouble*>;
  c-name: "glRasterPos4dv", c-modifiers: "__stdcall";
end;

define inline-only C-function glRasterPos4f
  parameter x          :: <GLfloat>;
  parameter y          :: <GLfloat>;
  parameter z          :: <GLfloat>;
  parameter w          :: <GLfloat>;
  c-name: "glRasterPos4f", c-modifiers: "__stdcall";
end;

define inline-only C-function glRasterPos4fv
  parameter v          :: <GLfloat*>;
  c-name: "glRasterPos4fv", c-modifiers: "__stdcall";
end;

define inline-only C-function glRasterPos4i
  parameter x          :: <GLint>;
  parameter y          :: <GLint>;
  parameter z          :: <GLint>;
  parameter w          :: <GLint>;
  c-name: "glRasterPos4i", c-modifiers: "__stdcall";
end;

define inline-only C-function glRasterPos4iv
  parameter v          :: <GLint*>;
  c-name: "glRasterPos4iv", c-modifiers: "__stdcall";
end;

define inline-only C-function glRasterPos4s
  parameter x          :: <GLshort>;
  parameter y          :: <GLshort>;
  parameter z          :: <GLshort>;
  parameter w          :: <GLshort>;
  c-name: "glRasterPos4s", c-modifiers: "__stdcall";
end;

define inline-only C-function glRasterPos4sv
  parameter v          :: <GLshort*>;
  c-name: "glRasterPos4sv", c-modifiers: "__stdcall";
end;

define inline-only C-function glReadBuffer
  parameter mode       :: <GLenum>;
  c-name: "glReadBuffer", c-modifiers: "__stdcall";
end;

define inline-only C-function glReadPixels
  parameter x          :: <GLint>;
  parameter y          :: <GLint>;
  parameter width      :: <GLsizei>;
  parameter height     :: <GLsizei>;
  parameter format     :: <GLenum>;
  parameter type       :: <GLenum>;
  parameter pixels     :: <GLvoid*>;
  c-name: "glReadPixels", c-modifiers: "__stdcall";
end;

define inline-only C-function glRectd
  parameter x1         :: <GLdouble>;
  parameter y1         :: <GLdouble>;
  parameter x2         :: <GLdouble>;
  parameter y2         :: <GLdouble>;
  c-name: "glRectd", c-modifiers: "__stdcall";
end;

define inline-only C-function glRectdv
  parameter v1         :: <GLdouble*>;
  parameter v2         :: <GLdouble*>;
  c-name: "glRectdv", c-modifiers: "__stdcall";
end;

define inline-only C-function glRectf
  parameter x1         :: <GLfloat>;
  parameter y1         :: <GLfloat>;
  parameter x2         :: <GLfloat>;
  parameter y2         :: <GLfloat>;
  c-name: "glRectf", c-modifiers: "__stdcall";
end;

define inline-only C-function glRectfv
  parameter v1         :: <GLfloat*>;
  parameter v2         :: <GLfloat*>;
  c-name: "glRectfv", c-modifiers: "__stdcall";
end;

define inline-only C-function glRecti
  parameter x1         :: <GLint>;
  parameter y1         :: <GLint>;
  parameter x2         :: <GLint>;
  parameter y2         :: <GLint>;
  c-name: "glRecti", c-modifiers: "__stdcall";
end;

define inline-only C-function glRectiv
  parameter v1         :: <GLint*>;
  parameter v2         :: <GLint*>;
  c-name: "glRectiv", c-modifiers: "__stdcall";
end;

define inline-only C-function glRects
  parameter x1         :: <GLshort>;
  parameter y1         :: <GLshort>;
  parameter x2         :: <GLshort>;
  parameter y2         :: <GLshort>;
  c-name: "glRects", c-modifiers: "__stdcall";
end;

define inline-only C-function glRectsv
  parameter v1         :: <GLshort*>;
  parameter v2         :: <GLshort*>;
  c-name: "glRectsv", c-modifiers: "__stdcall";
end;

define inline-only C-function glRenderMode
  parameter mode       :: <GLenum>;
  result value :: <GLint>;
  c-name: "glRenderMode", c-modifiers: "__stdcall";
end;

define inline-only C-function glRotated
  parameter angle      :: <GLdouble>;
  parameter x          :: <GLdouble>;
  parameter y          :: <GLdouble>;
  parameter z          :: <GLdouble>;
  c-name: "glRotated", c-modifiers: "__stdcall";
end;

define inline-only C-function glRotatef
  parameter angle      :: <GLfloat>;
  parameter x          :: <GLfloat>;
  parameter y          :: <GLfloat>;
  parameter z          :: <GLfloat>;
  c-name: "glRotatef", c-modifiers: "__stdcall";
end;

define inline-only C-function glScaled
  parameter x          :: <GLdouble>;
  parameter y          :: <GLdouble>;
  parameter z          :: <GLdouble>;
  c-name: "glScaled", c-modifiers: "__stdcall";
end;

define inline-only C-function glScalef
  parameter x          :: <GLfloat>;
  parameter y          :: <GLfloat>;
  parameter z          :: <GLfloat>;
  c-name: "glScalef", c-modifiers: "__stdcall";
end;

define inline-only C-function glScissor
  parameter x          :: <GLint>;
  parameter y          :: <GLint>;
  parameter width      :: <GLsizei>;
  parameter height     :: <GLsizei>;
  c-name: "glScissor", c-modifiers: "__stdcall";
end;

define inline-only C-function glSelectBuffer
  parameter size       :: <GLsizei>;
  parameter buffer     :: <GLuint*>;
  c-name: "glSelectBuffer", c-modifiers: "__stdcall";
end;

define inline-only C-function glShadeModel
  parameter mode       :: <GLenum>;
  c-name: "glShadeModel", c-modifiers: "__stdcall";
end;

define inline-only C-function glStencilFunc
  parameter func       :: <GLenum>;
  parameter ref        :: <GLint>;
  parameter mask       :: <GLuint>;
  c-name: "glStencilFunc", c-modifiers: "__stdcall";
end;

define inline-only C-function glStencilMask
  parameter mask       :: <GLuint>;
  c-name: "glStencilMask", c-modifiers: "__stdcall";
end;

define inline-only C-function glStencilOp
  parameter fail       :: <GLenum>;
  parameter zfail      :: <GLenum>;
  parameter zpass      :: <GLenum>;
  c-name: "glStencilOp", c-modifiers: "__stdcall";
end;

define inline-only C-function glTexCoord1d
  parameter s          :: <GLdouble>;
  c-name: "glTexCoord1d", c-modifiers: "__stdcall";
end;

define inline-only C-function glTexCoord1dv
  parameter v          :: <GLdouble*>;
  c-name: "glTexCoord1dv", c-modifiers: "__stdcall";
end;

define inline-only C-function glTexCoord1f
  parameter s          :: <GLfloat>;
  c-name: "glTexCoord1f", c-modifiers: "__stdcall";
end;

define inline-only C-function glTexCoord1fv
  parameter v          :: <GLfloat*>;
  c-name: "glTexCoord1fv", c-modifiers: "__stdcall";
end;

define inline-only C-function glTexCoord1i
  parameter s          :: <GLint>;
  c-name: "glTexCoord1i", c-modifiers: "__stdcall";
end;

define inline-only C-function glTexCoord1iv
  parameter v          :: <GLint*>;
  c-name: "glTexCoord1iv", c-modifiers: "__stdcall";
end;

define inline-only C-function glTexCoord1s
  parameter s          :: <GLshort>;
  c-name: "glTexCoord1s", c-modifiers: "__stdcall";
end;

define inline-only C-function glTexCoord1sv
  parameter v          :: <GLshort*>;
  c-name: "glTexCoord1sv", c-modifiers: "__stdcall";
end;

define inline-only C-function glTexCoord2d
  parameter s          :: <GLdouble>;
  parameter t          :: <GLdouble>;
  c-name: "glTexCoord2d", c-modifiers: "__stdcall";
end;

define inline-only C-function glTexCoord2dv
  parameter v          :: <GLdouble*>;
  c-name: "glTexCoord2dv", c-modifiers: "__stdcall";
end;

define inline-only C-function glTexCoord2f
  parameter s          :: <GLfloat>;
  parameter t          :: <GLfloat>;
  c-name: "glTexCoord2f", c-modifiers: "__stdcall";
end;

define inline-only C-function glTexCoord2fv
  parameter v          :: <GLfloat*>;
  c-name: "glTexCoord2fv", c-modifiers: "__stdcall";
end;

define inline-only C-function glTexCoord2i
  parameter s          :: <GLint>;
  parameter t          :: <GLint>;
  c-name: "glTexCoord2i", c-modifiers: "__stdcall";
end;

define inline-only C-function glTexCoord2iv
  parameter v          :: <GLint*>;
  c-name: "glTexCoord2iv", c-modifiers: "__stdcall";
end;

define inline-only C-function glTexCoord2s
  parameter s          :: <GLshort>;
  parameter t          :: <GLshort>;
  c-name: "glTexCoord2s", c-modifiers: "__stdcall";
end;

define inline-only C-function glTexCoord2sv
  parameter v          :: <GLshort*>;
  c-name: "glTexCoord2sv", c-modifiers: "__stdcall";
end;

define inline-only C-function glTexCoord3d
  parameter s          :: <GLdouble>;
  parameter t          :: <GLdouble>;
  parameter r          :: <GLdouble>;
  c-name: "glTexCoord3d", c-modifiers: "__stdcall";
end;

define inline-only C-function glTexCoord3dv
  parameter v          :: <GLdouble*>;
  c-name: "glTexCoord3dv", c-modifiers: "__stdcall";
end;

define inline-only C-function glTexCoord3f
  parameter s          :: <GLfloat>;
  parameter t          :: <GLfloat>;
  parameter r          :: <GLfloat>;
  c-name: "glTexCoord3f", c-modifiers: "__stdcall";
end;

define inline-only C-function glTexCoord3fv
  parameter v          :: <GLfloat*>;
  c-name: "glTexCoord3fv", c-modifiers: "__stdcall";
end;

define inline-only C-function glTexCoord3i
  parameter s          :: <GLint>;
  parameter t          :: <GLint>;
  parameter r          :: <GLint>;
  c-name: "glTexCoord3i", c-modifiers: "__stdcall";
end;

define inline-only C-function glTexCoord3iv
  parameter v          :: <GLint*>;
  c-name: "glTexCoord3iv", c-modifiers: "__stdcall";
end;

define inline-only C-function glTexCoord3s
  parameter s          :: <GLshort>;
  parameter t          :: <GLshort>;
  parameter r          :: <GLshort>;
  c-name: "glTexCoord3s", c-modifiers: "__stdcall";
end;

define inline-only C-function glTexCoord3sv
  parameter v          :: <GLshort*>;
  c-name: "glTexCoord3sv", c-modifiers: "__stdcall";
end;

define inline-only C-function glTexCoord4d
  parameter s          :: <GLdouble>;
  parameter t          :: <GLdouble>;
  parameter r          :: <GLdouble>;
  parameter q          :: <GLdouble>;
  c-name: "glTexCoord4d", c-modifiers: "__stdcall";
end;

define inline-only C-function glTexCoord4dv
  parameter v          :: <GLdouble*>;
  c-name: "glTexCoord4dv", c-modifiers: "__stdcall";
end;

define inline-only C-function glTexCoord4f
  parameter s          :: <GLfloat>;
  parameter t          :: <GLfloat>;
  parameter r          :: <GLfloat>;
  parameter q          :: <GLfloat>;
  c-name: "glTexCoord4f", c-modifiers: "__stdcall";
end;

define inline-only C-function glTexCoord4fv
  parameter v          :: <GLfloat*>;
  c-name: "glTexCoord4fv", c-modifiers: "__stdcall";
end;

define inline-only C-function glTexCoord4i
  parameter s          :: <GLint>;
  parameter t          :: <GLint>;
  parameter r          :: <GLint>;
  parameter q          :: <GLint>;
  c-name: "glTexCoord4i", c-modifiers: "__stdcall";
end;

define inline-only C-function glTexCoord4iv
  parameter v          :: <GLint*>;
  c-name: "glTexCoord4iv", c-modifiers: "__stdcall";
end;

define inline-only C-function glTexCoord4s
  parameter s          :: <GLshort>;
  parameter t          :: <GLshort>;
  parameter r          :: <GLshort>;
  parameter q          :: <GLshort>;
  c-name: "glTexCoord4s", c-modifiers: "__stdcall";
end;

define inline-only C-function glTexCoord4sv
  parameter v          :: <GLshort*>;
  c-name: "glTexCoord4sv", c-modifiers: "__stdcall";
end;

define inline-only C-function glTexCoordPointer
  parameter size       :: <GLint>;
  parameter type       :: <GLenum>;
  parameter stride     :: <GLsizei>;
  parameter pointer    :: <GLvoid*>;
  c-name: "glTexCoordPointer", c-modifiers: "__stdcall";
end;

define inline-only C-function glTexEnvf
  parameter target     :: <GLenum>;
  parameter pname      :: <GLenum>;
  parameter param      :: <GLfloat>;
  c-name: "glTexEnvf", c-modifiers: "__stdcall";
end;

define inline-only C-function glTexEnvfv
  parameter target     :: <GLenum>;
  parameter pname      :: <GLenum>;
  parameter params     :: <GLfloat*>;
  c-name: "glTexEnvfv", c-modifiers: "__stdcall";
end;

define inline-only C-function glTexEnvi
  parameter target     :: <GLenum>;
  parameter pname      :: <GLenum>;
  parameter param      :: <GLint>;
  c-name: "glTexEnvi", c-modifiers: "__stdcall";
end;

define inline-only C-function glTexEnviv
  parameter target     :: <GLenum>;
  parameter pname      :: <GLenum>;
  parameter params     :: <GLint*>;
  c-name: "glTexEnviv", c-modifiers: "__stdcall";
end;

define inline-only C-function glTexGend
  parameter coord      :: <GLenum>;
  parameter pname      :: <GLenum>;
  parameter param      :: <GLdouble>;
  c-name: "glTexGend", c-modifiers: "__stdcall";
end;

define inline-only C-function glTexGendv
  parameter coord      :: <GLenum>;
  parameter pname      :: <GLenum>;
  parameter params     :: <GLdouble*>;
  c-name: "glTexGendv", c-modifiers: "__stdcall";
end;

define inline-only C-function glTexGenf
  parameter coord      :: <GLenum>;
  parameter pname      :: <GLenum>;
  parameter param      :: <GLfloat>;
  c-name: "glTexGenf", c-modifiers: "__stdcall";
end;

define inline-only C-function glTexGenfv
  parameter coord      :: <GLenum>;
  parameter pname      :: <GLenum>;
  parameter params     :: <GLfloat*>;
  c-name: "glTexGenfv", c-modifiers: "__stdcall";
end;

define inline-only C-function glTexGeni
  parameter coord      :: <GLenum>;
  parameter pname      :: <GLenum>;
  parameter param      :: <GLint>;
  c-name: "glTexGeni", c-modifiers: "__stdcall";
end;

define inline-only C-function glTexGeniv
  parameter coord      :: <GLenum>;
  parameter pname      :: <GLenum>;
  parameter params     :: <GLint*>;
  c-name: "glTexGeniv", c-modifiers: "__stdcall";
end;

define inline-only C-function glTexImage1D
  parameter target     :: <GLenum>;
  parameter level      :: <GLint>;
  parameter internalformat :: <GLint>;
  parameter width      :: <GLsizei>;
  parameter border     :: <GLint>;
  parameter format     :: <GLenum>;
  parameter type       :: <GLenum>;
  parameter pixels     :: <GLvoid*>;
  c-name: "glTexImage1D", c-modifiers: "__stdcall";
end;

define inline-only C-function glTexImage2D
  parameter target     :: <GLenum>;
  parameter level      :: <GLint>;
  parameter internalformat :: <GLint>;
  parameter width      :: <GLsizei>;
  parameter height     :: <GLsizei>;
  parameter border     :: <GLint>;
  parameter format     :: <GLenum>;
  parameter type       :: <GLenum>;
  parameter pixels     :: <GLvoid*>;
  c-name: "glTexImage2D", c-modifiers: "__stdcall";
end;

define inline-only C-function glTexParameterf
  parameter target     :: <GLenum>;
  parameter pname      :: <GLenum>;
  parameter param      :: <GLfloat>;
  c-name: "glTexParameterf", c-modifiers: "__stdcall";
end;

define inline-only C-function glTexParameterfv
  parameter target     :: <GLenum>;
  parameter pname      :: <GLenum>;
  parameter params     :: <GLfloat*>;
  c-name: "glTexParameterfv", c-modifiers: "__stdcall";
end;

define inline-only C-function glTexParameteri
  parameter target     :: <GLenum>;
  parameter pname      :: <GLenum>;
  parameter param      :: <GLint>;
  c-name: "glTexParameteri", c-modifiers: "__stdcall";
end;

define inline-only C-function glTexParameteriv
  parameter target     :: <GLenum>;
  parameter pname      :: <GLenum>;
  parameter params     :: <GLint*>;
  c-name: "glTexParameteriv", c-modifiers: "__stdcall";
end;

define inline-only C-function glTexSubImage1D
  parameter target     :: <GLenum>;
  parameter level      :: <GLint>;
  parameter xoffset    :: <GLint>;
  parameter width      :: <GLsizei>;
  parameter format     :: <GLenum>;
  parameter type       :: <GLenum>;
  parameter pixels     :: <GLvoid*>;
  c-name: "glTexSubImage1D", c-modifiers: "__stdcall";
end;

define inline-only C-function glTexSubImage2D
  parameter target     :: <GLenum>;
  parameter level      :: <GLint>;
  parameter xoffset    :: <GLint>;
  parameter yoffset    :: <GLint>;
  parameter width      :: <GLsizei>;
  parameter height     :: <GLsizei>;
  parameter format     :: <GLenum>;
  parameter type       :: <GLenum>;
  parameter pixels     :: <GLvoid*>;
  c-name: "glTexSubImage2D", c-modifiers: "__stdcall";
end;

define inline-only C-function glTranslated
  parameter x          :: <GLdouble>;
  parameter y          :: <GLdouble>;
  parameter z          :: <GLdouble>;
  c-name: "glTranslated", c-modifiers: "__stdcall";
end;

define inline-only C-function glTranslatef
  parameter x          :: <GLfloat>;
  parameter y          :: <GLfloat>;
  parameter z          :: <GLfloat>;
  c-name: "glTranslatef", c-modifiers: "__stdcall";
end;

define inline-only C-function glVertex2d
  parameter x          :: <GLdouble>;
  parameter y          :: <GLdouble>;
  c-name: "glVertex2d", c-modifiers: "__stdcall";
end;

define inline-only C-function glVertex2dv
  parameter v          :: <GLdouble*>;
  c-name: "glVertex2dv", c-modifiers: "__stdcall";
end;

define inline-only C-function glVertex2f
  parameter x          :: <GLfloat>;
  parameter y          :: <GLfloat>;
  c-name: "glVertex2f", c-modifiers: "__stdcall";
end;

define inline-only C-function glVertex2fv
  parameter v          :: <GLfloat*>;
  c-name: "glVertex2fv", c-modifiers: "__stdcall";
end;

define inline-only C-function glVertex2i
  parameter x          :: <GLint>;
  parameter y          :: <GLint>;
  c-name: "glVertex2i", c-modifiers: "__stdcall";
end;

define inline-only C-function glVertex2iv
  parameter v          :: <GLint*>;
  c-name: "glVertex2iv", c-modifiers: "__stdcall";
end;

define inline-only C-function glVertex2s
  parameter x          :: <GLshort>;
  parameter y          :: <GLshort>;
  c-name: "glVertex2s", c-modifiers: "__stdcall";
end;

define inline-only C-function glVertex2sv
  parameter v          :: <GLshort*>;
  c-name: "glVertex2sv", c-modifiers: "__stdcall";
end;

define inline-only C-function glVertex3d
  parameter x          :: <GLdouble>;
  parameter y          :: <GLdouble>;
  parameter z          :: <GLdouble>;
  c-name: "glVertex3d", c-modifiers: "__stdcall";
end;

define inline-only C-function glVertex3dv
  parameter v          :: <GLdouble*>;
  c-name: "glVertex3dv", c-modifiers: "__stdcall";
end;

define inline-only C-function glVertex3f
  parameter x          :: <GLfloat>;
  parameter y          :: <GLfloat>;
  parameter z          :: <GLfloat>;
  c-name: "glVertex3f", c-modifiers: "__stdcall";
end;

define inline-only C-function glVertex3fv
  parameter v          :: <GLfloat*>;
  c-name: "glVertex3fv", c-modifiers: "__stdcall";
end;

define inline-only C-function glVertex3i
  parameter x          :: <GLint>;
  parameter y          :: <GLint>;
  parameter z          :: <GLint>;
  c-name: "glVertex3i", c-modifiers: "__stdcall";
end;

define inline-only C-function glVertex3iv
  parameter v          :: <GLint*>;
  c-name: "glVertex3iv", c-modifiers: "__stdcall";
end;

define inline-only C-function glVertex3s
  parameter x          :: <GLshort>;
  parameter y          :: <GLshort>;
  parameter z          :: <GLshort>;
  c-name: "glVertex3s", c-modifiers: "__stdcall";
end;

define inline-only C-function glVertex3sv
  parameter v          :: <GLshort*>;
  c-name: "glVertex3sv", c-modifiers: "__stdcall";
end;

define inline-only C-function glVertex4d
  parameter x          :: <GLdouble>;
  parameter y          :: <GLdouble>;
  parameter z          :: <GLdouble>;
  parameter w          :: <GLdouble>;
  c-name: "glVertex4d", c-modifiers: "__stdcall";
end;

define inline-only C-function glVertex4dv
  parameter v          :: <GLdouble*>;
  c-name: "glVertex4dv", c-modifiers: "__stdcall";
end;

define inline-only C-function glVertex4f
  parameter x          :: <GLfloat>;
  parameter y          :: <GLfloat>;
  parameter z          :: <GLfloat>;
  parameter w          :: <GLfloat>;
  c-name: "glVertex4f", c-modifiers: "__stdcall";
end;

define inline-only C-function glVertex4fv
  parameter v          :: <GLfloat*>;
  c-name: "glVertex4fv", c-modifiers: "__stdcall";
end;

define inline-only C-function glVertex4i
  parameter x          :: <GLint>;
  parameter y          :: <GLint>;
  parameter z          :: <GLint>;
  parameter w          :: <GLint>;
  c-name: "glVertex4i", c-modifiers: "__stdcall";
end;

define inline-only C-function glVertex4iv
  parameter v          :: <GLint*>;
  c-name: "glVertex4iv", c-modifiers: "__stdcall";
end;

define inline-only C-function glVertex4s
  parameter x          :: <GLshort>;
  parameter y          :: <GLshort>;
  parameter z          :: <GLshort>;
  parameter w          :: <GLshort>;
  c-name: "glVertex4s", c-modifiers: "__stdcall";
end;

define inline-only C-function glVertex4sv
  parameter v          :: <GLshort*>;
  c-name: "glVertex4sv", c-modifiers: "__stdcall";
end;

define inline-only C-function glVertexPointer
  parameter size       :: <GLint>;
  parameter type       :: <GLenum>;
  parameter stride     :: <GLsizei>;
  parameter pointer    :: <GLvoid*>;
  c-name: "glVertexPointer", c-modifiers: "__stdcall";
end;

define inline-only C-function glViewport
  parameter x          :: <GLint>;
  parameter y          :: <GLint>;
  parameter width      :: <GLsizei>;
  parameter height     :: <GLsizei>;
  c-name: "glViewport", c-modifiers: "__stdcall";
end;
define constant <PFNGLARRAYELEMENTEXTPROC> = <C-function-pointer>;
define constant <PFNGLDRAWARRAYSEXTPROC> = <C-function-pointer>;
define constant <PFNGLVERTEXPOINTEREXTPROC> = <C-function-pointer>;
define constant <PFNGLNORMALPOINTEREXTPROC> = <C-function-pointer>;
define constant <PFNGLCOLORPOINTEREXTPROC> = <C-function-pointer>;
define constant <PFNGLINDEXPOINTEREXTPROC> = <C-function-pointer>;
define constant <PFNGLTEXCOORDPOINTEREXTPROC> = <C-function-pointer>;
define constant <PFNGLEDGEFLAGPOINTEREXTPROC> = <C-function-pointer>;
define constant <PFNGLGETPOINTERVEXTPROC> = <C-function-pointer>;
define constant <PFNGLARRAYELEMENTARRAYEXTPROC> = <C-function-pointer>;
define constant <PFNGLADDSWAPHINTRECTWINPROC> = <C-function-pointer>;
define constant <PFNGLCOLORTABLEEXTPROC> = <C-function-pointer>;
define constant <PFNGLCOLORSUBTABLEEXTPROC> = <C-function-pointer>;
define constant <PFNGLGETCOLORTABLEEXTPROC> = <C-function-pointer>;
define constant <PFNGLGETCOLORTABLEPARAMETERIVEXTPROC> = <C-function-pointer>;
define constant <PFNGLGETCOLORTABLEPARAMETERFVEXTPROC> = <C-function-pointer>;

define inline-only constant $GL-DOUBLE-EXT = $GL-DOUBLE;
define inline-only constant $GL-LOGIC-OP = $GL-INDEX-LOGIC-OP;
