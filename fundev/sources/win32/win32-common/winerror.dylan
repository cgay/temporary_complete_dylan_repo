Module:    Win32-common
Copyright:    Original Code is Copyright (c) 1995-2004 Functional Objects, Inc.
              All rights reserved.
License:      See License.txt in this distribution for details.
Warranty:     Distributed WITHOUT WARRANTY OF ANY KIND

// This file is automatically generated from "winerror.h"; do not edit.


// Adapted from:
/************************************************************************
*                                                                       *
*   winerror.h --  error code definitions for the Win32 API functions   *
*                                                                       *
*   
*                                                                       *
************************************************************************/

// The operation completed successfully.
define inline-only constant $ERROR-SUCCESS              =    0;
define inline-only constant $NO-ERROR                   =    0;

// Incorrect function.
define inline-only constant $ERROR-INVALID-FUNCTION     =    1;

// The system cannot find the file specified.
define inline-only constant $ERROR-FILE-NOT-FOUND       =    2;

// The system cannot find the path specified.
define inline-only constant $ERROR-PATH-NOT-FOUND       =    3;

// The system cannot open the file.
define inline-only constant $ERROR-TOO-MANY-OPEN-FILES  =    4;

// Access is denied.
define inline-only constant $ERROR-ACCESS-DENIED        =    5;

// The handle is invalid.
define inline-only constant $ERROR-INVALID-HANDLE       =    6;

// The storage control blocks were destroyed.
define inline-only constant $ERROR-ARENA-TRASHED        =    7;

// Not enough storage is available to process this command.
define inline-only constant $ERROR-NOT-ENOUGH-MEMORY    =    8;

// The storage control block address is invalid.
define inline-only constant $ERROR-INVALID-BLOCK        =    9;

// The environment is incorrect.
define inline-only constant $ERROR-BAD-ENVIRONMENT      =   10;

// An attempt was made to load a program with an
// incorrect format.
define inline-only constant $ERROR-BAD-FORMAT           =   11;

// The access code is invalid.
define inline-only constant $ERROR-INVALID-ACCESS       =   12;

// The data is invalid.
define inline-only constant $ERROR-INVALID-DATA         =   13;

// Not enough storage is available to complete this operation.
define inline-only constant $ERROR-OUTOFMEMORY          =   14;

// The system cannot find the drive specified.
define inline-only constant $ERROR-INVALID-DRIVE        =   15;

// The directory cannot be removed.
define inline-only constant $ERROR-CURRENT-DIRECTORY    =   16;

// The system cannot move the file
// to a different disk drive.
define inline-only constant $ERROR-NOT-SAME-DEVICE      =   17;

// There are no more files.
define inline-only constant $ERROR-NO-MORE-FILES        =   18;

// The media is write protected.
define inline-only constant $ERROR-WRITE-PROTECT        =   19;

// The system cannot find the device specified.
define inline-only constant $ERROR-BAD-UNIT             =   20;

// The device is not ready.
define inline-only constant $ERROR-NOT-READY            =   21;

// The device does not recognize the command.
define inline-only constant $ERROR-BAD-COMMAND          =   22;

// Data error (cyclic redundancy check).
define inline-only constant $ERROR-CRC                  =   23;

// The program issued a command but the
// command length is incorrect.
define inline-only constant $ERROR-BAD-LENGTH           =   24;

// The drive cannot locate a specific
// area or track on the disk.
define inline-only constant $ERROR-SEEK                 =   25;

// The specified disk or diskette cannot be accessed.
define inline-only constant $ERROR-NOT-DOS-DISK         =   26;

// The drive cannot find the sector requested.
define inline-only constant $ERROR-SECTOR-NOT-FOUND     =   27;

// The printer is out of paper.
define inline-only constant $ERROR-OUT-OF-PAPER         =   28;

// The system cannot write to the specified device.
define inline-only constant $ERROR-WRITE-FAULT          =   29;

// The system cannot read from the specified device.
define inline-only constant $ERROR-READ-FAULT           =   30;

// A device attached to the system is not functioning.
define inline-only constant $ERROR-GEN-FAILURE          =   31;

// The process cannot access the file because
// it is being used by another process.
define inline-only constant $ERROR-SHARING-VIOLATION    =   32;

// The process cannot access the file because
// another process has locked a portion of the file.
define inline-only constant $ERROR-LOCK-VIOLATION       =   33;

// The wrong diskette is in the drive.
// Insert %2 (Volume Serial Number: %3)
// into drive %1.
define inline-only constant $ERROR-WRONG-DISK           =   34;

// Too many files opened for sharing.
define inline-only constant $ERROR-SHARING-BUFFER-EXCEEDED =   36;

// Reached the end of the file.
define inline-only constant $ERROR-HANDLE-EOF           =   38;

// The disk is full.
define inline-only constant $ERROR-HANDLE-DISK-FULL     =   39;

// The network request is not supported.
define inline-only constant $ERROR-NOT-SUPPORTED        =   50;

// The remote computer is not available.
define inline-only constant $ERROR-REM-NOT-LIST         =   51;

// A duplicate name exists on the network.
define inline-only constant $ERROR-DUP-NAME             =   52;

// The network path was not found.
define inline-only constant $ERROR-BAD-NETPATH          =   53;

// The network is busy.
define inline-only constant $ERROR-NETWORK-BUSY         =   54;

// The specified network resource or device is no longer
// available.
define inline-only constant $ERROR-DEV-NOT-EXIST        =   55;

// The network BIOS command limit has been reached.
define inline-only constant $ERROR-TOO-MANY-CMDS        =   56;

// A network adapter hardware error occurred.
define inline-only constant $ERROR-ADAP-HDW-ERR         =   57;

// The specified server cannot perform the requested
// operation.
define inline-only constant $ERROR-BAD-NET-RESP         =   58;

// An unexpected network error occurred.
define inline-only constant $ERROR-UNEXP-NET-ERR        =   59;

// The remote adapter is not compatible.
define inline-only constant $ERROR-BAD-REM-ADAP         =   60;

// The printer queue is full.
define inline-only constant $ERROR-PRINTQ-FULL          =   61;

// Space to store the file waiting to be printed is
// not available on the server.
define inline-only constant $ERROR-NO-SPOOL-SPACE       =   62;

// Your file waiting to be printed was deleted.
define inline-only constant $ERROR-PRINT-CANCELLED      =   63;

// The specified network name is no longer available.
define inline-only constant $ERROR-NETNAME-DELETED      =   64;

// Network access is denied.
define inline-only constant $ERROR-NETWORK-ACCESS-DENIED =   65;

// The network resource type is not correct.
define inline-only constant $ERROR-BAD-DEV-TYPE         =   66;

// The network name cannot be found.
define inline-only constant $ERROR-BAD-NET-NAME         =   67;

// The name limit for the local computer network
// adapter card was exceeded.
define inline-only constant $ERROR-TOO-MANY-NAMES       =   68;

// The network BIOS session limit was exceeded.
define inline-only constant $ERROR-TOO-MANY-SESS        =   69;

// The remote server has been paused or is in the
// process of being started.
define inline-only constant $ERROR-SHARING-PAUSED       =   70;

// No more connections can be made to this remote computer at this time
// because there are already as many connections as the computer can accept.
define inline-only constant $ERROR-REQ-NOT-ACCEP        =   71;

// The specified printer or disk device has been paused.
define inline-only constant $ERROR-REDIR-PAUSED         =   72;

// The file exists.
define inline-only constant $ERROR-FILE-EXISTS          =   80;

// The directory or file cannot be created.
define inline-only constant $ERROR-CANNOT-MAKE          =   82;

// Fail on INT 24.
define inline-only constant $ERROR-FAIL-I24             =   83;

// Storage to process this request is not available.
define inline-only constant $ERROR-OUT-OF-STRUCTURES    =   84;

// The local device name is already in use.
define inline-only constant $ERROR-ALREADY-ASSIGNED     =   85;

// The specified network password is not correct.
define inline-only constant $ERROR-INVALID-PASSWORD     =   86;

// The parameter is incorrect.
define inline-only constant $ERROR-INVALID-PARAMETER    =   87;

// A write fault occurred on the network.
define inline-only constant $ERROR-NET-WRITE-FAULT      =   88;

// The system cannot start another process at
// this time.
define inline-only constant $ERROR-NO-PROC-SLOTS        =   89;

// Cannot create another system semaphore.
define inline-only constant $ERROR-TOO-MANY-SEMAPHORES  =  100;

// The exclusive semaphore is owned by another process.
define inline-only constant $ERROR-EXCL-SEM-ALREADY-OWNED =  101;

// The semaphore is set and cannot be closed.
define inline-only constant $ERROR-SEM-IS-SET           =  102;

// The semaphore cannot be set again.
define inline-only constant $ERROR-TOO-MANY-SEM-REQUESTS =  103;

// Cannot request exclusive semaphores at interrupt time.
define inline-only constant $ERROR-INVALID-AT-INTERRUPT-TIME =  104;

// The previous ownership of this semaphore has ended.
define inline-only constant $ERROR-SEM-OWNER-DIED       =  105;

// Insert the diskette for drive %1.
define inline-only constant $ERROR-SEM-USER-LIMIT       =  106;

// The program stopped because an alternate diskette was not inserted.
define inline-only constant $ERROR-DISK-CHANGE          =  107;

// The disk is in use or locked by
// another process.
define inline-only constant $ERROR-DRIVE-LOCKED         =  108;

// The pipe has been ended.
define inline-only constant $ERROR-BROKEN-PIPE          =  109;

// The system cannot open the
// device or file specified.
define inline-only constant $ERROR-OPEN-FAILED          =  110;

// The file name is too long.
define inline-only constant $ERROR-BUFFER-OVERFLOW      =  111;

// There is not enough space on the disk.
define inline-only constant $ERROR-DISK-FULL            =  112;

// No more internal file identifiers available.
define inline-only constant $ERROR-NO-MORE-SEARCH-HANDLES =  113;

// The target internal file identifier is incorrect.
define inline-only constant $ERROR-INVALID-TARGET-HANDLE =  114;

// The IOCTL call made by the application program is
// not correct.
define inline-only constant $ERROR-INVALID-CATEGORY     =  117;

// The verify-on-write switch parameter value is not
// correct.
define inline-only constant $ERROR-INVALID-VERIFY-SWITCH =  118;

// The system does not support the command requested.
define inline-only constant $ERROR-BAD-DRIVER-LEVEL     =  119;

// This function is not supported on this system.
define inline-only constant $ERROR-CALL-NOT-IMPLEMENTED =  120;

// The semaphore timeout period has expired.
define inline-only constant $ERROR-SEM-TIMEOUT          =  121;

// The data area passed to a system call is too
// small.
define inline-only constant $ERROR-INSUFFICIENT-BUFFER  =  122;

// The filename, directory name, or volume label syntax is incorrect.
define inline-only constant $ERROR-INVALID-NAME         =  123;

// The system call level is not correct.
define inline-only constant $ERROR-INVALID-LEVEL        =  124;

// The disk has no volume label.
define inline-only constant $ERROR-NO-VOLUME-LABEL      =  125;

// The specified module could not be found.
define inline-only constant $ERROR-MOD-NOT-FOUND        =  126;

// The specified procedure could not be found.
define inline-only constant $ERROR-PROC-NOT-FOUND       =  127;

// There are no child processes to wait for.
define inline-only constant $ERROR-WAIT-NO-CHILDREN     =  128;

// The %1 application cannot be run in Win32 mode.
define inline-only constant $ERROR-CHILD-NOT-COMPLETE   =  129;

// Attempt to use a file handle to an open disk partition for an
// operation other than raw disk I/O.
define inline-only constant $ERROR-DIRECT-ACCESS-HANDLE =  130;

// An attempt was made to move the file pointer before the beginning of the file.
define inline-only constant $ERROR-NEGATIVE-SEEK        =  131;

// The file pointer cannot be set on the specified device or file.
define inline-only constant $ERROR-SEEK-ON-DEVICE       =  132;

// A JOIN or SUBST command
// cannot be used for a drive that
// contains previously joined drives.
define inline-only constant $ERROR-IS-JOIN-TARGET       =  133;

// An attempt was made to use a
// JOIN or SUBST command on a drive that has
// already been joined.
define inline-only constant $ERROR-IS-JOINED            =  134;

// An attempt was made to use a
// JOIN or SUBST command on a drive that has
// already been substituted.
define inline-only constant $ERROR-IS-SUBSTED           =  135;

// The system tried to delete
// the JOIN of a drive that is not joined.
define inline-only constant $ERROR-NOT-JOINED           =  136;

// The system tried to delete the
// substitution of a drive that is not substituted.
define inline-only constant $ERROR-NOT-SUBSTED          =  137;

// The system tried to join a drive
// to a directory on a joined drive.
define inline-only constant $ERROR-JOIN-TO-JOIN         =  138;

// The system tried to substitute a
// drive to a directory on a substituted drive.
define inline-only constant $ERROR-SUBST-TO-SUBST       =  139;

// The system tried to join a drive to
// a directory on a substituted drive.
define inline-only constant $ERROR-JOIN-TO-SUBST        =  140;

// The system tried to SUBST a drive
// to a directory on a joined drive.
define inline-only constant $ERROR-SUBST-TO-JOIN        =  141;

// The system cannot perform a JOIN or SUBST at this time.
define inline-only constant $ERROR-BUSY-DRIVE           =  142;

// The system cannot join or substitute a
// drive to or for a directory on the same drive.
define inline-only constant $ERROR-SAME-DRIVE           =  143;

// The directory is not a subdirectory of the root directory.
define inline-only constant $ERROR-DIR-NOT-ROOT         =  144;

// The directory is not empty.
define inline-only constant $ERROR-DIR-NOT-EMPTY        =  145;

// The path specified is being used in
// a substitute.
define inline-only constant $ERROR-IS-SUBST-PATH        =  146;

// Not enough resources are available to
// process this command.
define inline-only constant $ERROR-IS-JOIN-PATH         =  147;

// The path specified cannot be used at this time.
define inline-only constant $ERROR-PATH-BUSY            =  148;

// An attempt was made to join
// or substitute a drive for which a directory
// on the drive is the target of a previous
// substitute.
define inline-only constant $ERROR-IS-SUBST-TARGET      =  149;

// System trace information was not specified in your
// CONFIG.SYS file, or tracing is disallowed.
define inline-only constant $ERROR-SYSTEM-TRACE         =  150;

// The number of specified semaphore events for
// DosMuxSemWait is not correct.
define inline-only constant $ERROR-INVALID-EVENT-COUNT  =  151;

// DosMuxSemWait did not execute; too many semaphores
// are already set.
define inline-only constant $ERROR-TOO-MANY-MUXWAITERS  =  152;

// The DosMuxSemWait list is not correct.
define inline-only constant $ERROR-INVALID-LIST-FORMAT  =  153;

// The volume label you entered exceeds the label character
// limit of the target file system.
define inline-only constant $ERROR-LABEL-TOO-LONG       =  154;

// Cannot create another thread.
define inline-only constant $ERROR-TOO-MANY-TCBS        =  155;

// The recipient process has refused the signal.
define inline-only constant $ERROR-SIGNAL-REFUSED       =  156;

// The segment is already discarded and cannot be locked.
define inline-only constant $ERROR-DISCARDED            =  157;

// The segment is already unlocked.
define inline-only constant $ERROR-NOT-LOCKED           =  158;

// The address for the thread ID is not correct.

// The argument string passed to DosExecPgm is not correct.
define inline-only constant $ERROR-BAD-ARGUMENTS        =  160;

// The specified path is invalid.
define inline-only constant $ERROR-BAD-PATHNAME         =  161;

// A signal is already pending.
define inline-only constant $ERROR-SIGNAL-PENDING       =  162;

// No more threads can be created in the system.
define inline-only constant $ERROR-MAX-THRDS-REACHED    =  164;

// Unable to lock a region of a file.
define inline-only constant $ERROR-LOCK-FAILED          =  167;

// The requested resource is in use.
define inline-only constant $ERROR-BUSY                 =  170;

// A lock request was not outstanding for the supplied cancel region.
define inline-only constant $ERROR-CANCEL-VIOLATION     =  173;

// The file system does not support atomic changes to the lock type.
define inline-only constant $ERROR-ATOMIC-LOCKS-NOT-SUPPORTED =  174;

// The system detected a segment number that was not correct.
define inline-only constant $ERROR-INVALID-SEGMENT-NUMBER =  180;

// The operating system cannot run %1.
define inline-only constant $ERROR-INVALID-ORDINAL      =  182;

// Cannot create a file when that file already exists.
define inline-only constant $ERROR-ALREADY-EXISTS       =  183;

// The flag passed is not correct.
define inline-only constant $ERROR-INVALID-FLAG-NUMBER  =  186;

// The specified system semaphore name was not found.
define inline-only constant $ERROR-SEM-NOT-FOUND        =  187;

// The operating system cannot run %1.
define inline-only constant $ERROR-INVALID-STARTING-CODESEG =  188;

// The operating system cannot run %1.
define inline-only constant $ERROR-INVALID-STACKSEG     =  189;

// The operating system cannot run %1.
define inline-only constant $ERROR-INVALID-MODULETYPE   =  190;

// Cannot run %1 in Win32 mode.
define inline-only constant $ERROR-INVALID-EXE-SIGNATURE =  191;

// The operating system cannot run %1.
define inline-only constant $ERROR-EXE-MARKED-INVALID   =  192;

// %1 is not a valid Win32 application.
define inline-only constant $ERROR-BAD-EXE-FORMAT       =  193;

// The operating system cannot run %1.
define inline-only constant $ERROR-ITERATED-DATA-EXCEEDS-64k =  194;

// The operating system cannot run %1.
define inline-only constant $ERROR-INVALID-MINALLOCSIZE =  195;

// The operating system cannot run this
// application program.
define inline-only constant $ERROR-DYNLINK-FROM-INVALID-RING =  196;

// The operating system is not presently
// configured to run this application.
define inline-only constant $ERROR-IOPL-NOT-ENABLED     =  197;

// The operating system cannot run %1.
define inline-only constant $ERROR-INVALID-SEGDPL       =  198;

// The operating system cannot run this
// application program.
define inline-only constant $ERROR-AUTODATASEG-EXCEEDS-64k =  199;

// The code segment cannot be greater than or equal to 64K.
define inline-only constant $ERROR-RING2SEG-MUST-BE-MOVABLE =  200;

// The operating system cannot run %1.
define inline-only constant $ERROR-RELOC-CHAIN-XEEDS-SEGLIM =  201;

// The operating system cannot run %1.
define inline-only constant $ERROR-INFLOOP-IN-RELOC-CHAIN =  202;

// The system could not find the environment
// option that was entered.
define inline-only constant $ERROR-ENVVAR-NOT-FOUND     =  203;

// No process in the command subtree has a
// signal handler.
define inline-only constant $ERROR-NO-SIGNAL-SENT       =  205;

// The filename or extension is too long.
define inline-only constant $ERROR-FILENAME-EXCED-RANGE =  206;

// The ring 2 stack is in use.
define inline-only constant $ERROR-RING2-STACK-IN-USE   =  207;

// The global filename characters, * or ?, are entered
// incorrectly or too many global filename characters are specified.
define inline-only constant $ERROR-META-EXPANSION-TOO-LONG =  208;

// The signal being posted is not correct.
define inline-only constant $ERROR-INVALID-SIGNAL-NUMBER =  209;

// The signal handler cannot be set.

// The segment is locked and cannot be reallocated.
define inline-only constant $ERROR-LOCKED               =  212;

// Too many dynamic-link modules are attached to this
// program or dynamic-link module.
define inline-only constant $ERROR-TOO-MANY-MODULES     =  214;

// Can't nest calls to LoadModule.
define inline-only constant $ERROR-NESTING-NOT-ALLOWED  =  215;

// The image file %1 is valid, but is for a machine type other
// than the current machine.
define inline-only constant $ERROR-EXE-MACHINE-TYPE-MISMATCH =  216;

// The pipe state is invalid.
define inline-only constant $ERROR-BAD-PIPE             =  230;

// All pipe instances are busy.
define inline-only constant $ERROR-PIPE-BUSY            =  231;

// The pipe is being closed.
define inline-only constant $ERROR-NO-DATA              =  232;

// No process is on the other end of the pipe.
define inline-only constant $ERROR-PIPE-NOT-CONNECTED   =  233;

// More data is available.
define inline-only constant $ERROR-MORE-DATA            =  234;

// The session was canceled.
define inline-only constant $ERROR-VC-DISCONNECTED      =  240;

// The specified extended attribute name was invalid.
define inline-only constant $ERROR-INVALID-EA-NAME      =  254;

// The extended attributes are inconsistent.
define inline-only constant $ERROR-EA-LIST-INCONSISTENT =  255;

// No more data is available.
define inline-only constant $ERROR-NO-MORE-ITEMS        =  259;

// The copy functions cannot be used.
define inline-only constant $ERROR-CANNOT-COPY          =  266;

// The directory name is invalid.
define inline-only constant $ERROR-DIRECTORY            =  267;

// The extended attributes did not fit in the buffer.
define inline-only constant $ERROR-EAS-DIDNT-FIT        =  275;

// The extended attribute file on the mounted file system is corrupt.
define inline-only constant $ERROR-EA-FILE-CORRUPT      =  276;

// The extended attribute table file is full.
define inline-only constant $ERROR-EA-TABLE-FULL        =  277;

// The specified extended attribute handle is invalid.
define inline-only constant $ERROR-INVALID-EA-HANDLE    =  278;

// The mounted file system does not support extended attributes.
define inline-only constant $ERROR-EAS-NOT-SUPPORTED    =  282;

// Attempt to release mutex not owned by caller.
define inline-only constant $ERROR-NOT-OWNER            =  288;

// Too many posts were made to a semaphore.
define inline-only constant $ERROR-TOO-MANY-POSTS       =  298;

// Only part of a ReadProcessMemoty or WriteProcessMemory request was completed.
define inline-only constant $ERROR-PARTIAL-COPY         =  299;

// The oplock request is denied.
define inline-only constant $ERROR-OPLOCK-NOT-GRANTED   =  300;

// An invalid oplock acknowledgment was received by the system.
define inline-only constant $ERROR-INVALID-OPLOCK-PROTOCOL =  301;

// The system cannot find message text for message number 0x%1
// in the message file for %2.
define inline-only constant $ERROR-MR-MID-NOT-FOUND     =  317;

// Attempt to access invalid address.
define inline-only constant $ERROR-INVALID-ADDRESS      =  487;

// Arithmetic result exceeded 32 bits.
define inline-only constant $ERROR-ARITHMETIC-OVERFLOW  =  534;

// There is a process on other end of the pipe.
define inline-only constant $ERROR-PIPE-CONNECTED       =  535;

// Waiting for a process to open the other end of the pipe.
define inline-only constant $ERROR-PIPE-LISTENING       =  536;

// Access to the extended attribute was denied.
define inline-only constant $ERROR-EA-ACCESS-DENIED     =  994;

// The I/O operation has been aborted because of either a thread exit
// or an application request.
define inline-only constant $ERROR-OPERATION-ABORTED    =  995;

// Overlapped I/O event is not in a signaled state.
define inline-only constant $ERROR-IO-INCOMPLETE        =  996;

// Overlapped I/O operation is in progress.
define inline-only constant $ERROR-IO-PENDING           =  997;

// Invalid access to memory location.
define inline-only constant $ERROR-NOACCESS             =  998;

// Error performing inpage operation.
define inline-only constant $ERROR-SWAPERROR            =  999;

// Recursion too deep; the stack overflowed.
define inline-only constant $ERROR-STACK-OVERFLOW       = 1001;

// The window cannot act on the sent message.
define inline-only constant $ERROR-INVALID-MESSAGE      = 1002;

// Cannot complete this function.
define inline-only constant $ERROR-CAN-NOT-COMPLETE     = 1003;

// Invalid flags.
define inline-only constant $ERROR-INVALID-FLAGS        = 1004;

// The volume does not contain a recognized file system.
// Please make sure that all required file system drivers are loaded and that the
// volume is not corrupted.
define inline-only constant $ERROR-UNRECOGNIZED-VOLUME  = 1005;

// The volume for a file has been externally altered so that the
// opened file is no longer valid.
define inline-only constant $ERROR-FILE-INVALID         = 1006;

// The requested operation cannot be performed in full-screen mode.
define inline-only constant $ERROR-FULLSCREEN-MODE      = 1007;

// An attempt was made to reference a token that does not exist.
define inline-only constant $ERROR-NO-TOKEN             = 1008;

// The configuration registry database is corrupt.
define inline-only constant $ERROR-BADDB                = 1009;

// The configuration registry key is invalid.
define inline-only constant $ERROR-BADKEY               = 1010;

// The configuration registry key could not be opened.
define inline-only constant $ERROR-CANTOPEN             = 1011;

// The configuration registry key could not be read.
define inline-only constant $ERROR-CANTREAD             = 1012;

// The configuration registry key could not be written.
define inline-only constant $ERROR-CANTWRITE            = 1013;

// One of the files in the registry database had to be recovered
// by use of a log or alternate copy.  The recovery was successful.
define inline-only constant $ERROR-REGISTRY-RECOVERED   = 1014;

// The registry is corrupted. The structure of one of the files that contains
// registry data is corrupted, or the system's image of the file in memory
// is corrupted, or the file could not be recovered because the alternate
// copy or log was absent or corrupted.
define inline-only constant $ERROR-REGISTRY-CORRUPT     = 1015;

// An I/O operation initiated by the registry failed unrecoverably.
// The registry could not read in, or write out, or flush, one of the files
// that contain the system's image of the registry.
define inline-only constant $ERROR-REGISTRY-IO-FAILED   = 1016;

// The system has attempted to load or restore a file into the registry, but the
// specified file is not in a registry file format.
define inline-only constant $ERROR-NOT-REGISTRY-FILE    = 1017;

// Illegal operation attempted on a registry key that has been marked for deletion.
define inline-only constant $ERROR-KEY-DELETED          = 1018;

// System could not allocate the required space in a registry log.
define inline-only constant $ERROR-NO-LOG-SPACE         = 1019;

// Cannot create a symbolic link in a registry key that already
// has subkeys or values.
define inline-only constant $ERROR-KEY-HAS-CHILDREN     = 1020;

// Cannot create a stable subkey under a volatile parent key.
define inline-only constant $ERROR-CHILD-MUST-BE-VOLATILE = 1021;

// A notify change request is being completed and the information
// is not being returned in the caller's buffer. The caller now
// needs to enumerate the files to find the changes.
define inline-only constant $ERROR-NOTIFY-ENUM-DIR      = 1022;

// A stop control has been sent to a service that other running services
// are dependent on.
define inline-only constant $ERROR-DEPENDENT-SERVICES-RUNNING = 1051;

// The requested control is not valid for this service.
define inline-only constant $ERROR-INVALID-SERVICE-CONTROL = 1052;

// The service did not respond to the start or control request in a timely
// fashion.
define inline-only constant $ERROR-SERVICE-REQUEST-TIMEOUT = 1053;

// A thread could not be created for the service.

// The service database is locked.
define inline-only constant $ERROR-SERVICE-DATABASE-LOCKED = 1055;

// An instance of the service is already running.
define inline-only constant $ERROR-SERVICE-ALREADY-RUNNING = 1056;

// The account name is invalid or does not exist.
define inline-only constant $ERROR-INVALID-SERVICE-ACCOUNT = 1057;

// The service cannot be started, either because it is disabled or because
// it has no enabled devices associated with it.
define inline-only constant $ERROR-SERVICE-DISABLED     = 1058;

// Circular service dependency was specified.
define inline-only constant $ERROR-CIRCULAR-DEPENDENCY  = 1059;

// The specified service does not exist as an installed service.
define inline-only constant $ERROR-SERVICE-DOES-NOT-EXIST = 1060;

// The service cannot accept control messages at this time.
define inline-only constant $ERROR-SERVICE-CANNOT-ACCEPT-CTRL = 1061;

// The service has not been started.
define inline-only constant $ERROR-SERVICE-NOT-ACTIVE   = 1062;

// The service process could not connect to the service controller.
define inline-only constant $ERROR-FAILED-SERVICE-CONTROLLER-CONNECT =
	1063;

// An exception occurred in the service when handling the control request.
define inline-only constant $ERROR-EXCEPTION-IN-SERVICE = 1064;

// The database specified does not exist.
define inline-only constant $ERROR-DATABASE-DOES-NOT-EXIST = 1065;

// The service has returned a service-specific error code.
define inline-only constant $ERROR-SERVICE-SPECIFIC-ERROR = 1066;

// The process terminated unexpectedly.
define inline-only constant $ERROR-PROCESS-ABORTED      = 1067;

// The dependency service or group failed to start.
define inline-only constant $ERROR-SERVICE-DEPENDENCY-FAIL = 1068;

// The service did not start due to a logon failure.
define inline-only constant $ERROR-SERVICE-LOGON-FAILED = 1069;

// After starting, the service hung in a start-pending state.
define inline-only constant $ERROR-SERVICE-START-HANG   = 1070;

// The specified service database lock is invalid.
define inline-only constant $ERROR-INVALID-SERVICE-LOCK = 1071;

// The specified service has been marked for deletion.
define inline-only constant $ERROR-SERVICE-MARKED-FOR-DELETE = 1072;

// The specified service already exists.
define inline-only constant $ERROR-SERVICE-EXISTS       = 1073;

// The system is currently running with the last-known-good configuration.
define inline-only constant $ERROR-ALREADY-RUNNING-LKG  = 1074;

// The dependency service does not exist or has been marked for
// deletion.
define inline-only constant $ERROR-SERVICE-DEPENDENCY-DELETED = 1075;

// The current boot has already been accepted for use as the
// last-known-good control set.
define inline-only constant $ERROR-BOOT-ALREADY-ACCEPTED = 1076;

// No attempts to start the service have been made since the last boot.
define inline-only constant $ERROR-SERVICE-NEVER-STARTED = 1077;

// The name is already in use as either a service name or a service display
// name.
define inline-only constant $ERROR-DUPLICATE-SERVICE-NAME = 1078;

// The account specified for this service is different from the account
// specified for other services running in the same process.
define inline-only constant $ERROR-DIFFERENT-SERVICE-ACCOUNT = 1079;

// Failure actions can only be set for Win32 services, not for drivers.
define inline-only constant $ERROR-CANNOT-DETECT-DRIVER-FAILURE =
	1080;

// This service runs in the same process as the service control manager.
// Therefore, the service control manager cannot take action if this
// service's process terminates unexpectedly.
define inline-only constant $ERROR-CANNOT-DETECT-PROCESS-ABORT =
	1081;

// No recovery program has been configured for this service.
define inline-only constant $ERROR-NO-RECOVERY-PROGRAM  = 1082;

// The physical end of the tape has been reached.
define inline-only constant $ERROR-END-OF-MEDIA         = 1100;

// A tape access reached a filemark.
define inline-only constant $ERROR-FILEMARK-DETECTED    = 1101;

// The beginning of the tape or a partition was encountered.
define inline-only constant $ERROR-BEGINNING-OF-MEDIA   = 1102;

// A tape access reached the end of a set of files.
define inline-only constant $ERROR-SETMARK-DETECTED     = 1103;

// No more data is on the tape.
define inline-only constant $ERROR-NO-DATA-DETECTED     = 1104;

// Tape could not be partitioned.
define inline-only constant $ERROR-PARTITION-FAILURE    = 1105;

// When accessing a new tape of a multivolume partition, the current
// blocksize is incorrect.
define inline-only constant $ERROR-INVALID-BLOCK-LENGTH = 1106;

// Tape partition information could not be found when loading a tape.
define inline-only constant $ERROR-DEVICE-NOT-PARTITIONED = 1107;

// Unable to lock the media eject mechanism.
define inline-only constant $ERROR-UNABLE-TO-LOCK-MEDIA = 1108;

// Unable to unload the media.
define inline-only constant $ERROR-UNABLE-TO-UNLOAD-MEDIA = 1109;

// The media in the drive may have changed.
define inline-only constant $ERROR-MEDIA-CHANGED        = 1110;

// The I/O bus was reset.
define inline-only constant $ERROR-BUS-RESET            = 1111;

// No media in drive.
define inline-only constant $ERROR-NO-MEDIA-IN-DRIVE    = 1112;

// No mapping for the Unicode character exists in the target multi-byte code page.
define inline-only constant $ERROR-NO-UNICODE-TRANSLATION = 1113;

// A dynamic link library (DLL) initialization routine failed.
define inline-only constant $ERROR-DLL-INIT-FAILED      = 1114;

// A system shutdown is in progress.
define inline-only constant $ERROR-SHUTDOWN-IN-PROGRESS = 1115;

// Unable to abort the system shutdown because no shutdown was in progress.
define inline-only constant $ERROR-NO-SHUTDOWN-IN-PROGRESS = 1116;

// The request could not be performed because of an I/O device error.
define inline-only constant $ERROR-IO-DEVICE            = 1117;

// No serial device was successfully initialized.  The serial driver will unload.
define inline-only constant $ERROR-SERIAL-NO-DEVICE     = 1118;

// Unable to open a device that was sharing an interrupt request (IRQ)
// with other devices. At least one other device that uses that IRQ
// was already opened.
define inline-only constant $ERROR-IRQ-BUSY             = 1119;

// A serial I/O operation was completed by another write to the serial port.
// (The IOCTL_SERIAL_XOFF_COUNTER reached zero.)
define inline-only constant $ERROR-MORE-WRITES          = 1120;

// A serial I/O operation completed because the timeout period expired.
// (The IOCTL_SERIAL_XOFF_COUNTER did not reach zero.)
define inline-only constant $ERROR-COUNTER-TIMEOUT      = 1121;

// No ID address mark was found on the floppy disk.
define inline-only constant $ERROR-FLOPPY-ID-MARK-NOT-FOUND = 1122;

// Mismatch between the floppy disk sector ID field and the floppy disk
// controller track address.
define inline-only constant $ERROR-FLOPPY-WRONG-CYLINDER = 1123;

// The floppy disk controller reported an error that is not recognized
// by the floppy disk driver.
define inline-only constant $ERROR-FLOPPY-UNKNOWN-ERROR = 1124;

// The floppy disk controller returned inconsistent results in its registers.
define inline-only constant $ERROR-FLOPPY-BAD-REGISTERS = 1125;

// While accessing the hard disk, a recalibrate operation failed, even after retries.
define inline-only constant $ERROR-DISK-RECALIBRATE-FAILED = 1126;

// While accessing the hard disk, a disk operation failed even after retries.
define inline-only constant $ERROR-DISK-OPERATION-FAILED = 1127;

// While accessing the hard disk, a disk controller reset was needed, but
// even that failed.
define inline-only constant $ERROR-DISK-RESET-FAILED    = 1128;

// Physical end of tape encountered.
define inline-only constant $ERROR-EOM-OVERFLOW         = 1129;

// Not enough server storage is available to process this command.
define inline-only constant $ERROR-NOT-ENOUGH-SERVER-MEMORY = 1130;

// A potential deadlock condition has been detected.
define inline-only constant $ERROR-POSSIBLE-DEADLOCK    = 1131;

// The base address or the file offset specified does not have the proper
// alignment.
define inline-only constant $ERROR-MAPPED-ALIGNMENT     = 1132;

// An attempt to change the system power state was vetoed by another
// application or driver.
define inline-only constant $ERROR-SET-POWER-STATE-VETOED = 1140;

// The system BIOS failed an attempt to change the system power state.
define inline-only constant $ERROR-SET-POWER-STATE-FAILED = 1141;

// An attempt was made to create more links on a file than
// the file system supports.
define inline-only constant $ERROR-TOO-MANY-LINKS       = 1142;

// The specified program requires a newer version of Windows.
define inline-only constant $ERROR-OLD-WIN-VERSION      = 1150;

// The specified program is not a Windows or MS-DOS program.
define inline-only constant $ERROR-APP-WRONG-OS         = 1151;

// Cannot start more than one instance of the specified program.
define inline-only constant $ERROR-SINGLE-INSTANCE-APP  = 1152;

// The specified program was written for an earlier version of Windows.
define inline-only constant $ERROR-RMODE-APP            = 1153;

// One of the library files needed to run this application is damaged.
define inline-only constant $ERROR-INVALID-DLL          = 1154;

// No application is associated with the specified file for this operation.
define inline-only constant $ERROR-NO-ASSOCIATION       = 1155;

// An error occurred in sending the command to the application.
define inline-only constant $ERROR-DDE-FAIL             = 1156;

// One of the library files needed to run this application cannot be found.
define inline-only constant $ERROR-DLL-NOT-FOUND        = 1157;

// The current process has used all of its system allowance of handles for Window Manager objects.
define inline-only constant $ERROR-NO-MORE-USER-HANDLES = 1158;

// The message can be used only with synchronous operations.
define inline-only constant $ERROR-MESSAGE-SYNC-ONLY    = 1159;

// The indicated source element has no media.
define inline-only constant $ERROR-SOURCE-ELEMENT-EMPTY = 1160;

// The indicated destination element already contains media.
define inline-only constant $ERROR-DESTINATION-ELEMENT-FULL = 1161;

// The indicated element does not exist.
define inline-only constant $ERROR-ILLEGAL-ELEMENT-ADDRESS = 1162;

// The indicated element is part of a magazine that is not present.
define inline-only constant $ERROR-MAGAZINE-NOT-PRESENT = 1163;

// The indicated device requires reinitialization due to hardware errors.
define inline-only constant $ERROR-DEVICE-REINITIALIZATION-NEEDED =
	1164;

// The device has indicated that cleaning is required before further operations are attempted.
define inline-only constant $ERROR-DEVICE-REQUIRES-CLEANING = 1165;

// The device has indicated that its door is open.
define inline-only constant $ERROR-DEVICE-DOOR-OPEN     = 1166;

// The device is not connected.
define inline-only constant $ERROR-DEVICE-NOT-CONNECTED = 1167;

// Element not found.
define inline-only constant $ERROR-NOT-FOUND            = 1168;

// There was no match for the specified key in the index.
define inline-only constant $ERROR-NO-MATCH             = 1169;

// The property set specified does not exist on the object.
define inline-only constant $ERROR-SET-NOT-FOUND        = 1170;

// The point passed to GetMouseMovePoints is not in the buffer.
define inline-only constant $ERROR-POINT-NOT-FOUND      = 1171;

// The tracking (workstation) service is not running.
define inline-only constant $ERROR-NO-TRACKING-SERVICE  = 1172;

// The Volume ID could not be found.
define inline-only constant $ERROR-NO-VOLUME-ID         = 1173;

// The network connection was made successfully, but the user had to be prompted
// for a password other than the one originally specified.
define inline-only constant $ERROR-CONNECTED-OTHER-PASSWORD = 2108;

// The specified username is invalid.
define inline-only constant $ERROR-BAD-USERNAME         = 2202;

// This network connection does not exist.
define inline-only constant $ERROR-NOT-CONNECTED        = 2250;

// This network connection has files open or requests pending.
define inline-only constant $ERROR-OPEN-FILES           = 2401;

// Active connections still exist.
define inline-only constant $ERROR-ACTIVE-CONNECTIONS   = 2402;

// The device is in use by an active process and cannot be disconnected.
define inline-only constant $ERROR-DEVICE-IN-USE        = 2404;

// The specified device name is invalid.
define inline-only constant $ERROR-BAD-DEVICE           = 1200;

// The device is not currently connected but it is a remembered connection.
define inline-only constant $ERROR-CONNECTION-UNAVAIL   = 1201;

// An attempt was made to remember a device that had previously been remembered.
define inline-only constant $ERROR-DEVICE-ALREADY-REMEMBERED = 1202;

// No network provider accepted the given network path.
define inline-only constant $ERROR-NO-NET-OR-BAD-PATH   = 1203;

// The specified network provider name is invalid.
define inline-only constant $ERROR-BAD-PROVIDER         = 1204;

// Unable to open the network connection profile.
define inline-only constant $ERROR-CANNOT-OPEN-PROFILE  = 1205;

// The network connection profile is corrupted.
define inline-only constant $ERROR-BAD-PROFILE          = 1206;

// Cannot enumerate a noncontainer.
define inline-only constant $ERROR-NOT-CONTAINER        = 1207;

// An extended error has occurred.
define inline-only constant $ERROR-EXTENDED-ERROR       = 1208;

// The format of the specified group name is invalid.
define inline-only constant $ERROR-INVALID-GROUPNAME    = 1209;

// The format of the specified computer name is invalid.
define inline-only constant $ERROR-INVALID-COMPUTERNAME = 1210;

// The format of the specified event name is invalid.
define inline-only constant $ERROR-INVALID-EVENTNAME    = 1211;

// The format of the specified domain name is invalid.
define inline-only constant $ERROR-INVALID-DOMAINNAME   = 1212;

// The format of the specified service name is invalid.
define inline-only constant $ERROR-INVALID-SERVICENAME  = 1213;

// The format of the specified network name is invalid.
define inline-only constant $ERROR-INVALID-NETNAME      = 1214;

// The format of the specified share name is invalid.
define inline-only constant $ERROR-INVALID-SHARENAME    = 1215;

// The format of the specified password is invalid.
define inline-only constant $ERROR-INVALID-PASSWORDNAME = 1216;

// The format of the specified message name is invalid.
define inline-only constant $ERROR-INVALID-MESSAGENAME  = 1217;

// The format of the specified message destination is invalid.
define inline-only constant $ERROR-INVALID-MESSAGEDEST  = 1218;

// The credentials supplied conflict with an existing set of credentials.
define inline-only constant $ERROR-SESSION-CREDENTIAL-CONFLICT =
	1219;

// An attempt was made to establish a session to a network server, but there
// are already too many sessions established to that server.
define inline-only constant $ERROR-REMOTE-SESSION-LIMIT-EXCEEDED =
	1220;

// The workgroup or domain name is already in use by another computer on the
// network.
define inline-only constant $ERROR-DUP-DOMAINNAME       = 1221;

// The network is not present or not started.
define inline-only constant $ERROR-NO-NETWORK           = 1222;

// The operation was canceled by the user.
define inline-only constant $ERROR-CANCELLED            = 1223;

// The requested operation cannot be performed on a file with a user-mapped section open.
define inline-only constant $ERROR-USER-MAPPED-FILE     = 1224;

// The remote system refused the network connection.
define inline-only constant $ERROR-CONNECTION-REFUSED   = 1225;

// The network connection was gracefully closed.
define inline-only constant $ERROR-GRACEFUL-DISCONNECT  = 1226;

// The network transport endpoint already has an address associated with it.
define inline-only constant $ERROR-ADDRESS-ALREADY-ASSOCIATED = 1227;

// An address has not yet been associated with the network endpoint.
define inline-only constant $ERROR-ADDRESS-NOT-ASSOCIATED = 1228;

// An operation was attempted on a nonexistent network connection.
define inline-only constant $ERROR-CONNECTION-INVALID   = 1229;

// An invalid operation was attempted on an active network connection.
define inline-only constant $ERROR-CONNECTION-ACTIVE    = 1230;

// The remote network is not reachable by the transport.
define inline-only constant $ERROR-NETWORK-UNREACHABLE  = 1231;

// The remote system is not reachable by the transport.
define inline-only constant $ERROR-HOST-UNREACHABLE     = 1232;

// The remote system does not support the transport protocol.
define inline-only constant $ERROR-PROTOCOL-UNREACHABLE = 1233;

// No service is operating at the destination network endpoint
// on the remote system.
define inline-only constant $ERROR-PORT-UNREACHABLE     = 1234;

// The request was aborted.
define inline-only constant $ERROR-REQUEST-ABORTED      = 1235;

// The network connection was aborted by the local system.
define inline-only constant $ERROR-CONNECTION-ABORTED   = 1236;

// The operation could not be completed.  A retry should be performed.
define inline-only constant $ERROR-RETRY                = 1237;

// A connection to the server could not be made because the limit on the number of
// concurrent connections for this account has been reached.
define inline-only constant $ERROR-CONNECTION-COUNT-LIMIT = 1238;

// Attempting to log in during an unauthorized time of day for this account.
define inline-only constant $ERROR-LOGIN-TIME-RESTRICTION = 1239;

// The account is not authorized to log in from this station.
define inline-only constant $ERROR-LOGIN-WKSTA-RESTRICTION = 1240;

// The network address could not be used for the operation requested.
define inline-only constant $ERROR-INCORRECT-ADDRESS    = 1241;

// The service is already registered.
define inline-only constant $ERROR-ALREADY-REGISTERED   = 1242;

// The specified service does not exist.
define inline-only constant $ERROR-SERVICE-NOT-FOUND    = 1243;

// The operation being requested was not performed because the user
// has not been authenticated.
define inline-only constant $ERROR-NOT-AUTHENTICATED    = 1244;

// The operation being requested was not performed because the user
// has not logged on to the network.
// The specified service does not exist.
define inline-only constant $ERROR-NOT-LOGGED-ON        = 1245;

// Continue with work in progress.
define inline-only constant $ERROR-CONTINUE             = 1246;

// An attempt was made to perform an initialization operation when
// initialization has already been completed.
define inline-only constant $ERROR-ALREADY-INITIALIZED  = 1247;

// No more local devices.
define inline-only constant $ERROR-NO-MORE-DEVICES      = 1248;

// The specified site does not exist.
define inline-only constant $ERROR-NO-SUCH-SITE         = 1249;

// A domain controller with the specified name already exists.
define inline-only constant $ERROR-DOMAIN-CONTROLLER-EXISTS = 1250;

// An error occurred while installing the Windows NT directory service. Please view the event log for more information.
define inline-only constant $ERROR-DS-NOT-INSTALLED     = 1251;

// Invalid window handle.
define inline-only constant $ERROR-INVALID-WINDOW-HANDLE = 1400;

// Invalid menu handle.
define inline-only constant $ERROR-INVALID-MENU-HANDLE  = 1401;

// Invalid cursor handle.
define inline-only constant $ERROR-INVALID-CURSOR-HANDLE = 1402;

// Invalid accelerator table handle.
define inline-only constant $ERROR-INVALID-ACCEL-HANDLE = 1403;

// Invalid hook handle.
define inline-only constant $ERROR-INVALID-HOOK-HANDLE  = 1404;

// Invalid handle to a multiple-window position structure.
define inline-only constant $ERROR-INVALID-DWP-HANDLE   = 1405;

// Cannot create a top-level child window.
define inline-only constant $ERROR-TLW-WITH-WSCHILD     = 1406;

// Cannot find window class.
define inline-only constant $ERROR-CANNOT-FIND-WND-CLASS = 1407;

// Invalid window; it belongs to other thread.

// Hot key is already registered.
define inline-only constant $ERROR-HOTKEY-ALREADY-REGISTERED = 1409;

// Class already exists.
define inline-only constant $ERROR-CLASS-ALREADY-EXISTS = 1410;

// Class does not exist.
define inline-only constant $ERROR-CLASS-DOES-NOT-EXIST = 1411;

// Class still has open windows.
define inline-only constant $ERROR-CLASS-HAS-WINDOWS    = 1412;

// Invalid index.
define inline-only constant $ERROR-INVALID-INDEX        = 1413;

// Invalid icon handle.
define inline-only constant $ERROR-INVALID-ICON-HANDLE  = 1414;

// Using private DIALOG window words.
define inline-only constant $ERROR-PRIVATE-DIALOG-INDEX = 1415;

// The list box identifier was not found.
define inline-only constant $ERROR-LISTBOX-ID-NOT-FOUND = 1416;

// No wildcards were found.
define inline-only constant $ERROR-NO-WILDCARD-CHARACTERS = 1417;

// Thread does not have a clipboard open.
define inline-only constant $ERROR-CLIPBOARD-NOT-OPEN   = 1418;

// Hot key is not registered.
define inline-only constant $ERROR-HOTKEY-NOT-REGISTERED = 1419;

// The window is not a valid dialog window.
define inline-only constant $ERROR-WINDOW-NOT-DIALOG    = 1420;

// Control ID not found.
define inline-only constant $ERROR-CONTROL-ID-NOT-FOUND = 1421;

// Invalid message for a combo box because it does not have an edit control.
define inline-only constant $ERROR-INVALID-COMBOBOX-MESSAGE = 1422;

// The window is not a combo box.
define inline-only constant $ERROR-WINDOW-NOT-COMBOBOX  = 1423;

// Height must be less than 256.
define inline-only constant $ERROR-INVALID-EDIT-HEIGHT  = 1424;

// Invalid device context (DC) handle.
define inline-only constant $ERROR-DC-NOT-FOUND         = 1425;

// Invalid hook procedure type.
define inline-only constant $ERROR-INVALID-HOOK-FILTER  = 1426;

// Invalid hook procedure.
define inline-only constant $ERROR-INVALID-FILTER-PROC  = 1427;

// Cannot set nonlocal hook without a module handle.
define inline-only constant $ERROR-HOOK-NEEDS-HMOD      = 1428;

// This hook procedure can only be set globally.
define inline-only constant $ERROR-GLOBAL-ONLY-HOOK     = 1429;

// The journal hook procedure is already installed.
define inline-only constant $ERROR-JOURNAL-HOOK-SET     = 1430;

// The hook procedure is not installed.
define inline-only constant $ERROR-HOOK-NOT-INSTALLED   = 1431;

// Invalid message for single-selection list box.
define inline-only constant $ERROR-INVALID-LB-MESSAGE   = 1432;

// LB_SETCOUNT sent to non-lazy list box.
define inline-only constant $ERROR-SETCOUNT-ON-BAD-LB   = 1433;

// This list box does not support tab stops.
define inline-only constant $ERROR-LB-WITHOUT-TABSTOPS  = 1434;

// Cannot destroy object created by another thread.

// Child windows cannot have menus.
define inline-only constant $ERROR-CHILD-WINDOW-MENU    = 1436;

// The window does not have a system menu.
define inline-only constant $ERROR-NO-SYSTEM-MENU       = 1437;

// Invalid message box style.
define inline-only constant $ERROR-INVALID-MSGBOX-STYLE = 1438;

// Invalid system-wide (SPI_*) parameter.
define inline-only constant $ERROR-INVALID-SPI-VALUE    = 1439;

// Screen already locked.
define inline-only constant $ERROR-SCREEN-ALREADY-LOCKED = 1440;

// All handles to windows in a multiple-window position structure must
// have the same parent.
define inline-only constant $ERROR-HWNDS-HAVE-DIFF-PARENT = 1441;

// The window is not a child window.
define inline-only constant $ERROR-NOT-CHILD-WINDOW     = 1442;

// Invalid GW_* command.
define inline-only constant $ERROR-INVALID-GW-COMMAND   = 1443;

// Invalid thread identifier.

// Cannot process a message from a window that is not a multiple document
// interface (MDI) window.
define inline-only constant $ERROR-NON-MDICHILD-WINDOW  = 1445;

// Popup menu already active.
define inline-only constant $ERROR-POPUP-ALREADY-ACTIVE = 1446;

// The window does not have scroll bars.
define inline-only constant $ERROR-NO-SCROLLBARS        = 1447;

// Scroll bar range cannot be greater than 0x7FFF.
define inline-only constant $ERROR-INVALID-SCROLLBAR-RANGE = 1448;

// Cannot show or remove the window in the way specified.
define inline-only constant $ERROR-INVALID-SHOWWIN-COMMAND = 1449;

// Insufficient system resources exist to complete the requested service.
define inline-only constant $ERROR-NO-SYSTEM-RESOURCES  = 1450;

// Insufficient system resources exist to complete the requested service.
define inline-only constant $ERROR-NONPAGED-SYSTEM-RESOURCES = 1451;

// Insufficient system resources exist to complete the requested service.
define inline-only constant $ERROR-PAGED-SYSTEM-RESOURCES = 1452;

// Insufficient quota to complete the requested service.
define inline-only constant $ERROR-WORKING-SET-QUOTA    = 1453;

// Insufficient quota to complete the requested service.
define inline-only constant $ERROR-PAGEFILE-QUOTA       = 1454;

// The paging file is too small for this operation to complete.
define inline-only constant $ERROR-COMMITMENT-LIMIT     = 1455;

// A menu item was not found.
define inline-only constant $ERROR-MENU-ITEM-NOT-FOUND  = 1456;

// Invalid keyboard layout handle.
define inline-only constant $ERROR-INVALID-KEYBOARD-HANDLE = 1457;

// Hook type not allowed.
define inline-only constant $ERROR-HOOK-TYPE-NOT-ALLOWED = 1458;

// This operation requires an interactive window station.
define inline-only constant $ERROR-REQUIRES-INTERACTIVE-WINDOWSTATION =
	1459;

// This operation returned because the timeout period expired.
define inline-only constant $ERROR-TIMEOUT              = 1460;

// Invalid monitor handle.
define inline-only constant $ERROR-INVALID-MONITOR-HANDLE = 1461;

// Failure accessing install service.
define inline-only constant $ERROR-INSTALL-SERVICE      = 1601;

// The user canceled the installation.
define inline-only constant $ERROR-INSTALL-USEREXIT     = 1602;

// Fatal error during installation.
define inline-only constant $ERROR-INSTALL-FAILURE      = 1603;

// Installation suspended, incomplete.
define inline-only constant $ERROR-INSTALL-SUSPEND      = 1604;

// Product code not registered.
define inline-only constant $ERROR-UNKNOWN-PRODUCT      = 1605;

// Feature ID not registered.
define inline-only constant $ERROR-UNKNOWN-FEATURE      = 1606;

// Component ID not registered.
define inline-only constant $ERROR-UNKNOWN-COMPONENT    = 1607;

// Unknown property.
define inline-only constant $ERROR-UNKNOWN-PROPERTY     = 1608;

// Handle is in an invalid state.
define inline-only constant $ERROR-INVALID-HANDLE-STATE = 1609;

// Configuration data corrupt.
define inline-only constant $ERROR-BAD-CONFIGURATION    = 1610;

// Language not available.
define inline-only constant $ERROR-INDEX-ABSENT         = 1611;

// Install source unavailable.
define inline-only constant $ERROR-INSTALL-SOURCE-ABSENT = 1612;

// Database version unsupported.
define inline-only constant $ERROR-BAD-DATABASE-VERSION = 1613;

// Product is uninstalled.
define inline-only constant $ERROR-PRODUCT-UNINSTALLED  = 1614;

// SQL query syntax invalid or unsupported.
define inline-only constant $ERROR-BAD-QUERY-SYNTAX     = 1615;

// Record field does not exist.
define inline-only constant $ERROR-INVALID-FIELD        = 1616;

// WINS encountered an error while processing the command.
define inline-only constant $ERROR-WINS-INTERNAL        = 4000;

// The local WINS can not be deleted.
define inline-only constant $ERROR-CAN-NOT-DEL-LOCAL-WINS = 4001;

// The importation from the file failed.
define inline-only constant $ERROR-STATIC-INIT          = 4002;

// The backup failed. Was a full backup done before?
define inline-only constant $ERROR-INC-BACKUP           = 4003;

// The backup failed. Check the directory to which you are backing the database.
define inline-only constant $ERROR-FULL-BACKUP          = 4004;

// The name does not exist in the WINS database.
define inline-only constant $ERROR-REC-NON-EXISTENT     = 4005;

// Replication with a nonconfigured partner is not allowed.
define inline-only constant $ERROR-RPL-NOT-ALLOWED      = 4006;

// The DHCP client has obtained an IP address that is already in use on the network.  The local interface will be disabled until the DHCP client can obtain a new address.
define inline-only constant $ERROR-DHCP-ADDRESS-CONFLICT = 4100;
