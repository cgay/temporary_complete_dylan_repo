Module:    gtk-widgets
Copyright:    Original Code is Copyright (c) 1995-2004 Functional Objects, Inc.
              All rights reserved.
License:      Functional Objects Library Public License Version 1.0
Dual-license: GNU Lesser General Public License
Warranty:     Distributed WITHOUT WARRANTY OF ANY KIND

// This file is automatically generated from "gtkeditable.h"; do not edit.

define C-pointer-type <GtkEditable*> => <GtkEditable>;
define C-pointer-type <GtkEditable**> => <GtkEditable*>;
define C-pointer-type <GtkEditableClass*> => <GtkEditableClass>;
define C-pointer-type <GtkEditableClass**> => <GtkEditableClass*>;
define C-pointer-type <GtkTextFunction*> => <GtkTextFunction>;
define C-pointer-type <GtkTextFunction**> => <GtkTextFunction*>;

define C-struct <_GtkEditable>
  sealed inline-only slot widget-value   :: <GtkWidget>;
  sealed inline-only slot current-pos-value :: <guint>;
  sealed inline-only slot selection-start-pos-value :: <guint>;
  sealed inline-only slot selection-end-pos-value :: <guint>;
  sealed bitfield slot has-selection-value :: <guint>,
    width: 1;
  sealed bitfield slot editable-value    :: <guint>,
    width: 1;
  sealed bitfield slot visible-value     :: <guint>,
    width: 1;
  sealed inline-only slot ic-value       :: <GdkIC*>;
  sealed inline-only slot ic-attr-value  :: <GdkICAttr*>;
  sealed inline-only slot clipboard-text-value :: <gchar*>;
  pointer-type-name: <_GtkEditable*>;
  c-name: "struct _GtkEditable";
end;

define C-struct <_GtkEditableClass>
  sealed inline-only slot parent-class-value :: <GtkWidgetClass>;
  sealed inline-only slot changed-value  :: <C-function-pointer>;
  sealed inline-only slot insert-text-value :: <C-function-pointer>;
  sealed inline-only slot delete-text-value :: <C-function-pointer>;
  sealed inline-only slot activate-value :: <C-function-pointer>;
  sealed inline-only slot set-editable-value :: <C-function-pointer>;
  sealed inline-only slot move-cursor-value :: <C-function-pointer>;
  sealed inline-only slot move-word-value :: <C-function-pointer>;
  sealed inline-only slot move-page-value :: <C-function-pointer>;
  sealed inline-only slot move-to-row-value :: <C-function-pointer>;
  sealed inline-only slot move-to-column-value :: <C-function-pointer>;
  sealed inline-only slot kill-char-value :: <C-function-pointer>;
  sealed inline-only slot kill-word-value :: <C-function-pointer>;
  sealed inline-only slot kill-line-value :: <C-function-pointer>;
  sealed inline-only slot cut-clipboard-value :: <C-function-pointer>;
  sealed inline-only slot copy-clipboard-value :: <C-function-pointer>;
  sealed inline-only slot paste-clipboard-value :: <C-function-pointer>;
  sealed inline-only slot update-text-value :: <C-function-pointer>;
  sealed inline-only slot get-chars-value :: <C-function-pointer>;
  sealed inline-only slot set-selection-value :: <C-function-pointer>;
  sealed inline-only slot set-position-value :: <C-function-pointer>;
  pointer-type-name: <_GtkEditableClass*>;
  c-name: "struct _GtkEditableClass";
end;

define inline-only C-function gtk-editable-get-type
  result value :: <GtkType>;
  c-name: "gtk_editable_get_type";
end;

define inline-only C-function gtk-editable-select-region
  parameter editable1  :: <GtkEditable*>;
  parameter start2     :: <gint>;
  parameter end3       :: <gint>;
  c-name: "gtk_editable_select_region";
end;

define inline-only C-function gtk-editable-insert-text
  parameter editable1  :: <GtkEditable*>;
  parameter new_text2  ::  /* const */ <gchar*>;
  parameter new_text_length3 :: <gint>;
  parameter position4  :: <gint*>;
  c-name: "gtk_editable_insert_text";
end;

define inline-only C-function gtk-editable-delete-text
  parameter editable1  :: <GtkEditable*>;
  parameter start_pos2 :: <gint>;
  parameter end_pos3   :: <gint>;
  c-name: "gtk_editable_delete_text";
end;

define inline-only C-function gtk-editable-get-chars
  parameter editable1  :: <GtkEditable*>;
  parameter start_pos2 :: <gint>;
  parameter end_pos3   :: <gint>;
  result value :: <gchar*>;
  c-name: "gtk_editable_get_chars";
end;

define inline-only C-function gtk-editable-cut-clipboard
  parameter editable1  :: <GtkEditable*>;
  c-name: "gtk_editable_cut_clipboard";
end;

define inline-only C-function gtk-editable-copy-clipboard
  parameter editable1  :: <GtkEditable*>;
  c-name: "gtk_editable_copy_clipboard";
end;

define inline-only C-function gtk-editable-paste-clipboard
  parameter editable1  :: <GtkEditable*>;
  c-name: "gtk_editable_paste_clipboard";
end;

define inline-only C-function gtk-editable-claim-selection
  parameter editable1  :: <GtkEditable*>;
  parameter claim2     :: <gboolean>;
  parameter time3      :: <guint32>;
  c-name: "gtk_editable_claim_selection";
end;

define inline-only C-function gtk-editable-delete-selection
  parameter editable1  :: <GtkEditable*>;
  c-name: "gtk_editable_delete_selection";
end;

define inline-only C-function gtk-editable-changed
  parameter editable1  :: <GtkEditable*>;
  c-name: "gtk_editable_changed";
end;

define inline-only C-function gtk-editable-set-position
  parameter editable1  :: <GtkEditable*>;
  parameter position2  :: <gint>;
  c-name: "gtk_editable_set_position";
end;

define inline-only C-function gtk-editable-get-position
  parameter editable1  :: <GtkEditable*>;
  result value :: <gint>;
  c-name: "gtk_editable_get_position";
end;

define inline-only C-function gtk-editable-set-editable
  parameter editable1  :: <GtkEditable*>;
  parameter is_editable2 :: <gboolean>;
  c-name: "gtk_editable_set_editable";
end;

define inline constant <GtkEditable> = <_GtkEditable>;
define inline constant <GtkEditableClass> = <_GtkEditableClass>;
define inline constant <GtkTextFunction> = <C-function-pointer>;
define sealed domain make (singleton(<_GtkEditable*>));
define sealed domain initialize (<_GtkEditable*>);
define sealed domain make (singleton(<_GtkEditableClass*>));
define sealed domain initialize (<_GtkEditableClass*>);
