#!/usr/local/bin/bash
#      Script: nightly-build
#      Author: Shri Amit(amit)
usage=" Usage: $0 -aevldtib"
# Opts & Flgs: -a: Enables all other flags
#              -e: Build emulator image
#              -v: Build environment image
#              -l: Compile libs
#              -d: Builds the dfmc
#              -i: Build a dfmc image and compiles libs
#              -t: Builds the tag files, sparc machines only
#              -b: Byte compiles all elisp files
#   Synopsis: A control script for the nightly builds, depending
#             upon specified flags, this script can:
#             . Build lw+dylan image
#             . Compile the libraries
#             . Build lw+dylan+env image
#             . Build the dfm using build-dfmc
#             . Build the dfm using build-dfmc-image
#             . Build the tag files
#             . Byte compile elisp files
# NOTE: -t option supported only for sparc machines as the it depends
#       on the gema utility which supports sparc platforms only.
###################################################################
## Application exit status legend ##
##  0: Build successful
##  1: Invalid command line argument
##  2: Emulator build failed

## Parse the options & flags on the command line ##
while getopts aelvdtib option
do case $option in
     a) all=Yes;;
     e) emu=Yes;;
     l) lib=Yes;;
     v) env=Yes;;
     d) dfmc=Yes;;
     i) dfmc_image=Yes;;
     t) tags=Yes;;
     b) byte_compile=Yes;;
    \?) echo $usage
        exit 1;;
   esac
done
shift `expr $OPTIND - 1`

## Assign defaults to options & flags ##
all=${all:-No}
emu=${emu:-No}
lib=${lib:-No}
env=${env:-No}
dfmc=${dfmc:-No}
dfmc_image=${dfmc_image:-No}
tags=${tags:-No}
byte_compile=${byte_compile:-No}

case $all in
    Yes) emu=Yes
	 lib=Yes
	 env=Yes
         dfmc=Yes
         dfmc_image=Yes
         byte_compile=Yes
         tags=Yes ;;
      *) ;;
esac

source /u/dylan/tools/admin/env.bash
registrydir="$dylandir/registry/emulator"
case $site in
   seattle) build_dfmc_options="-k" ;;
   *) build_dfmc_options="-d" ;;
esac
dfmc_log_file=$logsdir/build-dfmc-$host-$platform.log
loglink=$logsdir/nightly-build-log-$host-$platform
logfile=$loglink.$suffix

## Everything from here goes into a logfile ##
##
{
    echo "Starting at: `date`"
    echo "Running $0 with options:"
    echo "  The hostname is: $host"
    echo "  The platform is: $platform"
    echo "  Build emulator?: $emu"
    echo "       Build env?: $env"
    echo "    Compile libs?: $lib"
    echo "      Build dfmc?: $dfmc"
    echo "Build dfmc image?: $dfmc_image"
    echo "Compiling elisps?: $byte_compile"
    echo "      Build tags?: $tags"
    echo "   The logfile is: $logfile"
    echo


## Build the emulator and test it ##
##
if [ $emu = "Yes" ]; then
    echo Building lw+dylan image
    echo
    $admindir/build-emulator -m "$emu_hackers" -e
    status=$?
    if [ "$status" != 0 ]; then
	echo The emulator build failed, refer to build-emulator logfile
	echo
	exit 2;
    else
        echo The emulator build was successful
    fi
fi

## Build the env image ##
##
if [ $env = "Yes" ]; then
    echo Building lw+dylan+env image 
    echo
    $admindir/build-env -m "$env_hackers" -e
    status=$?
    if [ "$status" != 0 ]; then
	echo The environment build failed, refer to build-env logfile
	echo
    else
	echo The environment build was successful
	echo
     fi
fi

## Compile the libraries ##
## 
if [ $lib = "Yes" ]; then
    echo Compiling the libs in libs2compile
    echo
    $admindir/compile-libs -m "$rel_eng" -e
    status=$?
    if [ "$status" != 0 ]; then
	echo The lib compilation failed, refer to compile-libs logfile
	echo
    else
	echo The lib compilation was successful
	echo
     fi
fi

## Build the dfmc ##
##
if [ $dfmc = "Yes" ]; then
    echo Building the dfmc
    echo
    $scriptsdir/build-dfmc -p $dylandir -e $registrydir -l $dfmc_log_file -m $dfmc_hackers $build_dfmc_options
    status=$?
    if [ "$status" != 0 ]; then
	echo The dfmc build failed, refer to build-dfmc logfile
	echo
    else
	echo The dfmc build was successful
	echo
     fi
fi

## Build the dfmc image ##
##
if [ $dfmc_image = "Yes" ]; then
    echo Building the dfmc image
    echo
    $admindir/build-dfmc-image -m "$rel_eng"
    status=$?
    if [ "$status" != 0 ]; then
	echo The dfmc build image failed, refer to logfile
	echo
    else
	echo The dfmc image build was successful
	echo
     fi
fi

## Build the tag files ##
##
if [ $tags = "Yes" ]; then
    echo building the tag files
    echo
    $admindir/nightly-tag-file
    status=$?
    if [ "$status" != 0 ]; then
	echo The tag build failed, refer to nightly-build logfile
	echo
    else
	echo The tag build was successful
	echo
     fi
fi

## Byte compile the elisp files, currently only needed in ##
## ~dylan/tools/gnuemacs, but should be made more generic ##
## when/if needed later                                   ##
##
emacs -batch -f batch-byte-compile $emacs/ $toolsdir/gnuemacs.el

## Remove the old logs ##
##
$admindir/remove-old-files $loglink $logstokeep

echo $0 successful
echo "Ending at `date`"
echo
} &> $logfile

exit 0
#eof
