#!/bin/sh 
#
# Scriptname: dylan-remove
# Purpose: This script has exactly 2 uses:
#	    1. Removes the -compound argument from -parent argument
#              when no files are listed as arguments OR
#           2. Removes listed files from -compound argument
#           
# Last modified: Sep 30 1996 by amit. Was broken and partially
#           implemented. Fixed everything up.
################################################################

# Report on the status of a compound.

parent=""
compound=""
hope_options=""
scriptsdir="/u/dylan/tools/scripts"

# This quoting hackery is an attempt to preserve grouping

while [ $# -gt 0 ]; do
  case $1 in
    -p | -par | -parent)
      parent=$2; shift 2
      ;;
    -c | -comp | -compound) 
      compound=$2; shift 2
      ;;
    -reason | -rea | -ci-reason)
      hope_options="$hope_options $1 \"$2\""; shift 2
      # hope_options="$hope_options $1 $2"; shift 2
      ;;
    -version | -branch)
      hope_options="$hope_options $1 \"$2\""; shift 2
      ;;
    -*)
      echo "$script: unrecognised option $1"
      exit 1
      ;;
    *)        
      break
      ;;
  esac
done

files=$*

if [ "$files" = "" ]; then
  if [ "$compound" = "" ]; then
    compound=`$scriptsdir/dylan-local-compound`
  fi
  if [ "$parent" = "" ]; then
    echo "$script: error - no parent specified for $compund removal"
    exit 1
  fi
  eval "$scriptsdir/dylan-hope remove -c $parent -subc $compound $hope_options"
else
  for file in $files; do
    name=`basename $file`
    dir=`dirname $file`
    (cd $dir
     if [ "$compound" = "" ]; then
       compound=`$scriptsdir/dylan-local-compound`
     fi
     if [ "$compound" = "" ]; then
       echo "$script: error - no compound found for $file"
     fi
     eval "$scriptsdir/dylan-hope remove -c $compound $hope_options -unit $name" 
    )
  done
fi
# eof