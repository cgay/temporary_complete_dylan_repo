Module:    gtk-common
Copyright:    Original Code is Copyright (c) 1995-2004 Functional Objects, Inc.
              All rights reserved.
License:      Functional Objects Library Public License Version 1.0
Dual-license: GNU Lesser General Public License
Warranty:     Distributed WITHOUT WARRANTY OF ANY KIND

// This file is automatically generated from "gtkrc.h"; do not edit.

// enum GtkRcFlags:
define C-pointer-type <GtkRcFlags*> => <GtkRcFlags>;
define C-pointer-type <GtkRcFlags**> => <GtkRcFlags*>;
define inline-only constant $GTK-RC-FG = ash(1,0);
define inline-only constant $GTK-RC-BG = ash(1,1);
define inline-only constant $GTK-RC-TEXT = ash(1,2);
define inline-only constant $GTK-RC-BASE = ash(1,3);


define C-struct <_GtkRcStyle>
  sealed inline-only slot name-value     :: <gchar*>;
  sealed inline-only slot font-name-value :: <gchar*>;
  sealed inline-only slot fontset-name-value :: <gchar*>;
  sealed inline-only array slot bg-pixmap-name-array :: <gchar*>,
    length: 5,
    address-getter: bg-pixmap-name-value;
  sealed inline-only array slot color-flags-array :: <C-int>,
    length: 5,
    address-getter: color-flags-value;
  sealed inline-only array slot fg-array :: <GdkColor>,
    length: 5,
    address-getter: fg-value;
  sealed inline-only array slot bg-array :: <GdkColor>,
    length: 5,
    address-getter: bg-value;
  sealed inline-only array slot text-array :: <GdkColor>,
    length: 5,
    address-getter: text-value;
  sealed inline-only array slot base-array :: <GdkColor>,
    length: 5,
    address-getter: base-value;
  sealed inline-only slot engine-value   :: <GtkThemeEngine*>;
  sealed inline-only slot engine-data-value :: <gpointer>;
  sealed inline-only slot ref-count-value :: <guint>;
  pointer-type-name: <_GtkRcStyle*>;
  c-name: "struct _GtkRcStyle";
end;

define inline-only C-function gtk-rc-init
  c-name: "gtk_rc_init";
end;

define inline-only C-function gtk-rc-add-default-file
  parameter filename1  ::  /* const */ <gchar*>;
  c-name: "gtk_rc_add_default_file";
end;

define inline-only C-function gtk-rc-set-default-files
  parameter filenames1 :: <gchar**>;
  c-name: "gtk_rc_set_default_files";
end;

define inline-only C-function gtk-rc-get-default-files
  result value :: <gchar**>;
  c-name: "gtk_rc_get_default_files";
end;

define inline-only C-function gtk-rc-parse
  parameter filename1  ::  /* const */ <gchar*>;
  c-name: "gtk_rc_parse";
end;

define inline-only C-function gtk-rc-parse-string
  parameter rc_string1 ::  /* const */ <gchar*>;
  c-name: "gtk_rc_parse_string";
end;

define inline-only C-function gtk-rc-reparse-all
  result value :: <gboolean>;
  c-name: "gtk_rc_reparse_all";
end;

define inline-only C-function gtk-rc-get-style
  parameter widget1    :: <GtkWidget*>;
  result value :: <GtkStyle*>;
  c-name: "gtk_rc_get_style";
end;

define inline-only C-function gtk-rc-add-widget-name-style
  parameter rc_style1  :: <GtkRcStyle*>;
  parameter pattern2   ::  /* const */ <gchar*>;
  c-name: "gtk_rc_add_widget_name_style";
end;

define inline-only C-function gtk-rc-add-widget-class-style
  parameter rc_style1  :: <GtkRcStyle*>;
  parameter pattern2   ::  /* const */ <gchar*>;
  c-name: "gtk_rc_add_widget_class_style";
end;

define inline-only C-function gtk-rc-add-class-style
  parameter rc_style1  :: <GtkRcStyle*>;
  parameter pattern2   ::  /* const */ <gchar*>;
  c-name: "gtk_rc_add_class_style";
end;

define inline-only C-function gtk-rc-style-new
  result value :: <GtkRcStyle*>;
  c-name: "gtk_rc_style_new";
end;

define inline-only C-function gtk-rc-style-ref
  parameter rc_style1  :: <GtkRcStyle*>;
  c-name: "gtk_rc_style_ref";
end;

define inline-only C-function gtk-rc-style-unref
  parameter rc_style1  :: <GtkRcStyle*>;
  c-name: "gtk_rc_style_unref";
end;
define C-pointer-type <GtkImageLoader*> => <GtkImageLoader>;
define C-pointer-type <GtkImageLoader**> => <GtkImageLoader*>;

define inline-only C-function gtk-rc-set-image-loader
  parameter loader1    :: <GtkImageLoader>;
  c-name: "gtk_rc_set_image_loader";
end;

define inline-only C-function gtk-rc-load-image
  parameter colormap1  :: <GdkColormap*>;
  parameter transparent_color2 :: <GdkColor*>;
  parameter filename3  ::  /* const */ <gchar*>;
  result value :: <GdkPixmap*>;
  c-name: "gtk_rc_load_image";
end;

define inline-only C-function gtk-rc-find-pixmap-in-path
  parameter scanner1   :: <GScanner*>;
  parameter pixmap_file2 ::  /* const */ <gchar*>;
  result value :: <gchar*>;
  c-name: "gtk_rc_find_pixmap_in_path";
end;

define inline-only C-function gtk-rc-find-module-in-path
  parameter module_file1 ::  /* const */ <gchar*>;
  result value :: <gchar*>;
  c-name: "gtk_rc_find_module_in_path";
end;

define inline-only C-function gtk-rc-get-theme-dir
  result value :: <gchar*>;
  c-name: "gtk_rc_get_theme_dir";
end;

define inline-only C-function gtk-rc-get-module-dir
  result value :: <gchar*>;
  c-name: "gtk_rc_get_module_dir";
end;
// enum GtkRcTokenType:
define C-pointer-type <GtkRcTokenType*> => <GtkRcTokenType>;
define C-pointer-type <GtkRcTokenType**> => <GtkRcTokenType*>;
define inline-only constant $GTK-RC-TOKEN-INVALID = $G-TOKEN-LAST;
define inline-only constant $GTK-RC-TOKEN-INCLUDE = $G-TOKEN-LAST + 1;
define inline-only constant $GTK-RC-TOKEN-NORMAL = $GTK-RC-TOKEN-INCLUDE + 1;
define inline-only constant $GTK-RC-TOKEN-ACTIVE = $GTK-RC-TOKEN-NORMAL + 1;
define inline-only constant $GTK-RC-TOKEN-PRELIGHT = $GTK-RC-TOKEN-ACTIVE + 1;
define inline-only constant $GTK-RC-TOKEN-SELECTED = $GTK-RC-TOKEN-PRELIGHT + 1;
define inline-only constant $GTK-RC-TOKEN-INSENSITIVE = $GTK-RC-TOKEN-SELECTED + 1;
define inline-only constant $GTK-RC-TOKEN-FG = $GTK-RC-TOKEN-INSENSITIVE + 1;
define inline-only constant $GTK-RC-TOKEN-BG = $GTK-RC-TOKEN-FG + 1;
define inline-only constant $GTK-RC-TOKEN-BASE = $GTK-RC-TOKEN-BG + 1;
define inline-only constant $GTK-RC-TOKEN-TEXT = $GTK-RC-TOKEN-BASE + 1;
define inline-only constant $GTK-RC-TOKEN-FONT = $GTK-RC-TOKEN-TEXT + 1;
define inline-only constant $GTK-RC-TOKEN-FONTSET = $GTK-RC-TOKEN-FONT + 1;
define inline-only constant $GTK-RC-TOKEN-BG-PIXMAP = $GTK-RC-TOKEN-FONTSET + 1;
define inline-only constant $GTK-RC-TOKEN-PIXMAP-PATH = $GTK-RC-TOKEN-BG-PIXMAP + 1;
define inline-only constant $GTK-RC-TOKEN-STYLE = $GTK-RC-TOKEN-PIXMAP-PATH + 1;
define inline-only constant $GTK-RC-TOKEN-BINDING = $GTK-RC-TOKEN-STYLE + 1;
define inline-only constant $GTK-RC-TOKEN-BIND = $GTK-RC-TOKEN-BINDING + 1;
define inline-only constant $GTK-RC-TOKEN-WIDGET = $GTK-RC-TOKEN-BIND + 1;
define inline-only constant $GTK-RC-TOKEN-WIDGET-CLASS = $GTK-RC-TOKEN-WIDGET + 1;
define inline-only constant $GTK-RC-TOKEN-CLASS = $GTK-RC-TOKEN-WIDGET-CLASS + 1;
define inline-only constant $GTK-RC-TOKEN-LOWEST = $GTK-RC-TOKEN-CLASS + 1;
define inline-only constant $GTK-RC-TOKEN-GTK = $GTK-RC-TOKEN-LOWEST + 1;
define inline-only constant $GTK-RC-TOKEN-APPLICATION = $GTK-RC-TOKEN-GTK + 1;
define inline-only constant $GTK-RC-TOKEN-RC = $GTK-RC-TOKEN-APPLICATION + 1;
define inline-only constant $GTK-RC-TOKEN-HIGHEST = $GTK-RC-TOKEN-RC + 1;
define inline-only constant $GTK-RC-TOKEN-ENGINE = $GTK-RC-TOKEN-HIGHEST + 1;
define inline-only constant $GTK-RC-TOKEN-MODULE-PATH = $GTK-RC-TOKEN-ENGINE + 1;
define inline-only constant $GTK-RC-TOKEN-LAST = $GTK-RC-TOKEN-MODULE-PATH + 1;


define inline-only C-function gtk-rc-parse-color
  parameter scanner1   :: <GScanner*>;
  parameter color2     :: <GdkColor*>;
  result value :: <guint>;
  c-name: "gtk_rc_parse_color";
end;

define inline-only C-function gtk-rc-parse-state
  parameter scanner1   :: <GScanner*>;
  parameter state2     :: <GtkStateType*>;
  result value :: <guint>;
  c-name: "gtk_rc_parse_state";
end;

define inline-only C-function gtk-rc-parse-priority
  parameter scanner1   :: <GScanner*>;
  parameter priority2  :: <GtkPathPriorityType*>;
  result value :: <guint>;
  c-name: "gtk_rc_parse_priority";
end;

define inline constant <GtkRcFlags> = <c-signed-int>;
define sealed domain make (singleton(<_GtkRcStyle*>));
define sealed domain initialize (<_GtkRcStyle*>);
define inline constant <GtkImageLoader> = <C-function-pointer>;
define inline constant <GtkRcTokenType> = <c-signed-int>;
