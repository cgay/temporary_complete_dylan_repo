Module:    gdk
Copyright:    Original Code is Copyright (c) 1995-2004 Functional Objects, Inc.
              All rights reserved.
License:      Functional Objects Library Public License Version 1.0
Dual-license: GNU Lesser General Public License
Warranty:     Distributed WITHOUT WARRANTY OF ANY KIND

// This file is automatically generated from "gdkrgb.h"; do not edit.

define C-pointer-type <GdkRgbCmap*> => <GdkRgbCmap>;
define C-pointer-type <GdkRgbCmap**> => <GdkRgbCmap*>;

define C-struct <_GdkRgbCmap>
  sealed inline-only array slot colors-array :: <guint32>,
    length: 256,
    address-getter: colors-value;
  sealed inline-only array slot lut-array :: <guchar>,
    length: 256,
    address-getter: lut-value;
  pointer-type-name: <_GdkRgbCmap*>;
  c-name: "struct _GdkRgbCmap";
end;

define inline-only C-function gdk-rgb-init
  c-name: "gdk_rgb_init";
end;

define inline-only C-function gdk-rgb-xpixel-from-rgb
  parameter rgb1       :: <guint32>;
  result value :: <gulong>;
  c-name: "gdk_rgb_xpixel_from_rgb";
end;

define inline-only C-function gdk-rgb-gc-set-foreground
  parameter gc1        :: <GdkGC*>;
  parameter rgb2       :: <guint32>;
  c-name: "gdk_rgb_gc_set_foreground";
end;

define inline-only C-function gdk-rgb-gc-set-background
  parameter gc1        :: <GdkGC*>;
  parameter rgb2       :: <guint32>;
  c-name: "gdk_rgb_gc_set_background";
end;
// enum GdkRgbDither:
define C-pointer-type <GdkRgbDither*> => <GdkRgbDither>;
define C-pointer-type <GdkRgbDither**> => <GdkRgbDither*>;
define inline-only constant $GDK-RGB-DITHER-NONE = -1 + 1;
define inline-only constant $GDK-RGB-DITHER-NORMAL = $GDK-RGB-DITHER-NONE + 1;
define inline-only constant $GDK-RGB-DITHER-MAX = $GDK-RGB-DITHER-NORMAL + 1;


define inline-only C-function gdk-draw-rgb-image
  parameter drawable1  :: <GdkDrawable*>;
  parameter gc2        :: <GdkGC*>;
  parameter x3         :: <gint>;
  parameter y4         :: <gint>;
  parameter width5     :: <gint>;
  parameter height6    :: <gint>;
  parameter dith7      :: <C-int>;
  parameter rgb_buf8   :: <guchar*>;
  parameter rowstride9 :: <gint>;
  c-name: "gdk_draw_rgb_image";
end;

define inline-only C-function gdk-draw-rgb-image-dithalign
  parameter drawable1  :: <GdkDrawable*>;
  parameter gc2        :: <GdkGC*>;
  parameter x3         :: <gint>;
  parameter y4         :: <gint>;
  parameter width5     :: <gint>;
  parameter height6    :: <gint>;
  parameter dith7      :: <C-int>;
  parameter rgb_buf8   :: <guchar*>;
  parameter rowstride9 :: <gint>;
  parameter xdith10    :: <gint>;
  parameter ydith11    :: <gint>;
  c-name: "gdk_draw_rgb_image_dithalign";
end;

define inline-only C-function gdk-draw-rgb-32-image
  parameter drawable1  :: <GdkDrawable*>;
  parameter gc2        :: <GdkGC*>;
  parameter x3         :: <gint>;
  parameter y4         :: <gint>;
  parameter width5     :: <gint>;
  parameter height6    :: <gint>;
  parameter dith7      :: <C-int>;
  parameter buf8       :: <guchar*>;
  parameter rowstride9 :: <gint>;
  c-name: "gdk_draw_rgb_32_image";
end;

define inline-only C-function gdk-draw-gray-image
  parameter drawable1  :: <GdkDrawable*>;
  parameter gc2        :: <GdkGC*>;
  parameter x3         :: <gint>;
  parameter y4         :: <gint>;
  parameter width5     :: <gint>;
  parameter height6    :: <gint>;
  parameter dith7      :: <C-int>;
  parameter buf8       :: <guchar*>;
  parameter rowstride9 :: <gint>;
  c-name: "gdk_draw_gray_image";
end;

define inline-only C-function gdk-rgb-cmap-new
  parameter colors1    :: <guint32*>;
  parameter n_colors2  :: <gint>;
  result value :: <GdkRgbCmap*>;
  c-name: "gdk_rgb_cmap_new";
end;

define inline-only C-function gdk-rgb-cmap-free
  parameter cmap1      :: <GdkRgbCmap*>;
  c-name: "gdk_rgb_cmap_free";
end;

define inline-only C-function gdk-draw-indexed-image
  parameter drawable1  :: <GdkDrawable*>;
  parameter gc2        :: <GdkGC*>;
  parameter x3         :: <gint>;
  parameter y4         :: <gint>;
  parameter width5     :: <gint>;
  parameter height6    :: <gint>;
  parameter dith7      :: <C-int>;
  parameter buf8       :: <guchar*>;
  parameter rowstride9 :: <gint>;
  parameter cmap10     :: <GdkRgbCmap*>;
  c-name: "gdk_draw_indexed_image";
end;

define inline-only C-function gdk-rgb-ditherable
  result value :: <gboolean>;
  c-name: "gdk_rgb_ditherable";
end;

define inline-only C-function gdk-rgb-set-verbose
  parameter verbose1   :: <gboolean>;
  c-name: "gdk_rgb_set_verbose";
end;

define inline-only C-function gdk-rgb-set-install
  parameter install1   :: <gboolean>;
  c-name: "gdk_rgb_set_install";
end;

define inline-only C-function gdk-rgb-set-min-colors
  parameter min_colors1 :: <gint>;
  c-name: "gdk_rgb_set_min_colors";
end;

define inline-only C-function gdk-rgb-get-cmap
  result value :: <GdkColormap*>;
  c-name: "gdk_rgb_get_cmap";
end;

define inline-only C-function gdk-rgb-get-visual
  result value :: <GdkVisual*>;
  c-name: "gdk_rgb_get_visual";
end;

define inline constant <GdkRgbCmap> = <_GdkRgbCmap>;
define sealed domain make (singleton(<_GdkRgbCmap*>));
define sealed domain initialize (<_GdkRgbCmap*>);
define inline constant <GdkRgbDither> = <c-signed-int>;
