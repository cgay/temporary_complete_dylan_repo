Module:    gdk
Copyright:    Original Code is Copyright (c) 1995-2004 Functional Objects, Inc.
              All rights reserved.
License:      Functional Objects Library Public License Version 1.0
Dual-license: GNU Lesser General Public License
Warranty:     Distributed WITHOUT WARRANTY OF ANY KIND

// This file is automatically generated from "gdk.h"; do not edit.

define inline-only constant $GDK-PRIORITY-EVENTS           =
	$G-PRIORITY-DEFAULT;

define inline-only C-function gdk-init
  parameter argc1      :: <gint*>;
  parameter argv2      :: <gchar***>;
  c-name: "gdk_init";
end;

define inline-only C-function gdk-init-check
  parameter argc1      :: <gint*>;
  parameter argv2      :: <gchar***>;
  result value :: <gboolean>;
  c-name: "gdk_init_check";
end;

define inline-only C-function gdk-exit
  parameter error_code1 :: <gint>;
  c-name: "gdk_exit";
end;

define inline-only C-function gdk-set-locale
  result value :: <gchar*>;
  c-name: "gdk_set_locale";
end;

define inline-only C-function gdk-error-trap-push
  c-name: "gdk_error_trap_push";
end;

define inline-only C-function gdk-error-trap-pop
  result value :: <gint>;
  c-name: "gdk_error_trap_pop";
end;

define inline-only C-function gdk-events-pending
  result value :: <gboolean>;
  c-name: "gdk_events_pending";
end;

define inline-only C-function gdk-event-get
  result value :: <GdkEvent*>;
  c-name: "gdk_event_get";
end;

define inline-only C-function gdk-event-peek
  result value :: <GdkEvent*>;
  c-name: "gdk_event_peek";
end;

define inline-only C-function gdk-event-get-graphics-expose
  parameter window1    :: <GdkWindow*>;
  result value :: <GdkEvent*>;
  c-name: "gdk_event_get_graphics_expose";
end;

define inline-only C-function gdk-event-put
  parameter event1     :: <GdkEvent*>;
  c-name: "gdk_event_put";
end;

define inline-only C-function gdk-event-copy
  parameter event1     :: <GdkEvent*>;
  result value :: <GdkEvent*>;
  c-name: "gdk_event_copy";
end;

define inline-only C-function gdk-event-free
  parameter event1     :: <GdkEvent*>;
  c-name: "gdk_event_free";
end;

define inline-only C-function gdk-event-get-time
  parameter event1     :: <GdkEvent*>;
  result value :: <guint32>;
  c-name: "gdk_event_get_time";
end;

define inline-only C-function gdk-event-handler-set
  parameter func1      :: <GdkEventFunc>;
  parameter data2      :: <gpointer>;
  parameter notify3    :: <GDestroyNotify>;
  c-name: "gdk_event_handler_set";
end;

define inline-only C-function gdk-set-show-events
  parameter show_events1 :: <gint>;
  c-name: "gdk_set_show_events";
end;

define inline-only C-function gdk-set-use-xshm
  parameter use_xshm1  :: <gint>;
  c-name: "gdk_set_use_xshm";
end;

define inline-only C-function gdk-get-show-events
  result value :: <gint>;
  c-name: "gdk_get_show_events";
end;

define inline-only C-function gdk-get-use-xshm
  result value :: <gint>;
  c-name: "gdk_get_use_xshm";
end;

define inline-only C-function gdk-get-display
  result value :: <gchar*>;
  c-name: "gdk_get_display";
end;

define inline-only C-function gdk-time-get
  result value :: <guint32>;
  c-name: "gdk_time_get";
end;

define inline-only C-function gdk-timer-get
  result value :: <guint32>;
  c-name: "gdk_timer_get";
end;

define inline-only C-function gdk-timer-set
  parameter milliseconds1 :: <guint32>;
  c-name: "gdk_timer_set";
end;

define inline-only C-function gdk-timer-enable
  c-name: "gdk_timer_enable";
end;

define inline-only C-function gdk-timer-disable
  c-name: "gdk_timer_disable";
end;

define inline-only C-function gdk-input-add-full
  parameter source1    :: <GIOChannel*>;
  parameter condition2 :: <GdkInputCondition>;
  parameter function3  :: <GdkInputFunction>;
  parameter data4      :: <gpointer>;
  parameter destroy5   :: <GdkDestroyNotify>;
  result value :: <gint>;
  c-name: "gdk_input_add_full";
end;

define inline-only C-function gdk-input-add
  parameter source1    :: <GIOChannel*>;
  parameter condition2 :: <GdkInputCondition>;
  parameter function3  :: <GdkInputFunction>;
  parameter data4      :: <gpointer>;
  result value :: <gint>;
  c-name: "gdk_input_add";
end;

define inline-only C-function gdk-input-add
  parameter source1    :: <gint>;
  parameter condition2 :: <GdkInputCondition>;
  parameter function3  :: <GdkInputFunction>;
  parameter data4      :: <gpointer>;
  result value :: <gint>;
  c-name: "gdk_input_add";
end;

define inline-only C-function gdk-input-remove
  parameter tag1       :: <gint>;
  c-name: "gdk_input_remove";
end;

define inline-only C-function gdk-pointer-grab
  parameter window1    :: <GdkWindow*>;
  parameter owner_events2 :: <gint>;
  parameter event_mask3 :: <GdkEventMask>;
  parameter confine_to4 :: <GdkWindow*>;
  parameter cursor5    :: <GdkCursor*>;
  parameter time6      :: <guint32>;
  result value :: <gint>;
  c-name: "gdk_pointer_grab";
end;

define inline-only C-function gdk-pointer-ungrab
  parameter time1      :: <guint32>;
  c-name: "gdk_pointer_ungrab";
end;

define inline-only C-function gdk-keyboard-grab
  parameter window1    :: <GdkWindow*>;
  parameter owner_events2 :: <gint>;
  parameter time3      :: <guint32>;
  result value :: <gint>;
  c-name: "gdk_keyboard_grab";
end;

define inline-only C-function gdk-keyboard-ungrab
  parameter time1      :: <guint32>;
  c-name: "gdk_keyboard_ungrab";
end;

define inline-only C-function gdk-pointer-is-grabbed
  result value :: <gint>;
  c-name: "gdk_pointer_is_grabbed";
end;

define inline-only C-function gdk-screen-width
  result value :: <gint>;
  c-name: "gdk_screen_width";
end;

define inline-only C-function gdk-screen-height
  result value :: <gint>;
  c-name: "gdk_screen_height";
end;

define inline-only C-function gdk-screen-width-mm
  result value :: <gint>;
  c-name: "gdk_screen_width_mm";
end;

define inline-only C-function gdk-screen-height-mm
  result value :: <gint>;
  c-name: "gdk_screen_height_mm";
end;

define inline-only C-function gdk-flush
  c-name: "gdk_flush";
end;

define inline-only C-function gdk-beep
  c-name: "gdk_beep";
end;

define inline-only C-function gdk-key-repeat-disable
  c-name: "gdk_key_repeat_disable";
end;

define inline-only C-function gdk-key-repeat-restore
  c-name: "gdk_key_repeat_restore";
end;

define inline-only C-function gdk-visual-get-best-depth
  result value :: <gint>;
  c-name: "gdk_visual_get_best_depth";
end;

define inline-only C-function gdk-visual-get-best-type
  result value :: <GdkVisualType>;
  c-name: "gdk_visual_get_best_type";
end;

define inline-only C-function gdk-visual-get-system
  result value :: <GdkVisual*>;
  c-name: "gdk_visual_get_system";
end;

define inline-only C-function gdk-visual-get-best
  result value :: <GdkVisual*>;
  c-name: "gdk_visual_get_best";
end;

define inline-only C-function gdk-visual-get-best-with-depth
  parameter depth1     :: <gint>;
  result value :: <GdkVisual*>;
  c-name: "gdk_visual_get_best_with_depth";
end;

define inline-only C-function gdk-visual-get-best-with-type
  parameter visual_type1 :: <GdkVisualType>;
  result value :: <GdkVisual*>;
  c-name: "gdk_visual_get_best_with_type";
end;

define inline-only C-function gdk-visual-get-best-with-both
  parameter depth1     :: <gint>;
  parameter visual_type2 :: <GdkVisualType>;
  result value :: <GdkVisual*>;
  c-name: "gdk_visual_get_best_with_both";
end;

define inline-only C-function gdk-visual-ref
  parameter visual1    :: <GdkVisual*>;
  result value :: <GdkVisual*>;
  c-name: "gdk_visual_ref";
end;

define inline-only C-function gdk-visual-unref
  parameter visual1    :: <GdkVisual*>;
  c-name: "gdk_visual_unref";
end;

define inline-only C-function gdk-query-depths
  parameter depths1    :: <gint**>;
  parameter count2     :: <gint*>;
  c-name: "gdk_query_depths";
end;

define inline-only C-function gdk-query-visual-types
  parameter visual_types1 :: <GdkVisualType**>;
  parameter count2     :: <gint*>;
  c-name: "gdk_query_visual_types";
end;

define inline-only C-function gdk-list-visuals
  result value :: <GList*>;
  c-name: "gdk_list_visuals";
end;

define inline-only C-function gdk-window-new
  parameter parent1    :: <GdkWindow*>;
  parameter attributes2 :: <GdkWindowAttr*>;
  parameter attributes_mask3 :: <gint>;
  result value :: <GdkWindow*>;
  c-name: "gdk_window_new";
end;

define inline-only C-function gdk-window-destroy
  parameter window1    :: <GdkWindow*>;
  c-name: "gdk_window_destroy";
end;

define inline-only C-function gdk-window-ref
  parameter window1    :: <GdkWindow*>;
  result value :: <GdkWindow*>;
  c-name: "gdk_window_ref";
end;

define inline-only C-function gdk-window-unref
  parameter window1    :: <GdkWindow*>;
  c-name: "gdk_window_unref";
end;

define inline-only C-function gdk-window-at-pointer
  parameter win_x1     :: <gint*>;
  parameter win_y2     :: <gint*>;
  result value :: <GdkWindow*>;
  c-name: "gdk_window_at_pointer";
end;

define inline-only C-function gdk-window-show
  parameter window1    :: <GdkWindow*>;
  c-name: "gdk_window_show";
end;

define inline-only C-function gdk-window-hide
  parameter window1    :: <GdkWindow*>;
  c-name: "gdk_window_hide";
end;

define inline-only C-function gdk-window-withdraw
  parameter window1    :: <GdkWindow*>;
  c-name: "gdk_window_withdraw";
end;

define inline-only C-function gdk-window-move
  parameter window1    :: <GdkWindow*>;
  parameter x2         :: <gint>;
  parameter y3         :: <gint>;
  c-name: "gdk_window_move";
end;

define inline-only C-function gdk-window-resize
  parameter window1    :: <GdkWindow*>;
  parameter width2     :: <gint>;
  parameter height3    :: <gint>;
  c-name: "gdk_window_resize";
end;

define inline-only C-function gdk-window-move-resize
  parameter window1    :: <GdkWindow*>;
  parameter x2         :: <gint>;
  parameter y3         :: <gint>;
  parameter width4     :: <gint>;
  parameter height5    :: <gint>;
  c-name: "gdk_window_move_resize";
end;

define inline-only C-function gdk-window-reparent
  parameter window1    :: <GdkWindow*>;
  parameter new_parent2 :: <GdkWindow*>;
  parameter x3         :: <gint>;
  parameter y4         :: <gint>;
  c-name: "gdk_window_reparent";
end;

define inline-only C-function gdk-window-clear
  parameter window1    :: <GdkWindow*>;
  c-name: "gdk_window_clear";
end;

define inline-only C-function gdk-window-clear-area
  parameter window1    :: <GdkWindow*>;
  parameter x2         :: <gint>;
  parameter y3         :: <gint>;
  parameter width4     :: <gint>;
  parameter height5    :: <gint>;
  c-name: "gdk_window_clear_area";
end;

define inline-only C-function gdk-window-clear-area-e
  parameter window1    :: <GdkWindow*>;
  parameter x2         :: <gint>;
  parameter y3         :: <gint>;
  parameter width4     :: <gint>;
  parameter height5    :: <gint>;
  c-name: "gdk_window_clear_area_e";
end;

define inline-only C-function gdk-window-copy-area
  parameter window1    :: <GdkWindow*>;
  parameter gc2        :: <GdkGC*>;
  parameter x3         :: <gint>;
  parameter y4         :: <gint>;
  parameter source_window5 :: <GdkWindow*>;
  parameter source_x6  :: <gint>;
  parameter source_y7  :: <gint>;
  parameter width8     :: <gint>;
  parameter height9    :: <gint>;
  c-name: "gdk_window_copy_area";
end;

define inline-only C-function gdk-window-raise
  parameter window1    :: <GdkWindow*>;
  c-name: "gdk_window_raise";
end;

define inline-only C-function gdk-window-lower
  parameter window1    :: <GdkWindow*>;
  c-name: "gdk_window_lower";
end;

define inline-only C-function gdk-window-set-user-data
  parameter window1    :: <GdkWindow*>;
  parameter user_data2 :: <gpointer>;
  c-name: "gdk_window_set_user_data";
end;

define inline-only C-function gdk-window-set-override-redirect
  parameter window1    :: <GdkWindow*>;
  parameter override_redirect2 :: <gboolean>;
  c-name: "gdk_window_set_override_redirect";
end;

define inline-only C-function gdk-window-add-filter
  parameter window1    :: <GdkWindow*>;
  parameter function2  :: <GdkFilterFunc>;
  parameter data3      :: <gpointer>;
  c-name: "gdk_window_add_filter";
end;

define inline-only C-function gdk-window-remove-filter
  parameter window1    :: <GdkWindow*>;
  parameter function2  :: <GdkFilterFunc>;
  parameter data3      :: <gpointer>;
  c-name: "gdk_window_remove_filter";
end;

define inline-only C-function gdk-window-shape-combine-mask
  parameter window1    :: <GdkWindow*>;
  parameter shape_mask2 :: <GdkBitmap*>;
  parameter offset_x3  :: <gint>;
  parameter offset_y4  :: <gint>;
  c-name: "gdk_window_shape_combine_mask";
end;

define inline-only C-function gdk-window-set-child-shapes
  parameter window1    :: <GdkWindow*>;
  c-name: "gdk_window_set_child_shapes";
end;

define inline-only C-function gdk-window-merge-child-shapes
  parameter window1    :: <GdkWindow*>;
  c-name: "gdk_window_merge_child_shapes";
end;

define inline-only C-function gdk-window-is-visible
  parameter window1    :: <GdkWindow*>;
  result value :: <gboolean>;
  c-name: "gdk_window_is_visible";
end;

define inline-only C-function gdk-window-is-viewable
  parameter window1    :: <GdkWindow*>;
  result value :: <gboolean>;
  c-name: "gdk_window_is_viewable";
end;

define inline-only C-function gdk-window-set-static-gravities
  parameter window1    :: <GdkWindow*>;
  parameter use_static2 :: <gboolean>;
  result value :: <gboolean>;
  c-name: "gdk_window_set_static_gravities";
end;

define inline-only C-function gdk-add-client-message-filter
  parameter message_type1 :: <GdkAtom>;
  parameter func2      :: <GdkFilterFunc>;
  parameter data3      :: <gpointer>;
  c-name: "gdk_add_client_message_filter";
end;

define inline-only C-function gdk-drag-context-new
  result value :: <GdkDragContext*>;
  c-name: "gdk_drag_context_new";
end;

define inline-only C-function gdk-drag-context-ref
  parameter context1   :: <GdkDragContext*>;
  c-name: "gdk_drag_context_ref";
end;

define inline-only C-function gdk-drag-context-unref
  parameter context1   :: <GdkDragContext*>;
  c-name: "gdk_drag_context_unref";
end;

define inline-only C-function gdk-drag-status
  parameter context1   :: <GdkDragContext*>;
  parameter action2    :: <GdkDragAction>;
  parameter time3      :: <guint32>;
  c-name: "gdk_drag_status";
end;

define inline-only C-function gdk-drop-reply
  parameter context1   :: <GdkDragContext*>;
  parameter ok2        :: <gboolean>;
  parameter time3      :: <guint32>;
  c-name: "gdk_drop_reply";
end;

define inline-only C-function gdk-drop-finish
  parameter context1   :: <GdkDragContext*>;
  parameter success2   :: <gboolean>;
  parameter time3      :: <guint32>;
  c-name: "gdk_drop_finish";
end;

define inline-only C-function gdk-drag-get-selection
  parameter context1   :: <GdkDragContext*>;
  result value :: <GdkAtom>;
  c-name: "gdk_drag_get_selection";
end;

define inline-only C-function gdk-drag-begin
  parameter window1    :: <GdkWindow*>;
  parameter targets2   :: <GList*>;
  result value :: <GdkDragContext*>;
  c-name: "gdk_drag_begin";
end;

define inline-only C-function gdk-drag-get-protocol
  parameter xid1       :: <guint32>;
  parameter protocol2  :: <GdkDragProtocol*>;
  result value :: <guint32>;
  c-name: "gdk_drag_get_protocol";
end;

define inline-only C-function gdk-drag-find-window
  parameter context1   :: <GdkDragContext*>;
  parameter drag_window2 :: <GdkWindow*>;
  parameter x_root3    :: <gint>;
  parameter y_root4    :: <gint>;
  parameter dest_window5 :: <GdkWindow**>;
  parameter protocol6  :: <GdkDragProtocol*>;
  c-name: "gdk_drag_find_window";
end;

define inline-only C-function gdk-drag-motion
  parameter context1   :: <GdkDragContext*>;
  parameter dest_window2 :: <GdkWindow*>;
  parameter protocol3  :: <GdkDragProtocol>;
  parameter x_root4    :: <gint>;
  parameter y_root5    :: <gint>;
  parameter suggested_action6 :: <GdkDragAction>;
  parameter possible_actions7 :: <GdkDragAction>;
  parameter time8      :: <guint32>;
  result value :: <gboolean>;
  c-name: "gdk_drag_motion";
end;

define inline-only C-function gdk-drag-drop
  parameter context1   :: <GdkDragContext*>;
  parameter time2      :: <guint32>;
  c-name: "gdk_drag_drop";
end;

define inline-only C-function gdk-drag-abort
  parameter context1   :: <GdkDragContext*>;
  parameter time2      :: <guint32>;
  c-name: "gdk_drag_abort";
end;

define inline-only C-function gdk-drag-get-selection
  parameter context1   :: <GdkDragContext*>;
  result value :: <GdkAtom>;
  c-name: "gdk_drag_get_selection";
end;

define inline-only C-function gdk-window-set-hints
  parameter window1    :: <GdkWindow*>;
  parameter x2         :: <gint>;
  parameter y3         :: <gint>;
  parameter min_width4 :: <gint>;
  parameter min_height5 :: <gint>;
  parameter max_width6 :: <gint>;
  parameter max_height7 :: <gint>;
  parameter flags8     :: <gint>;
  c-name: "gdk_window_set_hints";
end;

define inline-only C-function gdk-window-set-geometry-hints
  parameter window1    :: <GdkWindow*>;
  parameter geometry2  :: <GdkGeometry*>;
  parameter flags3     :: <GdkWindowHints>;
  c-name: "gdk_window_set_geometry_hints";
end;

define inline-only C-function gdk-set-sm-client-id
  parameter sm_client_id1 ::  /* const */ <gchar*>;
  c-name: "gdk_set_sm_client_id";
end;

define inline-only C-function gdk-window-set-title
  parameter window1    :: <GdkWindow*>;
  parameter title2     ::  /* const */ <gchar*>;
  c-name: "gdk_window_set_title";
end;

define inline-only C-function gdk-window-set-role
  parameter window1    :: <GdkWindow*>;
  parameter role2      ::  /* const */ <gchar*>;
  c-name: "gdk_window_set_role";
end;

define inline-only C-function gdk-window-set-transient-for
  parameter window1    :: <GdkWindow*>;
  parameter leader2    :: <GdkWindow*>;
  c-name: "gdk_window_set_transient_for";
end;

define inline-only C-function gdk-window-set-background
  parameter window1    :: <GdkWindow*>;
  parameter color2     :: <GdkColor*>;
  c-name: "gdk_window_set_background";
end;

define inline-only C-function gdk-window-set-back-pixmap
  parameter window1    :: <GdkWindow*>;
  parameter pixmap2    :: <GdkPixmap*>;
  parameter parent_relative3 :: <gint>;
  c-name: "gdk_window_set_back_pixmap";
end;

define inline-only C-function gdk-window-set-cursor
  parameter window1    :: <GdkWindow*>;
  parameter cursor2    :: <GdkCursor*>;
  c-name: "gdk_window_set_cursor";
end;

define inline-only C-function gdk-window-set-colormap
  parameter window1    :: <GdkWindow*>;
  parameter colormap2  :: <GdkColormap*>;
  c-name: "gdk_window_set_colormap";
end;

define inline-only C-function gdk-window-get-user-data
  parameter window1    :: <GdkWindow*>;
  parameter data2      :: <gpointer*>;
  c-name: "gdk_window_get_user_data";
end;

define inline-only C-function gdk-window-get-geometry
  parameter window1    :: <GdkWindow*>;
  parameter x2         :: <gint*>;
  parameter y3         :: <gint*>;
  parameter width4     :: <gint*>;
  parameter height5    :: <gint*>;
  parameter depth6     :: <gint*>;
  c-name: "gdk_window_get_geometry";
end;

define inline-only C-function gdk-window-get-position
  parameter window1    :: <GdkWindow*>;
  parameter x2         :: <gint*>;
  parameter y3         :: <gint*>;
  c-name: "gdk_window_get_position";
end;

define inline-only C-function gdk-window-get-size
  parameter window1    :: <GdkWindow*>;
  parameter width2     :: <gint*>;
  parameter height3    :: <gint*>;
  c-name: "gdk_window_get_size";
end;

define inline-only C-function gdk-window-get-visual
  parameter window1    :: <GdkWindow*>;
  result value :: <GdkVisual*>;
  c-name: "gdk_window_get_visual";
end;

define inline-only C-function gdk-window-get-colormap
  parameter window1    :: <GdkWindow*>;
  result value :: <GdkColormap*>;
  c-name: "gdk_window_get_colormap";
end;

define inline-only C-function gdk-window-get-type
  parameter window1    :: <GdkWindow*>;
  result value :: <GdkWindowType>;
  c-name: "gdk_window_get_type";
end;

define inline-only C-function gdk-window-get-origin
  parameter window1    :: <GdkWindow*>;
  parameter x2         :: <gint*>;
  parameter y3         :: <gint*>;
  result value :: <gint>;
  c-name: "gdk_window_get_origin";
end;

define inline-only C-function gdk-window-get-deskrelative-origin
  parameter window1    :: <GdkWindow*>;
  parameter x2         :: <gint*>;
  parameter y3         :: <gint*>;
  result value :: <gboolean>;
  c-name: "gdk_window_get_deskrelative_origin";
end;

define inline-only C-function gdk-window-get-root-origin
  parameter window1    :: <GdkWindow*>;
  parameter x2         :: <gint*>;
  parameter y3         :: <gint*>;
  c-name: "gdk_window_get_root_origin";
end;

define inline-only C-function gdk-window-get-pointer
  parameter window1    :: <GdkWindow*>;
  parameter x2         :: <gint*>;
  parameter y3         :: <gint*>;
  parameter mask4      :: <GdkModifierType*>;
  result value :: <GdkWindow*>;
  c-name: "gdk_window_get_pointer";
end;

define inline-only C-function gdk-window-get-parent
  parameter window1    :: <GdkWindow*>;
  result value :: <GdkWindow*>;
  c-name: "gdk_window_get_parent";
end;

define inline-only C-function gdk-window-get-toplevel
  parameter window1    :: <GdkWindow*>;
  result value :: <GdkWindow*>;
  c-name: "gdk_window_get_toplevel";
end;

define inline-only C-function gdk-window-get-children
  parameter window1    :: <GdkWindow*>;
  result value :: <GList*>;
  c-name: "gdk_window_get_children";
end;

define inline-only C-function gdk-window-get-events
  parameter window1    :: <GdkWindow*>;
  result value :: <GdkEventMask>;
  c-name: "gdk_window_get_events";
end;

define inline-only C-function gdk-window-set-events
  parameter window1    :: <GdkWindow*>;
  parameter event_mask2 :: <GdkEventMask>;
  c-name: "gdk_window_set_events";
end;

define inline-only C-function gdk-window-set-icon
  parameter window1    :: <GdkWindow*>;
  parameter icon_window2 :: <GdkWindow*>;
  parameter pixmap3    :: <GdkPixmap*>;
  parameter mask4      :: <GdkBitmap*>;
  c-name: "gdk_window_set_icon";
end;

define inline-only C-function gdk-window-set-icon-name
  parameter window1    :: <GdkWindow*>;
  parameter name2      :: <gchar*>;
  c-name: "gdk_window_set_icon_name";
end;

define inline-only C-function gdk-window-set-group
  parameter window1    :: <GdkWindow*>;
  parameter leader2    :: <GdkWindow*>;
  c-name: "gdk_window_set_group";
end;

define inline-only C-function gdk-window-set-decorations
  parameter window1    :: <GdkWindow*>;
  parameter decorations2 :: <GdkWMDecoration>;
  c-name: "gdk_window_set_decorations";
end;

define inline-only C-function gdk-window-set-functions
  parameter window1    :: <GdkWindow*>;
  parameter functions2 :: <GdkWMFunction>;
  c-name: "gdk_window_set_functions";
end;

define inline-only C-function gdk-window-get-toplevels
  result value :: <GList*>;
  c-name: "gdk_window_get_toplevels";
end;

define inline-only C-function gdk-window-register-dnd
  parameter window1    :: <GdkWindow*>;
  c-name: "gdk_window_register_dnd";
end;

define inline-only C-function gdk-drawable-set-data
  parameter drawable1  :: <GdkDrawable*>;
  parameter key2       ::  /* const */ <gchar*>;
  parameter data3      :: <gpointer>;
  parameter destroy_func4 :: <GDestroyNotify>;
  c-name: "gdk_drawable_set_data";
end;

define inline-only C-function gdk-cursor-new
  parameter cursor_type1 :: <GdkCursorType>;
  result value :: <GdkCursor*>;
  c-name: "gdk_cursor_new";
end;

define inline-only C-function gdk-cursor-new-from-pixmap
  parameter source1    :: <GdkPixmap*>;
  parameter mask2      :: <GdkPixmap*>;
  parameter fg3        :: <GdkColor*>;
  parameter bg4        :: <GdkColor*>;
  parameter x5         :: <gint>;
  parameter y6         :: <gint>;
  result value :: <GdkCursor*>;
  c-name: "gdk_cursor_new_from_pixmap";
end;

define inline-only C-function gdk-cursor-destroy
  parameter cursor1    :: <GdkCursor*>;
  c-name: "gdk_cursor_destroy";
end;

define inline-only C-function gdk-gc-new
  parameter window1    :: <GdkWindow*>;
  result value :: <GdkGC*>;
  c-name: "gdk_gc_new";
end;

define inline-only C-function gdk-gc-new-with-values
  parameter window1    :: <GdkWindow*>;
  parameter values2    :: <GdkGCValues*>;
  parameter values_mask3 :: <GdkGCValuesMask>;
  result value :: <GdkGC*>;
  c-name: "gdk_gc_new_with_values";
end;

define inline-only C-function gdk-gc-ref
  parameter gc1        :: <GdkGC*>;
  result value :: <GdkGC*>;
  c-name: "gdk_gc_ref";
end;

define inline-only C-function gdk-gc-unref
  parameter gc1        :: <GdkGC*>;
  c-name: "gdk_gc_unref";
end;

define inline-only C-function gdk-gc-destroy
  parameter gc1        :: <GdkGC*>;
  c-name: "gdk_gc_destroy";
end;

define inline-only C-function gdk-gc-get-values
  parameter gc1        :: <GdkGC*>;
  parameter values2    :: <GdkGCValues*>;
  c-name: "gdk_gc_get_values";
end;

define inline-only C-function gdk-gc-set-foreground
  parameter gc1        :: <GdkGC*>;
  parameter color2     :: <GdkColor*>;
  c-name: "gdk_gc_set_foreground";
end;

define inline-only C-function gdk-gc-set-background
  parameter gc1        :: <GdkGC*>;
  parameter color2     :: <GdkColor*>;
  c-name: "gdk_gc_set_background";
end;

define inline-only C-function gdk-gc-set-font
  parameter gc1        :: <GdkGC*>;
  parameter font2      :: <GdkFont*>;
  c-name: "gdk_gc_set_font";
end;

define inline-only C-function gdk-gc-set-function
  parameter gc1        :: <GdkGC*>;
  parameter function2  :: <GdkFunction>;
  c-name: "gdk_gc_set_function";
end;

define inline-only C-function gdk-gc-set-fill
  parameter gc1        :: <GdkGC*>;
  parameter fill2      :: <GdkFill>;
  c-name: "gdk_gc_set_fill";
end;

define inline-only C-function gdk-gc-set-tile
  parameter gc1        :: <GdkGC*>;
  parameter tile2      :: <GdkPixmap*>;
  c-name: "gdk_gc_set_tile";
end;

define inline-only C-function gdk-gc-set-stipple
  parameter gc1        :: <GdkGC*>;
  parameter stipple2   :: <GdkPixmap*>;
  c-name: "gdk_gc_set_stipple";
end;

define inline-only C-function gdk-gc-set-ts-origin
  parameter gc1        :: <GdkGC*>;
  parameter x2         :: <gint>;
  parameter y3         :: <gint>;
  c-name: "gdk_gc_set_ts_origin";
end;

define inline-only C-function gdk-gc-set-clip-origin
  parameter gc1        :: <GdkGC*>;
  parameter x2         :: <gint>;
  parameter y3         :: <gint>;
  c-name: "gdk_gc_set_clip_origin";
end;

define inline-only C-function gdk-gc-set-clip-mask
  parameter gc1        :: <GdkGC*>;
  parameter mask2      :: <GdkBitmap*>;
  c-name: "gdk_gc_set_clip_mask";
end;

define inline-only C-function gdk-gc-set-clip-rectangle
  parameter gc1        :: <GdkGC*>;
  parameter rectangle2 :: <GdkRectangle*>;
  c-name: "gdk_gc_set_clip_rectangle";
end;

define inline-only C-function gdk-gc-set-clip-region
  parameter gc1        :: <GdkGC*>;
  parameter region2    :: <GdkRegion*>;
  c-name: "gdk_gc_set_clip_region";
end;

define inline-only C-function gdk-gc-set-subwindow
  parameter gc1        :: <GdkGC*>;
  parameter mode2      :: <GdkSubwindowMode>;
  c-name: "gdk_gc_set_subwindow";
end;

define inline-only C-function gdk-gc-set-exposures
  parameter gc1        :: <GdkGC*>;
  parameter exposures2 :: <gint>;
  c-name: "gdk_gc_set_exposures";
end;

define inline-only C-function gdk-gc-set-line-attributes
  parameter gc1        :: <GdkGC*>;
  parameter line_width2 :: <gint>;
  parameter line_style3 :: <GdkLineStyle>;
  parameter cap_style4 :: <GdkCapStyle>;
  parameter join_style5 :: <GdkJoinStyle>;
  c-name: "gdk_gc_set_line_attributes";
end;

define inline-only C-function gdk-gc-set-dashes
  parameter gc1        :: <GdkGC*>;
  parameter dash_offset2 :: <gint>;
  parameter dash_list3 :: <gchar*>;
  parameter n4         :: <gint>;
  c-name: "gdk_gc_set_dashes";
end;

define inline-only C-function gdk-gc-copy
  parameter dst_gc1    :: <GdkGC*>;
  parameter src_gc2    :: <GdkGC*>;
  c-name: "gdk_gc_copy";
end;

define inline-only C-function gdk-pixmap-new
  parameter window1    :: <GdkWindow*>;
  parameter width2     :: <gint>;
  parameter height3    :: <gint>;
  parameter depth4     :: <gint>;
  result value :: <GdkPixmap*>;
  c-name: "gdk_pixmap_new";
end;

define inline-only C-function gdk-pixmap-create-on-shared-image
  parameter image_return1 :: <GdkImage**>;
  parameter window2    :: <GdkWindow*>;
  parameter visual3    :: <GdkVisual*>;
  parameter width4     :: <gint>;
  parameter height5    :: <gint>;
  parameter depth6     :: <gint>;
  result value :: <GdkPixmap*>;
  c-name: "gdk_pixmap_create_on_shared_image";
end;

define inline-only C-function gdk-bitmap-create-from-data
  parameter window1    :: <GdkWindow*>;
  parameter data2      ::  /* const */ <gchar*>;
  parameter width3     :: <gint>;
  parameter height4    :: <gint>;
  result value :: <GdkBitmap*>;
  c-name: "gdk_bitmap_create_from_data";
end;

define inline-only C-function gdk-pixmap-create-from-data
  parameter window1    :: <GdkWindow*>;
  parameter data2      ::  /* const */ <gchar*>;
  parameter width3     :: <gint>;
  parameter height4    :: <gint>;
  parameter depth5     :: <gint>;
  parameter fg6        :: <GdkColor*>;
  parameter bg7        :: <GdkColor*>;
  result value :: <GdkPixmap*>;
  c-name: "gdk_pixmap_create_from_data";
end;

define inline-only C-function gdk-pixmap-create-from-xpm
  parameter window1    :: <GdkWindow*>;
  parameter mask2      :: <GdkBitmap**>;
  parameter transparent_color3 :: <GdkColor*>;
  parameter filename4  ::  /* const */ <gchar*>;
  result value :: <GdkPixmap*>;
  c-name: "gdk_pixmap_create_from_xpm";
end;

define inline-only C-function gdk-pixmap-colormap-create-from-xpm
  parameter window1    :: <GdkWindow*>;
  parameter colormap2  :: <GdkColormap*>;
  parameter mask3      :: <GdkBitmap**>;
  parameter transparent_color4 :: <GdkColor*>;
  parameter filename5  ::  /* const */ <gchar*>;
  result value :: <GdkPixmap*>;
  c-name: "gdk_pixmap_colormap_create_from_xpm";
end;

define inline-only C-function gdk-pixmap-create-from-xpm-d
  parameter window1    :: <GdkWindow*>;
  parameter mask2      :: <GdkBitmap**>;
  parameter transparent_color3 :: <GdkColor*>;
  parameter data4      :: <gchar**>;
  result value :: <GdkPixmap*>;
  c-name: "gdk_pixmap_create_from_xpm_d";
end;

define inline-only C-function gdk-pixmap-colormap-create-from-xpm-d
  parameter window1    :: <GdkWindow*>;
  parameter colormap2  :: <GdkColormap*>;
  parameter mask3      :: <GdkBitmap**>;
  parameter transparent_color4 :: <GdkColor*>;
  parameter data5      :: <gchar**>;
  result value :: <GdkPixmap*>;
  c-name: "gdk_pixmap_colormap_create_from_xpm_d";
end;

define inline-only C-function gdk-pixmap-ref
  parameter pixmap1    :: <GdkPixmap*>;
  result value :: <GdkPixmap*>;
  c-name: "gdk_pixmap_ref";
end;

define inline-only C-function gdk-pixmap-unref
  parameter pixmap1    :: <GdkPixmap*>;
  c-name: "gdk_pixmap_unref";
end;

define inline-only C-function gdk-bitmap-ref
  parameter pixmap1    :: <GdkBitmap*>;
  result value :: <GdkBitmap*>;
  c-name: "gdk_bitmap_ref";
end;

define inline-only C-function gdk-bitmap-unref
  parameter pixmap1    :: <GdkBitmap*>;
  c-name: "gdk_bitmap_unref";
end;

define inline-only C-function gdk-image-new-bitmap
  parameter visual1    :: <GdkVisual*>;
  parameter data2      :: <gpointer>;
  parameter width3     :: <gint>;
  parameter height4    :: <gint>;
  result value :: <GdkImage*>;
  c-name: "gdk_image_new_bitmap";
end;

define inline-only C-function gdk-image-new
  parameter type1      :: <GdkImageType>;
  parameter visual2    :: <GdkVisual*>;
  parameter width3     :: <gint>;
  parameter height4    :: <gint>;
  result value :: <GdkImage*>;
  c-name: "gdk_image_new";
end;

define inline-only C-function gdk-image-bitmap-new
  parameter type1      :: <GdkImageType>;
  parameter visual2    :: <GdkVisual*>;
  parameter width3     :: <gint>;
  parameter height4    :: <gint>;
  result value :: <GdkImage*>;
  c-name: "gdk_image_bitmap_new";
end;

define inline-only C-function gdk-image-get
  parameter window1    :: <GdkWindow*>;
  parameter x2         :: <gint>;
  parameter y3         :: <gint>;
  parameter width4     :: <gint>;
  parameter height5    :: <gint>;
  result value :: <GdkImage*>;
  c-name: "gdk_image_get";
end;

define inline-only C-function gdk-image-put-pixel
  parameter image1     :: <GdkImage*>;
  parameter x2         :: <gint>;
  parameter y3         :: <gint>;
  parameter pixel4     :: <guint32>;
  c-name: "gdk_image_put_pixel";
end;

define inline-only C-function gdk-image-get-pixel
  parameter image1     :: <GdkImage*>;
  parameter x2         :: <gint>;
  parameter y3         :: <gint>;
  result value :: <guint32>;
  c-name: "gdk_image_get_pixel";
end;

define inline-only C-function gdk-image-destroy
  parameter image1     :: <GdkImage*>;
  c-name: "gdk_image_destroy";
end;

define inline-only C-function gdk-colormap-new
  parameter visual1    :: <GdkVisual*>;
  parameter allocate2  :: <gint>;
  result value :: <GdkColormap*>;
  c-name: "gdk_colormap_new";
end;

define inline-only C-function gdk-colormap-ref
  parameter cmap1      :: <GdkColormap*>;
  result value :: <GdkColormap*>;
  c-name: "gdk_colormap_ref";
end;

define inline-only C-function gdk-colormap-unref
  parameter cmap1      :: <GdkColormap*>;
  c-name: "gdk_colormap_unref";
end;

define inline-only C-function gdk-colormap-get-system
  result value :: <GdkColormap*>;
  c-name: "gdk_colormap_get_system";
end;

define inline-only C-function gdk-colormap-get-system-size
  result value :: <gint>;
  c-name: "gdk_colormap_get_system_size";
end;

define inline-only C-function gdk-colormap-change
  parameter colormap1  :: <GdkColormap*>;
  parameter ncolors2   :: <gint>;
  c-name: "gdk_colormap_change";
end;

define inline-only C-function gdk-colormap-alloc-colors
  parameter colormap1  :: <GdkColormap*>;
  parameter colors2    :: <GdkColor*>;
  parameter ncolors3   :: <gint>;
  parameter writeable4 :: <gboolean>;
  parameter best_match5 :: <gboolean>;
  parameter success6   :: <gboolean*>;
  result value :: <gint>;
  c-name: "gdk_colormap_alloc_colors";
end;

define inline-only C-function gdk-colormap-alloc-color
  parameter colormap1  :: <GdkColormap*>;
  parameter color2     :: <GdkColor*>;
  parameter writeable3 :: <gboolean>;
  parameter best_match4 :: <gboolean>;
  result value :: <gboolean>;
  c-name: "gdk_colormap_alloc_color";
end;

define inline-only C-function gdk-colormap-free-colors
  parameter colormap1  :: <GdkColormap*>;
  parameter colors2    :: <GdkColor*>;
  parameter ncolors3   :: <gint>;
  c-name: "gdk_colormap_free_colors";
end;

define inline-only C-function gdk-colormap-get-visual
  parameter colormap1  :: <GdkColormap*>;
  result value :: <GdkVisual*>;
  c-name: "gdk_colormap_get_visual";
end;

define inline-only C-function gdk-color-copy
  parameter color1     :: <GdkColor*>;
  result value :: <GdkColor*>;
  c-name: "gdk_color_copy";
end;

define inline-only C-function gdk-color-free
  parameter color1     :: <GdkColor*>;
  c-name: "gdk_color_free";
end;

define inline-only C-function gdk-color-parse
  parameter spec1      ::  /* const */ <gchar*>;
  parameter color2     :: <GdkColor*>;
  result value :: <gint>;
  c-name: "gdk_color_parse";
end;

define inline-only C-function gdk-color-hash
  parameter colora1    ::  /* const */ <GdkColor*>;
  result value :: <guint>;
  c-name: "gdk_color_hash";
end;

define inline-only C-function gdk-color-equal
  parameter colora1    ::  /* const */ <GdkColor*>;
  parameter colorb2    ::  /* const */ <GdkColor*>;
  result value :: <gint>;
  c-name: "gdk_color_equal";
end;

define inline-only C-function gdk-colors-store
  parameter colormap1  :: <GdkColormap*>;
  parameter colors2    :: <GdkColor*>;
  parameter ncolors3   :: <gint>;
  c-name: "gdk_colors_store";
end;

define inline-only C-function gdk-colors-alloc
  parameter colormap1  :: <GdkColormap*>;
  parameter contiguous2 :: <gint>;
  parameter planes3    :: <gulong*>;
  parameter nplanes4   :: <gint>;
  parameter pixels5    :: <gulong*>;
  parameter npixels6   :: <gint>;
  result value :: <gint>;
  c-name: "gdk_colors_alloc";
end;

define inline-only C-function gdk-colors-free
  parameter colormap1  :: <GdkColormap*>;
  parameter pixels2    :: <gulong*>;
  parameter npixels3   :: <gint>;
  parameter planes4    :: <gulong>;
  c-name: "gdk_colors_free";
end;

define inline-only C-function gdk-color-white
  parameter colormap1  :: <GdkColormap*>;
  parameter color2     :: <GdkColor*>;
  result value :: <gint>;
  c-name: "gdk_color_white";
end;

define inline-only C-function gdk-color-black
  parameter colormap1  :: <GdkColormap*>;
  parameter color2     :: <GdkColor*>;
  result value :: <gint>;
  c-name: "gdk_color_black";
end;

define inline-only C-function gdk-color-alloc
  parameter colormap1  :: <GdkColormap*>;
  parameter color2     :: <GdkColor*>;
  result value :: <gint>;
  c-name: "gdk_color_alloc";
end;

define inline-only C-function gdk-color-change
  parameter colormap1  :: <GdkColormap*>;
  parameter color2     :: <GdkColor*>;
  result value :: <gint>;
  c-name: "gdk_color_change";
end;

define inline-only C-function gdk-font-load
  parameter font_name1 ::  /* const */ <gchar*>;
  result value :: <GdkFont*>;
  c-name: "gdk_font_load";
end;

define inline-only C-function gdk-fontset-load
  parameter fontset_name1 :: <gchar*>;
  result value :: <GdkFont*>;
  c-name: "gdk_fontset_load";
end;

define inline-only C-function gdk-font-ref
  parameter font1      :: <GdkFont*>;
  result value :: <GdkFont*>;
  c-name: "gdk_font_ref";
end;

define inline-only C-function gdk-font-unref
  parameter font1      :: <GdkFont*>;
  c-name: "gdk_font_unref";
end;

define inline-only C-function gdk-font-id
  parameter font1      ::  /* const */ <GdkFont*>;
  result value :: <gint>;
  c-name: "gdk_font_id";
end;

define inline-only C-function gdk-font-equal
  parameter fonta1     ::  /* const */ <GdkFont*>;
  parameter fontb2     ::  /* const */ <GdkFont*>;
  result value :: <gint>;
  c-name: "gdk_font_equal";
end;

define inline-only C-function gdk-string-width
  parameter font1      :: <GdkFont*>;
  parameter string2    ::  /* const */ <gchar*>;
  result value :: <gint>;
  c-name: "gdk_string_width";
end;

define inline-only C-function gdk-text-width
  parameter font1      :: <GdkFont*>;
  parameter text2      ::  /* const */ <gchar*>;
  parameter text_length3 :: <gint>;
  result value :: <gint>;
  c-name: "gdk_text_width";
end;

define inline-only C-function gdk-text-width-wc
  parameter font1      :: <GdkFont*>;
  parameter text2      ::  /* const */ <GdkWChar*>;
  parameter text_length3 :: <gint>;
  result value :: <gint>;
  c-name: "gdk_text_width_wc";
end;

define inline-only C-function gdk-char-width
  parameter font1      :: <GdkFont*>;
  parameter character2 :: <gchar>;
  result value :: <gint>;
  c-name: "gdk_char_width";
end;

define inline-only C-function gdk-char-width-wc
  parameter font1      :: <GdkFont*>;
  parameter character2 :: <GdkWChar>;
  result value :: <gint>;
  c-name: "gdk_char_width_wc";
end;

define inline-only C-function gdk-string-measure
  parameter font1      :: <GdkFont*>;
  parameter string2    ::  /* const */ <gchar*>;
  result value :: <gint>;
  c-name: "gdk_string_measure";
end;

define inline-only C-function gdk-text-measure
  parameter font1      :: <GdkFont*>;
  parameter text2      ::  /* const */ <gchar*>;
  parameter text_length3 :: <gint>;
  result value :: <gint>;
  c-name: "gdk_text_measure";
end;

define inline-only C-function gdk-char-measure
  parameter font1      :: <GdkFont*>;
  parameter character2 :: <gchar>;
  result value :: <gint>;
  c-name: "gdk_char_measure";
end;

define inline-only C-function gdk-string-height
  parameter font1      :: <GdkFont*>;
  parameter string2    ::  /* const */ <gchar*>;
  result value :: <gint>;
  c-name: "gdk_string_height";
end;

define inline-only C-function gdk-text-height
  parameter font1      :: <GdkFont*>;
  parameter text2      ::  /* const */ <gchar*>;
  parameter text_length3 :: <gint>;
  result value :: <gint>;
  c-name: "gdk_text_height";
end;

define inline-only C-function gdk-char-height
  parameter font1      :: <GdkFont*>;
  parameter character2 :: <gchar>;
  result value :: <gint>;
  c-name: "gdk_char_height";
end;

define inline-only C-function gdk-text-extents
  parameter font1      :: <GdkFont*>;
  parameter text2      ::  /* const */ <gchar*>;
  parameter text_length3 :: <gint>;
  parameter lbearing4  :: <gint*>;
  parameter rbearing5  :: <gint*>;
  parameter width6     :: <gint*>;
  parameter ascent7    :: <gint*>;
  parameter descent8   :: <gint*>;
  c-name: "gdk_text_extents";
end;

define inline-only C-function gdk-text-extents-wc
  parameter font1      :: <GdkFont*>;
  parameter text2      ::  /* const */ <GdkWChar*>;
  parameter text_length3 :: <gint>;
  parameter lbearing4  :: <gint*>;
  parameter rbearing5  :: <gint*>;
  parameter width6     :: <gint*>;
  parameter ascent7    :: <gint*>;
  parameter descent8   :: <gint*>;
  c-name: "gdk_text_extents_wc";
end;

define inline-only C-function gdk-string-extents
  parameter font1      :: <GdkFont*>;
  parameter string2    ::  /* const */ <gchar*>;
  parameter lbearing3  :: <gint*>;
  parameter rbearing4  :: <gint*>;
  parameter width5     :: <gint*>;
  parameter ascent6    :: <gint*>;
  parameter descent7   :: <gint*>;
  c-name: "gdk_string_extents";
end;

define inline-only C-function gdk-draw-point
  parameter drawable1  :: <GdkDrawable*>;
  parameter gc2        :: <GdkGC*>;
  parameter x3         :: <gint>;
  parameter y4         :: <gint>;
  c-name: "gdk_draw_point";
end;

define inline-only C-function gdk-draw-line
  parameter drawable1  :: <GdkDrawable*>;
  parameter gc2        :: <GdkGC*>;
  parameter x13        :: <gint>;
  parameter y14        :: <gint>;
  parameter x25        :: <gint>;
  parameter y26        :: <gint>;
  c-name: "gdk_draw_line";
end;

define inline-only C-function gdk-draw-rectangle
  parameter drawable1  :: <GdkDrawable*>;
  parameter gc2        :: <GdkGC*>;
  parameter filled3    :: <gint>;
  parameter x4         :: <gint>;
  parameter y5         :: <gint>;
  parameter width6     :: <gint>;
  parameter height7    :: <gint>;
  c-name: "gdk_draw_rectangle";
end;

define inline-only C-function gdk-draw-arc
  parameter drawable1  :: <GdkDrawable*>;
  parameter gc2        :: <GdkGC*>;
  parameter filled3    :: <gint>;
  parameter x4         :: <gint>;
  parameter y5         :: <gint>;
  parameter width6     :: <gint>;
  parameter height7    :: <gint>;
  parameter angle18    :: <gint>;
  parameter angle29    :: <gint>;
  c-name: "gdk_draw_arc";
end;

define inline-only C-function gdk-draw-polygon
  parameter drawable1  :: <GdkDrawable*>;
  parameter gc2        :: <GdkGC*>;
  parameter filled3    :: <gint>;
  parameter points4    :: <GdkPoint*>;
  parameter npoints5   :: <gint>;
  c-name: "gdk_draw_polygon";
end;

define inline-only C-function gdk-draw-string
  parameter drawable1  :: <GdkDrawable*>;
  parameter font2      :: <GdkFont*>;
  parameter gc3        :: <GdkGC*>;
  parameter x4         :: <gint>;
  parameter y5         :: <gint>;
  parameter string6    ::  /* const */ <gchar*>;
  c-name: "gdk_draw_string";
end;

define inline-only C-function gdk-draw-text
  parameter drawable1  :: <GdkDrawable*>;
  parameter font2      :: <GdkFont*>;
  parameter gc3        :: <GdkGC*>;
  parameter x4         :: <gint>;
  parameter y5         :: <gint>;
  parameter text6      ::  /* const */ <gchar*>;
  parameter text_length7 :: <gint>;
  c-name: "gdk_draw_text";
end;

define inline-only C-function gdk-draw-text-wc
  parameter drawable1  :: <GdkDrawable*>;
  parameter font2      :: <GdkFont*>;
  parameter gc3        :: <GdkGC*>;
  parameter x4         :: <gint>;
  parameter y5         :: <gint>;
  parameter text6      ::  /* const */ <GdkWChar*>;
  parameter text_length7 :: <gint>;
  c-name: "gdk_draw_text_wc";
end;

define inline-only C-function gdk-draw-pixmap
  parameter drawable1  :: <GdkDrawable*>;
  parameter gc2        :: <GdkGC*>;
  parameter src3       :: <GdkDrawable*>;
  parameter xsrc4      :: <gint>;
  parameter ysrc5      :: <gint>;
  parameter xdest6     :: <gint>;
  parameter ydest7     :: <gint>;
  parameter width8     :: <gint>;
  parameter height9    :: <gint>;
  c-name: "gdk_draw_pixmap";
end;

define inline-only C-function gdk-draw-bitmap
  parameter drawable1  :: <GdkDrawable*>;
  parameter gc2        :: <GdkGC*>;
  parameter src3       :: <GdkDrawable*>;
  parameter xsrc4      :: <gint>;
  parameter ysrc5      :: <gint>;
  parameter xdest6     :: <gint>;
  parameter ydest7     :: <gint>;
  parameter width8     :: <gint>;
  parameter height9    :: <gint>;
  c-name: "gdk_draw_bitmap";
end;

define inline-only C-function gdk-draw-image
  parameter drawable1  :: <GdkDrawable*>;
  parameter gc2        :: <GdkGC*>;
  parameter image3     :: <GdkImage*>;
  parameter xsrc4      :: <gint>;
  parameter ysrc5      :: <gint>;
  parameter xdest6     :: <gint>;
  parameter ydest7     :: <gint>;
  parameter width8     :: <gint>;
  parameter height9    :: <gint>;
  c-name: "gdk_draw_image";
end;

define inline-only C-function gdk-draw-points
  parameter drawable1  :: <GdkDrawable*>;
  parameter gc2        :: <GdkGC*>;
  parameter points3    :: <GdkPoint*>;
  parameter npoints4   :: <gint>;
  c-name: "gdk_draw_points";
end;

define inline-only C-function gdk-draw-segments
  parameter drawable1  :: <GdkDrawable*>;
  parameter gc2        :: <GdkGC*>;
  parameter segs3      :: <GdkSegment*>;
  parameter nsegs4     :: <gint>;
  c-name: "gdk_draw_segments";
end;

define inline-only C-function gdk-draw-lines
  parameter drawable1  :: <GdkDrawable*>;
  parameter gc2        :: <GdkGC*>;
  parameter points3    :: <GdkPoint*>;
  parameter npoints4   :: <gint>;
  c-name: "gdk_draw_lines";
end;

define inline-only C-function gdk-selection-owner-set
  parameter owner1     :: <GdkWindow*>;
  parameter selection2 :: <GdkAtom>;
  parameter time3      :: <guint32>;
  parameter send_event4 :: <gint>;
  result value :: <gint>;
  c-name: "gdk_selection_owner_set";
end;

define inline-only C-function gdk-selection-owner-get
  parameter selection1 :: <GdkAtom>;
  result value :: <GdkWindow*>;
  c-name: "gdk_selection_owner_get";
end;

define inline-only C-function gdk-selection-convert
  parameter requestor1 :: <GdkWindow*>;
  parameter selection2 :: <GdkAtom>;
  parameter target3    :: <GdkAtom>;
  parameter time4      :: <guint32>;
  c-name: "gdk_selection_convert";
end;

define inline-only C-function gdk-selection-property-get
  parameter requestor1 :: <GdkWindow*>;
  parameter data2      :: <guchar**>;
  parameter prop_type3 :: <GdkAtom*>;
  parameter prop_format4 :: <gint*>;
  result value :: <gint>;
  c-name: "gdk_selection_property_get";
end;

define inline-only C-function gdk-selection-send-notify
  parameter requestor1 :: <guint32>;
  parameter selection2 :: <GdkAtom>;
  parameter target3    :: <GdkAtom>;
  parameter property4  :: <GdkAtom>;
  parameter time5      :: <guint32>;
  c-name: "gdk_selection_send_notify";
end;

define inline-only C-function gdk-text-property-to-text-list
  parameter encoding1  :: <GdkAtom>;
  parameter format2    :: <gint>;
  parameter text3      :: <guchar*>;
  parameter length4    :: <gint>;
  parameter list5      :: <gchar***>;
  result value :: <gint>;
  c-name: "gdk_text_property_to_text_list";
end;

define inline-only C-function gdk-free-text-list
  parameter list1      :: <gchar**>;
  c-name: "gdk_free_text_list";
end;

define inline-only C-function gdk-string-to-compound-text
  parameter str1       :: <gchar*>;
  parameter encoding2  :: <GdkAtom*>;
  parameter format3    :: <gint*>;
  parameter ctext4     :: <guchar**>;
  parameter length5    :: <gint*>;
  result value :: <gint>;
  c-name: "gdk_string_to_compound_text";
end;

define inline-only C-function gdk-free-compound-text
  parameter ctext1     :: <guchar*>;
  c-name: "gdk_free_compound_text";
end;

define inline-only C-function gdk-atom-intern
  parameter atom_name1 ::  /* const */ <gchar*>;
  parameter only_if_exists2 :: <gint>;
  result value :: <GdkAtom>;
  c-name: "gdk_atom_intern";
end;

define inline-only C-function gdk-atom-name
  parameter atom1      :: <GdkAtom>;
  result value :: <gchar*>;
  c-name: "gdk_atom_name";
end;

define inline-only C-function gdk-property-get
  parameter window1    :: <GdkWindow*>;
  parameter property2  :: <GdkAtom>;
  parameter type3      :: <GdkAtom>;
  parameter offset4    :: <gulong>;
  parameter length5    :: <gulong>;
  parameter pdelete6   :: <gint>;
  parameter actual_property_type7 :: <GdkAtom*>;
  parameter actual_format8 :: <gint*>;
  parameter actual_length9 :: <gint*>;
  parameter data10     :: <guchar**>;
  result value :: <gint>;
  c-name: "gdk_property_get";
end;

define inline-only C-function gdk-property-change
  parameter window1    :: <GdkWindow*>;
  parameter property2  :: <GdkAtom>;
  parameter type3      :: <GdkAtom>;
  parameter format4    :: <gint>;
  parameter mode5      :: <GdkPropMode>;
  parameter data6      :: <guchar*>;
  parameter nelements7 :: <gint>;
  c-name: "gdk_property_change";
end;

define inline-only C-function gdk-property-delete
  parameter window1    :: <GdkWindow*>;
  parameter property2  :: <GdkAtom>;
  c-name: "gdk_property_delete";
end;

define inline-only C-function gdk-rectangle-intersect
  parameter src11      :: <GdkRectangle*>;
  parameter src22      :: <GdkRectangle*>;
  parameter dest3      :: <GdkRectangle*>;
  result value :: <gint>;
  c-name: "gdk_rectangle_intersect";
end;

define inline-only C-function gdk-rectangle-union
  parameter src11      :: <GdkRectangle*>;
  parameter src22      :: <GdkRectangle*>;
  parameter dest3      :: <GdkRectangle*>;
  c-name: "gdk_rectangle_union";
end;

define inline-only C-function gdk-input-init
  c-name: "gdk_input_init";
end;

define inline-only C-function gdk-input-exit
  c-name: "gdk_input_exit";
end;

define inline-only C-function gdk-input-list-devices
  result value :: <GList*>;
  c-name: "gdk_input_list_devices";
end;

define inline-only C-function gdk-input-set-extension-events
  parameter window1    :: <GdkWindow*>;
  parameter mask2      :: <gint>;
  parameter mode3      :: <GdkExtensionMode>;
  c-name: "gdk_input_set_extension_events";
end;

define inline-only C-function gdk-input-set-source
  parameter deviceid1  :: <guint32>;
  parameter source2    :: <GdkInputSource>;
  c-name: "gdk_input_set_source";
end;

define inline-only C-function gdk-input-set-mode
  parameter deviceid1  :: <guint32>;
  parameter mode2      :: <GdkInputMode>;
  result value :: <gint>;
  c-name: "gdk_input_set_mode";
end;

define inline-only C-function gdk-input-set-axes
  parameter deviceid1  :: <guint32>;
  parameter axes2      :: <GdkAxisUse*>;
  c-name: "gdk_input_set_axes";
end;

define inline-only C-function gdk-input-set-key
  parameter deviceid1  :: <guint32>;
  parameter index2     :: <guint>;
  parameter keyval3    :: <guint>;
  parameter modifiers4 :: <GdkModifierType>;
  c-name: "gdk_input_set_key";
end;

define inline-only C-function gdk-input-window-get-pointer
  parameter window1    :: <GdkWindow*>;
  parameter deviceid2  :: <guint32>;
  parameter x3         :: <gdouble*>;
  parameter y4         :: <gdouble*>;
  parameter pressure5  :: <gdouble*>;
  parameter xtilt6     :: <gdouble*>;
  parameter ytilt7     :: <gdouble*>;
  parameter mask8      :: <GdkModifierType*>;
  c-name: "gdk_input_window_get_pointer";
end;

define inline-only C-function gdk-input-motion-events
  parameter window1    :: <GdkWindow*>;
  parameter deviceid2  :: <guint32>;
  parameter start3     :: <guint32>;
  parameter stop4      :: <guint32>;
  parameter nevents_return5 :: <gint*>;
  result value :: <GdkTimeCoord*>;
  c-name: "gdk_input_motion_events";
end;

define inline-only C-function gdk-im-ready
  result value :: <gint>;
  c-name: "gdk_im_ready";
end;

define inline-only C-function gdk-im-begin
  parameter ic1        :: <GdkIC*>;
  parameter window2    :: <GdkWindow*>;
  c-name: "gdk_im_begin";
end;

define inline-only C-function gdk-im-end
  c-name: "gdk_im_end";
end;

define inline-only C-function gdk-im-decide-style
  parameter supported_style1 :: <GdkIMStyle>;
  result value :: <GdkIMStyle>;
  c-name: "gdk_im_decide_style";
end;

define inline-only C-function gdk-im-set-best-style
  parameter best_allowed_style1 :: <GdkIMStyle>;
  result value :: <GdkIMStyle>;
  c-name: "gdk_im_set_best_style";
end;

define inline-only C-function gdk-ic-new
  parameter attr1      :: <GdkICAttr*>;
  parameter mask2      :: <GdkICAttributesType>;
  result value :: <GdkIC*>;
  c-name: "gdk_ic_new";
end;

define inline-only C-function gdk-ic-destroy
  parameter ic1        :: <GdkIC*>;
  c-name: "gdk_ic_destroy";
end;

define inline-only C-function gdk-ic-get-style
  parameter ic1        :: <GdkIC*>;
  result value :: <GdkIMStyle>;
  c-name: "gdk_ic_get_style";
end;

define inline-only C-function gdk-ic-get-events
  parameter ic1        :: <GdkIC*>;
  result value :: <GdkEventMask>;
  c-name: "gdk_ic_get_events";
end;

define inline-only C-function gdk-ic-attr-new
  result value :: <GdkICAttr*>;
  c-name: "gdk_ic_attr_new";
end;

define inline-only C-function gdk-ic-attr-destroy
  parameter attr1      :: <GdkICAttr*>;
  c-name: "gdk_ic_attr_destroy";
end;

define inline-only C-function gdk-ic-set-attr
  parameter ic1        :: <GdkIC*>;
  parameter attr2      :: <GdkICAttr*>;
  parameter mask3      :: <GdkICAttributesType>;
  result value :: <GdkICAttributesType>;
  c-name: "gdk_ic_set_attr";
end;

define inline-only C-function gdk-ic-get-attr
  parameter ic1        :: <GdkIC*>;
  parameter attr2      :: <GdkICAttr*>;
  parameter mask3      :: <GdkICAttributesType>;
  result value :: <GdkICAttributesType>;
  c-name: "gdk_ic_get_attr";
end;

define inline-only C-function gdk-wcstombs
  parameter src1       ::  /* const */ <GdkWChar*>;
  result value :: <gchar*>;
  c-name: "gdk_wcstombs";
end;

define inline-only C-function gdk-mbstowcs
  parameter dest1      :: <GdkWChar*>;
  parameter src2       ::  /* const */ <gchar*>;
  parameter dest_max3  :: <gint>;
  result value :: <gint>;
  c-name: "gdk_mbstowcs";
end;

define inline-only C-function gdk-color-context-new
  parameter visual1    :: <GdkVisual*>;
  parameter colormap2  :: <GdkColormap*>;
  result value :: <GdkColorContext*>;
  c-name: "gdk_color_context_new";
end;

define inline-only C-function gdk-color-context-new-mono
  parameter visual1    :: <GdkVisual*>;
  parameter colormap2  :: <GdkColormap*>;
  result value :: <GdkColorContext*>;
  c-name: "gdk_color_context_new_mono";
end;

define inline-only C-function gdk-color-context-free
  parameter cc1        :: <GdkColorContext*>;
  c-name: "gdk_color_context_free";
end;

define inline-only C-function gdk-color-context-get-pixel
  parameter cc1        :: <GdkColorContext*>;
  parameter red2       :: <gushort>;
  parameter green3     :: <gushort>;
  parameter blue4      :: <gushort>;
  parameter failed5    :: <gint*>;
  result value :: <gulong>;
  c-name: "gdk_color_context_get_pixel";
end;

define inline-only C-function gdk-color-context-get-pixels
  parameter cc1        :: <GdkColorContext*>;
  parameter reds2      :: <gushort*>;
  parameter greens3    :: <gushort*>;
  parameter blues4     :: <gushort*>;
  parameter ncolors5   :: <gint>;
  parameter colors6    :: <gulong*>;
  parameter nallocated7 :: <gint*>;
  c-name: "gdk_color_context_get_pixels";
end;

define inline-only C-function gdk-color-context-get-pixels-incremental
  parameter cc1        :: <GdkColorContext*>;
  parameter reds2      :: <gushort*>;
  parameter greens3    :: <gushort*>;
  parameter blues4     :: <gushort*>;
  parameter ncolors5   :: <gint>;
  parameter used6      :: <gint*>;
  parameter colors7    :: <gulong*>;
  parameter nallocated8 :: <gint*>;
  c-name: "gdk_color_context_get_pixels_incremental";
end;

define inline-only C-function gdk-color-context-query-color
  parameter cc1        :: <GdkColorContext*>;
  parameter color2     :: <GdkColor*>;
  result value :: <gint>;
  c-name: "gdk_color_context_query_color";
end;

define inline-only C-function gdk-color-context-query-colors
  parameter cc1        :: <GdkColorContext*>;
  parameter colors2    :: <GdkColor*>;
  parameter num_colors3 :: <gint>;
  result value :: <gint>;
  c-name: "gdk_color_context_query_colors";
end;

define inline-only C-function gdk-color-context-add-palette
  parameter cc1        :: <GdkColorContext*>;
  parameter palette2   :: <GdkColor*>;
  parameter num_palette3 :: <gint>;
  result value :: <gint>;
  c-name: "gdk_color_context_add_palette";
end;

define inline-only C-function gdk-color-context-init-dither
  parameter cc1        :: <GdkColorContext*>;
  c-name: "gdk_color_context_init_dither";
end;

define inline-only C-function gdk-color-context-free-dither
  parameter cc1        :: <GdkColorContext*>;
  c-name: "gdk_color_context_free_dither";
end;

define inline-only C-function gdk-color-context-get-pixel-from-palette
  parameter cc1        :: <GdkColorContext*>;
  parameter red2       :: <gushort*>;
  parameter green3     :: <gushort*>;
  parameter blue4      :: <gushort*>;
  parameter failed5    :: <gint*>;
  result value :: <gulong>;
  c-name: "gdk_color_context_get_pixel_from_palette";
end;

define inline-only C-function gdk-color-context-get-index-from-palette
  parameter cc1        :: <GdkColorContext*>;
  parameter red2       :: <gint*>;
  parameter green3     :: <gint*>;
  parameter blue4      :: <gint*>;
  parameter failed5    :: <gint*>;
  result value :: <guchar>;
  c-name: "gdk_color_context_get_index_from_palette";
end;

define inline-only C-function gdk-region-new
  result value :: <GdkRegion*>;
  c-name: "gdk_region_new";
end;

define inline-only C-function gdk-region-destroy
  parameter region1    :: <GdkRegion*>;
  c-name: "gdk_region_destroy";
end;

define inline-only C-function gdk-region-get-clipbox
  parameter region1    :: <GdkRegion*>;
  parameter rectangle2 :: <GdkRectangle*>;
  c-name: "gdk_region_get_clipbox";
end;

define inline-only C-function gdk-region-empty
  parameter region1    :: <GdkRegion*>;
  result value :: <gboolean>;
  c-name: "gdk_region_empty";
end;

define inline-only C-function gdk-region-equal
  parameter region11   :: <GdkRegion*>;
  parameter region22   :: <GdkRegion*>;
  result value :: <gboolean>;
  c-name: "gdk_region_equal";
end;

define inline-only C-function gdk-region-point-in
  parameter region1    :: <GdkRegion*>;
  parameter x2         :: <C-int>;
  parameter y3         :: <C-int>;
  result value :: <gboolean>;
  c-name: "gdk_region_point_in";
end;

define inline-only C-function gdk-region-rect-in
  parameter region1    :: <GdkRegion*>;
  parameter rect2      :: <GdkRectangle*>;
  result value :: <GdkOverlapType>;
  c-name: "gdk_region_rect_in";
end;

define inline-only C-function gdk-region-polygon
  parameter points1    :: <GdkPoint*>;
  parameter npoints2   :: <gint>;
  parameter fill_rule3 :: <GdkFillRule>;
  result value :: <GdkRegion*>;
  c-name: "gdk_region_polygon";
end;

define inline-only C-function gdk-region-offset
  parameter region1    :: <GdkRegion*>;
  parameter dx2        :: <gint>;
  parameter dy3        :: <gint>;
  c-name: "gdk_region_offset";
end;

define inline-only C-function gdk-region-shrink
  parameter region1    :: <GdkRegion*>;
  parameter dx2        :: <gint>;
  parameter dy3        :: <gint>;
  c-name: "gdk_region_shrink";
end;

define inline-only C-function gdk-region-union-with-rect
  parameter region1    :: <GdkRegion*>;
  parameter rect2      :: <GdkRectangle*>;
  result value :: <GdkRegion*>;
  c-name: "gdk_region_union_with_rect";
end;

define inline-only C-function gdk-regions-intersect
  parameter source11   :: <GdkRegion*>;
  parameter source22   :: <GdkRegion*>;
  result value :: <GdkRegion*>;
  c-name: "gdk_regions_intersect";
end;

define inline-only C-function gdk-regions-union
  parameter source11   :: <GdkRegion*>;
  parameter source22   :: <GdkRegion*>;
  result value :: <GdkRegion*>;
  c-name: "gdk_regions_union";
end;

define inline-only C-function gdk-regions-subtract
  parameter source11   :: <GdkRegion*>;
  parameter source22   :: <GdkRegion*>;
  result value :: <GdkRegion*>;
  c-name: "gdk_regions_subtract";
end;

define inline-only C-function gdk-regions-xor
  parameter source11   :: <GdkRegion*>;
  parameter source22   :: <GdkRegion*>;
  result value :: <GdkRegion*>;
  c-name: "gdk_regions_xor";
end;

define inline-only C-function gdk-event-send-clientmessage-toall
  parameter event1     :: <GdkEvent*>;
  c-name: "gdk_event_send_clientmessage_toall";
end;

define inline-only C-function gdk-event-send-client-message
  parameter event1     :: <GdkEvent*>;
  parameter xid2       :: <guint32>;
  result value :: <gboolean>;
  c-name: "gdk_event_send_client_message";
end;

define inline-only C-function gdk-keyval-name
  parameter keyval1    :: <guint>;
  result value ::  /* const */ <gchar*>;
  c-name: "gdk_keyval_name";
end;

define inline-only C-function gdk-keyval-from-name
  parameter keyval_name1 ::  /* const */ <gchar*>;
  result value :: <guint>;
  c-name: "gdk_keyval_from_name";
end;

define inline-only C-function gdk-keyval-to-upper
  parameter keyval1    :: <guint>;
  result value :: <guint>;
  c-name: "gdk_keyval_to_upper";
end;

define inline-only C-function gdk-keyval-to-lower
  parameter keyval1    :: <guint>;
  result value :: <guint>;
  c-name: "gdk_keyval_to_lower";
end;

define inline-only C-function gdk-keyval-is-upper
  parameter keyval1    :: <guint>;
  result value :: <gboolean>;
  c-name: "gdk_keyval_is_upper";
end;

define inline-only C-function gdk-keyval-is-lower
  parameter keyval1    :: <guint>;
  result value :: <gboolean>;
  c-name: "gdk_keyval_is_lower";
end;

define inline-only C-function gdk-threads-enter
  c-name: "gdk_threads_enter";
end;

define inline-only C-function gdk-threads-leave
  c-name: "gdk_threads_leave";
end;

