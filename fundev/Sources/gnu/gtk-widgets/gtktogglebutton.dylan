Module:    gtk-widgets
Copyright:    Original Code is Copyright (c) 1995-2004 Functional Objects, Inc.
              All rights reserved.
License:      Functional Objects Library Public License Version 1.0
Dual-license: GNU Lesser General Public License
Warranty:     Distributed WITHOUT WARRANTY OF ANY KIND

// This file is automatically generated from "gtktogglebutton.h"; do not edit.

define C-pointer-type <GtkToggleButton*> => <GtkToggleButton>;
define C-pointer-type <GtkToggleButton**> => <GtkToggleButton*>;
define C-pointer-type <GtkToggleButtonClass*> => <GtkToggleButtonClass>;
define C-pointer-type <GtkToggleButtonClass**> => <GtkToggleButtonClass*>;

define C-struct <_GtkToggleButton>
  sealed inline-only slot button-value   :: <GtkButton>;
  sealed bitfield slot active-value      :: <guint>,
    width: 1;
  sealed bitfield slot draw-indicator-value :: <guint>,
    width: 1;
  sealed inline-only slot event-window-value :: <GdkWindow*>;
  pointer-type-name: <_GtkToggleButton*>;
  c-name: "struct _GtkToggleButton";
end;

define C-struct <_GtkToggleButtonClass>
  sealed inline-only slot parent-class-value :: <GtkButtonClass>;
  sealed inline-only slot toggled-value  :: <C-function-pointer>;
  pointer-type-name: <_GtkToggleButtonClass*>;
  c-name: "struct _GtkToggleButtonClass";
end;

define inline-only C-function gtk-toggle-button-get-type
  result value :: <GtkType>;
  c-name: "gtk_toggle_button_get_type";
end;

define inline-only C-function gtk-toggle-button-new
  result value :: <GtkWidget*>;
  c-name: "gtk_toggle_button_new";
end;

define inline-only C-function gtk-toggle-button-new-with-label
  parameter label1     ::  /* const */ <gchar*>;
  result value :: <GtkWidget*>;
  c-name: "gtk_toggle_button_new_with_label";
end;

define inline-only C-function gtk-toggle-button-set-mode
  parameter toggle_button1 :: <GtkToggleButton*>;
  parameter draw_indicator2 :: <gboolean>;
  c-name: "gtk_toggle_button_set_mode";
end;

define inline-only C-function gtk-toggle-button-set-active
  parameter toggle_button1 :: <GtkToggleButton*>;
  parameter is_active2 :: <gboolean>;
  c-name: "gtk_toggle_button_set_active";
end;

define inline-only C-function gtk-toggle-button-get-active
  parameter toggle_button1 :: <GtkToggleButton*>;
  result value :: <gboolean>;
  c-name: "gtk_toggle_button_get_active";
end;

define inline-only C-function gtk-toggle-button-toggled
  parameter toggle_button1 :: <GtkToggleButton*>;
  c-name: "gtk_toggle_button_toggled";
end;

define inline constant <GtkToggleButton> = <_GtkToggleButton>;
define inline constant <GtkToggleButtonClass> = <_GtkToggleButtonClass>;
define sealed domain make (singleton(<_GtkToggleButton*>));
define sealed domain initialize (<_GtkToggleButton*>);
define sealed domain make (singleton(<_GtkToggleButtonClass*>));
define sealed domain initialize (<_GtkToggleButtonClass*>);
