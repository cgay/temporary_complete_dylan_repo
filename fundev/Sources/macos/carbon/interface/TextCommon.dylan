Module:    carbon-interface
Copyright:    Original Code is Copyright (c) 1995-2004 Functional Objects, Inc.
              All rights reserved.
License:      Functional Objects Library Public License Version 1.0
Dual-license: GNU Lesser General Public License
Warranty:     Distributed WITHOUT WARRANTY OF ANY KIND

// This file is automatically generated from "TextCommon.h"; do not edit.

define inline constant <TextEncodingBase> = <UInt32>;
define C-pointer-type <TextEncodingBase*> => <TextEncodingBase>;
define C-pointer-type <TextEncodingBase**> => <TextEncodingBase*>;
// unnamed enum:
define inline-only constant $kTextEncodingMacRoman     = 0;
define inline-only constant $kTextEncodingMacJapanese  = 1;
define inline-only constant $kTextEncodingMacChineseTrad = 2;
define inline-only constant $kTextEncodingMacKorean    = 3;
define inline-only constant $kTextEncodingMacArabic    = 4;
define inline-only constant $kTextEncodingMacHebrew    = 5;
define inline-only constant $kTextEncodingMacGreek     = 6;
define inline-only constant $kTextEncodingMacCyrillic  = 7;
define inline-only constant $kTextEncodingMacDevanagari = 9;
define inline-only constant $kTextEncodingMacGurmukhi  = 10;
define inline-only constant $kTextEncodingMacGujarati  = 11;
define inline-only constant $kTextEncodingMacOriya     = 12;
define inline-only constant $kTextEncodingMacBengali   = 13;
define inline-only constant $kTextEncodingMacTamil     = 14;
define inline-only constant $kTextEncodingMacTelugu    = 15;
define inline-only constant $kTextEncodingMacKannada   = 16;
define inline-only constant $kTextEncodingMacMalayalam = 17;
define inline-only constant $kTextEncodingMacSinhalese = 18;
define inline-only constant $kTextEncodingMacBurmese   = 19;
define inline-only constant $kTextEncodingMacKhmer     = 20;
define inline-only constant $kTextEncodingMacThai      = 21;
define inline-only constant $kTextEncodingMacLaotian   = 22;
define inline-only constant $kTextEncodingMacGeorgian  = 23;
define inline-only constant $kTextEncodingMacArmenian  = 24;
define inline-only constant $kTextEncodingMacChineseSimp = 25;
define inline-only constant $kTextEncodingMacTibetan   = 26;
define inline-only constant $kTextEncodingMacMongolian = 27;
define inline-only constant $kTextEncodingMacEthiopic  = 28;
define inline-only constant $kTextEncodingMacCentralEurRoman = 29;
define inline-only constant $kTextEncodingMacVietnamese = 30;
define inline-only constant $kTextEncodingMacExtArabic = 31;
define inline-only constant $kTextEncodingMacSymbol    = 33;
define inline-only constant $kTextEncodingMacDingbats  = 34;
define inline-only constant $kTextEncodingMacTurkish   = 35;
define inline-only constant $kTextEncodingMacCroatian  = 36;
define inline-only constant $kTextEncodingMacIcelandic = 37;
define inline-only constant $kTextEncodingMacRomanian  = 38;
define inline-only constant $kTextEncodingMacCeltic    = 39;
define inline-only constant $kTextEncodingMacGaelic    = 40;
define inline-only constant $kTextEncodingMacUnicode   = #x7E;
define inline-only constant $kTextEncodingMacFarsi     = #x8C;
define inline-only constant $kTextEncodingMacUkrainian = #x98;
define inline-only constant $kTextEncodingMacInuit     = #xEC;
define inline-only constant $kTextEncodingMacVT100     = #xFC;
define inline-only constant $kTextEncodingMacHFS       = #xFF;
define inline-only constant $kTextEncodingUnicodeDefault = #x0100;
define inline-only constant $kTextEncodingUnicodeV1-1  = #x0101;
define inline-only constant $kTextEncodingISO10646-1993 = #x0101;
define inline-only constant $kTextEncodingUnicodeV2-0  = #x0103;
define inline-only constant $kTextEncodingUnicodeV2-1  = #x0103;
define inline-only constant $kTextEncodingISOLatin1    = #x0201;
define inline-only constant $kTextEncodingISOLatin2    = #x0202;
define inline-only constant $kTextEncodingISOLatin3    = #x0203;
define inline-only constant $kTextEncodingISOLatin4    = #x0204;
define inline-only constant $kTextEncodingISOLatinCyrillic = #x0205;
define inline-only constant $kTextEncodingISOLatinArabic = #x0206;
define inline-only constant $kTextEncodingISOLatinGreek = #x0207;
define inline-only constant $kTextEncodingISOLatinHebrew = #x0208;
define inline-only constant $kTextEncodingISOLatin5    = #x0209;
define inline-only constant $kTextEncodingDOSLatinUS   = #x0400;
define inline-only constant $kTextEncodingDOSGreek     = #x0405;
define inline-only constant $kTextEncodingDOSBalticRim = #x0406;
define inline-only constant $kTextEncodingDOSLatin1    = #x0410;
define inline-only constant $kTextEncodingDOSGreek1    = #x0411;
define inline-only constant $kTextEncodingDOSLatin2    = #x0412;
define inline-only constant $kTextEncodingDOSCyrillic  = #x0413;
define inline-only constant $kTextEncodingDOSTurkish   = #x0414;
define inline-only constant $kTextEncodingDOSPortuguese = #x0415;
define inline-only constant $kTextEncodingDOSIcelandic = #x0416;
define inline-only constant $kTextEncodingDOSHebrew    = #x0417;
define inline-only constant $kTextEncodingDOSCanadianFrench = #x0418;
define inline-only constant $kTextEncodingDOSArabic    = #x0419;
define inline-only constant $kTextEncodingDOSNordic    = #x041A;
define inline-only constant $kTextEncodingDOSRussian   = #x041B;
define inline-only constant $kTextEncodingDOSGreek2    = #x041C;
define inline-only constant $kTextEncodingDOSThai      = #x041D;
define inline-only constant $kTextEncodingDOSJapanese  = #x0420;
define inline-only constant $kTextEncodingDOSChineseSimplif = #x0421;
define inline-only constant $kTextEncodingDOSKorean    = #x0422;
define inline-only constant $kTextEncodingDOSChineseTrad = #x0423;
define inline-only constant $kTextEncodingWindowsLatin1 = #x0500;
define inline-only constant $kTextEncodingWindowsANSI  = #x0500;
define inline-only constant $kTextEncodingWindowsLatin2 = #x0501;
define inline-only constant $kTextEncodingWindowsCyrillic = #x0502;
define inline-only constant $kTextEncodingWindowsGreek = #x0503;
define inline-only constant $kTextEncodingWindowsLatin5 = #x0504;
define inline-only constant $kTextEncodingWindowsHebrew = #x0505;
define inline-only constant $kTextEncodingWindowsArabic = #x0506;
define inline-only constant $kTextEncodingWindowsBalticRim = #x0507;
define inline-only constant $kTextEncodingWindowsVietnamese = #x0508;
define inline-only constant $kTextEncodingWindowsKoreanJohab = #x0510;
define inline-only constant $kTextEncodingUS-ASCII     = #x0600;
define inline-only constant $kTextEncodingJIS-X0201-76 = #x0620;
define inline-only constant $kTextEncodingJIS-X0208-83 = #x0621;
define inline-only constant $kTextEncodingJIS-X0208-90 = #x0622;
define inline-only constant $kTextEncodingJIS-X0212-90 = #x0623;
define inline-only constant $kTextEncodingJIS-C6226-78 = #x0624;
define inline-only constant $kTextEncodingGB-2312-80   = #x0630;
define inline-only constant $kTextEncodingGBK-95       = #x0631;
define inline-only constant $kTextEncodingKSC-5601-87  = #x0640;
define inline-only constant $kTextEncodingKSC-5601-92-Johab = #x0641;
define inline-only constant $kTextEncodingCNS-11643-92-P1 = #x0651;
define inline-only constant $kTextEncodingCNS-11643-92-P2 = #x0652;
define inline-only constant $kTextEncodingCNS-11643-92-P3 = #x0653;
define inline-only constant $kTextEncodingISO-2022-JP  = #x0820;
define inline-only constant $kTextEncodingISO-2022-JP-2 = #x0821;
define inline-only constant $kTextEncodingISO-2022-CN  = #x0830;
define inline-only constant $kTextEncodingISO-2022-CN-EXT = #x0831;
define inline-only constant $kTextEncodingISO-2022-KR  = #x0840;
define inline-only constant $kTextEncodingEUC-JP       = #x0920;
define inline-only constant $kTextEncodingEUC-CN       = #x0930;
define inline-only constant $kTextEncodingEUC-TW       = #x0931;
define inline-only constant $kTextEncodingEUC-KR       = #x0940;
define inline-only constant $kTextEncodingShiftJIS     = #x0A01;
define inline-only constant $kTextEncodingKOI8-R       = #x0A02;
define inline-only constant $kTextEncodingBig5         = #x0A03;
define inline-only constant $kTextEncodingMacRomanLatin1 = #x0A04;
define inline-only constant $kTextEncodingHZ-GB-2312   = #x0A05;
define inline-only constant $kTextEncodingNextStepLatin = #x0B01;
define inline-only constant $kTextEncodingEBCDIC-US    = #x0C01;
define inline-only constant $kTextEncodingEBCDIC-CP037 = #x0C02;
define inline-only constant $kTextEncodingMultiRun     = #x0FFF;
define inline-only constant $kTextEncodingMacTradChinese = 2;
define inline-only constant $kTextEncodingMacRSymbol   = 8;
define inline-only constant $kTextEncodingMacSimpChinese = 25;
define inline-only constant $kTextEncodingMacGeez      = 28;
define inline-only constant $kTextEncodingMacEastEurRoman = 29;
define inline-only constant $kTextEncodingMacUninterp  = 32;

define inline constant <TextEncodingVariant> = <UInt32>;
define C-pointer-type <TextEncodingVariant*> => <TextEncodingVariant>;
define C-pointer-type <TextEncodingVariant**> => <TextEncodingVariant*>;
// unnamed enum:
define inline-only constant $kTextEncodingDefaultVariant = 0;
define inline-only constant $kMacRomanStandardVariant  = 0;
define inline-only constant $kMacRomanCurrencySignVariant = 1;
define inline-only constant $kMacIcelandicStandardVariant = 0;
define inline-only constant $kMacIcelandicTrueTypeVariant = 1;
define inline-only constant $kMacJapaneseStandardVariant = 0;
define inline-only constant $kMacJapaneseStdNoVerticalsVariant = 1;
define inline-only constant $kMacJapaneseBasicVariant  = 2;
define inline-only constant $kMacJapanesePostScriptScrnVariant = 3;
define inline-only constant $kMacJapanesePostScriptPrintVariant = 4;
define inline-only constant $kMacJapaneseVertAtKuPlusTenVariant = 5;
define inline-only constant $kMacArabicStandardVariant = 0;
define inline-only constant $kMacArabicTrueTypeVariant = 1;
define inline-only constant $kMacArabicThuluthVariant  = 2;
define inline-only constant $kMacArabicAlBayanVariant  = 3;
define inline-only constant $kMacFarsiStandardVariant  = 0;
define inline-only constant $kMacFarsiTrueTypeVariant  = 1;
define inline-only constant $kMacHebrewStandardVariant = 0;
define inline-only constant $kMacHebrewFigureSpaceVariant = 1;
define inline-only constant $kUnicodeNoSubset          = 0;
define inline-only constant $kUnicodeCanonicalDecompVariant = 2;
define inline-only constant $kBig5-BasicVariant        = 0;
define inline-only constant $kBig5-StandardVariant     = 1;
define inline-only constant $kBig5-ETenVariant         = 2;
define inline-only constant $kUnicodeNoCompatibilityVariant = 1;
define inline-only constant $kUnicodeNoComposedVariant = 3;
define inline-only constant $kUnicodeNoCorporateVariant = 4;
define inline-only constant $kJapaneseStandardVariant  = 0;
define inline-only constant $kJapaneseStdNoVerticalsVariant = 1;
define inline-only constant $kJapaneseBasicVariant     = 2;
define inline-only constant $kJapanesePostScriptScrnVariant = 3;
define inline-only constant $kJapanesePostScriptPrintVariant = 4;
define inline-only constant $kJapaneseVertAtKuPlusTenVariant = 5;
define inline-only constant $kHebrewStandardVariant    = 0;
define inline-only constant $kHebrewFigureSpaceVariant = 1;
define inline-only constant $kUnicodeMaxDecomposedVariant = 2;
define inline-only constant $kJapaneseNoOneByteKanaOption = #x20;
define inline-only constant $kJapaneseUseAsciiBackslashOption = #x40;

define inline constant <TextEncodingFormat> = <UInt32>;
define C-pointer-type <TextEncodingFormat*> => <TextEncodingFormat>;
define C-pointer-type <TextEncodingFormat**> => <TextEncodingFormat*>;
// unnamed enum:
define inline-only constant $kTextEncodingDefaultFormat = 0;
define inline-only constant $kUnicode16BitFormat       = 0;
define inline-only constant $kUnicodeUTF7Format        = 1;
define inline-only constant $kUnicodeUTF8Format        = 2;
define inline-only constant $kUnicode32BitFormat       = 3;

define inline constant <TextEncoding> = <UInt32>;
define C-pointer-type <TextEncoding*> => <TextEncoding>;
define C-pointer-type <TextEncoding**> => <TextEncoding*>;
define inline constant <TextEncodingNameSelector> = <UInt32>;
define C-pointer-type <TextEncodingNameSelector*> => <TextEncodingNameSelector>;
define C-pointer-type <TextEncodingNameSelector**> => <TextEncodingNameSelector*>;
// unnamed enum:
define inline-only constant $kTextEncodingFullName     = 0;
define inline-only constant $kTextEncodingBaseName     = 1;
define inline-only constant $kTextEncodingVariantName  = 2;
define inline-only constant $kTextEncodingFormatName   = 3;


define C-struct <TextEncodingRun>
  sealed inline-only slot offset-value   :: <ByteOffset>;
  sealed inline-only slot textEncoding-value :: <TextEncoding>;
  pack: 2;
  c-name: "struct TextEncodingRun";
end;
define C-pointer-type <TextEncodingRun*> => <TextEncodingRun>;
define C-pointer-type <TextEncodingRun**> => <TextEncodingRun*>;
define C-pointer-type <TextEncodingRunPtr> => <TextEncodingRun>;
define C-pointer-type <ConstTextEncodingRunPtr> =>  /* const */ <TextEncodingRun>;

define C-struct <ScriptCodeRun>
  sealed inline-only slot offset-value   :: <ByteOffset>;
  sealed inline-only slot script-value   :: <ScriptCode>;
  pack: 2;
  c-name: "struct ScriptCodeRun";
end;
define C-pointer-type <ScriptCodeRun*> => <ScriptCodeRun>;
define C-pointer-type <ScriptCodeRun**> => <ScriptCodeRun*>;
define C-pointer-type <ScriptCodeRunPtr> => <ScriptCodeRun>;
define C-pointer-type <ConstScriptCodeRunPtr> =>  /* const */ <ScriptCodeRun>;
define C-pointer-type <TextPtr> => <UInt8>;
define C-pointer-type <ConstTextPtr> =>  /* const */ <UInt8>;
define C-pointer-type <UniCharArrayPtr> => <UniChar>;
define C-pointer-type <ConstUniCharArrayPtr> =>  /* const */ <UniChar>;
// unnamed enum:
define inline-only constant $kTextScriptDontCare       = -128;
define inline-only constant $kTextLanguageDontCare     = -128;
define inline-only constant $kTextRegionDontCare       = -128;


define C-struct <TECInfo>
  sealed inline-only slot format-value   :: <UInt16>;
  sealed inline-only slot tecVersion-value :: <UInt16>;
  sealed inline-only slot tecTextConverterFeatures-value :: <UInt32>;
  sealed inline-only slot tecUnicodeConverterFeatures-value :: <UInt32>;
  sealed inline-only slot tecTextCommonFeatures-value :: <UInt32>;
  sealed inline-only slot tecTextEncodingsFolderName-value :: <Str31>;
  sealed inline-only slot tecExtensionFileName-value :: <Str31>;
  pack: 2;
  c-name: "struct TECInfo";
end;
define C-pointer-type <TECInfo*> => <TECInfo>;
define C-pointer-type <TECInfo**> => <TECInfo*>;
define C-pointer-type <TECInfoPtr> => <TECInfo>;
define C-pointer-type <TECInfoHandle> => <TECInfoPtr>;
// unnamed enum:
define inline-only constant $kTECInfoCurrentFormat     = 1;

// unnamed enum:
define inline-only constant $kTECKeepInfoFixBit        = 0;
define inline-only constant $kTECFallbackTextLengthFixBit = 1;
define inline-only constant $kTECTextRunBitClearFixBit = 2;
define inline-only constant $kTECTextToUnicodeScanFixBit = 3;
define inline-only constant $kTECAddForceASCIIChangesBit = 4;
define inline-only constant $kTECPreferredEncodingFixBit = 5;

// unnamed enum:
define inline-only constant $kTECKeepInfoFixMask       = ash(1, $kTECKeepInfoFixBit);
define inline-only constant $kTECFallbackTextLengthFixMask = ash(1, $kTECFallbackTextLengthFixBit);
define inline-only constant $kTECTextRunBitClearFixMask = ash(1, $kTECTextRunBitClearFixBit);
define inline-only constant $kTECTextToUnicodeScanFixMask = ash(1, $kTECTextToUnicodeScanFixBit);
define inline-only constant $kTECAddForceASCIIChangesMask = ash(1, $kTECAddForceASCIIChangesBit);
define inline-only constant $kTECPreferredEncodingFixMask = ash(1, $kTECPreferredEncodingFixBit);


define inline-only C-function CreateTextEncoding
  parameter encodingBase :: <TextEncodingBase>;
  parameter encodingVariant :: <TextEncodingVariant>;
  parameter encodingFormat :: <TextEncodingFormat>;
  result value :: <TextEncoding>;
  c-name: "CreateTextEncoding";
  c-modifiers: "pascal";
end;

define inline-only C-function GetTextEncodingBase
  parameter encoding   :: <TextEncoding>;
  result value :: <TextEncodingBase>;
  c-name: "GetTextEncodingBase";
  c-modifiers: "pascal";
end;

define inline-only C-function GetTextEncodingVariant
  parameter encoding   :: <TextEncoding>;
  result value :: <TextEncodingVariant>;
  c-name: "GetTextEncodingVariant";
  c-modifiers: "pascal";
end;

define inline-only C-function GetTextEncodingFormat
  parameter encoding   :: <TextEncoding>;
  result value :: <TextEncodingFormat>;
  c-name: "GetTextEncodingFormat";
  c-modifiers: "pascal";
end;

define inline-only C-function ResolveDefaultTextEncoding
  parameter encoding   :: <TextEncoding>;
  result value :: <TextEncoding>;
  c-name: "ResolveDefaultTextEncoding";
  c-modifiers: "pascal";
end;

define inline-only C-function GetTextEncodingName
  parameter iEncoding  :: <TextEncoding>;
  parameter iNamePartSelector :: <TextEncodingNameSelector>;
  parameter iPreferredRegion :: <RegionCode>;
  parameter iPreferredEncoding :: <TextEncoding>;
  parameter iOutputBufLen :: <ByteCount>;
  parameter oNameLength :: <ByteCount*>;
  parameter oActualRegion :: <RegionCode*>;
  parameter oActualEncoding :: <TextEncoding*>;
  parameter oEncodingName :: <TextPtr>;
  result value :: <OSStatus>;
  c-name: "GetTextEncodingName";
end;

define inline-only C-function TECGetInfo
  parameter tecInfo    :: <TECInfoHandle*>;
  result value :: <OSStatus>;
  c-name: "TECGetInfo";
  c-modifiers: "pascal";
end;

define inline-only C-function UpgradeScriptInfoToTextEncoding
  parameter iTextScriptID :: <ScriptCode>;
  parameter iTextLanguageID :: <LangCode>;
  parameter iRegionID  :: <RegionCode>;
  parameter iTextFontname :: <ConstStr255Param>;
  parameter oEncoding  :: <TextEncoding*>;
  result value :: <OSStatus>;
  c-name: "UpgradeScriptInfoToTextEncoding";
  c-modifiers: "pascal";
end;

define inline-only C-function RevertTextEncodingToScriptInfo
  parameter iEncoding  :: <TextEncoding>;
  parameter oTextScriptID :: <ScriptCode*>;
  parameter oTextLanguageID :: <LangCode*>;
  parameter oTextFontname :: <Str255>;
  result value :: <OSStatus>;
  c-name: "RevertTextEncodingToScriptInfo";
  c-modifiers: "pascal";
end;

