#!/bin/bash

function import ()
{
  echo Importing $1 ...
  LID=$OPEN_DYLAN_USER_SOURCES/$1.lid
  OPEN_DYLAN_USER_INSTALL= \
  OPEN_DYLAN_USER_BUILD= \
  OPEN_DYLAN_USER_REGISTRIES= \
    $dylan_compile -loose -nocompile -nolink $LID
  [ $? = 0 ] || { echo "Import failed" ; exit -1; }
}

function set_rpath ()
{
  echo Setting RPATH of $2 "(nee, $1)" ...
  cp -p $OPEN_DYLAN_USER_INSTALL/bin/$1 $OPEN_DYLAN_USER_INSTALL/bin/$1.1
  OPEN_DYLAN_RPATH=/usr/local/lib/functional-developer/bin:/usr/local/lib/functional-developer/lib \
    $build elf link $1.exe
  [ $? = 0 ] || { echo "Setting RPATH failed" ; exit -1; }
  mv $OPEN_DYLAN_USER_INSTALL/bin/$1 $STAGING/bin/$2
  mv $OPEN_DYLAN_USER_INSTALL/bin/$1.1 $OPEN_DYLAN_USER_INSTALL/bin/$1
}

[ $# = 2 ] || { echo "Usage: $0 VERSION RELEASE"; exit -1; }

VERSION=$1
RELEASE=$2

import app/factorial/factorial-small
import app/factorial/factorial-big
import app/hello-world/hello-world

[ -d $OPEN_DYLAN_USER_INSTALL/staging ] || mkdir $OPEN_DYLAN_USER_INSTALL/staging

STAGING=$OPEN_DYLAN_USER_INSTALL/staging/functional-developer-$VERSION

[ -d $STAGING ] && rm -rf $STAGING

mkdir $STAGING
mkdir $STAGING/bin
mkdir $STAGING/databases
mkdir $STAGING/Examples
mkdir $STAGING/lib
mkdir $STAGING/Sources

for f in GNUmakefile LICENSE README; do cp -p $f $STAGING/; done

set_rpath basic-console-compiler xfdcompile
set_rpath basic-pentium-dw       fdcompile

cp -p $OPEN_DYLAN_USER_INSTALL/lib/*.so $STAGING/bin/
cp -p $OPEN_DYLAN_USER_INSTALL/bin/elf-linker.script $STAGING/bin/
for lib in build internal-release-info;
  do [ -f $STAGING/bin/lib$lib.so ] && rm -f $STAGING/bin/lib$lib.so; done
 
cp -p $OPEN_DYLAN_USER_INSTALL/lib/dylan-elf-dll.script $STAGING/lib/
cp -p $OPEN_DYLAN_USER_INSTALL/lib/dylan-elf-exe.script $STAGING/lib/

for lib in dylan common-dylan functional-dylan collections io system \
           generic-arithmetic big-integers c-ffi network testworks testworks-specs; \
  do mv $STAGING/bin/lib$lib.so $STAGING/lib/; done

for lib in dylan common-dylan functional-dylan collections io system \
           generic-arithmetic big-integers c-ffi network testworks testworks-specs; \
  do cp -p $OPEN_DYLAN_USER_INSTALL/databases/$lib.ddb $STAGING/databases/; done

mkdir $STAGING/Sources/registry
mkdir $STAGING/Sources/registry/generic
mkdir $STAGING/Sources/registry/x86-linux

for lib in functional-dylan collections \
           generic-arithmetic big-integers testworks testworks-specs; \
  do cp -p $OPEN_DYLAN_USER_SOURCES/registry/generic/$lib $STAGING/Sources/registry/generic/; done

for lib in common-dylan io system c-ffi network; \
  do cp -p $OPEN_DYLAN_USER_SOURCES/registry/x86-linux/$lib $STAGING/Sources/registry/x86-linux/; done

for lib in common-dylan functional-dylan collections io system network; \
  do cp -a $OPEN_DYLAN_USER_SOURCES/$lib/ $STAGING/Sources/$lib/; done

for lib in examples http-client nntp-client pop-client smtp-client; \
  do rm -rf $STAGING/Sources/network/$lib; done

mkdir $STAGING/Sources/lib
for lib in generic-arithmetic big-integers c-ffi; \
  do cp -a $OPEN_DYLAN_USER_SOURCES/lib/$lib $STAGING/Sources/lib/$lib/; done

rm -rf $STAGING/Sources/lib/c-ffi/test

mkdir $STAGING/Sources/qa
for lib in testworks testworks-specs; \
  do cp -a $OPEN_DYLAN_USER_SOURCES/qa/$lib/ $STAGING/Sources/qa/$lib/; done

mkdir $STAGING/Sources/qa/test-apps
cp -a $OPEN_DYLAN_USER_SOURCES/qa/test-apps/libraries-test-suite/ $STAGING/Sources/qa/test-apps/libraries-test-suite/
mkdir $STAGING/Sources/qa/test-suites
cp -a $OPEN_DYLAN_USER_SOURCES/qa/test-suites/libraries-test-suite/ $STAGING/Sources/qa/test-suites/libraries-test-suite/

mkdir $STAGING/Sources/dylan
cp -a $OPEN_DYLAN_USER_SOURCES/dylan/tests $STAGING/Sources/dylan/tests/

pushd $STAGING/Sources
find . -name 'CVS' -depth -exec rm -rf {} \;
for name in alpha carbon mips sparc emulator; \
  do find . -name "*$name*" -exec rm -f {} \; ; done
rm -f system/MoreFiles.lib
rm -f system/ppc-linux-operating-system.dylan
rm -f system/ppc-linux-system.lid
rm -f system/file-system/native-macintosh-locators.dylan
popd

pushd $STAGING/Examples
cp -a $OPEN_DYLAN_USER_SOURCES/examples/documentation/airport/ airport/
cp -a $OPEN_DYLAN_USER_SOURCES/examples/console/towers-of-hanoi/ towers-of-hanoi
cp -a $OPEN_DYLAN_USER_SOURCES/app/factorial/ factorial/
cp -a $OPEN_DYLAN_USER_SOURCES/app/hello-world/ hello-world/
cp -a $OPEN_DYLAN_USER_SOURCES/network/examples network/
find . -name 'CVS' -depth -exec rm -rf {} \;
find . -name '*-build' -depth -exec rm -rf {} \;
find . -name '*.lid' -exec rm -f {} \;
find . -name 'README.html' -exec rm -f {} \;
popd

pushd $OPEN_DYLAN_USER_INSTALL/staging
echo tar cfz functional-developer-$VERSION-$RELEASE.tgz functional-developer-$VERSION/
tar cfz functional-developer-$VERSION-$RELEASE.tgz functional-developer-$VERSION/
popd
