#!/usr/local/bin/bash
#      Script: sync-release
#      Author: Shri Amit (amit), Andy Armstrong (andrewa)
usage="Usage: $0 <Absolute Pathname of Release>"
#    Synopsis: A sync script for a specified branch into a specified release:
#
# Note: This assumes that the new release space has already
#       been created.
#############################################################
## Application exit status legend ##
## 0: Checkout successful
## 1: Absolute Pathname of release not specified
## 2: The checkout failed

## Parse the command line and check incorrect usage ##
##
usage="Usage: sync-release [-r release] [-b branch] [-c checkpoint]"
dylan_root=/u/dylan
root=""
personal_root=""
target_platform=""
linking_type=""
branch="trunk"
while [ "$#" -ne 0 ]; do
  case $1 in
   -r | -root) shift
               root="$1" ;;
     -b | -br) shift
	       branch="$1" ;;
     -c | -ck) shift
	       checkpoint="$1" ;;
            *) echo sync-release.bash: Invalid command line option -  $option
               echo $usage
               exit 2;;
  esac
  shift
done

source $dylan_root/admin/releases/env.bash $root
log_file="$logsdir/sync-$branch-$host-$platform-log"

## Perform the sync, everything from   ##
## this point on goes into the logfile ##
##
{
    echo "Starting at: `date`"
    echo "Running $0 with options:"
    echo " The new release dir is: $root"
    echo "         The version is: $branch $checkpoint"
    echo "        The hostname is: $host"
    echo "        The platform is: $platform"
    echo "         The logfile is: $log_file"
    echo "       The directory is: `pwd`"
    echo

    ## Start the checkout ##
    ##
    if [ "$checkpoint" = "" ]; then
      hope co -c D -branch "$branch" -rec -diff-branch-files force -diff-unit-files force -writable-files force -miss create -extra-files delete -filename "$root";
    else
      hope co -c D -ver "$checkpoint" -branch "$branch" -rec -diff-branch-files force -diff-unit-files force -writable-files force -miss create -extra-files delete -filename "$root";
    fi
    status=$?
    if [ "$status" != 0 ]; then
	message="$0: Error - The checkout failed."
	exit_code=2;
    else
        message="$0: The sync for release $root was successful"
        exit_code=0;
    fi

    ## Setup the system logs ##
    ##
    system_logs="promote install-patch images-used"
    for i in $system_logs; do
	echo "Start of the $i logfile" > $logsdir/$i.log
	chmod 777 $logsdir/$i.log
    done

    ## Make everything writable by dylan ##
    ##
    chmod -R u+w $root/install/*
    rm -f $patchdir/.version

    ## Execute ranlib on the sparc gc.a to preserve the date ##
    ## No need to do it on system V machines                 ##
    ##
    ranlib $root/install/sparc-sunos4/lib/lib_gc.a

    subject="Report on $0 at $site on $host"
    error_string="Error,"
    send-mail "$message" "$rel_eng" "$log_file" "$subject" "$error_string"

} >& "$log_file"

exit $exit_code
#eof
