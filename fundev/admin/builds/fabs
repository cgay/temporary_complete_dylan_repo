#!/usr/local/bin/perl
#      Script: fabs (find-above-and-below-string)
#      Author: Russell Prince(princew)
$usage="Usage: fabs <filename> <string> -a <\# above> -b <\# below> -n <Occurance \#> -t\n";
#  Opts & Args: <filename>: The file to parse, default: none
#               <string>: The string to search, default: none
#               -a:   <No. of lines above>, default 20
#             -all:   output all occurrences of string
#               -b:   <No. of lines below>, default 20
#               -n:   <Index of occurance>, default 1
#               -t:   tail of file (use in conjunction with -a)
#
#     Synopsis: . Parses <filename> and finds <Index of occurance>'th 
#                 occurance of <string>.
#               . Dumps <No. of lines above> and <No. of lines below> the <string>
#                 (including the string) to stdout.
#
#  Notes: - if a search string is included when using -t option, fabs will
#           only print the tail of the file is it does not find the search
#           string
#         - a zero value for -n will search for the last occurrence of <string>.
#
#################################################################
##  error codes:
##  0 - Successful
##  1 - incorrect usage
##  2 - file does not exist
##  3 - '-n' occurrence of 'string' not found in 'filename'
##  4 - file not specified
##  5 - string not specified
#################################################################

require '/u/dylan/admin/builds/env.perl';

$lines_above = 20;
$lines_below = 20;
$occurrence_number = 1;

$occurrence_count = 0;
$filename = "none";
$string = "none";
$file_length = 0;
$last_occurrence_flag = "false";
$tail_flag = "false";
$get_tail_if_not_found = "false";
$print_all = "false";
$fabs_file = "$admindir/fabs";

###########################################################################
#                                Main Program                             #
###########################################################################

&parse_arguments();
&check_file();
&find_occurrence();
&print_lines();

#&debug();

exit(0);

###########################################################################
#                                Subroutines                              #
###########################################################################

sub check_file
  {
    unless ( -f $filename )
      {
	print "\nFabs Error - The file $filename does not exist!\n";
	print "$usage\n";
	exit (2);
      }

  }  # end check_file

###########################################################################

sub debug
  {
    print "\n";
    print "File name:                    $filename\n";
    print "File length:                  $file_length\n";
    print "Search string:                $string\n";
    print "lines above:                  $lines_above\n";
    print "lines below:                  $lines_below\n";
    print "Occurrence number:            $occurrence_number\n";
    print "\n";
    print "Occurrence index:             $occurrence_index\n";
    print "Above index:                  $above_index\n";
    print "Below index:                  $below_index\n";
    print "\n";
    print "Tail flag:                    $tail_flag\n";
    print "Get tail if string not found: $get_tail_if_not_found\n";
    print "\n";

  }  # end debug

###########################################################################

sub find_occurrence
  {
    @file = `cat $filename`;
    chop (@file);
    $file_length = @file;
    $file_index = -1;
    $occurrence_index = 0;

    if ($print_all eq "true")
      {
        $occurrence_number = -1;
      }

    if ($tail_flag eq "true")
      {
        $occurrence_index = $file_length + 1;
        $occurrence_count = $occurrence_number;

        $lines_below = 0;
      }
    else
      {
        $file_index = -1;
      }

    until (($occurrence_count == $occurrence_number) ||
	   ($file_index > $file_length))
      {
        $file_index ++;

        if ($file[$file_index] =~ /$string/)
          {
            if ($last_occurrence_flag eq "false")
              {
                $occurrence_count ++;
              }
            $occurrence_index = $file_index;
          }
      }

    if ($print_all eq "true")
      {
        if ($occurrence_count > 0)
          {
            print "\n";
            print "======================================================================\n";
            print "Fabs:  Starting search for \"$string\" in file: $filename\n";

            for ($i = 1; $i <= $occurrence_count; $i++)
              {
                print "Occurrence: $i\n";
                @temp = `$fabs_file -a $lines_above -b $lines_below $filename $string -n $i`;
                foreach $_ (@temp)
                  {
                    print "$_";
                  }

                if ($i < $occurrence_count)
                  {
                    print "----------------------------------------------------------------------\n";
                  }
              }

            print "Fabs:  Ending search for $string in $filename\n";
            print "======================================================================\n";
            print "\n";
          }
        else
          {
            print "\nFabs Error - Could not find:\n";
            print "  Any Occurrence\n";
            print "  Of string: $string\n";
            print "  In file:   $filename\n";
            print "\n";
          }

        exit(0);
      }

    if ( (($last_occurrence_flag eq "false") && 
          ($occurrence_count < $occurrence_number)) ||
         (($last_occurrence_flag eq "true") && ($occurrence_index == 0)) )
      {
        if ($last_occurrence_flag eq "true")
          {
            $occurrence_number = "last";
          }

        print "\nFabs Error - Could not find:\n";
        print "  Occurrence number: $occurrence_number\n";
        print "  Of string:         $string\n";
        print "  In file:           $filename\n";
        print "\n";

        if ($get_tail_if_not_found eq "true")
          {
            $tail_flag = "true";
            $occurrence_index = $file_length + 1;
            $occurrence_count = $occurrence_number;

            unless ($lines_above > 0)
              {
                if ($lines_below > 0)
                  {
                    $lines_above = $lines_below;
                  }
                else
                  {
                    $lines_above = 20;
                  }
              }

            $lines_below = 0;

            print "Fabs - Printing tail of file $filename...\n";
          }
        else
          {
            exit(3);
          }

      }

  }  # end find_occurrence

###########################################################################

sub parse_arguments
  {
    $num_args = @ARGV - 1;
    $index = 0;

    $arg_str = sprintf("@ARGV");

    if ($arg_str =~ /-t/)
      {
        $tail_flag = "true";
      }

    until ($index > $num_args)
      {
	$arg = $ARGV[$index];

	if ($arg eq "-n")
	  {
	    $occurrence_number = $ARGV[$index + 1]; $index++;

	    if ($occurrence_number == 0)
	       {
		 $last_occurrence_flag = "true";
	       }
	  } 
	elsif ($arg eq "-a")
	  {
	    $lines_above = $ARGV[$index + 1]; $index++;
	  } 
	elsif ($arg eq "-all")
	  {
            $print_all = "true";
            $occurrence_number = -1;
	  } 
	elsif ($arg eq "-b")
	  {
	    $lines_below = $ARGV[$index + 1]; $index++;
	  } 
	else   # assume its a file then string
	  {
            unless ($arg eq "-t")
              {
                if ($filename eq "none")
                  {
                    $filename = $arg;
                  }
                elsif ($string eq "none")
                  {
                    $string = $arg;
                    if ($tail_flag eq "true")
		      {
                        $get_tail_if_not_found = "true";
                        $tail_flag = "false";
                      }
                  }
	        else
	          {
		    print "\nFabs Error - Too many args\n";
		    print "$usage\n";
		    exit(1);
	          }
              }
	  }

	$index += 1;

      }

    if ($filename eq "none")
      {
	print "\nFabs Error - A filename must be specified";
	print "\n$usage\n";
	exit(4);
      }
    elsif (($string eq "none") && ($tail_flag eq "false"))
      {
	print "\nFabs Error - A string must be specified";
	print "\n$usage\n";
	exit(5);
      }

  }  # end parse_arguments

###########################################################################

sub print_lines
  {
    $eof_flag = "false";
    $tof_flag = "false";

    $above_index = $occurrence_index - $lines_above;
    $below_index = $occurrence_index + $lines_below;

    if ($above_index < 0)
      {
        $above_index = 0;
        $tof_flag = "true";
      }
    if ($below_index > $file_length)
      {
        $below_index = $file_length;
        $eof_flag = "true";
      }

    print "\n";

    for ($i = $above_index; $i <= $below_index; $i++)
      {
        if ($i == $occurrence_index)
          {
            print "==>|$file[$i]\n";
          }
        else
          {
            if (($i == $above_index) && ($tof_flag eq "true"))
              {
                print "TOF";
              }
            elsif (($i == $below_index) && ($eof_flag eq "true"))
              {
                print "EOF";
              }
            else
              {
                print "   ";
              }

            print "|$file[$i]\n";
          }
      }

    print "\n";

  }  # end print_lines

###########################################################################

# eof
