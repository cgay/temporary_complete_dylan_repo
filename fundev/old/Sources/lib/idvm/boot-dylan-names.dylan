module: doss-names
Copyright:    Original Code is Copyright (c) 1995-2004 Functional Objects, Inc.
              All rights reserved.
License:      Functional Objects Library Public License Version 1.0
Dual-license: GNU Lesser General Public License
Warranty:     Distributed WITHOUT WARRANTY OF ANY KIND

constant-namer("dylan_internal__pc_false", #f);
constant-namer("dylan_internal__pc_empty__list", #());


constant-namer("dylan_internal___", \-);
constant-namer("dylan_internal__ds_permanent__hash__state", $permanent-hash-state);
constant-namer("dylan_internal__eq_", \=);
constant-namer("dylan_internal__eq__eq_", \==);
constant-namer("dylan_internal__gt_", \>);
constant-namer("dylan_internal__gt__eq_", \>=);
constant-namer("dylan_internal__lt_", \<);
constant-namer("dylan_internal__lt__eq_", \<=);
constant-namer("dylan_internal__lt_abort_gt_", <abort>);
constant-namer("dylan_internal__lt_array_gt_", <array>);
constant-namer("dylan_internal__lt_big__integer_gt_", <big-integer>);
constant-namer("dylan_internal__lt_boolean_gt_", <boolean>);
constant-namer("dylan_internal__lt_byte__character_gt_", <byte-character>);
constant-namer("dylan_internal__lt_byte__string_gt_", <byte-string>);
constant-namer("dylan_internal__lt_character_gt_", <character>);
constant-namer("dylan_internal__lt_class__slot__descriptor_gt_", <class-slot-descriptor>);
constant-namer("dylan_internal__lt_class_gt_", <class>);
constant-namer("dylan_internal__lt_collection_gt_", <collection>);
constant-namer("dylan_internal__lt_complex__method_gt_", <complex-method>);
constant-namer("dylan_internal__lt_complex_gt_", <complex>);
constant-namer("dylan_internal__lt_condition_gt_", <condition>);
constant-namer("dylan_internal__lt_constant__slot__descriptor_gt_", <constant-slot-descriptor>);
constant-namer("dylan_internal__lt_deque_gt_", <deque>);
constant-namer("dylan_internal__lt_double__float_gt_", <double-float>);
constant-namer("dylan_internal__lt_each__subclass__slot__descriptor_gt_", <each-subclass-slot-descriptor>);
constant-namer("dylan_internal__lt_empty__list_gt_", <empty-list>);
constant-namer("dylan_internal__lt_error_gt_", <error>);
constant-namer("dylan_internal__lt_explicit__key__collection_gt_", <explicit-key-collection>);
constant-namer("dylan_internal__lt_extended__float_gt_", <extended-float>);
constant-namer("dylan_internal__lt_float_gt_", <float>);
constant-namer("dylan_internal__lt_function__class_gt_", <function-class>);
constant-namer("dylan_internal__lt_function_gt_", <function>);
constant-namer("dylan_internal__lt_generic__function_gt_", <generic-function>);
constant-namer("dylan_internal__lt_hashed__collection_gt_", <hashed-collection>);
constant-namer("dylan_internal__lt_instance__slot__descriptor_gt_", <instance-slot-descriptor>);
constant-namer("dylan_internal__lt_integer_gt_", <integer>);
constant-namer("dylan_internal__lt_invalid__index__error_gt_", <invalid-index-error>);
constant-namer("dylan_internal__lt_island__queue_gt_", <island-queue>);
constant-namer("dylan_internal__lt_key__not__found__error_gt_", <key-not-found-error>);
constant-namer("dylan_internal__lt_keyword_gt_", <keyword>);
constant-namer("dylan_internal__lt_lambda_gt_", <lambda>);
constant-namer("dylan_internal__lt_list_gt_", <list>);
constant-namer("dylan_internal__lt_method_gt_", <method>);
constant-namer("dylan_internal__lt_multidimensional__array_gt_", <multidimensional-array>);
constant-namer("dylan_internal__lt_mutable__collection_gt_", <mutable-collection>);
constant-namer("dylan_internal__lt_mutable__explicit__key__collection_gt_", <mutable-explicit-key-collection>);
constant-namer("dylan_internal__lt_mutable__sequence_gt_", <mutable-sequence>);
constant-namer("dylan_internal__lt_not__found__error_gt_", <not-found-error>);
constant-namer("dylan_internal__lt_number_gt_", <number>);
constant-namer("dylan_internal__lt_object_gt_", <object>);
constant-namer("dylan_internal__lt_open__class_gt_", <open-class>);
constant-namer("dylan_internal__lt_pair_gt_", <pair>);
constant-namer("dylan_internal__lt_range_gt_", <range>);
constant-namer("dylan_internal__lt_rational_gt_", <rational>);
constant-namer("dylan_internal__lt_real_gt_", <real>);
constant-namer("dylan_internal__lt_repeated__slot__descriptor_gt_", <repeated-slot-descriptor>);
constant-namer("dylan_internal__lt_restart_gt_", <restart>);
constant-namer("dylan_internal__lt_sealed__class_gt_", <sealed-class>);
constant-namer("dylan_internal__lt_sequence_gt_", <sequence>);
constant-namer("dylan_internal__lt_serious__condition_gt_", <serious-condition>);
constant-namer("dylan_internal__lt_simple__condition_gt_", <simple-condition>);
constant-namer("dylan_internal__lt_simple__error_gt_", <simple-error>);
constant-namer("dylan_internal__lt_simple__object__vector_gt_", <simple-object-vector>);
constant-namer("dylan_internal__lt_simple__restart_gt_", <simple-restart>);
constant-namer("dylan_internal__lt_simple__warning_gt_", <simple-warning>);
constant-namer("dylan_internal__lt_single__float_gt_", <single-float>);
constant-namer("dylan_internal__lt_singleton_gt_", <singleton>);
constant-namer("dylan_internal__lt_slot__descriptor_gt_", <slot-descriptor>);
constant-namer("dylan_internal__lt_slot__method_gt_", <slot-method>);
constant-namer("dylan_internal__lt_small__integer_gt_", <small-integer>);
constant-namer("dylan_internal__lt_stretchy__vector_gt_", <stretchy-vector>);
constant-namer("dylan_internal__lt_string_gt_", <string>);
constant-namer("dylan_internal__lt_subscript__out__of__bounds__error_gt_", <subscript-out-of-bounds-error>);
constant-namer("dylan_internal__lt_symbol_gt_", <symbol>);
constant-namer("dylan_internal__lt_table_gt_", <table>);
constant-namer("dylan_internal__lt_type__error_gt_", <type-error>);
constant-namer("dylan_internal__lt_type_gt_", <type>);
constant-namer("dylan_internal__lt_unbound_gt_", <unbound>);
constant-namer("dylan_internal__lt_unicode__string_gt_", <unicode-string>);
constant-namer("dylan_internal__lt_value__class_gt_", <value-class>);
constant-namer("dylan_internal__lt_value__not__found__error_gt_", <value-not-found-error>);
constant-namer("dylan_internal__lt_vector_gt_", <vector>);
constant-namer("dylan_internal__lt_virtual__slot__descriptor_gt_", <virtual-slot-descriptor>);
constant-namer("dylan_internal__lt_warning_gt_", <warning>);
constant-namer("dylan_internal__pc_big__integer", %big-integer);
constant-namer("dylan_internal__pc_big__integer__data", %big-integer-data);
constant-namer("dylan_internal__pc_method__apply", %method-apply);
constant-namer("dylan_internal__pc_small__integer", %small-integer);
constant-namer("dylan_internal__pc_small__integer__data", %small-integer-data);
constant-namer("dylan_internal__pl_", \+);
constant-namer("dylan_internal__sg__eq_", \~=);
constant-namer("dylan_internal__sg__eq__eq_", \~==);
constant-namer("dylan_internal__sl_", \/);
constant-namer("dylan_internal__tm_", \*);
constant-namer("dylan_internal_abort", abort);
constant-namer("dylan_internal_abs", abs);
constant-namer("dylan_internal_add", add);
constant-namer("dylan_internal_add__method", add-method);
constant-namer("dylan_internal_add__new", add-new);
constant-namer("dylan_internal_add__new_ep_", add-new!);
constant-namer("dylan_internal_add_ep_", add!);
constant-namer("dylan_internal_all__superclasses", all-superclasses);
constant-namer("dylan_internal_allocate__instance", allocate-instance);
constant-namer("dylan_internal_alpha_qm_", alpha?);
constant-namer("dylan_internal_always", always);
constant-namer("dylan_internal_any_qm_", any?);
constant-namer("dylan_internal_applicable__method_qm_", applicable-method?);
constant-namer("dylan_internal_apply", apply);
constant-namer("dylan_internal_aref", aref);
constant-namer("dylan_internal_aref__setter", aref-setter);
constant-namer("dylan_internal_as", as);
constant-namer("dylan_internal_as__lowercase", as-lowercase);
constant-namer("dylan_internal_as__lowercase_ep_", as-lowercase!);
constant-namer("dylan_internal_as__uppercase", as-uppercase);
constant-namer("dylan_internal_as__uppercase_ep_", as-uppercase!);
constant-namer("dylan_internal_ash", ash);
constant-namer("dylan_internal_break", break);
constant-namer("dylan_internal_ceiling", ceiling);
constant-namer("dylan_internal_ceiling_sl_", ceiling/);
constant-namer("dylan_internal_cerror", cerror);
constant-namer("dylan_internal_check__type", check-type);
constant-namer("dylan_internal_choose", choose);
constant-namer("dylan_internal_choose__by", choose-by);
constant-namer("dylan_internal_class__for__copy", class-for-copy);
constant-namer("dylan_internal_class__slot__element", class-slot-element);
constant-namer("dylan_internal_class__slot__element__setter", class-slot-element-setter);
constant-namer("dylan_internal_class__slot__value", class-slot-value);
constant-namer("dylan_internal_class__slot__value__setter", class-slot-value-setter);
constant-namer("dylan_internal_clear_ep_", clear!);
constant-namer("dylan_internal_complement", complement);
constant-namer("dylan_internal_compose", compose);
constant-namer("dylan_internal_concatenate", concatenate);
constant-namer("dylan_internal_concatenate__as", concatenate-as);
constant-namer("dylan_internal_condition__format__arguments", condition-format-arguments);
constant-namer("dylan_internal_condition__format__string", condition-format-string);
constant-namer("dylan_internal_conjoin", conjoin);
constant-namer("dylan_internal_copy__sequence", copy-sequence);
constant-namer("dylan_internal_copy__state", copy-state);
constant-namer("dylan_internal_current__element", current-element);
constant-namer("dylan_internal_current__element__setter", current-element-setter);
constant-namer("dylan_internal_current__gc__state", current-gc-state);
constant-namer("dylan_internal_current__key", current-key);
constant-namer("dylan_internal_curry", curry);
constant-namer("dylan_internal_data", data);
constant-namer("dylan_internal_debug__name", debug-name);
constant-namer("dylan_internal_default__handler", default-handler);
constant-namer("dylan_internal_dimension", dimension);
constant-namer("dylan_internal_dimensions", dimensions);
constant-namer("dylan_internal_direct__subclasses", direct-subclasses);
constant-namer("dylan_internal_direct__superclasses", direct-superclasses);
constant-namer("dylan_internal_disjoin", disjoin);
constant-namer("dylan_internal_do", do);
constant-namer("dylan_internal_do__handlers", do-handlers);
constant-namer("dylan_internal_element", element);
constant-namer("dylan_internal_element__setter", element-setter);
constant-namer("dylan_internal_elements", elements);
constant-namer("dylan_internal_empty_qm_", empty?);
constant-namer("dylan_internal_ending", ending);
constant-namer("dylan_internal_error", error);
constant-namer("dylan_internal_even_qm_", even?);
constant-namer("dylan_internal_every_qm_", every?);
constant-namer("dylan_internal_fill_ep_", fill!);
constant-namer("dylan_internal_final__state", final-state);
constant-namer("dylan_internal_find__key", find-key);
constant-namer("dylan_internal_find__method", find-method);
constant-namer("dylan_internal_first", first);
constant-namer("dylan_internal_first__index", first-index);
constant-namer("dylan_internal_first__setter", first-setter);
constant-namer("dylan_internal_floor", floor);
constant-namer("dylan_internal_floor_sl_", floor/);
constant-namer("dylan_internal_function__arguments", function-arguments);
constant-namer("dylan_internal_gc__state", gc-state);
constant-namer("dylan_internal_gcd", gcd);
constant-namer("dylan_internal_generic__function__methods", generic-function-methods);
constant-namer("dylan_internal_grow_ep_", grow!);
constant-namer("dylan_internal_has__instances_qm_", has-instances?);
constant-namer("dylan_internal_head", head);
constant-namer("dylan_internal_head__setter", head-setter);
constant-namer("dylan_internal_id_qm_", id?);
constant-namer("dylan_internal_identity", identity);
constant-namer("dylan_internal_includes__key_qm_", includes-key?);
constant-namer("dylan_internal_index__for__key", index-for-key);
constant-namer("dylan_internal_init__function", init-function);
constant-namer("dylan_internal_init__keyword", init-keyword);
constant-namer("dylan_internal_init__value", init-value);
constant-namer("dylan_internal_init__value_qm_", init-value?);
constant-namer("dylan_internal_initial__state", initial-state);
constant-namer("dylan_internal_initialize", initialize);
constant-namer("dylan_internal_instance_qm_", instance?);
constant-namer("dylan_internal_integral_qm_", integral?);
constant-namer("dylan_internal_intersection", intersection);
constant-namer("dylan_internal_key__sequence", key-sequence);
constant-namer("dylan_internal_key__test", key-test);
constant-namer("dylan_internal_last", last);
constant-namer("dylan_internal_last__index", last-index);
constant-namer("dylan_internal_last__setter", last-setter);
constant-namer("dylan_internal_lcm", lcm);
constant-namer("dylan_internal_limited", limited);
constant-namer("dylan_internal_list", list);
constant-namer("dylan_internal_list_tm_", list*);
constant-namer("dylan_internal_log", log);
constant-namer("dylan_internal_logand", logand);
constant-namer("dylan_internal_logbit_qm_", logbit?);
constant-namer("dylan_internal_logior", logior);
constant-namer("dylan_internal_lognot", lognot);
constant-namer("dylan_internal_logxor", logxor);
constant-namer("dylan_internal_lowercase_qm_", lowercase?);
constant-namer("dylan_internal_make", make);
constant-namer("dylan_internal_make__handler", make-handler);
constant-namer("dylan_internal_map", map);
constant-namer("dylan_internal_map__as", map-as);
constant-namer("dylan_internal_map__into", map-into);
constant-namer("dylan_internal_mask", mask);
constant-namer("dylan_internal_max", max);
constant-namer("dylan_internal_member_qm_", member?);
constant-namer("dylan_internal_merge__hash__codes", merge-hash-codes);
constant-namer("dylan_internal_merge__hash__ids", merge-hash-ids);
constant-namer("dylan_internal_merge__hash__states", merge-hash-states);
constant-namer("dylan_internal_min", min);
constant-namer("dylan_internal_modulo", modulo);
constant-namer("dylan_internal_negative", negative);
constant-namer("dylan_internal_negative_qm_", negative?);
constant-namer("dylan_internal_next__state", next-state);
constant-namer("dylan_internal_not", not);
constant-namer("dylan_internal_object", object);
constant-namer("dylan_internal_object__class", object-class);
constant-namer("dylan_internal_object__hash", object-hash);
constant-namer("dylan_internal_odd_qm_", odd?);
constant-namer("dylan_internal_pair", pair);
constant-namer("dylan_internal_pop", pop);
constant-namer("dylan_internal_pop__last", pop-last);
constant-namer("dylan_internal_positive_qm_", positive?);
constant-namer("dylan_internal_preceding__specializer_qm_", preceding-specializer?);
constant-namer("dylan_internal_previous__state", previous-state);
constant-namer("dylan_internal_push", push);
constant-namer("dylan_internal_push__last", push-last);
constant-namer("dylan_internal_range", range);
constant-namer("dylan_internal_rank", rank);
constant-namer("dylan_internal_rcurry", rcurry);
constant-namer("dylan_internal_reduce", reduce);
constant-namer("dylan_internal_reduce1", reduce1);
constant-namer("dylan_internal_rehash__using_ep_", rehash-using!);
constant-namer("dylan_internal_rehash_ep_", rehash!);
constant-namer("dylan_internal_remainder", remainder);
constant-namer("dylan_internal_remove", remove);
constant-namer("dylan_internal_remove__duplicates", remove-duplicates);
constant-namer("dylan_internal_remove__duplicates_ep_", remove-duplicates!);
constant-namer("dylan_internal_remove__key_ep_", remove-key!);
constant-namer("dylan_internal_remove_ep_", remove!);
constant-namer("dylan_internal_replace__elements_ep_", replace-elements!);
constant-namer("dylan_internal_replace__subsequence_ep_", replace-subsequence!);
constant-namer("dylan_internal_required__init__keyword_qm_", required-init-keyword?);
constant-namer("dylan_internal_restart__query", restart-query);
constant-namer("dylan_internal_return__allowed_qm_", return-allowed?);
constant-namer("dylan_internal_return__description", return-description);
constant-namer("dylan_internal_return__query", return-query);
constant-namer("dylan_internal_reverse", reverse);
constant-namer("dylan_internal_reverse_ep_", reverse!);
constant-namer("dylan_internal_round", round);
constant-namer("dylan_internal_round_sl_", round/);
constant-namer("dylan_internal_row__major__index", row-major-index);
constant-namer("dylan_internal_second", second);
constant-namer("dylan_internal_second__setter", second-setter);
constant-namer("dylan_internal_shallow__copy", shallow-copy);
constant-namer("dylan_internal_shared__initialize", shared-initialize);
constant-namer("dylan_internal_signal", signal);
constant-namer("dylan_internal_singleton", singleton);
constant-namer("dylan_internal_size", size);
constant-namer("dylan_internal_size__setter", size-setter);
constant-namer("dylan_internal_slot__element", slot-element);
constant-namer("dylan_internal_slot__element__setter", slot-element-setter);
constant-namer("dylan_internal_slot__getter", slot-getter);
constant-namer("dylan_internal_slot__initialized_qm_", slot-initialized?);
constant-namer("dylan_internal_slot__owner", slot-owner);
constant-namer("dylan_internal_slot__setter", slot-setter);
constant-namer("dylan_internal_slot__type", slot-type);
constant-namer("dylan_internal_slot__value", slot-value);
constant-namer("dylan_internal_slot__value__setter", slot-value-setter);
constant-namer("dylan_internal_sort", sort);
constant-namer("dylan_internal_sort_ep_", sort!);
constant-namer("dylan_internal_sorted__applicable__methods", sorted-applicable-methods);
constant-namer("dylan_internal_specializers", specializers);
constant-namer("dylan_internal_specializers__setter", specializers-setter);
constant-namer("dylan_internal_step", step);
constant-namer("dylan_internal_subclass_qm_", subclass?);
constant-namer("dylan_internal_subsequence__position", subsequence-position);
constant-namer("dylan_internal_subtype_qm_", subtype?);
constant-namer("dylan_internal_table__protocol", table-protocol);
constant-namer("dylan_internal_tail", tail);
constant-namer("dylan_internal_tail__setter", tail-setter);
constant-namer("dylan_internal_tally", tally);
constant-namer("dylan_internal_third", third);
constant-namer("dylan_internal_third__setter", third-setter);
constant-namer("dylan_internal_truncate", truncate);
constant-namer("dylan_internal_truncate_sl_", truncate/);
constant-namer("dylan_internal_type__error__type", type-error-type);
constant-namer("dylan_internal_type__error__value", type-error-value);
constant-namer("dylan_internal_union", union);
constant-namer("dylan_internal_uppercase_qm_", uppercase?);
constant-namer("dylan_internal_values", values);
constant-namer("dylan_internal_vector", vector);
constant-namer("dylan_internal_void__element", void-element);
constant-namer("dylan_internal_zero_qm_", zero?);

