Module:    OLE-std-util
Copyright:    Original Code is Copyright (c) 1995-2004 Functional Objects, Inc.
              All rights reserved.
License:      Functional Objects Library Public License Version 1.0
Dual-license: GNU Lesser General Public License
Warranty:     Distributed WITHOUT WARRANTY OF ANY KIND

// This file is automatically generated from "olestd.h"; do not edit.


// Adapted from:
/*************************************************************************
**
**    OLE 2.0 Utilities
**
**    olestd.h
**
**    This file contains file contains data structure defintions,
**    function prototypes, constants, etc. for the common OLE 2.0
**    utilities.
**
**    These utilities include the following:
**          Debuging Assert/Verify macros
**          HIMETRIC conversion routines
**          reference counting debug support
**          OleStd API's for common compound-document app support
**
**    (c) 
**
*************************************************************************/
define constant $IDS-OLESTDNOCREATEFILE             =  700;
define constant $IDS-OLESTDNOOPENFILE               =  701;
define constant $IDS-OLESTDDISKFULL                 =  702;

define C-struct <INTERFACEIMPL>
  slot lpVtbl-value :: <Interface> /* IUnknownVtbl */;
  slot lpBack-value :: <LPVOID>;
  slot cRef-value  :: <C-int>;
  pointer-type-name: <LPINTERFACEIMPL>;
  c-name: "struct tagINTERFACEIMPL";
end C-struct <INTERFACEIMPL>;
define constant $STGM-DFRALL                        =
	logior($STGM-READWRITE, $STGM-TRANSACTED, $STGM-SHARE-DENY-WRITE);
define constant $STGM-DFALL                         =
	logior($STGM-READWRITE, $STGM-TRANSACTED, $STGM-SHARE-EXCLUSIVE);
define constant $STGM-SALL                          =
	logior($STGM-READWRITE, $STGM-SHARE-EXCLUSIVE);
define constant $OLESTDRETRYDELAY                   = 5000;
define constant $OLESTDCANCELRETRY                  =   -1;
define constant $DD-DEFSCROLLINTERVAL               =   50;
define constant $DD-DEFDRAGDELAY                    =  200;
define constant $DD-DEFDRAGMINDIST                  =    2;
define constant $OLESTDDROP-NONE                    =    0;
define constant $OLESTDDROP-DEFAULT                 =    1;
define constant $OLESTDDROP-NONDEFAULT              =    2;
define constant $HIMETRIC-PER-INCH                  = 2540;
define constant $PTS-PER-INCH                       =   72;

define C-function SetDCToAnisotropic
  parameter hDC        :: <HDC>;
  parameter lprcPhysical :: <LPRECT>;
  parameter lprcLogical :: <LPRECT>;
  parameter lprcWindowOld :: <LPRECT>;
  parameter lprcViewportOld :: <LPRECT>;
  result value :: <C-int>;
  c-name: "SetDCToAnisotropic", c-modifiers: "__stdcall";
end;

define C-function SetDCToDrawInHimetricRect
  parameter hdc1       :: <HDC>;
  parameter lprect2    :: <LPRECT>;
  parameter lprect3    :: <LPRECT>;
  parameter lprect4    :: <LPRECT>;
  parameter lprect5    :: <LPRECT>;
  result value :: <C-int>;
  c-name: "SetDCToDrawInHimetricRect", c-modifiers: "__stdcall";
end;

define C-function ResetOrigDC
  parameter hdc1       :: <HDC>;
  parameter int2       :: <C-int>;
  parameter lprect3    :: <LPRECT>;
  parameter lprect4    :: <LPRECT>;
  result value :: <C-int>;
  c-name: "ResetOrigDC", c-modifiers: "__stdcall";
end;

define C-function XformRectInPixelsToHimetric
  parameter hdc1       :: <HDC>;
  parameter lprect2    :: <LPRECT>;
  parameter lprect3    :: <LPRECT>;
  c-name: "XformRectInPixelsToHimetric", c-modifiers: "__stdcall";
end;

define C-function XformRectInHimetricToPixels
  parameter hdc1       :: <HDC>;
  parameter lprect2    :: <LPRECT>;
  parameter lprect3    :: <LPRECT>;
  c-name: "XformRectInHimetricToPixels", c-modifiers: "__stdcall";
end;

define C-function XformSizeInPixelsToHimetric
  parameter hdc1       :: <HDC>;
  parameter lpsizel2   :: <LPSIZEL>;
  parameter lpsizel3   :: <LPSIZEL>;
  c-name: "XformSizeInPixelsToHimetric", c-modifiers: "__stdcall";
end;

define C-function XformSizeInHimetricToPixels
  parameter hdc1       :: <HDC>;
  parameter lpsizel2   :: <LPSIZEL>;
  parameter lpsizel3   :: <LPSIZEL>;
  c-name: "XformSizeInHimetricToPixels", c-modifiers: "__stdcall";
end;

define C-function XformWidthInHimetricToPixels
  parameter hdc1       :: <HDC>;
  parameter int2       :: <C-int>;
  result value :: <C-int>;
  c-name: "XformWidthInHimetricToPixels", c-modifiers: "__stdcall";
end;

define C-function XformWidthInPixelsToHimetric
  parameter hdc1       :: <HDC>;
  parameter int2       :: <C-int>;
  result value :: <C-int>;
  c-name: "XformWidthInPixelsToHimetric", c-modifiers: "__stdcall";
end;

define C-function XformHeightInHimetricToPixels
  parameter hdc1       :: <HDC>;
  parameter int2       :: <C-int>;
  result value :: <C-int>;
  c-name: "XformHeightInHimetricToPixels", c-modifiers: "__stdcall";
end;

define C-function XformHeightInPixelsToHimetric
  parameter hdc1       :: <HDC>;
  parameter int2       :: <C-int>;
  result value :: <C-int>;
  c-name: "XformHeightInPixelsToHimetric", c-modifiers: "__stdcall";
end;

define C-function ParseCmdLine
  parameter lpstr1     :: <LPSTR>;
  output parameter out2 :: <LPBOOL>;
  parameter lpstr3     :: <LPSTR>;
  c-name: "ParseCmdLine", c-modifiers: "__stdcall";
end;

define C-function OleStdIsOleLink
  parameter lpUnk      :: <LPUNKNOWN>;
  result value :: <BOOL>;
  c-name: "OleStdIsOleLink", c-modifiers: "__stdcall";
end;

define C-function OleStdQueryInterface
  parameter lpUnk      :: <LPUNKNOWN>;
  parameter riid       :: <REFIID>;
  result value :: <LPUNKNOWN>;
  c-name: "OleStdQueryInterface", c-modifiers: "__stdcall";
end;

define C-function OleStdCreateRootStorage
  parameter lpszStgName :: <LPOLESTR>;
  parameter grfMode    :: <DWORD>;
  result value :: <LPSTORAGE>;
  c-name: "OleStdCreateRootStorage", c-modifiers: "__stdcall";
end;

define C-function OleStdOpenRootStorage
  parameter lpszStgName :: <LPOLESTR>;
  parameter grfMode    :: <DWORD>;
  result value :: <LPSTORAGE>;
  c-name: "OleStdOpenRootStorage", c-modifiers: "__stdcall";
end;

define C-function OleStdOpenOrCreateRootStorage
  parameter lpszStgName :: <LPOLESTR>;
  parameter grfMode    :: <DWORD>;
  result value :: <LPSTORAGE>;
  c-name: "OleStdOpenOrCreateRootStorage", c-modifiers: "__stdcall";
end;

define C-function OleStdCreateChildStorage
  parameter lpStg      :: <LPSTORAGE>;
  parameter lpszStgName :: <LPOLESTR>;
  result value :: <LPSTORAGE>;
  c-name: "OleStdCreateChildStorage", c-modifiers: "__stdcall";
end;

define C-function OleStdOpenChildStorage
  parameter lpStg      :: <LPSTORAGE>;
  parameter lpszStgName :: <LPOLESTR>;
  parameter grfMode    :: <DWORD>;
  result value :: <LPSTORAGE>;
  c-name: "OleStdOpenChildStorage", c-modifiers: "__stdcall";
end;

define C-function OleStdCommitStorage
  parameter lpStg      :: <LPSTORAGE>;
  result value :: <BOOL>;
  c-name: "OleStdCommitStorage", c-modifiers: "__stdcall";
end;

define C-function OleStdDestroyAllElements
  parameter lpStg      :: <LPSTORAGE>;
  result status :: <C-HRESULT>;
  c-name: "OleStdDestroyAllElements", c-modifiers: "__stdcall";
end;

define C-function OleStdCreateStorageOnHGlobal
  parameter hGlobal    :: <HANDLE>;
  parameter fDeleteOnRelease :: <BOOL>;
  parameter dwgrfMode  :: <DWORD>;
  result value :: <LPSTORAGE>;
  c-name: "OleStdCreateStorageOnHGlobal", c-modifiers: "__stdcall";
end;

define C-function OleStdCreateTempStorage
  parameter fUseMemory :: <BOOL>;
  parameter grfMode    :: <DWORD>;
  result value :: <LPSTORAGE>;
  c-name: "OleStdCreateTempStorage", c-modifiers: "__stdcall";
end;

define C-function OleStdDoConvert
  parameter lpStg      :: <LPSTORAGE>;
  parameter rClsidNew  :: <REFCLSID>;
  result status :: <C-HRESULT>;
  c-name: "OleStdDoConvert", c-modifiers: "__stdcall";
end;

define C-function OleStdGetTreatAsFmtUserType
  parameter rClsidApp  :: <REFCLSID>;
  parameter lpStg      :: <LPSTORAGE>;
  parameter lpclsid    :: <LPCLSID>;
  parameter lpcfFmt    :: <LPCLIPFORMAT>;
  output parameter lplpszType :: <LPLPOLESTR>;
  result value :: <BOOL>;
  c-name: "OleStdGetTreatAsFmtUserType", c-modifiers: "__stdcall";
end;

define C-function OleStdDoTreatAsClass
  parameter lpszUserType :: <LPOLESTR>;
  parameter rclsid     :: <REFCLSID>;
  parameter rclsidNew  :: <REFCLSID>;
  result status :: <C-HRESULT>;
  c-name: "OleStdDoTreatAsClass", c-modifiers: "__stdcall";
end;

define C-function OleStdSetupAdvises
  parameter lpOleObject :: <LPOLEOBJECT>;
  parameter dwDrawAspect :: <DWORD>;
  parameter lpszContainerApp :: <LPOLESTR>;
  parameter lpszContainerObj :: <LPOLESTR>;
  parameter lpAdviseSink :: <LPADVISESINK>;
  parameter fCreate    :: <BOOL>;
  result value :: <BOOL>;
  c-name: "OleStdSetupAdvises", c-modifiers: "__stdcall";
end;

define C-function OleStdSwitchDisplayAspect
  parameter lpOleObj   :: <LPOLEOBJECT>;
  output parameter lpdwCurAspect :: <LPDWORD>;
  parameter dwNewAspect :: <DWORD>;
  parameter hMetaPict  :: <HGLOBAL>;
  parameter fDeleteOldAspect :: <BOOL>;
  parameter fSetupViewAdvise :: <BOOL>;
  parameter lpAdviseSink :: <LPADVISESINK>;
  output parameter lpfMustUpdate :: <LPBOOL>;
  result status :: <C-HRESULT>;
  c-name: "OleStdSwitchDisplayAspect", c-modifiers: "__stdcall";
end;

define C-function OleStdSetIconInCache
  parameter lpOleObj   :: <LPOLEOBJECT>;
  parameter hMetaPict  :: <HGLOBAL>;
  result status :: <C-HRESULT>;
  c-name: "OleStdSetIconInCache", c-modifiers: "__stdcall";
end;

define C-function OleStdGetData
  parameter lpDataObj  :: <LPDATAOBJECT>;
  parameter cfFormat   :: <CLIPFORMAT>;
  parameter lpTargetDevice :: <LPDVTARGETDEVICE>;
  parameter dwAspect   :: <DWORD>;
  parameter lpMedium   :: <LPSTGMEDIUM>;
  result value :: <HGLOBAL>;
  c-name: "OleStdGetData", c-modifiers: "__stdcall";
end;

define C-function OleStdMarkPasteEntryList
  parameter lpSrcDataObj :: <LPDATAOBJECT>;
  parameter lpPriorityList :: <LPOLEUIPASTEENTRY>;
  parameter cEntries   :: <C-int>;
  c-name: "OleStdMarkPasteEntryList", c-modifiers: "__stdcall";
end;

define C-function OleStdGetPriorityClipboardFormat
  parameter lpSrcDataObj :: <LPDATAOBJECT>;
  parameter lpPriorityList :: <LPOLEUIPASTEENTRY>;
  parameter cEntries   :: <C-int>;
  result value :: <C-int>;
  c-name: "OleStdGetPriorityClipboardFormat",
	c-modifiers: "__stdcall";
end;

define C-function OleStdIsDuplicateFormat
  parameter lpFmtEtc   :: <LPFORMATETC>;
  parameter arrFmtEtc  :: <LPFORMATETC>;
  parameter nFmtEtc    :: <C-int>;
  result value :: <BOOL>;
  c-name: "OleStdIsDuplicateFormat", c-modifiers: "__stdcall";
end;

define C-function OleStdRegisterAsRunning
  parameter lpUnk      :: <LPUNKNOWN>;
  parameter lpmkFull   :: <LPMONIKER>;
  parameter lpdwRegister :: <LPDWORD>;
  c-name: "OleStdRegisterAsRunning", c-modifiers: "__stdcall";
end;

define C-function OleStdRevokeAsRunning
  parameter lpdwRegister :: <LPDWORD>;
  c-name: "OleStdRevokeAsRunning", c-modifiers: "__stdcall";
end;

define C-function OleStdNoteFileChangeTime
  parameter lpszFileName :: <LPOLESTR>;
  parameter dwRegister :: <DWORD>;
  c-name: "OleStdNoteFileChangeTime", c-modifiers: "__stdcall";
end;

define C-function OleStdNoteObjectChangeTime
  parameter dwRegister :: <DWORD>;
  c-name: "OleStdNoteObjectChangeTime", c-modifiers: "__stdcall";
end;

define C-function OleStdGetOleObjectData
  parameter lpPStg     :: <LPPERSISTSTORAGE>;
  parameter lpformatetc :: <LPFORMATETC>;
  parameter lpMedium   :: <LPSTGMEDIUM>;
  parameter fUseMemory :: <BOOL>;
  result status :: <C-HRESULT>;
  c-name: "OleStdGetOleObjectData", c-modifiers: "__stdcall";
end;

define C-function OleStdGetLinkSourceData
  parameter lpmk       :: <LPMONIKER>;
  parameter lpClsID    :: <LPCLSID>;
  parameter lpformatetc :: <LPFORMATETC>;
  parameter lpMedium   :: <LPSTGMEDIUM>;
  result status :: <C-HRESULT>;
  c-name: "OleStdGetLinkSourceData", c-modifiers: "__stdcall";
end;

define C-function OleStdGetObjectDescriptorData
  parameter clsid      :: <CLSID>;
  parameter dwAspect   :: <DWORD>;
  parameter sizel      :: <SIZEL>;
  parameter pointl     :: <POINTL>;
  parameter dwStatus   :: <DWORD>;
  parameter lpszFullUserTypeName :: <LPOLESTR>;
  parameter lpszSrcOfCopy :: <LPOLESTR>;
  result value :: <HGLOBAL>;
  c-name: "OleStdGetObjectDescriptorData", c-modifiers: "__stdcall";
end;

define C-function OleStdGetObjectDescriptorDataFromOleObject
  parameter lpOleObj   :: <LPOLEOBJECT>;
  parameter lpszSrcOfCopy :: <LPOLESTR>;
  parameter dwAspect   :: <DWORD>;
  parameter pointl     :: <POINTL>;
  parameter lpSizelHim :: <LPSIZEL>;
  result value :: <HGLOBAL>;
  c-name: "OleStdGetObjectDescriptorDataFromOleObject",
	c-modifiers: "__stdcall";
end;

define C-function OleStdFillObjectDescriptorFromData
  parameter lpDataObject :: <LPDATAOBJECT>;
  parameter lpmedium   :: <LPSTGMEDIUM>;
  parameter lpcfFmt    :: <LPCLIPFORMAT>;
  result value :: <HGLOBAL>;
  c-name: "OleStdFillObjectDescriptorFromData",
	c-modifiers: "__stdcall";
end;

define C-function OleStdGetMetafilePictFromOleObject
  parameter lpOleObj   :: <LPOLEOBJECT>;
  parameter dwDrawAspect :: <DWORD>;
  parameter lpSizelHim :: <LPSIZEL>;
  parameter ptd        :: <LPDVTARGETDEVICE>;
  result value :: <HANDLE>;
  c-name: "OleStdGetMetafilePictFromOleObject",
	c-modifiers: "__stdcall";
end;

define C-function OleStdCreateTempFileMoniker
  parameter lpszPrefixString :: <LPOLESTR>;
  parameter lpuUnique  :: <LPUINT>;
  parameter lpszName   :: <LPOLESTR>;
  output parameter lplpmk :: <LPLPMONIKER>;
  c-name: "OleStdCreateTempFileMoniker", c-modifiers: "__stdcall";
end;

define C-function OleStdGetFirstMoniker
  parameter lpmk       :: <LPMONIKER>;
  result value :: <LPMONIKER>;
  c-name: "OleStdGetFirstMoniker", c-modifiers: "__stdcall";
end;

define C-function OleStdGetLenFilePrefixOfMoniker
  parameter lpmk       :: <LPMONIKER>;
  result value :: <ULONG>;
  c-name: "OleStdGetLenFilePrefixOfMoniker",
	c-modifiers: "__stdcall";
end;

define C-function OleStdMkParseDisplayName
  parameter rClsid     :: <REFCLSID>;
  parameter lpbc       :: <LPBC>;
  parameter lpszUserName :: <LPOLESTR>;
  parameter lpchEaten  :: <LPULONG>;
  output parameter lplpmk :: <LPLPMONIKER>;
  result status :: <C-HRESULT>;
  c-name: "OleStdMkParseDisplayName", c-modifiers: "__stdcall";
end;

define C-function OleStdMalloc
  parameter ulSize     :: <ULONG>;
  result value :: <LPVOID>;
  c-name: "OleStdMalloc", c-modifiers: "__stdcall";
end;

define C-function OleStdRealloc
  parameter pmem       :: <LPVOID>;
  parameter ulSize     :: <ULONG>;
  result value :: <LPVOID>;
  c-name: "OleStdRealloc", c-modifiers: "__stdcall";
end;

define C-function OleStdFree
  parameter pmem       :: <LPVOID>;
  c-name: "OleStdFree", c-modifiers: "__stdcall";
end;

define C-function OleStdGetSize
  parameter pmem       :: <LPVOID>;
  result value :: <ULONG>;
  c-name: "OleStdGetSize", c-modifiers: "__stdcall";
end;

define C-function OleStdFreeString
  parameter lpsz       :: <LPOLESTR>;
  parameter lpMalloc   :: <LPMALLOC>;
  c-name: "OleStdFreeString", c-modifiers: "__stdcall";
end;

define C-function OleStdCopyString
  parameter lpszSrc    :: <LPOLESTR>;
  parameter lpMalloc   :: <LPMALLOC>;
  result value :: <LPOLESTR>;
  c-name: "OleStdCopyString", c-modifiers: "__stdcall";
end;

define C-function OleStdGetItemToken
  parameter lpszSrc    :: <LPOLESTR>;
  parameter lpszDst    :: <LPOLESTR>;
  parameter nMaxChars  :: <C-int>;
  result value :: <ULONG>;
  c-name: "OleStdGetItemToken", c-modifiers: "__stdcall";
end;

define C-function OleStdIconLabelTextOut
  parameter hDC        :: <HDC>;
  parameter hFont      :: <HFONT>;
  parameter nXStart    :: <C-int>;
  parameter nYStart    :: <C-int>;
  parameter fuOptions  :: <UINT>;
  parameter lpRect     :: <LPRECT>;
  parameter lpszString :: <LPOLESTR>;
  parameter cchString  :: <UINT>;
  parameter lpDX       :: <C-int*>;
  result value :: <UINT>;
  c-name: "OleStdIconLabelTextOut", c-modifiers: "__stdcall";
end;

define C-function OleStdGetAuxUserType
  parameter rclsid     :: <REFCLSID>;
  parameter wAuxUserType :: <WORD>;
  parameter lpszAuxUserType :: <LPOLESTR>;
  parameter cch        :: <C-int>;
  parameter hKey       :: <HKEY>;
  result value :: <UINT>;
  c-name: "OleStdGetAuxUserType", c-modifiers: "__stdcall";
end;

define C-function OleStdGetUserTypeOfClass
  parameter rclsid     :: <REFCLSID>;
  parameter lpszUserType :: <LPOLESTR>;
  parameter cch        :: <UINT>;
  parameter hKey       :: <HKEY>;
  result value :: <UINT>;
  c-name: "OleStdGetUserTypeOfClass", c-modifiers: "__stdcall";
end;

define C-function OleStdGetMiscStatusOfClass
  parameter refclsid1  :: <REFCLSID>;
  parameter hkey2      :: <HKEY>;
  parameter lpdword3   :: <LPDWORD>;
  result value :: <BOOL>;
  c-name: "OleStdGetMiscStatusOfClass", c-modifiers: "__stdcall";
end;

define C-function OleStdGetDefaultFileFormatOfClass
  parameter rclsid     :: <REFCLSID>;
  parameter hKey       :: <HKEY>;
  result value :: <CLIPFORMAT>;
  c-name: "OleStdGetDefaultFileFormatOfClass",
	c-modifiers: "__stdcall";
end;

define C-function OleStdInitVtbl
  parameter lpVtbl     :: <LPVOID>;
  parameter nSizeOfVtbl :: <UINT>;
  c-name: "OleStdInitVtbl", c-modifiers: "__stdcall";
end;

define C-function OleStdCheckVtbl
  parameter lpVtbl     :: <LPVOID>;
  parameter nSizeOfVtbl :: <UINT>;
  parameter lpszIface  :: <LPOLESTR>;
  result value :: <BOOL>;
  c-name: "OleStdCheckVtbl", c-modifiers: "__stdcall";
end;

define C-function OleStdVerifyRelease
  parameter lpUnk      :: <LPUNKNOWN>;
  parameter lpszMsg    :: <LPOLESTR>;
  result value :: <ULONG>;
  c-name: "OleStdVerifyRelease", c-modifiers: "__stdcall";
end;

define C-function OleStdRelease
  parameter lpUnk      :: <LPUNKNOWN>;
  result value :: <ULONG>;
  c-name: "OleStdRelease", c-modifiers: "__stdcall";
end;

define C-function OleStdCreateDC
  parameter ptd        :: <LPDVTARGETDEVICE>;
  result value :: <HDC>;
  c-name: "OleStdCreateDC", c-modifiers: "__stdcall";
end;

define C-function OleStdCreateIC
  parameter ptd        :: <LPDVTARGETDEVICE>;
  result value :: <HDC>;
  c-name: "OleStdCreateIC", c-modifiers: "__stdcall";
end;

define C-function OleStdCreateTargetDevice
  parameter lpPrintDlg :: <LPPRINTDLG>;
  result value :: <LPDVTARGETDEVICE>;
  c-name: "OleStdCreateTargetDevice", c-modifiers: "__stdcall";
end;

define C-function OleStdDeleteTargetDevice
  parameter ptd        :: <LPDVTARGETDEVICE>;
  result value :: <BOOL>;
  c-name: "OleStdDeleteTargetDevice", c-modifiers: "__stdcall";
end;

define C-function OleStdCopyTargetDevice
  parameter ptdSrc     :: <LPDVTARGETDEVICE>;
  result value :: <LPDVTARGETDEVICE>;
  c-name: "OleStdCopyTargetDevice", c-modifiers: "__stdcall";
end;

define C-function OleStdCopyFormatEtc
  parameter petcDest   :: <LPFORMATETC>;
  parameter petcSrc    :: <LPFORMATETC>;
  result value :: <BOOL>;
  c-name: "OleStdCopyFormatEtc", c-modifiers: "__stdcall";
end;

define C-function OleDbgPrint
  parameter nDbgLvl    :: <C-int>;
  parameter lpszPrefix :: <LPSTR>;
  parameter lpszMsg    :: <LPSTR>;
  parameter nIndent    :: <C-int>;
  c-name: "OleDbgPrint", c-modifiers: "__stdcall";
end;

define C-function OleDbgPrintAlways
  parameter lpszPrefix :: <LPSTR>;
  parameter lpszMsg    :: <LPSTR>;
  parameter nIndent    :: <C-int>;
  c-name: "OleDbgPrintAlways", c-modifiers: "__stdcall";
end;

define C-function OleDbgSetDbgLevel
  parameter nDbgLvl    :: <C-int>;
  c-name: "OleDbgSetDbgLevel", c-modifiers: "__stdcall";
end;

define C-function OleDbgGetDbgLevel
  result value :: <C-int>;
  c-name: "OleDbgGetDbgLevel", c-modifiers: "__stdcall";
end;

define C-function OleDbgIndent
  parameter n          :: <C-int>;
  c-name: "OleDbgIndent", c-modifiers: "__stdcall";
end;

define C-function OleDbgPrintRefCnt
  parameter nDbgLvl    :: <C-int>;
  parameter lpszPrefix :: <LPSTR>;
  parameter lpszMsg    :: <LPSTR>;
  parameter lpObj      :: <LPVOID>;
  parameter refcnt     :: <ULONG>;
  c-name: "OleDbgPrintRefCnt", c-modifiers: "__stdcall";
end;

define C-function OleDbgPrintRefCntAlways
  parameter lpszPrefix :: <LPSTR>;
  parameter lpszMsg    :: <LPSTR>;
  parameter lpObj      :: <LPVOID>;
  parameter refcnt     :: <ULONG>;
  c-name: "OleDbgPrintRefCntAlways", c-modifiers: "__stdcall";
end;

define C-function OleDbgPrintRect
  parameter nDbgLvl    :: <C-int>;
  parameter lpszPrefix :: <LPSTR>;
  parameter lpszMsg    :: <LPSTR>;
  parameter lpRect     :: <LPRECT>;
  c-name: "OleDbgPrintRect", c-modifiers: "__stdcall";
end;

define C-function OleDbgPrintRectAlways
  parameter lpszPrefix :: <LPSTR>;
  parameter lpszMsg    :: <LPSTR>;
  parameter lpRect     :: <LPRECT>;
  c-name: "OleDbgPrintRectAlways", c-modifiers: "__stdcall";
end;

define C-function OleDbgPrintScodeAlways
  parameter lpszPrefix :: <LPSTR>;
  parameter lpszMsg    :: <LPSTR>;
  parameter sc         :: <C-HRESULT>;
  c-name: "OleDbgPrintScodeAlways", c-modifiers: "__stdcall";
end;

define C-function OleStdEnumFmtEtc-Create
  parameter nCount     :: <ULONG>;
  parameter lpEtc      :: <LPFORMATETC>;
  result value :: <LPENUMFORMATETC>;
  c-name: "OleStdEnumFmtEtc_Create", c-modifiers: "__stdcall";
end;

define C-function OleStdEnumStatData-Create
  parameter nCount     :: <ULONG>;
  parameter lpStat     :: <LPSTATDATA>;
  result value :: <LPENUMSTATDATA>;
  c-name: "OleStdEnumStatData_Create", c-modifiers: "__stdcall";
end;

define C-function OleStdCopyStatData
  parameter pDest      :: <LPSTATDATA>;
  parameter pSrc       :: <LPSTATDATA>;
  result value :: <BOOL>;
  c-name: "OleStdCopyStatData", c-modifiers: "__stdcall";
end;

define C-function OleStdCreateStandardPalette
  result value :: <HPALETTE>;
  c-name: "OleStdCreateStandardPalette", c-modifiers: "__stdcall";
end;
define constant $UPDATELINKS-STARTDELAY             = 2000;

define C-function OleStdInitialize
  parameter hInstance  :: <HINSTANCE>;
  result value :: <BOOL>;
  c-name: "OleStdInitialize", c-modifiers: "__stdcall";
end;

define C-function OleStdUninitialize
  c-name: "OleStdUninitialize", c-modifiers: "__stdcall";
end;

define C-function OleUICanUnloadNow
  result status :: <C-HRESULT>;
  c-name: "OleUICanUnloadNow", c-modifiers: "__stdcall";
end;
define constant $IDD-FILEOPEN                       = 32253;
define constant $IDS-OLE2UIUNKNOWN                  = 32300;
define constant $IDS-OLE2UILINK                     = 32301;
define constant $IDS-OLE2UIOBJECT                   = 32302;
define constant $IDS-OLE2UIEDIT                     = 32303;
define constant $IDS-OLE2UICONVERT                  = 32304;
define constant $IDS-OLE2UIEDITLINKCMD-1VERB        = 32305;
define constant $IDS-OLE2UIEDITOBJECTCMD-1VERB      = 32306;
define constant $IDS-OLE2UIEDITLINKCMD-NVERB        = 32307;
define constant $IDS-OLE2UIEDITOBJECTCMD-NVERB      = 32308;
define constant $IDS-OLE2UIEDITNOOBJCMD             = 32309;
define constant $IDS-DEFICONLABEL                   = 32310;
define constant $IDS-OLE2UIPASTELINKEDTYPE          = 32311;
define constant $IDS-FILTERS                        = 32320;
define constant $IDS-ICONFILTERS                    = 32321;
define constant $IDS-BROWSE                         = 32322;
define constant $IDB-RESULTSEGA                     = 32325;
define constant $IDB-RESULTSVGA                     = 32326;
define constant $IDB-RESULTSHIRESVGA                = 32327;
define constant <LPFNOLEUIHOOK> = <C-function-pointer>;
define constant $ID-OLEUIHELP                       =   99;
define constant $ID-STATIC                          =   98;
define constant $OLEUI-CCHKEYMAX                    =  256;
define constant $OLEUI-CCHVERBMAX                   =   32;
define constant $OLEUI-OBJECTMENUMAX                =  256;
define constant $OLEUI-CCHPATHMAX                   =  256;
define constant $OLEUI-CCHFILEMAX                   =   13;
define constant $OLEUI-CCHLABELMAX                  =   40;
define constant $OLEUI-CCHCLSIDSTRING               =   39;

define C-function OleUIMetafilePictIconFree
  parameter hglobal1   :: <HGLOBAL>;
  c-name: "OleUIMetafilePictIconFree", c-modifiers: "__stdcall";
end;

define C-function OleUIMetafilePictIconDraw
  parameter hdc1       :: <HDC>;
  parameter lprect2    :: <LPRECT>;
  parameter hglobal3   :: <HGLOBAL>;
  parameter bool4      :: <BOOL>;
  result value :: <BOOL>;
  c-name: "OleUIMetafilePictIconDraw", c-modifiers: "__stdcall";
end;

define C-function OleUIMetafilePictExtractLabel
  parameter hglobal1   :: <HGLOBAL>;
  parameter lpolestr2  :: <LPOLESTR>;
  parameter uint3      :: <UINT>;
  parameter lpdword4   :: <LPDWORD>;
  result value :: <UINT>;
  c-name: "OleUIMetafilePictExtractLabel", c-modifiers: "__stdcall";
end;

define C-function OleUIMetafilePictExtractIcon
  parameter hglobal1   :: <HGLOBAL>;
  result value :: <HICON>;
  c-name: "OleUIMetafilePictExtractIcon", c-modifiers: "__stdcall";
end;

define C-function OleUIMetafilePictExtractIconSource
  parameter hglobal1   :: <HGLOBAL>;
  parameter lpolestr2  :: <LPOLESTR>;
  parameter lpuint3    :: <LPUINT>;
  result value :: <BOOL>;
  c-name: "OleUIMetafilePictExtractIconSource",
	c-modifiers: "__stdcall";
end;
define constant $ID-IO-CREATENEW                    = 2100;
define constant $ID-IO-CREATEFROMFILE               = 2101;
define constant $ID-IO-LINKFILE                     = 2102;
define constant $ID-IO-OBJECTTYPELIST               = 2103;
define constant $ID-IO-DISPLAYASICON                = 2104;
define constant $ID-IO-CHANGEICON                   = 2105;
define constant $ID-IO-FILE                         = 2106;
define constant $ID-IO-FILEDISPLAY                  = 2107;
define constant $ID-IO-RESULTIMAGE                  = 2108;
define constant $ID-IO-RESULTTEXT                   = 2109;
define constant $ID-IO-ICONDISPLAY                  = 2110;
define constant $ID-IO-OBJECTTYPETEXT               = 2111;
define constant $ID-IO-FILETEXT                     = 2112;
define constant $ID-IO-FILETYPE                     = 2113;
define constant $IDS-IORESULTNEW                    = 32400;
define constant $IDS-IORESULTNEWICON                = 32401;
define constant $IDS-IORESULTFROMFILE1              = 32402;
define constant $IDS-IORESULTFROMFILE2              = 32403;
define constant $IDS-IORESULTFROMFILEICON2          = 32404;
define constant $IDS-IORESULTLINKFILE1              = 32405;
define constant $IDS-IORESULTLINKFILE2              = 32406;
define constant $IDS-IORESULTLINKFILEICON1          = 32407;
define constant $IDS-IORESULTLINKFILEICON2          = 32408;
define constant $ID-PS-PASTE                        =  500;
define constant $ID-PS-PASTELINK                    =  501;
define constant $ID-PS-SOURCETEXT                   =  502;
define constant $ID-PS-PASTELIST                    =  503;
define constant $ID-PS-PASTELINKLIST                =  504;
define constant $ID-PS-DISPLAYLIST                  =  505;
define constant $ID-PS-DISPLAYASICON                =  506;
define constant $ID-PS-ICONDISPLAY                  =  507;
define constant $ID-PS-CHANGEICON                   =  508;
define constant $ID-PS-RESULTIMAGE                  =  509;
define constant $ID-PS-RESULTTEXT                   =  510;
define constant $ID-PS-RESULTGROUP                  =  511;
define constant $ID-PS-STXSOURCE                    =  512;
define constant $ID-PS-STXAS                        =  513;
define constant $IDS-PSPASTEDATA                    = 32410;
define constant $IDS-PSPASTEOBJECT                  = 32411;
define constant $IDS-PSPASTEOBJECTASICON            = 32412;
define constant $IDS-PSPASTELINKDATA                = 32413;
define constant $IDS-PSPASTELINKOBJECT              = 32414;
define constant $IDS-PSPASTELINKOBJECTASICON        = 32415;
define constant $IDS-PSNONOLE                       = 32416;
define constant $IDS-PSUNKNOWNTYPE                  = 32417;
define constant $IDS-PSUNKNOWNSRC                   = 32418;
define constant $IDS-PSUNKNOWNAPP                   = 32419;
define constant $ID-EL-CHANGESOURCE                 =  201;
define constant $ID-EL-AUTOMATIC                    =  202;
define constant $ID-EL-CLOSE                        =  208;
define constant $ID-EL-CANCELLINK                   =  209;
define constant $ID-EL-UPDATENOW                    =  210;
define constant $ID-EL-OPENSOURCE                   =  211;
define constant $ID-EL-MANUAL                       =  212;
define constant $ID-EL-LINKSOURCE                   =  216;
define constant $ID-EL-LINKTYPE                     =  217;
define constant $ID-EL-UPDATE                       =  218;
define constant $ID-EL-NULL                         =   -1;
define constant $ID-EL-LINKSLISTBOX                 =  206;
define constant $ID-EL-COL1                         =  220;
define constant $ID-EL-COL2                         =  221;
define constant $ID-EL-COL3                         =  222;
define constant $ID-GROUP                           =  120;
define constant $ID-CURRENT                         =  121;
define constant $ID-CURRENTICON                     =  122;
define constant $ID-DEFAULT                         =  123;
define constant $ID-DEFAULTICON                     =  124;
define constant $ID-FROMFILE                        =  125;
define constant $ID-FROMFILEEDIT                    =  126;
define constant $ID-ICONLIST                        =  127;
define constant $ID-LABEL                           =  128;
define constant $ID-LABELEDIT                       =  129;
define constant $ID-BROWSE                          =  130;
define constant $ID-RESULTICON                      =  132;
define constant $ID-RESULTLABEL                     =  133;
define constant $IDS-CINOICONSINFILE                = 32430;
define constant $IDS-CIINVALIDFILE                  = 32431;
define constant $IDS-CIFILEACCESS                   = 32432;
define constant $IDS-CIFILESHARE                    = 32433;
define constant $IDS-CIFILEOPENFAIL                 = 32434;
define constant $IDCV-OBJECTTYPE                    =  150;
define constant $IDCV-DISPLAYASICON                 =  152;
define constant $IDCV-CHANGEICON                    =  153;
define constant $IDCV-ACTIVATELIST                  =  154;
define constant $IDCV-CONVERTTO                     =  155;
define constant $IDCV-ACTIVATEAS                    =  156;
define constant $IDCV-RESULTTEXT                    =  157;
define constant $IDCV-CONVERTLIST                   =  158;
define constant $IDCV-ICON                          =  159;
define constant $IDCV-ICONLABEL1                    =  160;
define constant $IDCV-ICONLABEL2                    =  161;
define constant $IDCV-STXCURTYPE                    =  162;
define constant $IDCV-GRPRESULT                     =  163;
define constant $IDCV-STXCONVERTTO                  =  164;
define constant $IDS-CVRESULTCONVERTLINK            = 32440;
define constant $IDS-CVRESULTCONVERTTO              = 32441;
define constant $IDS-CVRESULTNOCHANGE               = 32442;
define constant $IDS-CVRESULTDISPLAYASICON          = 32443;
define constant $IDS-CVRESULTACTIVATEAS             = 32444;
define constant $IDS-CVRESULTACTIVATEDIFF           = 32445;
define constant $IDBZ-RETRY                         =  600;
define constant $IDBZ-ICON                          =  601;
define constant $IDBZ-MESSAGE1                      =  602;
define constant $IDBZ-SWITCHTO                      =  604;
define constant $IDS-BZRESULTTEXTBUSY               = 32447;
define constant $IDS-BZRESULTTEXTNOTRESPONDING      = 32448;
define constant $IDS-LINK-AUTO                      = 32450;
define constant $IDS-LINK-MANUAL                    = 32451;
define constant $IDS-LINK-UNKNOWN                   = 32452;
define constant $IDS-LINKS                          = 32453;
define constant $IDS-FAILED                         = 32454;
define constant $IDS-CHANGESOURCE                   = 32455;
define constant $IDS-INVALIDSOURCE                  = 32456;
define constant $IDS-ERR-GETLINKSOURCE              = 32457;
define constant $IDS-ERR-GETLINKUPDATEOPTIONS       = 32458;
define constant $IDS-ERR-ADDSTRING                  = 32459;
define constant $IDS-CHANGEADDITIONALLINKS          = 32460;
define constant $IDS-CLOSE                          = 32461;
define constant $ID-PU-LINKS                        =  900;
define constant $ID-PU-TEXT                         =  901;
define constant $ID-PU-CONVERT                      =  902;
define constant $ID-PU-BROWSE                       =  904;
define constant $ID-PU-METER                        =  905;
define constant $ID-PU-PERCENT                      =  906;
define constant $ID-PU-STOP                         =  907;
define constant $ID-DUMMY                           =  999;
define constant $OLEUI-HANDLES-USEINVERSE           = #x00000001;
define constant $OLEUI-HANDLES-NOBORDER             = #x00000002;
define constant $OLEUI-HANDLES-INSIDE               = #x00000004;
define constant $OLEUI-HANDLES-OUTSIDE              = #x00000008;
define constant $OLEUI-SHADE-FULLRECT               =    1;
define constant $OLEUI-SHADE-BORDERIN               =    2;
define constant $OLEUI-SHADE-BORDEROUT              =    3;

define C-function OleUIDrawHandles
  parameter lpRect     :: <LPRECT>;
  parameter hdc        :: <HDC>;
  parameter dwFlags    :: <DWORD>;
  parameter cSize      :: <UINT>;
  parameter fDraw      :: <BOOL>;
  c-name: "OleUIDrawHandles", c-modifiers: "__stdcall";
end;

define C-function OleUIDrawShading
  parameter lpRect     :: <LPRECT>;
  parameter hdc        :: <HDC>;
  parameter dwFlags    :: <DWORD>;
  parameter cWidth     :: <UINT>;
  c-name: "OleUIDrawShading", c-modifiers: "__stdcall";
end;

define C-function OleUIShowObject
  parameter lprc       :: <LPCRECT>;
  parameter hdc        :: <HDC>;
  parameter fIsLink    :: <BOOL>;
  c-name: "OleUIShowObject", c-modifiers: "__stdcall";
end;
define constant $DEFAULT-HATCHBORDER-WIDTH          =    4;

define C-function RegisterHatchWindowClass
  parameter hInst      :: <HINSTANCE>;
  result value :: <BOOL>;
  c-name: "RegisterHatchWindowClass", c-modifiers: "__stdcall";
end;

define C-function CreateHatchWindow
  parameter hWndParent :: <HWND>;
  parameter hInst      :: <HINSTANCE>;
  result value :: <HWND>;
  c-name: "CreateHatchWindow", c-modifiers: "__stdcall";
end;

define C-function GetHatchWidth
  parameter hWndHatch  :: <HWND>;
  result value :: <UINT>;
  c-name: "GetHatchWidth", c-modifiers: "__stdcall";
end;

define C-function GetHatchRect
  parameter hWndHatch  :: <HWND>;
  parameter lpHatchRect :: <LPRECT>;
  c-name: "GetHatchRect", c-modifiers: "__stdcall";
end;

define C-function SetHatchRect
  parameter hWndHatch  :: <HWND>;
  parameter lprcHatchRect :: <LPRECT>;
  c-name: "SetHatchRect", c-modifiers: "__stdcall";
end;

define C-function SetHatchWindowSize
  parameter hWndHatch  :: <HWND>;
  parameter lprcIPObjRect :: <LPRECT>;
  parameter lprcClipRect :: <LPRECT>;
  parameter lpptOffset :: <LPPOINT>;
  c-name: "SetHatchWindowSize", c-modifiers: "__stdcall";
end;
define constant $OLEUI-VERSION-MAGIC                = #x4D42;

