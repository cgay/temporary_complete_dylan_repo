module: gtk-internal

define inline-only function log-entry(c-function-name, #rest args) => ();
  format-out("entering %s %=", c-function-name, args);
end;
define inline-only function log-exit(c-function-name, #rest results) => ();
  format-out(" => %=\n", results);
end;

define constant <gsize> = <C-unsigned-int>;

define constant <GType> = <gsize>;

define C-struct <_GTypeClass>
  slot GTypeClass-g-type :: <C-unsigned-int>;
end;

define C-pointer-type <GTypeClass> => <_GTypeClass>;

define constant <gpointer> = <C-void*>;

define C-struct <_GSList>
  slot GSList-data :: <C-void*>;
  slot GSList-next :: <GSList>;
end;

define C-pointer-type <GSList> => <_GSList>;

define C-subtype <_GTypeInstance> (<C-void*>) end;
define constant <GTypeInstance> = <_GTypeInstance>;

define constant <guint> = <C-unsigned-int>;

define C-struct <_GData>
end;

define C-pointer-type <GData> => <_GData>;

define C-subtype <_GObject> (<_GTypeInstance>) end;
define constant <GObject> = <_GObject>;

define constant <gchar> = <C-signed-char>;

define constant <gchar*> = <C-string>;
define constant <GParamFlags> = <C-int>;
define constant $G-PARAM-READABLE = 1;
define constant $G-PARAM-WRITABLE = 2;
define constant $G-PARAM-CONSTRUCT = 4;
define constant $G-PARAM-CONSTRUCT-ONLY = 8;
define constant $G-PARAM-LAX-VALIDATION = 16;
define constant $G-PARAM-STATIC-NAME = 32;
define constant $G-PARAM-PRIVATE = 32;
define constant $G-PARAM-STATIC-NICK = 64;
define constant $G-PARAM-STATIC-BLURB = 128;

define C-struct <_GParamSpec>
  slot GParamSpec-g-type-instance :: <_GTypeInstance>;
  slot GParamSpec-name :: <gchar*>;
  slot GParamSpec-flags :: <GParamFlags>;
  slot GParamSpec-value-type :: <C-unsigned-int>;
  slot GParamSpec-owner-type :: <C-unsigned-int>;
  slot GParamSpec-_nick :: <gchar*>;
  slot GParamSpec-_blurb :: <gchar*>;
  slot GParamSpec-qdata :: <GData>;
  slot GParamSpec-ref-count :: <C-unsigned-int>;
  slot GParamSpec-param-id :: <C-unsigned-int>;
end;

define C-pointer-type <GParamSpec> => <_GParamSpec>;

define constant <gint> = <C-signed-int>;

define constant <glong> = <C-signed-long>;

define constant <gulong> = <C-unsigned-long>;

define constant <gint64> = <C-signed-long>;

define constant <guint64> = <C-unsigned-long>;

define constant <gfloat> = <C-float>;

define constant <gdouble> = <C-double>;

define C-subtype <anonymous-1614> (<C-void*>) end;
define constant <anonymous-1614<@2>> = <anonymous-1614>;
define C-struct <_GValue>
  slot GValue-g-type :: <C-unsigned-int>;
  array slot GValue-data :: <anonymous-1614>, length: 2;
end;

define C-pointer-type <GValue> => <_GValue>;

define C-struct <_GObjectConstructParam>
  slot GObjectConstructParam-pspec :: <GParamSpec>;
  slot GObjectConstructParam-value :: <GValue>;
end;

define C-pointer-type <GObjectConstructParam> => <_GObjectConstructParam>;

define constant <anonymous-1760> = <C-function-pointer>;
define constant <anonymous-1761> = <C-function-pointer>;
define constant <anonymous-1762> = <C-function-pointer>;
define constant <anonymous-1763> = <C-function-pointer>;
define constant <anonymous-1764> = <C-function-pointer>;
define C-pointer-type <GParamSpec*> => <GParamSpec>;
define constant <anonymous-1765> = <C-function-pointer>;
define constant <anonymous-1766> = <C-function-pointer>;
define constant <anonymous-1767> = <C-function-pointer>;
define C-pointer-type <gpointer*> => <gpointer>;
define constant <gpointer<@7>> = <gpointer*>;
define C-struct <_GObjectClass>
  slot GObjectClass-g-type-class :: <_GTypeClass>;
  slot GObjectClass-construct-properties :: <GSList>;
  slot GObjectClass-constructor :: <anonymous-1760>;
  slot GObjectClass-set-property :: <anonymous-1761>;
  slot GObjectClass-get-property :: <anonymous-1762>;
  slot GObjectClass-dispose :: <anonymous-1763>;
  slot GObjectClass-finalize :: <anonymous-1764>;
  slot GObjectClass-dispatch-properties-changed :: <anonymous-1765>;
  slot GObjectClass-notify :: <anonymous-1766>;
  slot GObjectClass-constructed :: <anonymous-1767>;
  array slot GObjectClass-pdummy :: <gpointer>, length: 7;
end;

define C-pointer-type <GInitiallyUnownedClass> => <_GObjectClass>;

define C-subtype <_GInitiallyUnowned> (<_GObject>) end;

define constant <GInitiallyUnowned> = <_GInitiallyUnowned>;

define constant <guint32> = <C-unsigned-int>;

define C-subtype <_GtkObject> (<_GObject>) end;
define constant <GtkObject> = <_GtkObject>;

define constant <GtkType> = <GType>;

define constant <guchar> = <C-unsigned-char>;

define constant <gboolean> = <gint>;

define constant <anonymous-3502> = <C-function-pointer>;
define constant <GtkSignalFunc> = <anonymous-3502>;

define C-struct <anonymous-3503>
  slot nonymous-3503-f :: <anonymous-3502>;
  slot nonymous-3503-d :: <C-void*>;
end;

define C-subtype <anonymous-3504> (<C-void*>) end;
define C-struct <_GtkArg>
  slot GtkArg-type :: <C-unsigned-int>;
  slot GtkArg-name :: <gchar*>;
  slot GtkArg-d :: <anonymous-3504>;
end;

define C-pointer-type <GtkArg> => <_GtkArg>;

define constant <anonymous-3515> = <C-function-pointer>;
define constant <anonymous-3516> = <C-function-pointer>;
define constant <anonymous-3517> = <C-function-pointer>;
define C-struct <_GtkObjectClass>
  slot GtkObjectClass-parent-class :: <_GObjectClass>;
  slot GtkObjectClass-set-arg :: <anonymous-3515>;
  slot GtkObjectClass-get-arg :: <anonymous-3516>;
  slot GtkObjectClass-destroy :: <anonymous-3517>;
end;

define C-pointer-type <GtkObjectClass> => <_GtkObjectClass>;

define constant <guint16> = <C-unsigned-short>;

define constant <guint8> = <C-unsigned-char>;

define C-struct <_GdkColor>
  slot GdkColor-pixel :: <C-unsigned-int>;
  slot GdkColor-red :: <C-unsigned-short>;
  slot GdkColor-green :: <C-unsigned-short>;
  slot GdkColor-blue :: <C-unsigned-short>;
end;

define C-pointer-type <GdkColor> => <_GdkColor>;

define constant <GdkColor<@5>> = <GdkColor>;
define C-struct <_PangoFontDescription>
end;

define C-pointer-type <PangoFontDescription> => <_PangoFontDescription>;

define constant <GdkVisualType> = <C-int>;
define constant $GDK-VISUAL-STATIC-GRAY = 0;
define constant $GDK-VISUAL-GRAYSCALE = 1;
define constant $GDK-VISUAL-STATIC-COLOR = 2;
define constant $GDK-VISUAL-PSEUDO-COLOR = 3;
define constant $GDK-VISUAL-TRUE-COLOR = 4;
define constant $GDK-VISUAL-DIRECT-COLOR = 5;

define constant <GdkByteOrder> = <C-int>;
define constant $GDK-LSB-FIRST = 0;
define constant $GDK-MSB-FIRST = 1;

define C-subtype <_GdkVisual> (<_GObject>) end;
define constant <GdkVisual> = <_GdkVisual>;

define C-subtype <_GdkColormap> (<_GObject>) end;
define constant <GdkColormap> = <_GdkColormap>;

define C-subtype <_GdkGC> (<_GObject>) end;
define constant <GdkGC> = <_GdkGC>;

define C-subtype <_GdkGCX11> (<_GdkGC>) end;
define constant <GdkGCX11> = <_GdkGCX11>;

define C-pointer-type <GdkGC*> => <GdkGC>;
define constant <GdkGC<@5>> = <GdkGC*>;
define C-subtype <_GdkDrawable> (<_GObject>) end;
define C-subtype <_GdkPixmap> (<_GdkDrawable>) end;

define constant <GdkPixmap> = <_GdkPixmap>;

define C-pointer-type <GdkPixmap*> => <GdkPixmap>;
define constant <GdkPixmap<@5>> = <GdkPixmap*>;
define constant <GdkFontType> = <C-int>;
define constant $GDK-FONT-FONT = 0;
define constant $GDK-FONT-FONTSET = 1;

define C-struct <_GdkFont>
  slot GdkFont-type :: <GdkFontType>;
  slot GdkFont-ascent :: <C-signed-int>;
  slot GdkFont-descent :: <C-signed-int>;
end;

define C-pointer-type <GdkFont> => <_GdkFont>;

define C-pointer-type <gchar**> => <gchar*>;
define constant <gchar*<@5>> = <gchar**>;
define constant <GtkRcFlags> = <C-int>;
define constant $GTK-RC-FG = 1;
define constant $GTK-RC-BG = 2;
define constant $GTK-RC-TEXT = 4;
define constant $GTK-RC-BASE = 8;

define C-pointer-type <GtkRcFlags*> => <GtkRcFlags>;
define constant <GtkRcFlags<@5>> = <GtkRcFlags*>;
define C-struct <_GArray>
  slot GArray-data :: <gchar*>;
  slot GArray-len :: <C-unsigned-int>;
end;

define C-pointer-type <GArray> => <_GArray>;

define C-subtype <_GtkRcStyle> (<_GObject>) end;
define constant <GtkRcStyle> = <_GtkRcStyle>;

define C-subtype <_GtkStyle> (<_GObject>) end;
define constant <GtkStyle> = <_GtkStyle>;

define C-struct <_GtkRequisition>
  slot GtkRequisition-width :: <C-signed-int>;
  slot GtkRequisition-height :: <C-signed-int>;
end;

define C-pointer-type <GtkRequisition> => <_GtkRequisition>;

define C-struct <_GdkRectangle>
  slot GdkRectangle-x :: <C-signed-int>;
  slot GdkRectangle-y :: <C-signed-int>;
  slot GdkRectangle-width :: <C-signed-int>;
  slot GdkRectangle-height :: <C-signed-int>;
end;

define C-pointer-type <GdkRectangle> => <_GdkRectangle>;

define constant <GtkAllocation> = <GdkRectangle>;

define C-subtype <_GdkWindow> (<_GdkDrawable>) end;

define constant <GdkWindow> = <_GdkWindow>;

define C-subtype <_GtkWidget> (<_GtkObject>, <_AtkImplementorIface>) end;
define constant <GtkWidget> = <_GtkWidget>;

define constant <anonymous-3797> = <C-function-pointer>;
define constant <anonymous-3798> = <C-function-pointer>;
define constant <anonymous-3799> = <C-function-pointer>;
define constant <anonymous-3800> = <C-function-pointer>;
define constant <anonymous-3801> = <C-function-pointer>;
define constant <anonymous-3802> = <C-function-pointer>;
define constant <anonymous-3803> = <C-function-pointer>;
define constant <anonymous-3804> = <C-function-pointer>;
define constant <anonymous-3805> = <C-function-pointer>;
define constant <anonymous-3806> = <C-function-pointer>;
define constant <anonymous-3807> = <C-function-pointer>;
define constant <GtkStateType> = <C-int>;
define constant $GTK-STATE-NORMAL = 0;
define constant $GTK-STATE-ACTIVE = 1;
define constant $GTK-STATE-PRELIGHT = 2;
define constant $GTK-STATE-SELECTED = 3;
define constant $GTK-STATE-INSENSITIVE = 4;

define constant <anonymous-3808> = <C-function-pointer>;
define constant <anonymous-3809> = <C-function-pointer>;
define constant <anonymous-3810> = <C-function-pointer>;
define constant <anonymous-3811> = <C-function-pointer>;
define constant <GtkTextDirection> = <C-int>;
define constant $GTK-TEXT-DIR-NONE = 0;
define constant $GTK-TEXT-DIR-LTR = 1;
define constant $GTK-TEXT-DIR-RTL = 2;

define constant <anonymous-3812> = <C-function-pointer>;
define constant <anonymous-3813> = <C-function-pointer>;
define constant <anonymous-3814> = <C-function-pointer>;
define constant <anonymous-3815> = <C-function-pointer>;
define constant <anonymous-3816> = <C-function-pointer>;
define constant <GtkDirectionType> = <C-int>;
define constant $GTK-DIR-TAB-FORWARD = 0;
define constant $GTK-DIR-TAB-BACKWARD = 1;
define constant $GTK-DIR-UP = 2;
define constant $GTK-DIR-DOWN = 3;
define constant $GTK-DIR-LEFT = 4;
define constant $GTK-DIR-RIGHT = 5;

define constant <anonymous-3817> = <C-function-pointer>;
define constant <GdkEventType> = <C-int>;
define constant $GDK-NOTHING = -1;
define constant $GDK-DELETE = 0;
define constant $GDK-DESTROY = 1;
define constant $GDK-EXPOSE = 2;
define constant $GDK-MOTION-NOTIFY = 3;
define constant $GDK-BUTTON-PRESS = 4;
define constant $GDK-2BUTTON-PRESS = 5;
define constant $GDK-3BUTTON-PRESS = 6;
define constant $GDK-BUTTON-RELEASE = 7;
define constant $GDK-KEY-PRESS = 8;
define constant $GDK-KEY-RELEASE = 9;
define constant $GDK-ENTER-NOTIFY = 10;
define constant $GDK-LEAVE-NOTIFY = 11;
define constant $GDK-FOCUS-CHANGE = 12;
define constant $GDK-CONFIGURE = 13;
define constant $GDK-MAP = 14;
define constant $GDK-UNMAP = 15;
define constant $GDK-PROPERTY-NOTIFY = 16;
define constant $GDK-SELECTION-CLEAR = 17;
define constant $GDK-SELECTION-REQUEST = 18;
define constant $GDK-SELECTION-NOTIFY = 19;
define constant $GDK-PROXIMITY-IN = 20;
define constant $GDK-PROXIMITY-OUT = 21;
define constant $GDK-DRAG-ENTER = 22;
define constant $GDK-DRAG-LEAVE = 23;
define constant $GDK-DRAG-MOTION = 24;
define constant $GDK-DRAG-STATUS = 25;
define constant $GDK-DROP-START = 26;
define constant $GDK-DROP-FINISHED = 27;
define constant $GDK-CLIENT-EVENT = 28;
define constant $GDK-VISIBILITY-NOTIFY = 29;
define constant $GDK-NO-EXPOSE = 30;
define constant $GDK-SCROLL = 31;
define constant $GDK-WINDOW-STATE = 32;
define constant $GDK-SETTING = 33;
define constant $GDK-OWNER-CHANGE = 34;
define constant $GDK-GRAB-BROKEN = 35;

define constant <gint8> = <C-signed-char>;

define C-struct <_GdkEventAny>
  slot GdkEventAny-type :: <GdkEventType>;
  slot GdkEventAny-window :: <GdkWindow>;
  slot GdkEventAny-send-event :: <C-signed-char>;
end;

define C-pointer-type <GdkEventAny> => <_GdkEventAny>;

define C-struct <_GdkRegion>
end;

define C-pointer-type <GdkRegion> => <_GdkRegion>;

define C-struct <_GdkEventExpose>
  slot GdkEventExpose-type :: <GdkEventType>;
  slot GdkEventExpose-window :: <GdkWindow>;
  slot GdkEventExpose-send-event :: <C-signed-char>;
  slot GdkEventExpose-area :: <_GdkRectangle>;
  slot GdkEventExpose-region :: <GdkRegion>;
  slot GdkEventExpose-count :: <C-signed-int>;
end;

define C-pointer-type <GdkEventExpose> => <_GdkEventExpose>;

define C-struct <_GdkEventNoExpose>
  slot GdkEventNoExpose-type :: <GdkEventType>;
  slot GdkEventNoExpose-window :: <GdkWindow>;
  slot GdkEventNoExpose-send-event :: <C-signed-char>;
end;

define C-pointer-type <GdkEventNoExpose> => <_GdkEventNoExpose>;

define constant <GdkVisibilityState> = <C-int>;
define constant $GDK-VISIBILITY-UNOBSCURED = 0;
define constant $GDK-VISIBILITY-PARTIAL = 1;
define constant $GDK-VISIBILITY-FULLY-OBSCURED = 2;

define C-struct <_GdkEventVisibility>
  slot GdkEventVisibility-type :: <GdkEventType>;
  slot GdkEventVisibility-window :: <GdkWindow>;
  slot GdkEventVisibility-send-event :: <C-signed-char>;
  slot GdkEventVisibility-state :: <GdkVisibilityState>;
end;

define C-pointer-type <GdkEventVisibility> => <_GdkEventVisibility>;

define C-pointer-type <gdouble*> => <gdouble>;
define constant <gint16> = <C-signed-short>;

define constant <GdkInputSource> = <C-int>;
define constant $GDK-SOURCE-MOUSE = 0;
define constant $GDK-SOURCE-PEN = 1;
define constant $GDK-SOURCE-ERASER = 2;
define constant $GDK-SOURCE-CURSOR = 3;

define constant <GdkInputMode> = <C-int>;
define constant $GDK-MODE-DISABLED = 0;
define constant $GDK-MODE-SCREEN = 1;
define constant $GDK-MODE-WINDOW = 2;

define constant <GdkAxisUse> = <C-int>;
define constant $GDK-AXIS-IGNORE = 0;
define constant $GDK-AXIS-X = 1;
define constant $GDK-AXIS-Y = 2;
define constant $GDK-AXIS-PRESSURE = 3;
define constant $GDK-AXIS-XTILT = 4;
define constant $GDK-AXIS-YTILT = 5;
define constant $GDK-AXIS-WHEEL = 6;
define constant $GDK-AXIS-LAST = 7;

define C-struct <_GdkDeviceAxis>
  slot GdkDeviceAxis-use :: <GdkAxisUse>;
  slot GdkDeviceAxis-min :: <C-double>;
  slot GdkDeviceAxis-max :: <C-double>;
end;

define C-pointer-type <GdkDeviceAxis> => <_GdkDeviceAxis>;

define constant <GdkModifierType> = <C-int>;
define constant $GDK-SHIFT-MASK = 1;
define constant $GDK-LOCK-MASK = 2;
define constant $GDK-CONTROL-MASK = 4;
define constant $GDK-MOD1-MASK = 8;
define constant $GDK-MOD2-MASK = 16;
define constant $GDK-MOD3-MASK = 32;
define constant $GDK-MOD4-MASK = 64;
define constant $GDK-MOD5-MASK = 128;
define constant $GDK-BUTTON1-MASK = 256;
define constant $GDK-BUTTON2-MASK = 512;
define constant $GDK-BUTTON3-MASK = 1024;
define constant $GDK-BUTTON4-MASK = 2048;
define constant $GDK-BUTTON5-MASK = 4096;
define constant $GDK-SUPER-MASK = 67108864;
define constant $GDK-HYPER-MASK = 134217728;
define constant $GDK-META-MASK = 268435456;

define C-struct <_GdkDeviceKey>
  slot GdkDeviceKey-keyval :: <C-unsigned-int>;
  slot GdkDeviceKey-modifiers :: <GdkModifierType>;
end;

define C-pointer-type <GdkDeviceKey> => <_GdkDeviceKey>;

define C-subtype <_GdkDevice> (<_GObject>) end;
define constant <GdkDevice> = <_GdkDevice>;

define C-struct <_GdkEventMotion>
  slot GdkEventMotion-type :: <GdkEventType>;
  slot GdkEventMotion-window :: <GdkWindow>;
  slot GdkEventMotion-send-event :: <C-signed-char>;
  slot GdkEventMotion-time :: <C-unsigned-int>;
  slot GdkEventMotion-x :: <C-double>;
  slot GdkEventMotion-y :: <C-double>;
  slot GdkEventMotion-axes :: <gdouble*>;
  slot GdkEventMotion-state :: <C-unsigned-int>;
  slot GdkEventMotion-is-hint :: <C-signed-short>;
  slot GdkEventMotion-device :: <GdkDevice>;
  slot GdkEventMotion-x-root :: <C-double>;
  slot GdkEventMotion-y-root :: <C-double>;
end;

define C-pointer-type <GdkEventMotion> => <_GdkEventMotion>;

define C-struct <_GdkEventButton>
  slot GdkEventButton-type :: <GdkEventType>;
  slot GdkEventButton-window :: <GdkWindow>;
  slot GdkEventButton-send-event :: <C-signed-char>;
  slot GdkEventButton-time :: <C-unsigned-int>;
  slot GdkEventButton-x :: <C-double>;
  slot GdkEventButton-y :: <C-double>;
  slot GdkEventButton-axes :: <gdouble*>;
  slot GdkEventButton-state :: <C-unsigned-int>;
  slot GdkEventButton-button :: <C-unsigned-int>;
  slot GdkEventButton-device :: <GdkDevice>;
  slot GdkEventButton-x-root :: <C-double>;
  slot GdkEventButton-y-root :: <C-double>;
end;

define C-pointer-type <GdkEventButton> => <_GdkEventButton>;

define constant <GdkScrollDirection> = <C-int>;
define constant $GDK-SCROLL-UP = 0;
define constant $GDK-SCROLL-DOWN = 1;
define constant $GDK-SCROLL-LEFT = 2;
define constant $GDK-SCROLL-RIGHT = 3;

define C-struct <_GdkEventScroll>
  slot GdkEventScroll-type :: <GdkEventType>;
  slot GdkEventScroll-window :: <GdkWindow>;
  slot GdkEventScroll-send-event :: <C-signed-char>;
  slot GdkEventScroll-time :: <C-unsigned-int>;
  slot GdkEventScroll-x :: <C-double>;
  slot GdkEventScroll-y :: <C-double>;
  slot GdkEventScroll-state :: <C-unsigned-int>;
  slot GdkEventScroll-direction :: <GdkScrollDirection>;
  slot GdkEventScroll-device :: <GdkDevice>;
  slot GdkEventScroll-x-root :: <C-double>;
  slot GdkEventScroll-y-root :: <C-double>;
end;

define C-pointer-type <GdkEventScroll> => <_GdkEventScroll>;

define C-struct <_GdkEventKey>
  slot GdkEventKey-type :: <GdkEventType>;
  slot GdkEventKey-window :: <GdkWindow>;
  slot GdkEventKey-send-event :: <C-signed-char>;
  slot GdkEventKey-time :: <C-unsigned-int>;
  slot GdkEventKey-state :: <C-unsigned-int>;
  slot GdkEventKey-keyval :: <C-unsigned-int>;
  slot GdkEventKey-length :: <C-signed-int>;
  slot GdkEventKey-string :: <gchar*>;
  slot GdkEventKey-hardware-keycode :: <C-unsigned-short>;
  slot GdkEventKey-group :: <C-unsigned-char>;
  bitfield slot GdkEventKey-is-modifier :: <C-int>, width: 1;
end;

define C-pointer-type <GdkEventKey> => <_GdkEventKey>;

define constant <GdkCrossingMode> = <C-int>;
define constant $GDK-CROSSING-NORMAL = 0;
define constant $GDK-CROSSING-GRAB = 1;
define constant $GDK-CROSSING-UNGRAB = 2;

define constant <GdkNotifyType> = <C-int>;
define constant $GDK-NOTIFY-ANCESTOR = 0;
define constant $GDK-NOTIFY-VIRTUAL = 1;
define constant $GDK-NOTIFY-INFERIOR = 2;
define constant $GDK-NOTIFY-NONLINEAR = 3;
define constant $GDK-NOTIFY-NONLINEAR-VIRTUAL = 4;
define constant $GDK-NOTIFY-UNKNOWN = 5;

define C-struct <_GdkEventCrossing>
  slot GdkEventCrossing-type :: <GdkEventType>;
  slot GdkEventCrossing-window :: <GdkWindow>;
  slot GdkEventCrossing-send-event :: <C-signed-char>;
  slot GdkEventCrossing-subwindow :: <GdkWindow>;
  slot GdkEventCrossing-time :: <C-unsigned-int>;
  slot GdkEventCrossing-x :: <C-double>;
  slot GdkEventCrossing-y :: <C-double>;
  slot GdkEventCrossing-x-root :: <C-double>;
  slot GdkEventCrossing-y-root :: <C-double>;
  slot GdkEventCrossing-mode :: <GdkCrossingMode>;
  slot GdkEventCrossing-detail :: <GdkNotifyType>;
  slot GdkEventCrossing-focus :: <C-signed-int>;
  slot GdkEventCrossing-state :: <C-unsigned-int>;
end;

define C-pointer-type <GdkEventCrossing> => <_GdkEventCrossing>;

define C-struct <_GdkEventFocus>
  slot GdkEventFocus-type :: <GdkEventType>;
  slot GdkEventFocus-window :: <GdkWindow>;
  slot GdkEventFocus-send-event :: <C-signed-char>;
  slot GdkEventFocus-in :: <C-signed-short>;
end;

define C-pointer-type <GdkEventFocus> => <_GdkEventFocus>;

define C-struct <_GdkEventConfigure>
  slot GdkEventConfigure-type :: <GdkEventType>;
  slot GdkEventConfigure-window :: <GdkWindow>;
  slot GdkEventConfigure-send-event :: <C-signed-char>;
  slot GdkEventConfigure-x :: <C-signed-int>;
  slot GdkEventConfigure-y :: <C-signed-int>;
  slot GdkEventConfigure-width :: <C-signed-int>;
  slot GdkEventConfigure-height :: <C-signed-int>;
end;

define C-pointer-type <GdkEventConfigure> => <_GdkEventConfigure>;

define C-struct <_GdkAtom>
end;

define constant <GdkAtom> = <_GdkAtom>;

define C-struct <_GdkEventProperty>
  slot GdkEventProperty-type :: <GdkEventType>;
  slot GdkEventProperty-window :: <GdkWindow>;
  slot GdkEventProperty-send-event :: <C-signed-char>;
  slot GdkEventProperty-atom :: <_GdkAtom>;
  slot GdkEventProperty-time :: <C-unsigned-int>;
  slot GdkEventProperty-state :: <C-unsigned-int>;
end;

define C-pointer-type <GdkEventProperty> => <_GdkEventProperty>;

define constant <GdkNativeWindow> = <guint32>;

define C-struct <_GdkEventSelection>
  slot GdkEventSelection-type :: <GdkEventType>;
  slot GdkEventSelection-window :: <GdkWindow>;
  slot GdkEventSelection-send-event :: <C-signed-char>;
  slot GdkEventSelection-selection :: <_GdkAtom>;
  slot GdkEventSelection-target :: <_GdkAtom>;
  slot GdkEventSelection-property :: <_GdkAtom>;
  slot GdkEventSelection-time :: <C-unsigned-int>;
  slot GdkEventSelection-requestor :: <C-unsigned-int>;
end;

define C-pointer-type <GdkEventSelection> => <_GdkEventSelection>;

define constant <GdkOwnerChange> = <C-int>;
define constant $GDK-OWNER-CHANGE-NEW-OWNER = 0;
define constant $GDK-OWNER-CHANGE-DESTROY = 1;
define constant $GDK-OWNER-CHANGE-CLOSE = 2;

define C-struct <_GdkEventOwnerChange>
  slot GdkEventOwnerChange-type :: <GdkEventType>;
  slot GdkEventOwnerChange-window :: <GdkWindow>;
  slot GdkEventOwnerChange-send-event :: <C-signed-char>;
  slot GdkEventOwnerChange-owner :: <C-unsigned-int>;
  slot GdkEventOwnerChange-reason :: <GdkOwnerChange>;
  slot GdkEventOwnerChange-selection :: <_GdkAtom>;
  slot GdkEventOwnerChange-time :: <C-unsigned-int>;
  slot GdkEventOwnerChange-selection-time :: <C-unsigned-int>;
end;

define C-pointer-type <GdkEventOwnerChange> => <_GdkEventOwnerChange>;

define C-struct <_GdkEventProximity>
  slot GdkEventProximity-type :: <GdkEventType>;
  slot GdkEventProximity-window :: <GdkWindow>;
  slot GdkEventProximity-send-event :: <C-signed-char>;
  slot GdkEventProximity-time :: <C-unsigned-int>;
  slot GdkEventProximity-device :: <GdkDevice>;
end;

define C-pointer-type <GdkEventProximity> => <_GdkEventProximity>;

define constant <gushort> = <C-unsigned-short>;

define constant <char*> = <C-string>;
define constant <char<@20>> = <char*>;
define C-pointer-type <short*> => <C-signed-short>;
define constant <short<@10>> = <short*>;
define C-pointer-type <long*> => <C-signed-long>;
define constant <long<@5>> = <long*>;
define C-subtype <anonymous-2684> (<C-void*>) end;
define C-struct <_GdkEventClient>
  slot GdkEventClient-type :: <GdkEventType>;
  slot GdkEventClient-window :: <GdkWindow>;
  slot GdkEventClient-send-event :: <C-signed-char>;
  slot GdkEventClient-message-type :: <_GdkAtom>;
  slot GdkEventClient-data-format :: <C-unsigned-short>;
  slot GdkEventClient-data :: <anonymous-2684>;
end;

define C-pointer-type <GdkEventClient> => <_GdkEventClient>;

define constant <GdkDragProtocol> = <C-int>;
define constant $GDK-DRAG-PROTO-MOTIF = 0;
define constant $GDK-DRAG-PROTO-XDND = 1;
define constant $GDK-DRAG-PROTO-ROOTWIN = 2;
define constant $GDK-DRAG-PROTO-NONE = 3;
define constant $GDK-DRAG-PROTO-WIN32-DROPFILES = 4;
define constant $GDK-DRAG-PROTO-OLE2 = 5;
define constant $GDK-DRAG-PROTO-LOCAL = 6;

define C-struct <_GList>
  slot GList-data :: <C-void*>;
  slot GList-next :: <GList>;
  slot GList-prev :: <GList>;
end;

define C-pointer-type <GList> => <_GList>;

define constant <GdkDragAction> = <C-int>;
define constant $GDK-ACTION-DEFAULT = 1;
define constant $GDK-ACTION-COPY = 2;
define constant $GDK-ACTION-MOVE = 4;
define constant $GDK-ACTION-LINK = 8;
define constant $GDK-ACTION-PRIVATE = 16;
define constant $GDK-ACTION-ASK = 32;

define C-subtype <_GdkDragContext> (<_GObject>) end;
define constant <GdkDragContext> = <_GdkDragContext>;

define constant <gshort> = <C-signed-short>;

define C-struct <_GdkEventDND>
  slot GdkEventDND-type :: <GdkEventType>;
  slot GdkEventDND-window :: <GdkWindow>;
  slot GdkEventDND-send-event :: <C-signed-char>;
  slot GdkEventDND-context :: <GdkDragContext>;
  slot GdkEventDND-time :: <C-unsigned-int>;
  slot GdkEventDND-x-root :: <C-signed-short>;
  slot GdkEventDND-y-root :: <C-signed-short>;
end;

define C-pointer-type <GdkEventDND> => <_GdkEventDND>;

define constant <GdkWindowState> = <C-int>;
define constant $GDK-WINDOW-STATE-WITHDRAWN = 1;
define constant $GDK-WINDOW-STATE-ICONIFIED = 2;
define constant $GDK-WINDOW-STATE-MAXIMIZED = 4;
define constant $GDK-WINDOW-STATE-STICKY = 8;
define constant $GDK-WINDOW-STATE-FULLSCREEN = 16;
define constant $GDK-WINDOW-STATE-ABOVE = 32;
define constant $GDK-WINDOW-STATE-BELOW = 64;

define C-struct <_GdkEventWindowState>
  slot GdkEventWindowState-type :: <GdkEventType>;
  slot GdkEventWindowState-window :: <GdkWindow>;
  slot GdkEventWindowState-send-event :: <C-signed-char>;
  slot GdkEventWindowState-changed-mask :: <GdkWindowState>;
  slot GdkEventWindowState-new-window-state :: <GdkWindowState>;
end;

define C-pointer-type <GdkEventWindowState> => <_GdkEventWindowState>;

define constant <GdkSettingAction> = <C-int>;
define constant $GDK-SETTING-ACTION-NEW = 0;
define constant $GDK-SETTING-ACTION-CHANGED = 1;
define constant $GDK-SETTING-ACTION-DELETED = 2;

define C-struct <_GdkEventSetting>
  slot GdkEventSetting-type :: <GdkEventType>;
  slot GdkEventSetting-window :: <GdkWindow>;
  slot GdkEventSetting-send-event :: <C-signed-char>;
  slot GdkEventSetting-action :: <GdkSettingAction>;
  slot GdkEventSetting-name :: <char*>;
end;

define C-pointer-type <GdkEventSetting> => <_GdkEventSetting>;

define C-struct <_GdkEventGrabBroken>
  slot GdkEventGrabBroken-type :: <GdkEventType>;
  slot GdkEventGrabBroken-window :: <GdkWindow>;
  slot GdkEventGrabBroken-send-event :: <C-signed-char>;
  slot GdkEventGrabBroken-keyboard :: <C-signed-int>;
  slot GdkEventGrabBroken-implicit :: <C-signed-int>;
  slot GdkEventGrabBroken-grab-window :: <GdkWindow>;
end;

define C-pointer-type <GdkEventGrabBroken> => <_GdkEventGrabBroken>;

define C-subtype <_GdkEvent> (<C-void*>) end;
define constant <GdkEvent> = <_GdkEvent>;

define constant <anonymous-3818> = <C-function-pointer>;
define constant <anonymous-3819> = <C-function-pointer>;
define constant <anonymous-3820> = <C-function-pointer>;
define constant <anonymous-3821> = <C-function-pointer>;
define constant <anonymous-3822> = <C-function-pointer>;
define constant <anonymous-3823> = <C-function-pointer>;
define constant <anonymous-3824> = <C-function-pointer>;
define constant <anonymous-3825> = <C-function-pointer>;
define constant <anonymous-3826> = <C-function-pointer>;
define constant <anonymous-3827> = <C-function-pointer>;
define constant <anonymous-3828> = <C-function-pointer>;
define constant <anonymous-3829> = <C-function-pointer>;
define constant <anonymous-3830> = <C-function-pointer>;
define constant <anonymous-3831> = <C-function-pointer>;
define constant <anonymous-3832> = <C-function-pointer>;
define constant <anonymous-3833> = <C-function-pointer>;
define constant <anonymous-3834> = <C-function-pointer>;
define constant <anonymous-3835> = <C-function-pointer>;
define constant <anonymous-3836> = <C-function-pointer>;
define constant <anonymous-3837> = <C-function-pointer>;
define constant <anonymous-3838> = <C-function-pointer>;
define constant <anonymous-3839> = <C-function-pointer>;
define constant <anonymous-3840> = <C-function-pointer>;
define constant <anonymous-3841> = <C-function-pointer>;
define constant <anonymous-3842> = <C-function-pointer>;
define constant <anonymous-3843> = <C-function-pointer>;
define constant <anonymous-3844> = <C-function-pointer>;
define C-pointer-type <guchar*> => <guchar>;
define C-pointer-type <guint32*> => <guint32>;
define constant <guint32<@2>> = <guint32*>;
define C-pointer-type <GdkWindow*> => <GdkWindow>;
define constant <GdkWindow<@2>> = <GdkWindow*>;
define C-pointer-type <gint*> => <gint>;
define constant <gint<@2>> = <gint*>;
define constant <GdkGC<@32>> = <GdkGC*>;
define C-struct <_cairo-font-options>
end;

define C-pointer-type <cairo-font-options-t> => <_cairo-font-options>;

define C-subtype <_GdkScreen> (<_GObject>) end;
define constant <GdkScreen> = <_GdkScreen>;

define C-pointer-type <GdkScreen*> => <GdkScreen>;
define C-pointer-type <GdkModifierType*> => <GdkModifierType>;
define constant <anonymous-2713> = <C-function-pointer>;
define constant <anonymous-2714> = <C-function-pointer>;
define constant <anonymous-2715> = <C-function-pointer>;
define C-struct <_GdkDisplayPointerHooks>
  slot GdkDisplayPointerHooks-get-pointer :: <anonymous-2713>;
  slot GdkDisplayPointerHooks-window-get-pointer :: <anonymous-2714>;
  slot GdkDisplayPointerHooks-window-at-pointer :: <anonymous-2715>;
end;

define C-pointer-type <GdkDisplayPointerHooks> => <_GdkDisplayPointerHooks>;

define C-subtype <_GdkDisplay> (<_GObject>) end;
define constant <GdkDisplay> = <_GdkDisplay>;

define C-struct <_GtkSelectionData>
  slot GtkSelectionData-selection :: <_GdkAtom>;
  slot GtkSelectionData-target :: <_GdkAtom>;
  slot GtkSelectionData-type :: <_GdkAtom>;
  slot GtkSelectionData-format :: <C-signed-int>;
  slot GtkSelectionData-data :: <guchar*>;
  slot GtkSelectionData-length :: <C-signed-int>;
  slot GtkSelectionData-display :: <GdkDisplay>;
end;

define C-pointer-type <GtkSelectionData> => <_GtkSelectionData>;

define constant <anonymous-3845> = <C-function-pointer>;
define constant <anonymous-3846> = <C-function-pointer>;
define constant <anonymous-3847> = <C-function-pointer>;
define constant <anonymous-3848> = <C-function-pointer>;
define constant <anonymous-3849> = <C-function-pointer>;
define constant <anonymous-3850> = <C-function-pointer>;
define constant <anonymous-3851> = <C-function-pointer>;
define constant <anonymous-3852> = <C-function-pointer>;
define constant <anonymous-3853> = <C-function-pointer>;
define constant <anonymous-3854> = <C-function-pointer>;
define constant <anonymous-3855> = <C-function-pointer>;
define constant <GtkWidgetHelpType> = <C-int>;
define constant $GTK-WIDGET-HELP-TOOLTIP = 0;
define constant $GTK-WIDGET-HELP-WHATS-THIS = 1;

define constant <anonymous-3856> = <C-function-pointer>;
define constant <AtkRole> = <C-int>;
define constant $ATK-ROLE-INVALID = 0;
define constant $ATK-ROLE-ACCEL-LABEL = 1;
define constant $ATK-ROLE-ALERT = 2;
define constant $ATK-ROLE-ANIMATION = 3;
define constant $ATK-ROLE-ARROW = 4;
define constant $ATK-ROLE-CALENDAR = 5;
define constant $ATK-ROLE-CANVAS = 6;
define constant $ATK-ROLE-CHECK-BOX = 7;
define constant $ATK-ROLE-CHECK-MENU-ITEM = 8;
define constant $ATK-ROLE-COLOR-CHOOSER = 9;
define constant $ATK-ROLE-COLUMN-HEADER = 10;
define constant $ATK-ROLE-COMBO-BOX = 11;
define constant $ATK-ROLE-DATE-EDITOR = 12;
define constant $ATK-ROLE-DESKTOP-ICON = 13;
define constant $ATK-ROLE-DESKTOP-FRAME = 14;
define constant $ATK-ROLE-DIAL = 15;
define constant $ATK-ROLE-DIALOG = 16;
define constant $ATK-ROLE-DIRECTORY-PANE = 17;
define constant $ATK-ROLE-DRAWING-AREA = 18;
define constant $ATK-ROLE-FILE-CHOOSER = 19;
define constant $ATK-ROLE-FILLER = 20;
define constant $ATK-ROLE-FONT-CHOOSER = 21;
define constant $ATK-ROLE-FRAME = 22;
define constant $ATK-ROLE-GLASS-PANE = 23;
define constant $ATK-ROLE-HTML-CONTAINER = 24;
define constant $ATK-ROLE-ICON = 25;
define constant $ATK-ROLE-IMAGE = 26;
define constant $ATK-ROLE-INTERNAL-FRAME = 27;
define constant $ATK-ROLE-LABEL = 28;
define constant $ATK-ROLE-LAYERED-PANE = 29;
define constant $ATK-ROLE-LIST = 30;
define constant $ATK-ROLE-LIST-ITEM = 31;
define constant $ATK-ROLE-MENU = 32;
define constant $ATK-ROLE-MENU-BAR = 33;
define constant $ATK-ROLE-MENU-ITEM = 34;
define constant $ATK-ROLE-OPTION-PANE = 35;
define constant $ATK-ROLE-PAGE-TAB = 36;
define constant $ATK-ROLE-PAGE-TAB-LIST = 37;
define constant $ATK-ROLE-PANEL = 38;
define constant $ATK-ROLE-PASSWORD-TEXT = 39;
define constant $ATK-ROLE-POPUP-MENU = 40;
define constant $ATK-ROLE-PROGRESS-BAR = 41;
define constant $ATK-ROLE-PUSH-BUTTON = 42;
define constant $ATK-ROLE-RADIO-BUTTON = 43;
define constant $ATK-ROLE-RADIO-MENU-ITEM = 44;
define constant $ATK-ROLE-ROOT-PANE = 45;
define constant $ATK-ROLE-ROW-HEADER = 46;
define constant $ATK-ROLE-SCROLL-BAR = 47;
define constant $ATK-ROLE-SCROLL-PANE = 48;
define constant $ATK-ROLE-SEPARATOR = 49;
define constant $ATK-ROLE-SLIDER = 50;
define constant $ATK-ROLE-SPLIT-PANE = 51;
define constant $ATK-ROLE-SPIN-BUTTON = 52;
define constant $ATK-ROLE-STATUSBAR = 53;
define constant $ATK-ROLE-TABLE = 54;
define constant $ATK-ROLE-TABLE-CELL = 55;
define constant $ATK-ROLE-TABLE-COLUMN-HEADER = 56;
define constant $ATK-ROLE-TABLE-ROW-HEADER = 57;
define constant $ATK-ROLE-TEAR-OFF-MENU-ITEM = 58;
define constant $ATK-ROLE-TERMINAL = 59;
define constant $ATK-ROLE-TEXT = 60;
define constant $ATK-ROLE-TOGGLE-BUTTON = 61;
define constant $ATK-ROLE-TOOL-BAR = 62;
define constant $ATK-ROLE-TOOL-TIP = 63;
define constant $ATK-ROLE-TREE = 64;
define constant $ATK-ROLE-TREE-TABLE = 65;
define constant $ATK-ROLE-UNKNOWN = 66;
define constant $ATK-ROLE-VIEWPORT = 67;
define constant $ATK-ROLE-WINDOW = 68;
define constant $ATK-ROLE-HEADER = 69;
define constant $ATK-ROLE-FOOTER = 70;
define constant $ATK-ROLE-PARAGRAPH = 71;
define constant $ATK-ROLE-RULER = 72;
define constant $ATK-ROLE-APPLICATION = 73;
define constant $ATK-ROLE-AUTOCOMPLETE = 74;
define constant $ATK-ROLE-EDITBAR = 75;
define constant $ATK-ROLE-EMBEDDED = 76;
define constant $ATK-ROLE-ENTRY = 77;
define constant $ATK-ROLE-CHART = 78;
define constant $ATK-ROLE-CAPTION = 79;
define constant $ATK-ROLE-DOCUMENT-FRAME = 80;
define constant $ATK-ROLE-HEADING = 81;
define constant $ATK-ROLE-PAGE = 82;
define constant $ATK-ROLE-SECTION = 83;
define constant $ATK-ROLE-REDUNDANT-OBJECT = 84;
define constant $ATK-ROLE-FORM = 85;
define constant $ATK-ROLE-LINK = 86;
define constant $ATK-ROLE-INPUT-METHOD-WINDOW = 87;
define constant $ATK-ROLE-LAST-DEFINED = 88;

define C-struct <_GPtrArray>
  slot GPtrArray-pdata :: <gpointer*>;
  slot GPtrArray-len :: <C-unsigned-int>;
end;

define C-pointer-type <GPtrArray> => <_GPtrArray>;

define C-subtype <_AtkRelationSet> (<_GObject>) end;
define constant <AtkRelationSet> = <_AtkRelationSet>;

define constant <AtkLayer> = <C-int>;
define constant $ATK-LAYER-INVALID = 0;
define constant $ATK-LAYER-BACKGROUND = 1;
define constant $ATK-LAYER-CANVAS = 2;
define constant $ATK-LAYER-WIDGET = 3;
define constant $ATK-LAYER-MDI = 4;
define constant $ATK-LAYER-POPUP = 5;
define constant $ATK-LAYER-OVERLAY = 6;
define constant $ATK-LAYER-WINDOW = 7;

define C-subtype <_AtkObject> (<_GObject>) end;
define constant <AtkObject> = <_AtkObject>;

define constant <anonymous-3857> = <C-function-pointer>;
define constant <anonymous-3858> = <C-function-pointer>;
define constant <anonymous-3859> = <C-function-pointer>;
define constant <anonymous-3860> = <C-function-pointer>;
define constant <anonymous-3861> = <C-function-pointer>;
define C-struct <_GtkTooltip>
end;

define C-pointer-type <GtkTooltip> => <_GtkTooltip>;

define constant <anonymous-3862> = <C-function-pointer>;
define constant <anonymous-3863> = <C-function-pointer>;
define constant <anonymous-3864> = <C-function-pointer>;
define constant <anonymous-3865> = <C-function-pointer>;
define C-struct <_GtkWidgetClass>
  slot GtkWidgetClass-parent-class :: <_GtkObjectClass>;
  slot GtkWidgetClass-activate-signal :: <C-unsigned-int>;
  slot GtkWidgetClass-set-scroll-adjustments-signal :: <C-unsigned-int>;
  slot GtkWidgetClass-dispatch-child-properties-changed :: <anonymous-3797>;
  slot GtkWidgetClass-show :: <anonymous-3798>;
  slot GtkWidgetClass-show-all :: <anonymous-3799>;
  slot GtkWidgetClass-hide :: <anonymous-3800>;
  slot GtkWidgetClass-hide-all :: <anonymous-3801>;
  slot GtkWidgetClass-map :: <anonymous-3802>;
  slot GtkWidgetClass-unmap :: <anonymous-3803>;
  slot GtkWidgetClass-realize :: <anonymous-3804>;
  slot GtkWidgetClass-unrealize :: <anonymous-3805>;
  slot GtkWidgetClass-size-request :: <anonymous-3806>;
  slot GtkWidgetClass-size-allocate :: <anonymous-3807>;
  slot GtkWidgetClass-state-changed :: <anonymous-3808>;
  slot GtkWidgetClass-parent-set :: <anonymous-3809>;
  slot GtkWidgetClass-hierarchy-changed :: <anonymous-3810>;
  slot GtkWidgetClass-style-set :: <anonymous-3811>;
  slot GtkWidgetClass-direction-changed :: <anonymous-3812>;
  slot GtkWidgetClass-grab-notify :: <anonymous-3813>;
  slot GtkWidgetClass-child-notify :: <anonymous-3814>;
  slot GtkWidgetClass-mnemonic-activate :: <anonymous-3815>;
  slot GtkWidgetClass-grab-focus :: <anonymous-3816>;
  slot GtkWidgetClass-focus :: <anonymous-3817>;
  slot GtkWidgetClass-event :: <anonymous-3818>;
  slot GtkWidgetClass-button-press-event :: <anonymous-3819>;
  slot GtkWidgetClass-button-release-event :: <anonymous-3820>;
  slot GtkWidgetClass-scroll-event :: <anonymous-3821>;
  slot GtkWidgetClass-motion-notify-event :: <anonymous-3822>;
  slot GtkWidgetClass-delete-event :: <anonymous-3823>;
  slot GtkWidgetClass-destroy-event :: <anonymous-3824>;
  slot GtkWidgetClass-expose-event :: <anonymous-3825>;
  slot GtkWidgetClass-key-press-event :: <anonymous-3826>;
  slot GtkWidgetClass-key-release-event :: <anonymous-3827>;
  slot GtkWidgetClass-enter-notify-event :: <anonymous-3828>;
  slot GtkWidgetClass-leave-notify-event :: <anonymous-3829>;
  slot GtkWidgetClass-configure-event :: <anonymous-3830>;
  slot GtkWidgetClass-focus-in-event :: <anonymous-3831>;
  slot GtkWidgetClass-focus-out-event :: <anonymous-3832>;
  slot GtkWidgetClass-map-event :: <anonymous-3833>;
  slot GtkWidgetClass-unmap-event :: <anonymous-3834>;
  slot GtkWidgetClass-property-notify-event :: <anonymous-3835>;
  slot GtkWidgetClass-selection-clear-event :: <anonymous-3836>;
  slot GtkWidgetClass-selection-request-event :: <anonymous-3837>;
  slot GtkWidgetClass-selection-notify-event :: <anonymous-3838>;
  slot GtkWidgetClass-proximity-in-event :: <anonymous-3839>;
  slot GtkWidgetClass-proximity-out-event :: <anonymous-3840>;
  slot GtkWidgetClass-visibility-notify-event :: <anonymous-3841>;
  slot GtkWidgetClass-client-event :: <anonymous-3842>;
  slot GtkWidgetClass-no-expose-event :: <anonymous-3843>;
  slot GtkWidgetClass-window-state-event :: <anonymous-3844>;
  slot GtkWidgetClass-selection-get :: <anonymous-3845>;
  slot GtkWidgetClass-selection-received :: <anonymous-3846>;
  slot GtkWidgetClass-drag-begin :: <anonymous-3847>;
  slot GtkWidgetClass-drag-end :: <anonymous-3848>;
  slot GtkWidgetClass-drag-data-get :: <anonymous-3849>;
  slot GtkWidgetClass-drag-data-delete :: <anonymous-3850>;
  slot GtkWidgetClass-drag-leave :: <anonymous-3851>;
  slot GtkWidgetClass-drag-motion :: <anonymous-3852>;
  slot GtkWidgetClass-drag-drop :: <anonymous-3853>;
  slot GtkWidgetClass-drag-data-received :: <anonymous-3854>;
  slot GtkWidgetClass-popup-menu :: <anonymous-3855>;
  slot GtkWidgetClass-show-help :: <anonymous-3856>;
  slot GtkWidgetClass-get-accessible :: <anonymous-3857>;
  slot GtkWidgetClass-screen-changed :: <anonymous-3858>;
  slot GtkWidgetClass-can-activate-accel :: <anonymous-3859>;
  slot GtkWidgetClass-grab-broken-event :: <anonymous-3860>;
  slot GtkWidgetClass-composited-changed :: <anonymous-3861>;
  slot GtkWidgetClass-query-tooltip :: <anonymous-3862>;
  slot GtkWidgetClass-_gtk-reserved5 :: <anonymous-3863>;
  slot GtkWidgetClass-_gtk-reserved6 :: <anonymous-3864>;
  slot GtkWidgetClass-_gtk-reserved7 :: <anonymous-3865>;
end;

define C-pointer-type <GtkWidgetClass> => <_GtkWidgetClass>;

define C-subtype <_GtkContainer> (<_GtkWidget>, <_AtkImplementorIface>) end;
define constant <GtkContainer> = <_GtkContainer>;

define constant <anonymous-4027> = <C-function-pointer>;
define constant <anonymous-4028> = <C-function-pointer>;
define constant <anonymous-4029> = <C-function-pointer>;
define constant <anonymous-3796> = <C-function-pointer>;
define constant <GtkCallback> = <anonymous-3796>;

define constant <anonymous-4030> = <C-function-pointer>;
define constant <anonymous-4031> = <C-function-pointer>;
define constant <anonymous-4032> = <C-function-pointer>;
define constant <anonymous-4033> = <C-function-pointer>;
define constant <anonymous-4034> = <C-function-pointer>;
define constant <anonymous-4035> = <C-function-pointer>;
define constant <anonymous-4036> = <C-function-pointer>;
define constant <anonymous-4037> = <C-function-pointer>;
define constant <anonymous-4038> = <C-function-pointer>;
define constant <anonymous-4039> = <C-function-pointer>;
define C-struct <_GtkContainerClass>
  slot GtkContainerClass-parent-class :: <_GtkWidgetClass>;
  slot GtkContainerClass-add :: <anonymous-4027>;
  slot GtkContainerClass-remove :: <anonymous-4028>;
  slot GtkContainerClass-check-resize :: <anonymous-4029>;
  slot GtkContainerClass-forall :: <anonymous-4030>;
  slot GtkContainerClass-set-focus-child :: <anonymous-4031>;
  slot GtkContainerClass-child-type :: <anonymous-4032>;
  slot GtkContainerClass-composite-name :: <anonymous-4033>;
  slot GtkContainerClass-set-child-property :: <anonymous-4034>;
  slot GtkContainerClass-get-child-property :: <anonymous-4035>;
  slot GtkContainerClass-_gtk-reserved1 :: <anonymous-4036>;
  slot GtkContainerClass-_gtk-reserved2 :: <anonymous-4037>;
  slot GtkContainerClass-_gtk-reserved3 :: <anonymous-4038>;
  slot GtkContainerClass-_gtk-reserved4 :: <anonymous-4039>;
end;

define C-pointer-type <GtkContainerClass> => <_GtkContainerClass>;

define C-struct <_GtkBinClass>
  slot GtkBinClass-parent-class :: <_GtkContainerClass>;
end;

define C-pointer-type <GtkBinClass> => <_GtkBinClass>;

define C-subtype <_GtkBin> (<_GtkContainer>, <_AtkImplementorIface>) end;
define constant <GtkBin> = <_GtkBin>;

define C-struct <_GtkWindowGeometryInfo>
end;

define C-pointer-type <GtkWindowGeometryInfo> => <_GtkWindowGeometryInfo>;

define C-subtype <_GtkWindowGroup> (<_GObject>) end;
define constant <GtkWindowGroup> = <_GtkWindowGroup>;

define C-subtype <_GtkWindow> (<_GtkBin>, <_AtkImplementorIface>) end;
define constant <GtkWindow> = <_GtkWindow>;

define constant <anonymous-4101> = <C-function-pointer>;
define constant <anonymous-4102> = <C-function-pointer>;
define constant <anonymous-4103> = <C-function-pointer>;
define constant <anonymous-4104> = <C-function-pointer>;
define constant <anonymous-4105> = <C-function-pointer>;
define constant <anonymous-4106> = <C-function-pointer>;
define constant <anonymous-4107> = <C-function-pointer>;
define constant <anonymous-4108> = <C-function-pointer>;
define constant <anonymous-4109> = <C-function-pointer>;
define constant <anonymous-4110> = <C-function-pointer>;
define C-struct <_GtkWindowClass>
  slot GtkWindowClass-parent-class :: <_GtkBinClass>;
  slot GtkWindowClass-set-focus :: <anonymous-4101>;
  slot GtkWindowClass-frame-event :: <anonymous-4102>;
  slot GtkWindowClass-activate-focus :: <anonymous-4103>;
  slot GtkWindowClass-activate-default :: <anonymous-4104>;
  slot GtkWindowClass-move-focus :: <anonymous-4105>;
  slot GtkWindowClass-keys-changed :: <anonymous-4106>;
  slot GtkWindowClass-_gtk-reserved1 :: <anonymous-4107>;
  slot GtkWindowClass-_gtk-reserved2 :: <anonymous-4108>;
  slot GtkWindowClass-_gtk-reserved3 :: <anonymous-4109>;
  slot GtkWindowClass-_gtk-reserved4 :: <anonymous-4110>;
end;

define C-pointer-type <GtkWindowClass> => <_GtkWindowClass>;

define C-pointer-type <GObjectClass> => <_GObjectClass>;

define constant <anonymous-4111> = <C-function-pointer>;
define constant <anonymous-4112> = <C-function-pointer>;
define constant <anonymous-4113> = <C-function-pointer>;
define constant <anonymous-4114> = <C-function-pointer>;
define C-struct <_GtkWindowGroupClass>
  slot GtkWindowGroupClass-parent-class :: <_GObjectClass>;
  slot GtkWindowGroupClass-_gtk-reserved1 :: <anonymous-4111>;
  slot GtkWindowGroupClass-_gtk-reserved2 :: <anonymous-4112>;
  slot GtkWindowGroupClass-_gtk-reserved3 :: <anonymous-4113>;
  slot GtkWindowGroupClass-_gtk-reserved4 :: <anonymous-4114>;
end;

define C-pointer-type <GtkWindowGroupClass> => <_GtkWindowGroupClass>;

define C-function gtk-window-get-type
  result res :: <GType>;
  c-name: "gtk_window_get_type";
end;

define constant <GtkWindowType> = <C-int>;
define constant $GTK-WINDOW-TOPLEVEL = 0;
define constant $GTK-WINDOW-POPUP = 1;

define C-function gtk-window-new
  input parameter arg1 :: <GtkWindowType>;
  result res :: <GtkWidget>;
  c-name: "gtk_window_new";
end;

define C-function gtk-window-set-title
  input parameter arg1 :: <GtkWindow>;
  input parameter arg2 :: <gchar*>;
  c-name: "gtk_window_set_title";
end;

define C-function gtk-window-get-title
  input parameter arg1 :: <GtkWindow>;
  result res :: <gchar*>;
  c-name: "gtk_window_get_title";
end;

define C-function gtk-window-set-wmclass
  input parameter arg1 :: <GtkWindow>;
  input parameter arg2 :: <gchar*>;
  input parameter arg3 :: <gchar*>;
  c-name: "gtk_window_set_wmclass";
end;

define C-function gtk-window-set-role
  input parameter arg1 :: <GtkWindow>;
  input parameter arg2 :: <gchar*>;
  c-name: "gtk_window_set_role";
end;

define C-function gtk-window-set-startup-id
  input parameter arg1 :: <GtkWindow>;
  input parameter arg2 :: <gchar*>;
  c-name: "gtk_window_set_startup_id";
end;

define C-function gtk-window-get-role
  input parameter arg1 :: <GtkWindow>;
  result res :: <gchar*>;
  c-name: "gtk_window_get_role";
end;

define C-struct <_GtkAccelKey>
  slot GtkAccelKey-accel-key :: <C-unsigned-int>;
  slot GtkAccelKey-accel-mods :: <GdkModifierType>;
  bitfield slot GtkAccelKey-accel-flags :: <C-int>, width: 16;
end;

define C-pointer-type <GtkAccelKey> => <_GtkAccelKey>;

define constant <anonymous-1680> = <C-function-pointer>;
define constant <anonymous-1668> = <C-function-pointer>;
define constant <GClosureNotify> = <anonymous-1668>;

define C-struct <_GClosureNotifyData>
  slot GClosureNotifyData-data :: <C-void*>;
  slot GClosureNotifyData-notify :: <anonymous-1668>;
end;

define C-pointer-type <GClosureNotifyData> => <_GClosureNotifyData>;

define C-struct <_GClosure>
  bitfield slot GClosure-ref-count :: <C-int>, width: 15;
  bitfield slot GClosure-meta-marshal :: <C-int>, width: 1;
  bitfield slot GClosure-n-guards :: <C-int>, width: 1;
  bitfield slot GClosure-n-fnotifiers :: <C-int>, width: 2;
  bitfield slot GClosure-n-inotifiers :: <C-int>, width: 8;
  bitfield slot GClosure-in-inotify :: <C-int>, width: 1;
  bitfield slot GClosure-floating :: <C-int>, width: 1;
  bitfield slot GClosure-derivative-flag :: <C-int>, width: 1;
  bitfield slot GClosure-in-marshal :: <C-int>, width: 1;
  bitfield slot GClosure-is-invalid :: <C-int>, width: 1;
  slot GClosure-marshal :: <anonymous-1680>;
  slot GClosure-data :: <C-void*>;
  slot GClosure-notifiers :: <GClosureNotifyData>;
end;

define C-pointer-type <GClosure> => <_GClosure>;

define constant <GQuark> = <guint32>;

define C-struct <_GtkAccelGroupEntry>
  slot GtkAccelGroupEntry-key :: <_GtkAccelKey>;
  slot GtkAccelGroupEntry-closure :: <GClosure>;
  slot GtkAccelGroupEntry-accel-path-quark :: <C-unsigned-int>;
end;

define C-pointer-type <GtkAccelGroupEntry> => <_GtkAccelGroupEntry>;

define C-subtype <_GtkAccelGroup> (<_GObject>) end;
define constant <GtkAccelGroup> = <_GtkAccelGroup>;

define C-function gtk-window-add-accel-group
  input parameter arg1 :: <GtkWindow>;
  input parameter arg2 :: <GtkAccelGroup>;
  c-name: "gtk_window_add_accel_group";
end;

define C-function gtk-window-remove-accel-group
  input parameter arg1 :: <GtkWindow>;
  input parameter arg2 :: <GtkAccelGroup>;
  c-name: "gtk_window_remove_accel_group";
end;

define constant <GtkWindowPosition> = <C-int>;
define constant $GTK-WIN-POS-NONE = 0;
define constant $GTK-WIN-POS-CENTER = 1;
define constant $GTK-WIN-POS-MOUSE = 2;
define constant $GTK-WIN-POS-CENTER-ALWAYS = 3;
define constant $GTK-WIN-POS-CENTER-ON-PARENT = 4;

define C-function gtk-window-set-position
  input parameter arg1 :: <GtkWindow>;
  input parameter arg2 :: <GtkWindowPosition>;
  c-name: "gtk_window_set_position";
end;

define C-function gtk-window-activate-focus
  input parameter arg1 :: <GtkWindow>;
  result res :: <gboolean>;
  c-name: "gtk_window_activate_focus";
end;

define C-function gtk-window-set-focus
  input parameter arg1 :: <GtkWindow>;
  input parameter arg2 :: <GtkWidget>;
  c-name: "gtk_window_set_focus";
end;

define C-function gtk-window-get-focus
  input parameter arg1 :: <GtkWindow>;
  result res :: <GtkWidget>;
  c-name: "gtk_window_get_focus";
end;

define C-function gtk-window-set-default
  input parameter arg1 :: <GtkWindow>;
  input parameter arg2 :: <GtkWidget>;
  c-name: "gtk_window_set_default";
end;

define C-function gtk-window-activate-default
  input parameter arg1 :: <GtkWindow>;
  result res :: <gboolean>;
  c-name: "gtk_window_activate_default";
end;

define C-function gtk-window-set-transient-for
  input parameter arg1 :: <GtkWindow>;
  input parameter arg2 :: <GtkWindow>;
  c-name: "gtk_window_set_transient_for";
end;

define C-function gtk-window-get-transient-for
  input parameter arg1 :: <GtkWindow>;
  result res :: <GtkWindow>;
  c-name: "gtk_window_get_transient_for";
end;

define C-function gtk-window-set-opacity
  input parameter arg1 :: <GtkWindow>;
  input parameter arg2 :: <gdouble>;
  c-name: "gtk_window_set_opacity";
end;

define C-function gtk-window-get-opacity
  input parameter arg1 :: <GtkWindow>;
  result res :: <gdouble>;
  c-name: "gtk_window_get_opacity";
end;

define constant <GdkWindowTypeHint> = <C-int>;
define constant $GDK-WINDOW-TYPE-HINT-NORMAL = 0;
define constant $GDK-WINDOW-TYPE-HINT-DIALOG = 1;
define constant $GDK-WINDOW-TYPE-HINT-MENU = 2;
define constant $GDK-WINDOW-TYPE-HINT-TOOLBAR = 3;
define constant $GDK-WINDOW-TYPE-HINT-SPLASHSCREEN = 4;
define constant $GDK-WINDOW-TYPE-HINT-UTILITY = 5;
define constant $GDK-WINDOW-TYPE-HINT-DOCK = 6;
define constant $GDK-WINDOW-TYPE-HINT-DESKTOP = 7;
define constant $GDK-WINDOW-TYPE-HINT-DROPDOWN-MENU = 8;
define constant $GDK-WINDOW-TYPE-HINT-POPUP-MENU = 9;
define constant $GDK-WINDOW-TYPE-HINT-TOOLTIP = 10;
define constant $GDK-WINDOW-TYPE-HINT-NOTIFICATION = 11;
define constant $GDK-WINDOW-TYPE-HINT-COMBO = 12;
define constant $GDK-WINDOW-TYPE-HINT-DND = 13;

define C-function gtk-window-set-type-hint
  input parameter arg1 :: <GtkWindow>;
  input parameter arg2 :: <GdkWindowTypeHint>;
  c-name: "gtk_window_set_type_hint";
end;

define C-function gtk-window-get-type-hint
  input parameter arg1 :: <GtkWindow>;
  result res :: <GdkWindowTypeHint>;
  c-name: "gtk_window_get_type_hint";
end;

define C-function gtk-window-set-skip-taskbar-hint
  input parameter arg1 :: <GtkWindow>;
  input parameter arg2 :: <gboolean>;
  c-name: "gtk_window_set_skip_taskbar_hint";
end;

define C-function gtk-window-get-skip-taskbar-hint
  input parameter arg1 :: <GtkWindow>;
  result res :: <gboolean>;
  c-name: "gtk_window_get_skip_taskbar_hint";
end;

define C-function gtk-window-set-skip-pager-hint
  input parameter arg1 :: <GtkWindow>;
  input parameter arg2 :: <gboolean>;
  c-name: "gtk_window_set_skip_pager_hint";
end;

define C-function gtk-window-get-skip-pager-hint
  input parameter arg1 :: <GtkWindow>;
  result res :: <gboolean>;
  c-name: "gtk_window_get_skip_pager_hint";
end;

define C-function gtk-window-set-urgency-hint
  input parameter arg1 :: <GtkWindow>;
  input parameter arg2 :: <gboolean>;
  c-name: "gtk_window_set_urgency_hint";
end;

define C-function gtk-window-get-urgency-hint
  input parameter arg1 :: <GtkWindow>;
  result res :: <gboolean>;
  c-name: "gtk_window_get_urgency_hint";
end;

define C-function gtk-window-set-accept-focus
  input parameter arg1 :: <GtkWindow>;
  input parameter arg2 :: <gboolean>;
  c-name: "gtk_window_set_accept_focus";
end;

define C-function gtk-window-get-accept-focus
  input parameter arg1 :: <GtkWindow>;
  result res :: <gboolean>;
  c-name: "gtk_window_get_accept_focus";
end;

define C-function gtk-window-set-focus-on-map
  input parameter arg1 :: <GtkWindow>;
  input parameter arg2 :: <gboolean>;
  c-name: "gtk_window_set_focus_on_map";
end;

define C-function gtk-window-get-focus-on-map
  input parameter arg1 :: <GtkWindow>;
  result res :: <gboolean>;
  c-name: "gtk_window_get_focus_on_map";
end;

define C-function gtk-window-set-destroy-with-parent
  input parameter arg1 :: <GtkWindow>;
  input parameter arg2 :: <gboolean>;
  c-name: "gtk_window_set_destroy_with_parent";
end;

define C-function gtk-window-get-destroy-with-parent
  input parameter arg1 :: <GtkWindow>;
  result res :: <gboolean>;
  c-name: "gtk_window_get_destroy_with_parent";
end;

define C-function gtk-window-set-resizable
  input parameter arg1 :: <GtkWindow>;
  input parameter arg2 :: <gboolean>;
  c-name: "gtk_window_set_resizable";
end;

define C-function gtk-window-get-resizable
  input parameter arg1 :: <GtkWindow>;
  result res :: <gboolean>;
  c-name: "gtk_window_get_resizable";
end;

define constant <GdkGravity> = <C-int>;
define constant $GDK-GRAVITY-NORTH-WEST = 1;
define constant $GDK-GRAVITY-NORTH = 2;
define constant $GDK-GRAVITY-NORTH-EAST = 3;
define constant $GDK-GRAVITY-WEST = 4;
define constant $GDK-GRAVITY-CENTER = 5;
define constant $GDK-GRAVITY-EAST = 6;
define constant $GDK-GRAVITY-SOUTH-WEST = 7;
define constant $GDK-GRAVITY-SOUTH = 8;
define constant $GDK-GRAVITY-SOUTH-EAST = 9;
define constant $GDK-GRAVITY-STATIC = 10;

define C-function gtk-window-set-gravity
  input parameter arg1 :: <GtkWindow>;
  input parameter arg2 :: <GdkGravity>;
  c-name: "gtk_window_set_gravity";
end;

define C-function gtk-window-get-gravity
  input parameter arg1 :: <GtkWindow>;
  result res :: <GdkGravity>;
  c-name: "gtk_window_get_gravity";
end;

define C-struct <_GdkGeometry>
  slot GdkGeometry-min-width :: <C-signed-int>;
  slot GdkGeometry-min-height :: <C-signed-int>;
  slot GdkGeometry-max-width :: <C-signed-int>;
  slot GdkGeometry-max-height :: <C-signed-int>;
  slot GdkGeometry-base-width :: <C-signed-int>;
  slot GdkGeometry-base-height :: <C-signed-int>;
  slot GdkGeometry-width-inc :: <C-signed-int>;
  slot GdkGeometry-height-inc :: <C-signed-int>;
  slot GdkGeometry-min-aspect :: <C-double>;
  slot GdkGeometry-max-aspect :: <C-double>;
  slot GdkGeometry-win-gravity :: <GdkGravity>;
end;

define C-pointer-type <GdkGeometry> => <_GdkGeometry>;

define constant <GdkWindowHints> = <C-int>;
define constant $GDK-HINT-POS = 1;
define constant $GDK-HINT-MIN-SIZE = 2;
define constant $GDK-HINT-MAX-SIZE = 4;
define constant $GDK-HINT-BASE-SIZE = 8;
define constant $GDK-HINT-ASPECT = 16;
define constant $GDK-HINT-RESIZE-INC = 32;
define constant $GDK-HINT-WIN-GRAVITY = 64;
define constant $GDK-HINT-USER-POS = 128;
define constant $GDK-HINT-USER-SIZE = 256;

define C-function gtk-window-set-geometry-hints
  input parameter arg1 :: <GtkWindow>;
  input parameter arg2 :: <GtkWidget>;
  input parameter arg3 :: <GdkGeometry>;
  input parameter arg4 :: <GdkWindowHints>;
  c-name: "gtk_window_set_geometry_hints";
end;

define C-function gtk-window-set-screen
  input parameter arg1 :: <GtkWindow>;
  input parameter arg2 :: <GdkScreen>;
  c-name: "gtk_window_set_screen";
end;

define C-function gtk-window-get-screen
  input parameter arg1 :: <GtkWindow>;
  result res :: <GdkScreen>;
  c-name: "gtk_window_get_screen";
end;

define C-function gtk-window-is-active
  input parameter arg1 :: <GtkWindow>;
  result res :: <gboolean>;
  c-name: "gtk_window_is_active";
end;

define C-function gtk-window-has-toplevel-focus
  input parameter arg1 :: <GtkWindow>;
  result res :: <gboolean>;
  c-name: "gtk_window_has_toplevel_focus";
end;

define C-function gtk-window-set-has-frame
  input parameter arg1 :: <GtkWindow>;
  input parameter arg2 :: <gboolean>;
  c-name: "gtk_window_set_has_frame";
end;

define C-function gtk-window-get-has-frame
  input parameter arg1 :: <GtkWindow>;
  result res :: <gboolean>;
  c-name: "gtk_window_get_has_frame";
end;

define C-function gtk-window-set-frame-dimensions
  input parameter arg1 :: <GtkWindow>;
  input parameter arg2 :: <gint>;
  input parameter arg3 :: <gint>;
  input parameter arg4 :: <gint>;
  input parameter arg5 :: <gint>;
  c-name: "gtk_window_set_frame_dimensions";
end;

define C-function gtk-window-get-frame-dimensions
  input parameter arg1 :: <GtkWindow>;
  input parameter arg2 :: <gint*>;
  input parameter arg3 :: <gint*>;
  input parameter arg4 :: <gint*>;
  input parameter arg5 :: <gint*>;
  c-name: "gtk_window_get_frame_dimensions";
end;

define C-function gtk-window-set-decorated
  input parameter arg1 :: <GtkWindow>;
  input parameter arg2 :: <gboolean>;
  c-name: "gtk_window_set_decorated";
end;

define C-function gtk-window-get-decorated
  input parameter arg1 :: <GtkWindow>;
  result res :: <gboolean>;
  c-name: "gtk_window_get_decorated";
end;

define C-function gtk-window-set-deletable
  input parameter arg1 :: <GtkWindow>;
  input parameter arg2 :: <gboolean>;
  c-name: "gtk_window_set_deletable";
end;

define C-function gtk-window-get-deletable
  input parameter arg1 :: <GtkWindow>;
  result res :: <gboolean>;
  c-name: "gtk_window_get_deletable";
end;

define C-function gtk-window-set-icon-list
  input parameter arg1 :: <GtkWindow>;
  input parameter arg2 :: <GList>;
  c-name: "gtk_window_set_icon_list";
end;

define C-function gtk-window-get-icon-list
  input parameter arg1 :: <GtkWindow>;
  result res :: <GList>;
  c-name: "gtk_window_get_icon_list";
end;

define C-subtype <_GdkPixbuf> (<_GObject>) end;
define constant <GdkPixbuf> = <_GdkPixbuf>;

define C-function gtk-window-set-icon
  input parameter arg1 :: <GtkWindow>;
  input parameter arg2 :: <GdkPixbuf>;
  c-name: "gtk_window_set_icon";
end;

define C-function gtk-window-set-icon-name
  input parameter arg1 :: <GtkWindow>;
  input parameter arg2 :: <gchar*>;
  c-name: "gtk_window_set_icon_name";
end;

define C-struct <_GError>
  slot GError-domain :: <C-unsigned-int>;
  slot GError-code :: <C-signed-int>;
  slot GError-message :: <gchar*>;
end;

define C-pointer-type <GError> => <_GError>;

define C-pointer-type <GError*> => <GError>;
define C-function gtk-window-set-icon-from-file
  input parameter arg1 :: <GtkWindow>;
  input parameter arg2 :: <gchar*>;
  input parameter arg3 :: <GError*>;
  result res :: <gboolean>;
  c-name: "gtk_window_set_icon_from_file";
end;

define C-function gtk-window-get-icon
  input parameter arg1 :: <GtkWindow>;
  result res :: <GdkPixbuf>;
  c-name: "gtk_window_get_icon";
end;

define C-function gtk-window-get-icon-name
  input parameter arg1 :: <GtkWindow>;
  result res :: <gchar*>;
  c-name: "gtk_window_get_icon_name";
end;

define C-function gtk-window-set-default-icon-list
  input parameter arg1 :: <GList>;
  c-name: "gtk_window_set_default_icon_list";
end;

define C-function gtk-window-get-default-icon-list
  result res :: <GList>;
  c-name: "gtk_window_get_default_icon_list";
end;

define C-function gtk-window-set-default-icon
  input parameter arg1 :: <GdkPixbuf>;
  c-name: "gtk_window_set_default_icon";
end;

define C-function gtk-window-set-default-icon-name
  input parameter arg1 :: <gchar*>;
  c-name: "gtk_window_set_default_icon_name";
end;

define C-function gtk-window-set-default-icon-from-file
  input parameter arg1 :: <gchar*>;
  input parameter arg2 :: <GError*>;
  result res :: <gboolean>;
  c-name: "gtk_window_set_default_icon_from_file";
end;

define C-function gtk-window-set-auto-startup-notification
  input parameter arg1 :: <gboolean>;
  c-name: "gtk_window_set_auto_startup_notification";
end;

define C-function gtk-window-set-modal
  input parameter arg1 :: <GtkWindow>;
  input parameter arg2 :: <gboolean>;
  c-name: "gtk_window_set_modal";
end;

define C-function gtk-window-get-modal
  input parameter arg1 :: <GtkWindow>;
  result res :: <gboolean>;
  c-name: "gtk_window_get_modal";
end;

define C-function gtk-window-list-toplevels
  result res :: <GList>;
  c-name: "gtk_window_list_toplevels";
end;

define C-function gtk-window-add-mnemonic
  input parameter arg1 :: <GtkWindow>;
  input parameter arg2 :: <guint>;
  input parameter arg3 :: <GtkWidget>;
  c-name: "gtk_window_add_mnemonic";
end;

define C-function gtk-window-remove-mnemonic
  input parameter arg1 :: <GtkWindow>;
  input parameter arg2 :: <guint>;
  input parameter arg3 :: <GtkWidget>;
  c-name: "gtk_window_remove_mnemonic";
end;

define C-function gtk-window-mnemonic-activate
  input parameter arg1 :: <GtkWindow>;
  input parameter arg2 :: <guint>;
  input parameter arg3 :: <GdkModifierType>;
  result res :: <gboolean>;
  c-name: "gtk_window_mnemonic_activate";
end;

define C-function gtk-window-set-mnemonic-modifier
  input parameter arg1 :: <GtkWindow>;
  input parameter arg2 :: <GdkModifierType>;
  c-name: "gtk_window_set_mnemonic_modifier";
end;

define C-function gtk-window-get-mnemonic-modifier
  input parameter arg1 :: <GtkWindow>;
  result res :: <GdkModifierType>;
  c-name: "gtk_window_get_mnemonic_modifier";
end;

define C-function gtk-window-activate-key
  input parameter arg1 :: <GtkWindow>;
  input parameter arg2 :: <GdkEventKey>;
  result res :: <gboolean>;
  c-name: "gtk_window_activate_key";
end;

define C-function gtk-window-propagate-key-event
  input parameter arg1 :: <GtkWindow>;
  input parameter arg2 :: <GdkEventKey>;
  result res :: <gboolean>;
  c-name: "gtk_window_propagate_key_event";
end;

define C-function gtk-window-present
  input parameter arg1 :: <GtkWindow>;
  c-name: "gtk_window_present";
end;

define C-function gtk-window-present-with-time
  input parameter arg1 :: <GtkWindow>;
  input parameter arg2 :: <guint32>;
  c-name: "gtk_window_present_with_time";
end;

define C-function gtk-window-iconify
  input parameter arg1 :: <GtkWindow>;
  c-name: "gtk_window_iconify";
end;

define C-function gtk-window-deiconify
  input parameter arg1 :: <GtkWindow>;
  c-name: "gtk_window_deiconify";
end;

define C-function gtk-window-stick
  input parameter arg1 :: <GtkWindow>;
  c-name: "gtk_window_stick";
end;

define C-function gtk-window-unstick
  input parameter arg1 :: <GtkWindow>;
  c-name: "gtk_window_unstick";
end;

define C-function gtk-window-maximize
  input parameter arg1 :: <GtkWindow>;
  c-name: "gtk_window_maximize";
end;

define C-function gtk-window-unmaximize
  input parameter arg1 :: <GtkWindow>;
  c-name: "gtk_window_unmaximize";
end;

define C-function gtk-window-fullscreen
  input parameter arg1 :: <GtkWindow>;
  c-name: "gtk_window_fullscreen";
end;

define C-function gtk-window-unfullscreen
  input parameter arg1 :: <GtkWindow>;
  c-name: "gtk_window_unfullscreen";
end;

define C-function gtk-window-set-keep-above
  input parameter arg1 :: <GtkWindow>;
  input parameter arg2 :: <gboolean>;
  c-name: "gtk_window_set_keep_above";
end;

define C-function gtk-window-set-keep-below
  input parameter arg1 :: <GtkWindow>;
  input parameter arg2 :: <gboolean>;
  c-name: "gtk_window_set_keep_below";
end;

define constant <GdkWindowEdge> = <C-int>;
define constant $GDK-WINDOW-EDGE-NORTH-WEST = 0;
define constant $GDK-WINDOW-EDGE-NORTH = 1;
define constant $GDK-WINDOW-EDGE-NORTH-EAST = 2;
define constant $GDK-WINDOW-EDGE-WEST = 3;
define constant $GDK-WINDOW-EDGE-EAST = 4;
define constant $GDK-WINDOW-EDGE-SOUTH-WEST = 5;
define constant $GDK-WINDOW-EDGE-SOUTH = 6;
define constant $GDK-WINDOW-EDGE-SOUTH-EAST = 7;

define C-function gtk-window-begin-resize-drag
  input parameter arg1 :: <GtkWindow>;
  input parameter arg2 :: <GdkWindowEdge>;
  input parameter arg3 :: <gint>;
  input parameter arg4 :: <gint>;
  input parameter arg5 :: <gint>;
  input parameter arg6 :: <guint32>;
  c-name: "gtk_window_begin_resize_drag";
end;

define C-function gtk-window-begin-move-drag
  input parameter arg1 :: <GtkWindow>;
  input parameter arg2 :: <gint>;
  input parameter arg3 :: <gint>;
  input parameter arg4 :: <gint>;
  input parameter arg5 :: <guint32>;
  c-name: "gtk_window_begin_move_drag";
end;

define C-function gtk-window-set-policy
  input parameter arg1 :: <GtkWindow>;
  input parameter arg2 :: <gint>;
  input parameter arg3 :: <gint>;
  input parameter arg4 :: <gint>;
  c-name: "gtk_window_set_policy";
end;

define C-function gtk-window-set-default-size
  input parameter arg1 :: <GtkWindow>;
  input parameter arg2 :: <gint>;
  input parameter arg3 :: <gint>;
  c-name: "gtk_window_set_default_size";
end;

define C-function gtk-window-get-default-size
  input parameter arg1 :: <GtkWindow>;
  input parameter arg2 :: <gint*>;
  input parameter arg3 :: <gint*>;
  c-name: "gtk_window_get_default_size";
end;

define C-function gtk-window-resize
  input parameter arg1 :: <GtkWindow>;
  input parameter arg2 :: <gint>;
  input parameter arg3 :: <gint>;
  c-name: "gtk_window_resize";
end;

define C-function gtk-window-get-size
  input parameter arg1 :: <GtkWindow>;
  input parameter arg2 :: <gint*>;
  input parameter arg3 :: <gint*>;
  c-name: "gtk_window_get_size";
end;

define C-function gtk-window-move
  input parameter arg1 :: <GtkWindow>;
  input parameter arg2 :: <gint>;
  input parameter arg3 :: <gint>;
  c-name: "gtk_window_move";
end;

define C-function gtk-window-get-position
  input parameter arg1 :: <GtkWindow>;
  input parameter arg2 :: <gint*>;
  input parameter arg3 :: <gint*>;
  c-name: "gtk_window_get_position";
end;

define C-function gtk-window-parse-geometry
  input parameter arg1 :: <GtkWindow>;
  input parameter arg2 :: <gchar*>;
  result res :: <gboolean>;
  c-name: "gtk_window_parse_geometry";
end;

define C-function gtk-window-get-group
  input parameter arg1 :: <GtkWindow>;
  result res :: <GtkWindowGroup>;
  c-name: "gtk_window_get_group";
end;

define C-function gtk-window-reshow-with-initial-size
  input parameter arg1 :: <GtkWindow>;
  c-name: "gtk_window_reshow_with_initial_size";
end;

define C-function gtk-window-group-get-type
  result res :: <GType>;
  c-name: "gtk_window_group_get_type";
end;

define C-function gtk-window-group-new
  result res :: <GtkWindowGroup>;
  c-name: "gtk_window_group_new";
end;

define C-function gtk-window-group-add-window
  input parameter arg1 :: <GtkWindowGroup>;
  input parameter arg2 :: <GtkWindow>;
  c-name: "gtk_window_group_add_window";
end;

define C-function gtk-window-group-remove-window
  input parameter arg1 :: <GtkWindowGroup>;
  input parameter arg2 :: <GtkWindow>;
  c-name: "gtk_window_group_remove_window";
end;

define C-function gtk-window-remove-embedded-xid
  input parameter arg1 :: <GtkWindow>;
  input parameter arg2 :: <guint>;
  c-name: "gtk_window_remove_embedded_xid";
end;

define C-function gtk-window-add-embedded-xid
  input parameter arg1 :: <GtkWindow>;
  input parameter arg2 :: <guint>;
  c-name: "gtk_window_add_embedded_xid";
end;

define constant <anonymous-4226> = <C-function-pointer>;
define constant <GtkWindowKeysForeachFunc> = <anonymous-4226>;

define constant gtk-window-position = gtk-window-set-position;

define constant <GtkWidgetFlags> = <C-int>;
define constant $GTK-TOPLEVEL = 16;
define constant $GTK-NO-WINDOW = 32;
define constant $GTK-REALIZED = 64;
define constant $GTK-MAPPED = 128;
define constant $GTK-VISIBLE = 256;
define constant $GTK-SENSITIVE = 512;
define constant $GTK-PARENT-SENSITIVE = 1024;
define constant $GTK-CAN-FOCUS = 2048;
define constant $GTK-HAS-FOCUS = 4096;
define constant $GTK-CAN-DEFAULT = 8192;
define constant $GTK-HAS-DEFAULT = 16384;
define constant $GTK-HAS-GRAB = 32768;
define constant $GTK-RC-STYLE = 65536;
define constant $GTK-COMPOSITE-CHILD = 131072;
define constant $GTK-NO-REPARENT = 262144;
define constant $GTK-APP-PAINTABLE = 524288;
define constant $GTK-RECEIVES-DEFAULT = 1048576;
define constant $GTK-DOUBLE-BUFFERED = 2097152;
define constant $GTK-NO-SHOW-ALL = 4194304;

define C-struct <_GtkWidgetAuxInfo>
  slot GtkWidgetAuxInfo-x :: <C-signed-int>;
  slot GtkWidgetAuxInfo-y :: <C-signed-int>;
  slot GtkWidgetAuxInfo-width :: <C-signed-int>;
  slot GtkWidgetAuxInfo-height :: <C-signed-int>;
  bitfield slot GtkWidgetAuxInfo-x-set :: <C-int>, width: 1;
  bitfield slot GtkWidgetAuxInfo-y-set :: <C-int>, width: 1;
end;

define C-pointer-type <GtkWidgetAuxInfo> => <_GtkWidgetAuxInfo>;

define C-subtype <_GdkBitmap> (<_GdkDrawable>) end;

define constant <GdkBitmap> = <_GdkBitmap>;

define C-struct <_GtkWidgetShapeInfo>
  slot GtkWidgetShapeInfo-offset-x :: <C-signed-short>;
  slot GtkWidgetShapeInfo-offset-y :: <C-signed-short>;
  slot GtkWidgetShapeInfo-shape-mask :: <GdkBitmap>;
end;

define C-pointer-type <GtkWidgetShapeInfo> => <_GtkWidgetShapeInfo>;

define C-subtype <_GtkClipboard> (<_GObject>) end;
define constant <GtkClipboard> = <_GtkClipboard>;

define C-function gtk-widget-get-type
  result res :: <GType>;
  c-name: "gtk_widget_get_type";
end;

define C-function gtk-widget-new
  input parameter arg1 :: <GType>;
  input parameter arg2 :: <gchar*>;
  result res :: <GtkWidget>;
  c-name: "gtk_widget_new";
end;

define C-function gtk-widget-destroy
  input parameter arg1 :: <GtkWidget>;
  c-name: "gtk_widget_destroy";
end;

define C-pointer-type <GtkWidget*> => <GtkWidget>;
define C-function gtk-widget-destroyed
  input parameter arg1 :: <GtkWidget>;
  input parameter arg2 :: <GtkWidget*>;
  c-name: "gtk_widget_destroyed";
end;

define C-function gtk-widget-ref
  input parameter arg1 :: <GtkWidget>;
  result res :: <GtkWidget>;
  c-name: "gtk_widget_ref";
end;

define C-function gtk-widget-unref
  input parameter arg1 :: <GtkWidget>;
  c-name: "gtk_widget_unref";
end;

define C-function gtk-widget-set
  input parameter arg1 :: <GtkWidget>;
  input parameter arg2 :: <gchar*>;
  c-name: "gtk_widget_set";
end;

define C-function gtk-widget-unparent
  input parameter arg1 :: <GtkWidget>;
  c-name: "gtk_widget_unparent";
end;

define C-function gtk-widget-show
  input parameter arg1 :: <GtkWidget>;
  c-name: "gtk_widget_show";
end;

define C-function gtk-widget-show-now
  input parameter arg1 :: <GtkWidget>;
  c-name: "gtk_widget_show_now";
end;

define C-function gtk-widget-hide
  input parameter arg1 :: <GtkWidget>;
  c-name: "gtk_widget_hide";
end;

define C-function gtk-widget-show-all
  input parameter arg1 :: <GtkWidget>;
  c-name: "gtk_widget_show_all";
end;

define C-function gtk-widget-hide-all
  input parameter arg1 :: <GtkWidget>;
  c-name: "gtk_widget_hide_all";
end;

define C-function gtk-widget-set-no-show-all
  input parameter arg1 :: <GtkWidget>;
  input parameter arg2 :: <gboolean>;
  c-name: "gtk_widget_set_no_show_all";
end;

define C-function gtk-widget-get-no-show-all
  input parameter arg1 :: <GtkWidget>;
  result res :: <gboolean>;
  c-name: "gtk_widget_get_no_show_all";
end;

define C-function gtk-widget-map
  input parameter arg1 :: <GtkWidget>;
  c-name: "gtk_widget_map";
end;

define C-function gtk-widget-unmap
  input parameter arg1 :: <GtkWidget>;
  c-name: "gtk_widget_unmap";
end;

define C-function gtk-widget-realize
  input parameter arg1 :: <GtkWidget>;
  c-name: "gtk_widget_realize";
end;

define C-function gtk-widget-unrealize
  input parameter arg1 :: <GtkWidget>;
  c-name: "gtk_widget_unrealize";
end;

define C-function gtk-widget-queue-draw
  input parameter arg1 :: <GtkWidget>;
  c-name: "gtk_widget_queue_draw";
end;

define C-function gtk-widget-queue-draw-area
  input parameter arg1 :: <GtkWidget>;
  input parameter arg2 :: <gint>;
  input parameter arg3 :: <gint>;
  input parameter arg4 :: <gint>;
  input parameter arg5 :: <gint>;
  c-name: "gtk_widget_queue_draw_area";
end;

define C-function gtk-widget-queue-clear
  input parameter arg1 :: <GtkWidget>;
  c-name: "gtk_widget_queue_clear";
end;

define C-function gtk-widget-queue-clear-area
  input parameter arg1 :: <GtkWidget>;
  input parameter arg2 :: <gint>;
  input parameter arg3 :: <gint>;
  input parameter arg4 :: <gint>;
  input parameter arg5 :: <gint>;
  c-name: "gtk_widget_queue_clear_area";
end;

define C-function gtk-widget-queue-resize
  input parameter arg1 :: <GtkWidget>;
  c-name: "gtk_widget_queue_resize";
end;

define C-function gtk-widget-queue-resize-no-redraw
  input parameter arg1 :: <GtkWidget>;
  c-name: "gtk_widget_queue_resize_no_redraw";
end;

define C-function gtk-widget-draw
  input parameter arg1 :: <GtkWidget>;
  input parameter arg2 :: <GdkRectangle>;
  c-name: "gtk_widget_draw";
end;

define C-function gtk-widget-size-request
  input parameter arg1 :: <GtkWidget>;
  input parameter arg2 :: <GtkRequisition>;
  c-name: "gtk_widget_size_request";
end;

define C-function gtk-widget-size-allocate
  input parameter arg1 :: <GtkWidget>;
  input parameter arg2 :: <GtkAllocation>;
  c-name: "gtk_widget_size_allocate";
end;

define C-function gtk-widget-get-child-requisition
  input parameter arg1 :: <GtkWidget>;
  input parameter arg2 :: <GtkRequisition>;
  c-name: "gtk_widget_get_child_requisition";
end;

define constant <GtkAccelFlags> = <C-int>;
define constant $GTK-ACCEL-VISIBLE = 1;
define constant $GTK-ACCEL-LOCKED = 2;
define constant $GTK-ACCEL-MASK = 7;

define C-function gtk-widget-add-accelerator
  input parameter arg1 :: <GtkWidget>;
  input parameter arg2 :: <gchar*>;
  input parameter arg3 :: <GtkAccelGroup>;
  input parameter arg4 :: <guint>;
  input parameter arg5 :: <GdkModifierType>;
  input parameter arg6 :: <GtkAccelFlags>;
  c-name: "gtk_widget_add_accelerator";
end;

define C-function gtk-widget-remove-accelerator
  input parameter arg1 :: <GtkWidget>;
  input parameter arg2 :: <GtkAccelGroup>;
  input parameter arg3 :: <guint>;
  input parameter arg4 :: <GdkModifierType>;
  result res :: <gboolean>;
  c-name: "gtk_widget_remove_accelerator";
end;

define C-function gtk-widget-set-accel-path
  input parameter arg1 :: <GtkWidget>;
  input parameter arg2 :: <gchar*>;
  input parameter arg3 :: <GtkAccelGroup>;
  c-name: "gtk_widget_set_accel_path";
end;

define C-function gtk-widget-list-accel-closures
  input parameter arg1 :: <GtkWidget>;
  result res :: <GList>;
  c-name: "gtk_widget_list_accel_closures";
end;

define C-function gtk-widget-can-activate-accel
  input parameter arg1 :: <GtkWidget>;
  input parameter arg2 :: <guint>;
  result res :: <gboolean>;
  c-name: "gtk_widget_can_activate_accel";
end;

define C-function gtk-widget-mnemonic-activate
  input parameter arg1 :: <GtkWidget>;
  input parameter arg2 :: <gboolean>;
  result res :: <gboolean>;
  c-name: "gtk_widget_mnemonic_activate";
end;

define C-function gtk-widget-event
  input parameter arg1 :: <GtkWidget>;
  input parameter arg2 :: <GdkEvent>;
  result res :: <gboolean>;
  c-name: "gtk_widget_event";
end;

define C-function gtk-widget-send-expose
  input parameter arg1 :: <GtkWidget>;
  input parameter arg2 :: <GdkEvent>;
  result res :: <gint>;
  c-name: "gtk_widget_send_expose";
end;

define C-function gtk-widget-activate
  input parameter arg1 :: <GtkWidget>;
  result res :: <gboolean>;
  c-name: "gtk_widget_activate";
end;

define C-subtype <_GtkAdjustment> (<_GtkObject>) end;
define constant <GtkAdjustment> = <_GtkAdjustment>;

define C-function gtk-widget-set-scroll-adjustments
  input parameter arg1 :: <GtkWidget>;
  input parameter arg2 :: <GtkAdjustment>;
  input parameter arg3 :: <GtkAdjustment>;
  result res :: <gboolean>;
  c-name: "gtk_widget_set_scroll_adjustments";
end;

define C-function gtk-widget-reparent
  input parameter arg1 :: <GtkWidget>;
  input parameter arg2 :: <GtkWidget>;
  c-name: "gtk_widget_reparent";
end;

define C-function gtk-widget-intersect
  input parameter arg1 :: <GtkWidget>;
  input parameter arg2 :: <GdkRectangle>;
  input parameter arg3 :: <GdkRectangle>;
  result res :: <gboolean>;
  c-name: "gtk_widget_intersect";
end;

define C-function gtk-widget-region-intersect
  input parameter arg1 :: <GtkWidget>;
  input parameter arg2 :: <GdkRegion>;
  result res :: <GdkRegion>;
  c-name: "gtk_widget_region_intersect";
end;

define C-function gtk-widget-freeze-child-notify
  input parameter arg1 :: <GtkWidget>;
  c-name: "gtk_widget_freeze_child_notify";
end;

define C-function gtk-widget-child-notify
  input parameter arg1 :: <GtkWidget>;
  input parameter arg2 :: <gchar*>;
  c-name: "gtk_widget_child_notify";
end;

define C-function gtk-widget-thaw-child-notify
  input parameter arg1 :: <GtkWidget>;
  c-name: "gtk_widget_thaw_child_notify";
end;

define C-function gtk-widget-is-focus
  input parameter arg1 :: <GtkWidget>;
  result res :: <gboolean>;
  c-name: "gtk_widget_is_focus";
end;

define C-function gtk-widget-grab-focus
  input parameter arg1 :: <GtkWidget>;
  c-name: "gtk_widget_grab_focus";
end;

define C-function gtk-widget-grab-default
  input parameter arg1 :: <GtkWidget>;
  c-name: "gtk_widget_grab_default";
end;

define C-function gtk-widget-set-name
  input parameter arg1 :: <GtkWidget>;
  input parameter arg2 :: <gchar*>;
  c-name: "gtk_widget_set_name";
end;

define C-function gtk-widget-get-name
  input parameter arg1 :: <GtkWidget>;
  result res :: <gchar*>;
  c-name: "gtk_widget_get_name";
end;

define C-function gtk-widget-set-state
  input parameter arg1 :: <GtkWidget>;
  input parameter arg2 :: <GtkStateType>;
  c-name: "gtk_widget_set_state";
end;

define C-function gtk-widget-set-sensitive
  input parameter arg1 :: <GtkWidget>;
  input parameter arg2 :: <gboolean>;
  c-name: "gtk_widget_set_sensitive";
end;

define C-function gtk-widget-set-app-paintable
  input parameter arg1 :: <GtkWidget>;
  input parameter arg2 :: <gboolean>;
  c-name: "gtk_widget_set_app_paintable";
end;

define C-function gtk-widget-set-double-buffered
  input parameter arg1 :: <GtkWidget>;
  input parameter arg2 :: <gboolean>;
  c-name: "gtk_widget_set_double_buffered";
end;

define C-function gtk-widget-set-redraw-on-allocate
  input parameter arg1 :: <GtkWidget>;
  input parameter arg2 :: <gboolean>;
  c-name: "gtk_widget_set_redraw_on_allocate";
end;

define C-function gtk-widget-set-parent
  input parameter arg1 :: <GtkWidget>;
  input parameter arg2 :: <GtkWidget>;
  c-name: "gtk_widget_set_parent";
end;

define C-function gtk-widget-set-parent-window
  input parameter arg1 :: <GtkWidget>;
  input parameter arg2 :: <GdkWindow>;
  c-name: "gtk_widget_set_parent_window";
end;

define C-function gtk-widget-set-child-visible
  input parameter arg1 :: <GtkWidget>;
  input parameter arg2 :: <gboolean>;
  c-name: "gtk_widget_set_child_visible";
end;

define C-function gtk-widget-get-child-visible
  input parameter arg1 :: <GtkWidget>;
  result res :: <gboolean>;
  c-name: "gtk_widget_get_child_visible";
end;

define C-function gtk-widget-get-parent
  input parameter arg1 :: <GtkWidget>;
  result res :: <GtkWidget>;
  c-name: "gtk_widget_get_parent";
end;

define C-function gtk-widget-get-parent-window
  input parameter arg1 :: <GtkWidget>;
  result res :: <GdkWindow>;
  c-name: "gtk_widget_get_parent_window";
end;

define C-function gtk-widget-child-focus
  input parameter arg1 :: <GtkWidget>;
  input parameter arg2 :: <GtkDirectionType>;
  result res :: <gboolean>;
  c-name: "gtk_widget_child_focus";
end;

define C-function gtk-widget-keynav-failed
  input parameter arg1 :: <GtkWidget>;
  input parameter arg2 :: <GtkDirectionType>;
  result res :: <gboolean>;
  c-name: "gtk_widget_keynav_failed";
end;

define C-function gtk-widget-error-bell
  input parameter arg1 :: <GtkWidget>;
  c-name: "gtk_widget_error_bell";
end;

define C-function gtk-widget-set-size-request
  input parameter arg1 :: <GtkWidget>;
  input parameter arg2 :: <gint>;
  input parameter arg3 :: <gint>;
  c-name: "gtk_widget_set_size_request";
end;

define C-function gtk-widget-get-size-request
  input parameter arg1 :: <GtkWidget>;
  input parameter arg2 :: <gint*>;
  input parameter arg3 :: <gint*>;
  c-name: "gtk_widget_get_size_request";
end;

define C-function gtk-widget-set-uposition
  input parameter arg1 :: <GtkWidget>;
  input parameter arg2 :: <gint>;
  input parameter arg3 :: <gint>;
  c-name: "gtk_widget_set_uposition";
end;

define C-function gtk-widget-set-usize
  input parameter arg1 :: <GtkWidget>;
  input parameter arg2 :: <gint>;
  input parameter arg3 :: <gint>;
  c-name: "gtk_widget_set_usize";
end;

define C-function gtk-widget-set-events
  input parameter arg1 :: <GtkWidget>;
  input parameter arg2 :: <gint>;
  c-name: "gtk_widget_set_events";
end;

define C-function gtk-widget-add-events
  input parameter arg1 :: <GtkWidget>;
  input parameter arg2 :: <gint>;
  c-name: "gtk_widget_add_events";
end;

define constant <GdkExtensionMode> = <C-int>;
define constant $GDK-EXTENSION-EVENTS-NONE = 0;
define constant $GDK-EXTENSION-EVENTS-ALL = 1;
define constant $GDK-EXTENSION-EVENTS-CURSOR = 2;

define C-function gtk-widget-set-extension-events
  input parameter arg1 :: <GtkWidget>;
  input parameter arg2 :: <GdkExtensionMode>;
  c-name: "gtk_widget_set_extension_events";
end;

define C-function gtk-widget-get-extension-events
  input parameter arg1 :: <GtkWidget>;
  result res :: <GdkExtensionMode>;
  c-name: "gtk_widget_get_extension_events";
end;

define C-function gtk-widget-get-toplevel
  input parameter arg1 :: <GtkWidget>;
  result res :: <GtkWidget>;
  c-name: "gtk_widget_get_toplevel";
end;

define C-function gtk-widget-get-ancestor
  input parameter arg1 :: <GtkWidget>;
  input parameter arg2 :: <GType>;
  result res :: <GtkWidget>;
  c-name: "gtk_widget_get_ancestor";
end;

define C-function gtk-widget-get-colormap
  input parameter arg1 :: <GtkWidget>;
  result res :: <GdkColormap>;
  c-name: "gtk_widget_get_colormap";
end;

define C-function gtk-widget-get-visual
  input parameter arg1 :: <GtkWidget>;
  result res :: <GdkVisual>;
  c-name: "gtk_widget_get_visual";
end;

define C-function gtk-widget-get-screen
  input parameter arg1 :: <GtkWidget>;
  result res :: <GdkScreen>;
  c-name: "gtk_widget_get_screen";
end;

define C-function gtk-widget-has-screen
  input parameter arg1 :: <GtkWidget>;
  result res :: <gboolean>;
  c-name: "gtk_widget_has_screen";
end;

define C-function gtk-widget-get-display
  input parameter arg1 :: <GtkWidget>;
  result res :: <GdkDisplay>;
  c-name: "gtk_widget_get_display";
end;

define C-function gtk-widget-get-root-window
  input parameter arg1 :: <GtkWidget>;
  result res :: <GdkWindow>;
  c-name: "gtk_widget_get_root_window";
end;

define C-struct <_GtkSettingsPropertyValue>
end;

define C-pointer-type <GtkSettingsPropertyValue> => <_GtkSettingsPropertyValue>;

define C-struct <_GtkRcContext>
end;

define C-pointer-type <GtkRcContext> => <_GtkRcContext>;

define C-subtype <_GtkSettings> (<_GObject>) end;
define constant <GtkSettings> = <_GtkSettings>;

define C-function gtk-widget-get-settings
  input parameter arg1 :: <GtkWidget>;
  result res :: <GtkSettings>;
  c-name: "gtk_widget_get_settings";
end;

define C-function gtk-widget-get-clipboard
  input parameter arg1 :: <GtkWidget>;
  input parameter arg2 :: <GdkAtom>;
  result res :: <GtkClipboard>;
  c-name: "gtk_widget_get_clipboard";
end;

define C-function gtk-widget-get-accessible
  input parameter arg1 :: <GtkWidget>;
  result res :: <AtkObject>;
  c-name: "gtk_widget_get_accessible";
end;

define C-function gtk-widget-set-colormap
  input parameter arg1 :: <GtkWidget>;
  input parameter arg2 :: <GdkColormap>;
  c-name: "gtk_widget_set_colormap";
end;

define C-function gtk-widget-get-events
  input parameter arg1 :: <GtkWidget>;
  result res :: <gint>;
  c-name: "gtk_widget_get_events";
end;

define C-function gtk-widget-get-pointer
  input parameter arg1 :: <GtkWidget>;
  input parameter arg2 :: <gint*>;
  input parameter arg3 :: <gint*>;
  c-name: "gtk_widget_get_pointer";
end;

define C-function gtk-widget-is-ancestor
  input parameter arg1 :: <GtkWidget>;
  input parameter arg2 :: <GtkWidget>;
  result res :: <gboolean>;
  c-name: "gtk_widget_is_ancestor";
end;

define C-function gtk-widget-translate-coordinates
  input parameter arg1 :: <GtkWidget>;
  input parameter arg2 :: <GtkWidget>;
  input parameter arg3 :: <gint>;
  input parameter arg4 :: <gint>;
  input parameter arg5 :: <gint*>;
  input parameter arg6 :: <gint*>;
  result res :: <gboolean>;
  c-name: "gtk_widget_translate_coordinates";
end;

define C-function gtk-widget-hide-on-delete
  input parameter arg1 :: <GtkWidget>;
  result res :: <gboolean>;
  c-name: "gtk_widget_hide_on_delete";
end;

define C-function gtk-widget-set-style
  input parameter arg1 :: <GtkWidget>;
  input parameter arg2 :: <GtkStyle>;
  c-name: "gtk_widget_set_style";
end;

define C-function gtk-widget-ensure-style
  input parameter arg1 :: <GtkWidget>;
  c-name: "gtk_widget_ensure_style";
end;

define C-function gtk-widget-get-style
  input parameter arg1 :: <GtkWidget>;
  result res :: <GtkStyle>;
  c-name: "gtk_widget_get_style";
end;

define C-function gtk-widget-modify-style
  input parameter arg1 :: <GtkWidget>;
  input parameter arg2 :: <GtkRcStyle>;
  c-name: "gtk_widget_modify_style";
end;

define C-function gtk-widget-get-modifier-style
  input parameter arg1 :: <GtkWidget>;
  result res :: <GtkRcStyle>;
  c-name: "gtk_widget_get_modifier_style";
end;

define C-function gtk-widget-modify-fg
  input parameter arg1 :: <GtkWidget>;
  input parameter arg2 :: <GtkStateType>;
  input parameter arg3 :: <GdkColor>;
  c-name: "gtk_widget_modify_fg";
end;

define C-function gtk-widget-modify-bg
  input parameter arg1 :: <GtkWidget>;
  input parameter arg2 :: <GtkStateType>;
  input parameter arg3 :: <GdkColor>;
  c-name: "gtk_widget_modify_bg";
end;

define C-function gtk-widget-modify-text
  input parameter arg1 :: <GtkWidget>;
  input parameter arg2 :: <GtkStateType>;
  input parameter arg3 :: <GdkColor>;
  c-name: "gtk_widget_modify_text";
end;

define C-function gtk-widget-modify-base
  input parameter arg1 :: <GtkWidget>;
  input parameter arg2 :: <GtkStateType>;
  input parameter arg3 :: <GdkColor>;
  c-name: "gtk_widget_modify_base";
end;

define C-function gtk-widget-modify-cursor
  input parameter arg1 :: <GtkWidget>;
  input parameter arg2 :: <GdkColor>;
  input parameter arg3 :: <GdkColor>;
  c-name: "gtk_widget_modify_cursor";
end;

define C-function gtk-widget-modify-font
  input parameter arg1 :: <GtkWidget>;
  input parameter arg2 :: <PangoFontDescription>;
  c-name: "gtk_widget_modify_font";
end;

define C-subtype <_PangoContext> (<_GObject>) end;
define constant <PangoContext> = <_PangoContext>;

define C-function gtk-widget-create-pango-context
  input parameter arg1 :: <GtkWidget>;
  result res :: <PangoContext>;
  c-name: "gtk_widget_create_pango_context";
end;

define C-function gtk-widget-get-pango-context
  input parameter arg1 :: <GtkWidget>;
  result res :: <PangoContext>;
  c-name: "gtk_widget_get_pango_context";
end;

define C-subtype <_PangoLayout> (<_GObject>) end;
define constant <PangoLayout> = <_PangoLayout>;

define C-function gtk-widget-create-pango-layout
  input parameter arg1 :: <GtkWidget>;
  input parameter arg2 :: <gchar*>;
  result res :: <PangoLayout>;
  c-name: "gtk_widget_create_pango_layout";
end;

define constant <GtkIconSize> = <C-int>;
define constant $GTK-ICON-SIZE-INVALID = 0;
define constant $GTK-ICON-SIZE-MENU = 1;
define constant $GTK-ICON-SIZE-SMALL-TOOLBAR = 2;
define constant $GTK-ICON-SIZE-LARGE-TOOLBAR = 3;
define constant $GTK-ICON-SIZE-BUTTON = 4;
define constant $GTK-ICON-SIZE-DND = 5;
define constant $GTK-ICON-SIZE-DIALOG = 6;

define C-function gtk-widget-render-icon
  input parameter arg1 :: <GtkWidget>;
  input parameter arg2 :: <gchar*>;
  input parameter arg3 :: <GtkIconSize>;
  input parameter arg4 :: <gchar*>;
  result res :: <GdkPixbuf>;
  c-name: "gtk_widget_render_icon";
end;

define C-function gtk-widget-set-composite-name
  input parameter arg1 :: <GtkWidget>;
  input parameter arg2 :: <gchar*>;
  c-name: "gtk_widget_set_composite_name";
end;

define C-function gtk-widget-get-composite-name
  input parameter arg1 :: <GtkWidget>;
  result res :: <gchar*>;
  c-name: "gtk_widget_get_composite_name";
end;

define C-function gtk-widget-reset-rc-styles
  input parameter arg1 :: <GtkWidget>;
  c-name: "gtk_widget_reset_rc_styles";
end;

define C-function gtk-widget-push-colormap
  input parameter arg1 :: <GdkColormap>;
  c-name: "gtk_widget_push_colormap";
end;

define C-function gtk-widget-push-composite-child
  c-name: "gtk_widget_push_composite_child";
end;

define C-function gtk-widget-pop-composite-child
  c-name: "gtk_widget_pop_composite_child";
end;

define C-function gtk-widget-pop-colormap
  c-name: "gtk_widget_pop_colormap";
end;

define C-function gtk-widget-class-install-style-property
  input parameter arg1 :: <GtkWidgetClass>;
  input parameter arg2 :: <GParamSpec>;
  c-name: "gtk_widget_class_install_style_property";
end;

define C-struct <_GString>
  slot GString-str :: <gchar*>;
  slot GString-len :: <C-unsigned-int>;
  slot GString-allocated-len :: <C-unsigned-int>;
end;

define C-pointer-type <GString> => <_GString>;

define constant <anonymous-3555> = <C-function-pointer>;
define constant <GtkRcPropertyParser> = <anonymous-3555>;

define C-function gtk-widget-class-install-style-property-parser
  input parameter arg1 :: <GtkWidgetClass>;
  input parameter arg2 :: <GParamSpec>;
  input parameter arg3 :: <GtkRcPropertyParser>;
  c-name: "gtk_widget_class_install_style_property_parser";
end;

define C-function gtk-widget-class-find-style-property
  input parameter arg1 :: <GtkWidgetClass>;
  input parameter arg2 :: <gchar*>;
  result res :: <GParamSpec>;
  c-name: "gtk_widget_class_find_style_property";
end;

define C-pointer-type <guint*> => <guint>;
define C-function gtk-widget-class-list-style-properties
  input parameter arg1 :: <GtkWidgetClass>;
  input parameter arg2 :: <guint*>;
  result res :: <GParamSpec*>;
  c-name: "gtk_widget_class_list_style_properties";
end;

define C-function gtk-widget-style-get-property
  input parameter arg1 :: <GtkWidget>;
  input parameter arg2 :: <gchar*>;
  input parameter arg3 :: <GValue>;
  c-name: "gtk_widget_style_get_property";
end;

define constant <__gnuc-va-list> = <C-void*>;

define constant <va-list> = <__gnuc-va-list>;

define C-function gtk-widget-style-get-valist
  input parameter arg1 :: <GtkWidget>;
  input parameter arg2 :: <gchar*>;
  input parameter arg3 :: <va-list>;
  c-name: "gtk_widget_style_get_valist";
end;

define C-function gtk-widget-style-get
  input parameter arg1 :: <GtkWidget>;
  input parameter arg2 :: <gchar*>;
  c-name: "gtk_widget_style_get";
end;

define C-function gtk-widget-set-default-colormap
  input parameter arg1 :: <GdkColormap>;
  c-name: "gtk_widget_set_default_colormap";
end;

define C-function gtk-widget-get-default-style
  result res :: <GtkStyle>;
  c-name: "gtk_widget_get_default_style";
end;

define C-function gtk-widget-get-default-colormap
  result res :: <GdkColormap>;
  c-name: "gtk_widget_get_default_colormap";
end;

define C-function gtk-widget-get-default-visual
  result res :: <GdkVisual>;
  c-name: "gtk_widget_get_default_visual";
end;

define C-function gtk-widget-set-direction
  input parameter arg1 :: <GtkWidget>;
  input parameter arg2 :: <GtkTextDirection>;
  c-name: "gtk_widget_set_direction";
end;

define C-function gtk-widget-get-direction
  input parameter arg1 :: <GtkWidget>;
  result res :: <GtkTextDirection>;
  c-name: "gtk_widget_get_direction";
end;

define C-function gtk-widget-set-default-direction
  input parameter arg1 :: <GtkTextDirection>;
  c-name: "gtk_widget_set_default_direction";
end;

define C-function gtk-widget-get-default-direction
  result res :: <GtkTextDirection>;
  c-name: "gtk_widget_get_default_direction";
end;

define C-function gtk-widget-is-composited
  input parameter arg1 :: <GtkWidget>;
  result res :: <gboolean>;
  c-name: "gtk_widget_is_composited";
end;

define C-function gtk-widget-shape-combine-mask
  input parameter arg1 :: <GtkWidget>;
  input parameter arg2 :: <GdkBitmap>;
  input parameter arg3 :: <gint>;
  input parameter arg4 :: <gint>;
  c-name: "gtk_widget_shape_combine_mask";
end;

define C-function gtk-widget-input-shape-combine-mask
  input parameter arg1 :: <GtkWidget>;
  input parameter arg2 :: <GdkBitmap>;
  input parameter arg3 :: <gint>;
  input parameter arg4 :: <gint>;
  c-name: "gtk_widget_input_shape_combine_mask";
end;

define C-function gtk-widget-reset-shapes
  input parameter arg1 :: <GtkWidget>;
  c-name: "gtk_widget_reset_shapes";
end;

define C-function gtk-widget-path
  input parameter arg1 :: <GtkWidget>;
  input parameter arg2 :: <guint*>;
  input parameter arg3 :: <gchar**>;
  input parameter arg4 :: <gchar**>;
  c-name: "gtk_widget_path";
end;

define C-function gtk-widget-class-path
  input parameter arg1 :: <GtkWidget>;
  input parameter arg2 :: <guint*>;
  input parameter arg3 :: <gchar**>;
  input parameter arg4 :: <gchar**>;
  c-name: "gtk_widget_class_path";
end;

define C-function gtk-widget-list-mnemonic-labels
  input parameter arg1 :: <GtkWidget>;
  result res :: <GList>;
  c-name: "gtk_widget_list_mnemonic_labels";
end;

define C-function gtk-widget-add-mnemonic-label
  input parameter arg1 :: <GtkWidget>;
  input parameter arg2 :: <GtkWidget>;
  c-name: "gtk_widget_add_mnemonic_label";
end;

define C-function gtk-widget-remove-mnemonic-label
  input parameter arg1 :: <GtkWidget>;
  input parameter arg2 :: <GtkWidget>;
  c-name: "gtk_widget_remove_mnemonic_label";
end;

define C-function gtk-widget-set-tooltip-window
  input parameter arg1 :: <GtkWidget>;
  input parameter arg2 :: <GtkWindow>;
  c-name: "gtk_widget_set_tooltip_window";
end;

define C-function gtk-widget-get-tooltip-window
  input parameter arg1 :: <GtkWidget>;
  result res :: <GtkWindow>;
  c-name: "gtk_widget_get_tooltip_window";
end;

define C-function gtk-widget-trigger-tooltip-query
  input parameter arg1 :: <GtkWidget>;
  c-name: "gtk_widget_trigger_tooltip_query";
end;

define C-function gtk-widget-set-tooltip-text
  input parameter arg1 :: <GtkWidget>;
  input parameter arg2 :: <gchar*>;
  c-name: "gtk_widget_set_tooltip_text";
end;

define C-function gtk-widget-get-tooltip-text
  input parameter arg1 :: <GtkWidget>;
  result res :: <gchar*>;
  c-name: "gtk_widget_get_tooltip_text";
end;

define C-function gtk-widget-set-tooltip-markup
  input parameter arg1 :: <GtkWidget>;
  input parameter arg2 :: <gchar*>;
  c-name: "gtk_widget_set_tooltip_markup";
end;

define C-function gtk-widget-get-tooltip-markup
  input parameter arg1 :: <GtkWidget>;
  result res :: <gchar*>;
  c-name: "gtk_widget_get_tooltip_markup";
end;

define C-function gtk-widget-set-has-tooltip
  input parameter arg1 :: <GtkWidget>;
  input parameter arg2 :: <gboolean>;
  c-name: "gtk_widget_set_has_tooltip";
end;

define C-function gtk-widget-get-has-tooltip
  input parameter arg1 :: <GtkWidget>;
  result res :: <gboolean>;
  c-name: "gtk_widget_get_has_tooltip";
end;

define C-function gtk-requisition-get-type
  result res :: <GType>;
  c-name: "gtk_requisition_get_type";
end;

define C-function gtk-requisition-copy
  input parameter arg1 :: <GtkRequisition>;
  result res :: <GtkRequisition>;
  c-name: "gtk_requisition_copy";
end;

define C-function gtk-requisition-free
  input parameter arg1 :: <GtkRequisition>;
  c-name: "gtk_requisition_free";
end;

define C-function _gtk-widget-propagate-composited-changed
  input parameter arg1 :: <GtkWidget>;
  c-name: "_gtk_widget_propagate_composited_changed";
end;

define C-function atk-role-register
  input parameter arg1 :: <gchar*>;
  result res :: <AtkRole>;
  c-name: "atk_role_register";
end;

define constant <AtkAttributeSet> = <GSList>;

define C-struct <_AtkAttribute>
  slot AtkAttribute-name :: <gchar*>;
  slot AtkAttribute-value :: <gchar*>;
end;

define C-pointer-type <AtkAttribute> => <_AtkAttribute>;

define C-struct <_AtkImplementor>
end;

define C-pointer-type <AtkImplementor> => <_AtkImplementor>;

define C-struct <_GTypeInterface>
  slot GTypeInterface-g-type :: <C-unsigned-int>;
  slot GTypeInterface-g-instance-type :: <C-unsigned-int>;
end;

define C-pointer-type <GTypeInterface> => <_GTypeInterface>;

define constant <anonymous-3766> = <C-function-pointer>;
define C-subtype <_AtkImplementorIface> (<C-void*>) end;
define constant <AtkImplementorIface> = <_AtkImplementorIface>;

define constant <anonymous-3740> = <C-function-pointer>;
define constant <anonymous-3741> = <C-function-pointer>;
define constant <anonymous-3742> = <C-function-pointer>;
define constant <anonymous-3743> = <C-function-pointer>;
define constant <anonymous-3744> = <C-function-pointer>;
define constant <anonymous-3745> = <C-function-pointer>;
define constant <anonymous-3746> = <C-function-pointer>;
define constant <anonymous-3747> = <C-function-pointer>;
define constant <anonymous-3748> = <C-function-pointer>;
define constant <anonymous-3749> = <C-function-pointer>;
define C-subtype <_AtkStateSet> (<_GObject>) end;
define constant <AtkStateSet> = <_AtkStateSet>;

define constant <anonymous-3750> = <C-function-pointer>;
define constant <anonymous-3751> = <C-function-pointer>;
define constant <anonymous-3752> = <C-function-pointer>;
define constant <anonymous-3753> = <C-function-pointer>;
define constant <anonymous-3754> = <C-function-pointer>;
define C-struct <_AtkPropertyValues>
  slot AtkPropertyValues-property-name :: <gchar*>;
  slot AtkPropertyValues-old-value :: <_GValue>;
  slot AtkPropertyValues-new-value :: <_GValue>;
end;

define C-pointer-type <AtkPropertyValues> => <_AtkPropertyValues>;

define constant <anonymous-3739> = <C-function-pointer>;
define constant <AtkPropertyChangeHandler> = <anonymous-3739>;

define C-pointer-type <AtkPropertyChangeHandler*> => <AtkPropertyChangeHandler>;
define constant <anonymous-3755> = <C-function-pointer>;
define constant <anonymous-3756> = <C-function-pointer>;
define constant <anonymous-3757> = <C-function-pointer>;
define constant <anonymous-3758> = <C-function-pointer>;
define constant <anonymous-3759> = <C-function-pointer>;
define constant <anonymous-3760> = <C-function-pointer>;
define constant <anonymous-3761> = <C-function-pointer>;
define constant <anonymous-3762> = <C-function-pointer>;
define constant <anonymous-3763> = <C-function-pointer>;
define constant <anonymous-3764> = <C-function-pointer>;
define constant <anonymous-3738> = <C-function-pointer>;
define constant <AtkFunction> = <anonymous-3738>;

define C-struct <_AtkObjectClass>
  slot AtkObjectClass-parent :: <_GObjectClass>;
  slot AtkObjectClass-get-name :: <anonymous-3740>;
  slot AtkObjectClass-get-description :: <anonymous-3741>;
  slot AtkObjectClass-get-parent :: <anonymous-3742>;
  slot AtkObjectClass-get-n-children :: <anonymous-3743>;
  slot AtkObjectClass-ref-child :: <anonymous-3744>;
  slot AtkObjectClass-get-index-in-parent :: <anonymous-3745>;
  slot AtkObjectClass-ref-relation-set :: <anonymous-3746>;
  slot AtkObjectClass-get-role :: <anonymous-3747>;
  slot AtkObjectClass-get-layer :: <anonymous-3748>;
  slot AtkObjectClass-get-mdi-zorder :: <anonymous-3749>;
  slot AtkObjectClass-ref-state-set :: <anonymous-3750>;
  slot AtkObjectClass-set-name :: <anonymous-3751>;
  slot AtkObjectClass-set-description :: <anonymous-3752>;
  slot AtkObjectClass-set-parent :: <anonymous-3753>;
  slot AtkObjectClass-set-role :: <anonymous-3754>;
  slot AtkObjectClass-connect-property-change-handler :: <anonymous-3755>;
  slot AtkObjectClass-remove-property-change-handler :: <anonymous-3756>;
  slot AtkObjectClass-initialize :: <anonymous-3757>;
  slot AtkObjectClass-children-changed :: <anonymous-3758>;
  slot AtkObjectClass-focus-event :: <anonymous-3759>;
  slot AtkObjectClass-property-change :: <anonymous-3760>;
  slot AtkObjectClass-state-change :: <anonymous-3761>;
  slot AtkObjectClass-visible-data-changed :: <anonymous-3762>;
  slot AtkObjectClass-active-descendant-changed :: <anonymous-3763>;
  slot AtkObjectClass-get-attributes :: <anonymous-3764>;
  slot AtkObjectClass-pad1 :: <anonymous-3738>;
  slot AtkObjectClass-pad2 :: <anonymous-3738>;
end;

define C-pointer-type <AtkObjectClass> => <_AtkObjectClass>;

define C-function atk-object-get-type
  result res :: <GType>;
  c-name: "atk_object_get_type";
end;

define C-function atk-implementor-get-type
  result res :: <GType>;
  c-name: "atk_implementor_get_type";
end;

define C-function atk-implementor-ref-accessible
  input parameter arg1 :: <AtkImplementor>;
  result res :: <AtkObject>;
  c-name: "atk_implementor_ref_accessible";
end;

define C-function atk-object-get-name
  input parameter arg1 :: <AtkObject>;
  result res :: <gchar*>;
  c-name: "atk_object_get_name";
end;

define C-function atk-object-get-description
  input parameter arg1 :: <AtkObject>;
  result res :: <gchar*>;
  c-name: "atk_object_get_description";
end;

define C-function atk-object-get-parent
  input parameter arg1 :: <AtkObject>;
  result res :: <AtkObject>;
  c-name: "atk_object_get_parent";
end;

define C-function atk-object-get-n-accessible-children
  input parameter arg1 :: <AtkObject>;
  result res :: <gint>;
  c-name: "atk_object_get_n_accessible_children";
end;

define C-function atk-object-ref-accessible-child
  input parameter arg1 :: <AtkObject>;
  input parameter arg2 :: <gint>;
  result res :: <AtkObject>;
  c-name: "atk_object_ref_accessible_child";
end;

define C-function atk-object-ref-relation-set
  input parameter arg1 :: <AtkObject>;
  result res :: <AtkRelationSet>;
  c-name: "atk_object_ref_relation_set";
end;

define C-function atk-object-get-role
  input parameter arg1 :: <AtkObject>;
  result res :: <AtkRole>;
  c-name: "atk_object_get_role";
end;

define C-function atk-object-get-layer
  input parameter arg1 :: <AtkObject>;
  result res :: <AtkLayer>;
  c-name: "atk_object_get_layer";
end;

define C-function atk-object-get-mdi-zorder
  input parameter arg1 :: <AtkObject>;
  result res :: <gint>;
  c-name: "atk_object_get_mdi_zorder";
end;

define C-function atk-object-get-attributes
  input parameter arg1 :: <AtkObject>;
  result res :: <AtkAttributeSet>;
  c-name: "atk_object_get_attributes";
end;

define C-function atk-object-ref-state-set
  input parameter arg1 :: <AtkObject>;
  result res :: <AtkStateSet>;
  c-name: "atk_object_ref_state_set";
end;

define C-function atk-object-get-index-in-parent
  input parameter arg1 :: <AtkObject>;
  result res :: <gint>;
  c-name: "atk_object_get_index_in_parent";
end;

define C-function atk-object-set-name
  input parameter arg1 :: <AtkObject>;
  input parameter arg2 :: <gchar*>;
  c-name: "atk_object_set_name";
end;

define C-function atk-object-set-description
  input parameter arg1 :: <AtkObject>;
  input parameter arg2 :: <gchar*>;
  c-name: "atk_object_set_description";
end;

define C-function atk-object-set-parent
  input parameter arg1 :: <AtkObject>;
  input parameter arg2 :: <AtkObject>;
  c-name: "atk_object_set_parent";
end;

define C-function atk-object-set-role
  input parameter arg1 :: <AtkObject>;
  input parameter arg2 :: <AtkRole>;
  c-name: "atk_object_set_role";
end;

define C-function atk-object-connect-property-change-handler
  input parameter arg1 :: <AtkObject>;
  input parameter arg2 :: <AtkPropertyChangeHandler*>;
  result res :: <guint>;
  c-name: "atk_object_connect_property_change_handler";
end;

define C-function atk-object-remove-property-change-handler
  input parameter arg1 :: <AtkObject>;
  input parameter arg2 :: <guint>;
  c-name: "atk_object_remove_property_change_handler";
end;

define constant <AtkState> = <guint64>;

define C-function atk-object-notify-state-change
  input parameter arg1 :: <AtkObject>;
  input parameter arg2 :: <AtkState>;
  input parameter arg3 :: <gboolean>;
  c-name: "atk_object_notify_state_change";
end;

define C-function atk-object-initialize
  input parameter arg1 :: <AtkObject>;
  input parameter arg2 :: <gpointer>;
  c-name: "atk_object_initialize";
end;

define C-function atk-role-get-name
  input parameter arg1 :: <AtkRole>;
  result res :: <gchar*>;
  c-name: "atk_role_get_name";
end;

define C-function atk-role-for-name
  input parameter arg1 :: <gchar*>;
  result res :: <AtkRole>;
  c-name: "atk_role_for_name";
end;

define constant <AtkRelationType> = <C-int>;
define constant $ATK-RELATION-NULL = 0;
define constant $ATK-RELATION-CONTROLLED-BY = 1;
define constant $ATK-RELATION-CONTROLLER-FOR = 2;
define constant $ATK-RELATION-LABEL-FOR = 3;
define constant $ATK-RELATION-LABELLED-BY = 4;
define constant $ATK-RELATION-MEMBER-OF = 5;
define constant $ATK-RELATION-NODE-CHILD-OF = 6;
define constant $ATK-RELATION-FLOWS-TO = 7;
define constant $ATK-RELATION-FLOWS-FROM = 8;
define constant $ATK-RELATION-SUBWINDOW-OF = 9;
define constant $ATK-RELATION-EMBEDS = 10;
define constant $ATK-RELATION-EMBEDDED-BY = 11;
define constant $ATK-RELATION-POPUP-FOR = 12;
define constant $ATK-RELATION-PARENT-WINDOW-OF = 13;
define constant $ATK-RELATION-DESCRIBED-BY = 14;
define constant $ATK-RELATION-DESCRIPTION-FOR = 15;
define constant $ATK-RELATION-LAST-DEFINED = 16;

define C-function atk-object-add-relationship
  input parameter arg1 :: <AtkObject>;
  input parameter arg2 :: <AtkRelationType>;
  input parameter arg3 :: <AtkObject>;
  result res :: <gboolean>;
  c-name: "atk_object_add_relationship";
end;

define C-function atk-object-remove-relationship
  input parameter arg1 :: <AtkObject>;
  input parameter arg2 :: <AtkRelationType>;
  input parameter arg3 :: <AtkObject>;
  result res :: <gboolean>;
  c-name: "atk_object_remove_relationship";
end;

define C-function atk-role-get-localized-name
  input parameter arg1 :: <AtkRole>;
  result res :: <gchar*>;
  c-name: "atk_role_get_localized_name";
end;

define constant <AtkStateType> = <C-int>;
define constant $ATK-STATE-INVALID = 0;
define constant $ATK-STATE-ACTIVE = 1;
define constant $ATK-STATE-ARMED = 2;
define constant $ATK-STATE-BUSY = 3;
define constant $ATK-STATE-CHECKED = 4;
define constant $ATK-STATE-DEFUNCT = 5;
define constant $ATK-STATE-EDITABLE = 6;
define constant $ATK-STATE-ENABLED = 7;
define constant $ATK-STATE-EXPANDABLE = 8;
define constant $ATK-STATE-EXPANDED = 9;
define constant $ATK-STATE-FOCUSABLE = 10;
define constant $ATK-STATE-FOCUSED = 11;
define constant $ATK-STATE-HORIZONTAL = 12;
define constant $ATK-STATE-ICONIFIED = 13;
define constant $ATK-STATE-MODAL = 14;
define constant $ATK-STATE-MULTI-LINE = 15;
define constant $ATK-STATE-MULTISELECTABLE = 16;
define constant $ATK-STATE-OPAQUE = 17;
define constant $ATK-STATE-PRESSED = 18;
define constant $ATK-STATE-RESIZABLE = 19;
define constant $ATK-STATE-SELECTABLE = 20;
define constant $ATK-STATE-SELECTED = 21;
define constant $ATK-STATE-SENSITIVE = 22;
define constant $ATK-STATE-SHOWING = 23;
define constant $ATK-STATE-SINGLE-LINE = 24;
define constant $ATK-STATE-STALE = 25;
define constant $ATK-STATE-TRANSIENT = 26;
define constant $ATK-STATE-VERTICAL = 27;
define constant $ATK-STATE-VISIBLE = 28;
define constant $ATK-STATE-MANAGES-DESCENDANTS = 29;
define constant $ATK-STATE-INDETERMINATE = 30;
define constant $ATK-STATE-TRUNCATED = 31;
define constant $ATK-STATE-REQUIRED = 32;
define constant $ATK-STATE-INVALID-ENTRY = 33;
define constant $ATK-STATE-SUPPORTS-AUTOCOMPLETION = 34;
define constant $ATK-STATE-SELECTABLE-TEXT = 35;
define constant $ATK-STATE-DEFAULT = 36;
define constant $ATK-STATE-ANIMATED = 37;
define constant $ATK-STATE-VISITED = 38;
define constant $ATK-STATE-LAST-DEFINED = 39;

define C-function atk-state-type-register
  input parameter arg1 :: <gchar*>;
  result res :: <AtkStateType>;
  c-name: "atk_state_type_register";
end;

define C-function atk-state-type-get-name
  input parameter arg1 :: <AtkStateType>;
  result res :: <gchar*>;
  c-name: "atk_state_type_get_name";
end;

define C-function atk-state-type-for-name
  input parameter arg1 :: <gchar*>;
  result res :: <AtkStateType>;
  c-name: "atk_state_type_for_name";
end;

define C-function g-value-set-char
  input parameter arg1 :: <GValue>;
  input parameter arg2 :: <gchar>;
  c-name: "g_value_set_char";
end;

define C-function g-value-get-char
  input parameter arg1 :: <GValue>;
  result res :: <gchar>;
  c-name: "g_value_get_char";
end;

define C-function g-value-set-uchar
  input parameter arg1 :: <GValue>;
  input parameter arg2 :: <guchar>;
  c-name: "g_value_set_uchar";
end;

define C-function g-value-get-uchar
  input parameter arg1 :: <GValue>;
  result res :: <guchar>;
  c-name: "g_value_get_uchar";
end;

define C-function g-value-set-boolean
  input parameter arg1 :: <GValue>;
  input parameter arg2 :: <gboolean>;
  c-name: "g_value_set_boolean";
end;

define C-function g-value-get-boolean
  input parameter arg1 :: <GValue>;
  result res :: <gboolean>;
  c-name: "g_value_get_boolean";
end;

define C-function g-value-set-int
  input parameter arg1 :: <GValue>;
  input parameter arg2 :: <gint>;
  c-name: "g_value_set_int";
end;

define C-function g-value-get-int
  input parameter arg1 :: <GValue>;
  result res :: <gint>;
  c-name: "g_value_get_int";
end;

define C-function g-value-set-uint
  input parameter arg1 :: <GValue>;
  input parameter arg2 :: <guint>;
  c-name: "g_value_set_uint";
end;

define C-function g-value-get-uint
  input parameter arg1 :: <GValue>;
  result res :: <guint>;
  c-name: "g_value_get_uint";
end;

define C-function g-value-set-long
  input parameter arg1 :: <GValue>;
  input parameter arg2 :: <glong>;
  c-name: "g_value_set_long";
end;

define C-function g-value-get-long
  input parameter arg1 :: <GValue>;
  result res :: <glong>;
  c-name: "g_value_get_long";
end;

define C-function g-value-set-ulong
  input parameter arg1 :: <GValue>;
  input parameter arg2 :: <gulong>;
  c-name: "g_value_set_ulong";
end;

define C-function g-value-get-ulong
  input parameter arg1 :: <GValue>;
  result res :: <gulong>;
  c-name: "g_value_get_ulong";
end;

define C-function g-value-set-int64
  input parameter arg1 :: <GValue>;
  input parameter arg2 :: <gint64>;
  c-name: "g_value_set_int64";
end;

define C-function g-value-get-int64
  input parameter arg1 :: <GValue>;
  result res :: <gint64>;
  c-name: "g_value_get_int64";
end;

define C-function g-value-set-uint64
  input parameter arg1 :: <GValue>;
  input parameter arg2 :: <guint64>;
  c-name: "g_value_set_uint64";
end;

define C-function g-value-get-uint64
  input parameter arg1 :: <GValue>;
  result res :: <guint64>;
  c-name: "g_value_get_uint64";
end;

define C-function g-value-set-float
  input parameter arg1 :: <GValue>;
  input parameter arg2 :: <gfloat>;
  c-name: "g_value_set_float";
end;

define C-function g-value-get-float
  input parameter arg1 :: <GValue>;
  result res :: <gfloat>;
  c-name: "g_value_get_float";
end;

define C-function g-value-set-double
  input parameter arg1 :: <GValue>;
  input parameter arg2 :: <gdouble>;
  c-name: "g_value_set_double";
end;

define C-function g-value-get-double
  input parameter arg1 :: <GValue>;
  result res :: <gdouble>;
  c-name: "g_value_get_double";
end;

define C-function g-value-set-string
  input parameter arg1 :: <GValue>;
  input parameter arg2 :: <gchar*>;
  c-name: "g_value_set_string";
end;

define C-function g-value-set-static-string
  input parameter arg1 :: <GValue>;
  input parameter arg2 :: <gchar*>;
  c-name: "g_value_set_static_string";
end;

define C-function g-value-get-string
  input parameter arg1 :: <GValue>;
  result res :: <gchar*>;
  c-name: "g_value_get_string";
end;

define C-function g-value-dup-string
  input parameter arg1 :: <GValue>;
  result res :: <gchar*>;
  c-name: "g_value_dup_string";
end;

define C-function g-value-set-pointer
  input parameter arg1 :: <GValue>;
  input parameter arg2 :: <gpointer>;
  c-name: "g_value_set_pointer";
end;

define C-function g-value-get-pointer
  input parameter arg1 :: <GValue>;
  result res :: <gpointer>;
  c-name: "g_value_get_pointer";
end;

define C-function g-gtype-get-type
  result res :: <GType>;
  c-name: "g_gtype_get_type";
end;

define C-function g-value-set-gtype
  input parameter arg1 :: <GValue>;
  input parameter arg2 :: <GType>;
  c-name: "g_value_set_gtype";
end;

define C-function g-value-get-gtype
  input parameter arg1 :: <GValue>;
  result res :: <GType>;
  c-name: "g_value_get_gtype";
end;

define C-function g-pointer-type-register-static
  input parameter arg1 :: <gchar*>;
  result res :: <GType>;
  c-name: "g_pointer_type_register_static";
end;

define C-function g-strdup-value-contents
  input parameter arg1 :: <GValue>;
  result res :: <gchar*>;
  c-name: "g_strdup_value_contents";
end;

define C-function g-value-take-string
  input parameter arg1 :: <GValue>;
  input parameter arg2 :: <gchar*>;
  c-name: "g_value_take_string";
end;

define C-function g-value-set-string-take-ownership
  input parameter arg1 :: <GValue>;
  input parameter arg2 :: <gchar*>;
  c-name: "g_value_set_string_take_ownership";
end;

define constant <gchararray> = <gchar*>;

define constant <anonymous-1613> = <C-function-pointer>;
define constant <GValueTransform> = <anonymous-1613>;

define C-function g-value-init
  input parameter arg1 :: <GValue>;
  input parameter arg2 :: <GType>;
  result res :: <GValue>;
  c-name: "g_value_init";
end;

define C-function g-value-copy
  input parameter arg1 :: <GValue>;
  input parameter arg2 :: <GValue>;
  c-name: "g_value_copy";
end;

define C-function g-value-reset
  input parameter arg1 :: <GValue>;
  result res :: <GValue>;
  c-name: "g_value_reset";
end;

define C-function g-value-unset
  input parameter arg1 :: <GValue>;
  c-name: "g_value_unset";
end;

define C-function g-value-set-instance
  input parameter arg1 :: <GValue>;
  input parameter arg2 :: <gpointer>;
  c-name: "g_value_set_instance";
end;

define C-function g-value-fits-pointer
  input parameter arg1 :: <GValue>;
  result res :: <gboolean>;
  c-name: "g_value_fits_pointer";
end;

define C-function g-value-peek-pointer
  input parameter arg1 :: <GValue>;
  result res :: <gpointer>;
  c-name: "g_value_peek_pointer";
end;

define C-function g-value-type-compatible
  input parameter arg1 :: <GType>;
  input parameter arg2 :: <GType>;
  result res :: <gboolean>;
  c-name: "g_value_type_compatible";
end;

define C-function g-value-type-transformable
  input parameter arg1 :: <GType>;
  input parameter arg2 :: <GType>;
  result res :: <gboolean>;
  c-name: "g_value_type_transformable";
end;

define C-function g-value-transform
  input parameter arg1 :: <GValue>;
  input parameter arg2 :: <GValue>;
  result res :: <gboolean>;
  c-name: "g_value_transform";
end;

define C-function g-value-register-transform-func
  input parameter arg1 :: <GType>;
  input parameter arg2 :: <GType>;
  input parameter arg3 :: <GValueTransform>;
  c-name: "g_value_register_transform_func";
end;

define constant $G-VALUE-NOCOPY-CONTENTS = 134217728;

define C-subtype <_GTypeCValue> (<C-void*>) end;
define constant <GTypeCValue> = <_GTypeCValue>;

define C-struct <_GTypePlugin>
end;

define C-pointer-type <GTypePlugin> => <_GTypePlugin>;

define constant <anonymous-1521> = <C-function-pointer>;
define constant <GBaseInitFunc> = <anonymous-1521>;

define constant <anonymous-1522> = <C-function-pointer>;
define constant <GBaseFinalizeFunc> = <anonymous-1522>;

define constant <anonymous-1523> = <C-function-pointer>;
define constant <GClassInitFunc> = <anonymous-1523>;

define constant <anonymous-1524> = <C-function-pointer>;
define constant <GClassFinalizeFunc> = <anonymous-1524>;

define constant <gconstpointer> = <C-void*>;

define constant <anonymous-1525> = <C-function-pointer>;
define constant <GInstanceInitFunc> = <anonymous-1525>;

define constant <anonymous-1532> = <C-function-pointer>;
define constant <anonymous-1533> = <C-function-pointer>;
define constant <anonymous-1534> = <C-function-pointer>;
define constant <anonymous-1535> = <C-function-pointer>;
define constant <anonymous-1536> = <C-function-pointer>;
define constant <anonymous-1537> = <C-function-pointer>;
define C-struct <_GTypeValueTable>
  slot GTypeValueTable-value-init :: <anonymous-1532>;
  slot GTypeValueTable-value-free :: <anonymous-1533>;
  slot GTypeValueTable-value-copy :: <anonymous-1534>;
  slot GTypeValueTable-value-peek-pointer :: <anonymous-1535>;
  slot GTypeValueTable-collect-format :: <gchar*>;
  slot GTypeValueTable-collect-value :: <anonymous-1536>;
  slot GTypeValueTable-lcopy-format :: <gchar*>;
  slot GTypeValueTable-lcopy-value :: <anonymous-1537>;
end;

define C-pointer-type <GTypeValueTable> => <_GTypeValueTable>;

define C-struct <_GTypeInfo>
  slot GTypeInfo-class-size :: <C-unsigned-short>;
  slot GTypeInfo-base-init :: <anonymous-1521>;
  slot GTypeInfo-base-finalize :: <anonymous-1522>;
  slot GTypeInfo-class-init :: <anonymous-1523>;
  slot GTypeInfo-class-finalize :: <anonymous-1524>;
  slot GTypeInfo-class-data :: <C-void*>;
  slot GTypeInfo-instance-size :: <C-unsigned-short>;
  slot GTypeInfo-n-preallocs :: <C-unsigned-short>;
  slot GTypeInfo-instance-init :: <anonymous-1525>;
  slot GTypeInfo-value-table :: <GTypeValueTable>;
end;

define C-pointer-type <GTypeInfo> => <_GTypeInfo>;

define constant <GTypeFundamentalFlags> = <C-int>;
define constant $G-TYPE-FLAG-CLASSED = 1;
define constant $G-TYPE-FLAG-INSTANTIATABLE = 2;
define constant $G-TYPE-FLAG-DERIVABLE = 4;
define constant $G-TYPE-FLAG-DEEP-DERIVABLE = 8;

define C-struct <_GTypeFundamentalInfo>
  slot GTypeFundamentalInfo-type-flags :: <GTypeFundamentalFlags>;
end;

define C-pointer-type <GTypeFundamentalInfo> => <_GTypeFundamentalInfo>;

define constant <anonymous-1526> = <C-function-pointer>;
define constant <GInterfaceInitFunc> = <anonymous-1526>;

define constant <anonymous-1527> = <C-function-pointer>;
define constant <GInterfaceFinalizeFunc> = <anonymous-1527>;

define C-struct <_GInterfaceInfo>
  slot GInterfaceInfo-interface-init :: <anonymous-1526>;
  slot GInterfaceInfo-interface-finalize :: <anonymous-1527>;
  slot GInterfaceInfo-interface-data :: <C-void*>;
end;

define C-pointer-type <GInterfaceInfo> => <_GInterfaceInfo>;

define C-struct <_GTypeQuery>
  slot GTypeQuery-type :: <C-unsigned-int>;
  slot GTypeQuery-type-name :: <gchar*>;
  slot GTypeQuery-class-size :: <C-unsigned-int>;
  slot GTypeQuery-instance-size :: <C-unsigned-int>;
end;

define C-pointer-type <GTypeQuery> => <_GTypeQuery>;

define constant <GTypeDebugFlags> = <C-int>;
define constant $G-TYPE-DEBUG-NONE = 0;
define constant $G-TYPE-DEBUG-OBJECTS = 1;
define constant $G-TYPE-DEBUG-SIGNALS = 2;
define constant $G-TYPE-DEBUG-MASK = 3;

define C-function g-type-init
  c-name: "g_type_init";
end;

define C-function g-type-init-with-debug-flags
  input parameter arg1 :: <GTypeDebugFlags>;
  c-name: "g_type_init_with_debug_flags";
end;

define C-function g-type-name
  input parameter arg1 :: <GType>;
  result res :: <gchar*>;
  c-name: "g_type_name";
end;

define C-function g-type-qname
  input parameter arg1 :: <GType>;
  result res :: <GQuark>;
  c-name: "g_type_qname";
end;

define C-function g-type-from-name
  input parameter arg1 :: <gchar*>;
  result res :: <GType>;
  c-name: "g_type_from_name";
end;

define C-function g-type-parent
  input parameter arg1 :: <GType>;
  result res :: <GType>;
  c-name: "g_type_parent";
end;

define C-function g-type-depth
  input parameter arg1 :: <GType>;
  result res :: <guint>;
  c-name: "g_type_depth";
end;

define C-function g-type-next-base
  input parameter arg1 :: <GType>;
  input parameter arg2 :: <GType>;
  result res :: <GType>;
  c-name: "g_type_next_base";
end;

define C-function g-type-is-a
  input parameter arg1 :: <GType>;
  input parameter arg2 :: <GType>;
  result res :: <gboolean>;
  c-name: "g_type_is_a";
end;

define C-function g-type-class-ref
  input parameter arg1 :: <GType>;
  result res :: <gpointer>;
  c-name: "g_type_class_ref";
end;

define C-function g-type-class-peek
  input parameter arg1 :: <GType>;
  result res :: <gpointer>;
  c-name: "g_type_class_peek";
end;

define C-function g-type-class-peek-static
  input parameter arg1 :: <GType>;
  result res :: <gpointer>;
  c-name: "g_type_class_peek_static";
end;

define C-function g-type-class-unref
  input parameter arg1 :: <gpointer>;
  c-name: "g_type_class_unref";
end;

define C-function g-type-class-peek-parent
  input parameter arg1 :: <gpointer>;
  result res :: <gpointer>;
  c-name: "g_type_class_peek_parent";
end;

define C-function g-type-interface-peek
  input parameter arg1 :: <gpointer>;
  input parameter arg2 :: <GType>;
  result res :: <gpointer>;
  c-name: "g_type_interface_peek";
end;

define C-function g-type-interface-peek-parent
  input parameter arg1 :: <gpointer>;
  result res :: <gpointer>;
  c-name: "g_type_interface_peek_parent";
end;

define C-function g-type-default-interface-ref
  input parameter arg1 :: <GType>;
  result res :: <gpointer>;
  c-name: "g_type_default_interface_ref";
end;

define C-function g-type-default-interface-peek
  input parameter arg1 :: <GType>;
  result res :: <gpointer>;
  c-name: "g_type_default_interface_peek";
end;

define C-function g-type-default-interface-unref
  input parameter arg1 :: <gpointer>;
  c-name: "g_type_default_interface_unref";
end;

define C-pointer-type <GType*> => <GType>;
define C-function g-type-children
  input parameter arg1 :: <GType>;
  input parameter arg2 :: <guint*>;
  result res :: <GType*>;
  c-name: "g_type_children";
end;

define C-function g-type-interfaces
  input parameter arg1 :: <GType>;
  input parameter arg2 :: <guint*>;
  result res :: <GType*>;
  c-name: "g_type_interfaces";
end;

define C-function g-type-set-qdata
  input parameter arg1 :: <GType>;
  input parameter arg2 :: <GQuark>;
  input parameter arg3 :: <gpointer>;
  c-name: "g_type_set_qdata";
end;

define C-function g-type-get-qdata
  input parameter arg1 :: <GType>;
  input parameter arg2 :: <GQuark>;
  result res :: <gpointer>;
  c-name: "g_type_get_qdata";
end;

define C-function g-type-query
  input parameter arg1 :: <GType>;
  input parameter arg2 :: <GTypeQuery>;
  c-name: "g_type_query";
end;

define constant <anonymous-1528> = <C-function-pointer>;
define constant <GTypeClassCacheFunc> = <anonymous-1528>;

define constant <anonymous-1529> = <C-function-pointer>;
define constant <GTypeInterfaceCheckFunc> = <anonymous-1529>;

define constant <GTypeFlags> = <C-int>;
define constant $G-TYPE-FLAG-ABSTRACT = 16;
define constant $G-TYPE-FLAG-VALUE-ABSTRACT = 32;

define C-function g-type-register-static
  input parameter arg1 :: <GType>;
  input parameter arg2 :: <gchar*>;
  input parameter arg3 :: <GTypeInfo>;
  input parameter arg4 :: <GTypeFlags>;
  result res :: <GType>;
  c-name: "g_type_register_static";
end;

define C-function g-type-register-static-simple
  input parameter arg1 :: <GType>;
  input parameter arg2 :: <gchar*>;
  input parameter arg3 :: <guint>;
  input parameter arg4 :: <GClassInitFunc>;
  input parameter arg5 :: <guint>;
  input parameter arg6 :: <GInstanceInitFunc>;
  input parameter arg7 :: <GTypeFlags>;
  result res :: <GType>;
  c-name: "g_type_register_static_simple";
end;

define C-function g-type-register-dynamic
  input parameter arg1 :: <GType>;
  input parameter arg2 :: <gchar*>;
  input parameter arg3 :: <GTypePlugin>;
  input parameter arg4 :: <GTypeFlags>;
  result res :: <GType>;
  c-name: "g_type_register_dynamic";
end;

define C-function g-type-register-fundamental
  input parameter arg1 :: <GType>;
  input parameter arg2 :: <gchar*>;
  input parameter arg3 :: <GTypeInfo>;
  input parameter arg4 :: <GTypeFundamentalInfo>;
  input parameter arg5 :: <GTypeFlags>;
  result res :: <GType>;
  c-name: "g_type_register_fundamental";
end;

define C-function g-type-add-interface-static
  input parameter arg1 :: <GType>;
  input parameter arg2 :: <GType>;
  input parameter arg3 :: <GInterfaceInfo>;
  c-name: "g_type_add_interface_static";
end;

define C-function g-type-add-interface-dynamic
  input parameter arg1 :: <GType>;
  input parameter arg2 :: <GType>;
  input parameter arg3 :: <GTypePlugin>;
  c-name: "g_type_add_interface_dynamic";
end;

define C-function g-type-interface-add-prerequisite
  input parameter arg1 :: <GType>;
  input parameter arg2 :: <GType>;
  c-name: "g_type_interface_add_prerequisite";
end;

define C-function g-type-interface-prerequisites
  input parameter arg1 :: <GType>;
  input parameter arg2 :: <guint*>;
  result res :: <GType*>;
  c-name: "g_type_interface_prerequisites";
end;

define C-function g-type-class-add-private
  input parameter arg1 :: <gpointer>;
  input parameter arg2 :: <gsize>;
  c-name: "g_type_class_add_private";
end;

define C-function g-type-instance-get-private
  input parameter arg1 :: <GTypeInstance>;
  input parameter arg2 :: <GType>;
  result res :: <gpointer>;
  c-name: "g_type_instance_get_private";
end;

define C-function g-type-get-plugin
  input parameter arg1 :: <GType>;
  result res :: <GTypePlugin>;
  c-name: "g_type_get_plugin";
end;

define C-function g-type-interface-get-plugin
  input parameter arg1 :: <GType>;
  input parameter arg2 :: <GType>;
  result res :: <GTypePlugin>;
  c-name: "g_type_interface_get_plugin";
end;

define C-function g-type-fundamental-next
  result res :: <GType>;
  c-name: "g_type_fundamental_next";
end;

define C-function g-type-fundamental
  input parameter arg1 :: <GType>;
  result res :: <GType>;
  c-name: "g_type_fundamental";
end;

define C-function g-type-create-instance
  input parameter arg1 :: <GType>;
  result res :: <GTypeInstance>;
  c-name: "g_type_create_instance";
end;

define C-function g-type-free-instance
  input parameter arg1 :: <GTypeInstance>;
  c-name: "g_type_free_instance";
end;

define C-function g-type-add-class-cache-func
  input parameter arg1 :: <gpointer>;
  input parameter arg2 :: <GTypeClassCacheFunc>;
  c-name: "g_type_add_class_cache_func";
end;

define C-function g-type-remove-class-cache-func
  input parameter arg1 :: <gpointer>;
  input parameter arg2 :: <GTypeClassCacheFunc>;
  c-name: "g_type_remove_class_cache_func";
end;

define C-function g-type-class-unref-uncached
  input parameter arg1 :: <gpointer>;
  c-name: "g_type_class_unref_uncached";
end;

define C-function g-type-add-interface-check
  input parameter arg1 :: <gpointer>;
  input parameter arg2 :: <GTypeInterfaceCheckFunc>;
  c-name: "g_type_add_interface_check";
end;

define C-function g-type-remove-interface-check
  input parameter arg1 :: <gpointer>;
  input parameter arg2 :: <GTypeInterfaceCheckFunc>;
  c-name: "g_type_remove_interface_check";
end;

define C-function g-type-value-table-peek
  input parameter arg1 :: <GType>;
  result res :: <GTypeValueTable>;
  c-name: "g_type_value_table_peek";
end;

define C-function g-type-check-instance
  input parameter arg1 :: <GTypeInstance>;
  result res :: <gboolean>;
  c-name: "g_type_check_instance";
end;

define C-function g-type-check-instance-cast
  input parameter arg1 :: <GTypeInstance>;
  input parameter arg2 :: <GType>;
  result res :: <GTypeInstance>;
  c-name: "g_type_check_instance_cast";
end;

define C-function g-type-check-instance-is-a
  input parameter arg1 :: <GTypeInstance>;
  input parameter arg2 :: <GType>;
  result res :: <gboolean>;
  c-name: "g_type_check_instance_is_a";
end;

define C-function g-type-check-class-cast
  input parameter arg1 :: <GTypeClass>;
  input parameter arg2 :: <GType>;
  result res :: <GTypeClass>;
  c-name: "g_type_check_class_cast";
end;

define C-function g-type-check-class-is-a
  input parameter arg1 :: <GTypeClass>;
  input parameter arg2 :: <GType>;
  result res :: <gboolean>;
  c-name: "g_type_check_class_is_a";
end;

define C-function g-type-check-is-value-type
  input parameter arg1 :: <GType>;
  result res :: <gboolean>;
  c-name: "g_type_check_is_value_type";
end;

define C-function g-type-check-value
  input parameter arg1 :: <GValue>;
  result res :: <gboolean>;
  c-name: "g_type_check_value";
end;

define C-function g-type-check-value-holds
  input parameter arg1 :: <GValue>;
  input parameter arg2 :: <GType>;
  result res :: <gboolean>;
  c-name: "g_type_check_value_holds";
end;

define C-function g-type-test-flags
  input parameter arg1 :: <GType>;
  input parameter arg2 :: <guint>;
  result res :: <gboolean>;
  c-name: "g_type_test_flags";
end;

define C-function g-type-name-from-instance
  input parameter arg1 :: <GTypeInstance>;
  result res :: <gchar*>;
  c-name: "g_type_name_from_instance";
end;

define C-function g-type-name-from-class
  input parameter arg1 :: <GTypeClass>;
  result res :: <gchar*>;
  c-name: "g_type_name_from_class";
end;

 /* Ignoring declaration for {instance of <variable-declaration>} "_g-type-debug-flags"*/
define constant $G-TYPE-FUNDAMENTAL-MAX = 1020;

define constant $G-TYPE-INVALID = 0;

define constant $G-TYPE-NONE = 4;

define constant $G-TYPE-INTERFACE = 8;

define constant $G-TYPE-CHAR = 12;

define constant $G-TYPE-UCHAR = 16;

define constant $G-TYPE-BOOLEAN = 20;

define constant $G-TYPE-INT = 24;

define constant $G-TYPE-UINT = 28;

define constant $G-TYPE-LONG = 32;

define constant $G-TYPE-ULONG = 36;

define constant $G-TYPE-INT64 = 40;

define constant $G-TYPE-UINT64 = 44;

define constant $G-TYPE-ENUM = 48;

define constant $G-TYPE-FLAGS = 52;

define constant $G-TYPE-FLOAT = 56;

define constant $G-TYPE-DOUBLE = 60;

define constant $G-TYPE-STRING = 64;

define constant $G-TYPE-POINTER = 68;

define constant $G-TYPE-BOXED = 72;

define constant $G-TYPE-PARAM = 76;

define constant $G-TYPE-OBJECT = 80;

define constant $G-TYPE-FUNDAMENTAL-SHIFT = 2;

define constant $G-TYPE-RESERVED-GLIB-FIRST = 21;

define constant $G-TYPE-RESERVED-GLIB-LAST = 31;

define constant $G-TYPE-RESERVED-BSE-FIRST = 32;

define constant $G-TYPE-RESERVED-BSE-LAST = 48;

define constant $G-TYPE-RESERVED-USER-FIRST = 49;

define constant $G-TYPE-FLAG-RESERVED-ID-BIT = 1;

define C-function g-get-user-name
  result res :: <gchar*>;
  c-name: "g_get_user_name";
end;

define C-function g-get-real-name
  result res :: <gchar*>;
  c-name: "g_get_real_name";
end;

define C-function g-get-home-dir
  result res :: <gchar*>;
  c-name: "g_get_home_dir";
end;

define C-function g-get-tmp-dir
  result res :: <gchar*>;
  c-name: "g_get_tmp_dir";
end;

define C-function g-get-host-name
  result res :: <gchar*>;
  c-name: "g_get_host_name";
end;

define C-function g-get-prgname
  result res :: <gchar*>;
  c-name: "g_get_prgname";
end;

define C-function g-set-prgname
  input parameter arg1 :: <gchar*>;
  c-name: "g_set_prgname";
end;

define C-function g-get-application-name
  result res :: <gchar*>;
  c-name: "g_get_application_name";
end;

define C-function g-set-application-name
  input parameter arg1 :: <gchar*>;
  c-name: "g_set_application_name";
end;

define C-function g-get-user-data-dir
  result res :: <gchar*>;
  c-name: "g_get_user_data_dir";
end;

define C-function g-get-user-config-dir
  result res :: <gchar*>;
  c-name: "g_get_user_config_dir";
end;

define C-function g-get-user-cache-dir
  result res :: <gchar*>;
  c-name: "g_get_user_cache_dir";
end;

define C-function g-get-system-data-dirs
  result res :: <gchar**>;
  c-name: "g_get_system_data_dirs";
end;

define C-function g-get-system-config-dirs
  result res :: <gchar**>;
  c-name: "g_get_system_config_dirs";
end;

define C-function g-get-language-names
  result res :: <gchar**>;
  c-name: "g_get_language_names";
end;

define constant <GUserDirectory> = <C-int>;
define constant $G-USER-DIRECTORY-DESKTOP = 0;
define constant $G-USER-DIRECTORY-DOCUMENTS = 1;
define constant $G-USER-DIRECTORY-DOWNLOAD = 2;
define constant $G-USER-DIRECTORY-MUSIC = 3;
define constant $G-USER-DIRECTORY-PICTURES = 4;
define constant $G-USER-DIRECTORY-PUBLIC-SHARE = 5;
define constant $G-USER-DIRECTORY-TEMPLATES = 6;
define constant $G-USER-DIRECTORY-VIDEOS = 7;
define constant $G-USER-N-DIRECTORIES = 8;

define C-function g-get-user-special-dir
  input parameter arg1 :: <GUserDirectory>;
  result res :: <gchar*>;
  c-name: "g_get_user_special_dir";
end;

define C-struct <_GDebugKey>
  slot GDebugKey-key :: <gchar*>;
  slot GDebugKey-value :: <C-unsigned-int>;
end;

define C-pointer-type <GDebugKey> => <_GDebugKey>;

define C-function g-parse-debug-string
  input parameter arg1 :: <gchar*>;
  input parameter arg2 :: <GDebugKey>;
  input parameter arg3 :: <guint>;
  result res :: <guint>;
  c-name: "g_parse_debug_string";
end;

define C-function g-snprintf
  input parameter arg1 :: <gchar*>;
  input parameter arg2 :: <gulong>;
  input parameter arg3 :: <gchar*>;
  result res :: <gint>;
  c-name: "g_snprintf";
end;

define C-function g-vsnprintf
  input parameter arg1 :: <gchar*>;
  input parameter arg2 :: <gulong>;
  input parameter arg3 :: <gchar*>;
  input parameter arg4 :: <va-list>;
  result res :: <gint>;
  c-name: "g_vsnprintf";
end;

define C-function g-path-is-absolute
  input parameter arg1 :: <gchar*>;
  result res :: <gboolean>;
  c-name: "g_path_is_absolute";
end;

define C-function g-path-skip-root
  input parameter arg1 :: <gchar*>;
  result res :: <gchar*>;
  c-name: "g_path_skip_root";
end;

define C-function g-basename
  input parameter arg1 :: <gchar*>;
  result res :: <gchar*>;
  c-name: "g_basename";
end;

define C-function g-get-current-dir
  result res :: <gchar*>;
  c-name: "g_get_current_dir";
end;

define C-function g-path-get-basename
  input parameter arg1 :: <gchar*>;
  result res :: <gchar*>;
  c-name: "g_path_get_basename";
end;

define C-function g-path-get-dirname
  input parameter arg1 :: <gchar*>;
  result res :: <gchar*>;
  c-name: "g_path_get_dirname";
end;

define C-function g-nullify-pointer
  input parameter arg1 :: <gpointer*>;
  c-name: "g_nullify_pointer";
end;

define C-function g-getenv
  input parameter arg1 :: <gchar*>;
  result res :: <gchar*>;
  c-name: "g_getenv";
end;

define C-function g-setenv
  input parameter arg1 :: <gchar*>;
  input parameter arg2 :: <gchar*>;
  input parameter arg3 :: <gboolean>;
  result res :: <gboolean>;
  c-name: "g_setenv";
end;

define C-function g-unsetenv
  input parameter arg1 :: <gchar*>;
  c-name: "g_unsetenv";
end;

define C-function g-listenv
  result res :: <gchar**>;
  c-name: "g_listenv";
end;

define constant <anonymous-321> = <C-function-pointer>;
define constant <GVoidFunc> = <anonymous-321>;

define C-function g-atexit
  input parameter arg1 :: <GVoidFunc>;
  c-name: "g_atexit";
end;

define C-function g-find-program-in-path
  input parameter arg1 :: <gchar*>;
  result res :: <gchar*>;
  c-name: "g_find_program_in_path";
end;

define C-function g-bit-nth-lsf
  input parameter arg1 :: <gulong>;
  input parameter arg2 :: <gint>;
  result res :: <gint>;
  c-name: "g_bit_nth_lsf";
end;

define C-function g-bit-nth-msf
  input parameter arg1 :: <gulong>;
  input parameter arg2 :: <gint>;
  result res :: <gint>;
  c-name: "g_bit_nth_msf";
end;

define C-function g-bit-storage
  input parameter arg1 :: <gulong>;
  result res :: <guint>;
  c-name: "g_bit_storage";
end;

define C-pointer-type <GTrashStack> => <_GTrashStack>;

define C-struct <_GTrashStack>
  slot GTrashStack-next :: <GTrashStack>;
end;

define C-pointer-type <GTrashStack*> => <GTrashStack>;
define C-function g-trash-stack-push
  input parameter arg1 :: <GTrashStack*>;
  input parameter arg2 :: <gpointer>;
  c-name: "g_trash_stack_push";
end;

define C-function g-trash-stack-pop
  input parameter arg1 :: <GTrashStack*>;
  result res :: <gpointer>;
  c-name: "g_trash_stack_pop";
end;

define C-function g-trash-stack-peek
  input parameter arg1 :: <GTrashStack*>;
  result res :: <gpointer>;
  c-name: "g_trash_stack_peek";
end;

define C-function g-trash-stack-height
  input parameter arg1 :: <GTrashStack*>;
  result res :: <guint>;
  c-name: "g_trash_stack_height";
end;

 /* Ignoring declaration for {instance of <variable-declaration>} "glib-major-version"*/
 /* Ignoring declaration for {instance of <variable-declaration>} "glib-minor-version"*/
 /* Ignoring declaration for {instance of <variable-declaration>} "glib-micro-version"*/
 /* Ignoring declaration for {instance of <variable-declaration>} "glib-interface-age"*/
 /* Ignoring declaration for {instance of <variable-declaration>} "glib-binary-age"*/
define C-function glib-check-version
  input parameter arg1 :: <guint>;
  input parameter arg2 :: <guint>;
  input parameter arg3 :: <guint>;
  result res :: <gchar*>;
  c-name: "glib_check_version";
end;

define constant $G-DIR-SEPARATOR = 1;

define constant $G-DIR-SEPARATOR-S = "/";

define constant $G-SEARCHPATH-SEPARATOR = 1;

define constant $G-SEARCHPATH-SEPARATOR-S = ":";

define constant g-dirname = g-path-get-dirname;

define constant <anonymous-220> = <C-function-pointer>;
define constant <GCompareFunc> = <anonymous-220>;

define constant <anonymous-221> = <C-function-pointer>;
define constant <GCompareDataFunc> = <anonymous-221>;

define constant <anonymous-222> = <C-function-pointer>;
define constant <GEqualFunc> = <anonymous-222>;

define constant <anonymous-223> = <C-function-pointer>;
define constant <GDestroyNotify> = <anonymous-223>;

define constant <anonymous-224> = <C-function-pointer>;
define constant <GFunc> = <anonymous-224>;

define constant <anonymous-225> = <C-function-pointer>;
define constant <GHashFunc> = <anonymous-225>;

define constant <anonymous-226> = <C-function-pointer>;
define constant <GHFunc> = <anonymous-226>;

define constant <anonymous-227> = <C-function-pointer>;
define constant <GFreeFunc> = <anonymous-227>;

define constant <anonymous-228> = <C-function-pointer>;
define constant <GTranslateFunc> = <anonymous-228>;

define C-struct <anonymous-237>
  bitfield slot nonymous-237-mantissa-low :: <C-int>, width: 32;
  bitfield slot nonymous-237-mantissa-high :: <C-int>, width: 20;
  bitfield slot nonymous-237-biased-exponent :: <C-int>, width: 11;
  bitfield slot nonymous-237-sign :: <C-int>, width: 1;
end;

define C-subtype <_GDoubleIEEE754> (<C-void*>) end;
define constant <GDoubleIEEE754> = <_GDoubleIEEE754>;

define C-struct <anonymous-232>
  bitfield slot nonymous-232-mantissa :: <C-int>, width: 23;
  bitfield slot nonymous-232-biased-exponent :: <C-int>, width: 8;
  bitfield slot nonymous-232-sign :: <C-int>, width: 1;
end;

define C-subtype <_GFloatIEEE754> (<C-void*>) end;
define constant <GFloatIEEE754> = <_GFloatIEEE754>;

define C-struct <_GTimeVal>
  slot GTimeVal-tv-sec :: <C-signed-long>;
  slot GTimeVal-tv-usec :: <C-signed-long>;
end;

define C-pointer-type <GTimeVal> => <_GTimeVal>;

define constant $G-MAXUINT8 = 255;

define constant $G-MAXUINT16 = 65535;

define constant $G-LITTLE-ENDIAN = 1234;

define constant $G-BIG-ENDIAN = 4321;

define constant $G-PDP-ENDIAN = 3412;

define constant $G-IEEE754-FLOAT-BIAS = 127;

define constant $G-IEEE754-DOUBLE-BIAS = 1023;

define constant <gint32> = <C-signed-int>;

define constant <gssize> = <C-signed-int>;

define constant <goffset> = <gint64>;

define C-struct <_GMutex>
end;

define constant <char<@24>> = <char*>;
define C-subtype <anonymous-219> (<C-void*>) end;
define C-struct <_GStaticMutex>
  slot GStaticMutex-runtime-mutex :: <_GMutex>;
  slot GStaticMutex-static-mutex :: <anonymous-219>;
end;

define C-pointer-type <GStaticMutex> => <_GStaticMutex>;

define constant <char<@4>> = <char*>;
define C-subtype <_GSystemThread> (<C-void*>) end;
define constant <GSystemThread> = <_GSystemThread>;

define constant <GPid> = <C-signed-int>;

define constant $G-MINSHORT = -32768;

define constant $G-MAXSHORT = 32767;

define constant $G-MAXUSHORT = 65535;

define constant $G-GINT16-MODIFIER = "h";

define constant $G-GINT16-FORMAT = "hi";

define constant $G-GUINT16-FORMAT = "hu";

define constant $G-GINT32-MODIFIER = "";

define constant $G-GINT32-FORMAT = "i";

define constant $G-GUINT32-FORMAT = "u";

define constant $G-HAVE-GINT64 = 1;

define constant $G-GINT64-MODIFIER = "ll";

define constant $G-GINT64-FORMAT = "lli";

define constant $G-GUINT64-FORMAT = "llu";

define constant $GLIB-SIZEOF-VOID-P = 4;

define constant $GLIB-SIZEOF-LONG = 4;

define constant $GLIB-SIZEOF-SIZE-T = 4;

define constant $G-GSIZE-MODIFIER = "";

define constant $G-GSSIZE-FORMAT = "i";

define constant $G-GSIZE-FORMAT = "u";

define constant $GLIB-MAJOR-VERSION = 2;

define constant $GLIB-MINOR-VERSION = 14;

define constant $GLIB-MICRO-VERSION = 1;

define constant $G-HAVE-INLINE = 1;

define constant $G-HAVE---INLINE = 1;

define constant $G-HAVE---INLINE-- = 1;

define constant $G-CAN-INLINE = 1;

define constant $G-HAVE-ISO-VARARGS = 1;

define constant $G-HAVE-GNUC-VARARGS = 1;

define constant $G-HAVE-GROWING-STACK = 0;

define constant $G-HAVE-GNUC-VISIBILITY = 1;

define constant $G-MODULE-SUFFIX = "so";

define constant $FLT-ROUNDS = 1;

define constant $_LIBC-LIMITS-H- = 1;

define constant $MB-LEN-MAX = 16;

define constant $_LIMITS-H = 1;

define constant $CHAR-BIT = 8;

define constant $SCHAR-MIN = -128;

define constant $SCHAR-MAX = 127;

define constant $UCHAR-MAX = 255;

define constant $CHAR-MIN = -128;

define constant $CHAR-MAX = 127;

define constant $SHRT-MIN = -32768;

define constant $SHRT-MAX = 32767;

define constant $USHRT-MAX = 65535;

define constant $_BITS-POSIX2-LIM-H = 1;

define constant $_POSIX2-BC-BASE-MAX = 99;

define constant $_POSIX2-BC-DIM-MAX = 2048;

define constant $_POSIX2-BC-SCALE-MAX = 99;

define constant $_POSIX2-BC-STRING-MAX = 1000;

define constant $_POSIX2-COLL-WEIGHTS-MAX = 2;

define constant $_POSIX2-EXPR-NEST-MAX = 32;

define constant $_POSIX2-LINE-MAX = 2048;

define constant $_POSIX2-RE-DUP-MAX = 255;

define constant $_POSIX2-CHARCLASS-NAME-MAX = 14;

define constant $BC-BASE-MAX = 99;

define constant $BC-DIM-MAX = 2048;

define constant $BC-SCALE-MAX = 99;

define constant $BC-STRING-MAX = 1000;

define constant $COLL-WEIGHTS-MAX = 255;

define constant $EXPR-NEST-MAX = 32;

define constant $LINE-MAX = 2048;

define constant $CHARCLASS-NAME-MAX = 2048;

define constant $RE-DUP-MAX = 32767;

define constant $_BITS-POSIX1-LIM-H = 1;

define constant $_POSIX-AIO-LISTIO-MAX = 2;

define constant $_POSIX-AIO-MAX = 1;

define constant $_POSIX-ARG-MAX = 4096;

define constant $_POSIX-CHILD-MAX = 25;

define constant $_POSIX-DELAYTIMER-MAX = 32;

define constant $_POSIX-HOST-NAME-MAX = 255;

define constant $_POSIX-LINK-MAX = 8;

define constant $_POSIX-LOGIN-NAME-MAX = 9;

define constant $_POSIX-MAX-CANON = 255;

define constant $_POSIX-MAX-INPUT = 255;

define constant $_POSIX-MQ-OPEN-MAX = 8;

define constant $_POSIX-MQ-PRIO-MAX = 32;

define constant $_POSIX-NAME-MAX = 14;

define constant $_POSIX-NGROUPS-MAX = 8;

define constant $_POSIX-OPEN-MAX = 20;

define constant $_POSIX-FD-SETSIZE = 20;

define constant $_POSIX-PATH-MAX = 256;

define constant $_POSIX-PIPE-BUF = 512;

define constant $_POSIX-RE-DUP-MAX = 255;

define constant $_POSIX-RTSIG-MAX = 8;

define constant $_POSIX-SEM-NSEMS-MAX = 256;

define constant $_POSIX-SEM-VALUE-MAX = 32767;

define constant $_POSIX-SIGQUEUE-MAX = 32;

define constant $_POSIX-SSIZE-MAX = 32767;

define constant $_POSIX-STREAM-MAX = 8;

define constant $_POSIX-SYMLINK-MAX = 255;

define constant $_POSIX-SYMLOOP-MAX = 8;

define constant $_POSIX-TIMER-MAX = 32;

define constant $_POSIX-TTY-NAME-MAX = 9;

define constant $_POSIX-TZNAME-MAX = 6;

define constant $_POSIX-QLIMIT = 1;

define constant $_POSIX-HIWAT = 512;

define constant $_POSIX-UIO-MAXIOV = 16;

define constant $_POSIX-CLOCKRES-MIN = 20000000;

define constant $_POSIX-THREAD-KEYS-MAX = 128;

define constant $PTHREAD-KEYS-MAX = 1024;

define constant $_POSIX-THREAD-DESTRUCTOR-ITERATIONS = 4;

define constant $PTHREAD-DESTRUCTOR-ITERATIONS = 4;

define constant $_POSIX-THREAD-THREADS-MAX = 64;

define constant $AIO-PRIO-DELTA-MAX = 20;

define constant $PTHREAD-STACK-MIN = 16384;

define constant $TTY-NAME-MAX = 32;

define constant $LOGIN-NAME-MAX = 256;

define constant $HOST-NAME-MAX = 64;

define constant $MQ-PRIO-MAX = 32768;

define constant $NGROUPS-MAX = 65536;

define constant $ARG-MAX = 131072;

define constant $CHILD-MAX = 999;

define constant $MAX-CANON = 255;

define constant $MAX-INPUT = 255;

define constant $NAME-MAX = 255;

define constant $PATH-MAX = 4096;

define constant $PIPE-BUF = 4096;

define constant $XATTR-NAME-MAX = 255;

define constant $XATTR-SIZE-MAX = 65536;

define constant $XATTR-LIST-MAX = 65536;

define constant $RTSIG-MAX = 32;

define constant $__WORDSIZE = 32;

define constant $_FEATURES-H = 1;

define constant $__USE-ANSI = 1;

define constant $_BSD-SOURCE = 1;

define constant $_SVID-SOURCE = 1;

define constant $_POSIX-SOURCE = 1;

define constant $_POSIX-C-SOURCE = 200112;

define constant $__USE-POSIX = 1;

define constant $__USE-POSIX2 = 1;

define constant $__USE-POSIX199309 = 1;

define constant $__USE-POSIX199506 = 1;

define constant $__USE-XOPEN2K = 1;

define constant $__USE-MISC = 1;

define constant $__USE-BSD = 1;

define constant $__USE-SVID = 1;

define constant $__USE-FORTIFY-LEVEL = 0;

define constant $__STDC-IEC-559-- = 1;

define constant $__STDC-IEC-559-COMPLEX-- = 1;

define constant $__STDC-ISO-10646-- = 200009;

define constant $__GNU-LIBRARY-- = 6;

define constant $__GLIBC-- = 2;

define constant $__GLIBC-MINOR-- = 6;

define constant $_SYS-CDEFS-H = 1;

define constant <__signed> = <C-signed-int>;

define constant <__ptr-t> = <C-void*>;

define constant $G-GNUC-FUNCTION = "";

define constant $G-GNUC-PRETTY-FUNCTION = "";

define constant $FALSE = 0;

define constant $TRUE = 1;

define constant <ptrdiff-t> = <C-signed-long>;

define constant <size-t> = <C-unsigned-long>;

define constant <wchar-t> = <C-signed-int>;

define constant <__PTRDIFF-TYPE--> = <C-signed-long>;

define constant <__SIZE-TYPE--> = <C-unsigned-long>;

define constant <__WCHAR-TYPE--> = <C-signed-int>;

define constant <wint-t> = <C-unsigned-int>;

define constant <__WINT-TYPE--> = <C-unsigned-int>;

define constant <gunichar> = <guint32>;

define constant <gunichar2> = <guint16>;

define constant <GUnicodeType> = <C-int>;
define constant $G-UNICODE-CONTROL = 0;
define constant $G-UNICODE-FORMAT = 1;
define constant $G-UNICODE-UNASSIGNED = 2;
define constant $G-UNICODE-PRIVATE-USE = 3;
define constant $G-UNICODE-SURROGATE = 4;
define constant $G-UNICODE-LOWERCASE-LETTER = 5;
define constant $G-UNICODE-MODIFIER-LETTER = 6;
define constant $G-UNICODE-OTHER-LETTER = 7;
define constant $G-UNICODE-TITLECASE-LETTER = 8;
define constant $G-UNICODE-UPPERCASE-LETTER = 9;
define constant $G-UNICODE-COMBINING-MARK = 10;
define constant $G-UNICODE-ENCLOSING-MARK = 11;
define constant $G-UNICODE-NON-SPACING-MARK = 12;
define constant $G-UNICODE-DECIMAL-NUMBER = 13;
define constant $G-UNICODE-LETTER-NUMBER = 14;
define constant $G-UNICODE-OTHER-NUMBER = 15;
define constant $G-UNICODE-CONNECT-PUNCTUATION = 16;
define constant $G-UNICODE-DASH-PUNCTUATION = 17;
define constant $G-UNICODE-CLOSE-PUNCTUATION = 18;
define constant $G-UNICODE-FINAL-PUNCTUATION = 19;
define constant $G-UNICODE-INITIAL-PUNCTUATION = 20;
define constant $G-UNICODE-OTHER-PUNCTUATION = 21;
define constant $G-UNICODE-OPEN-PUNCTUATION = 22;
define constant $G-UNICODE-CURRENCY-SYMBOL = 23;
define constant $G-UNICODE-MODIFIER-SYMBOL = 24;
define constant $G-UNICODE-MATH-SYMBOL = 25;
define constant $G-UNICODE-OTHER-SYMBOL = 26;
define constant $G-UNICODE-LINE-SEPARATOR = 27;
define constant $G-UNICODE-PARAGRAPH-SEPARATOR = 28;
define constant $G-UNICODE-SPACE-SEPARATOR = 29;

define constant <GUnicodeBreakType> = <C-int>;
define constant $G-UNICODE-BREAK-MANDATORY = 0;
define constant $G-UNICODE-BREAK-CARRIAGE-RETURN = 1;
define constant $G-UNICODE-BREAK-LINE-FEED = 2;
define constant $G-UNICODE-BREAK-COMBINING-MARK = 3;
define constant $G-UNICODE-BREAK-SURROGATE = 4;
define constant $G-UNICODE-BREAK-ZERO-WIDTH-SPACE = 5;
define constant $G-UNICODE-BREAK-INSEPARABLE = 6;
define constant $G-UNICODE-BREAK-NON-BREAKING-GLUE = 7;
define constant $G-UNICODE-BREAK-CONTINGENT = 8;
define constant $G-UNICODE-BREAK-SPACE = 9;
define constant $G-UNICODE-BREAK-AFTER = 10;
define constant $G-UNICODE-BREAK-BEFORE = 11;
define constant $G-UNICODE-BREAK-BEFORE-AND-AFTER = 12;
define constant $G-UNICODE-BREAK-HYPHEN = 13;
define constant $G-UNICODE-BREAK-NON-STARTER = 14;
define constant $G-UNICODE-BREAK-OPEN-PUNCTUATION = 15;
define constant $G-UNICODE-BREAK-CLOSE-PUNCTUATION = 16;
define constant $G-UNICODE-BREAK-QUOTATION = 17;
define constant $G-UNICODE-BREAK-EXCLAMATION = 18;
define constant $G-UNICODE-BREAK-IDEOGRAPHIC = 19;
define constant $G-UNICODE-BREAK-NUMERIC = 20;
define constant $G-UNICODE-BREAK-INFIX-SEPARATOR = 21;
define constant $G-UNICODE-BREAK-SYMBOL = 22;
define constant $G-UNICODE-BREAK-ALPHABETIC = 23;
define constant $G-UNICODE-BREAK-PREFIX = 24;
define constant $G-UNICODE-BREAK-POSTFIX = 25;
define constant $G-UNICODE-BREAK-COMPLEX-CONTEXT = 26;
define constant $G-UNICODE-BREAK-AMBIGUOUS = 27;
define constant $G-UNICODE-BREAK-UNKNOWN = 28;
define constant $G-UNICODE-BREAK-NEXT-LINE = 29;
define constant $G-UNICODE-BREAK-WORD-JOINER = 30;
define constant $G-UNICODE-BREAK-HANGUL-L-JAMO = 31;
define constant $G-UNICODE-BREAK-HANGUL-V-JAMO = 32;
define constant $G-UNICODE-BREAK-HANGUL-T-JAMO = 33;
define constant $G-UNICODE-BREAK-HANGUL-LV-SYLLABLE = 34;
define constant $G-UNICODE-BREAK-HANGUL-LVT-SYLLABLE = 35;

define constant <GUnicodeScript> = <C-int>;
define constant $G-UNICODE-SCRIPT-INVALID-CODE = -1;
define constant $G-UNICODE-SCRIPT-COMMON = 0;
define constant $G-UNICODE-SCRIPT-INHERITED = 1;
define constant $G-UNICODE-SCRIPT-ARABIC = 2;
define constant $G-UNICODE-SCRIPT-ARMENIAN = 3;
define constant $G-UNICODE-SCRIPT-BENGALI = 4;
define constant $G-UNICODE-SCRIPT-BOPOMOFO = 5;
define constant $G-UNICODE-SCRIPT-CHEROKEE = 6;
define constant $G-UNICODE-SCRIPT-COPTIC = 7;
define constant $G-UNICODE-SCRIPT-CYRILLIC = 8;
define constant $G-UNICODE-SCRIPT-DESERET = 9;
define constant $G-UNICODE-SCRIPT-DEVANAGARI = 10;
define constant $G-UNICODE-SCRIPT-ETHIOPIC = 11;
define constant $G-UNICODE-SCRIPT-GEORGIAN = 12;
define constant $G-UNICODE-SCRIPT-GOTHIC = 13;
define constant $G-UNICODE-SCRIPT-GREEK = 14;
define constant $G-UNICODE-SCRIPT-GUJARATI = 15;
define constant $G-UNICODE-SCRIPT-GURMUKHI = 16;
define constant $G-UNICODE-SCRIPT-HAN = 17;
define constant $G-UNICODE-SCRIPT-HANGUL = 18;
define constant $G-UNICODE-SCRIPT-HEBREW = 19;
define constant $G-UNICODE-SCRIPT-HIRAGANA = 20;
define constant $G-UNICODE-SCRIPT-KANNADA = 21;
define constant $G-UNICODE-SCRIPT-KATAKANA = 22;
define constant $G-UNICODE-SCRIPT-KHMER = 23;
define constant $G-UNICODE-SCRIPT-LAO = 24;
define constant $G-UNICODE-SCRIPT-LATIN = 25;
define constant $G-UNICODE-SCRIPT-MALAYALAM = 26;
define constant $G-UNICODE-SCRIPT-MONGOLIAN = 27;
define constant $G-UNICODE-SCRIPT-MYANMAR = 28;
define constant $G-UNICODE-SCRIPT-OGHAM = 29;
define constant $G-UNICODE-SCRIPT-OLD-ITALIC = 30;
define constant $G-UNICODE-SCRIPT-ORIYA = 31;
define constant $G-UNICODE-SCRIPT-RUNIC = 32;
define constant $G-UNICODE-SCRIPT-SINHALA = 33;
define constant $G-UNICODE-SCRIPT-SYRIAC = 34;
define constant $G-UNICODE-SCRIPT-TAMIL = 35;
define constant $G-UNICODE-SCRIPT-TELUGU = 36;
define constant $G-UNICODE-SCRIPT-THAANA = 37;
define constant $G-UNICODE-SCRIPT-THAI = 38;
define constant $G-UNICODE-SCRIPT-TIBETAN = 39;
define constant $G-UNICODE-SCRIPT-CANADIAN-ABORIGINAL = 40;
define constant $G-UNICODE-SCRIPT-YI = 41;
define constant $G-UNICODE-SCRIPT-TAGALOG = 42;
define constant $G-UNICODE-SCRIPT-HANUNOO = 43;
define constant $G-UNICODE-SCRIPT-BUHID = 44;
define constant $G-UNICODE-SCRIPT-TAGBANWA = 45;
define constant $G-UNICODE-SCRIPT-BRAILLE = 46;
define constant $G-UNICODE-SCRIPT-CYPRIOT = 47;
define constant $G-UNICODE-SCRIPT-LIMBU = 48;
define constant $G-UNICODE-SCRIPT-OSMANYA = 49;
define constant $G-UNICODE-SCRIPT-SHAVIAN = 50;
define constant $G-UNICODE-SCRIPT-LINEAR-B = 51;
define constant $G-UNICODE-SCRIPT-TAI-LE = 52;
define constant $G-UNICODE-SCRIPT-UGARITIC = 53;
define constant $G-UNICODE-SCRIPT-NEW-TAI-LUE = 54;
define constant $G-UNICODE-SCRIPT-BUGINESE = 55;
define constant $G-UNICODE-SCRIPT-GLAGOLITIC = 56;
define constant $G-UNICODE-SCRIPT-TIFINAGH = 57;
define constant $G-UNICODE-SCRIPT-SYLOTI-NAGRI = 58;
define constant $G-UNICODE-SCRIPT-OLD-PERSIAN = 59;
define constant $G-UNICODE-SCRIPT-KHAROSHTHI = 60;
define constant $G-UNICODE-SCRIPT-UNKNOWN = 61;
define constant $G-UNICODE-SCRIPT-BALINESE = 62;
define constant $G-UNICODE-SCRIPT-CUNEIFORM = 63;
define constant $G-UNICODE-SCRIPT-PHOENICIAN = 64;
define constant $G-UNICODE-SCRIPT-PHAGS-PA = 65;
define constant $G-UNICODE-SCRIPT-NKO = 66;

define C-pointer-type <c-string-vector> => <char*>;
define C-function g-get-charset
  input parameter arg1 :: <c-string-vector>;
  result res :: <gboolean>;
  c-name: "g_get_charset";
end;

define C-function g-unichar-isalnum
  input parameter arg1 :: <gunichar>;
  result res :: <gboolean>;
  c-name: "g_unichar_isalnum";
end;

define C-function g-unichar-isalpha
  input parameter arg1 :: <gunichar>;
  result res :: <gboolean>;
  c-name: "g_unichar_isalpha";
end;

define C-function g-unichar-iscntrl
  input parameter arg1 :: <gunichar>;
  result res :: <gboolean>;
  c-name: "g_unichar_iscntrl";
end;

define C-function g-unichar-isdigit
  input parameter arg1 :: <gunichar>;
  result res :: <gboolean>;
  c-name: "g_unichar_isdigit";
end;

define C-function g-unichar-isgraph
  input parameter arg1 :: <gunichar>;
  result res :: <gboolean>;
  c-name: "g_unichar_isgraph";
end;

define C-function g-unichar-islower
  input parameter arg1 :: <gunichar>;
  result res :: <gboolean>;
  c-name: "g_unichar_islower";
end;

define C-function g-unichar-isprint
  input parameter arg1 :: <gunichar>;
  result res :: <gboolean>;
  c-name: "g_unichar_isprint";
end;

define C-function g-unichar-ispunct
  input parameter arg1 :: <gunichar>;
  result res :: <gboolean>;
  c-name: "g_unichar_ispunct";
end;

define C-function g-unichar-isspace
  input parameter arg1 :: <gunichar>;
  result res :: <gboolean>;
  c-name: "g_unichar_isspace";
end;

define C-function g-unichar-isupper
  input parameter arg1 :: <gunichar>;
  result res :: <gboolean>;
  c-name: "g_unichar_isupper";
end;

define C-function g-unichar-isxdigit
  input parameter arg1 :: <gunichar>;
  result res :: <gboolean>;
  c-name: "g_unichar_isxdigit";
end;

define C-function g-unichar-istitle
  input parameter arg1 :: <gunichar>;
  result res :: <gboolean>;
  c-name: "g_unichar_istitle";
end;

define C-function g-unichar-isdefined
  input parameter arg1 :: <gunichar>;
  result res :: <gboolean>;
  c-name: "g_unichar_isdefined";
end;

define C-function g-unichar-iswide
  input parameter arg1 :: <gunichar>;
  result res :: <gboolean>;
  c-name: "g_unichar_iswide";
end;

define C-function g-unichar-iswide-cjk
  input parameter arg1 :: <gunichar>;
  result res :: <gboolean>;
  c-name: "g_unichar_iswide_cjk";
end;

define C-function g-unichar-iszerowidth
  input parameter arg1 :: <gunichar>;
  result res :: <gboolean>;
  c-name: "g_unichar_iszerowidth";
end;

define C-function g-unichar-ismark
  input parameter arg1 :: <gunichar>;
  result res :: <gboolean>;
  c-name: "g_unichar_ismark";
end;

define C-function g-unichar-toupper
  input parameter arg1 :: <gunichar>;
  result res :: <gunichar>;
  c-name: "g_unichar_toupper";
end;

define C-function g-unichar-tolower
  input parameter arg1 :: <gunichar>;
  result res :: <gunichar>;
  c-name: "g_unichar_tolower";
end;

define C-function g-unichar-totitle
  input parameter arg1 :: <gunichar>;
  result res :: <gunichar>;
  c-name: "g_unichar_totitle";
end;

define C-function g-unichar-digit-value
  input parameter arg1 :: <gunichar>;
  result res :: <gint>;
  c-name: "g_unichar_digit_value";
end;

define C-function g-unichar-xdigit-value
  input parameter arg1 :: <gunichar>;
  result res :: <gint>;
  c-name: "g_unichar_xdigit_value";
end;

define C-function g-unichar-type
  input parameter arg1 :: <gunichar>;
  result res :: <GUnicodeType>;
  c-name: "g_unichar_type";
end;

define C-function g-unichar-break-type
  input parameter arg1 :: <gunichar>;
  result res :: <GUnicodeBreakType>;
  c-name: "g_unichar_break_type";
end;

define C-function g-unichar-combining-class
  input parameter arg1 :: <gunichar>;
  result res :: <gint>;
  c-name: "g_unichar_combining_class";
end;

define C-pointer-type <gunichar*> => <gunichar>;
define C-function g-unicode-canonical-ordering
  input parameter arg1 :: <gunichar*>;
  input parameter arg2 :: <gsize>;
  c-name: "g_unicode_canonical_ordering";
end;

define C-pointer-type <gsize*> => <gsize>;
define C-function g-unicode-canonical-decomposition
  input parameter arg1 :: <gunichar>;
  input parameter arg2 :: <gsize*>;
  result res :: <gunichar*>;
  c-name: "g_unicode_canonical_decomposition";
end;

 /* Ignoring declaration for {instance of <variable-declaration>} "g-utf8-skip"*/
define C-function g-utf8-get-char
  input parameter arg1 :: <gchar*>;
  result res :: <gunichar>;
  c-name: "g_utf8_get_char";
end;

define C-function g-utf8-get-char-validated
  input parameter arg1 :: <gchar*>;
  input parameter arg2 :: <gssize>;
  result res :: <gunichar>;
  c-name: "g_utf8_get_char_validated";
end;

define C-function g-utf8-offset-to-pointer
  input parameter arg1 :: <gchar*>;
  input parameter arg2 :: <glong>;
  result res :: <gchar*>;
  c-name: "g_utf8_offset_to_pointer";
end;

define C-function g-utf8-pointer-to-offset
  input parameter arg1 :: <gchar*>;
  input parameter arg2 :: <gchar*>;
  result res :: <glong>;
  c-name: "g_utf8_pointer_to_offset";
end;

define C-function g-utf8-prev-char
  input parameter arg1 :: <gchar*>;
  result res :: <gchar*>;
  c-name: "g_utf8_prev_char";
end;

define C-function g-utf8-find-next-char
  input parameter arg1 :: <gchar*>;
  input parameter arg2 :: <gchar*>;
  result res :: <gchar*>;
  c-name: "g_utf8_find_next_char";
end;

define C-function g-utf8-find-prev-char
  input parameter arg1 :: <gchar*>;
  input parameter arg2 :: <gchar*>;
  result res :: <gchar*>;
  c-name: "g_utf8_find_prev_char";
end;

define C-function g-utf8-strlen
  input parameter arg1 :: <gchar*>;
  input parameter arg2 :: <gssize>;
  result res :: <glong>;
  c-name: "g_utf8_strlen";
end;

define C-function g-utf8-strncpy
  input parameter arg1 :: <gchar*>;
  input parameter arg2 :: <gchar*>;
  input parameter arg3 :: <gsize>;
  result res :: <gchar*>;
  c-name: "g_utf8_strncpy";
end;

define C-function g-utf8-strchr
  input parameter arg1 :: <gchar*>;
  input parameter arg2 :: <gssize>;
  input parameter arg3 :: <gunichar>;
  result res :: <gchar*>;
  c-name: "g_utf8_strchr";
end;

define C-function g-utf8-strrchr
  input parameter arg1 :: <gchar*>;
  input parameter arg2 :: <gssize>;
  input parameter arg3 :: <gunichar>;
  result res :: <gchar*>;
  c-name: "g_utf8_strrchr";
end;

define C-function g-utf8-strreverse
  input parameter arg1 :: <gchar*>;
  input parameter arg2 :: <gssize>;
  result res :: <gchar*>;
  c-name: "g_utf8_strreverse";
end;

define C-pointer-type <gunichar2*> => <gunichar2>;
define C-pointer-type <glong*> => <glong>;
define C-function g-utf8-to-utf16
  input parameter arg1 :: <gchar*>;
  input parameter arg2 :: <glong>;
  input parameter arg3 :: <glong*>;
  input parameter arg4 :: <glong*>;
  input parameter arg5 :: <GError*>;
  result res :: <gunichar2*>;
  c-name: "g_utf8_to_utf16";
end;

define C-function g-utf8-to-ucs4
  input parameter arg1 :: <gchar*>;
  input parameter arg2 :: <glong>;
  input parameter arg3 :: <glong*>;
  input parameter arg4 :: <glong*>;
  input parameter arg5 :: <GError*>;
  result res :: <gunichar*>;
  c-name: "g_utf8_to_ucs4";
end;

define C-function g-utf8-to-ucs4-fast
  input parameter arg1 :: <gchar*>;
  input parameter arg2 :: <glong>;
  input parameter arg3 :: <glong*>;
  result res :: <gunichar*>;
  c-name: "g_utf8_to_ucs4_fast";
end;

define C-function g-utf16-to-ucs4
  input parameter arg1 :: <gunichar2*>;
  input parameter arg2 :: <glong>;
  input parameter arg3 :: <glong*>;
  input parameter arg4 :: <glong*>;
  input parameter arg5 :: <GError*>;
  result res :: <gunichar*>;
  c-name: "g_utf16_to_ucs4";
end;

define C-function g-utf16-to-utf8
  input parameter arg1 :: <gunichar2*>;
  input parameter arg2 :: <glong>;
  input parameter arg3 :: <glong*>;
  input parameter arg4 :: <glong*>;
  input parameter arg5 :: <GError*>;
  result res :: <gchar*>;
  c-name: "g_utf16_to_utf8";
end;

define C-function g-ucs4-to-utf16
  input parameter arg1 :: <gunichar*>;
  input parameter arg2 :: <glong>;
  input parameter arg3 :: <glong*>;
  input parameter arg4 :: <glong*>;
  input parameter arg5 :: <GError*>;
  result res :: <gunichar2*>;
  c-name: "g_ucs4_to_utf16";
end;

define C-function g-ucs4-to-utf8
  input parameter arg1 :: <gunichar*>;
  input parameter arg2 :: <glong>;
  input parameter arg3 :: <glong*>;
  input parameter arg4 :: <glong*>;
  input parameter arg5 :: <GError*>;
  result res :: <gchar*>;
  c-name: "g_ucs4_to_utf8";
end;

define C-function g-unichar-to-utf8
  input parameter arg1 :: <gunichar>;
  input parameter arg2 :: <gchar*>;
  result res :: <gint>;
  c-name: "g_unichar_to_utf8";
end;

define C-function g-utf8-validate
  input parameter arg1 :: <gchar*>;
  input parameter arg2 :: <gssize>;
  input parameter arg3 :: <gchar**>;
  result res :: <gboolean>;
  c-name: "g_utf8_validate";
end;

define C-function g-unichar-validate
  input parameter arg1 :: <gunichar>;
  result res :: <gboolean>;
  c-name: "g_unichar_validate";
end;

define C-function g-utf8-strup
  input parameter arg1 :: <gchar*>;
  input parameter arg2 :: <gssize>;
  result res :: <gchar*>;
  c-name: "g_utf8_strup";
end;

define C-function g-utf8-strdown
  input parameter arg1 :: <gchar*>;
  input parameter arg2 :: <gssize>;
  result res :: <gchar*>;
  c-name: "g_utf8_strdown";
end;

define C-function g-utf8-casefold
  input parameter arg1 :: <gchar*>;
  input parameter arg2 :: <gssize>;
  result res :: <gchar*>;
  c-name: "g_utf8_casefold";
end;

define constant <GNormalizeMode> = <C-int>;
define constant $G-NORMALIZE-DEFAULT = 0;
define constant $G-NORMALIZE-NFD = 0;
define constant $G-NORMALIZE-DEFAULT-COMPOSE = 1;
define constant $G-NORMALIZE-NFC = 1;
define constant $G-NORMALIZE-ALL = 2;
define constant $G-NORMALIZE-NFKD = 2;
define constant $G-NORMALIZE-ALL-COMPOSE = 3;
define constant $G-NORMALIZE-NFKC = 3;

define C-function g-utf8-normalize
  input parameter arg1 :: <gchar*>;
  input parameter arg2 :: <gssize>;
  input parameter arg3 :: <GNormalizeMode>;
  result res :: <gchar*>;
  c-name: "g_utf8_normalize";
end;

define C-function g-utf8-collate
  input parameter arg1 :: <gchar*>;
  input parameter arg2 :: <gchar*>;
  result res :: <gint>;
  c-name: "g_utf8_collate";
end;

define C-function g-utf8-collate-key
  input parameter arg1 :: <gchar*>;
  input parameter arg2 :: <gssize>;
  result res :: <gchar*>;
  c-name: "g_utf8_collate_key";
end;

define C-function g-utf8-collate-key-for-filename
  input parameter arg1 :: <gchar*>;
  input parameter arg2 :: <gssize>;
  result res :: <gchar*>;
  c-name: "g_utf8_collate_key_for_filename";
end;

define C-function g-unichar-get-mirror-char
  input parameter arg1 :: <gunichar>;
  input parameter arg2 :: <gunichar*>;
  result res :: <gboolean>;
  c-name: "g_unichar_get_mirror_char";
end;

define C-function g-unichar-get-script
  input parameter arg1 :: <gunichar>;
  result res :: <GUnicodeScript>;
  c-name: "g_unichar_get_script";
end;

define C-function g-error-new
  input parameter arg1 :: <GQuark>;
  input parameter arg2 :: <gint>;
  input parameter arg3 :: <gchar*>;
  result res :: <GError>;
  c-name: "g_error_new";
end;

define C-function g-error-new-literal
  input parameter arg1 :: <GQuark>;
  input parameter arg2 :: <gint>;
  input parameter arg3 :: <gchar*>;
  result res :: <GError>;
  c-name: "g_error_new_literal";
end;

define C-function g-error-free
  input parameter arg1 :: <GError>;
  c-name: "g_error_free";
end;

define C-function g-error-copy
  input parameter arg1 :: <GError>;
  result res :: <GError>;
  c-name: "g_error_copy";
end;

define C-function g-error-matches
  input parameter arg1 :: <GError>;
  input parameter arg2 :: <GQuark>;
  input parameter arg3 :: <gint>;
  result res :: <gboolean>;
  c-name: "g_error_matches";
end;

define C-function g-set-error
  input parameter arg1 :: <GError*>;
  input parameter arg2 :: <GQuark>;
  input parameter arg3 :: <gint>;
  input parameter arg4 :: <gchar*>;
  c-name: "g_set_error";
end;

define C-function g-propagate-error
  input parameter arg1 :: <GError*>;
  input parameter arg2 :: <GError>;
  c-name: "g_propagate_error";
end;

define C-function g-clear-error
  input parameter arg1 :: <GError*>;
  c-name: "g_clear_error";
end;

define C-function g-quark-try-string
  input parameter arg1 :: <gchar*>;
  result res :: <GQuark>;
  c-name: "g_quark_try_string";
end;

define C-function g-quark-from-static-string
  input parameter arg1 :: <gchar*>;
  result res :: <GQuark>;
  c-name: "g_quark_from_static_string";
end;

define C-function g-quark-from-string
  input parameter arg1 :: <gchar*>;
  result res :: <GQuark>;
  c-name: "g_quark_from_string";
end;

define C-function g-quark-to-string
  input parameter arg1 :: <GQuark>;
  result res :: <gchar*>;
  c-name: "g_quark_to_string";
end;

define C-function g-intern-string
  input parameter arg1 :: <gchar*>;
  result res :: <gchar*>;
  c-name: "g_intern_string";
end;

define C-function g-intern-static-string
  input parameter arg1 :: <gchar*>;
  result res :: <gchar*>;
  c-name: "g_intern_static_string";
end;

define C-struct <_GTree>
end;

define C-pointer-type <GTree> => <_GTree>;

define constant <anonymous-1470> = <C-function-pointer>;
define constant <GTraverseFunc> = <anonymous-1470>;

define C-function g-tree-new
  input parameter arg1 :: <GCompareFunc>;
  result res :: <GTree>;
  c-name: "g_tree_new";
end;

define C-function g-tree-new-with-data
  input parameter arg1 :: <GCompareDataFunc>;
  input parameter arg2 :: <gpointer>;
  result res :: <GTree>;
  c-name: "g_tree_new_with_data";
end;

define C-function g-tree-new-full
  input parameter arg1 :: <GCompareDataFunc>;
  input parameter arg2 :: <gpointer>;
  input parameter arg3 :: <GDestroyNotify>;
  input parameter arg4 :: <GDestroyNotify>;
  result res :: <GTree>;
  c-name: "g_tree_new_full";
end;

define C-function g-tree-destroy
  input parameter arg1 :: <GTree>;
  c-name: "g_tree_destroy";
end;

define C-function g-tree-insert
  input parameter arg1 :: <GTree>;
  input parameter arg2 :: <gpointer>;
  input parameter arg3 :: <gpointer>;
  c-name: "g_tree_insert";
end;

define C-function g-tree-replace
  input parameter arg1 :: <GTree>;
  input parameter arg2 :: <gpointer>;
  input parameter arg3 :: <gpointer>;
  c-name: "g_tree_replace";
end;

define C-function g-tree-remove
  input parameter arg1 :: <GTree>;
  input parameter arg2 :: <gconstpointer>;
  result res :: <gboolean>;
  c-name: "g_tree_remove";
end;

define C-function g-tree-steal
  input parameter arg1 :: <GTree>;
  input parameter arg2 :: <gconstpointer>;
  result res :: <gboolean>;
  c-name: "g_tree_steal";
end;

define C-function g-tree-lookup
  input parameter arg1 :: <GTree>;
  input parameter arg2 :: <gconstpointer>;
  result res :: <gpointer>;
  c-name: "g_tree_lookup";
end;

define C-function g-tree-lookup-extended
  input parameter arg1 :: <GTree>;
  input parameter arg2 :: <gconstpointer>;
  input parameter arg3 :: <gpointer*>;
  input parameter arg4 :: <gpointer*>;
  result res :: <gboolean>;
  c-name: "g_tree_lookup_extended";
end;

define C-function g-tree-foreach
  input parameter arg1 :: <GTree>;
  input parameter arg2 :: <GTraverseFunc>;
  input parameter arg3 :: <gpointer>;
  c-name: "g_tree_foreach";
end;

define constant <GTraverseType> = <C-int>;
define constant $G-IN-ORDER = 0;
define constant $G-PRE-ORDER = 1;
define constant $G-POST-ORDER = 2;
define constant $G-LEVEL-ORDER = 3;

define C-function g-tree-traverse
  input parameter arg1 :: <GTree>;
  input parameter arg2 :: <GTraverseFunc>;
  input parameter arg3 :: <GTraverseType>;
  input parameter arg4 :: <gpointer>;
  c-name: "g_tree_traverse";
end;

define C-function g-tree-search
  input parameter arg1 :: <GTree>;
  input parameter arg2 :: <GCompareFunc>;
  input parameter arg3 :: <gconstpointer>;
  result res :: <gpointer>;
  c-name: "g_tree_search";
end;

define C-function g-tree-height
  input parameter arg1 :: <GTree>;
  result res :: <gint>;
  c-name: "g_tree_height";
end;

define C-function g-tree-nnodes
  input parameter arg1 :: <GTree>;
  result res :: <gint>;
  c-name: "g_tree_nnodes";
end;

define C-pointer-type <GNode> => <_GNode>;

define C-struct <_GNode>
  slot GNode-data :: <C-void*>;
  slot GNode-next :: <GNode>;
  slot GNode-prev :: <GNode>;
  slot GNode-parent :: <GNode>;
  slot GNode-children :: <GNode>;
end;

define constant <GTraverseFlags> = <C-int>;
define constant $G-TRAVERSE-LEAVES = 1;
define constant $G-TRAVERSE-NON-LEAVES = 2;
define constant $G-TRAVERSE-ALL = 3;
define constant $G-TRAVERSE-MASK = 3;
define constant $G-TRAVERSE-LEAFS = 1;
define constant $G-TRAVERSE-NON-LEAFS = 2;

define constant <anonymous-1122> = <C-function-pointer>;
define constant <GNodeTraverseFunc> = <anonymous-1122>;

define constant <anonymous-1123> = <C-function-pointer>;
define constant <GNodeForeachFunc> = <anonymous-1123>;

define constant <anonymous-1124> = <C-function-pointer>;
define constant <GCopyFunc> = <anonymous-1124>;

define C-function g-node-new
  input parameter arg1 :: <gpointer>;
  result res :: <GNode>;
  c-name: "g_node_new";
end;

define C-function g-node-destroy
  input parameter arg1 :: <GNode>;
  c-name: "g_node_destroy";
end;

define C-function g-node-unlink
  input parameter arg1 :: <GNode>;
  c-name: "g_node_unlink";
end;

define C-function g-node-copy-deep
  input parameter arg1 :: <GNode>;
  input parameter arg2 :: <GCopyFunc>;
  input parameter arg3 :: <gpointer>;
  result res :: <GNode>;
  c-name: "g_node_copy_deep";
end;

define C-function g-node-copy
  input parameter arg1 :: <GNode>;
  result res :: <GNode>;
  c-name: "g_node_copy";
end;

define C-function g-node-insert
  input parameter arg1 :: <GNode>;
  input parameter arg2 :: <gint>;
  input parameter arg3 :: <GNode>;
  result res :: <GNode>;
  c-name: "g_node_insert";
end;

define C-function g-node-insert-before
  input parameter arg1 :: <GNode>;
  input parameter arg2 :: <GNode>;
  input parameter arg3 :: <GNode>;
  result res :: <GNode>;
  c-name: "g_node_insert_before";
end;

define C-function g-node-insert-after
  input parameter arg1 :: <GNode>;
  input parameter arg2 :: <GNode>;
  input parameter arg3 :: <GNode>;
  result res :: <GNode>;
  c-name: "g_node_insert_after";
end;

define C-function g-node-prepend
  input parameter arg1 :: <GNode>;
  input parameter arg2 :: <GNode>;
  result res :: <GNode>;
  c-name: "g_node_prepend";
end;

define C-function g-node-n-nodes
  input parameter arg1 :: <GNode>;
  input parameter arg2 :: <GTraverseFlags>;
  result res :: <guint>;
  c-name: "g_node_n_nodes";
end;

define C-function g-node-get-root
  input parameter arg1 :: <GNode>;
  result res :: <GNode>;
  c-name: "g_node_get_root";
end;

define C-function g-node-is-ancestor
  input parameter arg1 :: <GNode>;
  input parameter arg2 :: <GNode>;
  result res :: <gboolean>;
  c-name: "g_node_is_ancestor";
end;

define C-function g-node-depth
  input parameter arg1 :: <GNode>;
  result res :: <guint>;
  c-name: "g_node_depth";
end;

define C-function g-node-find
  input parameter arg1 :: <GNode>;
  input parameter arg2 :: <GTraverseType>;
  input parameter arg3 :: <GTraverseFlags>;
  input parameter arg4 :: <gpointer>;
  result res :: <GNode>;
  c-name: "g_node_find";
end;

define C-function g-node-traverse
  input parameter arg1 :: <GNode>;
  input parameter arg2 :: <GTraverseType>;
  input parameter arg3 :: <GTraverseFlags>;
  input parameter arg4 :: <gint>;
  input parameter arg5 :: <GNodeTraverseFunc>;
  input parameter arg6 :: <gpointer>;
  c-name: "g_node_traverse";
end;

define C-function g-node-max-height
  input parameter arg1 :: <GNode>;
  result res :: <guint>;
  c-name: "g_node_max_height";
end;

define C-function g-node-children-foreach
  input parameter arg1 :: <GNode>;
  input parameter arg2 :: <GTraverseFlags>;
  input parameter arg3 :: <GNodeForeachFunc>;
  input parameter arg4 :: <gpointer>;
  c-name: "g_node_children_foreach";
end;

define C-function g-node-reverse-children
  input parameter arg1 :: <GNode>;
  c-name: "g_node_reverse_children";
end;

define C-function g-node-n-children
  input parameter arg1 :: <GNode>;
  result res :: <guint>;
  c-name: "g_node_n_children";
end;

define C-function g-node-nth-child
  input parameter arg1 :: <GNode>;
  input parameter arg2 :: <guint>;
  result res :: <GNode>;
  c-name: "g_node_nth_child";
end;

define C-function g-node-last-child
  input parameter arg1 :: <GNode>;
  result res :: <GNode>;
  c-name: "g_node_last_child";
end;

define C-function g-node-find-child
  input parameter arg1 :: <GNode>;
  input parameter arg2 :: <GTraverseFlags>;
  input parameter arg3 :: <gpointer>;
  result res :: <GNode>;
  c-name: "g_node_find_child";
end;

define C-function g-node-child-position
  input parameter arg1 :: <GNode>;
  input parameter arg2 :: <GNode>;
  result res :: <gint>;
  c-name: "g_node_child_position";
end;

define C-function g-node-child-index
  input parameter arg1 :: <GNode>;
  input parameter arg2 :: <gpointer>;
  result res :: <gint>;
  c-name: "g_node_child_index";
end;

define C-function g-node-first-sibling
  input parameter arg1 :: <GNode>;
  result res :: <GNode>;
  c-name: "g_node_first_sibling";
end;

define C-function g-node-last-sibling
  input parameter arg1 :: <GNode>;
  result res :: <GNode>;
  c-name: "g_node_last_sibling";
end;

define C-function g-node-push-allocator
  input parameter arg1 :: <gpointer>;
  c-name: "g_node_push_allocator";
end;

define C-function g-node-pop-allocator
  c-name: "g_node_pop_allocator";
end;

define constant <anonymous-529> = <C-function-pointer>;
define constant <anonymous-530> = <C-function-pointer>;
define constant <anonymous-531> = <C-function-pointer>;
define constant <anonymous-532> = <C-function-pointer>;
define constant <anonymous-533> = <C-function-pointer>;
define constant <anonymous-534> = <C-function-pointer>;
define C-struct <_GMemVTable>
  slot GMemVTable-malloc :: <anonymous-529>;
  slot GMemVTable-realloc :: <anonymous-530>;
  slot GMemVTable-free :: <anonymous-531>;
  slot GMemVTable-calloc :: <anonymous-532>;
  slot GMemVTable-try-malloc :: <anonymous-533>;
  slot GMemVTable-try-realloc :: <anonymous-534>;
end;

define C-pointer-type <GMemVTable> => <_GMemVTable>;

define C-function g-malloc
  input parameter arg1 :: <gulong>;
  result res :: <gpointer>;
  c-name: "g_malloc";
end;

define C-function g-malloc0
  input parameter arg1 :: <gulong>;
  result res :: <gpointer>;
  c-name: "g_malloc0";
end;

define C-function g-realloc
  input parameter arg1 :: <gpointer>;
  input parameter arg2 :: <gulong>;
  result res :: <gpointer>;
  c-name: "g_realloc";
end;

define C-function g-free
  input parameter arg1 :: <gpointer>;
  c-name: "g_free";
end;

define C-function g-try-malloc
  input parameter arg1 :: <gulong>;
  result res :: <gpointer>;
  c-name: "g_try_malloc";
end;

define C-function g-try-malloc0
  input parameter arg1 :: <gulong>;
  result res :: <gpointer>;
  c-name: "g_try_malloc0";
end;

define C-function g-try-realloc
  input parameter arg1 :: <gpointer>;
  input parameter arg2 :: <gulong>;
  result res :: <gpointer>;
  c-name: "g_try_realloc";
end;

define C-function g-mem-set-vtable
  input parameter arg1 :: <GMemVTable>;
  c-name: "g_mem_set_vtable";
end;

define C-function g-mem-is-system-malloc
  result res :: <gboolean>;
  c-name: "g_mem_is_system_malloc";
end;

 /* Ignoring declaration for {instance of <variable-declaration>} "g-mem-gc-friendly"*/
 /* Ignoring declaration for {instance of <variable-declaration>} "glib-mem-profiler-table"*/
define C-function g-mem-profile
  c-name: "g_mem_profile";
end;

define C-struct <_GAllocator>
end;

define C-pointer-type <GAllocator> => <_GAllocator>;

define C-struct <_GMemChunk>
end;

define C-pointer-type <GMemChunk> => <_GMemChunk>;

define C-function g-mem-chunk-new
  input parameter arg1 :: <gchar*>;
  input parameter arg2 :: <gint>;
  input parameter arg3 :: <gulong>;
  input parameter arg4 :: <gint>;
  result res :: <GMemChunk>;
  c-name: "g_mem_chunk_new";
end;

define C-function g-mem-chunk-destroy
  input parameter arg1 :: <GMemChunk>;
  c-name: "g_mem_chunk_destroy";
end;

define C-function g-mem-chunk-alloc
  input parameter arg1 :: <GMemChunk>;
  result res :: <gpointer>;
  c-name: "g_mem_chunk_alloc";
end;

define C-function g-mem-chunk-alloc0
  input parameter arg1 :: <GMemChunk>;
  result res :: <gpointer>;
  c-name: "g_mem_chunk_alloc0";
end;

define C-function g-mem-chunk-free
  input parameter arg1 :: <GMemChunk>;
  input parameter arg2 :: <gpointer>;
  c-name: "g_mem_chunk_free";
end;

define C-function g-mem-chunk-clean
  input parameter arg1 :: <GMemChunk>;
  c-name: "g_mem_chunk_clean";
end;

define C-function g-mem-chunk-reset
  input parameter arg1 :: <GMemChunk>;
  c-name: "g_mem_chunk_reset";
end;

define C-function g-mem-chunk-print
  input parameter arg1 :: <GMemChunk>;
  c-name: "g_mem_chunk_print";
end;

define C-function g-mem-chunk-info
  c-name: "g_mem_chunk_info";
end;

define C-function g-blow-chunks
  c-name: "g_blow_chunks";
end;

define C-function g-allocator-new
  input parameter arg1 :: <gchar*>;
  input parameter arg2 :: <guint>;
  result res :: <GAllocator>;
  c-name: "g_allocator_new";
end;

define C-function g-allocator-free
  input parameter arg1 :: <GAllocator>;
  c-name: "g_allocator_free";
end;

define constant $G-MEM-ALIGN = 4;

define constant $G-ALLOC-ONLY = 1;

define constant $G-ALLOC-AND-FREE = 2;

define constant $G-ALLOCATOR-LIST = 1;

define constant $G-ALLOCATOR-SLIST = 2;

define constant $G-ALLOCATOR-NODE = 3;

define C-function g-slice-alloc
  input parameter arg1 :: <gsize>;
  result res :: <gpointer>;
  c-name: "g_slice_alloc";
end;

define C-function g-slice-alloc0
  input parameter arg1 :: <gsize>;
  result res :: <gpointer>;
  c-name: "g_slice_alloc0";
end;

define C-function g-slice-copy
  input parameter arg1 :: <gsize>;
  input parameter arg2 :: <gconstpointer>;
  result res :: <gpointer>;
  c-name: "g_slice_copy";
end;

define C-function g-slice-free1
  input parameter arg1 :: <gsize>;
  input parameter arg2 :: <gpointer>;
  c-name: "g_slice_free1";
end;

define C-function g-slice-free-chain-with-offset
  input parameter arg1 :: <gsize>;
  input parameter arg2 :: <gpointer>;
  input parameter arg3 :: <gsize>;
  c-name: "g_slice_free_chain_with_offset";
end;

define constant <GSliceConfig> = <C-int>;
define constant $G-SLICE-CONFIG-ALWAYS-MALLOC = 1;
define constant $G-SLICE-CONFIG-BYPASS-MAGAZINES = 2;
define constant $G-SLICE-CONFIG-WORKING-SET-MSECS = 3;
define constant $G-SLICE-CONFIG-COLOR-INCREMENT = 4;
define constant $G-SLICE-CONFIG-CHUNK-SIZES = 5;
define constant $G-SLICE-CONFIG-CONTENTION-COUNTER = 6;

define C-function g-slice-set-config
  input parameter arg1 :: <GSliceConfig>;
  input parameter arg2 :: <gint64>;
  c-name: "g_slice_set_config";
end;

define C-function g-slice-get-config
  input parameter arg1 :: <GSliceConfig>;
  result res :: <gint64>;
  c-name: "g_slice_get_config";
end;

define C-pointer-type <gint64*> => <gint64>;
define C-function g-slice-get-config-state
  input parameter arg1 :: <GSliceConfig>;
  input parameter arg2 :: <gint64>;
  input parameter arg3 :: <guint*>;
  result res :: <gint64*>;
  c-name: "g_slice_get_config_state";
end;

define C-struct <_GTimer>
end;

define C-pointer-type <GTimer> => <_GTimer>;

define C-function g-timer-new
  result res :: <GTimer>;
  c-name: "g_timer_new";
end;

define C-function g-timer-destroy
  input parameter arg1 :: <GTimer>;
  c-name: "g_timer_destroy";
end;

define C-function g-timer-start
  input parameter arg1 :: <GTimer>;
  c-name: "g_timer_start";
end;

define C-function g-timer-stop
  input parameter arg1 :: <GTimer>;
  c-name: "g_timer_stop";
end;

define C-function g-timer-reset
  input parameter arg1 :: <GTimer>;
  c-name: "g_timer_reset";
end;

define C-function g-timer-continue
  input parameter arg1 :: <GTimer>;
  c-name: "g_timer_continue";
end;

define C-pointer-type <gulong*> => <gulong>;
define C-function g-timer-elapsed
  input parameter arg1 :: <GTimer>;
  input parameter arg2 :: <gulong*>;
  result res :: <gdouble>;
  c-name: "g_timer_elapsed";
end;

define C-function g-usleep
  input parameter arg1 :: <gulong>;
  c-name: "g_usleep";
end;

define C-function g-time-val-add
  input parameter arg1 :: <GTimeVal>;
  input parameter arg2 :: <glong>;
  c-name: "g_time_val_add";
end;

define C-function g-time-val-from-iso8601
  input parameter arg1 :: <gchar*>;
  input parameter arg2 :: <GTimeVal>;
  result res :: <gboolean>;
  c-name: "g_time_val_from_iso8601";
end;

define C-function g-time-val-to-iso8601
  input parameter arg1 :: <GTimeVal>;
  result res :: <gchar*>;
  c-name: "g_time_val_to_iso8601";
end;

define constant $G-USEC-PER-SEC = 1000000;

define C-struct <_GThreadPool>
  slot GThreadPool-func :: <anonymous-224>;
  slot GThreadPool-user-data :: <C-void*>;
  slot GThreadPool-exclusive :: <C-signed-int>;
end;

define C-pointer-type <GThreadPool> => <_GThreadPool>;

define C-function g-thread-pool-new
  input parameter arg1 :: <GFunc>;
  input parameter arg2 :: <gpointer>;
  input parameter arg3 :: <gint>;
  input parameter arg4 :: <gboolean>;
  input parameter arg5 :: <GError*>;
  result res :: <GThreadPool>;
  c-name: "g_thread_pool_new";
end;

define C-function g-thread-pool-push
  input parameter arg1 :: <GThreadPool>;
  input parameter arg2 :: <gpointer>;
  input parameter arg3 :: <GError*>;
  c-name: "g_thread_pool_push";
end;

define C-function g-thread-pool-set-max-threads
  input parameter arg1 :: <GThreadPool>;
  input parameter arg2 :: <gint>;
  input parameter arg3 :: <GError*>;
  c-name: "g_thread_pool_set_max_threads";
end;

define C-function g-thread-pool-get-max-threads
  input parameter arg1 :: <GThreadPool>;
  result res :: <gint>;
  c-name: "g_thread_pool_get_max_threads";
end;

define C-function g-thread-pool-get-num-threads
  input parameter arg1 :: <GThreadPool>;
  result res :: <guint>;
  c-name: "g_thread_pool_get_num_threads";
end;

define C-function g-thread-pool-unprocessed
  input parameter arg1 :: <GThreadPool>;
  result res :: <guint>;
  c-name: "g_thread_pool_unprocessed";
end;

define C-function g-thread-pool-free
  input parameter arg1 :: <GThreadPool>;
  input parameter arg2 :: <gboolean>;
  input parameter arg3 :: <gboolean>;
  c-name: "g_thread_pool_free";
end;

define C-function g-thread-pool-set-max-unused-threads
  input parameter arg1 :: <gint>;
  c-name: "g_thread_pool_set_max_unused_threads";
end;

define C-function g-thread-pool-get-max-unused-threads
  result res :: <gint>;
  c-name: "g_thread_pool_get_max_unused_threads";
end;

define C-function g-thread-pool-get-num-unused-threads
  result res :: <guint>;
  c-name: "g_thread_pool_get_num_unused_threads";
end;

define C-function g-thread-pool-stop-unused-threads
  c-name: "g_thread_pool_stop_unused_threads";
end;

define C-function g-thread-pool-set-sort-function
  input parameter arg1 :: <GThreadPool>;
  input parameter arg2 :: <GCompareDataFunc>;
  input parameter arg3 :: <gpointer>;
  c-name: "g_thread_pool_set_sort_function";
end;

define C-function g-thread-pool-set-max-idle-time
  input parameter arg1 :: <guint>;
  c-name: "g_thread_pool_set_max_idle_time";
end;

define C-function g-thread-pool-get-max-idle-time
  result res :: <guint>;
  c-name: "g_thread_pool_get_max_idle_time";
end;

define C-function g-thread-error-quark
  result res :: <GQuark>;
  c-name: "g_thread_error_quark";
end;

define constant <GThreadError> = <C-int>;
define constant $G-THREAD-ERROR-AGAIN = 0;

define constant <anonymous-349> = <C-function-pointer>;
define constant <GThreadFunc> = <anonymous-349>;

define constant <GThreadPriority> = <C-int>;
define constant $G-THREAD-PRIORITY-LOW = 0;
define constant $G-THREAD-PRIORITY-NORMAL = 1;
define constant $G-THREAD-PRIORITY-HIGH = 2;
define constant $G-THREAD-PRIORITY-URGENT = 3;

define C-struct <_GThread>
  slot GThread-func :: <anonymous-349>;
  slot GThread-data :: <C-void*>;
  slot GThread-joinable :: <C-signed-int>;
  slot GThread-priority :: <GThreadPriority>;
end;

define C-pointer-type <GThread> => <_GThread>;

define C-pointer-type <GMutex> => <_GMutex>;

define C-struct <_GCond>
end;

define C-pointer-type <GCond> => <_GCond>;

define C-struct <_GPrivate>
end;

define C-pointer-type <GPrivate> => <_GPrivate>;

define C-struct <_GStaticPrivate>
  slot GStaticPrivate-index :: <C-unsigned-int>;
end;

define C-pointer-type <GStaticPrivate> => <_GStaticPrivate>;

define constant <anonymous-351> = <C-function-pointer>;
define constant <anonymous-352> = <C-function-pointer>;
define constant <anonymous-353> = <C-function-pointer>;
define constant <anonymous-354> = <C-function-pointer>;
define constant <anonymous-355> = <C-function-pointer>;
define constant <anonymous-356> = <C-function-pointer>;
define constant <anonymous-357> = <C-function-pointer>;
define constant <anonymous-358> = <C-function-pointer>;
define constant <anonymous-359> = <C-function-pointer>;
define constant <anonymous-360> = <C-function-pointer>;
define constant <anonymous-361> = <C-function-pointer>;
define constant <anonymous-362> = <C-function-pointer>;
define constant <anonymous-363> = <C-function-pointer>;
define constant <anonymous-364> = <C-function-pointer>;
define constant <anonymous-365> = <C-function-pointer>;
define constant <anonymous-366> = <C-function-pointer>;
define constant <anonymous-367> = <C-function-pointer>;
define constant <anonymous-368> = <C-function-pointer>;
define constant <anonymous-369> = <C-function-pointer>;
define constant <anonymous-370> = <C-function-pointer>;
define constant <anonymous-371> = <C-function-pointer>;
define C-struct <_GThreadFunctions>
  slot GThreadFunctions-mutex-new :: <anonymous-351>;
  slot GThreadFunctions-mutex-lock :: <anonymous-352>;
  slot GThreadFunctions-mutex-trylock :: <anonymous-353>;
  slot GThreadFunctions-mutex-unlock :: <anonymous-354>;
  slot GThreadFunctions-mutex-free :: <anonymous-355>;
  slot GThreadFunctions-cond-new :: <anonymous-356>;
  slot GThreadFunctions-cond-signal :: <anonymous-357>;
  slot GThreadFunctions-cond-broadcast :: <anonymous-358>;
  slot GThreadFunctions-cond-wait :: <anonymous-359>;
  slot GThreadFunctions-cond-timed-wait :: <anonymous-360>;
  slot GThreadFunctions-cond-free :: <anonymous-361>;
  slot GThreadFunctions-private-new :: <anonymous-362>;
  slot GThreadFunctions-private-get :: <anonymous-363>;
  slot GThreadFunctions-private-set :: <anonymous-364>;
  slot GThreadFunctions-thread-create :: <anonymous-365>;
  slot GThreadFunctions-thread-yield :: <anonymous-366>;
  slot GThreadFunctions-thread-join :: <anonymous-367>;
  slot GThreadFunctions-thread-exit :: <anonymous-368>;
  slot GThreadFunctions-thread-set-priority :: <anonymous-369>;
  slot GThreadFunctions-thread-self :: <anonymous-370>;
  slot GThreadFunctions-thread-equal :: <anonymous-371>;
end;

define C-pointer-type <GThreadFunctions> => <_GThreadFunctions>;

 /* Ignoring declaration for {instance of <variable-declaration>} "g-thread-functions-for-glib-use"*/
 /* Ignoring declaration for {instance of <variable-declaration>} "g-thread-use-default-impl"*/
 /* Ignoring declaration for {instance of <variable-declaration>} "g-threads-got-initialized"*/
define constant <anonymous-372> = <C-function-pointer>;
 /* Ignoring declaration for {instance of <variable-declaration>} "g-thread-gettime"*/
define C-function g-thread-init
  input parameter arg1 :: <GThreadFunctions>;
  c-name: "g_thread_init";
end;

define C-pointer-type <GMutex*> => <GMutex>;
define C-function g-static-mutex-get-mutex-impl
  input parameter arg1 :: <GMutex*>;
  result res :: <GMutex>;
  c-name: "g_static_mutex_get_mutex_impl";
end;

define C-function g-thread-create-full
  input parameter arg1 :: <GThreadFunc>;
  input parameter arg2 :: <gpointer>;
  input parameter arg3 :: <gulong>;
  input parameter arg4 :: <gboolean>;
  input parameter arg5 :: <gboolean>;
  input parameter arg6 :: <GThreadPriority>;
  input parameter arg7 :: <GError*>;
  result res :: <GThread>;
  c-name: "g_thread_create_full";
end;

define C-function g-thread-self
  result res :: <GThread>;
  c-name: "g_thread_self";
end;

define C-function g-thread-exit
  input parameter arg1 :: <gpointer>;
  c-name: "g_thread_exit";
end;

define C-function g-thread-join
  input parameter arg1 :: <GThread>;
  result res :: <gpointer>;
  c-name: "g_thread_join";
end;

define C-function g-thread-set-priority
  input parameter arg1 :: <GThread>;
  input parameter arg2 :: <GThreadPriority>;
  c-name: "g_thread_set_priority";
end;

define C-function g-static-mutex-init
  input parameter arg1 :: <GStaticMutex>;
  c-name: "g_static_mutex_init";
end;

define C-function g-static-mutex-free
  input parameter arg1 :: <GStaticMutex>;
  c-name: "g_static_mutex_free";
end;

define C-function g-static-private-init
  input parameter arg1 :: <GStaticPrivate>;
  c-name: "g_static_private_init";
end;

define C-function g-static-private-get
  input parameter arg1 :: <GStaticPrivate>;
  result res :: <gpointer>;
  c-name: "g_static_private_get";
end;

define C-function g-static-private-set
  input parameter arg1 :: <GStaticPrivate>;
  input parameter arg2 :: <gpointer>;
  input parameter arg3 :: <GDestroyNotify>;
  c-name: "g_static_private_set";
end;

define C-function g-static-private-free
  input parameter arg1 :: <GStaticPrivate>;
  c-name: "g_static_private_free";
end;

define C-struct <_GStaticRecMutex>
  slot GStaticRecMutex-mutex :: <_GStaticMutex>;
  slot GStaticRecMutex-depth :: <C-unsigned-int>;
  slot GStaticRecMutex-owner :: <_GSystemThread>;
end;

define C-pointer-type <GStaticRecMutex> => <_GStaticRecMutex>;

define C-function g-static-rec-mutex-init
  input parameter arg1 :: <GStaticRecMutex>;
  c-name: "g_static_rec_mutex_init";
end;

define C-function g-static-rec-mutex-lock
  input parameter arg1 :: <GStaticRecMutex>;
  c-name: "g_static_rec_mutex_lock";
end;

define C-function g-static-rec-mutex-trylock
  input parameter arg1 :: <GStaticRecMutex>;
  result res :: <gboolean>;
  c-name: "g_static_rec_mutex_trylock";
end;

define C-function g-static-rec-mutex-unlock
  input parameter arg1 :: <GStaticRecMutex>;
  c-name: "g_static_rec_mutex_unlock";
end;

define C-function g-static-rec-mutex-lock-full
  input parameter arg1 :: <GStaticRecMutex>;
  input parameter arg2 :: <guint>;
  c-name: "g_static_rec_mutex_lock_full";
end;

define C-function g-static-rec-mutex-unlock-full
  input parameter arg1 :: <GStaticRecMutex>;
  result res :: <guint>;
  c-name: "g_static_rec_mutex_unlock_full";
end;

define C-function g-static-rec-mutex-free
  input parameter arg1 :: <GStaticRecMutex>;
  c-name: "g_static_rec_mutex_free";
end;

define C-struct <_GStaticRWLock>
  slot GStaticRWLock-mutex :: <_GStaticMutex>;
  slot GStaticRWLock-read-cond :: <GCond>;
  slot GStaticRWLock-write-cond :: <GCond>;
  slot GStaticRWLock-read-counter :: <C-unsigned-int>;
  slot GStaticRWLock-have-writer :: <C-signed-int>;
  slot GStaticRWLock-want-to-read :: <C-unsigned-int>;
  slot GStaticRWLock-want-to-write :: <C-unsigned-int>;
end;

define C-pointer-type <GStaticRWLock> => <_GStaticRWLock>;

define C-function g-static-rw-lock-init
  input parameter arg1 :: <GStaticRWLock>;
  c-name: "g_static_rw_lock_init";
end;

define C-function g-static-rw-lock-reader-lock
  input parameter arg1 :: <GStaticRWLock>;
  c-name: "g_static_rw_lock_reader_lock";
end;

define C-function g-static-rw-lock-reader-trylock
  input parameter arg1 :: <GStaticRWLock>;
  result res :: <gboolean>;
  c-name: "g_static_rw_lock_reader_trylock";
end;

define C-function g-static-rw-lock-reader-unlock
  input parameter arg1 :: <GStaticRWLock>;
  c-name: "g_static_rw_lock_reader_unlock";
end;

define C-function g-static-rw-lock-writer-lock
  input parameter arg1 :: <GStaticRWLock>;
  c-name: "g_static_rw_lock_writer_lock";
end;

define C-function g-static-rw-lock-writer-trylock
  input parameter arg1 :: <GStaticRWLock>;
  result res :: <gboolean>;
  c-name: "g_static_rw_lock_writer_trylock";
end;

define C-function g-static-rw-lock-writer-unlock
  input parameter arg1 :: <GStaticRWLock>;
  c-name: "g_static_rw_lock_writer_unlock";
end;

define C-function g-static-rw-lock-free
  input parameter arg1 :: <GStaticRWLock>;
  c-name: "g_static_rw_lock_free";
end;

define C-function g-thread-foreach
  input parameter arg1 :: <GFunc>;
  input parameter arg2 :: <gpointer>;
  c-name: "g_thread_foreach";
end;

define constant <GOnceStatus> = <C-int>;
define constant $G-ONCE-STATUS-NOTCALLED = 0;
define constant $G-ONCE-STATUS-PROGRESS = 1;
define constant $G-ONCE-STATUS-READY = 2;

define C-struct <_GOnce>
  slot GOnce-status :: <GOnceStatus>;
  slot GOnce-retval :: <C-void*>;
end;

define C-pointer-type <GOnce> => <_GOnce>;

define C-function g-once-impl
  input parameter arg1 :: <GOnce>;
  input parameter arg2 :: <GThreadFunc>;
  input parameter arg3 :: <gpointer>;
  result res :: <gpointer>;
  c-name: "g_once_impl";
end;

define C-function g-once-init-enter
  input parameter arg1 :: <gsize*>;
  result res :: <gboolean>;
  c-name: "g_once_init_enter";
end;

define C-function g-once-init-enter-impl
  input parameter arg1 :: <gsize*>;
  result res :: <gboolean>;
  c-name: "g_once_init_enter_impl";
end;

define C-function g-once-init-leave
  input parameter arg1 :: <gsize*>;
  input parameter arg2 :: <gsize>;
  c-name: "g_once_init_leave";
end;

define C-function g-atomic-int-exchange-and-add
  input parameter arg1 :: <gint*>;
  input parameter arg2 :: <gint>;
  result res :: <gint>;
  c-name: "g_atomic_int_exchange_and_add";
end;

define C-function g-atomic-int-add
  input parameter arg1 :: <gint*>;
  input parameter arg2 :: <gint>;
  c-name: "g_atomic_int_add";
end;

define C-function g-atomic-int-compare-and-exchange
  input parameter arg1 :: <gint*>;
  input parameter arg2 :: <gint>;
  input parameter arg3 :: <gint>;
  result res :: <gboolean>;
  c-name: "g_atomic_int_compare_and_exchange";
end;

define C-function g-atomic-pointer-compare-and-exchange
  input parameter arg1 :: <gpointer*>;
  input parameter arg2 :: <gpointer>;
  input parameter arg3 :: <gpointer>;
  result res :: <gboolean>;
  c-name: "g_atomic_pointer_compare_and_exchange";
end;

define C-function g-atomic-int-get
  input parameter arg1 :: <gint*>;
  result res :: <gint>;
  c-name: "g_atomic_int_get";
end;

define C-function g-atomic-int-set
  input parameter arg1 :: <gint*>;
  input parameter arg2 :: <gint>;
  c-name: "g_atomic_int_set";
end;

define C-function g-atomic-pointer-get
  input parameter arg1 :: <gpointer*>;
  result res :: <gpointer>;
  c-name: "g_atomic_pointer_get";
end;

define C-function g-atomic-pointer-set
  input parameter arg1 :: <gpointer*>;
  input parameter arg2 :: <gpointer>;
  c-name: "g_atomic_pointer_set";
end;

define C-struct <_GStringChunk>
end;

define C-pointer-type <GStringChunk> => <_GStringChunk>;

define C-function g-string-chunk-new
  input parameter arg1 :: <gsize>;
  result res :: <GStringChunk>;
  c-name: "g_string_chunk_new";
end;

define C-function g-string-chunk-free
  input parameter arg1 :: <GStringChunk>;
  c-name: "g_string_chunk_free";
end;

define C-function g-string-chunk-clear
  input parameter arg1 :: <GStringChunk>;
  c-name: "g_string_chunk_clear";
end;

define C-function g-string-chunk-insert
  input parameter arg1 :: <GStringChunk>;
  input parameter arg2 :: <gchar*>;
  result res :: <gchar*>;
  c-name: "g_string_chunk_insert";
end;

define C-function g-string-chunk-insert-len
  input parameter arg1 :: <GStringChunk>;
  input parameter arg2 :: <gchar*>;
  input parameter arg3 :: <gssize>;
  result res :: <gchar*>;
  c-name: "g_string_chunk_insert_len";
end;

define C-function g-string-chunk-insert-const
  input parameter arg1 :: <GStringChunk>;
  input parameter arg2 :: <gchar*>;
  result res :: <gchar*>;
  c-name: "g_string_chunk_insert_const";
end;

define C-function g-string-new
  input parameter arg1 :: <gchar*>;
  result res :: <GString>;
  c-name: "g_string_new";
end;

define C-function g-string-new-len
  input parameter arg1 :: <gchar*>;
  input parameter arg2 :: <gssize>;
  result res :: <GString>;
  c-name: "g_string_new_len";
end;

define C-function g-string-sized-new
  input parameter arg1 :: <gsize>;
  result res :: <GString>;
  c-name: "g_string_sized_new";
end;

define C-function g-string-free
  input parameter arg1 :: <GString>;
  input parameter arg2 :: <gboolean>;
  result res :: <gchar*>;
  c-name: "g_string_free";
end;

define C-function g-string-equal
  input parameter arg1 :: <GString>;
  input parameter arg2 :: <GString>;
  result res :: <gboolean>;
  c-name: "g_string_equal";
end;

define C-function g-string-hash
  input parameter arg1 :: <GString>;
  result res :: <guint>;
  c-name: "g_string_hash";
end;

define C-function g-string-assign
  input parameter arg1 :: <GString>;
  input parameter arg2 :: <gchar*>;
  result res :: <GString>;
  c-name: "g_string_assign";
end;

define C-function g-string-truncate
  input parameter arg1 :: <GString>;
  input parameter arg2 :: <gsize>;
  result res :: <GString>;
  c-name: "g_string_truncate";
end;

define C-function g-string-set-size
  input parameter arg1 :: <GString>;
  input parameter arg2 :: <gsize>;
  result res :: <GString>;
  c-name: "g_string_set_size";
end;

define C-function g-string-insert-len
  input parameter arg1 :: <GString>;
  input parameter arg2 :: <gssize>;
  input parameter arg3 :: <gchar*>;
  input parameter arg4 :: <gssize>;
  result res :: <GString>;
  c-name: "g_string_insert_len";
end;

define C-function g-string-append
  input parameter arg1 :: <GString>;
  input parameter arg2 :: <gchar*>;
  result res :: <GString>;
  c-name: "g_string_append";
end;

define C-function g-string-append-len
  input parameter arg1 :: <GString>;
  input parameter arg2 :: <gchar*>;
  input parameter arg3 :: <gssize>;
  result res :: <GString>;
  c-name: "g_string_append_len";
end;

define C-function g-string-append-c
  input parameter arg1 :: <GString>;
  input parameter arg2 :: <gchar>;
  result res :: <GString>;
  c-name: "g_string_append_c";
end;

define C-function g-string-append-unichar
  input parameter arg1 :: <GString>;
  input parameter arg2 :: <gunichar>;
  result res :: <GString>;
  c-name: "g_string_append_unichar";
end;

define C-function g-string-prepend
  input parameter arg1 :: <GString>;
  input parameter arg2 :: <gchar*>;
  result res :: <GString>;
  c-name: "g_string_prepend";
end;

define C-function g-string-prepend-c
  input parameter arg1 :: <GString>;
  input parameter arg2 :: <gchar>;
  result res :: <GString>;
  c-name: "g_string_prepend_c";
end;

define C-function g-string-prepend-unichar
  input parameter arg1 :: <GString>;
  input parameter arg2 :: <gunichar>;
  result res :: <GString>;
  c-name: "g_string_prepend_unichar";
end;

define C-function g-string-prepend-len
  input parameter arg1 :: <GString>;
  input parameter arg2 :: <gchar*>;
  input parameter arg3 :: <gssize>;
  result res :: <GString>;
  c-name: "g_string_prepend_len";
end;

define C-function g-string-insert
  input parameter arg1 :: <GString>;
  input parameter arg2 :: <gssize>;
  input parameter arg3 :: <gchar*>;
  result res :: <GString>;
  c-name: "g_string_insert";
end;

define C-function g-string-insert-c
  input parameter arg1 :: <GString>;
  input parameter arg2 :: <gssize>;
  input parameter arg3 :: <gchar>;
  result res :: <GString>;
  c-name: "g_string_insert_c";
end;

define C-function g-string-insert-unichar
  input parameter arg1 :: <GString>;
  input parameter arg2 :: <gssize>;
  input parameter arg3 :: <gunichar>;
  result res :: <GString>;
  c-name: "g_string_insert_unichar";
end;

define C-function g-string-overwrite
  input parameter arg1 :: <GString>;
  input parameter arg2 :: <gsize>;
  input parameter arg3 :: <gchar*>;
  result res :: <GString>;
  c-name: "g_string_overwrite";
end;

define C-function g-string-overwrite-len
  input parameter arg1 :: <GString>;
  input parameter arg2 :: <gsize>;
  input parameter arg3 :: <gchar*>;
  input parameter arg4 :: <gssize>;
  result res :: <GString>;
  c-name: "g_string_overwrite_len";
end;

define C-function g-string-erase
  input parameter arg1 :: <GString>;
  input parameter arg2 :: <gssize>;
  input parameter arg3 :: <gssize>;
  result res :: <GString>;
  c-name: "g_string_erase";
end;

define C-function g-string-ascii-down
  input parameter arg1 :: <GString>;
  result res :: <GString>;
  c-name: "g_string_ascii_down";
end;

define C-function g-string-ascii-up
  input parameter arg1 :: <GString>;
  result res :: <GString>;
  c-name: "g_string_ascii_up";
end;

define C-function g-string-vprintf
  input parameter arg1 :: <GString>;
  input parameter arg2 :: <gchar*>;
  input parameter arg3 :: <va-list>;
  c-name: "g_string_vprintf";
end;

define C-function g-string-printf
  input parameter arg1 :: <GString>;
  input parameter arg2 :: <gchar*>;
  c-name: "g_string_printf";
end;

define C-function g-string-append-vprintf
  input parameter arg1 :: <GString>;
  input parameter arg2 :: <gchar*>;
  input parameter arg3 :: <va-list>;
  c-name: "g_string_append_vprintf";
end;

define C-function g-string-append-printf
  input parameter arg1 :: <GString>;
  input parameter arg2 :: <gchar*>;
  c-name: "g_string_append_printf";
end;

define C-function g-string-down
  input parameter arg1 :: <GString>;
  result res :: <GString>;
  c-name: "g_string_down";
end;

define C-function g-string-up
  input parameter arg1 :: <GString>;
  result res :: <GString>;
  c-name: "g_string_up";
end;

define constant g-string-sprintf = g-string-printf;

define constant g-string-sprintfa = g-string-append-printf;

define constant <GAsciiType> = <C-int>;
define constant $G-ASCII-ALNUM = 1;
define constant $G-ASCII-ALPHA = 2;
define constant $G-ASCII-CNTRL = 4;
define constant $G-ASCII-DIGIT = 8;
define constant $G-ASCII-GRAPH = 16;
define constant $G-ASCII-LOWER = 32;
define constant $G-ASCII-PRINT = 64;
define constant $G-ASCII-PUNCT = 128;
define constant $G-ASCII-SPACE = 256;
define constant $G-ASCII-UPPER = 512;
define constant $G-ASCII-XDIGIT = 1024;

define C-pointer-type <guint16*> => <guint16>;
 /* Ignoring declaration for {instance of <variable-declaration>} "g-ascii-table"*/
define C-function g-ascii-tolower
  input parameter arg1 :: <gchar>;
  result res :: <gchar>;
  c-name: "g_ascii_tolower";
end;

define C-function g-ascii-toupper
  input parameter arg1 :: <gchar>;
  result res :: <gchar>;
  c-name: "g_ascii_toupper";
end;

define C-function g-ascii-digit-value
  input parameter arg1 :: <gchar>;
  result res :: <gint>;
  c-name: "g_ascii_digit_value";
end;

define C-function g-ascii-xdigit-value
  input parameter arg1 :: <gchar>;
  result res :: <gint>;
  c-name: "g_ascii_xdigit_value";
end;

define C-function g-strdelimit
  input parameter arg1 :: <gchar*>;
  input parameter arg2 :: <gchar*>;
  input parameter arg3 :: <gchar>;
  result res :: <gchar*>;
  c-name: "g_strdelimit";
end;

define C-function g-strcanon
  input parameter arg1 :: <gchar*>;
  input parameter arg2 :: <gchar*>;
  input parameter arg3 :: <gchar>;
  result res :: <gchar*>;
  c-name: "g_strcanon";
end;

define C-function g-strerror
  input parameter arg1 :: <gint>;
  result res :: <gchar*>;
  c-name: "g_strerror";
end;

define C-function g-strsignal
  input parameter arg1 :: <gint>;
  result res :: <gchar*>;
  c-name: "g_strsignal";
end;

define C-function g-strreverse
  input parameter arg1 :: <gchar*>;
  result res :: <gchar*>;
  c-name: "g_strreverse";
end;

define C-function g-strlcpy
  input parameter arg1 :: <gchar*>;
  input parameter arg2 :: <gchar*>;
  input parameter arg3 :: <gsize>;
  result res :: <gsize>;
  c-name: "g_strlcpy";
end;

define C-function g-strlcat
  input parameter arg1 :: <gchar*>;
  input parameter arg2 :: <gchar*>;
  input parameter arg3 :: <gsize>;
  result res :: <gsize>;
  c-name: "g_strlcat";
end;

define C-function g-strstr-len
  input parameter arg1 :: <gchar*>;
  input parameter arg2 :: <gssize>;
  input parameter arg3 :: <gchar*>;
  result res :: <gchar*>;
  c-name: "g_strstr_len";
end;

define C-function g-strrstr
  input parameter arg1 :: <gchar*>;
  input parameter arg2 :: <gchar*>;
  result res :: <gchar*>;
  c-name: "g_strrstr";
end;

define C-function g-strrstr-len
  input parameter arg1 :: <gchar*>;
  input parameter arg2 :: <gssize>;
  input parameter arg3 :: <gchar*>;
  result res :: <gchar*>;
  c-name: "g_strrstr_len";
end;

define C-function g-str-has-suffix
  input parameter arg1 :: <gchar*>;
  input parameter arg2 :: <gchar*>;
  result res :: <gboolean>;
  c-name: "g_str_has_suffix";
end;

define C-function g-str-has-prefix
  input parameter arg1 :: <gchar*>;
  input parameter arg2 :: <gchar*>;
  result res :: <gboolean>;
  c-name: "g_str_has_prefix";
end;

define C-function g-strtod
  input parameter arg1 :: <gchar*>;
  input parameter arg2 :: <gchar**>;
  result res :: <gdouble>;
  c-name: "g_strtod";
end;

define C-function g-ascii-strtod
  input parameter arg1 :: <gchar*>;
  input parameter arg2 :: <gchar**>;
  result res :: <gdouble>;
  c-name: "g_ascii_strtod";
end;

define C-function g-ascii-strtoull
  input parameter arg1 :: <gchar*>;
  input parameter arg2 :: <gchar**>;
  input parameter arg3 :: <guint>;
  result res :: <guint64>;
  c-name: "g_ascii_strtoull";
end;

define C-function g-ascii-strtoll
  input parameter arg1 :: <gchar*>;
  input parameter arg2 :: <gchar**>;
  input parameter arg3 :: <guint>;
  result res :: <gint64>;
  c-name: "g_ascii_strtoll";
end;

define C-function g-ascii-dtostr
  input parameter arg1 :: <gchar*>;
  input parameter arg2 :: <gint>;
  input parameter arg3 :: <gdouble>;
  result res :: <gchar*>;
  c-name: "g_ascii_dtostr";
end;

define C-function g-ascii-formatd
  input parameter arg1 :: <gchar*>;
  input parameter arg2 :: <gint>;
  input parameter arg3 :: <gchar*>;
  input parameter arg4 :: <gdouble>;
  result res :: <gchar*>;
  c-name: "g_ascii_formatd";
end;

define C-function g-strchug
  input parameter arg1 :: <gchar*>;
  result res :: <gchar*>;
  c-name: "g_strchug";
end;

define C-function g-strchomp
  input parameter arg1 :: <gchar*>;
  result res :: <gchar*>;
  c-name: "g_strchomp";
end;

define C-function g-ascii-strcasecmp
  input parameter arg1 :: <gchar*>;
  input parameter arg2 :: <gchar*>;
  result res :: <gint>;
  c-name: "g_ascii_strcasecmp";
end;

define C-function g-ascii-strncasecmp
  input parameter arg1 :: <gchar*>;
  input parameter arg2 :: <gchar*>;
  input parameter arg3 :: <gsize>;
  result res :: <gint>;
  c-name: "g_ascii_strncasecmp";
end;

define C-function g-ascii-strdown
  input parameter arg1 :: <gchar*>;
  input parameter arg2 :: <gssize>;
  result res :: <gchar*>;
  c-name: "g_ascii_strdown";
end;

define C-function g-ascii-strup
  input parameter arg1 :: <gchar*>;
  input parameter arg2 :: <gssize>;
  result res :: <gchar*>;
  c-name: "g_ascii_strup";
end;

define C-function g-strcasecmp
  input parameter arg1 :: <gchar*>;
  input parameter arg2 :: <gchar*>;
  result res :: <gint>;
  c-name: "g_strcasecmp";
end;

define C-function g-strncasecmp
  input parameter arg1 :: <gchar*>;
  input parameter arg2 :: <gchar*>;
  input parameter arg3 :: <guint>;
  result res :: <gint>;
  c-name: "g_strncasecmp";
end;

define C-function g-strdown
  input parameter arg1 :: <gchar*>;
  result res :: <gchar*>;
  c-name: "g_strdown";
end;

define C-function g-strup
  input parameter arg1 :: <gchar*>;
  result res :: <gchar*>;
  c-name: "g_strup";
end;

define C-function g-strdup
  input parameter arg1 :: <gchar*>;
  result res :: <gchar*>;
  c-name: "g_strdup";
end;

define C-function g-strdup-printf
  input parameter arg1 :: <gchar*>;
  result res :: <gchar*>;
  c-name: "g_strdup_printf";
end;

define C-function g-strdup-vprintf
  input parameter arg1 :: <gchar*>;
  input parameter arg2 :: <va-list>;
  result res :: <gchar*>;
  c-name: "g_strdup_vprintf";
end;

define C-function g-strndup
  input parameter arg1 :: <gchar*>;
  input parameter arg2 :: <gsize>;
  result res :: <gchar*>;
  c-name: "g_strndup";
end;

define C-function g-strnfill
  input parameter arg1 :: <gsize>;
  input parameter arg2 :: <gchar>;
  result res :: <gchar*>;
  c-name: "g_strnfill";
end;

define C-function g-strconcat
  input parameter arg1 :: <gchar*>;
  result res :: <gchar*>;
  c-name: "g_strconcat";
end;

define C-function g-strjoin
  input parameter arg1 :: <gchar*>;
  result res :: <gchar*>;
  c-name: "g_strjoin";
end;

define C-function g-strcompress
  input parameter arg1 :: <gchar*>;
  result res :: <gchar*>;
  c-name: "g_strcompress";
end;

define C-function g-strescape
  input parameter arg1 :: <gchar*>;
  input parameter arg2 :: <gchar*>;
  result res :: <gchar*>;
  c-name: "g_strescape";
end;

define C-function g-memdup
  input parameter arg1 :: <gconstpointer>;
  input parameter arg2 :: <guint>;
  result res :: <gpointer>;
  c-name: "g_memdup";
end;

define C-function g-strsplit
  input parameter arg1 :: <gchar*>;
  input parameter arg2 :: <gchar*>;
  input parameter arg3 :: <gint>;
  result res :: <gchar**>;
  c-name: "g_strsplit";
end;

define C-function g-strsplit-set
  input parameter arg1 :: <gchar*>;
  input parameter arg2 :: <gchar*>;
  input parameter arg3 :: <gint>;
  result res :: <gchar**>;
  c-name: "g_strsplit_set";
end;

define C-function g-strjoinv
  input parameter arg1 :: <gchar*>;
  input parameter arg2 :: <gchar**>;
  result res :: <gchar*>;
  c-name: "g_strjoinv";
end;

define C-function g-strfreev
  input parameter arg1 :: <gchar**>;
  c-name: "g_strfreev";
end;

define C-function g-strdupv
  input parameter arg1 :: <gchar**>;
  result res :: <gchar**>;
  c-name: "g_strdupv";
end;

define C-function g-strv-length
  input parameter arg1 :: <gchar**>;
  result res :: <guint>;
  c-name: "g_strv_length";
end;

define C-function g-stpcpy
  input parameter arg1 :: <gchar*>;
  input parameter arg2 :: <char*>;
  result res :: <gchar*>;
  c-name: "g_stpcpy";
end;

define C-function g-strip-context
  input parameter arg1 :: <gchar*>;
  input parameter arg2 :: <gchar*>;
  result res :: <gchar*>;
  c-name: "g_strip_context";
end;

define constant $G-STR-DELIMITERS = "_-|> <.";

define constant $G-ASCII-DTOSTR-BUF-SIZE = 39;

define constant <GSpawnError> = <C-int>;
define constant $G-SPAWN-ERROR-FORK = 0;
define constant $G-SPAWN-ERROR-READ = 1;
define constant $G-SPAWN-ERROR-CHDIR = 2;
define constant $G-SPAWN-ERROR-ACCES = 3;
define constant $G-SPAWN-ERROR-PERM = 4;
define constant $G-SPAWN-ERROR-2BIG = 5;
define constant $G-SPAWN-ERROR-NOEXEC = 6;
define constant $G-SPAWN-ERROR-NAMETOOLONG = 7;
define constant $G-SPAWN-ERROR-NOENT = 8;
define constant $G-SPAWN-ERROR-NOMEM = 9;
define constant $G-SPAWN-ERROR-NOTDIR = 10;
define constant $G-SPAWN-ERROR-LOOP = 11;
define constant $G-SPAWN-ERROR-TXTBUSY = 12;
define constant $G-SPAWN-ERROR-IO = 13;
define constant $G-SPAWN-ERROR-NFILE = 14;
define constant $G-SPAWN-ERROR-MFILE = 15;
define constant $G-SPAWN-ERROR-INVAL = 16;
define constant $G-SPAWN-ERROR-ISDIR = 17;
define constant $G-SPAWN-ERROR-LIBBAD = 18;
define constant $G-SPAWN-ERROR-FAILED = 19;

define constant <anonymous-1385> = <C-function-pointer>;
define constant <GSpawnChildSetupFunc> = <anonymous-1385>;

define constant <GSpawnFlags> = <C-int>;
define constant $G-SPAWN-LEAVE-DESCRIPTORS-OPEN = 1;
define constant $G-SPAWN-DO-NOT-REAP-CHILD = 2;
define constant $G-SPAWN-SEARCH-PATH = 4;
define constant $G-SPAWN-STDOUT-TO-DEV-NULL = 8;
define constant $G-SPAWN-STDERR-TO-DEV-NULL = 16;
define constant $G-SPAWN-CHILD-INHERITS-STDIN = 32;
define constant $G-SPAWN-FILE-AND-ARGV-ZERO = 64;

define C-function g-spawn-error-quark
  result res :: <GQuark>;
  c-name: "g_spawn_error_quark";
end;

define C-pointer-type <GPid*> => <GPid>;
define C-function g-spawn-async
  input parameter arg1 :: <gchar*>;
  input parameter arg2 :: <gchar**>;
  input parameter arg3 :: <gchar**>;
  input parameter arg4 :: <GSpawnFlags>;
  input parameter arg5 :: <GSpawnChildSetupFunc>;
  input parameter arg6 :: <gpointer>;
  input parameter arg7 :: <GPid*>;
  input parameter arg8 :: <GError*>;
  result res :: <gboolean>;
  c-name: "g_spawn_async";
end;

define C-function g-spawn-async-with-pipes
  input parameter arg1 :: <gchar*>;
  input parameter arg2 :: <gchar**>;
  input parameter arg3 :: <gchar**>;
  input parameter arg4 :: <GSpawnFlags>;
  input parameter arg5 :: <GSpawnChildSetupFunc>;
  input parameter arg6 :: <gpointer>;
  input parameter arg7 :: <GPid*>;
  input parameter arg8 :: <gint*>;
  input parameter arg9 :: <gint*>;
  input parameter arg10 :: <gint*>;
  input parameter arg11 :: <GError*>;
  result res :: <gboolean>;
  c-name: "g_spawn_async_with_pipes";
end;

define C-function g-spawn-sync
  input parameter arg1 :: <gchar*>;
  input parameter arg2 :: <gchar**>;
  input parameter arg3 :: <gchar**>;
  input parameter arg4 :: <GSpawnFlags>;
  input parameter arg5 :: <GSpawnChildSetupFunc>;
  input parameter arg6 :: <gpointer>;
  input parameter arg7 :: <gchar**>;
  input parameter arg8 :: <gchar**>;
  input parameter arg9 :: <gint*>;
  input parameter arg10 :: <GError*>;
  result res :: <gboolean>;
  c-name: "g_spawn_sync";
end;

define C-function g-spawn-command-line-sync
  input parameter arg1 :: <gchar*>;
  input parameter arg2 :: <gchar**>;
  input parameter arg3 :: <gchar**>;
  input parameter arg4 :: <gint*>;
  input parameter arg5 :: <GError*>;
  result res :: <gboolean>;
  c-name: "g_spawn_command_line_sync";
end;

define C-function g-spawn-command-line-async
  input parameter arg1 :: <gchar*>;
  input parameter arg2 :: <GError*>;
  result res :: <gboolean>;
  c-name: "g_spawn_command_line_async";
end;

define C-function g-spawn-close-pid
  input parameter arg1 :: <GPid>;
  c-name: "g_spawn_close_pid";
end;

define C-function g-slist-alloc
  result res :: <GSList>;
  c-name: "g_slist_alloc";
end;

define C-function g-slist-free
  input parameter arg1 :: <GSList>;
  c-name: "g_slist_free";
end;

define C-function g-slist-free-1
  input parameter arg1 :: <GSList>;
  c-name: "g_slist_free_1";
end;

define C-function g-slist-append
  input parameter arg1 :: <GSList>;
  input parameter arg2 :: <gpointer>;
  result res :: <GSList>;
  c-name: "g_slist_append";
end;

define C-function g-slist-prepend
  input parameter arg1 :: <GSList>;
  input parameter arg2 :: <gpointer>;
  result res :: <GSList>;
  c-name: "g_slist_prepend";
end;

define C-function g-slist-insert
  input parameter arg1 :: <GSList>;
  input parameter arg2 :: <gpointer>;
  input parameter arg3 :: <gint>;
  result res :: <GSList>;
  c-name: "g_slist_insert";
end;

define C-function g-slist-insert-sorted
  input parameter arg1 :: <GSList>;
  input parameter arg2 :: <gpointer>;
  input parameter arg3 :: <GCompareFunc>;
  result res :: <GSList>;
  c-name: "g_slist_insert_sorted";
end;

define C-function g-slist-insert-sorted-with-data
  input parameter arg1 :: <GSList>;
  input parameter arg2 :: <gpointer>;
  input parameter arg3 :: <GCompareDataFunc>;
  input parameter arg4 :: <gpointer>;
  result res :: <GSList>;
  c-name: "g_slist_insert_sorted_with_data";
end;

define C-function g-slist-insert-before
  input parameter arg1 :: <GSList>;
  input parameter arg2 :: <GSList>;
  input parameter arg3 :: <gpointer>;
  result res :: <GSList>;
  c-name: "g_slist_insert_before";
end;

define C-function g-slist-concat
  input parameter arg1 :: <GSList>;
  input parameter arg2 :: <GSList>;
  result res :: <GSList>;
  c-name: "g_slist_concat";
end;

define C-function g-slist-remove
  input parameter arg1 :: <GSList>;
  input parameter arg2 :: <gconstpointer>;
  result res :: <GSList>;
  c-name: "g_slist_remove";
end;

define C-function g-slist-remove-all
  input parameter arg1 :: <GSList>;
  input parameter arg2 :: <gconstpointer>;
  result res :: <GSList>;
  c-name: "g_slist_remove_all";
end;

define C-function g-slist-remove-link
  input parameter arg1 :: <GSList>;
  input parameter arg2 :: <GSList>;
  result res :: <GSList>;
  c-name: "g_slist_remove_link";
end;

define C-function g-slist-delete-link
  input parameter arg1 :: <GSList>;
  input parameter arg2 :: <GSList>;
  result res :: <GSList>;
  c-name: "g_slist_delete_link";
end;

define C-function g-slist-reverse
  input parameter arg1 :: <GSList>;
  result res :: <GSList>;
  c-name: "g_slist_reverse";
end;

define C-function g-slist-copy
  input parameter arg1 :: <GSList>;
  result res :: <GSList>;
  c-name: "g_slist_copy";
end;

define C-function g-slist-nth
  input parameter arg1 :: <GSList>;
  input parameter arg2 :: <guint>;
  result res :: <GSList>;
  c-name: "g_slist_nth";
end;

define C-function g-slist-find
  input parameter arg1 :: <GSList>;
  input parameter arg2 :: <gconstpointer>;
  result res :: <GSList>;
  c-name: "g_slist_find";
end;

define C-function g-slist-find-custom
  input parameter arg1 :: <GSList>;
  input parameter arg2 :: <gconstpointer>;
  input parameter arg3 :: <GCompareFunc>;
  result res :: <GSList>;
  c-name: "g_slist_find_custom";
end;

define C-function g-slist-position
  input parameter arg1 :: <GSList>;
  input parameter arg2 :: <GSList>;
  result res :: <gint>;
  c-name: "g_slist_position";
end;

define C-function g-slist-index
  input parameter arg1 :: <GSList>;
  input parameter arg2 :: <gconstpointer>;
  result res :: <gint>;
  c-name: "g_slist_index";
end;

define C-function g-slist-last
  input parameter arg1 :: <GSList>;
  result res :: <GSList>;
  c-name: "g_slist_last";
end;

define C-function g-slist-length
  input parameter arg1 :: <GSList>;
  result res :: <guint>;
  c-name: "g_slist_length";
end;

define C-function g-slist-foreach
  input parameter arg1 :: <GSList>;
  input parameter arg2 :: <GFunc>;
  input parameter arg3 :: <gpointer>;
  c-name: "g_slist_foreach";
end;

define C-function g-slist-sort
  input parameter arg1 :: <GSList>;
  input parameter arg2 :: <GCompareFunc>;
  result res :: <GSList>;
  c-name: "g_slist_sort";
end;

define C-function g-slist-sort-with-data
  input parameter arg1 :: <GSList>;
  input parameter arg2 :: <GCompareDataFunc>;
  input parameter arg3 :: <gpointer>;
  result res :: <GSList>;
  c-name: "g_slist_sort_with_data";
end;

define C-function g-slist-nth-data
  input parameter arg1 :: <GSList>;
  input parameter arg2 :: <guint>;
  result res :: <gpointer>;
  c-name: "g_slist_nth_data";
end;

define C-function g-slist-push-allocator
  input parameter arg1 :: <gpointer>;
  c-name: "g_slist_push_allocator";
end;

define C-function g-slist-pop-allocator
  c-name: "g_slist_pop_allocator";
end;

define constant g-slist-free1 = g-slist-free-1;

define constant <GShellError> = <C-int>;
define constant $G-SHELL-ERROR-BAD-QUOTING = 0;
define constant $G-SHELL-ERROR-EMPTY-STRING = 1;
define constant $G-SHELL-ERROR-FAILED = 2;

define C-function g-shell-error-quark
  result res :: <GQuark>;
  c-name: "g_shell_error_quark";
end;

define C-function g-shell-quote
  input parameter arg1 :: <gchar*>;
  result res :: <gchar*>;
  c-name: "g_shell_quote";
end;

define C-function g-shell-unquote
  input parameter arg1 :: <gchar*>;
  input parameter arg2 :: <GError*>;
  result res :: <gchar*>;
  c-name: "g_shell_unquote";
end;

define C-pointer-type <gchar***> => <gchar**>;
define C-function g-shell-parse-argv
  input parameter arg1 :: <gchar*>;
  input parameter arg2 :: <gint*>;
  input parameter arg3 :: <gchar***>;
  input parameter arg4 :: <GError*>;
  result res :: <gboolean>;
  c-name: "g_shell_parse_argv";
end;

define C-struct <_GSequence>
end;

define C-pointer-type <GSequence> => <_GSequence>;

define C-struct <_GSequenceNode>
end;

define C-pointer-type <GSequenceIter> => <_GSequenceNode>;

define constant <anonymous-1343> = <C-function-pointer>;
define constant <GSequenceIterCompareFunc> = <anonymous-1343>;

define C-function g-sequence-new
  input parameter arg1 :: <GDestroyNotify>;
  result res :: <GSequence>;
  c-name: "g_sequence_new";
end;

define C-function g-sequence-free
  input parameter arg1 :: <GSequence>;
  c-name: "g_sequence_free";
end;

define C-function g-sequence-get-length
  input parameter arg1 :: <GSequence>;
  result res :: <gint>;
  c-name: "g_sequence_get_length";
end;

define C-function g-sequence-foreach
  input parameter arg1 :: <GSequence>;
  input parameter arg2 :: <GFunc>;
  input parameter arg3 :: <gpointer>;
  c-name: "g_sequence_foreach";
end;

define C-function g-sequence-foreach-range
  input parameter arg1 :: <GSequenceIter>;
  input parameter arg2 :: <GSequenceIter>;
  input parameter arg3 :: <GFunc>;
  input parameter arg4 :: <gpointer>;
  c-name: "g_sequence_foreach_range";
end;

define C-function g-sequence-sort
  input parameter arg1 :: <GSequence>;
  input parameter arg2 :: <GCompareDataFunc>;
  input parameter arg3 :: <gpointer>;
  c-name: "g_sequence_sort";
end;

define C-function g-sequence-sort-iter
  input parameter arg1 :: <GSequence>;
  input parameter arg2 :: <GSequenceIterCompareFunc>;
  input parameter arg3 :: <gpointer>;
  c-name: "g_sequence_sort_iter";
end;

define C-function g-sequence-get-begin-iter
  input parameter arg1 :: <GSequence>;
  result res :: <GSequenceIter>;
  c-name: "g_sequence_get_begin_iter";
end;

define C-function g-sequence-get-end-iter
  input parameter arg1 :: <GSequence>;
  result res :: <GSequenceIter>;
  c-name: "g_sequence_get_end_iter";
end;

define C-function g-sequence-get-iter-at-pos
  input parameter arg1 :: <GSequence>;
  input parameter arg2 :: <gint>;
  result res :: <GSequenceIter>;
  c-name: "g_sequence_get_iter_at_pos";
end;

define C-function g-sequence-append
  input parameter arg1 :: <GSequence>;
  input parameter arg2 :: <gpointer>;
  result res :: <GSequenceIter>;
  c-name: "g_sequence_append";
end;

define C-function g-sequence-prepend
  input parameter arg1 :: <GSequence>;
  input parameter arg2 :: <gpointer>;
  result res :: <GSequenceIter>;
  c-name: "g_sequence_prepend";
end;

define C-function g-sequence-insert-before
  input parameter arg1 :: <GSequenceIter>;
  input parameter arg2 :: <gpointer>;
  result res :: <GSequenceIter>;
  c-name: "g_sequence_insert_before";
end;

define C-function g-sequence-move
  input parameter arg1 :: <GSequenceIter>;
  input parameter arg2 :: <GSequenceIter>;
  c-name: "g_sequence_move";
end;

define C-function g-sequence-swap
  input parameter arg1 :: <GSequenceIter>;
  input parameter arg2 :: <GSequenceIter>;
  c-name: "g_sequence_swap";
end;

define C-function g-sequence-insert-sorted
  input parameter arg1 :: <GSequence>;
  input parameter arg2 :: <gpointer>;
  input parameter arg3 :: <GCompareDataFunc>;
  input parameter arg4 :: <gpointer>;
  result res :: <GSequenceIter>;
  c-name: "g_sequence_insert_sorted";
end;

define C-function g-sequence-insert-sorted-iter
  input parameter arg1 :: <GSequence>;
  input parameter arg2 :: <gpointer>;
  input parameter arg3 :: <GSequenceIterCompareFunc>;
  input parameter arg4 :: <gpointer>;
  result res :: <GSequenceIter>;
  c-name: "g_sequence_insert_sorted_iter";
end;

define C-function g-sequence-sort-changed
  input parameter arg1 :: <GSequenceIter>;
  input parameter arg2 :: <GCompareDataFunc>;
  input parameter arg3 :: <gpointer>;
  c-name: "g_sequence_sort_changed";
end;

define C-function g-sequence-sort-changed-iter
  input parameter arg1 :: <GSequenceIter>;
  input parameter arg2 :: <GSequenceIterCompareFunc>;
  input parameter arg3 :: <gpointer>;
  c-name: "g_sequence_sort_changed_iter";
end;

define C-function g-sequence-remove
  input parameter arg1 :: <GSequenceIter>;
  c-name: "g_sequence_remove";
end;

define C-function g-sequence-remove-range
  input parameter arg1 :: <GSequenceIter>;
  input parameter arg2 :: <GSequenceIter>;
  c-name: "g_sequence_remove_range";
end;

define C-function g-sequence-move-range
  input parameter arg1 :: <GSequenceIter>;
  input parameter arg2 :: <GSequenceIter>;
  input parameter arg3 :: <GSequenceIter>;
  c-name: "g_sequence_move_range";
end;

define C-function g-sequence-search
  input parameter arg1 :: <GSequence>;
  input parameter arg2 :: <gpointer>;
  input parameter arg3 :: <GCompareDataFunc>;
  input parameter arg4 :: <gpointer>;
  result res :: <GSequenceIter>;
  c-name: "g_sequence_search";
end;

define C-function g-sequence-search-iter
  input parameter arg1 :: <GSequence>;
  input parameter arg2 :: <gpointer>;
  input parameter arg3 :: <GSequenceIterCompareFunc>;
  input parameter arg4 :: <gpointer>;
  result res :: <GSequenceIter>;
  c-name: "g_sequence_search_iter";
end;

define C-function g-sequence-get
  input parameter arg1 :: <GSequenceIter>;
  result res :: <gpointer>;
  c-name: "g_sequence_get";
end;

define C-function g-sequence-set
  input parameter arg1 :: <GSequenceIter>;
  input parameter arg2 :: <gpointer>;
  c-name: "g_sequence_set";
end;

define C-function g-sequence-iter-is-begin
  input parameter arg1 :: <GSequenceIter>;
  result res :: <gboolean>;
  c-name: "g_sequence_iter_is_begin";
end;

define C-function g-sequence-iter-is-end
  input parameter arg1 :: <GSequenceIter>;
  result res :: <gboolean>;
  c-name: "g_sequence_iter_is_end";
end;

define C-function g-sequence-iter-next
  input parameter arg1 :: <GSequenceIter>;
  result res :: <GSequenceIter>;
  c-name: "g_sequence_iter_next";
end;

define C-function g-sequence-iter-prev
  input parameter arg1 :: <GSequenceIter>;
  result res :: <GSequenceIter>;
  c-name: "g_sequence_iter_prev";
end;

define C-function g-sequence-iter-get-position
  input parameter arg1 :: <GSequenceIter>;
  result res :: <gint>;
  c-name: "g_sequence_iter_get_position";
end;

define C-function g-sequence-iter-move
  input parameter arg1 :: <GSequenceIter>;
  input parameter arg2 :: <gint>;
  result res :: <GSequenceIter>;
  c-name: "g_sequence_iter_move";
end;

define C-function g-sequence-iter-get-sequence
  input parameter arg1 :: <GSequenceIter>;
  result res :: <GSequence>;
  c-name: "g_sequence_iter_get_sequence";
end;

define C-function g-sequence-iter-compare
  input parameter arg1 :: <GSequenceIter>;
  input parameter arg2 :: <GSequenceIter>;
  result res :: <gint>;
  c-name: "g_sequence_iter_compare";
end;

define C-function g-sequence-range-get-midpoint
  input parameter arg1 :: <GSequenceIter>;
  input parameter arg2 :: <GSequenceIter>;
  result res :: <GSequenceIter>;
  c-name: "g_sequence_range_get_midpoint";
end;

define C-struct <_GScannerConfig>
  slot GScannerConfig-cset-skip-characters :: <gchar*>;
  slot GScannerConfig-cset-identifier-first :: <gchar*>;
  slot GScannerConfig-cset-identifier-nth :: <gchar*>;
  slot GScannerConfig-cpair-comment-single :: <gchar*>;
  bitfield slot GScannerConfig-case-sensitive :: <C-int>, width: 1;
  bitfield slot GScannerConfig-skip-comment-multi :: <C-int>, width: 1;
  bitfield slot GScannerConfig-skip-comment-single :: <C-int>, width: 1;
  bitfield slot GScannerConfig-scan-comment-multi :: <C-int>, width: 1;
  bitfield slot GScannerConfig-scan-identifier :: <C-int>, width: 1;
  bitfield slot GScannerConfig-scan-identifier-1char :: <C-int>, width: 1;
  bitfield slot GScannerConfig-scan-identifier-NULL :: <C-int>, width: 1;
  bitfield slot GScannerConfig-scan-symbols :: <C-int>, width: 1;
  bitfield slot GScannerConfig-scan-binary :: <C-int>, width: 1;
  bitfield slot GScannerConfig-scan-octal :: <C-int>, width: 1;
  bitfield slot GScannerConfig-scan-float :: <C-int>, width: 1;
  bitfield slot GScannerConfig-scan-hex :: <C-int>, width: 1;
  bitfield slot GScannerConfig-scan-hex-dollar :: <C-int>, width: 1;
  bitfield slot GScannerConfig-scan-string-sq :: <C-int>, width: 1;
  bitfield slot GScannerConfig-scan-string-dq :: <C-int>, width: 1;
  bitfield slot GScannerConfig-numbers-2-int :: <C-int>, width: 1;
  bitfield slot GScannerConfig-int-2-float :: <C-int>, width: 1;
  bitfield slot GScannerConfig-identifier-2-string :: <C-int>, width: 1;
  bitfield slot GScannerConfig-char-2-token :: <C-int>, width: 1;
  bitfield slot GScannerConfig-symbol-2-token :: <C-int>, width: 1;
  bitfield slot GScannerConfig-scope-0-fallback :: <C-int>, width: 1;
  bitfield slot GScannerConfig-store-int64 :: <C-int>, width: 1;
  slot GScannerConfig-padding-dummy :: <C-unsigned-int>;
end;

define C-pointer-type <GScannerConfig> => <_GScannerConfig>;

define constant <GTokenType> = <C-int>;
define constant $G-TOKEN-EOF = 0;
define constant $G-TOKEN-LEFT-PAREN = 40;
define constant $G-TOKEN-RIGHT-PAREN = 41;
define constant $G-TOKEN-LEFT-CURLY = 123;
define constant $G-TOKEN-RIGHT-CURLY = 125;
define constant $G-TOKEN-LEFT-BRACE = 91;
define constant $G-TOKEN-RIGHT-BRACE = 93;
define constant $G-TOKEN-EQUAL-SIGN = 61;
define constant $G-TOKEN-COMMA = 44;
define constant $G-TOKEN-NONE = 256;
define constant $G-TOKEN-ERROR = 257;
define constant $G-TOKEN-CHAR = 258;
define constant $G-TOKEN-BINARY = 259;
define constant $G-TOKEN-OCTAL = 260;
define constant $G-TOKEN-INT = 261;
define constant $G-TOKEN-HEX = 262;
define constant $G-TOKEN-FLOAT = 263;
define constant $G-TOKEN-STRING = 264;
define constant $G-TOKEN-SYMBOL = 265;
define constant $G-TOKEN-IDENTIFIER = 266;
define constant $G-TOKEN-IDENTIFIER-NULL = 267;
define constant $G-TOKEN-COMMENT-SINGLE = 268;
define constant $G-TOKEN-COMMENT-MULTI = 269;
define constant $G-TOKEN-LAST = 270;

define C-subtype <_GTokenValue> (<C-void*>) end;
define constant <GTokenValue> = <_GTokenValue>;

define C-struct <_GHashTable>
end;

define C-pointer-type <GHashTable> => <_GHashTable>;

define C-pointer-type <GScanner> => <_GScanner>;

define constant <anonymous-1297> = <C-function-pointer>;
define constant <GScannerMsgFunc> = <anonymous-1297>;

define C-struct <_GScanner>
  slot GScanner-user-data :: <C-void*>;
  slot GScanner-max-parse-errors :: <C-unsigned-int>;
  slot GScanner-parse-errors :: <C-unsigned-int>;
  slot GScanner-input-name :: <gchar*>;
  slot GScanner-qdata :: <GData>;
  slot GScanner-config :: <GScannerConfig>;
  slot GScanner-token :: <GTokenType>;
  slot GScanner-value :: <_GTokenValue>;
  slot GScanner-line :: <C-unsigned-int>;
  slot GScanner-position :: <C-unsigned-int>;
  slot GScanner-next-token :: <GTokenType>;
  slot GScanner-next-value :: <_GTokenValue>;
  slot GScanner-next-line :: <C-unsigned-int>;
  slot GScanner-next-position :: <C-unsigned-int>;
  slot GScanner-symbol-table :: <GHashTable>;
  slot GScanner-input-fd :: <C-signed-int>;
  slot GScanner-text :: <gchar*>;
  slot GScanner-text-end :: <gchar*>;
  slot GScanner-buffer :: <gchar*>;
  slot GScanner-scope-id :: <C-unsigned-int>;
  slot GScanner-msg-handler :: <anonymous-1297>;
end;

define constant <GErrorType> = <C-int>;
define constant $G-ERR-UNKNOWN = 0;
define constant $G-ERR-UNEXP-EOF = 1;
define constant $G-ERR-UNEXP-EOF-IN-STRING = 2;
define constant $G-ERR-UNEXP-EOF-IN-COMMENT = 3;
define constant $G-ERR-NON-DIGIT-IN-CONST = 4;
define constant $G-ERR-DIGIT-RADIX = 5;
define constant $G-ERR-FLOAT-RADIX = 6;
define constant $G-ERR-FLOAT-MALFORMED = 7;

define C-function g-scanner-new
  input parameter arg1 :: <GScannerConfig>;
  result res :: <GScanner>;
  c-name: "g_scanner_new";
end;

define C-function g-scanner-destroy
  input parameter arg1 :: <GScanner>;
  c-name: "g_scanner_destroy";
end;

define C-function g-scanner-input-file
  input parameter arg1 :: <GScanner>;
  input parameter arg2 :: <gint>;
  c-name: "g_scanner_input_file";
end;

define C-function g-scanner-sync-file-offset
  input parameter arg1 :: <GScanner>;
  c-name: "g_scanner_sync_file_offset";
end;

define C-function g-scanner-input-text
  input parameter arg1 :: <GScanner>;
  input parameter arg2 :: <gchar*>;
  input parameter arg3 :: <guint>;
  c-name: "g_scanner_input_text";
end;

define C-function g-scanner-get-next-token
  input parameter arg1 :: <GScanner>;
  result res :: <GTokenType>;
  c-name: "g_scanner_get_next_token";
end;

define C-function g-scanner-peek-next-token
  input parameter arg1 :: <GScanner>;
  result res :: <GTokenType>;
  c-name: "g_scanner_peek_next_token";
end;

define C-function g-scanner-cur-token
  input parameter arg1 :: <GScanner>;
  result res :: <GTokenType>;
  c-name: "g_scanner_cur_token";
end;

define C-function g-scanner-cur-line
  input parameter arg1 :: <GScanner>;
  result res :: <guint>;
  c-name: "g_scanner_cur_line";
end;

define C-function g-scanner-cur-position
  input parameter arg1 :: <GScanner>;
  result res :: <guint>;
  c-name: "g_scanner_cur_position";
end;

define C-function g-scanner-eof
  input parameter arg1 :: <GScanner>;
  result res :: <gboolean>;
  c-name: "g_scanner_eof";
end;

define C-function g-scanner-set-scope
  input parameter arg1 :: <GScanner>;
  input parameter arg2 :: <guint>;
  result res :: <guint>;
  c-name: "g_scanner_set_scope";
end;

define C-function g-scanner-scope-add-symbol
  input parameter arg1 :: <GScanner>;
  input parameter arg2 :: <guint>;
  input parameter arg3 :: <gchar*>;
  input parameter arg4 :: <gpointer>;
  c-name: "g_scanner_scope_add_symbol";
end;

define C-function g-scanner-scope-remove-symbol
  input parameter arg1 :: <GScanner>;
  input parameter arg2 :: <guint>;
  input parameter arg3 :: <gchar*>;
  c-name: "g_scanner_scope_remove_symbol";
end;

define C-function g-scanner-scope-lookup-symbol
  input parameter arg1 :: <GScanner>;
  input parameter arg2 :: <guint>;
  input parameter arg3 :: <gchar*>;
  result res :: <gpointer>;
  c-name: "g_scanner_scope_lookup_symbol";
end;

define C-function g-scanner-scope-foreach-symbol
  input parameter arg1 :: <GScanner>;
  input parameter arg2 :: <guint>;
  input parameter arg3 :: <GHFunc>;
  input parameter arg4 :: <gpointer>;
  c-name: "g_scanner_scope_foreach_symbol";
end;

define C-function g-scanner-lookup-symbol
  input parameter arg1 :: <GScanner>;
  input parameter arg2 :: <gchar*>;
  result res :: <gpointer>;
  c-name: "g_scanner_lookup_symbol";
end;

define C-function g-scanner-unexp-token
  input parameter arg1 :: <GScanner>;
  input parameter arg2 :: <GTokenType>;
  input parameter arg3 :: <gchar*>;
  input parameter arg4 :: <gchar*>;
  input parameter arg5 :: <gchar*>;
  input parameter arg6 :: <gchar*>;
  input parameter arg7 :: <gint>;
  c-name: "g_scanner_unexp_token";
end;

define C-function g-scanner-error
  input parameter arg1 :: <GScanner>;
  input parameter arg2 :: <gchar*>;
  c-name: "g_scanner_error";
end;

define C-function g-scanner-warn
  input parameter arg1 :: <GScanner>;
  input parameter arg2 :: <gchar*>;
  c-name: "g_scanner_warn";
end;

define constant $G-CSET-A-2-Z = "ABCDEFGHIJKLMNOPQRSTUVWXYZ";

define constant $G-CSET-DIGITS = "0123456789";

define constant <anonymous-709> = <C-function-pointer>;
define constant <GHRFunc> = <anonymous-709>;

define C-function g-hash-table-new
  input parameter arg1 :: <GHashFunc>;
  input parameter arg2 :: <GEqualFunc>;
  result res :: <GHashTable>;
  c-name: "g_hash_table_new";
end;

define C-function g-hash-table-new-full
  input parameter arg1 :: <GHashFunc>;
  input parameter arg2 :: <GEqualFunc>;
  input parameter arg3 :: <GDestroyNotify>;
  input parameter arg4 :: <GDestroyNotify>;
  result res :: <GHashTable>;
  c-name: "g_hash_table_new_full";
end;

define C-function g-hash-table-destroy
  input parameter arg1 :: <GHashTable>;
  c-name: "g_hash_table_destroy";
end;

define C-function g-hash-table-insert
  input parameter arg1 :: <GHashTable>;
  input parameter arg2 :: <gpointer>;
  input parameter arg3 :: <gpointer>;
  c-name: "g_hash_table_insert";
end;

define C-function g-hash-table-replace
  input parameter arg1 :: <GHashTable>;
  input parameter arg2 :: <gpointer>;
  input parameter arg3 :: <gpointer>;
  c-name: "g_hash_table_replace";
end;

define C-function g-hash-table-remove
  input parameter arg1 :: <GHashTable>;
  input parameter arg2 :: <gconstpointer>;
  result res :: <gboolean>;
  c-name: "g_hash_table_remove";
end;

define C-function g-hash-table-remove-all
  input parameter arg1 :: <GHashTable>;
  c-name: "g_hash_table_remove_all";
end;

define C-function g-hash-table-steal
  input parameter arg1 :: <GHashTable>;
  input parameter arg2 :: <gconstpointer>;
  result res :: <gboolean>;
  c-name: "g_hash_table_steal";
end;

define C-function g-hash-table-steal-all
  input parameter arg1 :: <GHashTable>;
  c-name: "g_hash_table_steal_all";
end;

define C-function g-hash-table-lookup
  input parameter arg1 :: <GHashTable>;
  input parameter arg2 :: <gconstpointer>;
  result res :: <gpointer>;
  c-name: "g_hash_table_lookup";
end;

define C-function g-hash-table-lookup-extended
  input parameter arg1 :: <GHashTable>;
  input parameter arg2 :: <gconstpointer>;
  input parameter arg3 :: <gpointer*>;
  input parameter arg4 :: <gpointer*>;
  result res :: <gboolean>;
  c-name: "g_hash_table_lookup_extended";
end;

define C-function g-hash-table-foreach
  input parameter arg1 :: <GHashTable>;
  input parameter arg2 :: <GHFunc>;
  input parameter arg3 :: <gpointer>;
  c-name: "g_hash_table_foreach";
end;

define C-function g-hash-table-find
  input parameter arg1 :: <GHashTable>;
  input parameter arg2 :: <GHRFunc>;
  input parameter arg3 :: <gpointer>;
  result res :: <gpointer>;
  c-name: "g_hash_table_find";
end;

define C-function g-hash-table-foreach-remove
  input parameter arg1 :: <GHashTable>;
  input parameter arg2 :: <GHRFunc>;
  input parameter arg3 :: <gpointer>;
  result res :: <guint>;
  c-name: "g_hash_table_foreach_remove";
end;

define C-function g-hash-table-foreach-steal
  input parameter arg1 :: <GHashTable>;
  input parameter arg2 :: <GHRFunc>;
  input parameter arg3 :: <gpointer>;
  result res :: <guint>;
  c-name: "g_hash_table_foreach_steal";
end;

define C-function g-hash-table-size
  input parameter arg1 :: <GHashTable>;
  result res :: <guint>;
  c-name: "g_hash_table_size";
end;

define C-function g-hash-table-get-keys
  input parameter arg1 :: <GHashTable>;
  result res :: <GList>;
  c-name: "g_hash_table_get_keys";
end;

define C-function g-hash-table-get-values
  input parameter arg1 :: <GHashTable>;
  result res :: <GList>;
  c-name: "g_hash_table_get_values";
end;

define C-function g-hash-table-ref
  input parameter arg1 :: <GHashTable>;
  result res :: <GHashTable>;
  c-name: "g_hash_table_ref";
end;

define C-function g-hash-table-unref
  input parameter arg1 :: <GHashTable>;
  c-name: "g_hash_table_unref";
end;

define C-function g-str-equal
  input parameter arg1 :: <gconstpointer>;
  input parameter arg2 :: <gconstpointer>;
  result res :: <gboolean>;
  c-name: "g_str_equal";
end;

define C-function g-str-hash
  input parameter arg1 :: <gconstpointer>;
  result res :: <guint>;
  c-name: "g_str_hash";
end;

define C-function g-int-equal
  input parameter arg1 :: <gconstpointer>;
  input parameter arg2 :: <gconstpointer>;
  result res :: <gboolean>;
  c-name: "g_int_equal";
end;

define C-function g-int-hash
  input parameter arg1 :: <gconstpointer>;
  result res :: <guint>;
  c-name: "g_int_hash";
end;

define C-function g-direct-hash
  input parameter arg1 :: <gconstpointer>;
  result res :: <guint>;
  c-name: "g_direct_hash";
end;

define C-function g-direct-equal
  input parameter arg1 :: <gconstpointer>;
  input parameter arg2 :: <gconstpointer>;
  result res :: <gboolean>;
  c-name: "g_direct_equal";
end;

define C-function g-list-alloc
  result res :: <GList>;
  c-name: "g_list_alloc";
end;

define C-function g-list-free
  input parameter arg1 :: <GList>;
  c-name: "g_list_free";
end;

define C-function g-list-free-1
  input parameter arg1 :: <GList>;
  c-name: "g_list_free_1";
end;

define C-function g-list-append
  input parameter arg1 :: <GList>;
  input parameter arg2 :: <gpointer>;
  result res :: <GList>;
  c-name: "g_list_append";
end;

define C-function g-list-prepend
  input parameter arg1 :: <GList>;
  input parameter arg2 :: <gpointer>;
  result res :: <GList>;
  c-name: "g_list_prepend";
end;

define C-function g-list-insert
  input parameter arg1 :: <GList>;
  input parameter arg2 :: <gpointer>;
  input parameter arg3 :: <gint>;
  result res :: <GList>;
  c-name: "g_list_insert";
end;

define C-function g-list-insert-sorted
  input parameter arg1 :: <GList>;
  input parameter arg2 :: <gpointer>;
  input parameter arg3 :: <GCompareFunc>;
  result res :: <GList>;
  c-name: "g_list_insert_sorted";
end;

define C-function g-list-insert-sorted-with-data
  input parameter arg1 :: <GList>;
  input parameter arg2 :: <gpointer>;
  input parameter arg3 :: <GCompareDataFunc>;
  input parameter arg4 :: <gpointer>;
  result res :: <GList>;
  c-name: "g_list_insert_sorted_with_data";
end;

define C-function g-list-insert-before
  input parameter arg1 :: <GList>;
  input parameter arg2 :: <GList>;
  input parameter arg3 :: <gpointer>;
  result res :: <GList>;
  c-name: "g_list_insert_before";
end;

define C-function g-list-concat
  input parameter arg1 :: <GList>;
  input parameter arg2 :: <GList>;
  result res :: <GList>;
  c-name: "g_list_concat";
end;

define C-function g-list-remove
  input parameter arg1 :: <GList>;
  input parameter arg2 :: <gconstpointer>;
  result res :: <GList>;
  c-name: "g_list_remove";
end;

define C-function g-list-remove-all
  input parameter arg1 :: <GList>;
  input parameter arg2 :: <gconstpointer>;
  result res :: <GList>;
  c-name: "g_list_remove_all";
end;

define C-function g-list-remove-link
  input parameter arg1 :: <GList>;
  input parameter arg2 :: <GList>;
  result res :: <GList>;
  c-name: "g_list_remove_link";
end;

define C-function g-list-delete-link
  input parameter arg1 :: <GList>;
  input parameter arg2 :: <GList>;
  result res :: <GList>;
  c-name: "g_list_delete_link";
end;

define C-function g-list-reverse
  input parameter arg1 :: <GList>;
  result res :: <GList>;
  c-name: "g_list_reverse";
end;

define C-function g-list-copy
  input parameter arg1 :: <GList>;
  result res :: <GList>;
  c-name: "g_list_copy";
end;

define C-function g-list-nth
  input parameter arg1 :: <GList>;
  input parameter arg2 :: <guint>;
  result res :: <GList>;
  c-name: "g_list_nth";
end;

define C-function g-list-nth-prev
  input parameter arg1 :: <GList>;
  input parameter arg2 :: <guint>;
  result res :: <GList>;
  c-name: "g_list_nth_prev";
end;

define C-function g-list-find
  input parameter arg1 :: <GList>;
  input parameter arg2 :: <gconstpointer>;
  result res :: <GList>;
  c-name: "g_list_find";
end;

define C-function g-list-find-custom
  input parameter arg1 :: <GList>;
  input parameter arg2 :: <gconstpointer>;
  input parameter arg3 :: <GCompareFunc>;
  result res :: <GList>;
  c-name: "g_list_find_custom";
end;

define C-function g-list-position
  input parameter arg1 :: <GList>;
  input parameter arg2 :: <GList>;
  result res :: <gint>;
  c-name: "g_list_position";
end;

define C-function g-list-index
  input parameter arg1 :: <GList>;
  input parameter arg2 :: <gconstpointer>;
  result res :: <gint>;
  c-name: "g_list_index";
end;

define C-function g-list-last
  input parameter arg1 :: <GList>;
  result res :: <GList>;
  c-name: "g_list_last";
end;

define C-function g-list-first
  input parameter arg1 :: <GList>;
  result res :: <GList>;
  c-name: "g_list_first";
end;

define C-function g-list-length
  input parameter arg1 :: <GList>;
  result res :: <guint>;
  c-name: "g_list_length";
end;

define C-function g-list-foreach
  input parameter arg1 :: <GList>;
  input parameter arg2 :: <GFunc>;
  input parameter arg3 :: <gpointer>;
  c-name: "g_list_foreach";
end;

define C-function g-list-sort
  input parameter arg1 :: <GList>;
  input parameter arg2 :: <GCompareFunc>;
  result res :: <GList>;
  c-name: "g_list_sort";
end;

define C-function g-list-sort-with-data
  input parameter arg1 :: <GList>;
  input parameter arg2 :: <GCompareDataFunc>;
  input parameter arg3 :: <gpointer>;
  result res :: <GList>;
  c-name: "g_list_sort_with_data";
end;

define C-function g-list-nth-data
  input parameter arg1 :: <GList>;
  input parameter arg2 :: <guint>;
  result res :: <gpointer>;
  c-name: "g_list_nth_data";
end;

define C-function g-list-push-allocator
  input parameter arg1 :: <gpointer>;
  c-name: "g_list_push_allocator";
end;

define C-function g-list-pop-allocator
  c-name: "g_list_pop_allocator";
end;

define constant g-list-free1 = g-list-free-1;

define constant <anonymous-618> = <C-function-pointer>;
define constant <GDataForeachFunc> = <anonymous-618>;

define C-pointer-type <GData*> => <GData>;
define C-function g-datalist-init
  input parameter arg1 :: <GData*>;
  c-name: "g_datalist_init";
end;

define C-function g-datalist-clear
  input parameter arg1 :: <GData*>;
  c-name: "g_datalist_clear";
end;

define C-function g-datalist-id-get-data
  input parameter arg1 :: <GData*>;
  input parameter arg2 :: <GQuark>;
  result res :: <gpointer>;
  c-name: "g_datalist_id_get_data";
end;

define C-function g-datalist-id-set-data-full
  input parameter arg1 :: <GData*>;
  input parameter arg2 :: <GQuark>;
  input parameter arg3 :: <gpointer>;
  input parameter arg4 :: <GDestroyNotify>;
  c-name: "g_datalist_id_set_data_full";
end;

define C-function g-datalist-id-remove-no-notify
  input parameter arg1 :: <GData*>;
  input parameter arg2 :: <GQuark>;
  result res :: <gpointer>;
  c-name: "g_datalist_id_remove_no_notify";
end;

define C-function g-datalist-foreach
  input parameter arg1 :: <GData*>;
  input parameter arg2 :: <GDataForeachFunc>;
  input parameter arg3 :: <gpointer>;
  c-name: "g_datalist_foreach";
end;

define C-function g-datalist-set-flags
  input parameter arg1 :: <GData*>;
  input parameter arg2 :: <guint>;
  c-name: "g_datalist_set_flags";
end;

define C-function g-datalist-unset-flags
  input parameter arg1 :: <GData*>;
  input parameter arg2 :: <guint>;
  c-name: "g_datalist_unset_flags";
end;

define C-function g-datalist-get-flags
  input parameter arg1 :: <GData*>;
  result res :: <guint>;
  c-name: "g_datalist_get_flags";
end;

define C-function g-dataset-destroy
  input parameter arg1 :: <gconstpointer>;
  c-name: "g_dataset_destroy";
end;

define C-function g-dataset-id-get-data
  input parameter arg1 :: <gconstpointer>;
  input parameter arg2 :: <GQuark>;
  result res :: <gpointer>;
  c-name: "g_dataset_id_get_data";
end;

define C-function g-dataset-id-set-data-full
  input parameter arg1 :: <gconstpointer>;
  input parameter arg2 :: <GQuark>;
  input parameter arg3 :: <gpointer>;
  input parameter arg4 :: <GDestroyNotify>;
  c-name: "g_dataset_id_set_data_full";
end;

define C-function g-dataset-id-remove-no-notify
  input parameter arg1 :: <gconstpointer>;
  input parameter arg2 :: <GQuark>;
  result res :: <gpointer>;
  c-name: "g_dataset_id_remove_no_notify";
end;

define C-function g-dataset-foreach
  input parameter arg1 :: <gconstpointer>;
  input parameter arg2 :: <GDataForeachFunc>;
  input parameter arg3 :: <gpointer>;
  c-name: "g_dataset_foreach";
end;

define constant $G-DATALIST-FLAGS-MASK = 3;

define constant <GRegexError> = <C-int>;
define constant $G-REGEX-ERROR-COMPILE = 0;
define constant $G-REGEX-ERROR-OPTIMIZE = 1;
define constant $G-REGEX-ERROR-REPLACE = 2;
define constant $G-REGEX-ERROR-MATCH = 3;

define C-function g-regex-error-quark
  result res :: <GQuark>;
  c-name: "g_regex_error_quark";
end;

define constant <GRegexCompileFlags> = <C-int>;
define constant $G-REGEX-CASELESS = 1;
define constant $G-REGEX-MULTILINE = 2;
define constant $G-REGEX-DOTALL = 4;
define constant $G-REGEX-EXTENDED = 8;
define constant $G-REGEX-ANCHORED = 16;
define constant $G-REGEX-DOLLAR-ENDONLY = 32;
define constant $G-REGEX-UNGREEDY = 512;
define constant $G-REGEX-RAW = 2048;
define constant $G-REGEX-NO-AUTO-CAPTURE = 4096;
define constant $G-REGEX-OPTIMIZE = 8192;
define constant $G-REGEX-DUPNAMES = 524288;
define constant $G-REGEX-NEWLINE-CR = 1048576;
define constant $G-REGEX-NEWLINE-LF = 2097152;
define constant $G-REGEX-NEWLINE-CRLF = 3145728;

define constant <GRegexMatchFlags> = <C-int>;
define constant $G-REGEX-MATCH-ANCHORED = 16;
define constant $G-REGEX-MATCH-NOTBOL = 128;
define constant $G-REGEX-MATCH-NOTEOL = 256;
define constant $G-REGEX-MATCH-NOTEMPTY = 1024;
define constant $G-REGEX-MATCH-PARTIAL = 32768;
define constant $G-REGEX-MATCH-NEWLINE-CR = 1048576;
define constant $G-REGEX-MATCH-NEWLINE-LF = 2097152;
define constant $G-REGEX-MATCH-NEWLINE-CRLF = 3145728;
define constant $G-REGEX-MATCH-NEWLINE-ANY = 4194304;

define C-struct <_GRegex>
end;

define C-pointer-type <GRegex> => <_GRegex>;

define C-struct <_GMatchInfo>
end;

define C-pointer-type <GMatchInfo> => <_GMatchInfo>;

define constant <anonymous-1263> = <C-function-pointer>;
define constant <GRegexEvalCallback> = <anonymous-1263>;

define C-function g-regex-new
  input parameter arg1 :: <gchar*>;
  input parameter arg2 :: <GRegexCompileFlags>;
  input parameter arg3 :: <GRegexMatchFlags>;
  input parameter arg4 :: <GError*>;
  result res :: <GRegex>;
  c-name: "g_regex_new";
end;

define C-function g-regex-ref
  input parameter arg1 :: <GRegex>;
  result res :: <GRegex>;
  c-name: "g_regex_ref";
end;

define C-function g-regex-unref
  input parameter arg1 :: <GRegex>;
  c-name: "g_regex_unref";
end;

define C-function g-regex-get-pattern
  input parameter arg1 :: <GRegex>;
  result res :: <gchar*>;
  c-name: "g_regex_get_pattern";
end;

define C-function g-regex-get-max-backref
  input parameter arg1 :: <GRegex>;
  result res :: <gint>;
  c-name: "g_regex_get_max_backref";
end;

define C-function g-regex-get-capture-count
  input parameter arg1 :: <GRegex>;
  result res :: <gint>;
  c-name: "g_regex_get_capture_count";
end;

define C-function g-regex-get-string-number
  input parameter arg1 :: <GRegex>;
  input parameter arg2 :: <gchar*>;
  result res :: <gint>;
  c-name: "g_regex_get_string_number";
end;

define C-function g-regex-escape-string
  input parameter arg1 :: <gchar*>;
  input parameter arg2 :: <gint>;
  result res :: <gchar*>;
  c-name: "g_regex_escape_string";
end;

define C-function g-regex-match-simple
  input parameter arg1 :: <gchar*>;
  input parameter arg2 :: <gchar*>;
  input parameter arg3 :: <GRegexCompileFlags>;
  input parameter arg4 :: <GRegexMatchFlags>;
  result res :: <gboolean>;
  c-name: "g_regex_match_simple";
end;

define C-pointer-type <GMatchInfo*> => <GMatchInfo>;
define C-function g-regex-match
  input parameter arg1 :: <GRegex>;
  input parameter arg2 :: <gchar*>;
  input parameter arg3 :: <GRegexMatchFlags>;
  input parameter arg4 :: <GMatchInfo*>;
  result res :: <gboolean>;
  c-name: "g_regex_match";
end;

define C-function g-regex-match-full
  input parameter arg1 :: <GRegex>;
  input parameter arg2 :: <gchar*>;
  input parameter arg3 :: <gssize>;
  input parameter arg4 :: <gint>;
  input parameter arg5 :: <GRegexMatchFlags>;
  input parameter arg6 :: <GMatchInfo*>;
  input parameter arg7 :: <GError*>;
  result res :: <gboolean>;
  c-name: "g_regex_match_full";
end;

define C-function g-regex-match-all
  input parameter arg1 :: <GRegex>;
  input parameter arg2 :: <gchar*>;
  input parameter arg3 :: <GRegexMatchFlags>;
  input parameter arg4 :: <GMatchInfo*>;
  result res :: <gboolean>;
  c-name: "g_regex_match_all";
end;

define C-function g-regex-match-all-full
  input parameter arg1 :: <GRegex>;
  input parameter arg2 :: <gchar*>;
  input parameter arg3 :: <gssize>;
  input parameter arg4 :: <gint>;
  input parameter arg5 :: <GRegexMatchFlags>;
  input parameter arg6 :: <GMatchInfo*>;
  input parameter arg7 :: <GError*>;
  result res :: <gboolean>;
  c-name: "g_regex_match_all_full";
end;

define C-function g-regex-split-simple
  input parameter arg1 :: <gchar*>;
  input parameter arg2 :: <gchar*>;
  input parameter arg3 :: <GRegexCompileFlags>;
  input parameter arg4 :: <GRegexMatchFlags>;
  result res :: <gchar**>;
  c-name: "g_regex_split_simple";
end;

define C-function g-regex-split
  input parameter arg1 :: <GRegex>;
  input parameter arg2 :: <gchar*>;
  input parameter arg3 :: <GRegexMatchFlags>;
  result res :: <gchar**>;
  c-name: "g_regex_split";
end;

define C-function g-regex-split-full
  input parameter arg1 :: <GRegex>;
  input parameter arg2 :: <gchar*>;
  input parameter arg3 :: <gssize>;
  input parameter arg4 :: <gint>;
  input parameter arg5 :: <GRegexMatchFlags>;
  input parameter arg6 :: <gint>;
  input parameter arg7 :: <GError*>;
  result res :: <gchar**>;
  c-name: "g_regex_split_full";
end;

define C-function g-regex-replace
  input parameter arg1 :: <GRegex>;
  input parameter arg2 :: <gchar*>;
  input parameter arg3 :: <gssize>;
  input parameter arg4 :: <gint>;
  input parameter arg5 :: <gchar*>;
  input parameter arg6 :: <GRegexMatchFlags>;
  input parameter arg7 :: <GError*>;
  result res :: <gchar*>;
  c-name: "g_regex_replace";
end;

define C-function g-regex-replace-literal
  input parameter arg1 :: <GRegex>;
  input parameter arg2 :: <gchar*>;
  input parameter arg3 :: <gssize>;
  input parameter arg4 :: <gint>;
  input parameter arg5 :: <gchar*>;
  input parameter arg6 :: <GRegexMatchFlags>;
  input parameter arg7 :: <GError*>;
  result res :: <gchar*>;
  c-name: "g_regex_replace_literal";
end;

define C-function g-regex-replace-eval
  input parameter arg1 :: <GRegex>;
  input parameter arg2 :: <gchar*>;
  input parameter arg3 :: <gssize>;
  input parameter arg4 :: <gint>;
  input parameter arg5 :: <GRegexMatchFlags>;
  input parameter arg6 :: <GRegexEvalCallback>;
  input parameter arg7 :: <gpointer>;
  input parameter arg8 :: <GError*>;
  result res :: <gchar*>;
  c-name: "g_regex_replace_eval";
end;

define C-pointer-type <gboolean*> => <gboolean>;
define C-function g-regex-check-replacement
  input parameter arg1 :: <gchar*>;
  input parameter arg2 :: <gboolean*>;
  input parameter arg3 :: <GError*>;
  result res :: <gboolean>;
  c-name: "g_regex_check_replacement";
end;

define C-function g-match-info-get-regex
  input parameter arg1 :: <GMatchInfo>;
  result res :: <GRegex>;
  c-name: "g_match_info_get_regex";
end;

define C-function g-match-info-get-string
  input parameter arg1 :: <GMatchInfo>;
  result res :: <gchar*>;
  c-name: "g_match_info_get_string";
end;

define C-function g-match-info-free
  input parameter arg1 :: <GMatchInfo>;
  c-name: "g_match_info_free";
end;

define C-function g-match-info-next
  input parameter arg1 :: <GMatchInfo>;
  input parameter arg2 :: <GError*>;
  result res :: <gboolean>;
  c-name: "g_match_info_next";
end;

define C-function g-match-info-matches
  input parameter arg1 :: <GMatchInfo>;
  result res :: <gboolean>;
  c-name: "g_match_info_matches";
end;

define C-function g-match-info-get-match-count
  input parameter arg1 :: <GMatchInfo>;
  result res :: <gint>;
  c-name: "g_match_info_get_match_count";
end;

define C-function g-match-info-is-partial-match
  input parameter arg1 :: <GMatchInfo>;
  result res :: <gboolean>;
  c-name: "g_match_info_is_partial_match";
end;

define C-function g-match-info-expand-references
  input parameter arg1 :: <GMatchInfo>;
  input parameter arg2 :: <gchar*>;
  input parameter arg3 :: <GError*>;
  result res :: <gchar*>;
  c-name: "g_match_info_expand_references";
end;

define C-function g-match-info-fetch
  input parameter arg1 :: <GMatchInfo>;
  input parameter arg2 :: <gint>;
  result res :: <gchar*>;
  c-name: "g_match_info_fetch";
end;

define C-function g-match-info-fetch-pos
  input parameter arg1 :: <GMatchInfo>;
  input parameter arg2 :: <gint>;
  input parameter arg3 :: <gint*>;
  input parameter arg4 :: <gint*>;
  result res :: <gboolean>;
  c-name: "g_match_info_fetch_pos";
end;

define C-function g-match-info-fetch-named
  input parameter arg1 :: <GMatchInfo>;
  input parameter arg2 :: <gchar*>;
  result res :: <gchar*>;
  c-name: "g_match_info_fetch_named";
end;

define C-function g-match-info-fetch-named-pos
  input parameter arg1 :: <GMatchInfo>;
  input parameter arg2 :: <gchar*>;
  input parameter arg3 :: <gint*>;
  input parameter arg4 :: <gint*>;
  result res :: <gboolean>;
  c-name: "g_match_info_fetch_named_pos";
end;

define C-function g-match-info-fetch-all
  input parameter arg1 :: <GMatchInfo>;
  result res :: <gchar**>;
  c-name: "g_match_info_fetch_all";
end;

define C-struct <_GRelation>
end;

define C-pointer-type <GRelation> => <_GRelation>;

define C-struct <_GTuples>
  slot GTuples-len :: <C-unsigned-int>;
end;

define C-pointer-type <GTuples> => <_GTuples>;

define C-function g-relation-new
  input parameter arg1 :: <gint>;
  result res :: <GRelation>;
  c-name: "g_relation_new";
end;

define C-function g-relation-destroy
  input parameter arg1 :: <GRelation>;
  c-name: "g_relation_destroy";
end;

define C-function g-relation-index
  input parameter arg1 :: <GRelation>;
  input parameter arg2 :: <gint>;
  input parameter arg3 :: <GHashFunc>;
  input parameter arg4 :: <GEqualFunc>;
  c-name: "g_relation_index";
end;

define C-function g-relation-insert
  input parameter arg1 :: <GRelation>;
  c-name: "g_relation_insert";
end;

define C-function g-relation-delete
  input parameter arg1 :: <GRelation>;
  input parameter arg2 :: <gconstpointer>;
  input parameter arg3 :: <gint>;
  result res :: <gint>;
  c-name: "g_relation_delete";
end;

define C-function g-relation-select
  input parameter arg1 :: <GRelation>;
  input parameter arg2 :: <gconstpointer>;
  input parameter arg3 :: <gint>;
  result res :: <GTuples>;
  c-name: "g_relation_select";
end;

define C-function g-relation-count
  input parameter arg1 :: <GRelation>;
  input parameter arg2 :: <gconstpointer>;
  input parameter arg3 :: <gint>;
  result res :: <gint>;
  c-name: "g_relation_count";
end;

define C-function g-relation-exists
  input parameter arg1 :: <GRelation>;
  result res :: <gboolean>;
  c-name: "g_relation_exists";
end;

define C-function g-relation-print
  input parameter arg1 :: <GRelation>;
  c-name: "g_relation_print";
end;

define C-function g-tuples-destroy
  input parameter arg1 :: <GTuples>;
  c-name: "g_tuples_destroy";
end;

define C-function g-tuples-index
  input parameter arg1 :: <GTuples>;
  input parameter arg2 :: <gint>;
  input parameter arg3 :: <gint>;
  result res :: <gpointer>;
  c-name: "g_tuples_index";
end;

define C-struct <_GRand>
end;

define C-pointer-type <GRand> => <_GRand>;

define C-function g-rand-new-with-seed
  input parameter arg1 :: <guint32>;
  result res :: <GRand>;
  c-name: "g_rand_new_with_seed";
end;

define C-function g-rand-new-with-seed-array
  input parameter arg1 :: <guint32*>;
  input parameter arg2 :: <guint>;
  result res :: <GRand>;
  c-name: "g_rand_new_with_seed_array";
end;

define C-function g-rand-new
  result res :: <GRand>;
  c-name: "g_rand_new";
end;

define C-function g-rand-free
  input parameter arg1 :: <GRand>;
  c-name: "g_rand_free";
end;

define C-function g-rand-copy
  input parameter arg1 :: <GRand>;
  result res :: <GRand>;
  c-name: "g_rand_copy";
end;

define C-function g-rand-set-seed
  input parameter arg1 :: <GRand>;
  input parameter arg2 :: <guint32>;
  c-name: "g_rand_set_seed";
end;

define C-function g-rand-set-seed-array
  input parameter arg1 :: <GRand>;
  input parameter arg2 :: <guint32*>;
  input parameter arg3 :: <guint>;
  c-name: "g_rand_set_seed_array";
end;

define C-function g-rand-int
  input parameter arg1 :: <GRand>;
  result res :: <guint32>;
  c-name: "g_rand_int";
end;

define C-function g-rand-int-range
  input parameter arg1 :: <GRand>;
  input parameter arg2 :: <gint32>;
  input parameter arg3 :: <gint32>;
  result res :: <gint32>;
  c-name: "g_rand_int_range";
end;

define C-function g-rand-double
  input parameter arg1 :: <GRand>;
  result res :: <gdouble>;
  c-name: "g_rand_double";
end;

define C-function g-rand-double-range
  input parameter arg1 :: <GRand>;
  input parameter arg2 :: <gdouble>;
  input parameter arg3 :: <gdouble>;
  result res :: <gdouble>;
  c-name: "g_rand_double_range";
end;

define C-function g-random-set-seed
  input parameter arg1 :: <guint32>;
  c-name: "g_random_set_seed";
end;

define C-function g-random-int
  result res :: <guint32>;
  c-name: "g_random_int";
end;

define C-function g-random-int-range
  input parameter arg1 :: <gint32>;
  input parameter arg2 :: <gint32>;
  result res :: <gint32>;
  c-name: "g_random_int_range";
end;

define C-function g-random-double
  result res :: <gdouble>;
  c-name: "g_random_double";
end;

define C-function g-random-double-range
  input parameter arg1 :: <gdouble>;
  input parameter arg2 :: <gdouble>;
  result res :: <gdouble>;
  c-name: "g_random_double_range";
end;

define C-struct <_GQueue>
  slot GQueue-head :: <GList>;
  slot GQueue-tail :: <GList>;
  slot GQueue-length :: <C-unsigned-int>;
end;

define C-pointer-type <GQueue> => <_GQueue>;

define C-function g-queue-new
  result res :: <GQueue>;
  c-name: "g_queue_new";
end;

define C-function g-queue-free
  input parameter arg1 :: <GQueue>;
  c-name: "g_queue_free";
end;

define C-function g-queue-init
  input parameter arg1 :: <GQueue>;
  c-name: "g_queue_init";
end;

define C-function g-queue-clear
  input parameter arg1 :: <GQueue>;
  c-name: "g_queue_clear";
end;

define C-function g-queue-is-empty
  input parameter arg1 :: <GQueue>;
  result res :: <gboolean>;
  c-name: "g_queue_is_empty";
end;

define C-function g-queue-get-length
  input parameter arg1 :: <GQueue>;
  result res :: <guint>;
  c-name: "g_queue_get_length";
end;

define C-function g-queue-reverse
  input parameter arg1 :: <GQueue>;
  c-name: "g_queue_reverse";
end;

define C-function g-queue-copy
  input parameter arg1 :: <GQueue>;
  result res :: <GQueue>;
  c-name: "g_queue_copy";
end;

define C-function g-queue-foreach
  input parameter arg1 :: <GQueue>;
  input parameter arg2 :: <GFunc>;
  input parameter arg3 :: <gpointer>;
  c-name: "g_queue_foreach";
end;

define C-function g-queue-find
  input parameter arg1 :: <GQueue>;
  input parameter arg2 :: <gconstpointer>;
  result res :: <GList>;
  c-name: "g_queue_find";
end;

define C-function g-queue-find-custom
  input parameter arg1 :: <GQueue>;
  input parameter arg2 :: <gconstpointer>;
  input parameter arg3 :: <GCompareFunc>;
  result res :: <GList>;
  c-name: "g_queue_find_custom";
end;

define C-function g-queue-sort
  input parameter arg1 :: <GQueue>;
  input parameter arg2 :: <GCompareDataFunc>;
  input parameter arg3 :: <gpointer>;
  c-name: "g_queue_sort";
end;

define C-function g-queue-push-head
  input parameter arg1 :: <GQueue>;
  input parameter arg2 :: <gpointer>;
  c-name: "g_queue_push_head";
end;

define C-function g-queue-push-tail
  input parameter arg1 :: <GQueue>;
  input parameter arg2 :: <gpointer>;
  c-name: "g_queue_push_tail";
end;

define C-function g-queue-push-nth
  input parameter arg1 :: <GQueue>;
  input parameter arg2 :: <gpointer>;
  input parameter arg3 :: <gint>;
  c-name: "g_queue_push_nth";
end;

define C-function g-queue-pop-head
  input parameter arg1 :: <GQueue>;
  result res :: <gpointer>;
  c-name: "g_queue_pop_head";
end;

define C-function g-queue-pop-tail
  input parameter arg1 :: <GQueue>;
  result res :: <gpointer>;
  c-name: "g_queue_pop_tail";
end;

define C-function g-queue-pop-nth
  input parameter arg1 :: <GQueue>;
  input parameter arg2 :: <guint>;
  result res :: <gpointer>;
  c-name: "g_queue_pop_nth";
end;

define C-function g-queue-peek-head
  input parameter arg1 :: <GQueue>;
  result res :: <gpointer>;
  c-name: "g_queue_peek_head";
end;

define C-function g-queue-peek-tail
  input parameter arg1 :: <GQueue>;
  result res :: <gpointer>;
  c-name: "g_queue_peek_tail";
end;

define C-function g-queue-peek-nth
  input parameter arg1 :: <GQueue>;
  input parameter arg2 :: <guint>;
  result res :: <gpointer>;
  c-name: "g_queue_peek_nth";
end;

define C-function g-queue-index
  input parameter arg1 :: <GQueue>;
  input parameter arg2 :: <gconstpointer>;
  result res :: <gint>;
  c-name: "g_queue_index";
end;

define C-function g-queue-remove
  input parameter arg1 :: <GQueue>;
  input parameter arg2 :: <gconstpointer>;
  c-name: "g_queue_remove";
end;

define C-function g-queue-remove-all
  input parameter arg1 :: <GQueue>;
  input parameter arg2 :: <gconstpointer>;
  c-name: "g_queue_remove_all";
end;

define C-function g-queue-insert-before
  input parameter arg1 :: <GQueue>;
  input parameter arg2 :: <GList>;
  input parameter arg3 :: <gpointer>;
  c-name: "g_queue_insert_before";
end;

define C-function g-queue-insert-after
  input parameter arg1 :: <GQueue>;
  input parameter arg2 :: <GList>;
  input parameter arg3 :: <gpointer>;
  c-name: "g_queue_insert_after";
end;

define C-function g-queue-insert-sorted
  input parameter arg1 :: <GQueue>;
  input parameter arg2 :: <gpointer>;
  input parameter arg3 :: <GCompareDataFunc>;
  input parameter arg4 :: <gpointer>;
  c-name: "g_queue_insert_sorted";
end;

define C-function g-queue-push-head-link
  input parameter arg1 :: <GQueue>;
  input parameter arg2 :: <GList>;
  c-name: "g_queue_push_head_link";
end;

define C-function g-queue-push-tail-link
  input parameter arg1 :: <GQueue>;
  input parameter arg2 :: <GList>;
  c-name: "g_queue_push_tail_link";
end;

define C-function g-queue-push-nth-link
  input parameter arg1 :: <GQueue>;
  input parameter arg2 :: <gint>;
  input parameter arg3 :: <GList>;
  c-name: "g_queue_push_nth_link";
end;

define C-function g-queue-pop-head-link
  input parameter arg1 :: <GQueue>;
  result res :: <GList>;
  c-name: "g_queue_pop_head_link";
end;

define C-function g-queue-pop-tail-link
  input parameter arg1 :: <GQueue>;
  result res :: <GList>;
  c-name: "g_queue_pop_tail_link";
end;

define C-function g-queue-pop-nth-link
  input parameter arg1 :: <GQueue>;
  input parameter arg2 :: <guint>;
  result res :: <GList>;
  c-name: "g_queue_pop_nth_link";
end;

define C-function g-queue-peek-head-link
  input parameter arg1 :: <GQueue>;
  result res :: <GList>;
  c-name: "g_queue_peek_head_link";
end;

define C-function g-queue-peek-tail-link
  input parameter arg1 :: <GQueue>;
  result res :: <GList>;
  c-name: "g_queue_peek_tail_link";
end;

define C-function g-queue-peek-nth-link
  input parameter arg1 :: <GQueue>;
  input parameter arg2 :: <guint>;
  result res :: <GList>;
  c-name: "g_queue_peek_nth_link";
end;

define C-function g-queue-link-index
  input parameter arg1 :: <GQueue>;
  input parameter arg2 :: <GList>;
  result res :: <gint>;
  c-name: "g_queue_link_index";
end;

define C-function g-queue-unlink
  input parameter arg1 :: <GQueue>;
  input parameter arg2 :: <GList>;
  c-name: "g_queue_unlink";
end;

define C-function g-queue-delete-link
  input parameter arg1 :: <GQueue>;
  input parameter arg2 :: <GList>;
  c-name: "g_queue_delete_link";
end;

define C-function g-qsort-with-data
  input parameter arg1 :: <gconstpointer>;
  input parameter arg2 :: <gint>;
  input parameter arg3 :: <gsize>;
  input parameter arg4 :: <GCompareDataFunc>;
  input parameter arg5 :: <gpointer>;
  c-name: "g_qsort_with_data";
end;

define C-function g-spaced-primes-closest
  input parameter arg1 :: <guint>;
  result res :: <guint>;
  c-name: "g_spaced_primes_closest";
end;

define C-struct <_GPatternSpec>
end;

define C-pointer-type <GPatternSpec> => <_GPatternSpec>;

define C-function g-pattern-spec-new
  input parameter arg1 :: <gchar*>;
  result res :: <GPatternSpec>;
  c-name: "g_pattern_spec_new";
end;

define C-function g-pattern-spec-free
  input parameter arg1 :: <GPatternSpec>;
  c-name: "g_pattern_spec_free";
end;

define C-function g-pattern-spec-equal
  input parameter arg1 :: <GPatternSpec>;
  input parameter arg2 :: <GPatternSpec>;
  result res :: <gboolean>;
  c-name: "g_pattern_spec_equal";
end;

define C-function g-pattern-match
  input parameter arg1 :: <GPatternSpec>;
  input parameter arg2 :: <guint>;
  input parameter arg3 :: <gchar*>;
  input parameter arg4 :: <gchar*>;
  result res :: <gboolean>;
  c-name: "g_pattern_match";
end;

define C-function g-pattern-match-string
  input parameter arg1 :: <GPatternSpec>;
  input parameter arg2 :: <gchar*>;
  result res :: <gboolean>;
  c-name: "g_pattern_match_string";
end;

define C-function g-pattern-match-simple
  input parameter arg1 :: <gchar*>;
  input parameter arg2 :: <gchar*>;
  result res :: <gboolean>;
  c-name: "g_pattern_match_simple";
end;

define C-struct <_GOptionContext>
end;

define C-pointer-type <GOptionContext> => <_GOptionContext>;

define C-struct <_GOptionGroup>
end;

define C-pointer-type <GOptionGroup> => <_GOptionGroup>;

define constant <GOptionArg> = <C-int>;
define constant $G-OPTION-ARG-NONE = 0;
define constant $G-OPTION-ARG-STRING = 1;
define constant $G-OPTION-ARG-INT = 2;
define constant $G-OPTION-ARG-CALLBACK = 3;
define constant $G-OPTION-ARG-FILENAME = 4;
define constant $G-OPTION-ARG-STRING-ARRAY = 5;
define constant $G-OPTION-ARG-FILENAME-ARRAY = 6;
define constant $G-OPTION-ARG-DOUBLE = 7;
define constant $G-OPTION-ARG-INT64 = 8;

define C-struct <_GOptionEntry>
  slot GOptionEntry-long-name :: <gchar*>;
  slot GOptionEntry-short-name :: <C-signed-char>;
  slot GOptionEntry-flags :: <C-signed-int>;
  slot GOptionEntry-arg :: <GOptionArg>;
  slot GOptionEntry-arg-data :: <C-void*>;
  slot GOptionEntry-description :: <gchar*>;
  slot GOptionEntry-arg-description :: <gchar*>;
end;

define C-pointer-type <GOptionEntry> => <_GOptionEntry>;

define constant <GOptionFlags> = <C-int>;
define constant $G-OPTION-FLAG-HIDDEN = 1;
define constant $G-OPTION-FLAG-IN-MAIN = 2;
define constant $G-OPTION-FLAG-REVERSE = 4;
define constant $G-OPTION-FLAG-NO-ARG = 8;
define constant $G-OPTION-FLAG-FILENAME = 16;
define constant $G-OPTION-FLAG-OPTIONAL-ARG = 32;
define constant $G-OPTION-FLAG-NOALIAS = 64;

define constant <anonymous-1155> = <C-function-pointer>;
define constant <GOptionArgFunc> = <anonymous-1155>;

define constant <anonymous-1156> = <C-function-pointer>;
define constant <GOptionParseFunc> = <anonymous-1156>;

define constant <anonymous-1157> = <C-function-pointer>;
define constant <GOptionErrorFunc> = <anonymous-1157>;

define constant <GOptionError> = <C-int>;
define constant $G-OPTION-ERROR-UNKNOWN-OPTION = 0;
define constant $G-OPTION-ERROR-BAD-VALUE = 1;
define constant $G-OPTION-ERROR-FAILED = 2;

define C-function g-option-error-quark
  result res :: <GQuark>;
  c-name: "g_option_error_quark";
end;

define C-function g-option-context-new
  input parameter arg1 :: <gchar*>;
  result res :: <GOptionContext>;
  c-name: "g_option_context_new";
end;

define C-function g-option-context-set-summary
  input parameter arg1 :: <GOptionContext>;
  input parameter arg2 :: <gchar*>;
  c-name: "g_option_context_set_summary";
end;

define C-function g-option-context-get-summary
  input parameter arg1 :: <GOptionContext>;
  result res :: <gchar*>;
  c-name: "g_option_context_get_summary";
end;

define C-function g-option-context-set-description
  input parameter arg1 :: <GOptionContext>;
  input parameter arg2 :: <gchar*>;
  c-name: "g_option_context_set_description";
end;

define C-function g-option-context-get-description
  input parameter arg1 :: <GOptionContext>;
  result res :: <gchar*>;
  c-name: "g_option_context_get_description";
end;

define C-function g-option-context-free
  input parameter arg1 :: <GOptionContext>;
  c-name: "g_option_context_free";
end;

define C-function g-option-context-set-help-enabled
  input parameter arg1 :: <GOptionContext>;
  input parameter arg2 :: <gboolean>;
  c-name: "g_option_context_set_help_enabled";
end;

define C-function g-option-context-get-help-enabled
  input parameter arg1 :: <GOptionContext>;
  result res :: <gboolean>;
  c-name: "g_option_context_get_help_enabled";
end;

define C-function g-option-context-set-ignore-unknown-options
  input parameter arg1 :: <GOptionContext>;
  input parameter arg2 :: <gboolean>;
  c-name: "g_option_context_set_ignore_unknown_options";
end;

define C-function g-option-context-get-ignore-unknown-options
  input parameter arg1 :: <GOptionContext>;
  result res :: <gboolean>;
  c-name: "g_option_context_get_ignore_unknown_options";
end;

define C-function g-option-context-add-main-entries
  input parameter arg1 :: <GOptionContext>;
  input parameter arg2 :: <GOptionEntry>;
  input parameter arg3 :: <gchar*>;
  c-name: "g_option_context_add_main_entries";
end;

define C-function g-option-context-parse
  input parameter arg1 :: <GOptionContext>;
  input parameter arg2 :: <gint*>;
  input parameter arg3 :: <gchar***>;
  input parameter arg4 :: <GError*>;
  result res :: <gboolean>;
  c-name: "g_option_context_parse";
end;

define C-function g-option-context-set-translate-func
  input parameter arg1 :: <GOptionContext>;
  input parameter arg2 :: <GTranslateFunc>;
  input parameter arg3 :: <gpointer>;
  input parameter arg4 :: <GDestroyNotify>;
  c-name: "g_option_context_set_translate_func";
end;

define C-function g-option-context-set-translation-domain
  input parameter arg1 :: <GOptionContext>;
  input parameter arg2 :: <gchar*>;
  c-name: "g_option_context_set_translation_domain";
end;

define C-function g-option-context-add-group
  input parameter arg1 :: <GOptionContext>;
  input parameter arg2 :: <GOptionGroup>;
  c-name: "g_option_context_add_group";
end;

define C-function g-option-context-set-main-group
  input parameter arg1 :: <GOptionContext>;
  input parameter arg2 :: <GOptionGroup>;
  c-name: "g_option_context_set_main_group";
end;

define C-function g-option-context-get-main-group
  input parameter arg1 :: <GOptionContext>;
  result res :: <GOptionGroup>;
  c-name: "g_option_context_get_main_group";
end;

define C-function g-option-context-get-help
  input parameter arg1 :: <GOptionContext>;
  input parameter arg2 :: <gboolean>;
  input parameter arg3 :: <GOptionGroup>;
  result res :: <gchar*>;
  c-name: "g_option_context_get_help";
end;

define C-function g-option-group-new
  input parameter arg1 :: <gchar*>;
  input parameter arg2 :: <gchar*>;
  input parameter arg3 :: <gchar*>;
  input parameter arg4 :: <gpointer>;
  input parameter arg5 :: <GDestroyNotify>;
  result res :: <GOptionGroup>;
  c-name: "g_option_group_new";
end;

define C-function g-option-group-set-parse-hooks
  input parameter arg1 :: <GOptionGroup>;
  input parameter arg2 :: <GOptionParseFunc>;
  input parameter arg3 :: <GOptionParseFunc>;
  c-name: "g_option_group_set_parse_hooks";
end;

define C-function g-option-group-set-error-hook
  input parameter arg1 :: <GOptionGroup>;
  input parameter arg2 :: <GOptionErrorFunc>;
  c-name: "g_option_group_set_error_hook";
end;

define C-function g-option-group-free
  input parameter arg1 :: <GOptionGroup>;
  c-name: "g_option_group_free";
end;

define C-function g-option-group-add-entries
  input parameter arg1 :: <GOptionGroup>;
  input parameter arg2 :: <GOptionEntry>;
  c-name: "g_option_group_add_entries";
end;

define C-function g-option-group-set-translate-func
  input parameter arg1 :: <GOptionGroup>;
  input parameter arg2 :: <GTranslateFunc>;
  input parameter arg3 :: <gpointer>;
  input parameter arg4 :: <GDestroyNotify>;
  c-name: "g_option_group_set_translate_func";
end;

define C-function g-option-group-set-translation-domain
  input parameter arg1 :: <GOptionGroup>;
  input parameter arg2 :: <gchar*>;
  c-name: "g_option_group_set_translation_domain";
end;

define constant $G-OPTION-REMAINING = "";

define C-function g-printf-string-upper-bound
  input parameter arg1 :: <gchar*>;
  input parameter arg2 :: <va-list>;
  result res :: <gsize>;
  c-name: "g_printf_string_upper_bound";
end;

define constant <GLogLevelFlags> = <C-int>;
define constant $G-LOG-FLAG-RECURSION = 1;
define constant $G-LOG-FLAG-FATAL = 2;
define constant $G-LOG-LEVEL-ERROR = 4;
define constant $G-LOG-LEVEL-CRITICAL = 8;
define constant $G-LOG-LEVEL-WARNING = 16;
define constant $G-LOG-LEVEL-MESSAGE = 32;
define constant $G-LOG-LEVEL-INFO = 64;
define constant $G-LOG-LEVEL-DEBUG = 128;
define constant $G-LOG-LEVEL-MASK = -4;

define constant <anonymous-1103> = <C-function-pointer>;
define constant <GLogFunc> = <anonymous-1103>;

define C-function g-log-set-handler
  input parameter arg1 :: <gchar*>;
  input parameter arg2 :: <GLogLevelFlags>;
  input parameter arg3 :: <GLogFunc>;
  input parameter arg4 :: <gpointer>;
  result res :: <guint>;
  c-name: "g_log_set_handler";
end;

define C-function g-log-remove-handler
  input parameter arg1 :: <gchar*>;
  input parameter arg2 :: <guint>;
  c-name: "g_log_remove_handler";
end;

define C-function g-log-default-handler
  input parameter arg1 :: <gchar*>;
  input parameter arg2 :: <GLogLevelFlags>;
  input parameter arg3 :: <gchar*>;
  input parameter arg4 :: <gpointer>;
  c-name: "g_log_default_handler";
end;

define C-function g-log-set-default-handler
  input parameter arg1 :: <GLogFunc>;
  input parameter arg2 :: <gpointer>;
  result res :: <GLogFunc>;
  c-name: "g_log_set_default_handler";
end;

define C-function g-log
  input parameter arg1 :: <gchar*>;
  input parameter arg2 :: <GLogLevelFlags>;
  input parameter arg3 :: <gchar*>;
  c-name: "g_log";
end;

define C-function g-logv
  input parameter arg1 :: <gchar*>;
  input parameter arg2 :: <GLogLevelFlags>;
  input parameter arg3 :: <gchar*>;
  input parameter arg4 :: <va-list>;
  c-name: "g_logv";
end;

define C-function g-log-set-fatal-mask
  input parameter arg1 :: <gchar*>;
  input parameter arg2 :: <GLogLevelFlags>;
  result res :: <GLogLevelFlags>;
  c-name: "g_log_set_fatal_mask";
end;

define C-function g-log-set-always-fatal
  input parameter arg1 :: <GLogLevelFlags>;
  result res :: <GLogLevelFlags>;
  c-name: "g_log_set_always_fatal";
end;

define C-function g-return-if-fail-warning
  input parameter arg1 :: <char*>;
  input parameter arg2 :: <char*>;
  input parameter arg3 :: <char*>;
  c-name: "g_return_if_fail_warning";
end;

define C-function g-assert-warning
  input parameter arg1 :: <char*>;
  input parameter arg2 :: <char*>;
  input parameter arg3 :: <C-signed-int>;
  input parameter arg4 :: <char*>;
  input parameter arg5 :: <char*>;
  c-name: "g_assert_warning";
end;

define constant <anonymous-1115> = <C-function-pointer>;
define constant <GPrintFunc> = <anonymous-1115>;

define C-function g-print
  input parameter arg1 :: <gchar*>;
  c-name: "g_print";
end;

define C-function g-set-print-handler
  input parameter arg1 :: <GPrintFunc>;
  result res :: <GPrintFunc>;
  c-name: "g_set_print_handler";
end;

define C-function g-printerr
  input parameter arg1 :: <gchar*>;
  c-name: "g_printerr";
end;

define C-function g-set-printerr-handler
  input parameter arg1 :: <GPrintFunc>;
  result res :: <GPrintFunc>;
  c-name: "g_set_printerr_handler";
end;

define constant $G-LOG-LEVEL-USER-SHIFT = 8;

define constant $G-LOG-FATAL-MASK = 0;

define constant <GMarkupError> = <C-int>;
define constant $G-MARKUP-ERROR-BAD-UTF8 = 0;
define constant $G-MARKUP-ERROR-EMPTY = 1;
define constant $G-MARKUP-ERROR-PARSE = 2;
define constant $G-MARKUP-ERROR-UNKNOWN-ELEMENT = 3;
define constant $G-MARKUP-ERROR-UNKNOWN-ATTRIBUTE = 4;
define constant $G-MARKUP-ERROR-INVALID-CONTENT = 5;

define C-function g-markup-error-quark
  result res :: <GQuark>;
  c-name: "g_markup_error_quark";
end;

define constant <GMarkupParseFlags> = <C-int>;
define constant $G-MARKUP-DO-NOT-USE-THIS-UNSUPPORTED-FLAG = 1;
define constant $G-MARKUP-TREAT-CDATA-AS-TEXT = 2;

define C-struct <_GMarkupParseContext>
end;

define C-pointer-type <GMarkupParseContext> => <_GMarkupParseContext>;

define constant <anonymous-1087> = <C-function-pointer>;
define constant <anonymous-1088> = <C-function-pointer>;
define constant <anonymous-1089> = <C-function-pointer>;
define constant <anonymous-1090> = <C-function-pointer>;
define constant <anonymous-1091> = <C-function-pointer>;
define C-struct <_GMarkupParser>
  slot GMarkupParser-start-element :: <anonymous-1087>;
  slot GMarkupParser-end-element :: <anonymous-1088>;
  slot GMarkupParser-text :: <anonymous-1089>;
  slot GMarkupParser-passthrough :: <anonymous-1090>;
  slot GMarkupParser-error :: <anonymous-1091>;
end;

define C-pointer-type <GMarkupParser> => <_GMarkupParser>;

define C-function g-markup-parse-context-new
  input parameter arg1 :: <GMarkupParser>;
  input parameter arg2 :: <GMarkupParseFlags>;
  input parameter arg3 :: <gpointer>;
  input parameter arg4 :: <GDestroyNotify>;
  result res :: <GMarkupParseContext>;
  c-name: "g_markup_parse_context_new";
end;

define C-function g-markup-parse-context-free
  input parameter arg1 :: <GMarkupParseContext>;
  c-name: "g_markup_parse_context_free";
end;

define C-function g-markup-parse-context-parse
  input parameter arg1 :: <GMarkupParseContext>;
  input parameter arg2 :: <gchar*>;
  input parameter arg3 :: <gssize>;
  input parameter arg4 :: <GError*>;
  result res :: <gboolean>;
  c-name: "g_markup_parse_context_parse";
end;

define C-function g-markup-parse-context-end-parse
  input parameter arg1 :: <GMarkupParseContext>;
  input parameter arg2 :: <GError*>;
  result res :: <gboolean>;
  c-name: "g_markup_parse_context_end_parse";
end;

define C-function g-markup-parse-context-get-element
  input parameter arg1 :: <GMarkupParseContext>;
  result res :: <gchar*>;
  c-name: "g_markup_parse_context_get_element";
end;

define C-function g-markup-parse-context-get-position
  input parameter arg1 :: <GMarkupParseContext>;
  input parameter arg2 :: <gint*>;
  input parameter arg3 :: <gint*>;
  c-name: "g_markup_parse_context_get_position";
end;

define C-function g-markup-escape-text
  input parameter arg1 :: <gchar*>;
  input parameter arg2 :: <gssize>;
  result res :: <gchar*>;
  c-name: "g_markup_escape_text";
end;

define C-function g-markup-printf-escaped
  input parameter arg1 :: <char*>;
  result res :: <gchar*>;
  c-name: "g_markup_printf_escaped";
end;

define C-function g-markup-vprintf-escaped
  input parameter arg1 :: <char*>;
  input parameter arg2 :: <va-list>;
  result res :: <gchar*>;
  c-name: "g_markup_vprintf_escaped";
end;

define C-struct <_GMappedFile>
end;

define C-pointer-type <GMappedFile> => <_GMappedFile>;

define C-function g-mapped-file-new
  input parameter arg1 :: <gchar*>;
  input parameter arg2 :: <gboolean>;
  input parameter arg3 :: <GError*>;
  result res :: <GMappedFile>;
  c-name: "g_mapped_file_new";
end;

define C-function g-mapped-file-get-length
  input parameter arg1 :: <GMappedFile>;
  result res :: <gsize>;
  c-name: "g_mapped_file_get_length";
end;

define C-function g-mapped-file-get-contents
  input parameter arg1 :: <GMappedFile>;
  result res :: <gchar*>;
  c-name: "g_mapped_file_get_contents";
end;

define C-function g-mapped-file-free
  input parameter arg1 :: <GMappedFile>;
  c-name: "g_mapped_file_free";
end;

define C-struct <_GMainContext>
end;

define C-pointer-type <GMainContext> => <_GMainContext>;

define C-struct <_GMainLoop>
end;

define C-pointer-type <GMainLoop> => <_GMainLoop>;

define constant <anonymous-800> = <C-function-pointer>;
define constant <anonymous-801> = <C-function-pointer>;
define C-pointer-type <GSource> => <_GSource>;

define constant <anonymous-798> = <C-function-pointer>;
define constant <GSourceFunc> = <anonymous-798>;

define C-pointer-type <GSourceFunc*> => <GSourceFunc>;
define constant <anonymous-802> = <C-function-pointer>;
define C-struct <_GSourceCallbackFuncs>
  slot GSourceCallbackFuncs-ref :: <anonymous-800>;
  slot GSourceCallbackFuncs-unref :: <anonymous-801>;
  slot GSourceCallbackFuncs-get :: <anonymous-802>;
end;

define C-pointer-type <GSourceCallbackFuncs> => <_GSourceCallbackFuncs>;

define constant <anonymous-804> = <C-function-pointer>;
define constant <anonymous-805> = <C-function-pointer>;
define constant <anonymous-806> = <C-function-pointer>;
define constant <anonymous-807> = <C-function-pointer>;
define constant <anonymous-803> = <C-function-pointer>;
define constant <GSourceDummyMarshal> = <anonymous-803>;

define C-struct <_GSourceFuncs>
  slot GSourceFuncs-prepare :: <anonymous-804>;
  slot GSourceFuncs-check :: <anonymous-805>;
  slot GSourceFuncs-dispatch :: <anonymous-806>;
  slot GSourceFuncs-finalize :: <anonymous-807>;
  slot GSourceFuncs-closure-callback :: <anonymous-798>;
  slot GSourceFuncs-closure-marshal :: <anonymous-803>;
end;

define C-pointer-type <GSourceFuncs> => <_GSourceFuncs>;

define C-struct <_GSource>
  slot GSource-callback-data :: <C-void*>;
  slot GSource-callback-funcs :: <GSourceCallbackFuncs>;
  slot GSource-source-funcs :: <GSourceFuncs>;
  slot GSource-ref-count :: <C-unsigned-int>;
  slot GSource-context :: <GMainContext>;
  slot GSource-priority :: <C-signed-int>;
  slot GSource-flags :: <C-unsigned-int>;
  slot GSource-source-id :: <C-unsigned-int>;
  slot GSource-poll-fds :: <GSList>;
  slot GSource-prev :: <GSource>;
  slot GSource-next :: <GSource>;
  slot GSource-reserved1 :: <C-void*>;
  slot GSource-reserved2 :: <C-void*>;
end;

define constant <anonymous-799> = <C-function-pointer>;
define constant <GChildWatchFunc> = <anonymous-799>;

define C-struct <_GPollFD>
  slot GPollFD-fd :: <C-signed-int>;
  slot GPollFD-events :: <C-unsigned-short>;
  slot GPollFD-revents :: <C-unsigned-short>;
end;

define C-pointer-type <GPollFD> => <_GPollFD>;

define constant <anonymous-808> = <C-function-pointer>;
define constant <GPollFunc> = <anonymous-808>;

define C-function g-main-context-new
  result res :: <GMainContext>;
  c-name: "g_main_context_new";
end;

define C-function g-main-context-ref
  input parameter arg1 :: <GMainContext>;
  result res :: <GMainContext>;
  c-name: "g_main_context_ref";
end;

define C-function g-main-context-unref
  input parameter arg1 :: <GMainContext>;
  c-name: "g_main_context_unref";
end;

define C-function g-main-context-default
  result res :: <GMainContext>;
  c-name: "g_main_context_default";
end;

define C-function g-main-context-iteration
  input parameter arg1 :: <GMainContext>;
  input parameter arg2 :: <gboolean>;
  result res :: <gboolean>;
  c-name: "g_main_context_iteration";
end;

define C-function g-main-context-pending
  input parameter arg1 :: <GMainContext>;
  result res :: <gboolean>;
  c-name: "g_main_context_pending";
end;

define C-function g-main-context-find-source-by-id
  input parameter arg1 :: <GMainContext>;
  input parameter arg2 :: <guint>;
  result res :: <GSource>;
  c-name: "g_main_context_find_source_by_id";
end;

define C-function g-main-context-find-source-by-user-data
  input parameter arg1 :: <GMainContext>;
  input parameter arg2 :: <gpointer>;
  result res :: <GSource>;
  c-name: "g_main_context_find_source_by_user_data";
end;

define C-function g-main-context-find-source-by-funcs-user-data
  input parameter arg1 :: <GMainContext>;
  input parameter arg2 :: <GSourceFuncs>;
  input parameter arg3 :: <gpointer>;
  result res :: <GSource>;
  c-name: "g_main_context_find_source_by_funcs_user_data";
end;

define C-function g-main-context-wakeup
  input parameter arg1 :: <GMainContext>;
  c-name: "g_main_context_wakeup";
end;

define C-function g-main-context-acquire
  input parameter arg1 :: <GMainContext>;
  result res :: <gboolean>;
  c-name: "g_main_context_acquire";
end;

define C-function g-main-context-release
  input parameter arg1 :: <GMainContext>;
  c-name: "g_main_context_release";
end;

define C-function g-main-context-is-owner
  input parameter arg1 :: <GMainContext>;
  result res :: <gboolean>;
  c-name: "g_main_context_is_owner";
end;

define C-function g-main-context-wait
  input parameter arg1 :: <GMainContext>;
  input parameter arg2 :: <GCond>;
  input parameter arg3 :: <GMutex>;
  result res :: <gboolean>;
  c-name: "g_main_context_wait";
end;

define C-function g-main-context-prepare
  input parameter arg1 :: <GMainContext>;
  input parameter arg2 :: <gint*>;
  result res :: <gboolean>;
  c-name: "g_main_context_prepare";
end;

define C-function g-main-context-query
  input parameter arg1 :: <GMainContext>;
  input parameter arg2 :: <gint>;
  input parameter arg3 :: <gint*>;
  input parameter arg4 :: <GPollFD>;
  input parameter arg5 :: <gint>;
  result res :: <gint>;
  c-name: "g_main_context_query";
end;

define C-function g-main-context-check
  input parameter arg1 :: <GMainContext>;
  input parameter arg2 :: <gint>;
  input parameter arg3 :: <GPollFD>;
  input parameter arg4 :: <gint>;
  result res :: <gint>;
  c-name: "g_main_context_check";
end;

define C-function g-main-context-dispatch
  input parameter arg1 :: <GMainContext>;
  c-name: "g_main_context_dispatch";
end;

define C-function g-main-context-set-poll-func
  input parameter arg1 :: <GMainContext>;
  input parameter arg2 :: <GPollFunc>;
  c-name: "g_main_context_set_poll_func";
end;

define C-function g-main-context-get-poll-func
  input parameter arg1 :: <GMainContext>;
  result res :: <GPollFunc>;
  c-name: "g_main_context_get_poll_func";
end;

define C-function g-main-context-add-poll
  input parameter arg1 :: <GMainContext>;
  input parameter arg2 :: <GPollFD>;
  input parameter arg3 :: <gint>;
  c-name: "g_main_context_add_poll";
end;

define C-function g-main-context-remove-poll
  input parameter arg1 :: <GMainContext>;
  input parameter arg2 :: <GPollFD>;
  c-name: "g_main_context_remove_poll";
end;

define C-function g-main-depth
  result res :: <gint>;
  c-name: "g_main_depth";
end;

define C-function g-main-current-source
  result res :: <GSource>;
  c-name: "g_main_current_source";
end;

define C-function g-main-loop-new
  input parameter arg1 :: <GMainContext>;
  input parameter arg2 :: <gboolean>;
  result res :: <GMainLoop>;
  c-name: "g_main_loop_new";
end;

define C-function g-main-loop-run
  input parameter arg1 :: <GMainLoop>;
  c-name: "g_main_loop_run";
end;

define C-function g-main-loop-quit
  input parameter arg1 :: <GMainLoop>;
  c-name: "g_main_loop_quit";
end;

define C-function g-main-loop-ref
  input parameter arg1 :: <GMainLoop>;
  result res :: <GMainLoop>;
  c-name: "g_main_loop_ref";
end;

define C-function g-main-loop-unref
  input parameter arg1 :: <GMainLoop>;
  c-name: "g_main_loop_unref";
end;

define C-function g-main-loop-is-running
  input parameter arg1 :: <GMainLoop>;
  result res :: <gboolean>;
  c-name: "g_main_loop_is_running";
end;

define C-function g-main-loop-get-context
  input parameter arg1 :: <GMainLoop>;
  result res :: <GMainContext>;
  c-name: "g_main_loop_get_context";
end;

define C-function g-source-new
  input parameter arg1 :: <GSourceFuncs>;
  input parameter arg2 :: <guint>;
  result res :: <GSource>;
  c-name: "g_source_new";
end;

define C-function g-source-ref
  input parameter arg1 :: <GSource>;
  result res :: <GSource>;
  c-name: "g_source_ref";
end;

define C-function g-source-unref
  input parameter arg1 :: <GSource>;
  c-name: "g_source_unref";
end;

define C-function g-source-attach
  input parameter arg1 :: <GSource>;
  input parameter arg2 :: <GMainContext>;
  result res :: <guint>;
  c-name: "g_source_attach";
end;

define C-function g-source-destroy
  input parameter arg1 :: <GSource>;
  c-name: "g_source_destroy";
end;

define C-function g-source-set-priority
  input parameter arg1 :: <GSource>;
  input parameter arg2 :: <gint>;
  c-name: "g_source_set_priority";
end;

define C-function g-source-get-priority
  input parameter arg1 :: <GSource>;
  result res :: <gint>;
  c-name: "g_source_get_priority";
end;

define C-function g-source-set-can-recurse
  input parameter arg1 :: <GSource>;
  input parameter arg2 :: <gboolean>;
  c-name: "g_source_set_can_recurse";
end;

define C-function g-source-get-can-recurse
  input parameter arg1 :: <GSource>;
  result res :: <gboolean>;
  c-name: "g_source_get_can_recurse";
end;

define C-function g-source-get-id
  input parameter arg1 :: <GSource>;
  result res :: <guint>;
  c-name: "g_source_get_id";
end;

define C-function g-source-get-context
  input parameter arg1 :: <GSource>;
  result res :: <GMainContext>;
  c-name: "g_source_get_context";
end;

define C-function g-source-set-callback
  input parameter arg1 :: <GSource>;
  input parameter arg2 :: <GSourceFunc>;
  input parameter arg3 :: <gpointer>;
  input parameter arg4 :: <GDestroyNotify>;
  c-name: "g_source_set_callback";
end;

define C-function g-source-set-funcs
  input parameter arg1 :: <GSource>;
  input parameter arg2 :: <GSourceFuncs>;
  c-name: "g_source_set_funcs";
end;

define C-function g-source-is-destroyed
  input parameter arg1 :: <GSource>;
  result res :: <gboolean>;
  c-name: "g_source_is_destroyed";
end;

define C-function g-source-set-callback-indirect
  input parameter arg1 :: <GSource>;
  input parameter arg2 :: <gpointer>;
  input parameter arg3 :: <GSourceCallbackFuncs>;
  c-name: "g_source_set_callback_indirect";
end;

define C-function g-source-add-poll
  input parameter arg1 :: <GSource>;
  input parameter arg2 :: <GPollFD>;
  c-name: "g_source_add_poll";
end;

define C-function g-source-remove-poll
  input parameter arg1 :: <GSource>;
  input parameter arg2 :: <GPollFD>;
  c-name: "g_source_remove_poll";
end;

define C-function g-source-get-current-time
  input parameter arg1 :: <GSource>;
  input parameter arg2 :: <GTimeVal>;
  c-name: "g_source_get_current_time";
end;

define C-function g-idle-source-new
  result res :: <GSource>;
  c-name: "g_idle_source_new";
end;

define C-function g-child-watch-source-new
  input parameter arg1 :: <GPid>;
  result res :: <GSource>;
  c-name: "g_child_watch_source_new";
end;

define C-function g-timeout-source-new
  input parameter arg1 :: <guint>;
  result res :: <GSource>;
  c-name: "g_timeout_source_new";
end;

define C-function g-timeout-source-new-seconds
  input parameter arg1 :: <guint>;
  result res :: <GSource>;
  c-name: "g_timeout_source_new_seconds";
end;

define C-function g-get-current-time
  input parameter arg1 :: <GTimeVal>;
  c-name: "g_get_current_time";
end;

define C-function g-source-remove
  input parameter arg1 :: <guint>;
  result res :: <gboolean>;
  c-name: "g_source_remove";
end;

define C-function g-source-remove-by-user-data
  input parameter arg1 :: <gpointer>;
  result res :: <gboolean>;
  c-name: "g_source_remove_by_user_data";
end;

define C-function g-source-remove-by-funcs-user-data
  input parameter arg1 :: <GSourceFuncs>;
  input parameter arg2 :: <gpointer>;
  result res :: <gboolean>;
  c-name: "g_source_remove_by_funcs_user_data";
end;

define C-function g-timeout-add-full
  input parameter arg1 :: <gint>;
  input parameter arg2 :: <guint>;
  input parameter arg3 :: <GSourceFunc>;
  input parameter arg4 :: <gpointer>;
  input parameter arg5 :: <GDestroyNotify>;
  result res :: <guint>;
  c-name: "g_timeout_add_full";
end;

define C-function g-timeout-add
  input parameter arg1 :: <guint>;
  input parameter arg2 :: <GSourceFunc>;
  input parameter arg3 :: <gpointer>;
  result res :: <guint>;
  c-name: "g_timeout_add";
end;

define C-function g-timeout-add-seconds-full
  input parameter arg1 :: <gint>;
  input parameter arg2 :: <guint>;
  input parameter arg3 :: <GSourceFunc>;
  input parameter arg4 :: <gpointer>;
  input parameter arg5 :: <GDestroyNotify>;
  result res :: <guint>;
  c-name: "g_timeout_add_seconds_full";
end;

define C-function g-timeout-add-seconds
  input parameter arg1 :: <guint>;
  input parameter arg2 :: <GSourceFunc>;
  input parameter arg3 :: <gpointer>;
  result res :: <guint>;
  c-name: "g_timeout_add_seconds";
end;

define C-function g-child-watch-add-full
  input parameter arg1 :: <gint>;
  input parameter arg2 :: <GPid>;
  input parameter arg3 :: <GChildWatchFunc>;
  input parameter arg4 :: <gpointer>;
  input parameter arg5 :: <GDestroyNotify>;
  result res :: <guint>;
  c-name: "g_child_watch_add_full";
end;

define C-function g-child-watch-add
  input parameter arg1 :: <GPid>;
  input parameter arg2 :: <GChildWatchFunc>;
  input parameter arg3 :: <gpointer>;
  result res :: <guint>;
  c-name: "g_child_watch_add";
end;

define C-function g-idle-add
  input parameter arg1 :: <GSourceFunc>;
  input parameter arg2 :: <gpointer>;
  result res :: <guint>;
  c-name: "g_idle_add";
end;

define C-function g-idle-add-full
  input parameter arg1 :: <gint>;
  input parameter arg2 :: <GSourceFunc>;
  input parameter arg3 :: <gpointer>;
  input parameter arg4 :: <GDestroyNotify>;
  result res :: <guint>;
  c-name: "g_idle_add_full";
end;

define C-function g-idle-remove-by-data
  input parameter arg1 :: <gpointer>;
  result res :: <gboolean>;
  c-name: "g_idle_remove_by_data";
end;

 /* Ignoring declaration for {instance of <variable-declaration>} "g-timeout-funcs"*/
 /* Ignoring declaration for {instance of <variable-declaration>} "g-child-watch-funcs"*/
 /* Ignoring declaration for {instance of <variable-declaration>} "g-idle-funcs"*/
define constant $G-PRIORITY-HIGH = -100;

define constant $G-PRIORITY-DEFAULT = 0;

define constant $G-PRIORITY-HIGH-IDLE = 100;

define constant $G-PRIORITY-DEFAULT-IDLE = 200;

define constant $G-PRIORITY-LOW = 300;

define constant <GKeyFileError> = <C-int>;
define constant $G-KEY-FILE-ERROR-UNKNOWN-ENCODING = 0;
define constant $G-KEY-FILE-ERROR-PARSE = 1;
define constant $G-KEY-FILE-ERROR-NOT-FOUND = 2;
define constant $G-KEY-FILE-ERROR-KEY-NOT-FOUND = 3;
define constant $G-KEY-FILE-ERROR-GROUP-NOT-FOUND = 4;
define constant $G-KEY-FILE-ERROR-INVALID-VALUE = 5;

define C-function g-key-file-error-quark
  result res :: <GQuark>;
  c-name: "g_key_file_error_quark";
end;

define C-struct <_GKeyFile>
end;

define C-pointer-type <GKeyFile> => <_GKeyFile>;

define constant <GKeyFileFlags> = <C-int>;
define constant $G-KEY-FILE-NONE = 0;
define constant $G-KEY-FILE-KEEP-COMMENTS = 1;
define constant $G-KEY-FILE-KEEP-TRANSLATIONS = 2;

define C-function g-key-file-new
  result res :: <GKeyFile>;
  c-name: "g_key_file_new";
end;

define C-function g-key-file-free
  input parameter arg1 :: <GKeyFile>;
  c-name: "g_key_file_free";
end;

define C-function g-key-file-set-list-separator
  input parameter arg1 :: <GKeyFile>;
  input parameter arg2 :: <gchar>;
  c-name: "g_key_file_set_list_separator";
end;

define C-function g-key-file-load-from-file
  input parameter arg1 :: <GKeyFile>;
  input parameter arg2 :: <gchar*>;
  input parameter arg3 :: <GKeyFileFlags>;
  input parameter arg4 :: <GError*>;
  result res :: <gboolean>;
  c-name: "g_key_file_load_from_file";
end;

define C-function g-key-file-load-from-data
  input parameter arg1 :: <GKeyFile>;
  input parameter arg2 :: <gchar*>;
  input parameter arg3 :: <gsize>;
  input parameter arg4 :: <GKeyFileFlags>;
  input parameter arg5 :: <GError*>;
  result res :: <gboolean>;
  c-name: "g_key_file_load_from_data";
end;

define C-function g-key-file-load-from-dirs
  input parameter arg1 :: <GKeyFile>;
  input parameter arg2 :: <gchar*>;
  input parameter arg3 :: <gchar**>;
  input parameter arg4 :: <gchar**>;
  input parameter arg5 :: <GKeyFileFlags>;
  input parameter arg6 :: <GError*>;
  result res :: <gboolean>;
  c-name: "g_key_file_load_from_dirs";
end;

define C-function g-key-file-load-from-data-dirs
  input parameter arg1 :: <GKeyFile>;
  input parameter arg2 :: <gchar*>;
  input parameter arg3 :: <gchar**>;
  input parameter arg4 :: <GKeyFileFlags>;
  input parameter arg5 :: <GError*>;
  result res :: <gboolean>;
  c-name: "g_key_file_load_from_data_dirs";
end;

define C-function g-key-file-to-data
  input parameter arg1 :: <GKeyFile>;
  input parameter arg2 :: <gsize*>;
  input parameter arg3 :: <GError*>;
  result res :: <gchar*>;
  c-name: "g_key_file_to_data";
end;

define C-function g-key-file-get-start-group
  input parameter arg1 :: <GKeyFile>;
  result res :: <gchar*>;
  c-name: "g_key_file_get_start_group";
end;

define C-function g-key-file-get-groups
  input parameter arg1 :: <GKeyFile>;
  input parameter arg2 :: <gsize*>;
  result res :: <gchar**>;
  c-name: "g_key_file_get_groups";
end;

define C-function g-key-file-get-keys
  input parameter arg1 :: <GKeyFile>;
  input parameter arg2 :: <gchar*>;
  input parameter arg3 :: <gsize*>;
  input parameter arg4 :: <GError*>;
  result res :: <gchar**>;
  c-name: "g_key_file_get_keys";
end;

define C-function g-key-file-has-group
  input parameter arg1 :: <GKeyFile>;
  input parameter arg2 :: <gchar*>;
  result res :: <gboolean>;
  c-name: "g_key_file_has_group";
end;

define C-function g-key-file-has-key
  input parameter arg1 :: <GKeyFile>;
  input parameter arg2 :: <gchar*>;
  input parameter arg3 :: <gchar*>;
  input parameter arg4 :: <GError*>;
  result res :: <gboolean>;
  c-name: "g_key_file_has_key";
end;

define C-function g-key-file-get-value
  input parameter arg1 :: <GKeyFile>;
  input parameter arg2 :: <gchar*>;
  input parameter arg3 :: <gchar*>;
  input parameter arg4 :: <GError*>;
  result res :: <gchar*>;
  c-name: "g_key_file_get_value";
end;

define C-function g-key-file-set-value
  input parameter arg1 :: <GKeyFile>;
  input parameter arg2 :: <gchar*>;
  input parameter arg3 :: <gchar*>;
  input parameter arg4 :: <gchar*>;
  c-name: "g_key_file_set_value";
end;

define C-function g-key-file-get-string
  input parameter arg1 :: <GKeyFile>;
  input parameter arg2 :: <gchar*>;
  input parameter arg3 :: <gchar*>;
  input parameter arg4 :: <GError*>;
  result res :: <gchar*>;
  c-name: "g_key_file_get_string";
end;

define C-function g-key-file-set-string
  input parameter arg1 :: <GKeyFile>;
  input parameter arg2 :: <gchar*>;
  input parameter arg3 :: <gchar*>;
  input parameter arg4 :: <gchar*>;
  c-name: "g_key_file_set_string";
end;

define C-function g-key-file-get-locale-string
  input parameter arg1 :: <GKeyFile>;
  input parameter arg2 :: <gchar*>;
  input parameter arg3 :: <gchar*>;
  input parameter arg4 :: <gchar*>;
  input parameter arg5 :: <GError*>;
  result res :: <gchar*>;
  c-name: "g_key_file_get_locale_string";
end;

define C-function g-key-file-set-locale-string
  input parameter arg1 :: <GKeyFile>;
  input parameter arg2 :: <gchar*>;
  input parameter arg3 :: <gchar*>;
  input parameter arg4 :: <gchar*>;
  input parameter arg5 :: <gchar*>;
  c-name: "g_key_file_set_locale_string";
end;

define C-function g-key-file-get-boolean
  input parameter arg1 :: <GKeyFile>;
  input parameter arg2 :: <gchar*>;
  input parameter arg3 :: <gchar*>;
  input parameter arg4 :: <GError*>;
  result res :: <gboolean>;
  c-name: "g_key_file_get_boolean";
end;

define C-function g-key-file-set-boolean
  input parameter arg1 :: <GKeyFile>;
  input parameter arg2 :: <gchar*>;
  input parameter arg3 :: <gchar*>;
  input parameter arg4 :: <gboolean>;
  c-name: "g_key_file_set_boolean";
end;

define C-function g-key-file-get-integer
  input parameter arg1 :: <GKeyFile>;
  input parameter arg2 :: <gchar*>;
  input parameter arg3 :: <gchar*>;
  input parameter arg4 :: <GError*>;
  result res :: <gint>;
  c-name: "g_key_file_get_integer";
end;

define C-function g-key-file-set-integer
  input parameter arg1 :: <GKeyFile>;
  input parameter arg2 :: <gchar*>;
  input parameter arg3 :: <gchar*>;
  input parameter arg4 :: <gint>;
  c-name: "g_key_file_set_integer";
end;

define C-function g-key-file-get-double
  input parameter arg1 :: <GKeyFile>;
  input parameter arg2 :: <gchar*>;
  input parameter arg3 :: <gchar*>;
  input parameter arg4 :: <GError*>;
  result res :: <gdouble>;
  c-name: "g_key_file_get_double";
end;

define C-function g-key-file-set-double
  input parameter arg1 :: <GKeyFile>;
  input parameter arg2 :: <gchar*>;
  input parameter arg3 :: <gchar*>;
  input parameter arg4 :: <gdouble>;
  c-name: "g_key_file_set_double";
end;

define C-function g-key-file-get-string-list
  input parameter arg1 :: <GKeyFile>;
  input parameter arg2 :: <gchar*>;
  input parameter arg3 :: <gchar*>;
  input parameter arg4 :: <gsize*>;
  input parameter arg5 :: <GError*>;
  result res :: <gchar**>;
  c-name: "g_key_file_get_string_list";
end;

define constant <gchar*<@>> = <gchar**>;
define C-function g-key-file-set-string-list
  input parameter arg1 :: <GKeyFile>;
  input parameter arg2 :: <gchar*>;
  input parameter arg3 :: <gchar*>;
  input parameter arg4 :: <gchar*<@>>;
  input parameter arg5 :: <gsize>;
  c-name: "g_key_file_set_string_list";
end;

define C-function g-key-file-get-locale-string-list
  input parameter arg1 :: <GKeyFile>;
  input parameter arg2 :: <gchar*>;
  input parameter arg3 :: <gchar*>;
  input parameter arg4 :: <gchar*>;
  input parameter arg5 :: <gsize*>;
  input parameter arg6 :: <GError*>;
  result res :: <gchar**>;
  c-name: "g_key_file_get_locale_string_list";
end;

define C-function g-key-file-set-locale-string-list
  input parameter arg1 :: <GKeyFile>;
  input parameter arg2 :: <gchar*>;
  input parameter arg3 :: <gchar*>;
  input parameter arg4 :: <gchar*>;
  input parameter arg5 :: <gchar*<@>>;
  input parameter arg6 :: <gsize>;
  c-name: "g_key_file_set_locale_string_list";
end;

define C-function g-key-file-get-boolean-list
  input parameter arg1 :: <GKeyFile>;
  input parameter arg2 :: <gchar*>;
  input parameter arg3 :: <gchar*>;
  input parameter arg4 :: <gsize*>;
  input parameter arg5 :: <GError*>;
  result res :: <gboolean*>;
  c-name: "g_key_file_get_boolean_list";
end;

define constant <gboolean<@>> = <gboolean*>;
define C-function g-key-file-set-boolean-list
  input parameter arg1 :: <GKeyFile>;
  input parameter arg2 :: <gchar*>;
  input parameter arg3 :: <gchar*>;
  input parameter arg4 :: <gboolean<@>>;
  input parameter arg5 :: <gsize>;
  c-name: "g_key_file_set_boolean_list";
end;

define C-function g-key-file-get-integer-list
  input parameter arg1 :: <GKeyFile>;
  input parameter arg2 :: <gchar*>;
  input parameter arg3 :: <gchar*>;
  input parameter arg4 :: <gsize*>;
  input parameter arg5 :: <GError*>;
  result res :: <gint*>;
  c-name: "g_key_file_get_integer_list";
end;

define constant <gdouble<@>> = <gdouble*>;
define C-function g-key-file-set-double-list
  input parameter arg1 :: <GKeyFile>;
  input parameter arg2 :: <gchar*>;
  input parameter arg3 :: <gchar*>;
  input parameter arg4 :: <gdouble<@>>;
  input parameter arg5 :: <gsize>;
  c-name: "g_key_file_set_double_list";
end;

define C-function g-key-file-get-double-list
  input parameter arg1 :: <GKeyFile>;
  input parameter arg2 :: <gchar*>;
  input parameter arg3 :: <gchar*>;
  input parameter arg4 :: <gsize*>;
  input parameter arg5 :: <GError*>;
  result res :: <gdouble*>;
  c-name: "g_key_file_get_double_list";
end;

define constant <gint<@>> = <gint*>;
define C-function g-key-file-set-integer-list
  input parameter arg1 :: <GKeyFile>;
  input parameter arg2 :: <gchar*>;
  input parameter arg3 :: <gchar*>;
  input parameter arg4 :: <gint<@>>;
  input parameter arg5 :: <gsize>;
  c-name: "g_key_file_set_integer_list";
end;

define C-function g-key-file-set-comment
  input parameter arg1 :: <GKeyFile>;
  input parameter arg2 :: <gchar*>;
  input parameter arg3 :: <gchar*>;
  input parameter arg4 :: <gchar*>;
  input parameter arg5 :: <GError*>;
  c-name: "g_key_file_set_comment";
end;

define C-function g-key-file-get-comment
  input parameter arg1 :: <GKeyFile>;
  input parameter arg2 :: <gchar*>;
  input parameter arg3 :: <gchar*>;
  input parameter arg4 :: <GError*>;
  result res :: <gchar*>;
  c-name: "g_key_file_get_comment";
end;

define C-function g-key-file-remove-comment
  input parameter arg1 :: <GKeyFile>;
  input parameter arg2 :: <gchar*>;
  input parameter arg3 :: <gchar*>;
  input parameter arg4 :: <GError*>;
  c-name: "g_key_file_remove_comment";
end;

define C-function g-key-file-remove-key
  input parameter arg1 :: <GKeyFile>;
  input parameter arg2 :: <gchar*>;
  input parameter arg3 :: <gchar*>;
  input parameter arg4 :: <GError*>;
  c-name: "g_key_file_remove_key";
end;

define C-function g-key-file-remove-group
  input parameter arg1 :: <GKeyFile>;
  input parameter arg2 :: <gchar*>;
  input parameter arg3 :: <GError*>;
  c-name: "g_key_file_remove_group";
end;

define constant $G-KEY-FILE-DESKTOP-GROUP = "Desktop Entry";

define constant $G-KEY-FILE-DESKTOP-KEY-TYPE = "Type";

define constant $G-KEY-FILE-DESKTOP-KEY-VERSION = "Version";

define constant $G-KEY-FILE-DESKTOP-KEY-NAME = "Name";

define constant $G-KEY-FILE-DESKTOP-KEY-GENERIC-NAME = "GenericName";

define constant $G-KEY-FILE-DESKTOP-KEY-NO-DISPLAY = "NoDisplay";

define constant $G-KEY-FILE-DESKTOP-KEY-COMMENT = "Comment";

define constant $G-KEY-FILE-DESKTOP-KEY-ICON = "Icon";

define constant $G-KEY-FILE-DESKTOP-KEY-HIDDEN = "Hidden";

define constant $G-KEY-FILE-DESKTOP-KEY-ONLY-SHOW-IN = "OnlyShowIn";

define constant $G-KEY-FILE-DESKTOP-KEY-NOT-SHOW-IN = "NotShowIn";

define constant $G-KEY-FILE-DESKTOP-KEY-TRY-EXEC = "TryExec";

define constant $G-KEY-FILE-DESKTOP-KEY-EXEC = "Exec";

define constant $G-KEY-FILE-DESKTOP-KEY-PATH = "Path";

define constant $G-KEY-FILE-DESKTOP-KEY-TERMINAL = "Terminal";

define constant $G-KEY-FILE-DESKTOP-KEY-MIME-TYPE = "MimeType";

define constant $G-KEY-FILE-DESKTOP-KEY-CATEGORIES = "Categories";

define constant $G-KEY-FILE-DESKTOP-KEY-STARTUP-NOTIFY = "StartupNotify";

define constant $G-KEY-FILE-DESKTOP-KEY-STARTUP-WM-CLASS = "StartupWMClass";

define constant $G-KEY-FILE-DESKTOP-KEY-URL = "URL";

define constant $G-KEY-FILE-DESKTOP-TYPE-APPLICATION = "Application";

define constant $G-KEY-FILE-DESKTOP-TYPE-LINK = "Link";

define constant $G-KEY-FILE-DESKTOP-TYPE-DIRECTORY = "Directory";

define constant <GIOStatus> = <C-int>;
define constant $G-IO-STATUS-ERROR = 0;
define constant $G-IO-STATUS-NORMAL = 1;
define constant $G-IO-STATUS-EOF = 2;
define constant $G-IO-STATUS-AGAIN = 3;

define C-pointer-type <GIOChannel> => <_GIOChannel>;

define constant <anonymous-991> = <C-function-pointer>;
define constant <anonymous-992> = <C-function-pointer>;
define constant <GSeekType> = <C-int>;
define constant $G-SEEK-CUR = 0;
define constant $G-SEEK-SET = 1;
define constant $G-SEEK-END = 2;

define constant <anonymous-993> = <C-function-pointer>;
define constant <anonymous-994> = <C-function-pointer>;
define constant <GIOCondition> = <C-int>;
define constant $G-IO-IN = 1;
define constant $G-IO-OUT = 4;
define constant $G-IO-PRI = 2;
define constant $G-IO-ERR = 8;
define constant $G-IO-HUP = 16;
define constant $G-IO-NVAL = 32;

define constant <anonymous-995> = <C-function-pointer>;
define constant <anonymous-996> = <C-function-pointer>;
define constant <GIOFlags> = <C-int>;
define constant $G-IO-FLAG-APPEND = 1;
define constant $G-IO-FLAG-NONBLOCK = 2;
define constant $G-IO-FLAG-IS-READABLE = 4;
define constant $G-IO-FLAG-IS-WRITEABLE = 8;
define constant $G-IO-FLAG-IS-SEEKABLE = 16;
define constant $G-IO-FLAG-MASK = 31;
define constant $G-IO-FLAG-GET-MASK = 31;
define constant $G-IO-FLAG-SET-MASK = 3;

define constant <anonymous-997> = <C-function-pointer>;
define constant <anonymous-998> = <C-function-pointer>;
define C-struct <_GIOFuncs>
  slot GIOFuncs-io-read :: <anonymous-991>;
  slot GIOFuncs-io-write :: <anonymous-992>;
  slot GIOFuncs-io-seek :: <anonymous-993>;
  slot GIOFuncs-io-close :: <anonymous-994>;
  slot GIOFuncs-io-create-watch :: <anonymous-995>;
  slot GIOFuncs-io-free :: <anonymous-996>;
  slot GIOFuncs-io-set-flags :: <anonymous-997>;
  slot GIOFuncs-io-get-flags :: <anonymous-998>;
end;

define C-pointer-type <GIOFuncs> => <_GIOFuncs>;

define C-struct <_GIConv>
end;

define constant <GIConv> = <_GIConv>;

define constant <gchar<@6>> = <gchar*>;
define C-struct <_GIOChannel>
  slot GIOChannel-ref-count :: <C-signed-int>;
  slot GIOChannel-funcs :: <GIOFuncs>;
  slot GIOChannel-encoding :: <gchar*>;
  slot GIOChannel-read-cd :: <_GIConv>;
  slot GIOChannel-write-cd :: <_GIConv>;
  slot GIOChannel-line-term :: <gchar*>;
  slot GIOChannel-line-term-len :: <C-unsigned-int>;
  slot GIOChannel-buf-size :: <C-unsigned-int>;
  slot GIOChannel-read-buf :: <GString>;
  slot GIOChannel-encoded-read-buf :: <GString>;
  slot GIOChannel-write-buf :: <GString>;
  array slot GIOChannel-partial-write-buf :: <gchar>, length: 6;
  bitfield slot GIOChannel-use-buffer :: <C-int>, width: 1;
  bitfield slot GIOChannel-do-encode :: <C-int>, width: 1;
  bitfield slot GIOChannel-close-on-unref :: <C-int>, width: 1;
  bitfield slot GIOChannel-is-readable :: <C-int>, width: 1;
  bitfield slot GIOChannel-is-writeable :: <C-int>, width: 1;
  bitfield slot GIOChannel-is-seekable :: <C-int>, width: 1;
  slot GIOChannel-reserved1 :: <C-void*>;
  slot GIOChannel-reserved2 :: <C-void*>;
end;

define constant <GIOError> = <C-int>;
define constant $G-IO-ERROR-NONE = 0;
define constant $G-IO-ERROR-AGAIN = 1;
define constant $G-IO-ERROR-INVAL = 2;
define constant $G-IO-ERROR-UNKNOWN = 3;

define constant <GIOChannelError> = <C-int>;
define constant $G-IO-CHANNEL-ERROR-FBIG = 0;
define constant $G-IO-CHANNEL-ERROR-INVAL = 1;
define constant $G-IO-CHANNEL-ERROR-IO = 2;
define constant $G-IO-CHANNEL-ERROR-ISDIR = 3;
define constant $G-IO-CHANNEL-ERROR-NOSPC = 4;
define constant $G-IO-CHANNEL-ERROR-NXIO = 5;
define constant $G-IO-CHANNEL-ERROR-OVERFLOW = 6;
define constant $G-IO-CHANNEL-ERROR-PIPE = 7;
define constant $G-IO-CHANNEL-ERROR-FAILED = 8;

define constant <anonymous-990> = <C-function-pointer>;
define constant <GIOFunc> = <anonymous-990>;

define C-function g-io-channel-init
  input parameter arg1 :: <GIOChannel>;
  c-name: "g_io_channel_init";
end;

define C-function g-io-channel-ref
  input parameter arg1 :: <GIOChannel>;
  result res :: <GIOChannel>;
  c-name: "g_io_channel_ref";
end;

define C-function g-io-channel-unref
  input parameter arg1 :: <GIOChannel>;
  c-name: "g_io_channel_unref";
end;

define C-function g-io-channel-read
  input parameter arg1 :: <GIOChannel>;
  input parameter arg2 :: <gchar*>;
  input parameter arg3 :: <gsize>;
  input parameter arg4 :: <gsize*>;
  result res :: <GIOError>;
  c-name: "g_io_channel_read";
end;

define C-function g-io-channel-write
  input parameter arg1 :: <GIOChannel>;
  input parameter arg2 :: <gchar*>;
  input parameter arg3 :: <gsize>;
  input parameter arg4 :: <gsize*>;
  result res :: <GIOError>;
  c-name: "g_io_channel_write";
end;

define C-function g-io-channel-seek
  input parameter arg1 :: <GIOChannel>;
  input parameter arg2 :: <gint64>;
  input parameter arg3 :: <GSeekType>;
  result res :: <GIOError>;
  c-name: "g_io_channel_seek";
end;

define C-function g-io-channel-close
  input parameter arg1 :: <GIOChannel>;
  c-name: "g_io_channel_close";
end;

define C-function g-io-channel-shutdown
  input parameter arg1 :: <GIOChannel>;
  input parameter arg2 :: <gboolean>;
  input parameter arg3 :: <GError*>;
  result res :: <GIOStatus>;
  c-name: "g_io_channel_shutdown";
end;

define C-function g-io-add-watch-full
  input parameter arg1 :: <GIOChannel>;
  input parameter arg2 :: <gint>;
  input parameter arg3 :: <GIOCondition>;
  input parameter arg4 :: <GIOFunc>;
  input parameter arg5 :: <gpointer>;
  input parameter arg6 :: <GDestroyNotify>;
  result res :: <guint>;
  c-name: "g_io_add_watch_full";
end;

define C-function g-io-create-watch
  input parameter arg1 :: <GIOChannel>;
  input parameter arg2 :: <GIOCondition>;
  result res :: <GSource>;
  c-name: "g_io_create_watch";
end;

define C-function g-io-add-watch
  input parameter arg1 :: <GIOChannel>;
  input parameter arg2 :: <GIOCondition>;
  input parameter arg3 :: <GIOFunc>;
  input parameter arg4 :: <gpointer>;
  result res :: <guint>;
  c-name: "g_io_add_watch";
end;

define C-function g-io-channel-set-buffer-size
  input parameter arg1 :: <GIOChannel>;
  input parameter arg2 :: <gsize>;
  c-name: "g_io_channel_set_buffer_size";
end;

define C-function g-io-channel-get-buffer-size
  input parameter arg1 :: <GIOChannel>;
  result res :: <gsize>;
  c-name: "g_io_channel_get_buffer_size";
end;

define C-function g-io-channel-get-buffer-condition
  input parameter arg1 :: <GIOChannel>;
  result res :: <GIOCondition>;
  c-name: "g_io_channel_get_buffer_condition";
end;

define C-function g-io-channel-set-flags
  input parameter arg1 :: <GIOChannel>;
  input parameter arg2 :: <GIOFlags>;
  input parameter arg3 :: <GError*>;
  result res :: <GIOStatus>;
  c-name: "g_io_channel_set_flags";
end;

define C-function g-io-channel-get-flags
  input parameter arg1 :: <GIOChannel>;
  result res :: <GIOFlags>;
  c-name: "g_io_channel_get_flags";
end;

define C-function g-io-channel-set-line-term
  input parameter arg1 :: <GIOChannel>;
  input parameter arg2 :: <gchar*>;
  input parameter arg3 :: <gint>;
  c-name: "g_io_channel_set_line_term";
end;

define C-function g-io-channel-get-line-term
  input parameter arg1 :: <GIOChannel>;
  input parameter arg2 :: <gint*>;
  result res :: <gchar*>;
  c-name: "g_io_channel_get_line_term";
end;

define C-function g-io-channel-set-buffered
  input parameter arg1 :: <GIOChannel>;
  input parameter arg2 :: <gboolean>;
  c-name: "g_io_channel_set_buffered";
end;

define C-function g-io-channel-get-buffered
  input parameter arg1 :: <GIOChannel>;
  result res :: <gboolean>;
  c-name: "g_io_channel_get_buffered";
end;

define C-function g-io-channel-set-encoding
  input parameter arg1 :: <GIOChannel>;
  input parameter arg2 :: <gchar*>;
  input parameter arg3 :: <GError*>;
  result res :: <GIOStatus>;
  c-name: "g_io_channel_set_encoding";
end;

define C-function g-io-channel-get-encoding
  input parameter arg1 :: <GIOChannel>;
  result res :: <gchar*>;
  c-name: "g_io_channel_get_encoding";
end;

define C-function g-io-channel-set-close-on-unref
  input parameter arg1 :: <GIOChannel>;
  input parameter arg2 :: <gboolean>;
  c-name: "g_io_channel_set_close_on_unref";
end;

define C-function g-io-channel-get-close-on-unref
  input parameter arg1 :: <GIOChannel>;
  result res :: <gboolean>;
  c-name: "g_io_channel_get_close_on_unref";
end;

define C-function g-io-channel-flush
  input parameter arg1 :: <GIOChannel>;
  input parameter arg2 :: <GError*>;
  result res :: <GIOStatus>;
  c-name: "g_io_channel_flush";
end;

define C-function g-io-channel-read-line
  input parameter arg1 :: <GIOChannel>;
  input parameter arg2 :: <gchar**>;
  input parameter arg3 :: <gsize*>;
  input parameter arg4 :: <gsize*>;
  input parameter arg5 :: <GError*>;
  result res :: <GIOStatus>;
  c-name: "g_io_channel_read_line";
end;

define C-function g-io-channel-read-line-string
  input parameter arg1 :: <GIOChannel>;
  input parameter arg2 :: <GString>;
  input parameter arg3 :: <gsize*>;
  input parameter arg4 :: <GError*>;
  result res :: <GIOStatus>;
  c-name: "g_io_channel_read_line_string";
end;

define C-function g-io-channel-read-to-end
  input parameter arg1 :: <GIOChannel>;
  input parameter arg2 :: <gchar**>;
  input parameter arg3 :: <gsize*>;
  input parameter arg4 :: <GError*>;
  result res :: <GIOStatus>;
  c-name: "g_io_channel_read_to_end";
end;

define C-function g-io-channel-read-chars
  input parameter arg1 :: <GIOChannel>;
  input parameter arg2 :: <gchar*>;
  input parameter arg3 :: <gsize>;
  input parameter arg4 :: <gsize*>;
  input parameter arg5 :: <GError*>;
  result res :: <GIOStatus>;
  c-name: "g_io_channel_read_chars";
end;

define C-function g-io-channel-read-unichar
  input parameter arg1 :: <GIOChannel>;
  input parameter arg2 :: <gunichar*>;
  input parameter arg3 :: <GError*>;
  result res :: <GIOStatus>;
  c-name: "g_io_channel_read_unichar";
end;

define C-function g-io-channel-write-chars
  input parameter arg1 :: <GIOChannel>;
  input parameter arg2 :: <gchar*>;
  input parameter arg3 :: <gssize>;
  input parameter arg4 :: <gsize*>;
  input parameter arg5 :: <GError*>;
  result res :: <GIOStatus>;
  c-name: "g_io_channel_write_chars";
end;

define C-function g-io-channel-write-unichar
  input parameter arg1 :: <GIOChannel>;
  input parameter arg2 :: <gunichar>;
  input parameter arg3 :: <GError*>;
  result res :: <GIOStatus>;
  c-name: "g_io_channel_write_unichar";
end;

define C-function g-io-channel-seek-position
  input parameter arg1 :: <GIOChannel>;
  input parameter arg2 :: <gint64>;
  input parameter arg3 :: <GSeekType>;
  input parameter arg4 :: <GError*>;
  result res :: <GIOStatus>;
  c-name: "g_io_channel_seek_position";
end;

define C-function g-io-channel-new-file
  input parameter arg1 :: <gchar*>;
  input parameter arg2 :: <gchar*>;
  input parameter arg3 :: <GError*>;
  result res :: <GIOChannel>;
  c-name: "g_io_channel_new_file";
end;

define C-function g-io-channel-error-quark
  result res :: <GQuark>;
  c-name: "g_io_channel_error_quark";
end;

define C-function g-io-channel-error-from-errno
  input parameter arg1 :: <gint>;
  result res :: <GIOChannelError>;
  c-name: "g_io_channel_error_from_errno";
end;

define C-function g-io-channel-unix-new
  input parameter arg1 :: <C-signed-int>;
  result res :: <GIOChannel>;
  c-name: "g_io_channel_unix_new";
end;

define C-function g-io-channel-unix-get-fd
  input parameter arg1 :: <GIOChannel>;
  result res :: <gint>;
  c-name: "g_io_channel_unix_get_fd";
end;

 /* Ignoring declaration for {instance of <variable-declaration>} "g-io-watch-funcs"*/
define constant <GConvertError> = <C-int>;
define constant $G-CONVERT-ERROR-NO-CONVERSION = 0;
define constant $G-CONVERT-ERROR-ILLEGAL-SEQUENCE = 1;
define constant $G-CONVERT-ERROR-FAILED = 2;
define constant $G-CONVERT-ERROR-PARTIAL-INPUT = 3;
define constant $G-CONVERT-ERROR-BAD-URI = 4;
define constant $G-CONVERT-ERROR-NOT-ABSOLUTE-PATH = 5;

define C-function g-convert-error-quark
  result res :: <GQuark>;
  c-name: "g_convert_error_quark";
end;

define C-function g-iconv-open
  input parameter arg1 :: <gchar*>;
  input parameter arg2 :: <gchar*>;
  result res :: <GIConv>;
  c-name: "g_iconv_open";
end;

define C-function g-iconv
  input parameter arg1 :: <GIConv>;
  input parameter arg2 :: <gchar**>;
  input parameter arg3 :: <gsize*>;
  input parameter arg4 :: <gchar**>;
  input parameter arg5 :: <gsize*>;
  result res :: <gsize>;
  c-name: "g_iconv";
end;

define C-function g-iconv-close
  input parameter arg1 :: <GIConv>;
  result res :: <gint>;
  c-name: "g_iconv_close";
end;

define C-function g-convert
  input parameter arg1 :: <gchar*>;
  input parameter arg2 :: <gssize>;
  input parameter arg3 :: <gchar*>;
  input parameter arg4 :: <gchar*>;
  input parameter arg5 :: <gsize*>;
  input parameter arg6 :: <gsize*>;
  input parameter arg7 :: <GError*>;
  result res :: <gchar*>;
  c-name: "g_convert";
end;

define C-function g-convert-with-iconv
  input parameter arg1 :: <gchar*>;
  input parameter arg2 :: <gssize>;
  input parameter arg3 :: <GIConv>;
  input parameter arg4 :: <gsize*>;
  input parameter arg5 :: <gsize*>;
  input parameter arg6 :: <GError*>;
  result res :: <gchar*>;
  c-name: "g_convert_with_iconv";
end;

define C-function g-convert-with-fallback
  input parameter arg1 :: <gchar*>;
  input parameter arg2 :: <gssize>;
  input parameter arg3 :: <gchar*>;
  input parameter arg4 :: <gchar*>;
  input parameter arg5 :: <gchar*>;
  input parameter arg6 :: <gsize*>;
  input parameter arg7 :: <gsize*>;
  input parameter arg8 :: <GError*>;
  result res :: <gchar*>;
  c-name: "g_convert_with_fallback";
end;

define C-function g-locale-to-utf8
  input parameter arg1 :: <gchar*>;
  input parameter arg2 :: <gssize>;
  input parameter arg3 :: <gsize*>;
  input parameter arg4 :: <gsize*>;
  input parameter arg5 :: <GError*>;
  result res :: <gchar*>;
  c-name: "g_locale_to_utf8";
end;

define C-function g-locale-from-utf8
  input parameter arg1 :: <gchar*>;
  input parameter arg2 :: <gssize>;
  input parameter arg3 :: <gsize*>;
  input parameter arg4 :: <gsize*>;
  input parameter arg5 :: <GError*>;
  result res :: <gchar*>;
  c-name: "g_locale_from_utf8";
end;

define C-function g-filename-to-utf8
  input parameter arg1 :: <gchar*>;
  input parameter arg2 :: <gssize>;
  input parameter arg3 :: <gsize*>;
  input parameter arg4 :: <gsize*>;
  input parameter arg5 :: <GError*>;
  result res :: <gchar*>;
  c-name: "g_filename_to_utf8";
end;

define C-function g-filename-from-utf8
  input parameter arg1 :: <gchar*>;
  input parameter arg2 :: <gssize>;
  input parameter arg3 :: <gsize*>;
  input parameter arg4 :: <gsize*>;
  input parameter arg5 :: <GError*>;
  result res :: <gchar*>;
  c-name: "g_filename_from_utf8";
end;

define C-function g-filename-from-uri
  input parameter arg1 :: <gchar*>;
  input parameter arg2 :: <gchar**>;
  input parameter arg3 :: <GError*>;
  result res :: <gchar*>;
  c-name: "g_filename_from_uri";
end;

define C-function g-filename-to-uri
  input parameter arg1 :: <gchar*>;
  input parameter arg2 :: <gchar*>;
  input parameter arg3 :: <GError*>;
  result res :: <gchar*>;
  c-name: "g_filename_to_uri";
end;

define C-function g-filename-display-name
  input parameter arg1 :: <gchar*>;
  result res :: <gchar*>;
  c-name: "g_filename_display_name";
end;

define C-function g-get-filename-charsets
  input parameter arg1 :: <gchar***>;
  result res :: <gboolean>;
  c-name: "g_get_filename_charsets";
end;

define C-function g-filename-display-basename
  input parameter arg1 :: <gchar*>;
  result res :: <gchar*>;
  c-name: "g_filename_display_basename";
end;

define C-function g-uri-list-extract-uris
  input parameter arg1 :: <gchar*>;
  result res :: <gchar**>;
  c-name: "g_uri_list_extract_uris";
end;

define C-pointer-type <GHook> => <_GHook>;

define C-struct <_GHook>
  slot GHook-data :: <C-void*>;
  slot GHook-next :: <GHook>;
  slot GHook-prev :: <GHook>;
  slot GHook-ref-count :: <C-unsigned-int>;
  slot GHook-hook-id :: <C-unsigned-long>;
  slot GHook-flags :: <C-unsigned-int>;
  slot GHook-func :: <C-void*>;
  slot GHook-destroy :: <anonymous-223>;
end;

define C-pointer-type <GHookList> => <_GHookList>;

define constant <anonymous-742> = <C-function-pointer>;
define constant <GHookFinalizeFunc> = <anonymous-742>;

define constant <gpointer<@2>> = <gpointer*>;
define C-struct <_GHookList>
  slot GHookList-seq-id :: <C-unsigned-long>;
  bitfield slot GHookList-hook-size :: <C-int>, width: 16;
  bitfield slot GHookList-is-setup :: <C-int>, width: 1;
  slot GHookList-hooks :: <GHook>;
  slot GHookList-dummy3 :: <C-void*>;
  slot GHookList-finalize-hook :: <anonymous-742>;
  array slot GHookList-dummy :: <gpointer>, length: 2;
end;

define constant <anonymous-736> = <C-function-pointer>;
define constant <GHookCompareFunc> = <anonymous-736>;

define constant <anonymous-737> = <C-function-pointer>;
define constant <GHookFindFunc> = <anonymous-737>;

define constant <anonymous-738> = <C-function-pointer>;
define constant <GHookMarshaller> = <anonymous-738>;

define constant <anonymous-739> = <C-function-pointer>;
define constant <GHookCheckMarshaller> = <anonymous-739>;

define constant <anonymous-740> = <C-function-pointer>;
define constant <GHookFunc> = <anonymous-740>;

define constant <anonymous-741> = <C-function-pointer>;
define constant <GHookCheckFunc> = <anonymous-741>;

define constant <GHookFlagMask> = <C-int>;
define constant $G-HOOK-FLAG-ACTIVE = 1;
define constant $G-HOOK-FLAG-IN-CALL = 2;
define constant $G-HOOK-FLAG-MASK = 15;

define C-function g-hook-list-init
  input parameter arg1 :: <GHookList>;
  input parameter arg2 :: <guint>;
  c-name: "g_hook_list_init";
end;

define C-function g-hook-list-clear
  input parameter arg1 :: <GHookList>;
  c-name: "g_hook_list_clear";
end;

define C-function g-hook-alloc
  input parameter arg1 :: <GHookList>;
  result res :: <GHook>;
  c-name: "g_hook_alloc";
end;

define C-function g-hook-free
  input parameter arg1 :: <GHookList>;
  input parameter arg2 :: <GHook>;
  c-name: "g_hook_free";
end;

define C-function g-hook-ref
  input parameter arg1 :: <GHookList>;
  input parameter arg2 :: <GHook>;
  result res :: <GHook>;
  c-name: "g_hook_ref";
end;

define C-function g-hook-unref
  input parameter arg1 :: <GHookList>;
  input parameter arg2 :: <GHook>;
  c-name: "g_hook_unref";
end;

define C-function g-hook-destroy
  input parameter arg1 :: <GHookList>;
  input parameter arg2 :: <gulong>;
  result res :: <gboolean>;
  c-name: "g_hook_destroy";
end;

define C-function g-hook-destroy-link
  input parameter arg1 :: <GHookList>;
  input parameter arg2 :: <GHook>;
  c-name: "g_hook_destroy_link";
end;

define C-function g-hook-prepend
  input parameter arg1 :: <GHookList>;
  input parameter arg2 :: <GHook>;
  c-name: "g_hook_prepend";
end;

define C-function g-hook-insert-before
  input parameter arg1 :: <GHookList>;
  input parameter arg2 :: <GHook>;
  input parameter arg3 :: <GHook>;
  c-name: "g_hook_insert_before";
end;

define C-function g-hook-insert-sorted
  input parameter arg1 :: <GHookList>;
  input parameter arg2 :: <GHook>;
  input parameter arg3 :: <GHookCompareFunc>;
  c-name: "g_hook_insert_sorted";
end;

define C-function g-hook-get
  input parameter arg1 :: <GHookList>;
  input parameter arg2 :: <gulong>;
  result res :: <GHook>;
  c-name: "g_hook_get";
end;

define C-function g-hook-find
  input parameter arg1 :: <GHookList>;
  input parameter arg2 :: <gboolean>;
  input parameter arg3 :: <GHookFindFunc>;
  input parameter arg4 :: <gpointer>;
  result res :: <GHook>;
  c-name: "g_hook_find";
end;

define C-function g-hook-find-data
  input parameter arg1 :: <GHookList>;
  input parameter arg2 :: <gboolean>;
  input parameter arg3 :: <gpointer>;
  result res :: <GHook>;
  c-name: "g_hook_find_data";
end;

define C-function g-hook-find-func
  input parameter arg1 :: <GHookList>;
  input parameter arg2 :: <gboolean>;
  input parameter arg3 :: <gpointer>;
  result res :: <GHook>;
  c-name: "g_hook_find_func";
end;

define C-function g-hook-find-func-data
  input parameter arg1 :: <GHookList>;
  input parameter arg2 :: <gboolean>;
  input parameter arg3 :: <gpointer>;
  input parameter arg4 :: <gpointer>;
  result res :: <GHook>;
  c-name: "g_hook_find_func_data";
end;

define C-function g-hook-first-valid
  input parameter arg1 :: <GHookList>;
  input parameter arg2 :: <gboolean>;
  result res :: <GHook>;
  c-name: "g_hook_first_valid";
end;

define C-function g-hook-next-valid
  input parameter arg1 :: <GHookList>;
  input parameter arg2 :: <GHook>;
  input parameter arg3 :: <gboolean>;
  result res :: <GHook>;
  c-name: "g_hook_next_valid";
end;

define C-function g-hook-compare-ids
  input parameter arg1 :: <GHook>;
  input parameter arg2 :: <GHook>;
  result res :: <gint>;
  c-name: "g_hook_compare_ids";
end;

define C-function g-hook-list-invoke
  input parameter arg1 :: <GHookList>;
  input parameter arg2 :: <gboolean>;
  c-name: "g_hook_list_invoke";
end;

define C-function g-hook-list-invoke-check
  input parameter arg1 :: <GHookList>;
  input parameter arg2 :: <gboolean>;
  c-name: "g_hook_list_invoke_check";
end;

define C-function g-hook-list-marshal
  input parameter arg1 :: <GHookList>;
  input parameter arg2 :: <gboolean>;
  input parameter arg3 :: <GHookMarshaller>;
  input parameter arg4 :: <gpointer>;
  c-name: "g_hook_list_marshal";
end;

define C-function g-hook-list-marshal-check
  input parameter arg1 :: <GHookList>;
  input parameter arg2 :: <gboolean>;
  input parameter arg3 :: <GHookCheckMarshaller>;
  input parameter arg4 :: <gpointer>;
  c-name: "g_hook_list_marshal_check";
end;

define constant $G-HOOK-FLAG-USER-SHIFT = 4;

define constant <GFileError> = <C-int>;
define constant $G-FILE-ERROR-EXIST = 0;
define constant $G-FILE-ERROR-ISDIR = 1;
define constant $G-FILE-ERROR-ACCES = 2;
define constant $G-FILE-ERROR-NAMETOOLONG = 3;
define constant $G-FILE-ERROR-NOENT = 4;
define constant $G-FILE-ERROR-NOTDIR = 5;
define constant $G-FILE-ERROR-NXIO = 6;
define constant $G-FILE-ERROR-NODEV = 7;
define constant $G-FILE-ERROR-ROFS = 8;
define constant $G-FILE-ERROR-TXTBSY = 9;
define constant $G-FILE-ERROR-FAULT = 10;
define constant $G-FILE-ERROR-LOOP = 11;
define constant $G-FILE-ERROR-NOSPC = 12;
define constant $G-FILE-ERROR-NOMEM = 13;
define constant $G-FILE-ERROR-MFILE = 14;
define constant $G-FILE-ERROR-NFILE = 15;
define constant $G-FILE-ERROR-BADF = 16;
define constant $G-FILE-ERROR-INVAL = 17;
define constant $G-FILE-ERROR-PIPE = 18;
define constant $G-FILE-ERROR-AGAIN = 19;
define constant $G-FILE-ERROR-INTR = 20;
define constant $G-FILE-ERROR-IO = 21;
define constant $G-FILE-ERROR-PERM = 22;
define constant $G-FILE-ERROR-NOSYS = 23;
define constant $G-FILE-ERROR-FAILED = 24;

define constant <GFileTest> = <C-int>;
define constant $G-FILE-TEST-IS-REGULAR = 1;
define constant $G-FILE-TEST-IS-SYMLINK = 2;
define constant $G-FILE-TEST-IS-DIR = 4;
define constant $G-FILE-TEST-IS-EXECUTABLE = 8;
define constant $G-FILE-TEST-EXISTS = 16;

define C-function g-file-error-quark
  result res :: <GQuark>;
  c-name: "g_file_error_quark";
end;

define C-function g-file-error-from-errno
  input parameter arg1 :: <gint>;
  result res :: <GFileError>;
  c-name: "g_file_error_from_errno";
end;

define C-function g-file-test
  input parameter arg1 :: <gchar*>;
  input parameter arg2 :: <GFileTest>;
  result res :: <gboolean>;
  c-name: "g_file_test";
end;

define C-function g-file-get-contents
  input parameter arg1 :: <gchar*>;
  input parameter arg2 :: <gchar**>;
  input parameter arg3 :: <gsize*>;
  input parameter arg4 :: <GError*>;
  result res :: <gboolean>;
  c-name: "g_file_get_contents";
end;

define C-function g-file-set-contents
  input parameter arg1 :: <gchar*>;
  input parameter arg2 :: <gchar*>;
  input parameter arg3 :: <gssize>;
  input parameter arg4 :: <GError*>;
  result res :: <gboolean>;
  c-name: "g_file_set_contents";
end;

define C-function g-file-read-link
  input parameter arg1 :: <gchar*>;
  input parameter arg2 :: <GError*>;
  result res :: <gchar*>;
  c-name: "g_file_read_link";
end;

define C-function g-mkstemp
  input parameter arg1 :: <gchar*>;
  result res :: <gint>;
  c-name: "g_mkstemp";
end;

define C-function g-file-open-tmp
  input parameter arg1 :: <gchar*>;
  input parameter arg2 :: <gchar**>;
  input parameter arg3 :: <GError*>;
  result res :: <gint>;
  c-name: "g_file_open_tmp";
end;

define C-function g-build-path
  input parameter arg1 :: <gchar*>;
  input parameter arg2 :: <gchar*>;
  result res :: <gchar*>;
  c-name: "g_build_path";
end;

define C-function g-build-pathv
  input parameter arg1 :: <gchar*>;
  input parameter arg2 :: <gchar**>;
  result res :: <gchar*>;
  c-name: "g_build_pathv";
end;

define C-function g-build-filename
  input parameter arg1 :: <gchar*>;
  result res :: <gchar*>;
  c-name: "g_build_filename";
end;

define C-function g-build-filenamev
  input parameter arg1 :: <gchar**>;
  result res :: <gchar*>;
  c-name: "g_build_filenamev";
end;

define C-function g-mkdir-with-parents
  input parameter arg1 :: <gchar*>;
  input parameter arg2 :: <C-signed-int>;
  result res :: <C-signed-int>;
  c-name: "g_mkdir_with_parents";
end;

define C-struct <_GDir>
end;

define C-pointer-type <GDir> => <_GDir>;

define C-function g-dir-open
  input parameter arg1 :: <gchar*>;
  input parameter arg2 :: <guint>;
  input parameter arg3 :: <GError*>;
  result res :: <GDir>;
  c-name: "g_dir_open";
end;

define C-function g-dir-read-name
  input parameter arg1 :: <GDir>;
  result res :: <gchar*>;
  c-name: "g_dir_read_name";
end;

define C-function g-dir-rewind
  input parameter arg1 :: <GDir>;
  c-name: "g_dir_rewind";
end;

define C-function g-dir-close
  input parameter arg1 :: <GDir>;
  c-name: "g_dir_close";
end;

define constant <GTime> = <gint32>;

define constant <GDateYear> = <guint16>;

define constant <GDateDay> = <guint8>;

define C-struct <_GDate>
  bitfield slot GDate-julian-days :: <C-int>, width: 32;
  bitfield slot GDate-julian :: <C-int>, width: 1;
  bitfield slot GDate-dmy :: <C-int>, width: 1;
  bitfield slot GDate-day :: <C-int>, width: 6;
  bitfield slot GDate-month :: <C-int>, width: 4;
  bitfield slot GDate-year :: <C-int>, width: 16;
end;

define C-pointer-type <GDate> => <_GDate>;

define constant <GDateDMY> = <C-int>;
define constant $G-DATE-DAY = 0;
define constant $G-DATE-MONTH = 1;
define constant $G-DATE-YEAR = 2;

define constant <GDateWeekday> = <C-int>;
define constant $G-DATE-BAD-WEEKDAY = 0;
define constant $G-DATE-MONDAY = 1;
define constant $G-DATE-TUESDAY = 2;
define constant $G-DATE-WEDNESDAY = 3;
define constant $G-DATE-THURSDAY = 4;
define constant $G-DATE-FRIDAY = 5;
define constant $G-DATE-SATURDAY = 6;
define constant $G-DATE-SUNDAY = 7;

define constant <GDateMonth> = <C-int>;
define constant $G-DATE-BAD-MONTH = 0;
define constant $G-DATE-JANUARY = 1;
define constant $G-DATE-FEBRUARY = 2;
define constant $G-DATE-MARCH = 3;
define constant $G-DATE-APRIL = 4;
define constant $G-DATE-MAY = 5;
define constant $G-DATE-JUNE = 6;
define constant $G-DATE-JULY = 7;
define constant $G-DATE-AUGUST = 8;
define constant $G-DATE-SEPTEMBER = 9;
define constant $G-DATE-OCTOBER = 10;
define constant $G-DATE-NOVEMBER = 11;
define constant $G-DATE-DECEMBER = 12;

define C-function g-date-new
  result res :: <GDate>;
  c-name: "g_date_new";
end;

define C-function g-date-new-dmy
  input parameter arg1 :: <GDateDay>;
  input parameter arg2 :: <GDateMonth>;
  input parameter arg3 :: <GDateYear>;
  result res :: <GDate>;
  c-name: "g_date_new_dmy";
end;

define C-function g-date-new-julian
  input parameter arg1 :: <guint32>;
  result res :: <GDate>;
  c-name: "g_date_new_julian";
end;

define C-function g-date-free
  input parameter arg1 :: <GDate>;
  c-name: "g_date_free";
end;

define C-function g-date-valid
  input parameter arg1 :: <GDate>;
  result res :: <gboolean>;
  c-name: "g_date_valid";
end;

define C-function g-date-valid-day
  input parameter arg1 :: <GDateDay>;
  result res :: <gboolean>;
  c-name: "g_date_valid_day";
end;

define C-function g-date-valid-month
  input parameter arg1 :: <GDateMonth>;
  result res :: <gboolean>;
  c-name: "g_date_valid_month";
end;

define C-function g-date-valid-year
  input parameter arg1 :: <GDateYear>;
  result res :: <gboolean>;
  c-name: "g_date_valid_year";
end;

define C-function g-date-valid-weekday
  input parameter arg1 :: <GDateWeekday>;
  result res :: <gboolean>;
  c-name: "g_date_valid_weekday";
end;

define C-function g-date-valid-julian
  input parameter arg1 :: <guint32>;
  result res :: <gboolean>;
  c-name: "g_date_valid_julian";
end;

define C-function g-date-valid-dmy
  input parameter arg1 :: <GDateDay>;
  input parameter arg2 :: <GDateMonth>;
  input parameter arg3 :: <GDateYear>;
  result res :: <gboolean>;
  c-name: "g_date_valid_dmy";
end;

define C-function g-date-get-weekday
  input parameter arg1 :: <GDate>;
  result res :: <GDateWeekday>;
  c-name: "g_date_get_weekday";
end;

define C-function g-date-get-month
  input parameter arg1 :: <GDate>;
  result res :: <GDateMonth>;
  c-name: "g_date_get_month";
end;

define C-function g-date-get-year
  input parameter arg1 :: <GDate>;
  result res :: <GDateYear>;
  c-name: "g_date_get_year";
end;

define C-function g-date-get-day
  input parameter arg1 :: <GDate>;
  result res :: <GDateDay>;
  c-name: "g_date_get_day";
end;

define C-function g-date-get-julian
  input parameter arg1 :: <GDate>;
  result res :: <guint32>;
  c-name: "g_date_get_julian";
end;

define C-function g-date-get-day-of-year
  input parameter arg1 :: <GDate>;
  result res :: <guint>;
  c-name: "g_date_get_day_of_year";
end;

define C-function g-date-get-monday-week-of-year
  input parameter arg1 :: <GDate>;
  result res :: <guint>;
  c-name: "g_date_get_monday_week_of_year";
end;

define C-function g-date-get-sunday-week-of-year
  input parameter arg1 :: <GDate>;
  result res :: <guint>;
  c-name: "g_date_get_sunday_week_of_year";
end;

define C-function g-date-get-iso8601-week-of-year
  input parameter arg1 :: <GDate>;
  result res :: <guint>;
  c-name: "g_date_get_iso8601_week_of_year";
end;

define C-function g-date-clear
  input parameter arg1 :: <GDate>;
  input parameter arg2 :: <guint>;
  c-name: "g_date_clear";
end;

define C-function g-date-set-parse
  input parameter arg1 :: <GDate>;
  input parameter arg2 :: <gchar*>;
  c-name: "g_date_set_parse";
end;

define constant <__time-t> = <C-signed-long>;

define constant <time-t> = <__time-t>;

define C-function g-date-set-time-t
  input parameter arg1 :: <GDate>;
  input parameter arg2 :: <time-t>;
  c-name: "g_date_set_time_t";
end;

define C-function g-date-set-time-val
  input parameter arg1 :: <GDate>;
  input parameter arg2 :: <GTimeVal>;
  c-name: "g_date_set_time_val";
end;

define C-function g-date-set-time
  input parameter arg1 :: <GDate>;
  input parameter arg2 :: <GTime>;
  c-name: "g_date_set_time";
end;

define C-function g-date-set-month
  input parameter arg1 :: <GDate>;
  input parameter arg2 :: <GDateMonth>;
  c-name: "g_date_set_month";
end;

define C-function g-date-set-day
  input parameter arg1 :: <GDate>;
  input parameter arg2 :: <GDateDay>;
  c-name: "g_date_set_day";
end;

define C-function g-date-set-year
  input parameter arg1 :: <GDate>;
  input parameter arg2 :: <GDateYear>;
  c-name: "g_date_set_year";
end;

define C-function g-date-set-dmy
  input parameter arg1 :: <GDate>;
  input parameter arg2 :: <GDateDay>;
  input parameter arg3 :: <GDateMonth>;
  input parameter arg4 :: <GDateYear>;
  c-name: "g_date_set_dmy";
end;

define C-function g-date-set-julian
  input parameter arg1 :: <GDate>;
  input parameter arg2 :: <guint32>;
  c-name: "g_date_set_julian";
end;

define C-function g-date-is-first-of-month
  input parameter arg1 :: <GDate>;
  result res :: <gboolean>;
  c-name: "g_date_is_first_of_month";
end;

define C-function g-date-is-last-of-month
  input parameter arg1 :: <GDate>;
  result res :: <gboolean>;
  c-name: "g_date_is_last_of_month";
end;

define C-function g-date-add-days
  input parameter arg1 :: <GDate>;
  input parameter arg2 :: <guint>;
  c-name: "g_date_add_days";
end;

define C-function g-date-subtract-days
  input parameter arg1 :: <GDate>;
  input parameter arg2 :: <guint>;
  c-name: "g_date_subtract_days";
end;

define C-function g-date-add-months
  input parameter arg1 :: <GDate>;
  input parameter arg2 :: <guint>;
  c-name: "g_date_add_months";
end;

define C-function g-date-subtract-months
  input parameter arg1 :: <GDate>;
  input parameter arg2 :: <guint>;
  c-name: "g_date_subtract_months";
end;

define C-function g-date-add-years
  input parameter arg1 :: <GDate>;
  input parameter arg2 :: <guint>;
  c-name: "g_date_add_years";
end;

define C-function g-date-subtract-years
  input parameter arg1 :: <GDate>;
  input parameter arg2 :: <guint>;
  c-name: "g_date_subtract_years";
end;

define C-function g-date-is-leap-year
  input parameter arg1 :: <GDateYear>;
  result res :: <gboolean>;
  c-name: "g_date_is_leap_year";
end;

define C-function g-date-get-days-in-month
  input parameter arg1 :: <GDateMonth>;
  input parameter arg2 :: <GDateYear>;
  result res :: <guint8>;
  c-name: "g_date_get_days_in_month";
end;

define C-function g-date-get-monday-weeks-in-year
  input parameter arg1 :: <GDateYear>;
  result res :: <guint8>;
  c-name: "g_date_get_monday_weeks_in_year";
end;

define C-function g-date-get-sunday-weeks-in-year
  input parameter arg1 :: <GDateYear>;
  result res :: <guint8>;
  c-name: "g_date_get_sunday_weeks_in_year";
end;

define C-function g-date-days-between
  input parameter arg1 :: <GDate>;
  input parameter arg2 :: <GDate>;
  result res :: <gint>;
  c-name: "g_date_days_between";
end;

define C-function g-date-compare
  input parameter arg1 :: <GDate>;
  input parameter arg2 :: <GDate>;
  result res :: <gint>;
  c-name: "g_date_compare";
end;

define C-struct <tm>
  slot m-tm-sec :: <C-signed-int>;
  slot m-tm-min :: <C-signed-int>;
  slot m-tm-hour :: <C-signed-int>;
  slot m-tm-mday :: <C-signed-int>;
  slot m-tm-mon :: <C-signed-int>;
  slot m-tm-year :: <C-signed-int>;
  slot m-tm-wday :: <C-signed-int>;
  slot m-tm-yday :: <C-signed-int>;
  slot m-tm-isdst :: <C-signed-int>;
  slot m-tm-gmtoff :: <C-signed-long>;
  slot m-tm-zone :: <char*>;
end;

define C-function g-date-to-struct-tm
  input parameter arg1 :: <GDate>;
  input parameter arg2 :: <tm>;
  c-name: "g_date_to_struct_tm";
end;

define C-function g-date-clamp
  input parameter arg1 :: <GDate>;
  input parameter arg2 :: <GDate>;
  input parameter arg3 :: <GDate>;
  c-name: "g_date_clamp";
end;

define C-function g-date-order
  input parameter arg1 :: <GDate>;
  input parameter arg2 :: <GDate>;
  c-name: "g_date_order";
end;

define C-function g-date-strftime
  input parameter arg1 :: <gchar*>;
  input parameter arg2 :: <gsize>;
  input parameter arg3 :: <gchar*>;
  input parameter arg4 :: <GDate>;
  result res :: <gsize>;
  c-name: "g_date_strftime";
end;

define constant $G-DATE-BAD-JULIAN = 0;

define constant $G-DATE-BAD-DAY = 0;

define constant $G-DATE-BAD-YEAR = 0;

define constant g-date-weekday = g-date-get-weekday;

define constant g-date-month = g-date-get-month;

define constant g-date-year = g-date-get-year;

define constant g-date-day = g-date-get-day;

define constant g-date-julian = g-date-get-julian;

define constant g-date-day-of-year = g-date-get-day-of-year;

define constant g-date-monday-week-of-year = g-date-get-monday-week-of-year;

define constant g-date-sunday-week-of-year = g-date-get-sunday-week-of-year;

define constant g-date-days-in-month = g-date-get-days-in-month;

define constant g-date-monday-weeks-in-year = g-date-get-monday-weeks-in-year;

define constant g-date-sunday-weeks-in-year = g-date-get-sunday-weeks-in-year;

define constant <__clock-t> = <C-signed-long>;

define constant <clock-t> = <__clock-t>;

define constant <__clockid-t> = <C-signed-int>;

define constant <clockid-t> = <__clockid-t>;

define constant <__timer-t> = <C-void*>;

define constant <timer-t> = <__timer-t>;

define C-struct <timespec>
  slot imespec-tv-sec :: <C-signed-long>;
  slot imespec-tv-nsec :: <C-signed-long>;
end;

define C-struct <itimerspec>
  slot timerspec-it-interval :: <timespec>;
  slot timerspec-it-value :: <timespec>;
end;

define C-struct <sigevent>
end;

define constant <__pid-t> = <C-signed-int>;

define constant <pid-t> = <__pid-t>;

define C-function clock
  result res :: <clock-t>;
  c-name: "clock";
end;

define C-pointer-type <time-t*> => <time-t>;
define C-function time
  input parameter arg1 :: <time-t*>;
  result res :: <time-t>;
  c-name: "time";
end;

define C-function difftime
  input parameter arg1 :: <time-t>;
  input parameter arg2 :: <time-t>;
  result res :: <C-double>;
  c-name: "difftime";
end;

define C-function mktime
  input parameter arg1 :: <tm>;
  result res :: <time-t>;
  c-name: "mktime";
end;

define C-function strftime
  input parameter arg1 :: <char*>;
  input parameter arg2 :: <size-t>;
  input parameter arg3 :: <char*>;
  input parameter arg4 :: <tm>;
  result res :: <size-t>;
  c-name: "strftime";
end;

define C-function gmtime
  input parameter arg1 :: <time-t*>;
  result res :: <tm>;
  c-name: "gmtime";
end;

define C-function localtime
  input parameter arg1 :: <time-t*>;
  result res :: <tm>;
  c-name: "localtime";
end;

define C-function gmtime-r
  input parameter arg1 :: <time-t*>;
  input parameter arg2 :: <tm>;
  result res :: <tm>;
  c-name: "gmtime_r";
end;

define C-function localtime-r
  input parameter arg1 :: <time-t*>;
  input parameter arg2 :: <tm>;
  result res :: <tm>;
  c-name: "localtime_r";
end;

define C-function asctime
  input parameter arg1 :: <tm>;
  result res :: <char*>;
  c-name: "asctime";
end;

define C-function ctime
  input parameter arg1 :: <time-t*>;
  result res :: <char*>;
  c-name: "ctime";
end;

define C-function asctime-r
  input parameter arg1 :: <tm>;
  input parameter arg2 :: <char*>;
  result res :: <char*>;
  c-name: "asctime_r";
end;

define C-function ctime-r
  input parameter arg1 :: <time-t*>;
  input parameter arg2 :: <char*>;
  result res :: <char*>;
  c-name: "ctime_r";
end;

define constant <char*<@2>> = <c-string-vector>;
 /* Ignoring declaration for {instance of <variable-declaration>} "__tzname"*/
 /* Ignoring declaration for {instance of <variable-declaration>} "__daylight"*/
 /* Ignoring declaration for {instance of <variable-declaration>} "__timezone"*/
 /* Ignoring declaration for {instance of <variable-declaration>} "tzname"*/
define C-function tzset
  c-name: "tzset";
end;

 /* Ignoring declaration for {instance of <variable-declaration>} "daylight"*/
 /* Ignoring declaration for {instance of <variable-declaration>} "timezone"*/
define C-function stime
  input parameter arg1 :: <time-t*>;
  result res :: <C-signed-int>;
  c-name: "stime";
end;

define C-function timegm
  input parameter arg1 :: <tm>;
  result res :: <time-t>;
  c-name: "timegm";
end;

define C-function timelocal
  input parameter arg1 :: <tm>;
  result res :: <time-t>;
  c-name: "timelocal";
end;

define C-function dysize
  input parameter arg1 :: <C-signed-int>;
  result res :: <C-signed-int>;
  c-name: "dysize";
end;

define C-function nanosleep
  input parameter arg1 :: <timespec>;
  input parameter arg2 :: <timespec>;
  result res :: <C-signed-int>;
  c-name: "nanosleep";
end;

define C-function clock-nanosleep
  input parameter arg1 :: <clockid-t>;
  input parameter arg2 :: <C-signed-int>;
  input parameter arg3 :: <timespec>;
  input parameter arg4 :: <timespec>;
  result res :: <C-signed-int>;
  c-name: "clock_nanosleep";
end;

define C-pointer-type <clockid-t*> => <clockid-t>;
define C-function clock-getcpuclockid
  input parameter arg1 :: <pid-t>;
  input parameter arg2 :: <clockid-t*>;
  result res :: <C-signed-int>;
  c-name: "clock_getcpuclockid";
end;

define C-pointer-type <timer-t*> => <timer-t>;
define C-function timer-create
  input parameter arg1 :: <clockid-t>;
  input parameter arg2 :: <sigevent>;
  input parameter arg3 :: <timer-t*>;
  result res :: <C-signed-int>;
  c-name: "timer_create";
end;

define C-function timer-delete
  input parameter arg1 :: <timer-t>;
  result res :: <C-signed-int>;
  c-name: "timer_delete";
end;

define C-function timer-settime
  input parameter arg1 :: <timer-t>;
  input parameter arg2 :: <C-signed-int>;
  input parameter arg3 :: <itimerspec>;
  input parameter arg4 :: <itimerspec>;
  result res :: <C-signed-int>;
  c-name: "timer_settime";
end;

define C-function timer-gettime
  input parameter arg1 :: <timer-t>;
  input parameter arg2 :: <itimerspec>;
  result res :: <C-signed-int>;
  c-name: "timer_gettime";
end;

define C-function timer-getoverrun
  input parameter arg1 :: <timer-t>;
  result res :: <C-signed-int>;
  c-name: "timer_getoverrun";
end;

define constant $_TIME-H = 1;

define constant $__clock-t-defined = 1;

define constant $__time-t-defined = 1;

define constant $__clockid-t-defined = 1;

define constant $__timer-t-defined = 1;

define constant $__timespec-defined = 1;

define constant <__u-char> = <C-unsigned-char>;

define constant <__u-short> = <C-unsigned-short>;

define constant <__u-int> = <C-unsigned-int>;

define constant <__u-long> = <C-unsigned-long>;

define constant <__int8-t> = <C-signed-char>;

define constant <__uint8-t> = <C-unsigned-char>;

define constant <__int16-t> = <C-signed-short>;

define constant <__uint16-t> = <C-unsigned-short>;

define constant <__int32-t> = <C-signed-int>;

define constant <__uint32-t> = <C-unsigned-int>;

define constant <long<@2>> = <long*>;
define C-struct <__quad-t>
  array slot _quad_t-__val :: <C-signed-long>, length: 2;
end;

define C-pointer-type <__u-long*> => <__u-long>;
define constant <__u-long<@2>> = <__u-long*>;
define C-struct <__u-quad-t>
  array slot _u_quad_t-__val :: <__u-long>, length: 2;
end;

define constant <__dev-t> = <__u-quad-t>;

define constant <__uid-t> = <C-unsigned-int>;

define constant <__gid-t> = <C-unsigned-int>;

define constant <__ino-t> = <C-unsigned-long>;

define constant <__ino64-t> = <__u-quad-t>;

define constant <__mode-t> = <C-unsigned-int>;

define constant <__nlink-t> = <C-unsigned-int>;

define constant <__off-t> = <C-signed-long>;

define constant <__off64-t> = <__quad-t>;

define C-pointer-type <int*> => <C-signed-int>;
define constant <int<@2>> = <int*>;
define C-struct <__fsid-t>
  array slot _fsid_t-__val :: <C-signed-int>, length: 2;
end;

define constant <__rlim-t> = <C-unsigned-long>;

define constant <__rlim64-t> = <__u-quad-t>;

define constant <__id-t> = <C-unsigned-int>;

define constant <__useconds-t> = <C-unsigned-int>;

define constant <__suseconds-t> = <C-signed-long>;

define constant <__daddr-t> = <C-signed-int>;

define constant <__swblk-t> = <C-signed-long>;

define constant <__key-t> = <C-signed-int>;

define constant <__blksize-t> = <C-signed-long>;

define constant <__blkcnt-t> = <C-signed-long>;

define constant <__blkcnt64-t> = <__quad-t>;

define constant <__fsblkcnt-t> = <C-unsigned-long>;

define constant <__fsblkcnt64-t> = <__u-quad-t>;

define constant <__fsfilcnt-t> = <C-unsigned-long>;

define constant <__fsfilcnt64-t> = <__u-quad-t>;

define constant <__ssize-t> = <C-signed-int>;

define constant <__loff-t> = <__off64-t>;

define constant <__qaddr-t> = <__quad-t>;

define constant <__caddr-t> = <char*>;

define constant <__intptr-t> = <C-signed-int>;

define constant <__socklen-t> = <C-unsigned-int>;

define constant $_BITS-TYPES-H = 1;

define constant <__S16-TYPE> = <C-signed-short>;

define constant <__U16-TYPE> = <C-unsigned-short>;

define constant <__S32-TYPE> = <C-signed-int>;

define constant <__U32-TYPE> = <C-unsigned-int>;

define constant <__SLONGWORD-TYPE> = <C-signed-long>;

define constant <__ULONGWORD-TYPE> = <C-unsigned-long>;

define constant <__SQUAD-TYPE> = <__quad-t>;

define constant <__UQUAD-TYPE> = <__u-quad-t>;

define constant <__SWORD-TYPE> = <C-signed-int>;

define constant <__UWORD-TYPE> = <C-unsigned-int>;

define constant <__SLONG32-TYPE> = <C-signed-long>;

define constant <__ULONG32-TYPE> = <C-unsigned-long>;

define constant <__S64-TYPE> = <__quad-t>;

define constant <__U64-TYPE> = <__u-quad-t>;

define constant $_BITS-TYPESIZES-H = 1;

define constant <__DEV-T-TYPE> = <__u-quad-t>;

define constant <__UID-T-TYPE> = <C-unsigned-int>;

define constant <__GID-T-TYPE> = <C-unsigned-int>;

define constant <__INO-T-TYPE> = <C-unsigned-long>;

define constant <__INO64-T-TYPE> = <__u-quad-t>;

define constant <__MODE-T-TYPE> = <C-unsigned-int>;

define constant <__NLINK-T-TYPE> = <C-unsigned-int>;

define constant <__OFF-T-TYPE> = <C-signed-long>;

define constant <__OFF64-T-TYPE> = <__quad-t>;

define constant <__PID-T-TYPE> = <C-signed-int>;

define constant <__RLIM-T-TYPE> = <C-unsigned-long>;

define constant <__RLIM64-T-TYPE> = <__u-quad-t>;

define constant <__BLKCNT-T-TYPE> = <C-signed-long>;

define constant <__BLKCNT64-T-TYPE> = <__quad-t>;

define constant <__FSBLKCNT-T-TYPE> = <C-unsigned-long>;

define constant <__FSBLKCNT64-T-TYPE> = <__u-quad-t>;

define constant <__FSFILCNT-T-TYPE> = <C-unsigned-long>;

define constant <__FSFILCNT64-T-TYPE> = <__u-quad-t>;

define constant <__ID-T-TYPE> = <C-unsigned-int>;

define constant <__CLOCK-T-TYPE> = <C-signed-long>;

define constant <__TIME-T-TYPE> = <C-signed-long>;

define constant <__USECONDS-T-TYPE> = <C-unsigned-int>;

define constant <__SUSECONDS-T-TYPE> = <C-signed-long>;

define constant <__DADDR-T-TYPE> = <C-signed-int>;

define constant <__SWBLK-T-TYPE> = <C-signed-long>;

define constant <__KEY-T-TYPE> = <C-signed-int>;

define constant <__CLOCKID-T-TYPE> = <C-signed-int>;

define constant <__TIMER-T-TYPE> = <C-void*>;

define constant <__BLKSIZE-T-TYPE> = <C-signed-long>;

define constant <__SSIZE-T-TYPE> = <C-signed-int>;

define constant $__FD-SETSIZE = 1024;

define constant $_BITS-TIME-H = 1;

define constant $CLOCKS-PER-SEC = 1000000;

define constant $CLOCK-REALTIME = 0;

define constant $CLOCK-MONOTONIC = 1;

define constant $CLOCK-PROCESS-CPUTIME-ID = 2;

define constant $CLOCK-THREAD-CPUTIME-ID = 3;

define constant $TIMER-ABSTIME = 1;

define constant <anonymous-590> = <C-function-pointer>;
define constant <GCompletionFunc> = <anonymous-590>;

define constant <anonymous-591> = <C-function-pointer>;
define constant <GCompletionStrncmpFunc> = <anonymous-591>;

define C-struct <_GCompletion>
  slot GCompletion-items :: <GList>;
  slot GCompletion-func :: <anonymous-590>;
  slot GCompletion-prefix :: <gchar*>;
  slot GCompletion-cache :: <GList>;
  slot GCompletion-strncmp-func :: <anonymous-591>;
end;

define C-pointer-type <GCompletion> => <_GCompletion>;

define C-function g-completion-new
  input parameter arg1 :: <GCompletionFunc>;
  result res :: <GCompletion>;
  c-name: "g_completion_new";
end;

define C-function g-completion-add-items
  input parameter arg1 :: <GCompletion>;
  input parameter arg2 :: <GList>;
  c-name: "g_completion_add_items";
end;

define C-function g-completion-remove-items
  input parameter arg1 :: <GCompletion>;
  input parameter arg2 :: <GList>;
  c-name: "g_completion_remove_items";
end;

define C-function g-completion-clear-items
  input parameter arg1 :: <GCompletion>;
  c-name: "g_completion_clear_items";
end;

define C-function g-completion-complete
  input parameter arg1 :: <GCompletion>;
  input parameter arg2 :: <gchar*>;
  input parameter arg3 :: <gchar**>;
  result res :: <GList>;
  c-name: "g_completion_complete";
end;

define C-function g-completion-complete-utf8
  input parameter arg1 :: <GCompletion>;
  input parameter arg2 :: <gchar*>;
  input parameter arg3 :: <gchar**>;
  result res :: <GList>;
  c-name: "g_completion_complete_utf8";
end;

define C-function g-completion-set-compare
  input parameter arg1 :: <GCompletion>;
  input parameter arg2 :: <GCompletionStrncmpFunc>;
  c-name: "g_completion_set_compare";
end;

define C-function g-completion-free
  input parameter arg1 :: <GCompletion>;
  c-name: "g_completion_free";
end;

define C-struct <_GCache>
end;

define C-pointer-type <GCache> => <_GCache>;

define constant <anonymous-581> = <C-function-pointer>;
define constant <GCacheNewFunc> = <anonymous-581>;

define constant <anonymous-582> = <C-function-pointer>;
define constant <GCacheDupFunc> = <anonymous-582>;

define constant <anonymous-583> = <C-function-pointer>;
define constant <GCacheDestroyFunc> = <anonymous-583>;

define C-function g-cache-new
  input parameter arg1 :: <GCacheNewFunc>;
  input parameter arg2 :: <GCacheDestroyFunc>;
  input parameter arg3 :: <GCacheDupFunc>;
  input parameter arg4 :: <GCacheDestroyFunc>;
  input parameter arg5 :: <GHashFunc>;
  input parameter arg6 :: <GHashFunc>;
  input parameter arg7 :: <GEqualFunc>;
  result res :: <GCache>;
  c-name: "g_cache_new";
end;

define C-function g-cache-destroy
  input parameter arg1 :: <GCache>;
  c-name: "g_cache_destroy";
end;

define C-function g-cache-insert
  input parameter arg1 :: <GCache>;
  input parameter arg2 :: <gpointer>;
  result res :: <gpointer>;
  c-name: "g_cache_insert";
end;

define C-function g-cache-remove
  input parameter arg1 :: <GCache>;
  input parameter arg2 :: <gconstpointer>;
  c-name: "g_cache_remove";
end;

define C-function g-cache-key-foreach
  input parameter arg1 :: <GCache>;
  input parameter arg2 :: <GHFunc>;
  input parameter arg3 :: <gpointer>;
  c-name: "g_cache_key_foreach";
end;

define C-function g-cache-value-foreach
  input parameter arg1 :: <GCache>;
  input parameter arg2 :: <GHFunc>;
  input parameter arg3 :: <gpointer>;
  c-name: "g_cache_value_foreach";
end;

define constant <GBookmarkFileError> = <C-int>;
define constant $G-BOOKMARK-FILE-ERROR-INVALID-URI = 0;
define constant $G-BOOKMARK-FILE-ERROR-INVALID-VALUE = 1;
define constant $G-BOOKMARK-FILE-ERROR-APP-NOT-REGISTERED = 2;
define constant $G-BOOKMARK-FILE-ERROR-URI-NOT-FOUND = 3;
define constant $G-BOOKMARK-FILE-ERROR-READ = 4;
define constant $G-BOOKMARK-FILE-ERROR-UNKNOWN-ENCODING = 5;
define constant $G-BOOKMARK-FILE-ERROR-WRITE = 6;
define constant $G-BOOKMARK-FILE-ERROR-FILE-NOT-FOUND = 7;

define C-function g-bookmark-file-error-quark
  result res :: <GQuark>;
  c-name: "g_bookmark_file_error_quark";
end;

define C-struct <_GBookmarkFile>
end;

define C-pointer-type <GBookmarkFile> => <_GBookmarkFile>;

define C-function g-bookmark-file-new
  result res :: <GBookmarkFile>;
  c-name: "g_bookmark_file_new";
end;

define C-function g-bookmark-file-free
  input parameter arg1 :: <GBookmarkFile>;
  c-name: "g_bookmark_file_free";
end;

define C-function g-bookmark-file-load-from-file
  input parameter arg1 :: <GBookmarkFile>;
  input parameter arg2 :: <gchar*>;
  input parameter arg3 :: <GError*>;
  result res :: <gboolean>;
  c-name: "g_bookmark_file_load_from_file";
end;

define C-function g-bookmark-file-load-from-data
  input parameter arg1 :: <GBookmarkFile>;
  input parameter arg2 :: <gchar*>;
  input parameter arg3 :: <gsize>;
  input parameter arg4 :: <GError*>;
  result res :: <gboolean>;
  c-name: "g_bookmark_file_load_from_data";
end;

define C-function g-bookmark-file-load-from-data-dirs
  input parameter arg1 :: <GBookmarkFile>;
  input parameter arg2 :: <gchar*>;
  input parameter arg3 :: <gchar**>;
  input parameter arg4 :: <GError*>;
  result res :: <gboolean>;
  c-name: "g_bookmark_file_load_from_data_dirs";
end;

define C-function g-bookmark-file-to-data
  input parameter arg1 :: <GBookmarkFile>;
  input parameter arg2 :: <gsize*>;
  input parameter arg3 :: <GError*>;
  result res :: <gchar*>;
  c-name: "g_bookmark_file_to_data";
end;

define C-function g-bookmark-file-to-file
  input parameter arg1 :: <GBookmarkFile>;
  input parameter arg2 :: <gchar*>;
  input parameter arg3 :: <GError*>;
  result res :: <gboolean>;
  c-name: "g_bookmark_file_to_file";
end;

define C-function g-bookmark-file-set-title
  input parameter arg1 :: <GBookmarkFile>;
  input parameter arg2 :: <gchar*>;
  input parameter arg3 :: <gchar*>;
  c-name: "g_bookmark_file_set_title";
end;

define C-function g-bookmark-file-get-title
  input parameter arg1 :: <GBookmarkFile>;
  input parameter arg2 :: <gchar*>;
  input parameter arg3 :: <GError*>;
  result res :: <gchar*>;
  c-name: "g_bookmark_file_get_title";
end;

define C-function g-bookmark-file-set-description
  input parameter arg1 :: <GBookmarkFile>;
  input parameter arg2 :: <gchar*>;
  input parameter arg3 :: <gchar*>;
  c-name: "g_bookmark_file_set_description";
end;

define C-function g-bookmark-file-get-description
  input parameter arg1 :: <GBookmarkFile>;
  input parameter arg2 :: <gchar*>;
  input parameter arg3 :: <GError*>;
  result res :: <gchar*>;
  c-name: "g_bookmark_file_get_description";
end;

define C-function g-bookmark-file-set-mime-type
  input parameter arg1 :: <GBookmarkFile>;
  input parameter arg2 :: <gchar*>;
  input parameter arg3 :: <gchar*>;
  c-name: "g_bookmark_file_set_mime_type";
end;

define C-function g-bookmark-file-get-mime-type
  input parameter arg1 :: <GBookmarkFile>;
  input parameter arg2 :: <gchar*>;
  input parameter arg3 :: <GError*>;
  result res :: <gchar*>;
  c-name: "g_bookmark_file_get_mime_type";
end;

define C-function g-bookmark-file-set-groups
  input parameter arg1 :: <GBookmarkFile>;
  input parameter arg2 :: <gchar*>;
  input parameter arg3 :: <gchar**>;
  input parameter arg4 :: <gsize>;
  c-name: "g_bookmark_file_set_groups";
end;

define C-function g-bookmark-file-add-group
  input parameter arg1 :: <GBookmarkFile>;
  input parameter arg2 :: <gchar*>;
  input parameter arg3 :: <gchar*>;
  c-name: "g_bookmark_file_add_group";
end;

define C-function g-bookmark-file-has-group
  input parameter arg1 :: <GBookmarkFile>;
  input parameter arg2 :: <gchar*>;
  input parameter arg3 :: <gchar*>;
  input parameter arg4 :: <GError*>;
  result res :: <gboolean>;
  c-name: "g_bookmark_file_has_group";
end;

define C-function g-bookmark-file-get-groups
  input parameter arg1 :: <GBookmarkFile>;
  input parameter arg2 :: <gchar*>;
  input parameter arg3 :: <gsize*>;
  input parameter arg4 :: <GError*>;
  result res :: <gchar**>;
  c-name: "g_bookmark_file_get_groups";
end;

define C-function g-bookmark-file-add-application
  input parameter arg1 :: <GBookmarkFile>;
  input parameter arg2 :: <gchar*>;
  input parameter arg3 :: <gchar*>;
  input parameter arg4 :: <gchar*>;
  c-name: "g_bookmark_file_add_application";
end;

define C-function g-bookmark-file-has-application
  input parameter arg1 :: <GBookmarkFile>;
  input parameter arg2 :: <gchar*>;
  input parameter arg3 :: <gchar*>;
  input parameter arg4 :: <GError*>;
  result res :: <gboolean>;
  c-name: "g_bookmark_file_has_application";
end;

define C-function g-bookmark-file-get-applications
  input parameter arg1 :: <GBookmarkFile>;
  input parameter arg2 :: <gchar*>;
  input parameter arg3 :: <gsize*>;
  input parameter arg4 :: <GError*>;
  result res :: <gchar**>;
  c-name: "g_bookmark_file_get_applications";
end;

define C-function g-bookmark-file-set-app-info
  input parameter arg1 :: <GBookmarkFile>;
  input parameter arg2 :: <gchar*>;
  input parameter arg3 :: <gchar*>;
  input parameter arg4 :: <gchar*>;
  input parameter arg5 :: <gint>;
  input parameter arg6 :: <time-t>;
  input parameter arg7 :: <GError*>;
  result res :: <gboolean>;
  c-name: "g_bookmark_file_set_app_info";
end;

define C-function g-bookmark-file-get-app-info
  input parameter arg1 :: <GBookmarkFile>;
  input parameter arg2 :: <gchar*>;
  input parameter arg3 :: <gchar*>;
  input parameter arg4 :: <gchar**>;
  input parameter arg5 :: <guint*>;
  input parameter arg6 :: <time-t*>;
  input parameter arg7 :: <GError*>;
  result res :: <gboolean>;
  c-name: "g_bookmark_file_get_app_info";
end;

define C-function g-bookmark-file-set-is-private
  input parameter arg1 :: <GBookmarkFile>;
  input parameter arg2 :: <gchar*>;
  input parameter arg3 :: <gboolean>;
  c-name: "g_bookmark_file_set_is_private";
end;

define C-function g-bookmark-file-get-is-private
  input parameter arg1 :: <GBookmarkFile>;
  input parameter arg2 :: <gchar*>;
  input parameter arg3 :: <GError*>;
  result res :: <gboolean>;
  c-name: "g_bookmark_file_get_is_private";
end;

define C-function g-bookmark-file-set-icon
  input parameter arg1 :: <GBookmarkFile>;
  input parameter arg2 :: <gchar*>;
  input parameter arg3 :: <gchar*>;
  input parameter arg4 :: <gchar*>;
  c-name: "g_bookmark_file_set_icon";
end;

define C-function g-bookmark-file-get-icon
  input parameter arg1 :: <GBookmarkFile>;
  input parameter arg2 :: <gchar*>;
  input parameter arg3 :: <gchar**>;
  input parameter arg4 :: <gchar**>;
  input parameter arg5 :: <GError*>;
  result res :: <gboolean>;
  c-name: "g_bookmark_file_get_icon";
end;

define C-function g-bookmark-file-set-added
  input parameter arg1 :: <GBookmarkFile>;
  input parameter arg2 :: <gchar*>;
  input parameter arg3 :: <time-t>;
  c-name: "g_bookmark_file_set_added";
end;

define C-function g-bookmark-file-get-added
  input parameter arg1 :: <GBookmarkFile>;
  input parameter arg2 :: <gchar*>;
  input parameter arg3 :: <GError*>;
  result res :: <time-t>;
  c-name: "g_bookmark_file_get_added";
end;

define C-function g-bookmark-file-set-modified
  input parameter arg1 :: <GBookmarkFile>;
  input parameter arg2 :: <gchar*>;
  input parameter arg3 :: <time-t>;
  c-name: "g_bookmark_file_set_modified";
end;

define C-function g-bookmark-file-get-modified
  input parameter arg1 :: <GBookmarkFile>;
  input parameter arg2 :: <gchar*>;
  input parameter arg3 :: <GError*>;
  result res :: <time-t>;
  c-name: "g_bookmark_file_get_modified";
end;

define C-function g-bookmark-file-set-visited
  input parameter arg1 :: <GBookmarkFile>;
  input parameter arg2 :: <gchar*>;
  input parameter arg3 :: <time-t>;
  c-name: "g_bookmark_file_set_visited";
end;

define C-function g-bookmark-file-get-visited
  input parameter arg1 :: <GBookmarkFile>;
  input parameter arg2 :: <gchar*>;
  input parameter arg3 :: <GError*>;
  result res :: <time-t>;
  c-name: "g_bookmark_file_get_visited";
end;

define C-function g-bookmark-file-has-item
  input parameter arg1 :: <GBookmarkFile>;
  input parameter arg2 :: <gchar*>;
  result res :: <gboolean>;
  c-name: "g_bookmark_file_has_item";
end;

define C-function g-bookmark-file-get-size
  input parameter arg1 :: <GBookmarkFile>;
  result res :: <gint>;
  c-name: "g_bookmark_file_get_size";
end;

define C-function g-bookmark-file-get-uris
  input parameter arg1 :: <GBookmarkFile>;
  input parameter arg2 :: <gsize*>;
  result res :: <gchar**>;
  c-name: "g_bookmark_file_get_uris";
end;

define C-function g-bookmark-file-remove-group
  input parameter arg1 :: <GBookmarkFile>;
  input parameter arg2 :: <gchar*>;
  input parameter arg3 :: <gchar*>;
  input parameter arg4 :: <GError*>;
  result res :: <gboolean>;
  c-name: "g_bookmark_file_remove_group";
end;

define C-function g-bookmark-file-remove-application
  input parameter arg1 :: <GBookmarkFile>;
  input parameter arg2 :: <gchar*>;
  input parameter arg3 :: <gchar*>;
  input parameter arg4 :: <GError*>;
  result res :: <gboolean>;
  c-name: "g_bookmark_file_remove_application";
end;

define C-function g-bookmark-file-remove-item
  input parameter arg1 :: <GBookmarkFile>;
  input parameter arg2 :: <gchar*>;
  input parameter arg3 :: <GError*>;
  result res :: <gboolean>;
  c-name: "g_bookmark_file_remove_item";
end;

define C-function g-bookmark-file-move-item
  input parameter arg1 :: <GBookmarkFile>;
  input parameter arg2 :: <gchar*>;
  input parameter arg3 :: <gchar*>;
  input parameter arg4 :: <GError*>;
  result res :: <gboolean>;
  c-name: "g_bookmark_file_move_item";
end;

define C-function g-base64-encode-step
  input parameter arg1 :: <guchar*>;
  input parameter arg2 :: <gsize>;
  input parameter arg3 :: <gboolean>;
  input parameter arg4 :: <gchar*>;
  input parameter arg5 :: <gint*>;
  input parameter arg6 :: <gint*>;
  result res :: <gsize>;
  c-name: "g_base64_encode_step";
end;

define C-function g-base64-encode-close
  input parameter arg1 :: <gboolean>;
  input parameter arg2 :: <gchar*>;
  input parameter arg3 :: <gint*>;
  input parameter arg4 :: <gint*>;
  result res :: <gsize>;
  c-name: "g_base64_encode_close";
end;

define C-function g-base64-encode
  input parameter arg1 :: <guchar*>;
  input parameter arg2 :: <gsize>;
  result res :: <gchar*>;
  c-name: "g_base64_encode";
end;

define C-function g-base64-decode-step
  input parameter arg1 :: <gchar*>;
  input parameter arg2 :: <gsize>;
  input parameter arg3 :: <guchar*>;
  input parameter arg4 :: <gint*>;
  input parameter arg5 :: <guint*>;
  result res :: <gsize>;
  c-name: "g_base64_decode_step";
end;

define C-function g-base64-decode
  input parameter arg1 :: <gchar*>;
  input parameter arg2 :: <gsize*>;
  result res :: <guchar*>;
  c-name: "g_base64_decode";
end;

define C-function g-on-error-query
  input parameter arg1 :: <gchar*>;
  c-name: "g_on_error_query";
end;

define C-function g-on-error-stack-trace
  input parameter arg1 :: <gchar*>;
  c-name: "g_on_error_stack_trace";
end;

define C-struct <_GAsyncQueue>
end;

define C-pointer-type <GAsyncQueue> => <_GAsyncQueue>;

define C-function g-async-queue-new
  result res :: <GAsyncQueue>;
  c-name: "g_async_queue_new";
end;

define C-function g-async-queue-lock
  input parameter arg1 :: <GAsyncQueue>;
  c-name: "g_async_queue_lock";
end;

define C-function g-async-queue-unlock
  input parameter arg1 :: <GAsyncQueue>;
  c-name: "g_async_queue_unlock";
end;

define C-function g-async-queue-ref
  input parameter arg1 :: <GAsyncQueue>;
  result res :: <GAsyncQueue>;
  c-name: "g_async_queue_ref";
end;

define C-function g-async-queue-unref
  input parameter arg1 :: <GAsyncQueue>;
  c-name: "g_async_queue_unref";
end;

define C-function g-async-queue-ref-unlocked
  input parameter arg1 :: <GAsyncQueue>;
  c-name: "g_async_queue_ref_unlocked";
end;

define C-function g-async-queue-unref-and-unlock
  input parameter arg1 :: <GAsyncQueue>;
  c-name: "g_async_queue_unref_and_unlock";
end;

define C-function g-async-queue-push
  input parameter arg1 :: <GAsyncQueue>;
  input parameter arg2 :: <gpointer>;
  c-name: "g_async_queue_push";
end;

define C-function g-async-queue-push-unlocked
  input parameter arg1 :: <GAsyncQueue>;
  input parameter arg2 :: <gpointer>;
  c-name: "g_async_queue_push_unlocked";
end;

define C-function g-async-queue-push-sorted
  input parameter arg1 :: <GAsyncQueue>;
  input parameter arg2 :: <gpointer>;
  input parameter arg3 :: <GCompareDataFunc>;
  input parameter arg4 :: <gpointer>;
  c-name: "g_async_queue_push_sorted";
end;

define C-function g-async-queue-push-sorted-unlocked
  input parameter arg1 :: <GAsyncQueue>;
  input parameter arg2 :: <gpointer>;
  input parameter arg3 :: <GCompareDataFunc>;
  input parameter arg4 :: <gpointer>;
  c-name: "g_async_queue_push_sorted_unlocked";
end;

define C-function g-async-queue-pop
  input parameter arg1 :: <GAsyncQueue>;
  result res :: <gpointer>;
  c-name: "g_async_queue_pop";
end;

define C-function g-async-queue-pop-unlocked
  input parameter arg1 :: <GAsyncQueue>;
  result res :: <gpointer>;
  c-name: "g_async_queue_pop_unlocked";
end;

define C-function g-async-queue-try-pop
  input parameter arg1 :: <GAsyncQueue>;
  result res :: <gpointer>;
  c-name: "g_async_queue_try_pop";
end;

define C-function g-async-queue-try-pop-unlocked
  input parameter arg1 :: <GAsyncQueue>;
  result res :: <gpointer>;
  c-name: "g_async_queue_try_pop_unlocked";
end;

define C-function g-async-queue-timed-pop
  input parameter arg1 :: <GAsyncQueue>;
  input parameter arg2 :: <GTimeVal>;
  result res :: <gpointer>;
  c-name: "g_async_queue_timed_pop";
end;

define C-function g-async-queue-timed-pop-unlocked
  input parameter arg1 :: <GAsyncQueue>;
  input parameter arg2 :: <GTimeVal>;
  result res :: <gpointer>;
  c-name: "g_async_queue_timed_pop_unlocked";
end;

define C-function g-async-queue-length
  input parameter arg1 :: <GAsyncQueue>;
  result res :: <gint>;
  c-name: "g_async_queue_length";
end;

define C-function g-async-queue-length-unlocked
  input parameter arg1 :: <GAsyncQueue>;
  result res :: <gint>;
  c-name: "g_async_queue_length_unlocked";
end;

define C-function g-async-queue-sort
  input parameter arg1 :: <GAsyncQueue>;
  input parameter arg2 :: <GCompareDataFunc>;
  input parameter arg3 :: <gpointer>;
  c-name: "g_async_queue_sort";
end;

define C-function g-async-queue-sort-unlocked
  input parameter arg1 :: <GAsyncQueue>;
  input parameter arg2 :: <GCompareDataFunc>;
  input parameter arg3 :: <gpointer>;
  c-name: "g_async_queue_sort_unlocked";
end;

define C-pointer-type <guint8*> => <guint8>;
define C-struct <_GByteArray>
  slot GByteArray-data :: <guint8*>;
  slot GByteArray-len :: <C-unsigned-int>;
end;

define C-pointer-type <GByteArray> => <_GByteArray>;

define C-function g-array-new
  input parameter arg1 :: <gboolean>;
  input parameter arg2 :: <gboolean>;
  input parameter arg3 :: <guint>;
  result res :: <GArray>;
  c-name: "g_array_new";
end;

define C-function g-array-sized-new
  input parameter arg1 :: <gboolean>;
  input parameter arg2 :: <gboolean>;
  input parameter arg3 :: <guint>;
  input parameter arg4 :: <guint>;
  result res :: <GArray>;
  c-name: "g_array_sized_new";
end;

define C-function g-array-free
  input parameter arg1 :: <GArray>;
  input parameter arg2 :: <gboolean>;
  result res :: <gchar*>;
  c-name: "g_array_free";
end;

define C-function g-array-append-vals
  input parameter arg1 :: <GArray>;
  input parameter arg2 :: <gconstpointer>;
  input parameter arg3 :: <guint>;
  result res :: <GArray>;
  c-name: "g_array_append_vals";
end;

define C-function g-array-prepend-vals
  input parameter arg1 :: <GArray>;
  input parameter arg2 :: <gconstpointer>;
  input parameter arg3 :: <guint>;
  result res :: <GArray>;
  c-name: "g_array_prepend_vals";
end;

define C-function g-array-insert-vals
  input parameter arg1 :: <GArray>;
  input parameter arg2 :: <guint>;
  input parameter arg3 :: <gconstpointer>;
  input parameter arg4 :: <guint>;
  result res :: <GArray>;
  c-name: "g_array_insert_vals";
end;

define C-function g-array-set-size
  input parameter arg1 :: <GArray>;
  input parameter arg2 :: <guint>;
  result res :: <GArray>;
  c-name: "g_array_set_size";
end;

define C-function g-array-remove-index
  input parameter arg1 :: <GArray>;
  input parameter arg2 :: <guint>;
  result res :: <GArray>;
  c-name: "g_array_remove_index";
end;

define C-function g-array-remove-index-fast
  input parameter arg1 :: <GArray>;
  input parameter arg2 :: <guint>;
  result res :: <GArray>;
  c-name: "g_array_remove_index_fast";
end;

define C-function g-array-remove-range
  input parameter arg1 :: <GArray>;
  input parameter arg2 :: <guint>;
  input parameter arg3 :: <guint>;
  result res :: <GArray>;
  c-name: "g_array_remove_range";
end;

define C-function g-array-sort
  input parameter arg1 :: <GArray>;
  input parameter arg2 :: <GCompareFunc>;
  c-name: "g_array_sort";
end;

define C-function g-array-sort-with-data
  input parameter arg1 :: <GArray>;
  input parameter arg2 :: <GCompareDataFunc>;
  input parameter arg3 :: <gpointer>;
  c-name: "g_array_sort_with_data";
end;

define C-function g-ptr-array-new
  result res :: <GPtrArray>;
  c-name: "g_ptr_array_new";
end;

define C-function g-ptr-array-sized-new
  input parameter arg1 :: <guint>;
  result res :: <GPtrArray>;
  c-name: "g_ptr_array_sized_new";
end;

define C-function g-ptr-array-free
  input parameter arg1 :: <GPtrArray>;
  input parameter arg2 :: <gboolean>;
  result res :: <gpointer*>;
  c-name: "g_ptr_array_free";
end;

define C-function g-ptr-array-set-size
  input parameter arg1 :: <GPtrArray>;
  input parameter arg2 :: <gint>;
  c-name: "g_ptr_array_set_size";
end;

define C-function g-ptr-array-remove-index
  input parameter arg1 :: <GPtrArray>;
  input parameter arg2 :: <guint>;
  result res :: <gpointer>;
  c-name: "g_ptr_array_remove_index";
end;

define C-function g-ptr-array-remove-index-fast
  input parameter arg1 :: <GPtrArray>;
  input parameter arg2 :: <guint>;
  result res :: <gpointer>;
  c-name: "g_ptr_array_remove_index_fast";
end;

define C-function g-ptr-array-remove
  input parameter arg1 :: <GPtrArray>;
  input parameter arg2 :: <gpointer>;
  result res :: <gboolean>;
  c-name: "g_ptr_array_remove";
end;

define C-function g-ptr-array-remove-fast
  input parameter arg1 :: <GPtrArray>;
  input parameter arg2 :: <gpointer>;
  result res :: <gboolean>;
  c-name: "g_ptr_array_remove_fast";
end;

define C-function g-ptr-array-remove-range
  input parameter arg1 :: <GPtrArray>;
  input parameter arg2 :: <guint>;
  input parameter arg3 :: <guint>;
  c-name: "g_ptr_array_remove_range";
end;

define C-function g-ptr-array-add
  input parameter arg1 :: <GPtrArray>;
  input parameter arg2 :: <gpointer>;
  c-name: "g_ptr_array_add";
end;

define C-function g-ptr-array-sort
  input parameter arg1 :: <GPtrArray>;
  input parameter arg2 :: <GCompareFunc>;
  c-name: "g_ptr_array_sort";
end;

define C-function g-ptr-array-sort-with-data
  input parameter arg1 :: <GPtrArray>;
  input parameter arg2 :: <GCompareDataFunc>;
  input parameter arg3 :: <gpointer>;
  c-name: "g_ptr_array_sort_with_data";
end;

define C-function g-ptr-array-foreach
  input parameter arg1 :: <GPtrArray>;
  input parameter arg2 :: <GFunc>;
  input parameter arg3 :: <gpointer>;
  c-name: "g_ptr_array_foreach";
end;

define C-function g-byte-array-new
  result res :: <GByteArray>;
  c-name: "g_byte_array_new";
end;

define C-function g-byte-array-sized-new
  input parameter arg1 :: <guint>;
  result res :: <GByteArray>;
  c-name: "g_byte_array_sized_new";
end;

define C-function g-byte-array-free
  input parameter arg1 :: <GByteArray>;
  input parameter arg2 :: <gboolean>;
  result res :: <guint8*>;
  c-name: "g_byte_array_free";
end;

define C-function g-byte-array-append
  input parameter arg1 :: <GByteArray>;
  input parameter arg2 :: <guint8*>;
  input parameter arg3 :: <guint>;
  result res :: <GByteArray>;
  c-name: "g_byte_array_append";
end;

define C-function g-byte-array-prepend
  input parameter arg1 :: <GByteArray>;
  input parameter arg2 :: <guint8*>;
  input parameter arg3 :: <guint>;
  result res :: <GByteArray>;
  c-name: "g_byte_array_prepend";
end;

define C-function g-byte-array-set-size
  input parameter arg1 :: <GByteArray>;
  input parameter arg2 :: <guint>;
  result res :: <GByteArray>;
  c-name: "g_byte_array_set_size";
end;

define C-function g-byte-array-remove-index
  input parameter arg1 :: <GByteArray>;
  input parameter arg2 :: <guint>;
  result res :: <GByteArray>;
  c-name: "g_byte_array_remove_index";
end;

define C-function g-byte-array-remove-index-fast
  input parameter arg1 :: <GByteArray>;
  input parameter arg2 :: <guint>;
  result res :: <GByteArray>;
  c-name: "g_byte_array_remove_index_fast";
end;

define C-function g-byte-array-remove-range
  input parameter arg1 :: <GByteArray>;
  input parameter arg2 :: <guint>;
  input parameter arg3 :: <guint>;
  result res :: <GByteArray>;
  c-name: "g_byte_array_remove_range";
end;

define C-function g-byte-array-sort
  input parameter arg1 :: <GByteArray>;
  input parameter arg2 :: <GCompareFunc>;
  c-name: "g_byte_array_sort";
end;

define C-function g-byte-array-sort-with-data
  input parameter arg1 :: <GByteArray>;
  input parameter arg2 :: <GCompareDataFunc>;
  input parameter arg3 :: <gpointer>;
  c-name: "g_byte_array_sort_with_data";
end;

define constant $_ALLOCA-H = 1;

define C-struct <_GValueArray>
  slot GValueArray-n-values :: <C-unsigned-int>;
  slot GValueArray-values :: <GValue>;
  slot GValueArray-n-prealloced :: <C-unsigned-int>;
end;

define C-pointer-type <GValueArray> => <_GValueArray>;

define C-function g-value-array-get-nth
  input parameter arg1 :: <GValueArray>;
  input parameter arg2 :: <guint>;
  result res :: <GValue>;
  c-name: "g_value_array_get_nth";
end;

define C-function g-value-array-new
  input parameter arg1 :: <guint>;
  result res :: <GValueArray>;
  c-name: "g_value_array_new";
end;

define C-function g-value-array-free
  input parameter arg1 :: <GValueArray>;
  c-name: "g_value_array_free";
end;

define C-function g-value-array-copy
  input parameter arg1 :: <GValueArray>;
  result res :: <GValueArray>;
  c-name: "g_value_array_copy";
end;

define C-function g-value-array-prepend
  input parameter arg1 :: <GValueArray>;
  input parameter arg2 :: <GValue>;
  result res :: <GValueArray>;
  c-name: "g_value_array_prepend";
end;

define C-function g-value-array-append
  input parameter arg1 :: <GValueArray>;
  input parameter arg2 :: <GValue>;
  result res :: <GValueArray>;
  c-name: "g_value_array_append";
end;

define C-function g-value-array-insert
  input parameter arg1 :: <GValueArray>;
  input parameter arg2 :: <guint>;
  input parameter arg3 :: <GValue>;
  result res :: <GValueArray>;
  c-name: "g_value_array_insert";
end;

define C-function g-value-array-remove
  input parameter arg1 :: <GValueArray>;
  input parameter arg2 :: <guint>;
  result res :: <GValueArray>;
  c-name: "g_value_array_remove";
end;

define C-function g-value-array-sort
  input parameter arg1 :: <GValueArray>;
  input parameter arg2 :: <GCompareFunc>;
  result res :: <GValueArray>;
  c-name: "g_value_array_sort";
end;

define C-function g-value-array-sort-with-data
  input parameter arg1 :: <GValueArray>;
  input parameter arg2 :: <GCompareDataFunc>;
  input parameter arg3 :: <gpointer>;
  result res :: <GValueArray>;
  c-name: "g_value_array_sort_with_data";
end;

define constant <anonymous-1863> = <C-function-pointer>;
define constant <GTypePluginUse> = <anonymous-1863>;

define constant <anonymous-1864> = <C-function-pointer>;
define constant <GTypePluginUnuse> = <anonymous-1864>;

define constant <anonymous-1865> = <C-function-pointer>;
define constant <GTypePluginCompleteTypeInfo> = <anonymous-1865>;

define constant <anonymous-1866> = <C-function-pointer>;
define constant <GTypePluginCompleteInterfaceInfo> = <anonymous-1866>;

define C-struct <_GTypePluginClass>
  slot GTypePluginClass-base-iface :: <_GTypeInterface>;
  slot GTypePluginClass-use-plugin :: <anonymous-1863>;
  slot GTypePluginClass-unuse-plugin :: <anonymous-1864>;
  slot GTypePluginClass-complete-type-info :: <anonymous-1865>;
  slot GTypePluginClass-complete-interface-info :: <anonymous-1866>;
end;

define C-pointer-type <GTypePluginClass> => <_GTypePluginClass>;

define C-function g-type-plugin-get-type
  result res :: <GType>;
  c-name: "g_type_plugin_get_type";
end;

define C-function g-type-plugin-use
  input parameter arg1 :: <GTypePlugin>;
  c-name: "g_type_plugin_use";
end;

define C-function g-type-plugin-unuse
  input parameter arg1 :: <GTypePlugin>;
  c-name: "g_type_plugin_unuse";
end;

define C-function g-type-plugin-complete-type-info
  input parameter arg1 :: <GTypePlugin>;
  input parameter arg2 :: <GType>;
  input parameter arg3 :: <GTypeInfo>;
  input parameter arg4 :: <GTypeValueTable>;
  c-name: "g_type_plugin_complete_type_info";
end;

define C-function g-type-plugin-complete-interface-info
  input parameter arg1 :: <GTypePlugin>;
  input parameter arg2 :: <GType>;
  input parameter arg3 :: <GType>;
  input parameter arg4 :: <GInterfaceInfo>;
  c-name: "g_type_plugin_complete_interface_info";
end;

define C-subtype <_GTypeModule> (<_GObject>, <_GTypePlugin>) end;
define constant <GTypeModule> = <_GTypeModule>;

define constant <anonymous-1849> = <C-function-pointer>;
define constant <anonymous-1850> = <C-function-pointer>;
define constant <anonymous-1851> = <C-function-pointer>;
define constant <anonymous-1852> = <C-function-pointer>;
define constant <anonymous-1853> = <C-function-pointer>;
define constant <anonymous-1854> = <C-function-pointer>;
define C-struct <_GTypeModuleClass>
  slot GTypeModuleClass-parent-class :: <_GObjectClass>;
  slot GTypeModuleClass-load :: <anonymous-1849>;
  slot GTypeModuleClass-unload :: <anonymous-1850>;
  slot GTypeModuleClass-reserved1 :: <anonymous-1851>;
  slot GTypeModuleClass-reserved2 :: <anonymous-1852>;
  slot GTypeModuleClass-reserved3 :: <anonymous-1853>;
  slot GTypeModuleClass-reserved4 :: <anonymous-1854>;
end;

define C-pointer-type <GTypeModuleClass> => <_GTypeModuleClass>;

define C-function g-type-module-get-type
  result res :: <GType>;
  c-name: "g_type_module_get_type";
end;

define C-function g-type-module-use
  input parameter arg1 :: <GTypeModule>;
  result res :: <gboolean>;
  c-name: "g_type_module_use";
end;

define C-function g-type-module-unuse
  input parameter arg1 :: <GTypeModule>;
  c-name: "g_type_module_unuse";
end;

define C-function g-type-module-set-name
  input parameter arg1 :: <GTypeModule>;
  input parameter arg2 :: <gchar*>;
  c-name: "g_type_module_set_name";
end;

define C-function g-type-module-register-type
  input parameter arg1 :: <GTypeModule>;
  input parameter arg2 :: <GType>;
  input parameter arg3 :: <gchar*>;
  input parameter arg4 :: <GTypeInfo>;
  input parameter arg5 :: <GTypeFlags>;
  result res :: <GType>;
  c-name: "g_type_module_register_type";
end;

define C-function g-type-module-add-interface
  input parameter arg1 :: <GTypeModule>;
  input parameter arg2 :: <GType>;
  input parameter arg3 :: <GType>;
  input parameter arg4 :: <GInterfaceInfo>;
  c-name: "g_type_module_add_interface";
end;

define C-struct <_GEnumValue>
  slot GEnumValue-value :: <C-signed-int>;
  slot GEnumValue-value-name :: <gchar*>;
  slot GEnumValue-value-nick :: <gchar*>;
end;

define C-pointer-type <GEnumValue> => <_GEnumValue>;

define C-function g-type-module-register-enum
  input parameter arg1 :: <GTypeModule>;
  input parameter arg2 :: <gchar*>;
  input parameter arg3 :: <GEnumValue>;
  result res :: <GType>;
  c-name: "g_type_module_register_enum";
end;

define C-struct <_GFlagsValue>
  slot GFlagsValue-value :: <C-unsigned-int>;
  slot GFlagsValue-value-name :: <gchar*>;
  slot GFlagsValue-value-nick :: <gchar*>;
end;

define C-pointer-type <GFlagsValue> => <_GFlagsValue>;

define C-function g-type-module-register-flags
  input parameter arg1 :: <GTypeModule>;
  input parameter arg2 :: <gchar*>;
  input parameter arg3 :: <GFlagsValue>;
  result res :: <GType>;
  c-name: "g_type_module_register_flags";
end;

define C-struct <_GEnumClass>
  slot GEnumClass-g-type-class :: <_GTypeClass>;
  slot GEnumClass-minimum :: <C-signed-int>;
  slot GEnumClass-maximum :: <C-signed-int>;
  slot GEnumClass-n-values :: <C-unsigned-int>;
  slot GEnumClass-values :: <GEnumValue>;
end;

define C-pointer-type <GEnumClass> => <_GEnumClass>;

define C-struct <_GFlagsClass>
  slot GFlagsClass-g-type-class :: <_GTypeClass>;
  slot GFlagsClass-mask :: <C-unsigned-int>;
  slot GFlagsClass-n-values :: <C-unsigned-int>;
  slot GFlagsClass-values :: <GFlagsValue>;
end;

define C-pointer-type <GFlagsClass> => <_GFlagsClass>;

define C-function g-enum-get-value
  input parameter arg1 :: <GEnumClass>;
  input parameter arg2 :: <gint>;
  result res :: <GEnumValue>;
  c-name: "g_enum_get_value";
end;

define C-function g-enum-get-value-by-name
  input parameter arg1 :: <GEnumClass>;
  input parameter arg2 :: <gchar*>;
  result res :: <GEnumValue>;
  c-name: "g_enum_get_value_by_name";
end;

define C-function g-enum-get-value-by-nick
  input parameter arg1 :: <GEnumClass>;
  input parameter arg2 :: <gchar*>;
  result res :: <GEnumValue>;
  c-name: "g_enum_get_value_by_nick";
end;

define C-function g-flags-get-first-value
  input parameter arg1 :: <GFlagsClass>;
  input parameter arg2 :: <guint>;
  result res :: <GFlagsValue>;
  c-name: "g_flags_get_first_value";
end;

define C-function g-flags-get-value-by-name
  input parameter arg1 :: <GFlagsClass>;
  input parameter arg2 :: <gchar*>;
  result res :: <GFlagsValue>;
  c-name: "g_flags_get_value_by_name";
end;

define C-function g-flags-get-value-by-nick
  input parameter arg1 :: <GFlagsClass>;
  input parameter arg2 :: <gchar*>;
  result res :: <GFlagsValue>;
  c-name: "g_flags_get_value_by_nick";
end;

define C-function g-value-set-enum
  input parameter arg1 :: <GValue>;
  input parameter arg2 :: <gint>;
  c-name: "g_value_set_enum";
end;

define C-function g-value-get-enum
  input parameter arg1 :: <GValue>;
  result res :: <gint>;
  c-name: "g_value_get_enum";
end;

define C-function g-value-set-flags
  input parameter arg1 :: <GValue>;
  input parameter arg2 :: <guint>;
  c-name: "g_value_set_flags";
end;

define C-function g-value-get-flags
  input parameter arg1 :: <GValue>;
  result res :: <guint>;
  c-name: "g_value_get_flags";
end;

define C-function g-enum-register-static
  input parameter arg1 :: <gchar*>;
  input parameter arg2 :: <GEnumValue>;
  result res :: <GType>;
  c-name: "g_enum_register_static";
end;

define C-function g-flags-register-static
  input parameter arg1 :: <gchar*>;
  input parameter arg2 :: <GFlagsValue>;
  result res :: <GType>;
  c-name: "g_flags_register_static";
end;

define C-function g-enum-complete-type-info
  input parameter arg1 :: <GType>;
  input parameter arg2 :: <GTypeInfo>;
  input parameter arg3 :: <GEnumValue>;
  c-name: "g_enum_complete_type_info";
end;

define C-function g-flags-complete-type-info
  input parameter arg1 :: <GType>;
  input parameter arg2 :: <GTypeInfo>;
  input parameter arg3 :: <GFlagsValue>;
  c-name: "g_flags_complete_type_info";
end;

define constant <anonymous-1756> = <C-function-pointer>;
define constant <GObjectGetPropertyFunc> = <anonymous-1756>;

define constant <anonymous-1757> = <C-function-pointer>;
define constant <GObjectSetPropertyFunc> = <anonymous-1757>;

define constant <anonymous-1758> = <C-function-pointer>;
define constant <GObjectFinalizeFunc> = <anonymous-1758>;

define constant <anonymous-1759> = <C-function-pointer>;
define constant <GWeakNotify> = <anonymous-1759>;

define C-function g-initially-unowned-get-type
  result res :: <GType>;
  c-name: "g_initially_unowned_get_type";
end;

define C-function g-object-class-install-property
  input parameter arg1 :: <GObjectClass>;
  input parameter arg2 :: <guint>;
  input parameter arg3 :: <GParamSpec>;
  c-name: "g_object_class_install_property";
end;

define C-function g-object-class-find-property
  input parameter arg1 :: <GObjectClass>;
  input parameter arg2 :: <gchar*>;
  result res :: <GParamSpec>;
  c-name: "g_object_class_find_property";
end;

define C-function g-object-class-list-properties
  input parameter arg1 :: <GObjectClass>;
  input parameter arg2 :: <guint*>;
  result res :: <GParamSpec*>;
  c-name: "g_object_class_list_properties";
end;

define C-function g-object-class-override-property
  input parameter arg1 :: <GObjectClass>;
  input parameter arg2 :: <guint>;
  input parameter arg3 :: <gchar*>;
  c-name: "g_object_class_override_property";
end;

define C-function g-object-interface-install-property
  input parameter arg1 :: <gpointer>;
  input parameter arg2 :: <GParamSpec>;
  c-name: "g_object_interface_install_property";
end;

define C-function g-object-interface-find-property
  input parameter arg1 :: <gpointer>;
  input parameter arg2 :: <gchar*>;
  result res :: <GParamSpec>;
  c-name: "g_object_interface_find_property";
end;

define C-function g-object-interface-list-properties
  input parameter arg1 :: <gpointer>;
  input parameter arg2 :: <guint*>;
  result res :: <GParamSpec*>;
  c-name: "g_object_interface_list_properties";
end;

define C-function g-object-new
  input parameter arg1 :: <GType>;
  input parameter arg2 :: <gchar*>;
  result res :: <gpointer>;
  c-name: "g_object_new";
end;

define C-struct <_GParameter>
  slot GParameter-name :: <gchar*>;
  slot GParameter-value :: <_GValue>;
end;

define C-pointer-type <GParameter> => <_GParameter>;

define C-function g-object-newv
  input parameter arg1 :: <GType>;
  input parameter arg2 :: <guint>;
  input parameter arg3 :: <GParameter>;
  result res :: <gpointer>;
  c-name: "g_object_newv";
end;

define C-function g-object-new-valist
  input parameter arg1 :: <GType>;
  input parameter arg2 :: <gchar*>;
  input parameter arg3 :: <va-list>;
  result res :: <GObject>;
  c-name: "g_object_new_valist";
end;

define C-function g-object-set
  input parameter arg1 :: <gpointer>;
  input parameter arg2 :: <gchar*>;
  c-name: "g_object_set";
end;

define C-function g-object-get
  input parameter arg1 :: <gpointer>;
  input parameter arg2 :: <gchar*>;
  c-name: "g_object_get";
end;

define C-function g-object-connect
  input parameter arg1 :: <gpointer>;
  input parameter arg2 :: <gchar*>;
  result res :: <gpointer>;
  c-name: "g_object_connect";
end;

define C-function g-object-disconnect
  input parameter arg1 :: <gpointer>;
  input parameter arg2 :: <gchar*>;
  c-name: "g_object_disconnect";
end;

define C-function g-object-set-valist
  input parameter arg1 :: <GObject>;
  input parameter arg2 :: <gchar*>;
  input parameter arg3 :: <va-list>;
  c-name: "g_object_set_valist";
end;

define C-function g-object-get-valist
  input parameter arg1 :: <GObject>;
  input parameter arg2 :: <gchar*>;
  input parameter arg3 :: <va-list>;
  c-name: "g_object_get_valist";
end;

define C-function g-object-set-property
  input parameter arg1 :: <GObject>;
  input parameter arg2 :: <gchar*>;
  input parameter arg3 :: <GValue>;
  c-name: "g_object_set_property";
end;

define C-function g-object-get-property
  input parameter arg1 :: <GObject>;
  input parameter arg2 :: <gchar*>;
  input parameter arg3 :: <GValue>;
  c-name: "g_object_get_property";
end;

define C-function g-object-freeze-notify
  input parameter arg1 :: <GObject>;
  c-name: "g_object_freeze_notify";
end;

define C-function g-object-notify
  input parameter arg1 :: <GObject>;
  input parameter arg2 :: <gchar*>;
  c-name: "g_object_notify";
end;

define C-function g-object-thaw-notify
  input parameter arg1 :: <GObject>;
  c-name: "g_object_thaw_notify";
end;

define C-function g-object-is-floating
  input parameter arg1 :: <gpointer>;
  result res :: <gboolean>;
  c-name: "g_object_is_floating";
end;

define C-function g-object-ref-sink
  input parameter arg1 :: <gpointer>;
  result res :: <gpointer>;
  c-name: "g_object_ref_sink";
end;

define C-function g-object-ref
  input parameter arg1 :: <gpointer>;
  result res :: <gpointer>;
  c-name: "g_object_ref";
end;

define C-function g-object-unref
  input parameter arg1 :: <gpointer>;
  c-name: "g_object_unref";
end;

define C-function g-object-weak-ref
  input parameter arg1 :: <GObject>;
  input parameter arg2 :: <GWeakNotify>;
  input parameter arg3 :: <gpointer>;
  c-name: "g_object_weak_ref";
end;

define C-function g-object-weak-unref
  input parameter arg1 :: <GObject>;
  input parameter arg2 :: <GWeakNotify>;
  input parameter arg3 :: <gpointer>;
  c-name: "g_object_weak_unref";
end;

define C-function g-object-add-weak-pointer
  input parameter arg1 :: <GObject>;
  input parameter arg2 :: <gpointer*>;
  c-name: "g_object_add_weak_pointer";
end;

define C-function g-object-remove-weak-pointer
  input parameter arg1 :: <GObject>;
  input parameter arg2 :: <gpointer*>;
  c-name: "g_object_remove_weak_pointer";
end;

define constant <anonymous-1798> = <C-function-pointer>;
define constant <GToggleNotify> = <anonymous-1798>;

define C-function g-object-add-toggle-ref
  input parameter arg1 :: <GObject>;
  input parameter arg2 :: <GToggleNotify>;
  input parameter arg3 :: <gpointer>;
  c-name: "g_object_add_toggle_ref";
end;

define C-function g-object-remove-toggle-ref
  input parameter arg1 :: <GObject>;
  input parameter arg2 :: <GToggleNotify>;
  input parameter arg3 :: <gpointer>;
  c-name: "g_object_remove_toggle_ref";
end;

define C-function g-object-get-qdata
  input parameter arg1 :: <GObject>;
  input parameter arg2 :: <GQuark>;
  result res :: <gpointer>;
  c-name: "g_object_get_qdata";
end;

define C-function g-object-set-qdata
  input parameter arg1 :: <GObject>;
  input parameter arg2 :: <GQuark>;
  input parameter arg3 :: <gpointer>;
  c-name: "g_object_set_qdata";
end;

define C-function g-object-set-qdata-full
  input parameter arg1 :: <GObject>;
  input parameter arg2 :: <GQuark>;
  input parameter arg3 :: <gpointer>;
  input parameter arg4 :: <GDestroyNotify>;
  c-name: "g_object_set_qdata_full";
end;

define C-function g-object-steal-qdata
  input parameter arg1 :: <GObject>;
  input parameter arg2 :: <GQuark>;
  result res :: <gpointer>;
  c-name: "g_object_steal_qdata";
end;

define C-function g-object-get-data
  input parameter arg1 :: <GObject>;
  input parameter arg2 :: <gchar*>;
  result res :: <gpointer>;
  c-name: "g_object_get_data";
end;

define C-function g-object-set-data
  input parameter arg1 :: <GObject>;
  input parameter arg2 :: <gchar*>;
  input parameter arg3 :: <gpointer>;
  c-name: "g_object_set_data";
end;

define C-function g-object-set-data-full
  input parameter arg1 :: <GObject>;
  input parameter arg2 :: <gchar*>;
  input parameter arg3 :: <gpointer>;
  input parameter arg4 :: <GDestroyNotify>;
  c-name: "g_object_set_data_full";
end;

define C-function g-object-steal-data
  input parameter arg1 :: <GObject>;
  input parameter arg2 :: <gchar*>;
  result res :: <gpointer>;
  c-name: "g_object_steal_data";
end;

define C-function g-object-watch-closure
  input parameter arg1 :: <GObject>;
  input parameter arg2 :: <GClosure>;
  c-name: "g_object_watch_closure";
end;

define constant <anonymous-1667> = <C-function-pointer>;
define constant <GCallback> = <anonymous-1667>;

define C-function g-cclosure-new-object
  input parameter arg1 :: <GCallback>;
  input parameter arg2 :: <GObject>;
  result res :: <GClosure>;
  c-name: "g_cclosure_new_object";
end;

define C-function g-cclosure-new-object-swap
  input parameter arg1 :: <GCallback>;
  input parameter arg2 :: <GObject>;
  result res :: <GClosure>;
  c-name: "g_cclosure_new_object_swap";
end;

define C-function g-closure-new-object
  input parameter arg1 :: <guint>;
  input parameter arg2 :: <GObject>;
  result res :: <GClosure>;
  c-name: "g_closure_new_object";
end;

define C-function g-value-set-object
  input parameter arg1 :: <GValue>;
  input parameter arg2 :: <gpointer>;
  c-name: "g_value_set_object";
end;

define C-function g-value-get-object
  input parameter arg1 :: <GValue>;
  result res :: <gpointer>;
  c-name: "g_value_get_object";
end;

define C-function g-value-dup-object
  input parameter arg1 :: <GValue>;
  result res :: <gpointer>;
  c-name: "g_value_dup_object";
end;

define constant <GConnectFlags> = <C-int>;
define constant $G-CONNECT-AFTER = 1;
define constant $G-CONNECT-SWAPPED = 2;

define C-function g-signal-connect-object
  input parameter arg1 :: <gpointer>;
  input parameter arg2 :: <gchar*>;
  input parameter arg3 :: <GCallback>;
  input parameter arg4 :: <gpointer>;
  input parameter arg5 :: <GConnectFlags>;
  result res :: <gulong>;
  c-name: "g_signal_connect_object";
end;

define C-function g-object-force-floating
  input parameter arg1 :: <GObject>;
  c-name: "g_object_force_floating";
end;

define C-function g-object-run-dispose
  input parameter arg1 :: <GObject>;
  c-name: "g_object_run_dispose";
end;

define C-function g-value-take-object
  input parameter arg1 :: <GValue>;
  input parameter arg2 :: <gpointer>;
  c-name: "g_value_take_object";
end;

define C-function g-value-set-object-take-ownership
  input parameter arg1 :: <GValue>;
  input parameter arg2 :: <gpointer>;
  c-name: "g_value_set_object_take_ownership";
end;

define C-function g-object-compat-control
  input parameter arg1 :: <gsize>;
  input parameter arg2 :: <gpointer>;
  result res :: <gsize>;
  c-name: "g_object_compat_control";
end;

define constant <GSignalFlags> = <C-int>;
define constant $G-SIGNAL-RUN-FIRST = 1;
define constant $G-SIGNAL-RUN-LAST = 2;
define constant $G-SIGNAL-RUN-CLEANUP = 4;
define constant $G-SIGNAL-NO-RECURSE = 8;
define constant $G-SIGNAL-DETAILED = 16;
define constant $G-SIGNAL-ACTION = 32;
define constant $G-SIGNAL-NO-HOOKS = 64;

define C-struct <_GSignalQuery>
  slot GSignalQuery-signal-id :: <C-unsigned-int>;
  slot GSignalQuery-signal-name :: <gchar*>;
  slot GSignalQuery-itype :: <C-unsigned-int>;
  slot GSignalQuery-signal-flags :: <GSignalFlags>;
  slot GSignalQuery-return-type :: <C-unsigned-int>;
  slot GSignalQuery-n-params :: <C-unsigned-int>;
  slot GSignalQuery-param-types :: <GType*>;
end;

define C-pointer-type <GSignalQuery> => <_GSignalQuery>;

define C-struct <_GSignalInvocationHint>
  slot GSignalInvocationHint-signal-id :: <C-unsigned-int>;
  slot GSignalInvocationHint-detail :: <C-unsigned-int>;
  slot GSignalInvocationHint-run-type :: <GSignalFlags>;
end;

define C-pointer-type <GSignalInvocationHint> => <_GSignalInvocationHint>;

define constant <anonymous-1669> = <C-function-pointer>;
define constant <GClosureMarshal> = <anonymous-1669>;

define constant <GSignalCMarshaller> = <GClosureMarshal>;

define constant <anonymous-1717> = <C-function-pointer>;
define constant <GSignalEmissionHook> = <anonymous-1717>;

define constant <anonymous-1718> = <C-function-pointer>;
define constant <GSignalAccumulator> = <anonymous-1718>;

define constant <GSignalMatchType> = <C-int>;
define constant $G-SIGNAL-MATCH-ID = 1;
define constant $G-SIGNAL-MATCH-DETAIL = 2;
define constant $G-SIGNAL-MATCH-CLOSURE = 4;
define constant $G-SIGNAL-MATCH-FUNC = 8;
define constant $G-SIGNAL-MATCH-DATA = 16;
define constant $G-SIGNAL-MATCH-UNBLOCKED = 32;

define C-function g-signal-newv
  input parameter arg1 :: <gchar*>;
  input parameter arg2 :: <GType>;
  input parameter arg3 :: <GSignalFlags>;
  input parameter arg4 :: <GClosure>;
  input parameter arg5 :: <GSignalAccumulator>;
  input parameter arg6 :: <gpointer>;
  input parameter arg7 :: <GSignalCMarshaller>;
  input parameter arg8 :: <GType>;
  input parameter arg9 :: <guint>;
  input parameter arg10 :: <GType*>;
  result res :: <guint>;
  c-name: "g_signal_newv";
end;

define C-function g-signal-new-valist
  input parameter arg1 :: <gchar*>;
  input parameter arg2 :: <GType>;
  input parameter arg3 :: <GSignalFlags>;
  input parameter arg4 :: <GClosure>;
  input parameter arg5 :: <GSignalAccumulator>;
  input parameter arg6 :: <gpointer>;
  input parameter arg7 :: <GSignalCMarshaller>;
  input parameter arg8 :: <GType>;
  input parameter arg9 :: <guint>;
  input parameter arg10 :: <va-list>;
  result res :: <guint>;
  c-name: "g_signal_new_valist";
end;

define C-function g-signal-new
  input parameter arg1 :: <gchar*>;
  input parameter arg2 :: <GType>;
  input parameter arg3 :: <GSignalFlags>;
  input parameter arg4 :: <guint>;
  input parameter arg5 :: <GSignalAccumulator>;
  input parameter arg6 :: <gpointer>;
  input parameter arg7 :: <GSignalCMarshaller>;
  input parameter arg8 :: <GType>;
  input parameter arg9 :: <guint>;
  result res :: <guint>;
  c-name: "g_signal_new";
end;

define C-function g-signal-emitv
  input parameter arg1 :: <GValue>;
  input parameter arg2 :: <guint>;
  input parameter arg3 :: <GQuark>;
  input parameter arg4 :: <GValue>;
  c-name: "g_signal_emitv";
end;

define C-function g-signal-emit-valist
  input parameter arg1 :: <gpointer>;
  input parameter arg2 :: <guint>;
  input parameter arg3 :: <GQuark>;
  input parameter arg4 :: <va-list>;
  c-name: "g_signal_emit_valist";
end;

define C-function g-signal-emit
  input parameter arg1 :: <gpointer>;
  input parameter arg2 :: <guint>;
  input parameter arg3 :: <GQuark>;
  c-name: "g_signal_emit";
end;

define C-function g-signal-emit-by-name
  input parameter arg1 :: <gpointer>;
  input parameter arg2 :: <gchar*>;
  c-name: "g_signal_emit_by_name";
end;

define C-function g-signal-lookup
  input parameter arg1 :: <gchar*>;
  input parameter arg2 :: <GType>;
  result res :: <guint>;
  c-name: "g_signal_lookup";
end;

define C-function g-signal-name
  input parameter arg1 :: <guint>;
  result res :: <gchar*>;
  c-name: "g_signal_name";
end;

define C-function g-signal-query
  input parameter arg1 :: <guint>;
  input parameter arg2 :: <GSignalQuery>;
  c-name: "g_signal_query";
end;

define C-function g-signal-list-ids
  input parameter arg1 :: <GType>;
  input parameter arg2 :: <guint*>;
  result res :: <guint*>;
  c-name: "g_signal_list_ids";
end;

define C-pointer-type <GQuark*> => <GQuark>;
define C-function g-signal-parse-name
  input parameter arg1 :: <gchar*>;
  input parameter arg2 :: <GType>;
  input parameter arg3 :: <guint*>;
  input parameter arg4 :: <GQuark*>;
  input parameter arg5 :: <gboolean>;
  result res :: <gboolean>;
  c-name: "g_signal_parse_name";
end;

define C-function g-signal-get-invocation-hint
  input parameter arg1 :: <gpointer>;
  result res :: <GSignalInvocationHint>;
  c-name: "g_signal_get_invocation_hint";
end;

define C-function g-signal-stop-emission
  input parameter arg1 :: <gpointer>;
  input parameter arg2 :: <guint>;
  input parameter arg3 :: <GQuark>;
  c-name: "g_signal_stop_emission";
end;

define C-function g-signal-stop-emission-by-name
  input parameter arg1 :: <gpointer>;
  input parameter arg2 :: <gchar*>;
  c-name: "g_signal_stop_emission_by_name";
end;

define C-function g-signal-add-emission-hook
  input parameter arg1 :: <guint>;
  input parameter arg2 :: <GQuark>;
  input parameter arg3 :: <GSignalEmissionHook>;
  input parameter arg4 :: <gpointer>;
  input parameter arg5 :: <GDestroyNotify>;
  result res :: <gulong>;
  c-name: "g_signal_add_emission_hook";
end;

define C-function g-signal-remove-emission-hook
  input parameter arg1 :: <guint>;
  input parameter arg2 :: <gulong>;
  c-name: "g_signal_remove_emission_hook";
end;

define C-function g-signal-has-handler-pending
  input parameter arg1 :: <gpointer>;
  input parameter arg2 :: <guint>;
  input parameter arg3 :: <GQuark>;
  input parameter arg4 :: <gboolean>;
  result res :: <gboolean>;
  c-name: "g_signal_has_handler_pending";
end;

define C-function g-signal-connect-closure-by-id
  input parameter arg1 :: <gpointer>;
  input parameter arg2 :: <guint>;
  input parameter arg3 :: <GQuark>;
  input parameter arg4 :: <GClosure>;
  input parameter arg5 :: <gboolean>;
  result res :: <gulong>;
  c-name: "g_signal_connect_closure_by_id";
end;

define C-function g-signal-connect-closure
  input parameter arg1 :: <GObject>;
  input parameter arg2 :: <gchar*>;
  input parameter arg3 :: <GClosure>;
  input parameter arg4 :: <gboolean>;
  result res :: <gulong>;
  c-name: "g_signal_connect_closure";
end;

define C-function g-signal-connect-data
  input parameter arg1 :: <GObject>;
  input parameter arg2 :: <gchar*>;
  input parameter arg3 :: <GCallback>;
  input parameter arg4 :: <gpointer>;
  input parameter arg5 :: <GClosureNotify>;
  input parameter arg6 :: <GConnectFlags>;
  result res :: <gulong>;
  c-name: "g_signal_connect_data";
end;

define C-function g-signal-handler-block
  input parameter arg1 :: <gpointer>;
  input parameter arg2 :: <gulong>;
  c-name: "g_signal_handler_block";
end;

define C-function g-signal-handler-unblock
  input parameter arg1 :: <gpointer>;
  input parameter arg2 :: <gulong>;
  c-name: "g_signal_handler_unblock";
end;

define C-function g-signal-handler-disconnect
  input parameter arg1 :: <gpointer>;
  input parameter arg2 :: <gulong>;
  c-name: "g_signal_handler_disconnect";
end;

define C-function g-signal-handler-is-connected
  input parameter arg1 :: <gpointer>;
  input parameter arg2 :: <gulong>;
  result res :: <gboolean>;
  c-name: "g_signal_handler_is_connected";
end;

define C-function g-signal-handler-find
  input parameter arg1 :: <gpointer>;
  input parameter arg2 :: <GSignalMatchType>;
  input parameter arg3 :: <guint>;
  input parameter arg4 :: <GQuark>;
  input parameter arg5 :: <GClosure>;
  input parameter arg6 :: <gpointer>;
  input parameter arg7 :: <gpointer>;
  result res :: <gulong>;
  c-name: "g_signal_handler_find";
end;

define C-function g-signal-handlers-block-matched
  input parameter arg1 :: <gpointer>;
  input parameter arg2 :: <GSignalMatchType>;
  input parameter arg3 :: <guint>;
  input parameter arg4 :: <GQuark>;
  input parameter arg5 :: <GClosure>;
  input parameter arg6 :: <gpointer>;
  input parameter arg7 :: <gpointer>;
  result res :: <guint>;
  c-name: "g_signal_handlers_block_matched";
end;

define C-function g-signal-handlers-unblock-matched
  input parameter arg1 :: <gpointer>;
  input parameter arg2 :: <GSignalMatchType>;
  input parameter arg3 :: <guint>;
  input parameter arg4 :: <GQuark>;
  input parameter arg5 :: <GClosure>;
  input parameter arg6 :: <gpointer>;
  input parameter arg7 :: <gpointer>;
  result res :: <guint>;
  c-name: "g_signal_handlers_unblock_matched";
end;

define C-function g-signal-handlers-disconnect-matched
  input parameter arg1 :: <gpointer>;
  input parameter arg2 :: <GSignalMatchType>;
  input parameter arg3 :: <guint>;
  input parameter arg4 :: <GQuark>;
  input parameter arg5 :: <GClosure>;
  input parameter arg6 :: <gpointer>;
  input parameter arg7 :: <gpointer>;
  result res :: <guint>;
  c-name: "g_signal_handlers_disconnect_matched";
end;

define C-function g-signal-override-class-closure
  input parameter arg1 :: <guint>;
  input parameter arg2 :: <GType>;
  input parameter arg3 :: <GClosure>;
  c-name: "g_signal_override_class_closure";
end;

define C-function g-signal-chain-from-overridden
  input parameter arg1 :: <GValue>;
  input parameter arg2 :: <GValue>;
  c-name: "g_signal_chain_from_overridden";
end;

define C-function g-signal-accumulator-true-handled
  input parameter arg1 :: <GSignalInvocationHint>;
  input parameter arg2 :: <GValue>;
  input parameter arg3 :: <GValue>;
  input parameter arg4 :: <gpointer>;
  result res :: <gboolean>;
  c-name: "g_signal_accumulator_true_handled";
end;

define C-function g-signal-handlers-destroy
  input parameter arg1 :: <gpointer>;
  c-name: "g_signal_handlers_destroy";
end;

define constant $G-SIGNAL-FLAGS-MASK = 127;

define constant $G-SIGNAL-MATCH-MASK = 63;

define constant $G-SIGNAL-TYPE-STATIC-SCOPE = 1;

define C-function g-cclosure-marshal-VOID--VOID
  input parameter arg1 :: <GClosure>;
  input parameter arg2 :: <GValue>;
  input parameter arg3 :: <guint>;
  input parameter arg4 :: <GValue>;
  input parameter arg5 :: <gpointer>;
  input parameter arg6 :: <gpointer>;
  c-name: "g_cclosure_marshal_VOID__VOID";
end;

define C-function g-cclosure-marshal-VOID--BOOLEAN
  input parameter arg1 :: <GClosure>;
  input parameter arg2 :: <GValue>;
  input parameter arg3 :: <guint>;
  input parameter arg4 :: <GValue>;
  input parameter arg5 :: <gpointer>;
  input parameter arg6 :: <gpointer>;
  c-name: "g_cclosure_marshal_VOID__BOOLEAN";
end;

define C-function g-cclosure-marshal-VOID--CHAR
  input parameter arg1 :: <GClosure>;
  input parameter arg2 :: <GValue>;
  input parameter arg3 :: <guint>;
  input parameter arg4 :: <GValue>;
  input parameter arg5 :: <gpointer>;
  input parameter arg6 :: <gpointer>;
  c-name: "g_cclosure_marshal_VOID__CHAR";
end;

define C-function g-cclosure-marshal-VOID--UCHAR
  input parameter arg1 :: <GClosure>;
  input parameter arg2 :: <GValue>;
  input parameter arg3 :: <guint>;
  input parameter arg4 :: <GValue>;
  input parameter arg5 :: <gpointer>;
  input parameter arg6 :: <gpointer>;
  c-name: "g_cclosure_marshal_VOID__UCHAR";
end;

define C-function g-cclosure-marshal-VOID--INT
  input parameter arg1 :: <GClosure>;
  input parameter arg2 :: <GValue>;
  input parameter arg3 :: <guint>;
  input parameter arg4 :: <GValue>;
  input parameter arg5 :: <gpointer>;
  input parameter arg6 :: <gpointer>;
  c-name: "g_cclosure_marshal_VOID__INT";
end;

define C-function g-cclosure-marshal-VOID--UINT
  input parameter arg1 :: <GClosure>;
  input parameter arg2 :: <GValue>;
  input parameter arg3 :: <guint>;
  input parameter arg4 :: <GValue>;
  input parameter arg5 :: <gpointer>;
  input parameter arg6 :: <gpointer>;
  c-name: "g_cclosure_marshal_VOID__UINT";
end;

define C-function g-cclosure-marshal-VOID--LONG
  input parameter arg1 :: <GClosure>;
  input parameter arg2 :: <GValue>;
  input parameter arg3 :: <guint>;
  input parameter arg4 :: <GValue>;
  input parameter arg5 :: <gpointer>;
  input parameter arg6 :: <gpointer>;
  c-name: "g_cclosure_marshal_VOID__LONG";
end;

define C-function g-cclosure-marshal-VOID--ULONG
  input parameter arg1 :: <GClosure>;
  input parameter arg2 :: <GValue>;
  input parameter arg3 :: <guint>;
  input parameter arg4 :: <GValue>;
  input parameter arg5 :: <gpointer>;
  input parameter arg6 :: <gpointer>;
  c-name: "g_cclosure_marshal_VOID__ULONG";
end;

define C-function g-cclosure-marshal-VOID--ENUM
  input parameter arg1 :: <GClosure>;
  input parameter arg2 :: <GValue>;
  input parameter arg3 :: <guint>;
  input parameter arg4 :: <GValue>;
  input parameter arg5 :: <gpointer>;
  input parameter arg6 :: <gpointer>;
  c-name: "g_cclosure_marshal_VOID__ENUM";
end;

define C-function g-cclosure-marshal-VOID--FLAGS
  input parameter arg1 :: <GClosure>;
  input parameter arg2 :: <GValue>;
  input parameter arg3 :: <guint>;
  input parameter arg4 :: <GValue>;
  input parameter arg5 :: <gpointer>;
  input parameter arg6 :: <gpointer>;
  c-name: "g_cclosure_marshal_VOID__FLAGS";
end;

define C-function g-cclosure-marshal-VOID--FLOAT
  input parameter arg1 :: <GClosure>;
  input parameter arg2 :: <GValue>;
  input parameter arg3 :: <guint>;
  input parameter arg4 :: <GValue>;
  input parameter arg5 :: <gpointer>;
  input parameter arg6 :: <gpointer>;
  c-name: "g_cclosure_marshal_VOID__FLOAT";
end;

define C-function g-cclosure-marshal-VOID--DOUBLE
  input parameter arg1 :: <GClosure>;
  input parameter arg2 :: <GValue>;
  input parameter arg3 :: <guint>;
  input parameter arg4 :: <GValue>;
  input parameter arg5 :: <gpointer>;
  input parameter arg6 :: <gpointer>;
  c-name: "g_cclosure_marshal_VOID__DOUBLE";
end;

define C-function g-cclosure-marshal-VOID--STRING
  input parameter arg1 :: <GClosure>;
  input parameter arg2 :: <GValue>;
  input parameter arg3 :: <guint>;
  input parameter arg4 :: <GValue>;
  input parameter arg5 :: <gpointer>;
  input parameter arg6 :: <gpointer>;
  c-name: "g_cclosure_marshal_VOID__STRING";
end;

define C-function g-cclosure-marshal-VOID--PARAM
  input parameter arg1 :: <GClosure>;
  input parameter arg2 :: <GValue>;
  input parameter arg3 :: <guint>;
  input parameter arg4 :: <GValue>;
  input parameter arg5 :: <gpointer>;
  input parameter arg6 :: <gpointer>;
  c-name: "g_cclosure_marshal_VOID__PARAM";
end;

define C-function g-cclosure-marshal-VOID--BOXED
  input parameter arg1 :: <GClosure>;
  input parameter arg2 :: <GValue>;
  input parameter arg3 :: <guint>;
  input parameter arg4 :: <GValue>;
  input parameter arg5 :: <gpointer>;
  input parameter arg6 :: <gpointer>;
  c-name: "g_cclosure_marshal_VOID__BOXED";
end;

define C-function g-cclosure-marshal-VOID--POINTER
  input parameter arg1 :: <GClosure>;
  input parameter arg2 :: <GValue>;
  input parameter arg3 :: <guint>;
  input parameter arg4 :: <GValue>;
  input parameter arg5 :: <gpointer>;
  input parameter arg6 :: <gpointer>;
  c-name: "g_cclosure_marshal_VOID__POINTER";
end;

define C-function g-cclosure-marshal-VOID--OBJECT
  input parameter arg1 :: <GClosure>;
  input parameter arg2 :: <GValue>;
  input parameter arg3 :: <guint>;
  input parameter arg4 :: <GValue>;
  input parameter arg5 :: <gpointer>;
  input parameter arg6 :: <gpointer>;
  c-name: "g_cclosure_marshal_VOID__OBJECT";
end;

define C-function g-cclosure-marshal-VOID--UINT-POINTER
  input parameter arg1 :: <GClosure>;
  input parameter arg2 :: <GValue>;
  input parameter arg3 :: <guint>;
  input parameter arg4 :: <GValue>;
  input parameter arg5 :: <gpointer>;
  input parameter arg6 :: <gpointer>;
  c-name: "g_cclosure_marshal_VOID__UINT_POINTER";
end;

define C-function g-cclosure-marshal-BOOLEAN--FLAGS
  input parameter arg1 :: <GClosure>;
  input parameter arg2 :: <GValue>;
  input parameter arg3 :: <guint>;
  input parameter arg4 :: <GValue>;
  input parameter arg5 :: <gpointer>;
  input parameter arg6 :: <gpointer>;
  c-name: "g_cclosure_marshal_BOOLEAN__FLAGS";
end;

define C-function g-cclosure-marshal-STRING--OBJECT-POINTER
  input parameter arg1 :: <GClosure>;
  input parameter arg2 :: <GValue>;
  input parameter arg3 :: <guint>;
  input parameter arg4 :: <GValue>;
  input parameter arg5 :: <gpointer>;
  input parameter arg6 :: <gpointer>;
  c-name: "g_cclosure_marshal_STRING__OBJECT_POINTER";
end;

define constant g-cclosure-marshal-BOOL--FLAGS = g-cclosure-marshal-BOOLEAN--FLAGS;

define constant <anonymous-1627> = <C-function-pointer>;
define constant <anonymous-1628> = <C-function-pointer>;
define constant <anonymous-1629> = <C-function-pointer>;
define constant <anonymous-1630> = <C-function-pointer>;
define constant <gpointer<@4>> = <gpointer*>;
define C-struct <_GParamSpecClass>
  slot GParamSpecClass-g-type-class :: <_GTypeClass>;
  slot GParamSpecClass-value-type :: <C-unsigned-int>;
  slot GParamSpecClass-finalize :: <anonymous-1627>;
  slot GParamSpecClass-value-set-default :: <anonymous-1628>;
  slot GParamSpecClass-value-validate :: <anonymous-1629>;
  slot GParamSpecClass-values-cmp :: <anonymous-1630>;
  array slot GParamSpecClass-dummy :: <gpointer>, length: 4;
end;

define C-pointer-type <GParamSpecClass> => <_GParamSpecClass>;

define C-struct <_GParamSpecPool>
end;

define C-pointer-type <GParamSpecPool> => <_GParamSpecPool>;

define C-function g-param-spec-ref
  input parameter arg1 :: <GParamSpec>;
  result res :: <GParamSpec>;
  c-name: "g_param_spec_ref";
end;

define C-function g-param-spec-unref
  input parameter arg1 :: <GParamSpec>;
  c-name: "g_param_spec_unref";
end;

define C-function g-param-spec-sink
  input parameter arg1 :: <GParamSpec>;
  c-name: "g_param_spec_sink";
end;

define C-function g-param-spec-ref-sink
  input parameter arg1 :: <GParamSpec>;
  result res :: <GParamSpec>;
  c-name: "g_param_spec_ref_sink";
end;

define C-function g-param-spec-get-qdata
  input parameter arg1 :: <GParamSpec>;
  input parameter arg2 :: <GQuark>;
  result res :: <gpointer>;
  c-name: "g_param_spec_get_qdata";
end;

define C-function g-param-spec-set-qdata
  input parameter arg1 :: <GParamSpec>;
  input parameter arg2 :: <GQuark>;
  input parameter arg3 :: <gpointer>;
  c-name: "g_param_spec_set_qdata";
end;

define C-function g-param-spec-set-qdata-full
  input parameter arg1 :: <GParamSpec>;
  input parameter arg2 :: <GQuark>;
  input parameter arg3 :: <gpointer>;
  input parameter arg4 :: <GDestroyNotify>;
  c-name: "g_param_spec_set_qdata_full";
end;

define C-function g-param-spec-steal-qdata
  input parameter arg1 :: <GParamSpec>;
  input parameter arg2 :: <GQuark>;
  result res :: <gpointer>;
  c-name: "g_param_spec_steal_qdata";
end;

define C-function g-param-spec-get-redirect-target
  input parameter arg1 :: <GParamSpec>;
  result res :: <GParamSpec>;
  c-name: "g_param_spec_get_redirect_target";
end;

define C-function g-param-value-set-default
  input parameter arg1 :: <GParamSpec>;
  input parameter arg2 :: <GValue>;
  c-name: "g_param_value_set_default";
end;

define C-function g-param-value-defaults
  input parameter arg1 :: <GParamSpec>;
  input parameter arg2 :: <GValue>;
  result res :: <gboolean>;
  c-name: "g_param_value_defaults";
end;

define C-function g-param-value-validate
  input parameter arg1 :: <GParamSpec>;
  input parameter arg2 :: <GValue>;
  result res :: <gboolean>;
  c-name: "g_param_value_validate";
end;

define C-function g-param-value-convert
  input parameter arg1 :: <GParamSpec>;
  input parameter arg2 :: <GValue>;
  input parameter arg3 :: <GValue>;
  input parameter arg4 :: <gboolean>;
  result res :: <gboolean>;
  c-name: "g_param_value_convert";
end;

define C-function g-param-values-cmp
  input parameter arg1 :: <GParamSpec>;
  input parameter arg2 :: <GValue>;
  input parameter arg3 :: <GValue>;
  result res :: <gint>;
  c-name: "g_param_values_cmp";
end;

define C-function g-param-spec-get-name
  input parameter arg1 :: <GParamSpec>;
  result res :: <gchar*>;
  c-name: "g_param_spec_get_name";
end;

define C-function g-param-spec-get-nick
  input parameter arg1 :: <GParamSpec>;
  result res :: <gchar*>;
  c-name: "g_param_spec_get_nick";
end;

define C-function g-param-spec-get-blurb
  input parameter arg1 :: <GParamSpec>;
  result res :: <gchar*>;
  c-name: "g_param_spec_get_blurb";
end;

define C-function g-value-set-param
  input parameter arg1 :: <GValue>;
  input parameter arg2 :: <GParamSpec>;
  c-name: "g_value_set_param";
end;

define C-function g-value-get-param
  input parameter arg1 :: <GValue>;
  result res :: <GParamSpec>;
  c-name: "g_value_get_param";
end;

define C-function g-value-dup-param
  input parameter arg1 :: <GValue>;
  result res :: <GParamSpec>;
  c-name: "g_value_dup_param";
end;

define C-function g-value-take-param
  input parameter arg1 :: <GValue>;
  input parameter arg2 :: <GParamSpec>;
  c-name: "g_value_take_param";
end;

define C-function g-value-set-param-take-ownership
  input parameter arg1 :: <GValue>;
  input parameter arg2 :: <GParamSpec>;
  c-name: "g_value_set_param_take_ownership";
end;

define constant <anonymous-1653> = <C-function-pointer>;
define constant <anonymous-1654> = <C-function-pointer>;
define constant <anonymous-1655> = <C-function-pointer>;
define constant <anonymous-1656> = <C-function-pointer>;
define constant <anonymous-1657> = <C-function-pointer>;
define C-struct <_GParamSpecTypeInfo>
  slot GParamSpecTypeInfo-instance-size :: <C-unsigned-short>;
  slot GParamSpecTypeInfo-n-preallocs :: <C-unsigned-short>;
  slot GParamSpecTypeInfo-instance-init :: <anonymous-1653>;
  slot GParamSpecTypeInfo-value-type :: <C-unsigned-int>;
  slot GParamSpecTypeInfo-finalize :: <anonymous-1654>;
  slot GParamSpecTypeInfo-value-set-default :: <anonymous-1655>;
  slot GParamSpecTypeInfo-value-validate :: <anonymous-1656>;
  slot GParamSpecTypeInfo-values-cmp :: <anonymous-1657>;
end;

define C-pointer-type <GParamSpecTypeInfo> => <_GParamSpecTypeInfo>;

define C-function g-param-type-register-static
  input parameter arg1 :: <gchar*>;
  input parameter arg2 :: <GParamSpecTypeInfo>;
  result res :: <GType>;
  c-name: "g_param_type_register_static";
end;

define C-function g-param-spec-internal
  input parameter arg1 :: <GType>;
  input parameter arg2 :: <gchar*>;
  input parameter arg3 :: <gchar*>;
  input parameter arg4 :: <gchar*>;
  input parameter arg5 :: <GParamFlags>;
  result res :: <gpointer>;
  c-name: "g_param_spec_internal";
end;

define C-function g-param-spec-pool-new
  input parameter arg1 :: <gboolean>;
  result res :: <GParamSpecPool>;
  c-name: "g_param_spec_pool_new";
end;

define C-function g-param-spec-pool-insert
  input parameter arg1 :: <GParamSpecPool>;
  input parameter arg2 :: <GParamSpec>;
  input parameter arg3 :: <GType>;
  c-name: "g_param_spec_pool_insert";
end;

define C-function g-param-spec-pool-remove
  input parameter arg1 :: <GParamSpecPool>;
  input parameter arg2 :: <GParamSpec>;
  c-name: "g_param_spec_pool_remove";
end;

define C-function g-param-spec-pool-lookup
  input parameter arg1 :: <GParamSpecPool>;
  input parameter arg2 :: <gchar*>;
  input parameter arg3 :: <GType>;
  input parameter arg4 :: <gboolean>;
  result res :: <GParamSpec>;
  c-name: "g_param_spec_pool_lookup";
end;

define C-function g-param-spec-pool-list-owned
  input parameter arg1 :: <GParamSpecPool>;
  input parameter arg2 :: <GType>;
  result res :: <GList>;
  c-name: "g_param_spec_pool_list_owned";
end;

define C-function g-param-spec-pool-list
  input parameter arg1 :: <GParamSpecPool>;
  input parameter arg2 :: <GType>;
  input parameter arg3 :: <guint*>;
  result res :: <GParamSpec*>;
  c-name: "g_param_spec_pool_list";
end;

define constant $G-PARAM-READWRITE = 0;

define constant $G-PARAM-STATIC-STRINGS = 0;

define constant $G-PARAM-MASK = 255;

define constant $G-PARAM-USER-SHIFT = 8;

define C-struct <_GCClosure>
  slot GCClosure-closure :: <_GClosure>;
  slot GCClosure-callback :: <C-void*>;
end;

define C-pointer-type <GCClosure> => <_GCClosure>;

define C-function g-cclosure-new
  input parameter arg1 :: <GCallback>;
  input parameter arg2 :: <gpointer>;
  input parameter arg3 :: <GClosureNotify>;
  result res :: <GClosure>;
  c-name: "g_cclosure_new";
end;

define C-function g-cclosure-new-swap
  input parameter arg1 :: <GCallback>;
  input parameter arg2 :: <gpointer>;
  input parameter arg3 :: <GClosureNotify>;
  result res :: <GClosure>;
  c-name: "g_cclosure_new_swap";
end;

define C-function g-signal-type-cclosure-new
  input parameter arg1 :: <GType>;
  input parameter arg2 :: <guint>;
  result res :: <GClosure>;
  c-name: "g_signal_type_cclosure_new";
end;

define C-function g-closure-ref
  input parameter arg1 :: <GClosure>;
  result res :: <GClosure>;
  c-name: "g_closure_ref";
end;

define C-function g-closure-sink
  input parameter arg1 :: <GClosure>;
  c-name: "g_closure_sink";
end;

define C-function g-closure-unref
  input parameter arg1 :: <GClosure>;
  c-name: "g_closure_unref";
end;

define C-function g-closure-new-simple
  input parameter arg1 :: <guint>;
  input parameter arg2 :: <gpointer>;
  result res :: <GClosure>;
  c-name: "g_closure_new_simple";
end;

define C-function g-closure-add-finalize-notifier
  input parameter arg1 :: <GClosure>;
  input parameter arg2 :: <gpointer>;
  input parameter arg3 :: <GClosureNotify>;
  c-name: "g_closure_add_finalize_notifier";
end;

define C-function g-closure-remove-finalize-notifier
  input parameter arg1 :: <GClosure>;
  input parameter arg2 :: <gpointer>;
  input parameter arg3 :: <GClosureNotify>;
  c-name: "g_closure_remove_finalize_notifier";
end;

define C-function g-closure-add-invalidate-notifier
  input parameter arg1 :: <GClosure>;
  input parameter arg2 :: <gpointer>;
  input parameter arg3 :: <GClosureNotify>;
  c-name: "g_closure_add_invalidate_notifier";
end;

define C-function g-closure-remove-invalidate-notifier
  input parameter arg1 :: <GClosure>;
  input parameter arg2 :: <gpointer>;
  input parameter arg3 :: <GClosureNotify>;
  c-name: "g_closure_remove_invalidate_notifier";
end;

define C-function g-closure-add-marshal-guards
  input parameter arg1 :: <GClosure>;
  input parameter arg2 :: <gpointer>;
  input parameter arg3 :: <GClosureNotify>;
  input parameter arg4 :: <gpointer>;
  input parameter arg5 :: <GClosureNotify>;
  c-name: "g_closure_add_marshal_guards";
end;

define C-function g-closure-set-marshal
  input parameter arg1 :: <GClosure>;
  input parameter arg2 :: <GClosureMarshal>;
  c-name: "g_closure_set_marshal";
end;

define C-function g-closure-set-meta-marshal
  input parameter arg1 :: <GClosure>;
  input parameter arg2 :: <gpointer>;
  input parameter arg3 :: <GClosureMarshal>;
  c-name: "g_closure_set_meta_marshal";
end;

define C-function g-closure-invalidate
  input parameter arg1 :: <GClosure>;
  c-name: "g_closure_invalidate";
end;

define C-function g-closure-invoke
  input parameter arg1 :: <GClosure>;
  input parameter arg2 :: <GValue>;
  input parameter arg3 :: <guint>;
  input parameter arg4 :: <GValue>;
  input parameter arg5 :: <gpointer>;
  c-name: "g_closure_invoke";
end;

define C-function g-source-set-closure
  input parameter arg1 :: <GSource>;
  input parameter arg2 :: <GClosure>;
  c-name: "g_source_set_closure";
end;

define C-function g-io-channel-get-type
  result res :: <GType>;
  c-name: "g_io_channel_get_type";
end;

define C-function g-io-condition-get-type
  result res :: <GType>;
  c-name: "g_io_condition_get_type";
end;

define C-struct <_GParamSpecChar>
  slot GParamSpecChar-parent-instance :: <_GParamSpec>;
  slot GParamSpecChar-minimum :: <C-signed-char>;
  slot GParamSpecChar-maximum :: <C-signed-char>;
  slot GParamSpecChar-default-value :: <C-signed-char>;
end;

define C-pointer-type <GParamSpecChar> => <_GParamSpecChar>;

define C-struct <_GParamSpecUChar>
  slot GParamSpecUChar-parent-instance :: <_GParamSpec>;
  slot GParamSpecUChar-minimum :: <C-unsigned-char>;
  slot GParamSpecUChar-maximum :: <C-unsigned-char>;
  slot GParamSpecUChar-default-value :: <C-unsigned-char>;
end;

define C-pointer-type <GParamSpecUChar> => <_GParamSpecUChar>;

define C-struct <_GParamSpecBoolean>
  slot GParamSpecBoolean-parent-instance :: <_GParamSpec>;
  slot GParamSpecBoolean-default-value :: <C-signed-int>;
end;

define C-pointer-type <GParamSpecBoolean> => <_GParamSpecBoolean>;

define C-struct <_GParamSpecInt>
  slot GParamSpecInt-parent-instance :: <_GParamSpec>;
  slot GParamSpecInt-minimum :: <C-signed-int>;
  slot GParamSpecInt-maximum :: <C-signed-int>;
  slot GParamSpecInt-default-value :: <C-signed-int>;
end;

define C-pointer-type <GParamSpecInt> => <_GParamSpecInt>;

define C-struct <_GParamSpecUInt>
  slot GParamSpecUInt-parent-instance :: <_GParamSpec>;
  slot GParamSpecUInt-minimum :: <C-unsigned-int>;
  slot GParamSpecUInt-maximum :: <C-unsigned-int>;
  slot GParamSpecUInt-default-value :: <C-unsigned-int>;
end;

define C-pointer-type <GParamSpecUInt> => <_GParamSpecUInt>;

define C-struct <_GParamSpecLong>
  slot GParamSpecLong-parent-instance :: <_GParamSpec>;
  slot GParamSpecLong-minimum :: <C-signed-long>;
  slot GParamSpecLong-maximum :: <C-signed-long>;
  slot GParamSpecLong-default-value :: <C-signed-long>;
end;

define C-pointer-type <GParamSpecLong> => <_GParamSpecLong>;

define C-struct <_GParamSpecULong>
  slot GParamSpecULong-parent-instance :: <_GParamSpec>;
  slot GParamSpecULong-minimum :: <C-unsigned-long>;
  slot GParamSpecULong-maximum :: <C-unsigned-long>;
  slot GParamSpecULong-default-value :: <C-unsigned-long>;
end;

define C-pointer-type <GParamSpecULong> => <_GParamSpecULong>;

define C-struct <_GParamSpecInt64>
  slot GParamSpecInt64-parent-instance :: <_GParamSpec>;
  slot GParamSpecInt64-minimum :: <C-signed-long>;
  slot GParamSpecInt64-maximum :: <C-signed-long>;
  slot GParamSpecInt64-default-value :: <C-signed-long>;
end;

define C-pointer-type <GParamSpecInt64> => <_GParamSpecInt64>;

define C-struct <_GParamSpecUInt64>
  slot GParamSpecUInt64-parent-instance :: <_GParamSpec>;
  slot GParamSpecUInt64-minimum :: <C-unsigned-long>;
  slot GParamSpecUInt64-maximum :: <C-unsigned-long>;
  slot GParamSpecUInt64-default-value :: <C-unsigned-long>;
end;

define C-pointer-type <GParamSpecUInt64> => <_GParamSpecUInt64>;

define C-struct <_GParamSpecUnichar>
  slot GParamSpecUnichar-parent-instance :: <_GParamSpec>;
  slot GParamSpecUnichar-default-value :: <C-unsigned-int>;
end;

define C-pointer-type <GParamSpecUnichar> => <_GParamSpecUnichar>;

define C-struct <_GParamSpecEnum>
  slot GParamSpecEnum-parent-instance :: <_GParamSpec>;
  slot GParamSpecEnum-enum-class :: <GEnumClass>;
  slot GParamSpecEnum-default-value :: <C-signed-int>;
end;

define C-pointer-type <GParamSpecEnum> => <_GParamSpecEnum>;

define C-struct <_GParamSpecFlags>
  slot GParamSpecFlags-parent-instance :: <_GParamSpec>;
  slot GParamSpecFlags-flags-class :: <GFlagsClass>;
  slot GParamSpecFlags-default-value :: <C-unsigned-int>;
end;

define C-pointer-type <GParamSpecFlags> => <_GParamSpecFlags>;

define C-struct <_GParamSpecFloat>
  slot GParamSpecFloat-parent-instance :: <_GParamSpec>;
  slot GParamSpecFloat-minimum :: <C-float>;
  slot GParamSpecFloat-maximum :: <C-float>;
  slot GParamSpecFloat-default-value :: <C-float>;
  slot GParamSpecFloat-epsilon :: <C-float>;
end;

define C-pointer-type <GParamSpecFloat> => <_GParamSpecFloat>;

define C-struct <_GParamSpecDouble>
  slot GParamSpecDouble-parent-instance :: <_GParamSpec>;
  slot GParamSpecDouble-minimum :: <C-double>;
  slot GParamSpecDouble-maximum :: <C-double>;
  slot GParamSpecDouble-default-value :: <C-double>;
  slot GParamSpecDouble-epsilon :: <C-double>;
end;

define C-pointer-type <GParamSpecDouble> => <_GParamSpecDouble>;

define C-struct <_GParamSpecString>
  slot GParamSpecString-parent-instance :: <_GParamSpec>;
  slot GParamSpecString-default-value :: <gchar*>;
  slot GParamSpecString-cset-first :: <gchar*>;
  slot GParamSpecString-cset-nth :: <gchar*>;
  slot GParamSpecString-substitutor :: <C-signed-char>;
  bitfield slot GParamSpecString-null-fold-if-empty :: <C-int>, width: 1;
  bitfield slot GParamSpecString-ensure-non-null :: <C-int>, width: 1;
end;

define C-pointer-type <GParamSpecString> => <_GParamSpecString>;

define C-struct <_GParamSpecParam>
  slot GParamSpecParam-parent-instance :: <_GParamSpec>;
end;

define C-pointer-type <GParamSpecParam> => <_GParamSpecParam>;

define C-struct <_GParamSpecBoxed>
  slot GParamSpecBoxed-parent-instance :: <_GParamSpec>;
end;

define C-pointer-type <GParamSpecBoxed> => <_GParamSpecBoxed>;

define C-struct <_GParamSpecPointer>
  slot GParamSpecPointer-parent-instance :: <_GParamSpec>;
end;

define C-pointer-type <GParamSpecPointer> => <_GParamSpecPointer>;

define C-struct <_GParamSpecValueArray>
  slot GParamSpecValueArray-parent-instance :: <_GParamSpec>;
  slot GParamSpecValueArray-element-spec :: <GParamSpec>;
  slot GParamSpecValueArray-fixed-n-elements :: <C-unsigned-int>;
end;

define C-pointer-type <GParamSpecValueArray> => <_GParamSpecValueArray>;

define C-struct <_GParamSpecObject>
  slot GParamSpecObject-parent-instance :: <_GParamSpec>;
end;

define C-pointer-type <GParamSpecObject> => <_GParamSpecObject>;

define C-struct <_GParamSpecOverride>
  slot GParamSpecOverride-parent-instance :: <_GParamSpec>;
  slot GParamSpecOverride-overridden :: <GParamSpec>;
end;

define C-pointer-type <GParamSpecOverride> => <_GParamSpecOverride>;

define C-struct <_GParamSpecGType>
  slot GParamSpecGType-parent-instance :: <_GParamSpec>;
  slot GParamSpecGType-is-a-type :: <C-unsigned-int>;
end;

define C-pointer-type <GParamSpecGType> => <_GParamSpecGType>;

define C-function g-param-spec-char
  input parameter arg1 :: <gchar*>;
  input parameter arg2 :: <gchar*>;
  input parameter arg3 :: <gchar*>;
  input parameter arg4 :: <gint8>;
  input parameter arg5 :: <gint8>;
  input parameter arg6 :: <gint8>;
  input parameter arg7 :: <GParamFlags>;
  result res :: <GParamSpec>;
  c-name: "g_param_spec_char";
end;

define C-function g-param-spec-uchar
  input parameter arg1 :: <gchar*>;
  input parameter arg2 :: <gchar*>;
  input parameter arg3 :: <gchar*>;
  input parameter arg4 :: <guint8>;
  input parameter arg5 :: <guint8>;
  input parameter arg6 :: <guint8>;
  input parameter arg7 :: <GParamFlags>;
  result res :: <GParamSpec>;
  c-name: "g_param_spec_uchar";
end;

define C-function g-param-spec-boolean
  input parameter arg1 :: <gchar*>;
  input parameter arg2 :: <gchar*>;
  input parameter arg3 :: <gchar*>;
  input parameter arg4 :: <gboolean>;
  input parameter arg5 :: <GParamFlags>;
  result res :: <GParamSpec>;
  c-name: "g_param_spec_boolean";
end;

define C-function g-param-spec-int
  input parameter arg1 :: <gchar*>;
  input parameter arg2 :: <gchar*>;
  input parameter arg3 :: <gchar*>;
  input parameter arg4 :: <gint>;
  input parameter arg5 :: <gint>;
  input parameter arg6 :: <gint>;
  input parameter arg7 :: <GParamFlags>;
  result res :: <GParamSpec>;
  c-name: "g_param_spec_int";
end;

define C-function g-param-spec-uint
  input parameter arg1 :: <gchar*>;
  input parameter arg2 :: <gchar*>;
  input parameter arg3 :: <gchar*>;
  input parameter arg4 :: <guint>;
  input parameter arg5 :: <guint>;
  input parameter arg6 :: <guint>;
  input parameter arg7 :: <GParamFlags>;
  result res :: <GParamSpec>;
  c-name: "g_param_spec_uint";
end;

define C-function g-param-spec-long
  input parameter arg1 :: <gchar*>;
  input parameter arg2 :: <gchar*>;
  input parameter arg3 :: <gchar*>;
  input parameter arg4 :: <glong>;
  input parameter arg5 :: <glong>;
  input parameter arg6 :: <glong>;
  input parameter arg7 :: <GParamFlags>;
  result res :: <GParamSpec>;
  c-name: "g_param_spec_long";
end;

define C-function g-param-spec-ulong
  input parameter arg1 :: <gchar*>;
  input parameter arg2 :: <gchar*>;
  input parameter arg3 :: <gchar*>;
  input parameter arg4 :: <gulong>;
  input parameter arg5 :: <gulong>;
  input parameter arg6 :: <gulong>;
  input parameter arg7 :: <GParamFlags>;
  result res :: <GParamSpec>;
  c-name: "g_param_spec_ulong";
end;

define C-function g-param-spec-int64
  input parameter arg1 :: <gchar*>;
  input parameter arg2 :: <gchar*>;
  input parameter arg3 :: <gchar*>;
  input parameter arg4 :: <gint64>;
  input parameter arg5 :: <gint64>;
  input parameter arg6 :: <gint64>;
  input parameter arg7 :: <GParamFlags>;
  result res :: <GParamSpec>;
  c-name: "g_param_spec_int64";
end;

define C-function g-param-spec-uint64
  input parameter arg1 :: <gchar*>;
  input parameter arg2 :: <gchar*>;
  input parameter arg3 :: <gchar*>;
  input parameter arg4 :: <guint64>;
  input parameter arg5 :: <guint64>;
  input parameter arg6 :: <guint64>;
  input parameter arg7 :: <GParamFlags>;
  result res :: <GParamSpec>;
  c-name: "g_param_spec_uint64";
end;

define C-function g-param-spec-unichar
  input parameter arg1 :: <gchar*>;
  input parameter arg2 :: <gchar*>;
  input parameter arg3 :: <gchar*>;
  input parameter arg4 :: <gunichar>;
  input parameter arg5 :: <GParamFlags>;
  result res :: <GParamSpec>;
  c-name: "g_param_spec_unichar";
end;

define C-function g-param-spec-enum
  input parameter arg1 :: <gchar*>;
  input parameter arg2 :: <gchar*>;
  input parameter arg3 :: <gchar*>;
  input parameter arg4 :: <GType>;
  input parameter arg5 :: <gint>;
  input parameter arg6 :: <GParamFlags>;
  result res :: <GParamSpec>;
  c-name: "g_param_spec_enum";
end;

define C-function g-param-spec-flags
  input parameter arg1 :: <gchar*>;
  input parameter arg2 :: <gchar*>;
  input parameter arg3 :: <gchar*>;
  input parameter arg4 :: <GType>;
  input parameter arg5 :: <guint>;
  input parameter arg6 :: <GParamFlags>;
  result res :: <GParamSpec>;
  c-name: "g_param_spec_flags";
end;

define C-function g-param-spec-float
  input parameter arg1 :: <gchar*>;
  input parameter arg2 :: <gchar*>;
  input parameter arg3 :: <gchar*>;
  input parameter arg4 :: <gfloat>;
  input parameter arg5 :: <gfloat>;
  input parameter arg6 :: <gfloat>;
  input parameter arg7 :: <GParamFlags>;
  result res :: <GParamSpec>;
  c-name: "g_param_spec_float";
end;

define C-function g-param-spec-double
  input parameter arg1 :: <gchar*>;
  input parameter arg2 :: <gchar*>;
  input parameter arg3 :: <gchar*>;
  input parameter arg4 :: <gdouble>;
  input parameter arg5 :: <gdouble>;
  input parameter arg6 :: <gdouble>;
  input parameter arg7 :: <GParamFlags>;
  result res :: <GParamSpec>;
  c-name: "g_param_spec_double";
end;

define C-function g-param-spec-string
  input parameter arg1 :: <gchar*>;
  input parameter arg2 :: <gchar*>;
  input parameter arg3 :: <gchar*>;
  input parameter arg4 :: <gchar*>;
  input parameter arg5 :: <GParamFlags>;
  result res :: <GParamSpec>;
  c-name: "g_param_spec_string";
end;

define C-function g-param-spec-param
  input parameter arg1 :: <gchar*>;
  input parameter arg2 :: <gchar*>;
  input parameter arg3 :: <gchar*>;
  input parameter arg4 :: <GType>;
  input parameter arg5 :: <GParamFlags>;
  result res :: <GParamSpec>;
  c-name: "g_param_spec_param";
end;

define C-function g-param-spec-boxed
  input parameter arg1 :: <gchar*>;
  input parameter arg2 :: <gchar*>;
  input parameter arg3 :: <gchar*>;
  input parameter arg4 :: <GType>;
  input parameter arg5 :: <GParamFlags>;
  result res :: <GParamSpec>;
  c-name: "g_param_spec_boxed";
end;

define C-function g-param-spec-pointer
  input parameter arg1 :: <gchar*>;
  input parameter arg2 :: <gchar*>;
  input parameter arg3 :: <gchar*>;
  input parameter arg4 :: <GParamFlags>;
  result res :: <GParamSpec>;
  c-name: "g_param_spec_pointer";
end;

define C-function g-param-spec-value-array
  input parameter arg1 :: <gchar*>;
  input parameter arg2 :: <gchar*>;
  input parameter arg3 :: <gchar*>;
  input parameter arg4 :: <GParamSpec>;
  input parameter arg5 :: <GParamFlags>;
  result res :: <GParamSpec>;
  c-name: "g_param_spec_value_array";
end;

define C-function g-param-spec-object
  input parameter arg1 :: <gchar*>;
  input parameter arg2 :: <gchar*>;
  input parameter arg3 :: <gchar*>;
  input parameter arg4 :: <GType>;
  input parameter arg5 :: <GParamFlags>;
  result res :: <GParamSpec>;
  c-name: "g_param_spec_object";
end;

define C-function g-param-spec-override
  input parameter arg1 :: <gchar*>;
  input parameter arg2 :: <GParamSpec>;
  result res :: <GParamSpec>;
  c-name: "g_param_spec_override";
end;

define C-function g-param-spec-gtype
  input parameter arg1 :: <gchar*>;
  input parameter arg2 :: <gchar*>;
  input parameter arg3 :: <gchar*>;
  input parameter arg4 :: <GType>;
  input parameter arg5 :: <GParamFlags>;
  result res :: <GParamSpec>;
  c-name: "g_param_spec_gtype";
end;

 /* Ignoring declaration for {instance of <variable-declaration>} "g-param-spec-types"*/
define constant <anonymous-1580> = <C-function-pointer>;
define constant <GBoxedCopyFunc> = <anonymous-1580>;

define constant <anonymous-1581> = <C-function-pointer>;
define constant <GBoxedFreeFunc> = <anonymous-1581>;

define C-function g-boxed-copy
  input parameter arg1 :: <GType>;
  input parameter arg2 :: <gconstpointer>;
  result res :: <gpointer>;
  c-name: "g_boxed_copy";
end;

define C-function g-boxed-free
  input parameter arg1 :: <GType>;
  input parameter arg2 :: <gpointer>;
  c-name: "g_boxed_free";
end;

define C-function g-value-set-boxed
  input parameter arg1 :: <GValue>;
  input parameter arg2 :: <gconstpointer>;
  c-name: "g_value_set_boxed";
end;

define C-function g-value-set-static-boxed
  input parameter arg1 :: <GValue>;
  input parameter arg2 :: <gconstpointer>;
  c-name: "g_value_set_static_boxed";
end;

define C-function g-value-get-boxed
  input parameter arg1 :: <GValue>;
  result res :: <gpointer>;
  c-name: "g_value_get_boxed";
end;

define C-function g-value-dup-boxed
  input parameter arg1 :: <GValue>;
  result res :: <gpointer>;
  c-name: "g_value_dup_boxed";
end;

define C-function g-boxed-type-register-static
  input parameter arg1 :: <gchar*>;
  input parameter arg2 :: <GBoxedCopyFunc>;
  input parameter arg3 :: <GBoxedFreeFunc>;
  result res :: <GType>;
  c-name: "g_boxed_type_register_static";
end;

define C-function g-value-take-boxed
  input parameter arg1 :: <GValue>;
  input parameter arg2 :: <gconstpointer>;
  c-name: "g_value_take_boxed";
end;

define C-function g-value-set-boxed-take-ownership
  input parameter arg1 :: <GValue>;
  input parameter arg2 :: <gconstpointer>;
  c-name: "g_value_set_boxed_take_ownership";
end;

define C-function g-closure-get-type
  result res :: <GType>;
  c-name: "g_closure_get_type";
end;

define C-function g-value-get-type
  result res :: <GType>;
  c-name: "g_value_get_type";
end;

define C-function g-value-array-get-type
  result res :: <GType>;
  c-name: "g_value_array_get_type";
end;

define C-function g-date-get-type
  result res :: <GType>;
  c-name: "g_date_get_type";
end;

define C-function g-strv-get-type
  result res :: <GType>;
  c-name: "g_strv_get_type";
end;

define C-function g-gstring-get-type
  result res :: <GType>;
  c-name: "g_gstring_get_type";
end;

define C-function g-hash-table-get-type
  result res :: <GType>;
  c-name: "g_hash_table_get_type";
end;

define C-function g-regex-get-type
  result res :: <GType>;
  c-name: "g_regex_get_type";
end;

define constant <GStrv> = <gchar**>;

define C-struct <_GtkSettingsClass>
  slot GtkSettingsClass-parent-class :: <_GObjectClass>;
end;

define C-pointer-type <GtkSettingsClass> => <_GtkSettingsClass>;

define C-struct <_GtkSettingsValue>
  slot GtkSettingsValue-origin :: <gchar*>;
  slot GtkSettingsValue-value :: <_GValue>;
end;

define C-pointer-type <GtkSettingsValue> => <_GtkSettingsValue>;

define C-function gtk-settings-get-type
  result res :: <GType>;
  c-name: "gtk_settings_get_type";
end;

define C-function gtk-settings-get-default
  result res :: <GtkSettings>;
  c-name: "gtk_settings_get_default";
end;

define C-function gtk-settings-get-for-screen
  input parameter arg1 :: <GdkScreen>;
  result res :: <GtkSettings>;
  c-name: "gtk_settings_get_for_screen";
end;

define C-function gtk-settings-install-property
  input parameter arg1 :: <GParamSpec>;
  c-name: "gtk_settings_install_property";
end;

define C-function gtk-settings-install-property-parser
  input parameter arg1 :: <GParamSpec>;
  input parameter arg2 :: <GtkRcPropertyParser>;
  c-name: "gtk_settings_install_property_parser";
end;

define C-function gtk-rc-property-parse-color
  input parameter arg1 :: <GParamSpec>;
  input parameter arg2 :: <GString>;
  input parameter arg3 :: <GValue>;
  result res :: <gboolean>;
  c-name: "gtk_rc_property_parse_color";
end;

define C-function gtk-rc-property-parse-enum
  input parameter arg1 :: <GParamSpec>;
  input parameter arg2 :: <GString>;
  input parameter arg3 :: <GValue>;
  result res :: <gboolean>;
  c-name: "gtk_rc_property_parse_enum";
end;

define C-function gtk-rc-property-parse-flags
  input parameter arg1 :: <GParamSpec>;
  input parameter arg2 :: <GString>;
  input parameter arg3 :: <GValue>;
  result res :: <gboolean>;
  c-name: "gtk_rc_property_parse_flags";
end;

define C-function gtk-rc-property-parse-requisition
  input parameter arg1 :: <GParamSpec>;
  input parameter arg2 :: <GString>;
  input parameter arg3 :: <GValue>;
  result res :: <gboolean>;
  c-name: "gtk_rc_property_parse_requisition";
end;

define C-function gtk-rc-property-parse-border
  input parameter arg1 :: <GParamSpec>;
  input parameter arg2 :: <GString>;
  input parameter arg3 :: <GValue>;
  result res :: <gboolean>;
  c-name: "gtk_rc_property_parse_border";
end;

define C-function gtk-settings-set-property-value
  input parameter arg1 :: <GtkSettings>;
  input parameter arg2 :: <gchar*>;
  input parameter arg3 :: <GtkSettingsValue>;
  c-name: "gtk_settings_set_property_value";
end;

define C-function gtk-settings-set-string-property
  input parameter arg1 :: <GtkSettings>;
  input parameter arg2 :: <gchar*>;
  input parameter arg3 :: <gchar*>;
  input parameter arg4 :: <gchar*>;
  c-name: "gtk_settings_set_string_property";
end;

define C-function gtk-settings-set-long-property
  input parameter arg1 :: <GtkSettings>;
  input parameter arg2 :: <gchar*>;
  input parameter arg3 :: <glong>;
  input parameter arg4 :: <gchar*>;
  c-name: "gtk_settings_set_long_property";
end;

define C-function gtk-settings-set-double-property
  input parameter arg1 :: <GtkSettings>;
  input parameter arg2 :: <gchar*>;
  input parameter arg3 :: <gdouble>;
  input parameter arg4 :: <gchar*>;
  c-name: "gtk_settings_set_double_property";
end;

define C-subtype <_GtkIconFactory> (<_GObject>) end;
define constant <GtkIconFactory> = <_GtkIconFactory>;

define constant <anonymous-3663> = <C-function-pointer>;
define constant <anonymous-3664> = <C-function-pointer>;
define constant <anonymous-3665> = <C-function-pointer>;
define constant <anonymous-3666> = <C-function-pointer>;
define constant <anonymous-3667> = <C-function-pointer>;
define constant <anonymous-3668> = <C-function-pointer>;
define constant <anonymous-3669> = <C-function-pointer>;
define constant <anonymous-3670> = <C-function-pointer>;
define C-struct <_GtkRcStyleClass>
  slot GtkRcStyleClass-parent-class :: <_GObjectClass>;
  slot GtkRcStyleClass-create-rc-style :: <anonymous-3663>;
  slot GtkRcStyleClass-parse :: <anonymous-3664>;
  slot GtkRcStyleClass-merge :: <anonymous-3665>;
  slot GtkRcStyleClass-create-style :: <anonymous-3666>;
  slot GtkRcStyleClass-_gtk-reserved1 :: <anonymous-3667>;
  slot GtkRcStyleClass-_gtk-reserved2 :: <anonymous-3668>;
  slot GtkRcStyleClass-_gtk-reserved3 :: <anonymous-3669>;
  slot GtkRcStyleClass-_gtk-reserved4 :: <anonymous-3670>;
end;

define C-pointer-type <GtkRcStyleClass> => <_GtkRcStyleClass>;

define C-function _gtk-rc-parse-widget-class-path
  input parameter arg1 :: <gchar*>;
  result res :: <GSList>;
  c-name: "_gtk_rc_parse_widget_class_path";
end;

define C-function _gtk-rc-free-widget-class-path
  input parameter arg1 :: <GSList>;
  c-name: "_gtk_rc_free_widget_class_path";
end;

define C-function _gtk-rc-match-widget-class
  input parameter arg1 :: <GSList>;
  input parameter arg2 :: <gint>;
  input parameter arg3 :: <gchar*>;
  input parameter arg4 :: <gchar*>;
  result res :: <gboolean>;
  c-name: "_gtk_rc_match_widget_class";
end;

define C-function gtk-rc-add-default-file
  input parameter arg1 :: <gchar*>;
  c-name: "gtk_rc_add_default_file";
end;

define C-function gtk-rc-set-default-files
  input parameter arg1 :: <gchar**>;
  c-name: "gtk_rc_set_default_files";
end;

define C-function gtk-rc-get-default-files
  result res :: <gchar**>;
  c-name: "gtk_rc_get_default_files";
end;

define C-function gtk-rc-get-style
  input parameter arg1 :: <GtkWidget>;
  result res :: <GtkStyle>;
  c-name: "gtk_rc_get_style";
end;

define C-function gtk-rc-get-style-by-paths
  input parameter arg1 :: <GtkSettings>;
  input parameter arg2 :: <char*>;
  input parameter arg3 :: <char*>;
  input parameter arg4 :: <GType>;
  result res :: <GtkStyle>;
  c-name: "gtk_rc_get_style_by_paths";
end;

define C-function gtk-rc-reparse-all-for-settings
  input parameter arg1 :: <GtkSettings>;
  input parameter arg2 :: <gboolean>;
  result res :: <gboolean>;
  c-name: "gtk_rc_reparse_all_for_settings";
end;

define C-function gtk-rc-reset-styles
  input parameter arg1 :: <GtkSettings>;
  c-name: "gtk_rc_reset_styles";
end;

define C-function gtk-rc-find-pixmap-in-path
  input parameter arg1 :: <GtkSettings>;
  input parameter arg2 :: <GScanner>;
  input parameter arg3 :: <gchar*>;
  result res :: <gchar*>;
  c-name: "gtk_rc_find_pixmap_in_path";
end;

define C-function gtk-rc-parse
  input parameter arg1 :: <gchar*>;
  c-name: "gtk_rc_parse";
end;

define C-function gtk-rc-parse-string
  input parameter arg1 :: <gchar*>;
  c-name: "gtk_rc_parse_string";
end;

define C-function gtk-rc-reparse-all
  result res :: <gboolean>;
  c-name: "gtk_rc_reparse_all";
end;

define C-function gtk-rc-add-widget-name-style
  input parameter arg1 :: <GtkRcStyle>;
  input parameter arg2 :: <gchar*>;
  c-name: "gtk_rc_add_widget_name_style";
end;

define C-function gtk-rc-add-widget-class-style
  input parameter arg1 :: <GtkRcStyle>;
  input parameter arg2 :: <gchar*>;
  c-name: "gtk_rc_add_widget_class_style";
end;

define C-function gtk-rc-add-class-style
  input parameter arg1 :: <GtkRcStyle>;
  input parameter arg2 :: <gchar*>;
  c-name: "gtk_rc_add_class_style";
end;

define C-function gtk-rc-style-get-type
  result res :: <GType>;
  c-name: "gtk_rc_style_get_type";
end;

define C-function gtk-rc-style-new
  result res :: <GtkRcStyle>;
  c-name: "gtk_rc_style_new";
end;

define C-function gtk-rc-style-copy
  input parameter arg1 :: <GtkRcStyle>;
  result res :: <GtkRcStyle>;
  c-name: "gtk_rc_style_copy";
end;

define C-function gtk-rc-style-ref
  input parameter arg1 :: <GtkRcStyle>;
  c-name: "gtk_rc_style_ref";
end;

define C-function gtk-rc-style-unref
  input parameter arg1 :: <GtkRcStyle>;
  c-name: "gtk_rc_style_unref";
end;

define C-function gtk-rc-find-module-in-path
  input parameter arg1 :: <gchar*>;
  result res :: <gchar*>;
  c-name: "gtk_rc_find_module_in_path";
end;

define C-function gtk-rc-get-theme-dir
  result res :: <gchar*>;
  c-name: "gtk_rc_get_theme_dir";
end;

define C-function gtk-rc-get-module-dir
  result res :: <gchar*>;
  c-name: "gtk_rc_get_module_dir";
end;

define C-function gtk-rc-get-im-module-path
  result res :: <gchar*>;
  c-name: "gtk_rc_get_im_module_path";
end;

define C-function gtk-rc-get-im-module-file
  result res :: <gchar*>;
  c-name: "gtk_rc_get_im_module_file";
end;

define constant <GtkRcTokenType> = <C-int>;
define constant $GTK-RC-TOKEN-INVALID = 270;
define constant $GTK-RC-TOKEN-INCLUDE = 271;
define constant $GTK-RC-TOKEN-NORMAL = 272;
define constant $GTK-RC-TOKEN-ACTIVE = 273;
define constant $GTK-RC-TOKEN-PRELIGHT = 274;
define constant $GTK-RC-TOKEN-SELECTED = 275;
define constant $GTK-RC-TOKEN-INSENSITIVE = 276;
define constant $GTK-RC-TOKEN-FG = 277;
define constant $GTK-RC-TOKEN-BG = 278;
define constant $GTK-RC-TOKEN-TEXT = 279;
define constant $GTK-RC-TOKEN-BASE = 280;
define constant $GTK-RC-TOKEN-XTHICKNESS = 281;
define constant $GTK-RC-TOKEN-YTHICKNESS = 282;
define constant $GTK-RC-TOKEN-FONT = 283;
define constant $GTK-RC-TOKEN-FONTSET = 284;
define constant $GTK-RC-TOKEN-FONT-NAME = 285;
define constant $GTK-RC-TOKEN-BG-PIXMAP = 286;
define constant $GTK-RC-TOKEN-PIXMAP-PATH = 287;
define constant $GTK-RC-TOKEN-STYLE = 288;
define constant $GTK-RC-TOKEN-BINDING = 289;
define constant $GTK-RC-TOKEN-BIND = 290;
define constant $GTK-RC-TOKEN-WIDGET = 291;
define constant $GTK-RC-TOKEN-WIDGET-CLASS = 292;
define constant $GTK-RC-TOKEN-CLASS = 293;
define constant $GTK-RC-TOKEN-LOWEST = 294;
define constant $GTK-RC-TOKEN-GTK = 295;
define constant $GTK-RC-TOKEN-APPLICATION = 296;
define constant $GTK-RC-TOKEN-THEME = 297;
define constant $GTK-RC-TOKEN-RC = 298;
define constant $GTK-RC-TOKEN-HIGHEST = 299;
define constant $GTK-RC-TOKEN-ENGINE = 300;
define constant $GTK-RC-TOKEN-MODULE-PATH = 301;
define constant $GTK-RC-TOKEN-IM-MODULE-PATH = 302;
define constant $GTK-RC-TOKEN-IM-MODULE-FILE = 303;
define constant $GTK-RC-TOKEN-STOCK = 304;
define constant $GTK-RC-TOKEN-LTR = 305;
define constant $GTK-RC-TOKEN-RTL = 306;
define constant $GTK-RC-TOKEN-COLOR = 307;
define constant $GTK-RC-TOKEN-UNBIND = 308;
define constant $GTK-RC-TOKEN-LAST = 309;

define C-function gtk-rc-scanner-new
  result res :: <GScanner>;
  c-name: "gtk_rc_scanner_new";
end;

define C-function gtk-rc-parse-color
  input parameter arg1 :: <GScanner>;
  input parameter arg2 :: <GdkColor>;
  result res :: <guint>;
  c-name: "gtk_rc_parse_color";
end;

define C-function gtk-rc-parse-color-full
  input parameter arg1 :: <GScanner>;
  input parameter arg2 :: <GtkRcStyle>;
  input parameter arg3 :: <GdkColor>;
  result res :: <guint>;
  c-name: "gtk_rc_parse_color_full";
end;

define C-pointer-type <GtkStateType*> => <GtkStateType>;
define C-function gtk-rc-parse-state
  input parameter arg1 :: <GScanner>;
  input parameter arg2 :: <GtkStateType*>;
  result res :: <guint>;
  c-name: "gtk_rc_parse_state";
end;

define constant <GtkPathPriorityType> = <C-int>;
define constant $GTK-PATH-PRIO-LOWEST = 0;
define constant $GTK-PATH-PRIO-GTK = 4;
define constant $GTK-PATH-PRIO-APPLICATION = 8;
define constant $GTK-PATH-PRIO-THEME = 10;
define constant $GTK-PATH-PRIO-RC = 12;
define constant $GTK-PATH-PRIO-HIGHEST = 15;

define C-pointer-type <GtkPathPriorityType*> => <GtkPathPriorityType>;
define C-function gtk-rc-parse-priority
  input parameter arg1 :: <GScanner>;
  input parameter arg2 :: <GtkPathPriorityType*>;
  result res :: <guint>;
  c-name: "gtk_rc_parse_priority";
end;

define C-struct <_GtkRcProperty>
  slot GtkRcProperty-type-name :: <C-unsigned-int>;
  slot GtkRcProperty-property-name :: <C-unsigned-int>;
  slot GtkRcProperty-origin :: <gchar*>;
  slot GtkRcProperty-value :: <_GValue>;
end;

define C-pointer-type <GtkRcProperty> => <_GtkRcProperty>;

define C-function _gtk-rc-style-set-rc-property
  input parameter arg1 :: <GtkRcStyle>;
  input parameter arg2 :: <GtkRcProperty>;
  c-name: "_gtk_rc_style_set_rc_property";
end;

define C-function _gtk-rc-style-unset-rc-property
  input parameter arg1 :: <GtkRcStyle>;
  input parameter arg2 :: <GQuark>;
  input parameter arg3 :: <GQuark>;
  c-name: "_gtk_rc_style_unset_rc_property";
end;

define C-function _gtk-rc-style-get-color-hashes
  input parameter arg1 :: <GtkRcStyle>;
  result res :: <GSList>;
  c-name: "_gtk_rc_style_get_color_hashes";
end;

define C-function _gtk-rc-context-destroy
  input parameter arg1 :: <GtkSettings>;
  c-name: "_gtk_rc_context_destroy";
end;

define C-struct <_GtkBorder>
  slot GtkBorder-left :: <C-signed-int>;
  slot GtkBorder-right :: <C-signed-int>;
  slot GtkBorder-top :: <C-signed-int>;
  slot GtkBorder-bottom :: <C-signed-int>;
end;

define C-pointer-type <GtkBorder> => <_GtkBorder>;

define constant <anonymous-3556> = <C-function-pointer>;
define constant <anonymous-3557> = <C-function-pointer>;
define constant <anonymous-3558> = <C-function-pointer>;
define constant <anonymous-3559> = <C-function-pointer>;
define constant <anonymous-3560> = <C-function-pointer>;
define constant <anonymous-3561> = <C-function-pointer>;
define C-struct <_GtkIconSource>
end;

define C-pointer-type <GtkIconSource> => <_GtkIconSource>;

define constant <anonymous-3562> = <C-function-pointer>;
define constant <anonymous-3563> = <C-function-pointer>;
define constant <anonymous-3564> = <C-function-pointer>;
define constant <GtkShadowType> = <C-int>;
define constant $GTK-SHADOW-NONE = 0;
define constant $GTK-SHADOW-IN = 1;
define constant $GTK-SHADOW-OUT = 2;
define constant $GTK-SHADOW-ETCHED-IN = 3;
define constant $GTK-SHADOW-ETCHED-OUT = 4;

define constant <anonymous-3565> = <C-function-pointer>;
define C-struct <_GdkPoint>
  slot GdkPoint-x :: <C-signed-int>;
  slot GdkPoint-y :: <C-signed-int>;
end;

define C-pointer-type <GdkPoint> => <_GdkPoint>;

define constant <anonymous-3566> = <C-function-pointer>;
define constant <GtkArrowType> = <C-int>;
define constant $GTK-ARROW-UP = 0;
define constant $GTK-ARROW-DOWN = 1;
define constant $GTK-ARROW-LEFT = 2;
define constant $GTK-ARROW-RIGHT = 3;
define constant $GTK-ARROW-NONE = 4;

define constant <anonymous-3567> = <C-function-pointer>;
define constant <anonymous-3568> = <C-function-pointer>;
define constant <anonymous-3569> = <C-function-pointer>;
define constant <anonymous-3570> = <C-function-pointer>;
define constant <anonymous-3571> = <C-function-pointer>;
define constant <anonymous-3572> = <C-function-pointer>;
define constant <anonymous-3573> = <C-function-pointer>;
define constant <anonymous-3574> = <C-function-pointer>;
define constant <GtkPositionType> = <C-int>;
define constant $GTK-POS-LEFT = 0;
define constant $GTK-POS-RIGHT = 1;
define constant $GTK-POS-TOP = 2;
define constant $GTK-POS-BOTTOM = 3;

define constant <anonymous-3575> = <C-function-pointer>;
define constant <anonymous-3576> = <C-function-pointer>;
define constant <anonymous-3577> = <C-function-pointer>;
define constant <anonymous-3578> = <C-function-pointer>;
define constant <GtkOrientation> = <C-int>;
define constant $GTK-ORIENTATION-HORIZONTAL = 0;
define constant $GTK-ORIENTATION-VERTICAL = 1;

define constant <anonymous-3579> = <C-function-pointer>;
define constant <anonymous-3580> = <C-function-pointer>;
define constant <GtkExpanderStyle> = <C-int>;
define constant $GTK-EXPANDER-COLLAPSED = 0;
define constant $GTK-EXPANDER-SEMI-COLLAPSED = 1;
define constant $GTK-EXPANDER-SEMI-EXPANDED = 2;
define constant $GTK-EXPANDER-EXPANDED = 3;

define constant <anonymous-3581> = <C-function-pointer>;
define constant <anonymous-3582> = <C-function-pointer>;
define constant <anonymous-3583> = <C-function-pointer>;
define constant <anonymous-3584> = <C-function-pointer>;
define constant <anonymous-3585> = <C-function-pointer>;
define constant <anonymous-3586> = <C-function-pointer>;
define constant <anonymous-3587> = <C-function-pointer>;
define constant <anonymous-3588> = <C-function-pointer>;
define constant <anonymous-3589> = <C-function-pointer>;
define constant <anonymous-3590> = <C-function-pointer>;
define constant <anonymous-3591> = <C-function-pointer>;
define constant <anonymous-3592> = <C-function-pointer>;
define constant <anonymous-3593> = <C-function-pointer>;
define constant <anonymous-3594> = <C-function-pointer>;
define constant <anonymous-3595> = <C-function-pointer>;
define C-struct <_GtkStyleClass>
  slot GtkStyleClass-parent-class :: <_GObjectClass>;
  slot GtkStyleClass-realize :: <anonymous-3556>;
  slot GtkStyleClass-unrealize :: <anonymous-3557>;
  slot GtkStyleClass-copy :: <anonymous-3558>;
  slot GtkStyleClass-clone :: <anonymous-3559>;
  slot GtkStyleClass-init-from-rc :: <anonymous-3560>;
  slot GtkStyleClass-set-background :: <anonymous-3561>;
  slot GtkStyleClass-render-icon :: <anonymous-3562>;
  slot GtkStyleClass-draw-hline :: <anonymous-3563>;
  slot GtkStyleClass-draw-vline :: <anonymous-3564>;
  slot GtkStyleClass-draw-shadow :: <anonymous-3565>;
  slot GtkStyleClass-draw-polygon :: <anonymous-3566>;
  slot GtkStyleClass-draw-arrow :: <anonymous-3567>;
  slot GtkStyleClass-draw-diamond :: <anonymous-3568>;
  slot GtkStyleClass-draw-string :: <anonymous-3569>;
  slot GtkStyleClass-draw-box :: <anonymous-3570>;
  slot GtkStyleClass-draw-flat-box :: <anonymous-3571>;
  slot GtkStyleClass-draw-check :: <anonymous-3572>;
  slot GtkStyleClass-draw-option :: <anonymous-3573>;
  slot GtkStyleClass-draw-tab :: <anonymous-3574>;
  slot GtkStyleClass-draw-shadow-gap :: <anonymous-3575>;
  slot GtkStyleClass-draw-box-gap :: <anonymous-3576>;
  slot GtkStyleClass-draw-extension :: <anonymous-3577>;
  slot GtkStyleClass-draw-focus :: <anonymous-3578>;
  slot GtkStyleClass-draw-slider :: <anonymous-3579>;
  slot GtkStyleClass-draw-handle :: <anonymous-3580>;
  slot GtkStyleClass-draw-expander :: <anonymous-3581>;
  slot GtkStyleClass-draw-layout :: <anonymous-3582>;
  slot GtkStyleClass-draw-resize-grip :: <anonymous-3583>;
  slot GtkStyleClass-_gtk-reserved1 :: <anonymous-3584>;
  slot GtkStyleClass-_gtk-reserved2 :: <anonymous-3585>;
  slot GtkStyleClass-_gtk-reserved3 :: <anonymous-3586>;
  slot GtkStyleClass-_gtk-reserved4 :: <anonymous-3587>;
  slot GtkStyleClass-_gtk-reserved5 :: <anonymous-3588>;
  slot GtkStyleClass-_gtk-reserved6 :: <anonymous-3589>;
  slot GtkStyleClass-_gtk-reserved7 :: <anonymous-3590>;
  slot GtkStyleClass-_gtk-reserved8 :: <anonymous-3591>;
  slot GtkStyleClass-_gtk-reserved9 :: <anonymous-3592>;
  slot GtkStyleClass-_gtk-reserved10 :: <anonymous-3593>;
  slot GtkStyleClass-_gtk-reserved11 :: <anonymous-3594>;
  slot GtkStyleClass-_gtk-reserved12 :: <anonymous-3595>;
end;

define C-pointer-type <GtkStyleClass> => <_GtkStyleClass>;

define C-struct <_GtkThemeEngine>
end;

define C-pointer-type <GtkThemeEngine> => <_GtkThemeEngine>;

define C-struct <_GtkIconSet>
end;

define C-pointer-type <GtkIconSet> => <_GtkIconSet>;

define C-function gtk-style-get-type
  result res :: <GType>;
  c-name: "gtk_style_get_type";
end;

define C-function gtk-style-new
  result res :: <GtkStyle>;
  c-name: "gtk_style_new";
end;

define C-function gtk-style-copy
  input parameter arg1 :: <GtkStyle>;
  result res :: <GtkStyle>;
  c-name: "gtk_style_copy";
end;

define C-function gtk-style-attach
  input parameter arg1 :: <GtkStyle>;
  input parameter arg2 :: <GdkWindow>;
  result res :: <GtkStyle>;
  c-name: "gtk_style_attach";
end;

define C-function gtk-style-detach
  input parameter arg1 :: <GtkStyle>;
  c-name: "gtk_style_detach";
end;

define C-function gtk-style-ref
  input parameter arg1 :: <GtkStyle>;
  result res :: <GtkStyle>;
  c-name: "gtk_style_ref";
end;

define C-function gtk-style-unref
  input parameter arg1 :: <GtkStyle>;
  c-name: "gtk_style_unref";
end;

define C-function gtk-style-get-font
  input parameter arg1 :: <GtkStyle>;
  result res :: <GdkFont>;
  c-name: "gtk_style_get_font";
end;

define C-function gtk-style-set-font
  input parameter arg1 :: <GtkStyle>;
  input parameter arg2 :: <GdkFont>;
  c-name: "gtk_style_set_font";
end;

define C-function gtk-style-set-background
  input parameter arg1 :: <GtkStyle>;
  input parameter arg2 :: <GdkWindow>;
  input parameter arg3 :: <GtkStateType>;
  c-name: "gtk_style_set_background";
end;

define C-function gtk-style-apply-default-background
  input parameter arg1 :: <GtkStyle>;
  input parameter arg2 :: <GdkWindow>;
  input parameter arg3 :: <gboolean>;
  input parameter arg4 :: <GtkStateType>;
  input parameter arg5 :: <GdkRectangle>;
  input parameter arg6 :: <gint>;
  input parameter arg7 :: <gint>;
  input parameter arg8 :: <gint>;
  input parameter arg9 :: <gint>;
  c-name: "gtk_style_apply_default_background";
end;

define C-function gtk-style-lookup-icon-set
  input parameter arg1 :: <GtkStyle>;
  input parameter arg2 :: <gchar*>;
  result res :: <GtkIconSet>;
  c-name: "gtk_style_lookup_icon_set";
end;

define C-function gtk-style-lookup-color
  input parameter arg1 :: <GtkStyle>;
  input parameter arg2 :: <gchar*>;
  input parameter arg3 :: <GdkColor>;
  result res :: <gboolean>;
  c-name: "gtk_style_lookup_color";
end;

define C-function gtk-style-render-icon
  input parameter arg1 :: <GtkStyle>;
  input parameter arg2 :: <GtkIconSource>;
  input parameter arg3 :: <GtkTextDirection>;
  input parameter arg4 :: <GtkStateType>;
  input parameter arg5 :: <GtkIconSize>;
  input parameter arg6 :: <GtkWidget>;
  input parameter arg7 :: <gchar*>;
  result res :: <GdkPixbuf>;
  c-name: "gtk_style_render_icon";
end;

define C-function gtk-draw-hline
  input parameter arg1 :: <GtkStyle>;
  input parameter arg2 :: <GdkWindow>;
  input parameter arg3 :: <GtkStateType>;
  input parameter arg4 :: <gint>;
  input parameter arg5 :: <gint>;
  input parameter arg6 :: <gint>;
  c-name: "gtk_draw_hline";
end;

define C-function gtk-draw-vline
  input parameter arg1 :: <GtkStyle>;
  input parameter arg2 :: <GdkWindow>;
  input parameter arg3 :: <GtkStateType>;
  input parameter arg4 :: <gint>;
  input parameter arg5 :: <gint>;
  input parameter arg6 :: <gint>;
  c-name: "gtk_draw_vline";
end;

define C-function gtk-draw-shadow
  input parameter arg1 :: <GtkStyle>;
  input parameter arg2 :: <GdkWindow>;
  input parameter arg3 :: <GtkStateType>;
  input parameter arg4 :: <GtkShadowType>;
  input parameter arg5 :: <gint>;
  input parameter arg6 :: <gint>;
  input parameter arg7 :: <gint>;
  input parameter arg8 :: <gint>;
  c-name: "gtk_draw_shadow";
end;

define C-function gtk-draw-polygon
  input parameter arg1 :: <GtkStyle>;
  input parameter arg2 :: <GdkWindow>;
  input parameter arg3 :: <GtkStateType>;
  input parameter arg4 :: <GtkShadowType>;
  input parameter arg5 :: <GdkPoint>;
  input parameter arg6 :: <gint>;
  input parameter arg7 :: <gboolean>;
  c-name: "gtk_draw_polygon";
end;

define C-function gtk-draw-arrow
  input parameter arg1 :: <GtkStyle>;
  input parameter arg2 :: <GdkWindow>;
  input parameter arg3 :: <GtkStateType>;
  input parameter arg4 :: <GtkShadowType>;
  input parameter arg5 :: <GtkArrowType>;
  input parameter arg6 :: <gboolean>;
  input parameter arg7 :: <gint>;
  input parameter arg8 :: <gint>;
  input parameter arg9 :: <gint>;
  input parameter arg10 :: <gint>;
  c-name: "gtk_draw_arrow";
end;

define C-function gtk-draw-diamond
  input parameter arg1 :: <GtkStyle>;
  input parameter arg2 :: <GdkWindow>;
  input parameter arg3 :: <GtkStateType>;
  input parameter arg4 :: <GtkShadowType>;
  input parameter arg5 :: <gint>;
  input parameter arg6 :: <gint>;
  input parameter arg7 :: <gint>;
  input parameter arg8 :: <gint>;
  c-name: "gtk_draw_diamond";
end;

define C-function gtk-draw-box
  input parameter arg1 :: <GtkStyle>;
  input parameter arg2 :: <GdkWindow>;
  input parameter arg3 :: <GtkStateType>;
  input parameter arg4 :: <GtkShadowType>;
  input parameter arg5 :: <gint>;
  input parameter arg6 :: <gint>;
  input parameter arg7 :: <gint>;
  input parameter arg8 :: <gint>;
  c-name: "gtk_draw_box";
end;

define C-function gtk-draw-flat-box
  input parameter arg1 :: <GtkStyle>;
  input parameter arg2 :: <GdkWindow>;
  input parameter arg3 :: <GtkStateType>;
  input parameter arg4 :: <GtkShadowType>;
  input parameter arg5 :: <gint>;
  input parameter arg6 :: <gint>;
  input parameter arg7 :: <gint>;
  input parameter arg8 :: <gint>;
  c-name: "gtk_draw_flat_box";
end;

define C-function gtk-draw-check
  input parameter arg1 :: <GtkStyle>;
  input parameter arg2 :: <GdkWindow>;
  input parameter arg3 :: <GtkStateType>;
  input parameter arg4 :: <GtkShadowType>;
  input parameter arg5 :: <gint>;
  input parameter arg6 :: <gint>;
  input parameter arg7 :: <gint>;
  input parameter arg8 :: <gint>;
  c-name: "gtk_draw_check";
end;

define C-function gtk-draw-option
  input parameter arg1 :: <GtkStyle>;
  input parameter arg2 :: <GdkWindow>;
  input parameter arg3 :: <GtkStateType>;
  input parameter arg4 :: <GtkShadowType>;
  input parameter arg5 :: <gint>;
  input parameter arg6 :: <gint>;
  input parameter arg7 :: <gint>;
  input parameter arg8 :: <gint>;
  c-name: "gtk_draw_option";
end;

define C-function gtk-draw-tab
  input parameter arg1 :: <GtkStyle>;
  input parameter arg2 :: <GdkWindow>;
  input parameter arg3 :: <GtkStateType>;
  input parameter arg4 :: <GtkShadowType>;
  input parameter arg5 :: <gint>;
  input parameter arg6 :: <gint>;
  input parameter arg7 :: <gint>;
  input parameter arg8 :: <gint>;
  c-name: "gtk_draw_tab";
end;

define C-function gtk-draw-shadow-gap
  input parameter arg1 :: <GtkStyle>;
  input parameter arg2 :: <GdkWindow>;
  input parameter arg3 :: <GtkStateType>;
  input parameter arg4 :: <GtkShadowType>;
  input parameter arg5 :: <gint>;
  input parameter arg6 :: <gint>;
  input parameter arg7 :: <gint>;
  input parameter arg8 :: <gint>;
  input parameter arg9 :: <GtkPositionType>;
  input parameter arg10 :: <gint>;
  input parameter arg11 :: <gint>;
  c-name: "gtk_draw_shadow_gap";
end;

define C-function gtk-draw-box-gap
  input parameter arg1 :: <GtkStyle>;
  input parameter arg2 :: <GdkWindow>;
  input parameter arg3 :: <GtkStateType>;
  input parameter arg4 :: <GtkShadowType>;
  input parameter arg5 :: <gint>;
  input parameter arg6 :: <gint>;
  input parameter arg7 :: <gint>;
  input parameter arg8 :: <gint>;
  input parameter arg9 :: <GtkPositionType>;
  input parameter arg10 :: <gint>;
  input parameter arg11 :: <gint>;
  c-name: "gtk_draw_box_gap";
end;

define C-function gtk-draw-extension
  input parameter arg1 :: <GtkStyle>;
  input parameter arg2 :: <GdkWindow>;
  input parameter arg3 :: <GtkStateType>;
  input parameter arg4 :: <GtkShadowType>;
  input parameter arg5 :: <gint>;
  input parameter arg6 :: <gint>;
  input parameter arg7 :: <gint>;
  input parameter arg8 :: <gint>;
  input parameter arg9 :: <GtkPositionType>;
  c-name: "gtk_draw_extension";
end;

define C-function gtk-draw-focus
  input parameter arg1 :: <GtkStyle>;
  input parameter arg2 :: <GdkWindow>;
  input parameter arg3 :: <gint>;
  input parameter arg4 :: <gint>;
  input parameter arg5 :: <gint>;
  input parameter arg6 :: <gint>;
  c-name: "gtk_draw_focus";
end;

define C-function gtk-draw-slider
  input parameter arg1 :: <GtkStyle>;
  input parameter arg2 :: <GdkWindow>;
  input parameter arg3 :: <GtkStateType>;
  input parameter arg4 :: <GtkShadowType>;
  input parameter arg5 :: <gint>;
  input parameter arg6 :: <gint>;
  input parameter arg7 :: <gint>;
  input parameter arg8 :: <gint>;
  input parameter arg9 :: <GtkOrientation>;
  c-name: "gtk_draw_slider";
end;

define C-function gtk-draw-handle
  input parameter arg1 :: <GtkStyle>;
  input parameter arg2 :: <GdkWindow>;
  input parameter arg3 :: <GtkStateType>;
  input parameter arg4 :: <GtkShadowType>;
  input parameter arg5 :: <gint>;
  input parameter arg6 :: <gint>;
  input parameter arg7 :: <gint>;
  input parameter arg8 :: <gint>;
  input parameter arg9 :: <GtkOrientation>;
  c-name: "gtk_draw_handle";
end;

define C-function gtk-draw-expander
  input parameter arg1 :: <GtkStyle>;
  input parameter arg2 :: <GdkWindow>;
  input parameter arg3 :: <GtkStateType>;
  input parameter arg4 :: <gint>;
  input parameter arg5 :: <gint>;
  input parameter arg6 :: <GtkExpanderStyle>;
  c-name: "gtk_draw_expander";
end;

define C-function gtk-draw-layout
  input parameter arg1 :: <GtkStyle>;
  input parameter arg2 :: <GdkWindow>;
  input parameter arg3 :: <GtkStateType>;
  input parameter arg4 :: <gboolean>;
  input parameter arg5 :: <gint>;
  input parameter arg6 :: <gint>;
  input parameter arg7 :: <PangoLayout>;
  c-name: "gtk_draw_layout";
end;

define C-function gtk-draw-resize-grip
  input parameter arg1 :: <GtkStyle>;
  input parameter arg2 :: <GdkWindow>;
  input parameter arg3 :: <GtkStateType>;
  input parameter arg4 :: <GdkWindowEdge>;
  input parameter arg5 :: <gint>;
  input parameter arg6 :: <gint>;
  input parameter arg7 :: <gint>;
  input parameter arg8 :: <gint>;
  c-name: "gtk_draw_resize_grip";
end;

define C-function gtk-paint-hline
  input parameter arg1 :: <GtkStyle>;
  input parameter arg2 :: <GdkWindow>;
  input parameter arg3 :: <GtkStateType>;
  input parameter arg4 :: <GdkRectangle>;
  input parameter arg5 :: <GtkWidget>;
  input parameter arg6 :: <gchar*>;
  input parameter arg7 :: <gint>;
  input parameter arg8 :: <gint>;
  input parameter arg9 :: <gint>;
  c-name: "gtk_paint_hline";
end;

define C-function gtk-paint-vline
  input parameter arg1 :: <GtkStyle>;
  input parameter arg2 :: <GdkWindow>;
  input parameter arg3 :: <GtkStateType>;
  input parameter arg4 :: <GdkRectangle>;
  input parameter arg5 :: <GtkWidget>;
  input parameter arg6 :: <gchar*>;
  input parameter arg7 :: <gint>;
  input parameter arg8 :: <gint>;
  input parameter arg9 :: <gint>;
  c-name: "gtk_paint_vline";
end;

define C-function gtk-paint-shadow
  input parameter arg1 :: <GtkStyle>;
  input parameter arg2 :: <GdkWindow>;
  input parameter arg3 :: <GtkStateType>;
  input parameter arg4 :: <GtkShadowType>;
  input parameter arg5 :: <GdkRectangle>;
  input parameter arg6 :: <GtkWidget>;
  input parameter arg7 :: <gchar*>;
  input parameter arg8 :: <gint>;
  input parameter arg9 :: <gint>;
  input parameter arg10 :: <gint>;
  input parameter arg11 :: <gint>;
  c-name: "gtk_paint_shadow";
end;

define C-function gtk-paint-polygon
  input parameter arg1 :: <GtkStyle>;
  input parameter arg2 :: <GdkWindow>;
  input parameter arg3 :: <GtkStateType>;
  input parameter arg4 :: <GtkShadowType>;
  input parameter arg5 :: <GdkRectangle>;
  input parameter arg6 :: <GtkWidget>;
  input parameter arg7 :: <gchar*>;
  input parameter arg8 :: <GdkPoint>;
  input parameter arg9 :: <gint>;
  input parameter arg10 :: <gboolean>;
  c-name: "gtk_paint_polygon";
end;

define C-function gtk-paint-arrow
  input parameter arg1 :: <GtkStyle>;
  input parameter arg2 :: <GdkWindow>;
  input parameter arg3 :: <GtkStateType>;
  input parameter arg4 :: <GtkShadowType>;
  input parameter arg5 :: <GdkRectangle>;
  input parameter arg6 :: <GtkWidget>;
  input parameter arg7 :: <gchar*>;
  input parameter arg8 :: <GtkArrowType>;
  input parameter arg9 :: <gboolean>;
  input parameter arg10 :: <gint>;
  input parameter arg11 :: <gint>;
  input parameter arg12 :: <gint>;
  input parameter arg13 :: <gint>;
  c-name: "gtk_paint_arrow";
end;

define C-function gtk-paint-diamond
  input parameter arg1 :: <GtkStyle>;
  input parameter arg2 :: <GdkWindow>;
  input parameter arg3 :: <GtkStateType>;
  input parameter arg4 :: <GtkShadowType>;
  input parameter arg5 :: <GdkRectangle>;
  input parameter arg6 :: <GtkWidget>;
  input parameter arg7 :: <gchar*>;
  input parameter arg8 :: <gint>;
  input parameter arg9 :: <gint>;
  input parameter arg10 :: <gint>;
  input parameter arg11 :: <gint>;
  c-name: "gtk_paint_diamond";
end;

define C-function gtk-paint-box
  input parameter arg1 :: <GtkStyle>;
  input parameter arg2 :: <GdkWindow>;
  input parameter arg3 :: <GtkStateType>;
  input parameter arg4 :: <GtkShadowType>;
  input parameter arg5 :: <GdkRectangle>;
  input parameter arg6 :: <GtkWidget>;
  input parameter arg7 :: <gchar*>;
  input parameter arg8 :: <gint>;
  input parameter arg9 :: <gint>;
  input parameter arg10 :: <gint>;
  input parameter arg11 :: <gint>;
  c-name: "gtk_paint_box";
end;

define C-function gtk-paint-flat-box
  input parameter arg1 :: <GtkStyle>;
  input parameter arg2 :: <GdkWindow>;
  input parameter arg3 :: <GtkStateType>;
  input parameter arg4 :: <GtkShadowType>;
  input parameter arg5 :: <GdkRectangle>;
  input parameter arg6 :: <GtkWidget>;
  input parameter arg7 :: <gchar*>;
  input parameter arg8 :: <gint>;
  input parameter arg9 :: <gint>;
  input parameter arg10 :: <gint>;
  input parameter arg11 :: <gint>;
  c-name: "gtk_paint_flat_box";
end;

define C-function gtk-paint-check
  input parameter arg1 :: <GtkStyle>;
  input parameter arg2 :: <GdkWindow>;
  input parameter arg3 :: <GtkStateType>;
  input parameter arg4 :: <GtkShadowType>;
  input parameter arg5 :: <GdkRectangle>;
  input parameter arg6 :: <GtkWidget>;
  input parameter arg7 :: <gchar*>;
  input parameter arg8 :: <gint>;
  input parameter arg9 :: <gint>;
  input parameter arg10 :: <gint>;
  input parameter arg11 :: <gint>;
  c-name: "gtk_paint_check";
end;

define C-function gtk-paint-option
  input parameter arg1 :: <GtkStyle>;
  input parameter arg2 :: <GdkWindow>;
  input parameter arg3 :: <GtkStateType>;
  input parameter arg4 :: <GtkShadowType>;
  input parameter arg5 :: <GdkRectangle>;
  input parameter arg6 :: <GtkWidget>;
  input parameter arg7 :: <gchar*>;
  input parameter arg8 :: <gint>;
  input parameter arg9 :: <gint>;
  input parameter arg10 :: <gint>;
  input parameter arg11 :: <gint>;
  c-name: "gtk_paint_option";
end;

define C-function gtk-paint-tab
  input parameter arg1 :: <GtkStyle>;
  input parameter arg2 :: <GdkWindow>;
  input parameter arg3 :: <GtkStateType>;
  input parameter arg4 :: <GtkShadowType>;
  input parameter arg5 :: <GdkRectangle>;
  input parameter arg6 :: <GtkWidget>;
  input parameter arg7 :: <gchar*>;
  input parameter arg8 :: <gint>;
  input parameter arg9 :: <gint>;
  input parameter arg10 :: <gint>;
  input parameter arg11 :: <gint>;
  c-name: "gtk_paint_tab";
end;

define C-function gtk-paint-shadow-gap
  input parameter arg1 :: <GtkStyle>;
  input parameter arg2 :: <GdkWindow>;
  input parameter arg3 :: <GtkStateType>;
  input parameter arg4 :: <GtkShadowType>;
  input parameter arg5 :: <GdkRectangle>;
  input parameter arg6 :: <GtkWidget>;
  input parameter arg7 :: <gchar*>;
  input parameter arg8 :: <gint>;
  input parameter arg9 :: <gint>;
  input parameter arg10 :: <gint>;
  input parameter arg11 :: <gint>;
  input parameter arg12 :: <GtkPositionType>;
  input parameter arg13 :: <gint>;
  input parameter arg14 :: <gint>;
  c-name: "gtk_paint_shadow_gap";
end;

define C-function gtk-paint-box-gap
  input parameter arg1 :: <GtkStyle>;
  input parameter arg2 :: <GdkWindow>;
  input parameter arg3 :: <GtkStateType>;
  input parameter arg4 :: <GtkShadowType>;
  input parameter arg5 :: <GdkRectangle>;
  input parameter arg6 :: <GtkWidget>;
  input parameter arg7 :: <gchar*>;
  input parameter arg8 :: <gint>;
  input parameter arg9 :: <gint>;
  input parameter arg10 :: <gint>;
  input parameter arg11 :: <gint>;
  input parameter arg12 :: <GtkPositionType>;
  input parameter arg13 :: <gint>;
  input parameter arg14 :: <gint>;
  c-name: "gtk_paint_box_gap";
end;

define C-function gtk-paint-extension
  input parameter arg1 :: <GtkStyle>;
  input parameter arg2 :: <GdkWindow>;
  input parameter arg3 :: <GtkStateType>;
  input parameter arg4 :: <GtkShadowType>;
  input parameter arg5 :: <GdkRectangle>;
  input parameter arg6 :: <GtkWidget>;
  input parameter arg7 :: <gchar*>;
  input parameter arg8 :: <gint>;
  input parameter arg9 :: <gint>;
  input parameter arg10 :: <gint>;
  input parameter arg11 :: <gint>;
  input parameter arg12 :: <GtkPositionType>;
  c-name: "gtk_paint_extension";
end;

define C-function gtk-paint-focus
  input parameter arg1 :: <GtkStyle>;
  input parameter arg2 :: <GdkWindow>;
  input parameter arg3 :: <GtkStateType>;
  input parameter arg4 :: <GdkRectangle>;
  input parameter arg5 :: <GtkWidget>;
  input parameter arg6 :: <gchar*>;
  input parameter arg7 :: <gint>;
  input parameter arg8 :: <gint>;
  input parameter arg9 :: <gint>;
  input parameter arg10 :: <gint>;
  c-name: "gtk_paint_focus";
end;

define C-function gtk-paint-slider
  input parameter arg1 :: <GtkStyle>;
  input parameter arg2 :: <GdkWindow>;
  input parameter arg3 :: <GtkStateType>;
  input parameter arg4 :: <GtkShadowType>;
  input parameter arg5 :: <GdkRectangle>;
  input parameter arg6 :: <GtkWidget>;
  input parameter arg7 :: <gchar*>;
  input parameter arg8 :: <gint>;
  input parameter arg9 :: <gint>;
  input parameter arg10 :: <gint>;
  input parameter arg11 :: <gint>;
  input parameter arg12 :: <GtkOrientation>;
  c-name: "gtk_paint_slider";
end;

define C-function gtk-paint-handle
  input parameter arg1 :: <GtkStyle>;
  input parameter arg2 :: <GdkWindow>;
  input parameter arg3 :: <GtkStateType>;
  input parameter arg4 :: <GtkShadowType>;
  input parameter arg5 :: <GdkRectangle>;
  input parameter arg6 :: <GtkWidget>;
  input parameter arg7 :: <gchar*>;
  input parameter arg8 :: <gint>;
  input parameter arg9 :: <gint>;
  input parameter arg10 :: <gint>;
  input parameter arg11 :: <gint>;
  input parameter arg12 :: <GtkOrientation>;
  c-name: "gtk_paint_handle";
end;

define C-function gtk-paint-expander
  input parameter arg1 :: <GtkStyle>;
  input parameter arg2 :: <GdkWindow>;
  input parameter arg3 :: <GtkStateType>;
  input parameter arg4 :: <GdkRectangle>;
  input parameter arg5 :: <GtkWidget>;
  input parameter arg6 :: <gchar*>;
  input parameter arg7 :: <gint>;
  input parameter arg8 :: <gint>;
  input parameter arg9 :: <GtkExpanderStyle>;
  c-name: "gtk_paint_expander";
end;

define C-function gtk-paint-layout
  input parameter arg1 :: <GtkStyle>;
  input parameter arg2 :: <GdkWindow>;
  input parameter arg3 :: <GtkStateType>;
  input parameter arg4 :: <gboolean>;
  input parameter arg5 :: <GdkRectangle>;
  input parameter arg6 :: <GtkWidget>;
  input parameter arg7 :: <gchar*>;
  input parameter arg8 :: <gint>;
  input parameter arg9 :: <gint>;
  input parameter arg10 :: <PangoLayout>;
  c-name: "gtk_paint_layout";
end;

define C-function gtk-paint-resize-grip
  input parameter arg1 :: <GtkStyle>;
  input parameter arg2 :: <GdkWindow>;
  input parameter arg3 :: <GtkStateType>;
  input parameter arg4 :: <GdkRectangle>;
  input parameter arg5 :: <GtkWidget>;
  input parameter arg6 :: <gchar*>;
  input parameter arg7 :: <GdkWindowEdge>;
  input parameter arg8 :: <gint>;
  input parameter arg9 :: <gint>;
  input parameter arg10 :: <gint>;
  input parameter arg11 :: <gint>;
  c-name: "gtk_paint_resize_grip";
end;

define C-function gtk-border-get-type
  result res :: <GType>;
  c-name: "gtk_border_get_type";
end;

define C-function gtk-border-copy
  input parameter arg1 :: <GtkBorder>;
  result res :: <GtkBorder>;
  c-name: "gtk_border_copy";
end;

define C-function gtk-border-free
  input parameter arg1 :: <GtkBorder>;
  c-name: "gtk_border_free";
end;

define C-function _gtk-style-shade
  input parameter arg1 :: <GdkColor>;
  input parameter arg2 :: <GdkColor>;
  input parameter arg3 :: <gdouble>;
  c-name: "_gtk_style_shade";
end;

define C-function gtk-draw-string
  input parameter arg1 :: <GtkStyle>;
  input parameter arg2 :: <GdkWindow>;
  input parameter arg3 :: <GtkStateType>;
  input parameter arg4 :: <gint>;
  input parameter arg5 :: <gint>;
  input parameter arg6 :: <gchar*>;
  c-name: "gtk_draw_string";
end;

define C-function gtk-paint-string
  input parameter arg1 :: <GtkStyle>;
  input parameter arg2 :: <GdkWindow>;
  input parameter arg3 :: <GtkStateType>;
  input parameter arg4 :: <GdkRectangle>;
  input parameter arg5 :: <GtkWidget>;
  input parameter arg6 :: <gchar*>;
  input parameter arg7 :: <gint>;
  input parameter arg8 :: <gint>;
  input parameter arg9 :: <gchar*>;
  c-name: "gtk_paint_string";
end;

define constant <GdkDrawable> = <_GdkDrawable>;

define C-function gtk-draw-insertion-cursor
  input parameter arg1 :: <GtkWidget>;
  input parameter arg2 :: <GdkDrawable>;
  input parameter arg3 :: <GdkRectangle>;
  input parameter arg4 :: <GdkRectangle>;
  input parameter arg5 :: <gboolean>;
  input parameter arg6 :: <GtkTextDirection>;
  input parameter arg7 :: <gboolean>;
  c-name: "gtk_draw_insertion_cursor";
end;

define C-function _gtk-widget-get-cursor-gc
  input parameter arg1 :: <GtkWidget>;
  result res :: <GdkGC>;
  c-name: "_gtk_widget_get_cursor_gc";
end;

define C-function _gtk-widget-get-cursor-color
  input parameter arg1 :: <GtkWidget>;
  input parameter arg2 :: <GdkColor>;
  c-name: "_gtk_widget_get_cursor_color";
end;

define C-function pango-split-file-list
  input parameter arg1 :: <char*>;
  result res :: <c-string-vector>;
  c-name: "pango_split_file_list";
end;

define C-function pango-trim-string
  input parameter arg1 :: <char*>;
  result res :: <char*>;
  c-name: "pango_trim_string";
end;

define C-struct <_IO-marker>
  slot IO_marker-_next :: <C-void*>; //<_IO-marker>;
  slot IO_marker-_sbuf :: <C-void*>; //<_IO-FILE>;
  slot IO_marker-_pos :: <C-signed-int>;
end;

define constant <char<@1>> = <char*>;
define constant <_IO-lock-t> = <void*>;

define C-pointer-type <_IO-lock-t*> => <_IO-lock-t>;
define constant <char<@40>> = <char*>;
define C-struct <_IO-FILE>
  slot IO_FILE-_flags :: <C-signed-int>;
  slot IO_FILE-_IO-read-ptr :: <char*>;
  slot IO_FILE-_IO-read-end :: <char*>;
  slot IO_FILE-_IO-read-base :: <char*>;
  slot IO_FILE-_IO-write-base :: <char*>;
  slot IO_FILE-_IO-write-ptr :: <char*>;
  slot IO_FILE-_IO-write-end :: <char*>;
  slot IO_FILE-_IO-buf-base :: <char*>;
  slot IO_FILE-_IO-buf-end :: <char*>;
  slot IO_FILE-_IO-save-base :: <char*>;
  slot IO_FILE-_IO-backup-base :: <char*>;
  slot IO_FILE-_IO-save-end :: <char*>;
  slot IO_FILE-_markers :: <_IO-marker>;
  slot IO_FILE-_chain :: <C-void*>; //<_IO-FILE>;
  slot IO_FILE-_fileno :: <C-signed-int>;
  slot IO_FILE-_flags2 :: <C-signed-int>;
  slot IO_FILE-_old-offset :: <C-signed-long>;
  slot IO_FILE-_cur-column :: <C-unsigned-short>;
  slot IO_FILE-_vtable-offset :: <C-signed-char>;
  array slot IO_FILE-_shortbuf :: <C-signed-char>, length: 1;
  slot IO_FILE-_lock :: <_IO-lock-t*>;
  slot IO_FILE-_offset :: <__quad-t>;
  slot IO_FILE-__pad1 :: <C-void*>;
  slot IO_FILE-__pad2 :: <C-void*>;
  slot IO_FILE-__pad3 :: <C-void*>;
  slot IO_FILE-__pad4 :: <C-void*>;
  slot IO_FILE-__pad5 :: <C-unsigned-long>;
  slot IO_FILE-_mode :: <C-signed-int>;
  array slot IO_FILE-_unused2 :: <C-signed-char>, length: 40;
end;

define C-pointer-type <FILE> => <_IO-FILE>;

define C-function pango-read-line
  input parameter arg1 :: <FILE>;
  input parameter arg2 :: <GString>;
  result res :: <gint>;
  c-name: "pango_read_line";
end;

define C-function pango-skip-space
  input parameter arg1 :: <c-string-vector>;
  result res :: <gboolean>;
  c-name: "pango_skip_space";
end;

define C-function pango-scan-word
  input parameter arg1 :: <c-string-vector>;
  input parameter arg2 :: <GString>;
  result res :: <gboolean>;
  c-name: "pango_scan_word";
end;

define C-function pango-scan-string
  input parameter arg1 :: <c-string-vector>;
  input parameter arg2 :: <GString>;
  result res :: <gboolean>;
  c-name: "pango_scan_string";
end;

define C-function pango-scan-int
  input parameter arg1 :: <c-string-vector>;
  input parameter arg2 :: <int*>;
  result res :: <gboolean>;
  c-name: "pango_scan_int";
end;

define C-function pango-parse-enum
  input parameter arg1 :: <GType>;
  input parameter arg2 :: <char*>;
  input parameter arg3 :: <int*>;
  input parameter arg4 :: <gboolean>;
  input parameter arg5 :: <c-string-vector>;
  result res :: <gboolean>;
  c-name: "pango_parse_enum";
end;

define constant <PangoStyle> = <C-int>;
define constant $PANGO-STYLE-NORMAL = 0;
define constant $PANGO-STYLE-OBLIQUE = 1;
define constant $PANGO-STYLE-ITALIC = 2;

define C-pointer-type <PangoStyle*> => <PangoStyle>;
define C-function pango-parse-style
  input parameter arg1 :: <char*>;
  input parameter arg2 :: <PangoStyle*>;
  input parameter arg3 :: <gboolean>;
  result res :: <gboolean>;
  c-name: "pango_parse_style";
end;

define constant <PangoVariant> = <C-int>;
define constant $PANGO-VARIANT-NORMAL = 0;
define constant $PANGO-VARIANT-SMALL-CAPS = 1;

define C-pointer-type <PangoVariant*> => <PangoVariant>;
define C-function pango-parse-variant
  input parameter arg1 :: <char*>;
  input parameter arg2 :: <PangoVariant*>;
  input parameter arg3 :: <gboolean>;
  result res :: <gboolean>;
  c-name: "pango_parse_variant";
end;

define constant <PangoWeight> = <C-int>;
define constant $PANGO-WEIGHT-ULTRALIGHT = 200;
define constant $PANGO-WEIGHT-LIGHT = 300;
define constant $PANGO-WEIGHT-NORMAL = 400;
define constant $PANGO-WEIGHT-SEMIBOLD = 600;
define constant $PANGO-WEIGHT-BOLD = 700;
define constant $PANGO-WEIGHT-ULTRABOLD = 800;
define constant $PANGO-WEIGHT-HEAVY = 900;

define C-pointer-type <PangoWeight*> => <PangoWeight>;
define C-function pango-parse-weight
  input parameter arg1 :: <char*>;
  input parameter arg2 :: <PangoWeight*>;
  input parameter arg3 :: <gboolean>;
  result res :: <gboolean>;
  c-name: "pango_parse_weight";
end;

define constant <PangoStretch> = <C-int>;
define constant $PANGO-STRETCH-ULTRA-CONDENSED = 0;
define constant $PANGO-STRETCH-EXTRA-CONDENSED = 1;
define constant $PANGO-STRETCH-CONDENSED = 2;
define constant $PANGO-STRETCH-SEMI-CONDENSED = 3;
define constant $PANGO-STRETCH-NORMAL = 4;
define constant $PANGO-STRETCH-SEMI-EXPANDED = 5;
define constant $PANGO-STRETCH-EXPANDED = 6;
define constant $PANGO-STRETCH-EXTRA-EXPANDED = 7;
define constant $PANGO-STRETCH-ULTRA-EXPANDED = 8;

define C-pointer-type <PangoStretch*> => <PangoStretch>;
define C-function pango-parse-stretch
  input parameter arg1 :: <char*>;
  input parameter arg2 :: <PangoStretch*>;
  input parameter arg3 :: <gboolean>;
  result res :: <gboolean>;
  c-name: "pango_parse_stretch";
end;

define C-function pango-quantize-line-geometry
  input parameter arg1 :: <int*>;
  input parameter arg2 :: <int*>;
  c-name: "pango_quantize_line_geometry";
end;

define constant <PangoDirection> = <C-int>;
define constant $PANGO-DIRECTION-LTR = 0;
define constant $PANGO-DIRECTION-RTL = 1;
define constant $PANGO-DIRECTION-TTB-LTR = 2;
define constant $PANGO-DIRECTION-TTB-RTL = 3;
define constant $PANGO-DIRECTION-WEAK-LTR = 4;
define constant $PANGO-DIRECTION-WEAK-RTL = 5;
define constant $PANGO-DIRECTION-NEUTRAL = 6;

define C-pointer-type <PangoDirection*> => <PangoDirection>;
define C-function pango-log2vis-get-embedding-levels
  input parameter arg1 :: <gchar*>;
  input parameter arg2 :: <C-signed-int>;
  input parameter arg3 :: <PangoDirection*>;
  result res :: <guint8*>;
  c-name: "pango_log2vis_get_embedding_levels";
end;

define C-function pango-is-zero-width
  input parameter arg1 :: <gunichar>;
  result res :: <gboolean>;
  c-name: "pango_is_zero_width";
end;

define C-function pango-version
  result res :: <C-signed-int>;
  c-name: "pango_version";
end;

define C-function pango-version-string
  result res :: <char*>;
  c-name: "pango_version_string";
end;

define C-function pango-version-check
  input parameter arg1 :: <C-signed-int>;
  input parameter arg2 :: <C-signed-int>;
  input parameter arg3 :: <C-signed-int>;
  result res :: <char*>;
  c-name: "pango_version_check";
end;

define constant $PANGO-VERSION = 11802;

define C-struct <_PangoFontMetrics>
end;

define C-pointer-type <PangoFontMetrics> => <_PangoFontMetrics>;

define constant <PangoFontMask> = <C-int>;
define constant $PANGO-FONT-MASK-FAMILY = 1;
define constant $PANGO-FONT-MASK-STYLE = 2;
define constant $PANGO-FONT-MASK-VARIANT = 4;
define constant $PANGO-FONT-MASK-WEIGHT = 8;
define constant $PANGO-FONT-MASK-STRETCH = 16;
define constant $PANGO-FONT-MASK-SIZE = 32;
define constant $PANGO-FONT-MASK-GRAVITY = 64;

define C-function pango-font-description-get-type
  result res :: <GType>;
  c-name: "pango_font_description_get_type";
end;

define C-function pango-font-description-new
  result res :: <PangoFontDescription>;
  c-name: "pango_font_description_new";
end;

define C-function pango-font-description-copy
  input parameter arg1 :: <PangoFontDescription>;
  result res :: <PangoFontDescription>;
  c-name: "pango_font_description_copy";
end;

define C-function pango-font-description-copy-static
  input parameter arg1 :: <PangoFontDescription>;
  result res :: <PangoFontDescription>;
  c-name: "pango_font_description_copy_static";
end;

define C-function pango-font-description-hash
  input parameter arg1 :: <PangoFontDescription>;
  result res :: <guint>;
  c-name: "pango_font_description_hash";
end;

define C-function pango-font-description-equal
  input parameter arg1 :: <PangoFontDescription>;
  input parameter arg2 :: <PangoFontDescription>;
  result res :: <gboolean>;
  c-name: "pango_font_description_equal";
end;

define C-function pango-font-description-free
  input parameter arg1 :: <PangoFontDescription>;
  c-name: "pango_font_description_free";
end;

define C-pointer-type <PangoFontDescription*> => <PangoFontDescription>;
define C-function pango-font-descriptions-free
  input parameter arg1 :: <PangoFontDescription*>;
  input parameter arg2 :: <C-signed-int>;
  c-name: "pango_font_descriptions_free";
end;

define C-function pango-font-description-set-family
  input parameter arg1 :: <PangoFontDescription>;
  input parameter arg2 :: <char*>;
  c-name: "pango_font_description_set_family";
end;

define C-function pango-font-description-set-family-static
  input parameter arg1 :: <PangoFontDescription>;
  input parameter arg2 :: <char*>;
  c-name: "pango_font_description_set_family_static";
end;

define C-function pango-font-description-get-family
  input parameter arg1 :: <PangoFontDescription>;
  result res :: <char*>;
  c-name: "pango_font_description_get_family";
end;

define C-function pango-font-description-set-style
  input parameter arg1 :: <PangoFontDescription>;
  input parameter arg2 :: <PangoStyle>;
  c-name: "pango_font_description_set_style";
end;

define C-function pango-font-description-get-style
  input parameter arg1 :: <PangoFontDescription>;
  result res :: <PangoStyle>;
  c-name: "pango_font_description_get_style";
end;

define C-function pango-font-description-set-variant
  input parameter arg1 :: <PangoFontDescription>;
  input parameter arg2 :: <PangoVariant>;
  c-name: "pango_font_description_set_variant";
end;

define C-function pango-font-description-get-variant
  input parameter arg1 :: <PangoFontDescription>;
  result res :: <PangoVariant>;
  c-name: "pango_font_description_get_variant";
end;

define C-function pango-font-description-set-weight
  input parameter arg1 :: <PangoFontDescription>;
  input parameter arg2 :: <PangoWeight>;
  c-name: "pango_font_description_set_weight";
end;

define C-function pango-font-description-get-weight
  input parameter arg1 :: <PangoFontDescription>;
  result res :: <PangoWeight>;
  c-name: "pango_font_description_get_weight";
end;

define C-function pango-font-description-set-stretch
  input parameter arg1 :: <PangoFontDescription>;
  input parameter arg2 :: <PangoStretch>;
  c-name: "pango_font_description_set_stretch";
end;

define C-function pango-font-description-get-stretch
  input parameter arg1 :: <PangoFontDescription>;
  result res :: <PangoStretch>;
  c-name: "pango_font_description_get_stretch";
end;

define C-function pango-font-description-set-size
  input parameter arg1 :: <PangoFontDescription>;
  input parameter arg2 :: <gint>;
  c-name: "pango_font_description_set_size";
end;

define C-function pango-font-description-get-size
  input parameter arg1 :: <PangoFontDescription>;
  result res :: <gint>;
  c-name: "pango_font_description_get_size";
end;

define C-function pango-font-description-set-absolute-size
  input parameter arg1 :: <PangoFontDescription>;
  input parameter arg2 :: <C-double>;
  c-name: "pango_font_description_set_absolute_size";
end;

define C-function pango-font-description-get-size-is-absolute
  input parameter arg1 :: <PangoFontDescription>;
  result res :: <gboolean>;
  c-name: "pango_font_description_get_size_is_absolute";
end;

define constant <PangoGravity> = <C-int>;
define constant $PANGO-GRAVITY-SOUTH = 0;
define constant $PANGO-GRAVITY-EAST = 1;
define constant $PANGO-GRAVITY-NORTH = 2;
define constant $PANGO-GRAVITY-WEST = 3;
define constant $PANGO-GRAVITY-AUTO = 4;

define C-function pango-font-description-set-gravity
  input parameter arg1 :: <PangoFontDescription>;
  input parameter arg2 :: <PangoGravity>;
  c-name: "pango_font_description_set_gravity";
end;

define C-function pango-font-description-get-gravity
  input parameter arg1 :: <PangoFontDescription>;
  result res :: <PangoGravity>;
  c-name: "pango_font_description_get_gravity";
end;

define C-function pango-font-description-get-set-fields
  input parameter arg1 :: <PangoFontDescription>;
  result res :: <PangoFontMask>;
  c-name: "pango_font_description_get_set_fields";
end;

define C-function pango-font-description-unset-fields
  input parameter arg1 :: <PangoFontDescription>;
  input parameter arg2 :: <PangoFontMask>;
  c-name: "pango_font_description_unset_fields";
end;

define C-function pango-font-description-merge
  input parameter arg1 :: <PangoFontDescription>;
  input parameter arg2 :: <PangoFontDescription>;
  input parameter arg3 :: <gboolean>;
  c-name: "pango_font_description_merge";
end;

define C-function pango-font-description-merge-static
  input parameter arg1 :: <PangoFontDescription>;
  input parameter arg2 :: <PangoFontDescription>;
  input parameter arg3 :: <gboolean>;
  c-name: "pango_font_description_merge_static";
end;

define C-function pango-font-description-better-match
  input parameter arg1 :: <PangoFontDescription>;
  input parameter arg2 :: <PangoFontDescription>;
  input parameter arg3 :: <PangoFontDescription>;
  result res :: <gboolean>;
  c-name: "pango_font_description_better_match";
end;

define C-function pango-font-description-from-string
  input parameter arg1 :: <char*>;
  result res :: <PangoFontDescription>;
  c-name: "pango_font_description_from_string";
end;

define C-function pango-font-description-to-string
  input parameter arg1 :: <PangoFontDescription>;
  result res :: <char*>;
  c-name: "pango_font_description_to_string";
end;

define C-function pango-font-description-to-filename
  input parameter arg1 :: <PangoFontDescription>;
  result res :: <char*>;
  c-name: "pango_font_description_to_filename";
end;

define C-function pango-font-metrics-get-type
  result res :: <GType>;
  c-name: "pango_font_metrics_get_type";
end;

define C-function pango-font-metrics-ref
  input parameter arg1 :: <PangoFontMetrics>;
  result res :: <PangoFontMetrics>;
  c-name: "pango_font_metrics_ref";
end;

define C-function pango-font-metrics-unref
  input parameter arg1 :: <PangoFontMetrics>;
  c-name: "pango_font_metrics_unref";
end;

define C-function pango-font-metrics-get-ascent
  input parameter arg1 :: <PangoFontMetrics>;
  result res :: <C-signed-int>;
  c-name: "pango_font_metrics_get_ascent";
end;

define C-function pango-font-metrics-get-descent
  input parameter arg1 :: <PangoFontMetrics>;
  result res :: <C-signed-int>;
  c-name: "pango_font_metrics_get_descent";
end;

define C-function pango-font-metrics-get-approximate-char-width
  input parameter arg1 :: <PangoFontMetrics>;
  result res :: <C-signed-int>;
  c-name: "pango_font_metrics_get_approximate_char_width";
end;

define C-function pango-font-metrics-get-approximate-digit-width
  input parameter arg1 :: <PangoFontMetrics>;
  result res :: <C-signed-int>;
  c-name: "pango_font_metrics_get_approximate_digit_width";
end;

define C-function pango-font-metrics-get-underline-position
  input parameter arg1 :: <PangoFontMetrics>;
  result res :: <C-signed-int>;
  c-name: "pango_font_metrics_get_underline_position";
end;

define C-function pango-font-metrics-get-underline-thickness
  input parameter arg1 :: <PangoFontMetrics>;
  result res :: <C-signed-int>;
  c-name: "pango_font_metrics_get_underline_thickness";
end;

define C-function pango-font-metrics-get-strikethrough-position
  input parameter arg1 :: <PangoFontMetrics>;
  result res :: <C-signed-int>;
  c-name: "pango_font_metrics_get_strikethrough_position";
end;

define C-function pango-font-metrics-get-strikethrough-thickness
  input parameter arg1 :: <PangoFontMetrics>;
  result res :: <C-signed-int>;
  c-name: "pango_font_metrics_get_strikethrough_thickness";
end;

define C-subtype <_PangoFontFamily> (<_GObject>) end;
define constant <PangoFontFamily> = <_PangoFontFamily>;

define C-subtype <_PangoFontFace> (<_GObject>) end;
define constant <PangoFontFace> = <_PangoFontFace>;

define C-function pango-font-family-get-type
  result res :: <GType>;
  c-name: "pango_font_family_get_type";
end;

define C-pointer-type <PangoFontFace*> => <PangoFontFace>;
define C-pointer-type <PangoFontFace**> => <PangoFontFace*>;
define C-function pango-font-family-list-faces
  input parameter arg1 :: <PangoFontFamily>;
  input parameter arg2 :: <PangoFontFace**>;
  input parameter arg3 :: <int*>;
  c-name: "pango_font_family_list_faces";
end;

define C-function pango-font-family-get-name
  input parameter arg1 :: <PangoFontFamily>;
  result res :: <char*>;
  c-name: "pango_font_family_get_name";
end;

define C-function pango-font-family-is-monospace
  input parameter arg1 :: <PangoFontFamily>;
  result res :: <gboolean>;
  c-name: "pango_font_family_is_monospace";
end;

define C-function pango-font-face-get-type
  result res :: <GType>;
  c-name: "pango_font_face_get_type";
end;

define C-function pango-font-face-describe
  input parameter arg1 :: <PangoFontFace>;
  result res :: <PangoFontDescription>;
  c-name: "pango_font_face_describe";
end;

define C-function pango-font-face-get-face-name
  input parameter arg1 :: <PangoFontFace>;
  result res :: <char*>;
  c-name: "pango_font_face_get_face_name";
end;

define C-pointer-type <int**> => <int*>;
define C-function pango-font-face-list-sizes
  input parameter arg1 :: <PangoFontFace>;
  input parameter arg2 :: <int**>;
  input parameter arg3 :: <int*>;
  c-name: "pango_font_face_list_sizes";
end;

define C-function pango-font-face-is-synthesized
  input parameter arg1 :: <PangoFontFace>;
  result res :: <gboolean>;
  c-name: "pango_font_face_is_synthesized";
end;

define C-function pango-font-get-type
  result res :: <GType>;
  c-name: "pango_font_get_type";
end;

define C-subtype <_PangoFont> (<_GObject>) end;
define constant <PangoFont> = <_PangoFont>;

define C-function pango-font-describe
  input parameter arg1 :: <PangoFont>;
  result res :: <PangoFontDescription>;
  c-name: "pango_font_describe";
end;

define C-function pango-font-describe-with-absolute-size
  input parameter arg1 :: <PangoFont>;
  result res :: <PangoFontDescription>;
  c-name: "pango_font_describe_with_absolute_size";
end;

define C-struct <_PangoCoverage>
end;

define C-pointer-type <PangoCoverage> => <_PangoCoverage>;

define C-struct <_PangoLanguage>
end;

define C-pointer-type <PangoLanguage> => <_PangoLanguage>;

define C-function pango-font-get-coverage
  input parameter arg1 :: <PangoFont>;
  input parameter arg2 :: <PangoLanguage>;
  result res :: <PangoCoverage>;
  c-name: "pango_font_get_coverage";
end;

define C-struct <_PangoEngineShape>
end;

define C-pointer-type <PangoEngineShape> => <_PangoEngineShape>;

define C-function pango-font-find-shaper
  input parameter arg1 :: <PangoFont>;
  input parameter arg2 :: <PangoLanguage>;
  input parameter arg3 :: <guint32>;
  result res :: <PangoEngineShape>;
  c-name: "pango_font_find_shaper";
end;

define C-function pango-font-get-metrics
  input parameter arg1 :: <PangoFont>;
  input parameter arg2 :: <PangoLanguage>;
  result res :: <PangoFontMetrics>;
  c-name: "pango_font_get_metrics";
end;

define constant <PangoGlyph> = <guint32>;

define C-struct <_PangoRectangle>
  slot PangoRectangle-x :: <C-signed-int>;
  slot PangoRectangle-y :: <C-signed-int>;
  slot PangoRectangle-width :: <C-signed-int>;
  slot PangoRectangle-height :: <C-signed-int>;
end;

define C-pointer-type <PangoRectangle> => <_PangoRectangle>;

define C-function pango-font-get-glyph-extents
  input parameter arg1 :: <PangoFont>;
  input parameter arg2 :: <PangoGlyph>;
  input parameter arg3 :: <PangoRectangle>;
  input parameter arg4 :: <PangoRectangle>;
  c-name: "pango_font_get_glyph_extents";
end;

define C-subtype <_PangoFontMap> (<_GObject>) end;
define constant <PangoFontMap> = <_PangoFontMap>;

define C-function pango-font-get-font-map
  input parameter arg1 :: <PangoFont>;
  result res :: <PangoFontMap>;
  c-name: "pango_font_get_font_map";
end;

define C-struct <_PangoLogAttr>
  bitfield slot PangoLogAttr-is-line-break :: <C-int>, width: 1;
  bitfield slot PangoLogAttr-is-mandatory-break :: <C-int>, width: 1;
  bitfield slot PangoLogAttr-is-char-break :: <C-int>, width: 1;
  bitfield slot PangoLogAttr-is-white :: <C-int>, width: 1;
  bitfield slot PangoLogAttr-is-cursor-position :: <C-int>, width: 1;
  bitfield slot PangoLogAttr-is-word-start :: <C-int>, width: 1;
  bitfield slot PangoLogAttr-is-word-end :: <C-int>, width: 1;
  bitfield slot PangoLogAttr-is-sentence-boundary :: <C-int>, width: 1;
  bitfield slot PangoLogAttr-is-sentence-start :: <C-int>, width: 1;
  bitfield slot PangoLogAttr-is-sentence-end :: <C-int>, width: 1;
  bitfield slot PangoLogAttr-backspace-deletes-character :: <C-int>, width: 1;
  bitfield slot PangoLogAttr-is-expandable-space :: <C-int>, width: 1;
end;

define C-pointer-type <PangoLogAttr> => <_PangoLogAttr>;

define C-struct <_PangoEngineLang>
end;

define C-pointer-type <PangoEngineLang> => <_PangoEngineLang>;

define C-function pango-units-from-double
  input parameter arg1 :: <C-double>;
  result res :: <C-signed-int>;
  c-name: "pango_units_from_double";
end;

define C-function pango-units-to-double
  input parameter arg1 :: <C-signed-int>;
  result res :: <C-double>;
  c-name: "pango_units_to_double";
end;

define C-function pango-extents-to-pixels
  input parameter arg1 :: <PangoRectangle>;
  input parameter arg2 :: <PangoRectangle>;
  c-name: "pango_extents_to_pixels";
end;

define C-function pango-unichar-direction
  input parameter arg1 :: <gunichar>;
  result res :: <PangoDirection>;
  c-name: "pango_unichar_direction";
end;

define C-function pango-find-base-dir
  input parameter arg1 :: <gchar*>;
  input parameter arg2 :: <gint>;
  result res :: <PangoDirection>;
  c-name: "pango_find_base_dir";
end;

define C-function pango-get-mirror-char
  input parameter arg1 :: <gunichar>;
  input parameter arg2 :: <gunichar*>;
  result res :: <gboolean>;
  c-name: "pango_get_mirror_char";
end;

define constant $PANGO-SCALE = 1024;

define C-struct <_PangoScriptIter>
end;

define C-pointer-type <PangoScriptIter> => <_PangoScriptIter>;

define constant <PangoScript> = <C-int>;
define constant $PANGO-SCRIPT-INVALID-CODE = -1;
define constant $PANGO-SCRIPT-COMMON = 0;
define constant $PANGO-SCRIPT-INHERITED = 1;
define constant $PANGO-SCRIPT-ARABIC = 2;
define constant $PANGO-SCRIPT-ARMENIAN = 3;
define constant $PANGO-SCRIPT-BENGALI = 4;
define constant $PANGO-SCRIPT-BOPOMOFO = 5;
define constant $PANGO-SCRIPT-CHEROKEE = 6;
define constant $PANGO-SCRIPT-COPTIC = 7;
define constant $PANGO-SCRIPT-CYRILLIC = 8;
define constant $PANGO-SCRIPT-DESERET = 9;
define constant $PANGO-SCRIPT-DEVANAGARI = 10;
define constant $PANGO-SCRIPT-ETHIOPIC = 11;
define constant $PANGO-SCRIPT-GEORGIAN = 12;
define constant $PANGO-SCRIPT-GOTHIC = 13;
define constant $PANGO-SCRIPT-GREEK = 14;
define constant $PANGO-SCRIPT-GUJARATI = 15;
define constant $PANGO-SCRIPT-GURMUKHI = 16;
define constant $PANGO-SCRIPT-HAN = 17;
define constant $PANGO-SCRIPT-HANGUL = 18;
define constant $PANGO-SCRIPT-HEBREW = 19;
define constant $PANGO-SCRIPT-HIRAGANA = 20;
define constant $PANGO-SCRIPT-KANNADA = 21;
define constant $PANGO-SCRIPT-KATAKANA = 22;
define constant $PANGO-SCRIPT-KHMER = 23;
define constant $PANGO-SCRIPT-LAO = 24;
define constant $PANGO-SCRIPT-LATIN = 25;
define constant $PANGO-SCRIPT-MALAYALAM = 26;
define constant $PANGO-SCRIPT-MONGOLIAN = 27;
define constant $PANGO-SCRIPT-MYANMAR = 28;
define constant $PANGO-SCRIPT-OGHAM = 29;
define constant $PANGO-SCRIPT-OLD-ITALIC = 30;
define constant $PANGO-SCRIPT-ORIYA = 31;
define constant $PANGO-SCRIPT-RUNIC = 32;
define constant $PANGO-SCRIPT-SINHALA = 33;
define constant $PANGO-SCRIPT-SYRIAC = 34;
define constant $PANGO-SCRIPT-TAMIL = 35;
define constant $PANGO-SCRIPT-TELUGU = 36;
define constant $PANGO-SCRIPT-THAANA = 37;
define constant $PANGO-SCRIPT-THAI = 38;
define constant $PANGO-SCRIPT-TIBETAN = 39;
define constant $PANGO-SCRIPT-CANADIAN-ABORIGINAL = 40;
define constant $PANGO-SCRIPT-YI = 41;
define constant $PANGO-SCRIPT-TAGALOG = 42;
define constant $PANGO-SCRIPT-HANUNOO = 43;
define constant $PANGO-SCRIPT-BUHID = 44;
define constant $PANGO-SCRIPT-TAGBANWA = 45;
define constant $PANGO-SCRIPT-BRAILLE = 46;
define constant $PANGO-SCRIPT-CYPRIOT = 47;
define constant $PANGO-SCRIPT-LIMBU = 48;
define constant $PANGO-SCRIPT-OSMANYA = 49;
define constant $PANGO-SCRIPT-SHAVIAN = 50;
define constant $PANGO-SCRIPT-LINEAR-B = 51;
define constant $PANGO-SCRIPT-TAI-LE = 52;
define constant $PANGO-SCRIPT-UGARITIC = 53;
define constant $PANGO-SCRIPT-NEW-TAI-LUE = 54;
define constant $PANGO-SCRIPT-BUGINESE = 55;
define constant $PANGO-SCRIPT-GLAGOLITIC = 56;
define constant $PANGO-SCRIPT-TIFINAGH = 57;
define constant $PANGO-SCRIPT-SYLOTI-NAGRI = 58;
define constant $PANGO-SCRIPT-OLD-PERSIAN = 59;
define constant $PANGO-SCRIPT-KHAROSHTHI = 60;
define constant $PANGO-SCRIPT-UNKNOWN = 61;
define constant $PANGO-SCRIPT-BALINESE = 62;
define constant $PANGO-SCRIPT-CUNEIFORM = 63;
define constant $PANGO-SCRIPT-PHOENICIAN = 64;
define constant $PANGO-SCRIPT-PHAGS-PA = 65;
define constant $PANGO-SCRIPT-NKO = 66;

define C-function pango-script-for-unichar
  input parameter arg1 :: <gunichar>;
  result res :: <PangoScript>;
  c-name: "pango_script_for_unichar";
end;

define C-function pango-script-iter-new
  input parameter arg1 :: <char*>;
  input parameter arg2 :: <C-signed-int>;
  result res :: <PangoScriptIter>;
  c-name: "pango_script_iter_new";
end;

define C-pointer-type <PangoScript*> => <PangoScript>;
define C-function pango-script-iter-get-range
  input parameter arg1 :: <PangoScriptIter>;
  input parameter arg2 :: <c-string-vector>;
  input parameter arg3 :: <c-string-vector>;
  input parameter arg4 :: <PangoScript*>;
  c-name: "pango_script_iter_get_range";
end;

define C-function pango-script-iter-next
  input parameter arg1 :: <PangoScriptIter>;
  result res :: <gboolean>;
  c-name: "pango_script_iter_next";
end;

define C-function pango-script-iter-free
  input parameter arg1 :: <PangoScriptIter>;
  c-name: "pango_script_iter_free";
end;

define C-function pango-script-get-sample-language
  input parameter arg1 :: <PangoScript>;
  result res :: <PangoLanguage>;
  c-name: "pango_script_get_sample_language";
end;

define C-function pango-language-includes-script
  input parameter arg1 :: <PangoLanguage>;
  input parameter arg2 :: <PangoScript>;
  result res :: <gboolean>;
  c-name: "pango_language_includes_script";
end;

define C-function pango-language-get-type
  result res :: <GType>;
  c-name: "pango_language_get_type";
end;

define C-function pango-language-from-string
  input parameter arg1 :: <char*>;
  result res :: <PangoLanguage>;
  c-name: "pango_language_from_string";
end;

define C-function pango-language-get-sample-string
  input parameter arg1 :: <PangoLanguage>;
  result res :: <char*>;
  c-name: "pango_language_get_sample_string";
end;

define C-function pango-language-get-default
  result res :: <PangoLanguage>;
  c-name: "pango_language_get_default";
end;

define C-function pango-language-matches
  input parameter arg1 :: <PangoLanguage>;
  input parameter arg2 :: <char*>;
  result res :: <gboolean>;
  c-name: "pango_language_matches";
end;

define C-struct <_PangoMatrix>
  slot PangoMatrix-xx :: <C-double>;
  slot PangoMatrix-xy :: <C-double>;
  slot PangoMatrix-yx :: <C-double>;
  slot PangoMatrix-yy :: <C-double>;
  slot PangoMatrix-x0 :: <C-double>;
  slot PangoMatrix-y0 :: <C-double>;
end;

define C-pointer-type <PangoMatrix> => <_PangoMatrix>;

define C-function pango-matrix-get-type
  result res :: <GType>;
  c-name: "pango_matrix_get_type";
end;

define C-function pango-matrix-copy
  input parameter arg1 :: <PangoMatrix>;
  result res :: <PangoMatrix>;
  c-name: "pango_matrix_copy";
end;

define C-function pango-matrix-free
  input parameter arg1 :: <PangoMatrix>;
  c-name: "pango_matrix_free";
end;

define C-function pango-matrix-translate
  input parameter arg1 :: <PangoMatrix>;
  input parameter arg2 :: <C-double>;
  input parameter arg3 :: <C-double>;
  c-name: "pango_matrix_translate";
end;

define C-function pango-matrix-scale
  input parameter arg1 :: <PangoMatrix>;
  input parameter arg2 :: <C-double>;
  input parameter arg3 :: <C-double>;
  c-name: "pango_matrix_scale";
end;

define C-function pango-matrix-rotate
  input parameter arg1 :: <PangoMatrix>;
  input parameter arg2 :: <C-double>;
  c-name: "pango_matrix_rotate";
end;

define C-function pango-matrix-concat
  input parameter arg1 :: <PangoMatrix>;
  input parameter arg2 :: <PangoMatrix>;
  c-name: "pango_matrix_concat";
end;

define C-pointer-type <double*> => <C-double>;
define C-function pango-matrix-transform-point
  input parameter arg1 :: <PangoMatrix>;
  input parameter arg2 :: <double*>;
  input parameter arg3 :: <double*>;
  c-name: "pango_matrix_transform_point";
end;

define C-function pango-matrix-transform-distance
  input parameter arg1 :: <PangoMatrix>;
  input parameter arg2 :: <double*>;
  input parameter arg3 :: <double*>;
  c-name: "pango_matrix_transform_distance";
end;

define C-function pango-matrix-transform-rectangle
  input parameter arg1 :: <PangoMatrix>;
  input parameter arg2 :: <PangoRectangle>;
  c-name: "pango_matrix_transform_rectangle";
end;

define C-function pango-matrix-transform-pixel-rectangle
  input parameter arg1 :: <PangoMatrix>;
  input parameter arg2 :: <PangoRectangle>;
  c-name: "pango_matrix_transform_pixel_rectangle";
end;

define C-function pango-matrix-get-font-scale-factor
  input parameter arg1 :: <PangoMatrix>;
  result res :: <C-double>;
  c-name: "pango_matrix_get_font_scale_factor";
end;

define constant <PangoGravityHint> = <C-int>;
define constant $PANGO-GRAVITY-HINT-NATURAL = 0;
define constant $PANGO-GRAVITY-HINT-STRONG = 1;
define constant $PANGO-GRAVITY-HINT-LINE = 2;

define C-function pango-gravity-to-rotation
  input parameter arg1 :: <PangoGravity>;
  result res :: <C-double>;
  c-name: "pango_gravity_to_rotation";
end;

define C-function pango-gravity-get-for-matrix
  input parameter arg1 :: <PangoMatrix>;
  result res :: <PangoGravity>;
  c-name: "pango_gravity_get_for_matrix";
end;

define C-function pango-gravity-get-for-script
  input parameter arg1 :: <PangoScript>;
  input parameter arg2 :: <PangoGravity>;
  input parameter arg3 :: <PangoGravityHint>;
  result res :: <PangoGravity>;
  c-name: "pango_gravity_get_for_script";
end;

define constant <PangoCoverageLevel> = <C-int>;
define constant $PANGO-COVERAGE-NONE = 0;
define constant $PANGO-COVERAGE-FALLBACK = 1;
define constant $PANGO-COVERAGE-APPROXIMATE = 2;
define constant $PANGO-COVERAGE-EXACT = 3;

define C-function pango-coverage-new
  result res :: <PangoCoverage>;
  c-name: "pango_coverage_new";
end;

define C-function pango-coverage-ref
  input parameter arg1 :: <PangoCoverage>;
  result res :: <PangoCoverage>;
  c-name: "pango_coverage_ref";
end;

define C-function pango-coverage-unref
  input parameter arg1 :: <PangoCoverage>;
  c-name: "pango_coverage_unref";
end;

define C-function pango-coverage-copy
  input parameter arg1 :: <PangoCoverage>;
  result res :: <PangoCoverage>;
  c-name: "pango_coverage_copy";
end;

define C-function pango-coverage-get
  input parameter arg1 :: <PangoCoverage>;
  input parameter arg2 :: <C-signed-int>;
  result res :: <PangoCoverageLevel>;
  c-name: "pango_coverage_get";
end;

define C-function pango-coverage-set
  input parameter arg1 :: <PangoCoverage>;
  input parameter arg2 :: <C-signed-int>;
  input parameter arg3 :: <PangoCoverageLevel>;
  c-name: "pango_coverage_set";
end;

define C-function pango-coverage-max
  input parameter arg1 :: <PangoCoverage>;
  input parameter arg2 :: <PangoCoverage>;
  c-name: "pango_coverage_max";
end;

define C-pointer-type <guchar**> => <guchar*>;
define C-function pango-coverage-to-bytes
  input parameter arg1 :: <PangoCoverage>;
  input parameter arg2 :: <guchar**>;
  input parameter arg3 :: <int*>;
  c-name: "pango_coverage_to_bytes";
end;

define C-function pango-coverage-from-bytes
  input parameter arg1 :: <guchar*>;
  input parameter arg2 :: <C-signed-int>;
  result res :: <PangoCoverage>;
  c-name: "pango_coverage_from_bytes";
end;

define C-pointer-type <__FILE> => <_IO-FILE>;

define C-subtype <anonymous-2290> (<C-void*>) end;
define C-struct <__mbstate-t>
  slot _mbstate_t-__count :: <C-signed-int>;
  slot _mbstate_t-__value :: <anonymous-2290>;
end;

define C-struct <_G-fpos-t>
  slot G_fpos_t-__pos :: <C-signed-long>;
  slot G_fpos_t-__state :: <__mbstate-t>;
end;

define constant <fpos-t> = <_G-fpos-t>;

 /* Ignoring declaration for {instance of <variable-declaration>} "stdin"*/
 /* Ignoring declaration for {instance of <variable-declaration>} "stdout"*/
 /* Ignoring declaration for {instance of <variable-declaration>} "stderr"*/
define C-function remove
  input parameter arg1 :: <char*>;
  result res :: <C-signed-int>;
  c-name: "remove";
end;

define C-function rename
  input parameter arg1 :: <char*>;
  input parameter arg2 :: <char*>;
  result res :: <C-signed-int>;
  c-name: "rename";
end;

define C-function tmpfile
  result res :: <FILE>;
  c-name: "tmpfile";
end;

define C-function tmpnam
  input parameter arg1 :: <char*>;
  result res :: <char*>;
  c-name: "tmpnam";
end;

define C-function tmpnam-r
  input parameter arg1 :: <char*>;
  result res :: <char*>;
  c-name: "tmpnam_r";
end;

define C-function tempnam
  input parameter arg1 :: <char*>;
  input parameter arg2 :: <char*>;
  result res :: <char*>;
  c-name: "tempnam";
end;

define C-function fclose
  input parameter arg1 :: <FILE>;
  result res :: <C-signed-int>;
  c-name: "fclose";
end;

define C-function fflush
  input parameter arg1 :: <FILE>;
  result res :: <C-signed-int>;
  c-name: "fflush";
end;

define C-function fflush-unlocked
  input parameter arg1 :: <FILE>;
  result res :: <C-signed-int>;
  c-name: "fflush_unlocked";
end;

define C-function fopen
  input parameter arg1 :: <char*>;
  input parameter arg2 :: <char*>;
  result res :: <FILE>;
  c-name: "fopen";
end;

define C-function freopen
  input parameter arg1 :: <char*>;
  input parameter arg2 :: <char*>;
  input parameter arg3 :: <FILE>;
  result res :: <FILE>;
  c-name: "freopen";
end;

define C-function fdopen
  input parameter arg1 :: <C-signed-int>;
  input parameter arg2 :: <char*>;
  result res :: <FILE>;
  c-name: "fdopen";
end;

define C-function setbuf
  input parameter arg1 :: <FILE>;
  input parameter arg2 :: <char*>;
  c-name: "setbuf";
end;

define C-function setvbuf
  input parameter arg1 :: <FILE>;
  input parameter arg2 :: <char*>;
  input parameter arg3 :: <C-signed-int>;
  input parameter arg4 :: <size-t>;
  result res :: <C-signed-int>;
  c-name: "setvbuf";
end;

define C-function setbuffer
  input parameter arg1 :: <FILE>;
  input parameter arg2 :: <char*>;
  input parameter arg3 :: <size-t>;
  c-name: "setbuffer";
end;

define C-function setlinebuf
  input parameter arg1 :: <FILE>;
  c-name: "setlinebuf";
end;

define C-function fprintf
  input parameter arg1 :: <FILE>;
  input parameter arg2 :: <char*>;
  result res :: <C-signed-int>;
  c-name: "fprintf";
end;

define C-function printf
  input parameter arg1 :: <char*>;
  result res :: <C-signed-int>;
  c-name: "printf";
end;

define C-function sprintf
  input parameter arg1 :: <char*>;
  input parameter arg2 :: <char*>;
  result res :: <C-signed-int>;
  c-name: "sprintf";
end;

define C-function vfprintf
  input parameter arg1 :: <FILE>;
  input parameter arg2 :: <char*>;
  input parameter arg3 :: <__gnuc-va-list>;
  result res :: <C-signed-int>;
  c-name: "vfprintf";
end;

define C-function vprintf
  input parameter arg1 :: <char*>;
  input parameter arg2 :: <__gnuc-va-list>;
  result res :: <C-signed-int>;
  c-name: "vprintf";
end;

define C-function vsprintf
  input parameter arg1 :: <char*>;
  input parameter arg2 :: <char*>;
  input parameter arg3 :: <__gnuc-va-list>;
  result res :: <C-signed-int>;
  c-name: "vsprintf";
end;

define C-function snprintf
  input parameter arg1 :: <char*>;
  input parameter arg2 :: <size-t>;
  input parameter arg3 :: <char*>;
  result res :: <C-signed-int>;
  c-name: "snprintf";
end;

define C-function vsnprintf
  input parameter arg1 :: <char*>;
  input parameter arg2 :: <size-t>;
  input parameter arg3 :: <char*>;
  input parameter arg4 :: <__gnuc-va-list>;
  result res :: <C-signed-int>;
  c-name: "vsnprintf";
end;

define C-function fscanf
  input parameter arg1 :: <FILE>;
  input parameter arg2 :: <char*>;
  result res :: <C-signed-int>;
  c-name: "fscanf";
end;

define C-function scanf
  input parameter arg1 :: <char*>;
  result res :: <C-signed-int>;
  c-name: "scanf";
end;

define C-function sscanf
  input parameter arg1 :: <char*>;
  input parameter arg2 :: <char*>;
  result res :: <C-signed-int>;
  c-name: "sscanf";
end;

define C-function fgetc
  input parameter arg1 :: <FILE>;
  result res :: <C-signed-int>;
  c-name: "fgetc";
end;

define C-function getc
  input parameter arg1 :: <FILE>;
  result res :: <C-signed-int>;
  c-name: "getc";
end;

define C-function getchar
  result res :: <C-signed-int>;
  c-name: "getchar";
end;

define C-function getc-unlocked
  input parameter arg1 :: <FILE>;
  result res :: <C-signed-int>;
  c-name: "getc_unlocked";
end;

define C-function getchar-unlocked
  result res :: <C-signed-int>;
  c-name: "getchar_unlocked";
end;

define C-function fgetc-unlocked
  input parameter arg1 :: <FILE>;
  result res :: <C-signed-int>;
  c-name: "fgetc_unlocked";
end;

define C-function fputc
  input parameter arg1 :: <C-signed-int>;
  input parameter arg2 :: <FILE>;
  result res :: <C-signed-int>;
  c-name: "fputc";
end;

define C-function putc
  input parameter arg1 :: <C-signed-int>;
  input parameter arg2 :: <FILE>;
  result res :: <C-signed-int>;
  c-name: "putc";
end;

define C-function putchar
  input parameter arg1 :: <C-signed-int>;
  result res :: <C-signed-int>;
  c-name: "putchar";
end;

define C-function fputc-unlocked
  input parameter arg1 :: <C-signed-int>;
  input parameter arg2 :: <FILE>;
  result res :: <C-signed-int>;
  c-name: "fputc_unlocked";
end;

define C-function putc-unlocked
  input parameter arg1 :: <C-signed-int>;
  input parameter arg2 :: <FILE>;
  result res :: <C-signed-int>;
  c-name: "putc_unlocked";
end;

define C-function putchar-unlocked
  input parameter arg1 :: <C-signed-int>;
  result res :: <C-signed-int>;
  c-name: "putchar_unlocked";
end;

define C-function getw
  input parameter arg1 :: <FILE>;
  result res :: <C-signed-int>;
  c-name: "getw";
end;

define C-function putw
  input parameter arg1 :: <C-signed-int>;
  input parameter arg2 :: <FILE>;
  result res :: <C-signed-int>;
  c-name: "putw";
end;

define C-function fgets
  input parameter arg1 :: <char*>;
  input parameter arg2 :: <C-signed-int>;
  input parameter arg3 :: <FILE>;
  result res :: <char*>;
  c-name: "fgets";
end;

define C-function gets
  input parameter arg1 :: <char*>;
  result res :: <char*>;
  c-name: "gets";
end;

define C-function fputs
  input parameter arg1 :: <char*>;
  input parameter arg2 :: <FILE>;
  result res :: <C-signed-int>;
  c-name: "fputs";
end;

define C-function puts
  input parameter arg1 :: <char*>;
  result res :: <C-signed-int>;
  c-name: "puts";
end;

define C-function ungetc
  input parameter arg1 :: <C-signed-int>;
  input parameter arg2 :: <FILE>;
  result res :: <C-signed-int>;
  c-name: "ungetc";
end;

define C-function fread
  input parameter arg1 :: <C-void*>;
  input parameter arg2 :: <size-t>;
  input parameter arg3 :: <size-t>;
  input parameter arg4 :: <FILE>;
  result res :: <size-t>;
  c-name: "fread";
end;

define C-function fwrite
  input parameter arg1 :: <C-void*>;
  input parameter arg2 :: <size-t>;
  input parameter arg3 :: <size-t>;
  input parameter arg4 :: <FILE>;
  result res :: <size-t>;
  c-name: "fwrite";
end;

define C-function fread-unlocked
  input parameter arg1 :: <C-void*>;
  input parameter arg2 :: <size-t>;
  input parameter arg3 :: <size-t>;
  input parameter arg4 :: <FILE>;
  result res :: <size-t>;
  c-name: "fread_unlocked";
end;

define C-function fwrite-unlocked
  input parameter arg1 :: <C-void*>;
  input parameter arg2 :: <size-t>;
  input parameter arg3 :: <size-t>;
  input parameter arg4 :: <FILE>;
  result res :: <size-t>;
  c-name: "fwrite_unlocked";
end;

define C-function fseek
  input parameter arg1 :: <FILE>;
  input parameter arg2 :: <C-signed-long>;
  input parameter arg3 :: <C-signed-int>;
  result res :: <C-signed-int>;
  c-name: "fseek";
end;

define C-function ftell
  input parameter arg1 :: <FILE>;
  result res :: <C-signed-long>;
  c-name: "ftell";
end;

define C-function rewind
  input parameter arg1 :: <FILE>;
  c-name: "rewind";
end;

define C-function fseeko
  input parameter arg1 :: <FILE>;
  input parameter arg2 :: <__off-t>;
  input parameter arg3 :: <C-signed-int>;
  result res :: <C-signed-int>;
  c-name: "fseeko";
end;

define C-function ftello
  input parameter arg1 :: <FILE>;
  result res :: <__off-t>;
  c-name: "ftello";
end;

define C-function fgetpos
  input parameter arg1 :: <FILE>;
  input parameter arg2 :: <fpos-t>;
  result res :: <C-signed-int>;
  c-name: "fgetpos";
end;

define C-function fsetpos
  input parameter arg1 :: <FILE>;
  input parameter arg2 :: <fpos-t>;
  result res :: <C-signed-int>;
  c-name: "fsetpos";
end;

define C-function clearerr
  input parameter arg1 :: <FILE>;
  c-name: "clearerr";
end;

define C-function feof
  input parameter arg1 :: <FILE>;
  result res :: <C-signed-int>;
  c-name: "feof";
end;

define C-function ferror
  input parameter arg1 :: <FILE>;
  result res :: <C-signed-int>;
  c-name: "ferror";
end;

define C-function clearerr-unlocked
  input parameter arg1 :: <FILE>;
  c-name: "clearerr_unlocked";
end;

define C-function feof-unlocked
  input parameter arg1 :: <FILE>;
  result res :: <C-signed-int>;
  c-name: "feof_unlocked";
end;

define C-function ferror-unlocked
  input parameter arg1 :: <FILE>;
  result res :: <C-signed-int>;
  c-name: "ferror_unlocked";
end;

define C-function perror
  input parameter arg1 :: <char*>;
  c-name: "perror";
end;

define C-function fileno
  input parameter arg1 :: <FILE>;
  result res :: <C-signed-int>;
  c-name: "fileno";
end;

define C-function fileno-unlocked
  input parameter arg1 :: <FILE>;
  result res :: <C-signed-int>;
  c-name: "fileno_unlocked";
end;

define C-function popen
  input parameter arg1 :: <char*>;
  input parameter arg2 :: <char*>;
  result res :: <FILE>;
  c-name: "popen";
end;

define C-function pclose
  input parameter arg1 :: <FILE>;
  result res :: <C-signed-int>;
  c-name: "pclose";
end;

define C-function ctermid
  input parameter arg1 :: <char*>;
  result res :: <char*>;
  c-name: "ctermid";
end;

define C-function flockfile
  input parameter arg1 :: <FILE>;
  c-name: "flockfile";
end;

define C-function ftrylockfile
  input parameter arg1 :: <FILE>;
  result res :: <C-signed-int>;
  c-name: "ftrylockfile";
end;

define C-function funlockfile
  input parameter arg1 :: <FILE>;
  c-name: "funlockfile";
end;

define constant $_STDIO-H = 1;

define constant $__FILE-defined = 1;

define constant $____FILE-defined = 1;

define constant $_IOFBF = 0;

define constant $_IOLBF = 1;

define constant $_IONBF = 2;

define constant $BUFSIZ = 8192;

define constant $SEEK-SET = 0;

define constant $SEEK-CUR = 1;

define constant $SEEK-END = 2;

define constant $P-tmpdir = "/tmp";

 /* Ignoring declaration for {instance of <variable-declaration>} "sys-nerr"*/
define constant <char*<@>> = <c-string-vector>;
 /* Ignoring declaration for {instance of <variable-declaration>} "sys-errlist"*/
define constant $L-tmpnam = 20;

define constant $TMP-MAX = 238328;

define constant $FILENAME-MAX = 4096;

define constant $L-ctermid = 9;

define constant $L-cuserid = 9;

define constant $FOPEN-MAX = 16;

define C-struct <_IO-jump-t>
end;

define constant <__codecvt-result> = <C-int>;
define constant $__codecvt-ok = 0;
define constant $__codecvt-partial = 1;
define constant $__codecvt-error = 2;
define constant $__codecvt-noconv = 3;

define C-struct <_IO-FILE-plus>
end;

 /* Ignoring declaration for {instance of <variable-declaration>} "_IO-2-1-stdin-"*/
 /* Ignoring declaration for {instance of <variable-declaration>} "_IO-2-1-stdout-"*/
 /* Ignoring declaration for {instance of <variable-declaration>} "_IO-2-1-stderr-"*/
define constant <anonymous-2307> = <C-function-pointer>;
define constant <__io-read-fn> = <anonymous-2307>;

define constant <anonymous-2308> = <C-function-pointer>;
define constant <__io-write-fn> = <anonymous-2308>;

define constant <anonymous-2309> = <C-function-pointer>;
define constant <__io-seek-fn> = <anonymous-2309>;

define constant <anonymous-2310> = <C-function-pointer>;
define constant <__io-close-fn> = <anonymous-2310>;

define C-function __underflow
  input parameter arg1 :: <_IO-FILE>;
  result res :: <C-signed-int>;
  c-name: "__underflow";
end;

define C-function __uflow
  input parameter arg1 :: <_IO-FILE>;
  result res :: <C-signed-int>;
  c-name: "__uflow";
end;

define C-function __overflow
  input parameter arg1 :: <_IO-FILE>;
  input parameter arg2 :: <C-signed-int>;
  result res :: <C-signed-int>;
  c-name: "__overflow";
end;

define C-function __wunderflow
  input parameter arg1 :: <_IO-FILE>;
  result res :: <wint-t>;
  c-name: "__wunderflow";
end;

define C-function __wuflow
  input parameter arg1 :: <_IO-FILE>;
  result res :: <wint-t>;
  c-name: "__wuflow";
end;

define C-function __woverflow
  input parameter arg1 :: <_IO-FILE>;
  input parameter arg2 :: <wint-t>;
  result res :: <wint-t>;
  c-name: "__woverflow";
end;

define C-function _IO-getc
  input parameter arg1 :: <_IO-FILE>;
  result res :: <C-signed-int>;
  c-name: "_IO_getc";
end;

define C-function _IO-putc
  input parameter arg1 :: <C-signed-int>;
  input parameter arg2 :: <_IO-FILE>;
  result res :: <C-signed-int>;
  c-name: "_IO_putc";
end;

define C-function _IO-feof
  input parameter arg1 :: <_IO-FILE>;
  result res :: <C-signed-int>;
  c-name: "_IO_feof";
end;

define C-function _IO-ferror
  input parameter arg1 :: <_IO-FILE>;
  result res :: <C-signed-int>;
  c-name: "_IO_ferror";
end;

define C-function _IO-peekc-locked
  input parameter arg1 :: <_IO-FILE>;
  result res :: <C-signed-int>;
  c-name: "_IO_peekc_locked";
end;

define C-function _IO-flockfile
  input parameter arg1 :: <_IO-FILE>;
  c-name: "_IO_flockfile";
end;

define C-function _IO-funlockfile
  input parameter arg1 :: <_IO-FILE>;
  c-name: "_IO_funlockfile";
end;

define C-function _IO-ftrylockfile
  input parameter arg1 :: <_IO-FILE>;
  result res :: <C-signed-int>;
  c-name: "_IO_ftrylockfile";
end;

define C-function _IO-vfscanf
  input parameter arg1 :: <_IO-FILE>;
  input parameter arg2 :: <char*>;
  input parameter arg3 :: <__gnuc-va-list>;
  input parameter arg4 :: <int*>;
  result res :: <C-signed-int>;
  c-name: "_IO_vfscanf";
end;

define C-function _IO-vfprintf
  input parameter arg1 :: <_IO-FILE>;
  input parameter arg2 :: <char*>;
  input parameter arg3 :: <__gnuc-va-list>;
  result res :: <C-signed-int>;
  c-name: "_IO_vfprintf";
end;

define C-function _IO-padn
  input parameter arg1 :: <_IO-FILE>;
  input parameter arg2 :: <C-signed-int>;
  input parameter arg3 :: <__ssize-t>;
  result res :: <__ssize-t>;
  c-name: "_IO_padn";
end;

define C-function _IO-sgetn
  input parameter arg1 :: <_IO-FILE>;
  input parameter arg2 :: <C-void*>;
  input parameter arg3 :: <size-t>;
  result res :: <size-t>;
  c-name: "_IO_sgetn";
end;

define C-function _IO-seekoff
  input parameter arg1 :: <_IO-FILE>;
  input parameter arg2 :: <__off64-t>;
  input parameter arg3 :: <C-signed-int>;
  input parameter arg4 :: <C-signed-int>;
  result res :: <__off64-t>;
  c-name: "_IO_seekoff";
end;

define C-function _IO-seekpos
  input parameter arg1 :: <_IO-FILE>;
  input parameter arg2 :: <__off64-t>;
  input parameter arg3 :: <C-signed-int>;
  result res :: <__off64-t>;
  c-name: "_IO_seekpos";
end;

define C-function _IO-free-backup-area
  input parameter arg1 :: <_IO-FILE>;
  c-name: "_IO_free_backup_area";
end;

define constant <_IO-pos-t> = <_G-fpos-t>;

define constant <_IO-fpos-t> = <_G-fpos-t>;

define C-struct <_G-fpos64-t>
  slot G_fpos64_t-__pos :: <__quad-t>;
  slot G_fpos64_t-__state :: <__mbstate-t>;
end;

define constant <_IO-fpos64-t> = <_G-fpos64-t>;

define constant <_IO-size-t> = <size-t>;

define constant <_IO-ssize-t> = <__ssize-t>;

define constant <_IO-off-t> = <__off-t>;

define constant <_IO-off64-t> = <__off64-t>;

define constant <_IO-pid-t> = <__pid-t>;

define constant <_IO-uid-t> = <__uid-t>;

define C-struct <__gconv-loaded-object>
end;

define C-pointer-type <unsigned-char*> => <C-unsigned-char>;
define C-pointer-type <unsigned-char**> => <unsigned-char*>;
define C-pointer-type <size-t*> => <size-t>;
define constant <anonymous-2300> = <C-function-pointer>;
define constant <__gconv-trans-fct> = <anonymous-2300>;

define constant <anonymous-2301> = <C-function-pointer>;
define constant <__gconv-trans-context-fct> = <anonymous-2301>;

define constant <anonymous-2304> = <C-function-pointer>;
define constant <__gconv-trans-end-fct> = <anonymous-2304>;

define C-struct <__gconv-trans-data>
  slot _gconv_trans_data-__trans-fct :: <anonymous-2300>;
  slot _gconv_trans_data-__trans-context-fct :: <anonymous-2301>;
  slot _gconv_trans_data-__trans-end-fct :: <anonymous-2304>;
  slot _gconv_trans_data-__data :: <C-void*>;
  slot _gconv_trans_data-__next :: <C-void*>; //<__gconv-trans-data>;
end;

define C-struct <__gconv-step-data>
  slot _gconv_step_data-__outbuf :: <unsigned-char*>;
  slot _gconv_step_data-__outbufend :: <unsigned-char*>;
  slot _gconv_step_data-__flags :: <C-signed-int>;
  slot _gconv_step_data-__invocation-counter :: <C-signed-int>;
  slot _gconv_step_data-__internal-use :: <C-signed-int>;
  slot _gconv_step_data-__statep :: <__mbstate-t>;
  slot _gconv_step_data-__state :: <__mbstate-t>;
  slot _gconv_step_data-__trans :: <__gconv-trans-data>;
end;

define constant <anonymous-2296> = <C-function-pointer>;
define constant <__gconv-fct> = <anonymous-2296>;

define constant <anonymous-2297> = <C-function-pointer>;
define constant <__gconv-btowc-fct> = <anonymous-2297>;

define constant <anonymous-2298> = <C-function-pointer>;
define constant <__gconv-init-fct> = <anonymous-2298>;

define constant <anonymous-2299> = <C-function-pointer>;
define constant <__gconv-end-fct> = <anonymous-2299>;

define C-struct <__gconv-step>
  slot _gconv_step-__shlib-handle :: <__gconv-loaded-object>;
  slot _gconv_step-__modname :: <char*>;
  slot _gconv_step-__counter :: <C-signed-int>;
  slot _gconv_step-__from-name :: <char*>;
  slot _gconv_step-__to-name :: <char*>;
  slot _gconv_step-__fct :: <anonymous-2296>;
  slot _gconv_step-__btowc-fct :: <anonymous-2297>;
  slot _gconv_step-__init-fct :: <anonymous-2298>;
  slot _gconv_step-__end-fct :: <anonymous-2299>;
  slot _gconv_step-__min-needed-from :: <C-signed-int>;
  slot _gconv_step-__max-needed-from :: <C-signed-int>;
  slot _gconv_step-__min-needed-to :: <C-signed-int>;
  slot _gconv_step-__max-needed-to :: <C-signed-int>;
  slot _gconv_step-__stateful :: <C-signed-int>;
  slot _gconv_step-__data :: <C-void*>;
end;

define constant <__gconv-step-data<@1>> = <__gconv-step-data>;
define C-struct <__gconv-info>
  slot _gconv_info-__nsteps :: <C-unsigned-long>;
  slot _gconv_info-__steps :: <__gconv-step>;
  array slot _gconv_info-__data :: <__gconv-step-data>, length: 1;
end;

define C-struct <anonymous-2305>
  slot nonymous-2305-__cd :: <__gconv-info>;
  slot nonymous-2305-__data :: <__gconv-step-data>;
end;

define C-subtype <_G-iconv-t> (<C-void*>) end;
define constant <_IO-iconv-t> = <_G-iconv-t>;

define constant $_IO-HAVE-SYS-WAIT = 1;

define constant $_IO-HAVE-ST-BLKSIZE = 0;

define constant $_IO-BUFSIZ = 8192;

define constant <_IO-va-list> = <__gnuc-va-list>;

define constant <_IO-wint-t> = <wint-t>;

define constant $_IO-UNIFIED-JUMPTABLES = 1;

define constant $EOF = -1;

define constant $_IOS-INPUT = 1;

define constant $_IOS-OUTPUT = 2;

define constant $_IOS-ATEND = 4;

define constant $_IOS-APPEND = 8;

define constant $_IOS-TRUNC = 16;

define constant $_IOS-NOCREATE = 32;

define constant $_IOS-NOREPLACE = 64;

define constant $_IOS-BIN = 128;

define constant $_IO-USER-BUF = 1;

define constant $_IO-UNBUFFERED = 2;

define constant $_IO-NO-READS = 4;

define constant $_IO-NO-WRITES = 8;

define constant $_IO-EOF-SEEN = 16;

define constant $_IO-ERR-SEEN = 32;

define constant $_IO-DELETE-DONT-CLOSE = 64;

define constant $_IO-LINKED = 128;

define constant $_IO-IN-BACKUP = 256;

define constant $_IO-LINE-BUF = 512;

define constant $_IO-TIED-PUT-GET = 1024;

define constant $_IO-CURRENTLY-PUTTING = 2048;

define constant $_IO-IS-APPENDING = 4096;

define constant $_IO-IS-FILEBUF = 8192;

define constant $_IO-BAD-SEEN = 16384;

define constant $_IO-USER-LOCK = 32768;

define constant $_IO-FLAGS2-MMAP = 1;

define constant $_IO-FLAGS2-NOTCANCEL = 2;

define constant $_IO-FLAGS2-USER-WBUF = 8;

define constant $_IO-SKIPWS = 1;

define constant $_IO-LEFT = 2;

define constant $_IO-RIGHT = 4;

define constant $_IO-INTERNAL = 8;

define constant $_IO-DEC = 16;

define constant $_IO-OCT = 32;

define constant $_IO-HEX = 64;

define constant $_IO-SHOWBASE = 128;

define constant $_IO-SHOWPOINT = 256;

define constant $_IO-UPPERCASE = 512;

define constant $_IO-SHOWPOS = 1024;

define constant $_IO-SCIENTIFIC = 2048;

define constant $_IO-FIXED = 4096;

define constant $_IO-UNITBUF = 8192;

define constant $_IO-STDIO = 16384;

define constant $_IO-DONT-CLOSE = 32768;

define constant $_IO-BOOLALPHA = 65536;

define constant <_G-int16-t> = <C-signed-int>;

define constant <_G-int32-t> = <C-signed-int>;

define constant <_G-uint16-t> = <C-unsigned-int>;

define constant <_G-uint32-t> = <C-unsigned-int>;

define constant $_G-config-h = 1;

define constant <_G-size-t> = <size-t>;

define constant <_G-ssize-t> = <__ssize-t>;

define constant <_G-off-t> = <__off-t>;

define constant <_G-off64-t> = <__off64-t>;

define constant <_G-pid-t> = <__pid-t>;

define constant <_G-uid-t> = <__uid-t>;

define constant <_G-wchar-t> = <wchar-t>;

define constant <_G-wint-t> = <wint-t>;

define constant $_G-HAVE-BOOL = 1;

define constant $_G-HAVE-ATEXIT = 1;

define constant $_G-HAVE-SYS-CDEFS = 1;

define constant $_G-HAVE-SYS-WAIT = 1;

define constant $_G-NEED-STDARG-H = 1;

define constant <_G-va-list> = <__gnuc-va-list>;

define constant $_G-HAVE-PRINTF-FP = 1;

define constant $_G-HAVE-MMAP = 1;

define constant $_G-HAVE-MREMAP = 1;

define constant $_G-HAVE-LONG-DOUBLE-IO = 1;

define constant $_G-HAVE-IO-FILE-OPEN = 1;

define constant $_G-HAVE-IO-GETLINE-INFO = 1;

define constant $_G-IO-IO-FILE-VERSION = 131073;

define constant $_G-HAVE-ST-BLKSIZE = 0;

define constant $_G-BUFSIZ = 8192;

define constant $_G-NAMES-HAVE-UNDERSCORE = 0;

define constant $_G-VTABLE-LABEL-HAS-LENGTH = 1;

define constant $_G-USING-THUNKS = 1;

define constant $_G-VTABLE-LABEL-PREFIX = "__vt_";

define constant <anonymous-2294> = <C-int>;
define constant $__GCONV-OK = 0;
define constant $__GCONV-NOCONV = 1;
define constant $__GCONV-NODB = 2;
define constant $__GCONV-NOMEM = 3;
define constant $__GCONV-EMPTY-INPUT = 4;
define constant $__GCONV-FULL-OUTPUT = 5;
define constant $__GCONV-ILLEGAL-INPUT = 6;
define constant $__GCONV-INCOMPLETE-INPUT = 7;
define constant $__GCONV-ILLEGAL-DESCRIPTOR = 8;
define constant $__GCONV-INTERNAL-ERROR = 9;

define constant <anonymous-2295> = <C-int>;
define constant $__GCONV-IS-LAST = 1;
define constant $__GCONV-IGNORE-ERRORS = 2;

define C-pointer-type <char***> => <c-string-vector>;
define constant <anonymous-2302> = <C-function-pointer>;
define constant <__gconv-trans-query-fct> = <anonymous-2302>;

define C-pointer-type <statically-typed-pointer*> => <C-void*>;
define constant <anonymous-2303> = <C-function-pointer>;
define constant <__gconv-trans-init-fct> = <anonymous-2303>;

define constant <__gconv-t> = <__gconv-info>;

define constant $_GCONV-H = 1;

define constant $__mbstate-t-defined = 1;

define constant $_BITS-WCHAR-H = 1;

define C-struct <_PangoTabArray>
end;

define C-pointer-type <PangoTabArray> => <_PangoTabArray>;

define constant <PangoTabAlign> = <C-int>;
define constant $PANGO-TAB-LEFT = 0;

define C-function pango-tab-array-new
  input parameter arg1 :: <gint>;
  input parameter arg2 :: <gboolean>;
  result res :: <PangoTabArray>;
  c-name: "pango_tab_array_new";
end;

define C-function pango-tab-array-new-with-positions
  input parameter arg1 :: <gint>;
  input parameter arg2 :: <gboolean>;
  input parameter arg3 :: <PangoTabAlign>;
  input parameter arg4 :: <gint>;
  result res :: <PangoTabArray>;
  c-name: "pango_tab_array_new_with_positions";
end;

define C-function pango-tab-array-get-type
  result res :: <GType>;
  c-name: "pango_tab_array_get_type";
end;

define C-function pango-tab-array-copy
  input parameter arg1 :: <PangoTabArray>;
  result res :: <PangoTabArray>;
  c-name: "pango_tab_array_copy";
end;

define C-function pango-tab-array-free
  input parameter arg1 :: <PangoTabArray>;
  c-name: "pango_tab_array_free";
end;

define C-function pango-tab-array-get-size
  input parameter arg1 :: <PangoTabArray>;
  result res :: <gint>;
  c-name: "pango_tab_array_get_size";
end;

define C-function pango-tab-array-resize
  input parameter arg1 :: <PangoTabArray>;
  input parameter arg2 :: <gint>;
  c-name: "pango_tab_array_resize";
end;

define C-function pango-tab-array-set-tab
  input parameter arg1 :: <PangoTabArray>;
  input parameter arg2 :: <gint>;
  input parameter arg3 :: <PangoTabAlign>;
  input parameter arg4 :: <gint>;
  c-name: "pango_tab_array_set_tab";
end;

define C-pointer-type <PangoTabAlign*> => <PangoTabAlign>;
define C-function pango-tab-array-get-tab
  input parameter arg1 :: <PangoTabArray>;
  input parameter arg2 :: <gint>;
  input parameter arg3 :: <PangoTabAlign*>;
  input parameter arg4 :: <gint*>;
  c-name: "pango_tab_array_get_tab";
end;

define C-pointer-type <PangoTabAlign**> => <PangoTabAlign*>;
define C-pointer-type <gint**> => <gint*>;
define C-function pango-tab-array-get-tabs
  input parameter arg1 :: <PangoTabArray>;
  input parameter arg2 :: <PangoTabAlign**>;
  input parameter arg3 :: <gint**>;
  c-name: "pango_tab_array_get_tabs";
end;

define C-function pango-tab-array-get-positions-in-pixels
  input parameter arg1 :: <PangoTabArray>;
  result res :: <gboolean>;
  c-name: "pango_tab_array_get_positions_in_pixels";
end;

define constant <PangoUnderline> = <C-int>;
define constant $PANGO-UNDERLINE-NONE = 0;
define constant $PANGO-UNDERLINE-SINGLE = 1;
define constant $PANGO-UNDERLINE-DOUBLE = 2;
define constant $PANGO-UNDERLINE-LOW = 3;
define constant $PANGO-UNDERLINE-ERROR = 4;

define C-struct <_PangoRendererPrivate>
end;

define C-pointer-type <PangoRendererPrivate> => <_PangoRendererPrivate>;

define C-subtype <_PangoRenderer> (<_GObject>) end;
define constant <PangoRenderer> = <_PangoRenderer>;

define constant <PangoGlyphUnit> = <gint32>;

define C-struct <_PangoGlyphGeometry>
  slot PangoGlyphGeometry-width :: <C-signed-int>;
  slot PangoGlyphGeometry-x-offset :: <C-signed-int>;
  slot PangoGlyphGeometry-y-offset :: <C-signed-int>;
end;

define C-pointer-type <PangoGlyphGeometry> => <_PangoGlyphGeometry>;

define C-struct <_PangoGlyphVisAttr>
  bitfield slot PangoGlyphVisAttr-is-cluster-start :: <C-int>, width: 1;
end;

define C-pointer-type <PangoGlyphVisAttr> => <_PangoGlyphVisAttr>;

define C-struct <_PangoGlyphInfo>
  slot PangoGlyphInfo-glyph :: <C-unsigned-int>;
  slot PangoGlyphInfo-geometry :: <_PangoGlyphGeometry>;
  slot PangoGlyphInfo-attr :: <_PangoGlyphVisAttr>;
end;

define C-pointer-type <PangoGlyphInfo> => <_PangoGlyphInfo>;

define C-struct <_PangoGlyphString>
  slot PangoGlyphString-num-glyphs :: <C-signed-int>;
  slot PangoGlyphString-glyphs :: <PangoGlyphInfo>;
  slot PangoGlyphString-log-clusters :: <gint*>;
  slot PangoGlyphString-space :: <C-signed-int>;
end;

define C-pointer-type <PangoGlyphString> => <_PangoGlyphString>;

define constant <anonymous-2261> = <C-function-pointer>;
define constant <PangoRenderPart> = <C-int>;
define constant $PANGO-RENDER-PART-FOREGROUND = 0;
define constant $PANGO-RENDER-PART-BACKGROUND = 1;
define constant $PANGO-RENDER-PART-UNDERLINE = 2;
define constant $PANGO-RENDER-PART-STRIKETHROUGH = 3;

define constant <anonymous-2262> = <C-function-pointer>;
define constant <anonymous-2263> = <C-function-pointer>;
define constant <PangoAttrType> = <C-int>;
define constant $PANGO-ATTR-INVALID = 0;
define constant $PANGO-ATTR-LANGUAGE = 1;
define constant $PANGO-ATTR-FAMILY = 2;
define constant $PANGO-ATTR-STYLE = 3;
define constant $PANGO-ATTR-WEIGHT = 4;
define constant $PANGO-ATTR-VARIANT = 5;
define constant $PANGO-ATTR-STRETCH = 6;
define constant $PANGO-ATTR-SIZE = 7;
define constant $PANGO-ATTR-FONT-DESC = 8;
define constant $PANGO-ATTR-FOREGROUND = 9;
define constant $PANGO-ATTR-BACKGROUND = 10;
define constant $PANGO-ATTR-UNDERLINE = 11;
define constant $PANGO-ATTR-STRIKETHROUGH = 12;
define constant $PANGO-ATTR-RISE = 13;
define constant $PANGO-ATTR-SHAPE = 14;
define constant $PANGO-ATTR-SCALE = 15;
define constant $PANGO-ATTR-FALLBACK = 16;
define constant $PANGO-ATTR-LETTER-SPACING = 17;
define constant $PANGO-ATTR-UNDERLINE-COLOR = 18;
define constant $PANGO-ATTR-STRIKETHROUGH-COLOR = 19;
define constant $PANGO-ATTR-ABSOLUTE-SIZE = 20;
define constant $PANGO-ATTR-GRAVITY = 21;
define constant $PANGO-ATTR-GRAVITY-HINT = 22;

define constant <anonymous-2029> = <C-function-pointer>;
define constant <anonymous-2030> = <C-function-pointer>;
define constant <anonymous-2031> = <C-function-pointer>;
define C-struct <_PangoAttrClass>
  slot PangoAttrClass-type :: <PangoAttrType>;
  slot PangoAttrClass-copy :: <anonymous-2029>;
  slot PangoAttrClass-destroy :: <anonymous-2030>;
  slot PangoAttrClass-equal :: <anonymous-2031>;
end;

define C-pointer-type <PangoAttrClass> => <_PangoAttrClass>;

define C-struct <_PangoAttribute>
  slot PangoAttribute-klass :: <PangoAttrClass>;
  slot PangoAttribute-start-index :: <C-unsigned-int>;
  slot PangoAttribute-end-index :: <C-unsigned-int>;
end;

define C-pointer-type <PangoAttribute> => <_PangoAttribute>;

define constant <anonymous-2028> = <C-function-pointer>;
define constant <PangoAttrDataCopyFunc> = <anonymous-2028>;

define C-struct <_PangoAttrShape>
  slot PangoAttrShape-attr :: <_PangoAttribute>;
  slot PangoAttrShape-ink-rect :: <_PangoRectangle>;
  slot PangoAttrShape-logical-rect :: <_PangoRectangle>;
  slot PangoAttrShape-data :: <C-void*>;
  slot PangoAttrShape-copy-func :: <anonymous-2028>;
  slot PangoAttrShape-destroy-func :: <anonymous-223>;
end;

define C-pointer-type <PangoAttrShape> => <_PangoAttrShape>;

define constant <anonymous-2264> = <C-function-pointer>;
define constant <anonymous-2265> = <C-function-pointer>;
define constant <anonymous-2266> = <C-function-pointer>;
define constant <anonymous-2267> = <C-function-pointer>;
define constant <anonymous-2268> = <C-function-pointer>;
define constant <anonymous-2269> = <C-function-pointer>;
define C-struct <_PangoAnalysis>
  slot PangoAnalysis-shape-engine :: <PangoEngineShape>;
  slot PangoAnalysis-lang-engine :: <PangoEngineLang>;
  slot PangoAnalysis-font :: <PangoFont>;
  slot PangoAnalysis-level :: <C-unsigned-char>;
  slot PangoAnalysis-gravity :: <C-unsigned-char>;
  slot PangoAnalysis-flags :: <C-unsigned-char>;
  slot PangoAnalysis-script :: <C-unsigned-char>;
  slot PangoAnalysis-language :: <PangoLanguage>;
  slot PangoAnalysis-extra-attrs :: <GSList>;
end;

define C-pointer-type <PangoAnalysis> => <_PangoAnalysis>;

define C-struct <_PangoItem>
  slot PangoItem-offset :: <C-signed-int>;
  slot PangoItem-length :: <C-signed-int>;
  slot PangoItem-num-chars :: <C-signed-int>;
  slot PangoItem-analysis :: <_PangoAnalysis>;
end;

define C-pointer-type <PangoItem> => <_PangoItem>;

define C-struct <_PangoGlyphItem>
  slot PangoGlyphItem-item :: <PangoItem>;
  slot PangoGlyphItem-glyphs :: <PangoGlyphString>;
end;

define C-pointer-type <PangoGlyphItem> => <_PangoGlyphItem>;

define constant <PangoLayoutRun> = <PangoGlyphItem>;

define constant <anonymous-2270> = <C-function-pointer>;
define constant <anonymous-2271> = <C-function-pointer>;
define constant <anonymous-2272> = <C-function-pointer>;
define constant <anonymous-2273> = <C-function-pointer>;
define constant <anonymous-2274> = <C-function-pointer>;
define C-struct <_PangoRendererClass>
  slot PangoRendererClass-parent-class :: <_GObjectClass>;
  slot PangoRendererClass-draw-glyphs :: <anonymous-2261>;
  slot PangoRendererClass-draw-rectangle :: <anonymous-2262>;
  slot PangoRendererClass-draw-error-underline :: <anonymous-2263>;
  slot PangoRendererClass-draw-shape :: <anonymous-2264>;
  slot PangoRendererClass-draw-trapezoid :: <anonymous-2265>;
  slot PangoRendererClass-draw-glyph :: <anonymous-2266>;
  slot PangoRendererClass-part-changed :: <anonymous-2267>;
  slot PangoRendererClass-begin :: <anonymous-2268>;
  slot PangoRendererClass-end :: <anonymous-2269>;
  slot PangoRendererClass-prepare-run :: <anonymous-2270>;
  slot PangoRendererClass-_pango-reserved1 :: <anonymous-2271>;
  slot PangoRendererClass-_pango-reserved2 :: <anonymous-2272>;
  slot PangoRendererClass-_pango-reserved3 :: <anonymous-2273>;
  slot PangoRendererClass-_pango-reserved4 :: <anonymous-2274>;
end;

define C-pointer-type <PangoRendererClass> => <_PangoRendererClass>;

define C-function pango-renderer-get-type
  result res :: <GType>;
  c-name: "pango_renderer_get_type";
end;

define C-function pango-renderer-draw-layout
  input parameter arg1 :: <PangoRenderer>;
  input parameter arg2 :: <PangoLayout>;
  input parameter arg3 :: <C-signed-int>;
  input parameter arg4 :: <C-signed-int>;
  c-name: "pango_renderer_draw_layout";
end;

define C-struct <_PangoLayoutLine>
  slot PangoLayoutLine-layout :: <PangoLayout>;
  slot PangoLayoutLine-start-index :: <C-signed-int>;
  slot PangoLayoutLine-length :: <C-signed-int>;
  slot PangoLayoutLine-runs :: <GSList>;
  bitfield slot PangoLayoutLine-is-paragraph-start :: <C-int>, width: 1;
  bitfield slot PangoLayoutLine-resolved-dir :: <C-int>, width: 3;
end;

define C-pointer-type <PangoLayoutLine> => <_PangoLayoutLine>;

define C-function pango-renderer-draw-layout-line
  input parameter arg1 :: <PangoRenderer>;
  input parameter arg2 :: <PangoLayoutLine>;
  input parameter arg3 :: <C-signed-int>;
  input parameter arg4 :: <C-signed-int>;
  c-name: "pango_renderer_draw_layout_line";
end;

define C-function pango-renderer-draw-glyphs
  input parameter arg1 :: <PangoRenderer>;
  input parameter arg2 :: <PangoFont>;
  input parameter arg3 :: <PangoGlyphString>;
  input parameter arg4 :: <C-signed-int>;
  input parameter arg5 :: <C-signed-int>;
  c-name: "pango_renderer_draw_glyphs";
end;

define C-function pango-renderer-draw-rectangle
  input parameter arg1 :: <PangoRenderer>;
  input parameter arg2 :: <PangoRenderPart>;
  input parameter arg3 :: <C-signed-int>;
  input parameter arg4 :: <C-signed-int>;
  input parameter arg5 :: <C-signed-int>;
  input parameter arg6 :: <C-signed-int>;
  c-name: "pango_renderer_draw_rectangle";
end;

define C-function pango-renderer-draw-error-underline
  input parameter arg1 :: <PangoRenderer>;
  input parameter arg2 :: <C-signed-int>;
  input parameter arg3 :: <C-signed-int>;
  input parameter arg4 :: <C-signed-int>;
  input parameter arg5 :: <C-signed-int>;
  c-name: "pango_renderer_draw_error_underline";
end;

define C-function pango-renderer-draw-trapezoid
  input parameter arg1 :: <PangoRenderer>;
  input parameter arg2 :: <PangoRenderPart>;
  input parameter arg3 :: <C-double>;
  input parameter arg4 :: <C-double>;
  input parameter arg5 :: <C-double>;
  input parameter arg6 :: <C-double>;
  input parameter arg7 :: <C-double>;
  input parameter arg8 :: <C-double>;
  c-name: "pango_renderer_draw_trapezoid";
end;

define C-function pango-renderer-draw-glyph
  input parameter arg1 :: <PangoRenderer>;
  input parameter arg2 :: <PangoFont>;
  input parameter arg3 :: <PangoGlyph>;
  input parameter arg4 :: <C-double>;
  input parameter arg5 :: <C-double>;
  c-name: "pango_renderer_draw_glyph";
end;

define C-function pango-renderer-activate
  input parameter arg1 :: <PangoRenderer>;
  c-name: "pango_renderer_activate";
end;

define C-function pango-renderer-deactivate
  input parameter arg1 :: <PangoRenderer>;
  c-name: "pango_renderer_deactivate";
end;

define C-function pango-renderer-part-changed
  input parameter arg1 :: <PangoRenderer>;
  input parameter arg2 :: <PangoRenderPart>;
  c-name: "pango_renderer_part_changed";
end;

define C-struct <_PangoColor>
  slot PangoColor-red :: <C-unsigned-short>;
  slot PangoColor-green :: <C-unsigned-short>;
  slot PangoColor-blue :: <C-unsigned-short>;
end;

define C-pointer-type <PangoColor> => <_PangoColor>;

define C-function pango-renderer-set-color
  input parameter arg1 :: <PangoRenderer>;
  input parameter arg2 :: <PangoRenderPart>;
  input parameter arg3 :: <PangoColor>;
  c-name: "pango_renderer_set_color";
end;

define C-function pango-renderer-get-color
  input parameter arg1 :: <PangoRenderer>;
  input parameter arg2 :: <PangoRenderPart>;
  result res :: <PangoColor>;
  c-name: "pango_renderer_get_color";
end;

define C-function pango-renderer-set-matrix
  input parameter arg1 :: <PangoRenderer>;
  input parameter arg2 :: <PangoMatrix>;
  c-name: "pango_renderer_set_matrix";
end;

define C-function pango-renderer-get-matrix
  input parameter arg1 :: <PangoRenderer>;
  result res :: <PangoMatrix>;
  c-name: "pango_renderer_get_matrix";
end;

define C-struct <_PangoLayoutClass>
end;

define C-pointer-type <PangoLayoutClass> => <_PangoLayoutClass>;

define constant <PangoAlignment> = <C-int>;
define constant $PANGO-ALIGN-LEFT = 0;
define constant $PANGO-ALIGN-CENTER = 1;
define constant $PANGO-ALIGN-RIGHT = 2;

define constant <PangoWrapMode> = <C-int>;
define constant $PANGO-WRAP-WORD = 0;
define constant $PANGO-WRAP-CHAR = 1;
define constant $PANGO-WRAP-WORD-CHAR = 2;

define constant <PangoEllipsizeMode> = <C-int>;
define constant $PANGO-ELLIPSIZE-NONE = 0;
define constant $PANGO-ELLIPSIZE-START = 1;
define constant $PANGO-ELLIPSIZE-MIDDLE = 2;
define constant $PANGO-ELLIPSIZE-END = 3;

define C-function pango-layout-get-type
  result res :: <GType>;
  c-name: "pango_layout_get_type";
end;

define C-function pango-layout-new
  input parameter arg1 :: <PangoContext>;
  result res :: <PangoLayout>;
  c-name: "pango_layout_new";
end;

define C-function pango-layout-copy
  input parameter arg1 :: <PangoLayout>;
  result res :: <PangoLayout>;
  c-name: "pango_layout_copy";
end;

define C-function pango-layout-get-context
  input parameter arg1 :: <PangoLayout>;
  result res :: <PangoContext>;
  c-name: "pango_layout_get_context";
end;

define C-struct <_PangoAttrList>
end;

define C-pointer-type <PangoAttrList> => <_PangoAttrList>;

define C-function pango-layout-set-attributes
  input parameter arg1 :: <PangoLayout>;
  input parameter arg2 :: <PangoAttrList>;
  c-name: "pango_layout_set_attributes";
end;

define C-function pango-layout-get-attributes
  input parameter arg1 :: <PangoLayout>;
  result res :: <PangoAttrList>;
  c-name: "pango_layout_get_attributes";
end;

define C-function pango-layout-set-text
  input parameter arg1 :: <PangoLayout>;
  input parameter arg2 :: <char*>;
  input parameter arg3 :: <C-signed-int>;
  c-name: "pango_layout_set_text";
end;

define C-function pango-layout-get-text
  input parameter arg1 :: <PangoLayout>;
  result res :: <char*>;
  c-name: "pango_layout_get_text";
end;

define C-function pango-layout-set-markup
  input parameter arg1 :: <PangoLayout>;
  input parameter arg2 :: <char*>;
  input parameter arg3 :: <C-signed-int>;
  c-name: "pango_layout_set_markup";
end;

define C-function pango-layout-set-markup-with-accel
  input parameter arg1 :: <PangoLayout>;
  input parameter arg2 :: <char*>;
  input parameter arg3 :: <C-signed-int>;
  input parameter arg4 :: <gunichar>;
  input parameter arg5 :: <gunichar*>;
  c-name: "pango_layout_set_markup_with_accel";
end;

define C-function pango-layout-set-font-description
  input parameter arg1 :: <PangoLayout>;
  input parameter arg2 :: <PangoFontDescription>;
  c-name: "pango_layout_set_font_description";
end;

define C-function pango-layout-get-font-description
  input parameter arg1 :: <PangoLayout>;
  result res :: <PangoFontDescription>;
  c-name: "pango_layout_get_font_description";
end;

define C-function pango-layout-set-width
  input parameter arg1 :: <PangoLayout>;
  input parameter arg2 :: <C-signed-int>;
  c-name: "pango_layout_set_width";
end;

define C-function pango-layout-get-width
  input parameter arg1 :: <PangoLayout>;
  result res :: <C-signed-int>;
  c-name: "pango_layout_get_width";
end;

define C-function pango-layout-set-wrap
  input parameter arg1 :: <PangoLayout>;
  input parameter arg2 :: <PangoWrapMode>;
  c-name: "pango_layout_set_wrap";
end;

define C-function pango-layout-get-wrap
  input parameter arg1 :: <PangoLayout>;
  result res :: <PangoWrapMode>;
  c-name: "pango_layout_get_wrap";
end;

define C-function pango-layout-is-wrapped
  input parameter arg1 :: <PangoLayout>;
  result res :: <gboolean>;
  c-name: "pango_layout_is_wrapped";
end;

define C-function pango-layout-set-indent
  input parameter arg1 :: <PangoLayout>;
  input parameter arg2 :: <C-signed-int>;
  c-name: "pango_layout_set_indent";
end;

define C-function pango-layout-get-indent
  input parameter arg1 :: <PangoLayout>;
  result res :: <C-signed-int>;
  c-name: "pango_layout_get_indent";
end;

define C-function pango-layout-set-spacing
  input parameter arg1 :: <PangoLayout>;
  input parameter arg2 :: <C-signed-int>;
  c-name: "pango_layout_set_spacing";
end;

define C-function pango-layout-get-spacing
  input parameter arg1 :: <PangoLayout>;
  result res :: <C-signed-int>;
  c-name: "pango_layout_get_spacing";
end;

define C-function pango-layout-set-justify
  input parameter arg1 :: <PangoLayout>;
  input parameter arg2 :: <gboolean>;
  c-name: "pango_layout_set_justify";
end;

define C-function pango-layout-get-justify
  input parameter arg1 :: <PangoLayout>;
  result res :: <gboolean>;
  c-name: "pango_layout_get_justify";
end;

define C-function pango-layout-set-auto-dir
  input parameter arg1 :: <PangoLayout>;
  input parameter arg2 :: <gboolean>;
  c-name: "pango_layout_set_auto_dir";
end;

define C-function pango-layout-get-auto-dir
  input parameter arg1 :: <PangoLayout>;
  result res :: <gboolean>;
  c-name: "pango_layout_get_auto_dir";
end;

define C-function pango-layout-set-alignment
  input parameter arg1 :: <PangoLayout>;
  input parameter arg2 :: <PangoAlignment>;
  c-name: "pango_layout_set_alignment";
end;

define C-function pango-layout-get-alignment
  input parameter arg1 :: <PangoLayout>;
  result res :: <PangoAlignment>;
  c-name: "pango_layout_get_alignment";
end;

define C-function pango-layout-set-tabs
  input parameter arg1 :: <PangoLayout>;
  input parameter arg2 :: <PangoTabArray>;
  c-name: "pango_layout_set_tabs";
end;

define C-function pango-layout-get-tabs
  input parameter arg1 :: <PangoLayout>;
  result res :: <PangoTabArray>;
  c-name: "pango_layout_get_tabs";
end;

define C-function pango-layout-set-single-paragraph-mode
  input parameter arg1 :: <PangoLayout>;
  input parameter arg2 :: <gboolean>;
  c-name: "pango_layout_set_single_paragraph_mode";
end;

define C-function pango-layout-get-single-paragraph-mode
  input parameter arg1 :: <PangoLayout>;
  result res :: <gboolean>;
  c-name: "pango_layout_get_single_paragraph_mode";
end;

define C-function pango-layout-set-ellipsize
  input parameter arg1 :: <PangoLayout>;
  input parameter arg2 :: <PangoEllipsizeMode>;
  c-name: "pango_layout_set_ellipsize";
end;

define C-function pango-layout-get-ellipsize
  input parameter arg1 :: <PangoLayout>;
  result res :: <PangoEllipsizeMode>;
  c-name: "pango_layout_get_ellipsize";
end;

define C-function pango-layout-is-ellipsized
  input parameter arg1 :: <PangoLayout>;
  result res :: <gboolean>;
  c-name: "pango_layout_is_ellipsized";
end;

define C-function pango-layout-get-unknown-glyphs-count
  input parameter arg1 :: <PangoLayout>;
  result res :: <C-signed-int>;
  c-name: "pango_layout_get_unknown_glyphs_count";
end;

define C-function pango-layout-context-changed
  input parameter arg1 :: <PangoLayout>;
  c-name: "pango_layout_context_changed";
end;

define C-pointer-type <PangoLogAttr*> => <PangoLogAttr>;
define C-function pango-layout-get-log-attrs
  input parameter arg1 :: <PangoLayout>;
  input parameter arg2 :: <PangoLogAttr*>;
  input parameter arg3 :: <gint*>;
  c-name: "pango_layout_get_log_attrs";
end;

define C-function pango-layout-index-to-pos
  input parameter arg1 :: <PangoLayout>;
  input parameter arg2 :: <C-signed-int>;
  input parameter arg3 :: <PangoRectangle>;
  c-name: "pango_layout_index_to_pos";
end;

define C-function pango-layout-index-to-line-x
  input parameter arg1 :: <PangoLayout>;
  input parameter arg2 :: <C-signed-int>;
  input parameter arg3 :: <gboolean>;
  input parameter arg4 :: <int*>;
  input parameter arg5 :: <int*>;
  c-name: "pango_layout_index_to_line_x";
end;

define C-function pango-layout-get-cursor-pos
  input parameter arg1 :: <PangoLayout>;
  input parameter arg2 :: <C-signed-int>;
  input parameter arg3 :: <PangoRectangle>;
  input parameter arg4 :: <PangoRectangle>;
  c-name: "pango_layout_get_cursor_pos";
end;

define C-function pango-layout-move-cursor-visually
  input parameter arg1 :: <PangoLayout>;
  input parameter arg2 :: <gboolean>;
  input parameter arg3 :: <C-signed-int>;
  input parameter arg4 :: <C-signed-int>;
  input parameter arg5 :: <C-signed-int>;
  input parameter arg6 :: <int*>;
  input parameter arg7 :: <int*>;
  c-name: "pango_layout_move_cursor_visually";
end;

define C-function pango-layout-xy-to-index
  input parameter arg1 :: <PangoLayout>;
  input parameter arg2 :: <C-signed-int>;
  input parameter arg3 :: <C-signed-int>;
  input parameter arg4 :: <int*>;
  input parameter arg5 :: <int*>;
  result res :: <gboolean>;
  c-name: "pango_layout_xy_to_index";
end;

define C-function pango-layout-get-extents
  input parameter arg1 :: <PangoLayout>;
  input parameter arg2 :: <PangoRectangle>;
  input parameter arg3 :: <PangoRectangle>;
  c-name: "pango_layout_get_extents";
end;

define C-function pango-layout-get-pixel-extents
  input parameter arg1 :: <PangoLayout>;
  input parameter arg2 :: <PangoRectangle>;
  input parameter arg3 :: <PangoRectangle>;
  c-name: "pango_layout_get_pixel_extents";
end;

define C-function pango-layout-get-size
  input parameter arg1 :: <PangoLayout>;
  input parameter arg2 :: <int*>;
  input parameter arg3 :: <int*>;
  c-name: "pango_layout_get_size";
end;

define C-function pango-layout-get-pixel-size
  input parameter arg1 :: <PangoLayout>;
  input parameter arg2 :: <int*>;
  input parameter arg3 :: <int*>;
  c-name: "pango_layout_get_pixel_size";
end;

define C-function pango-layout-get-line-count
  input parameter arg1 :: <PangoLayout>;
  result res :: <C-signed-int>;
  c-name: "pango_layout_get_line_count";
end;

define C-function pango-layout-get-line
  input parameter arg1 :: <PangoLayout>;
  input parameter arg2 :: <C-signed-int>;
  result res :: <PangoLayoutLine>;
  c-name: "pango_layout_get_line";
end;

define C-function pango-layout-get-line-readonly
  input parameter arg1 :: <PangoLayout>;
  input parameter arg2 :: <C-signed-int>;
  result res :: <PangoLayoutLine>;
  c-name: "pango_layout_get_line_readonly";
end;

define C-function pango-layout-get-lines
  input parameter arg1 :: <PangoLayout>;
  result res :: <GSList>;
  c-name: "pango_layout_get_lines";
end;

define C-function pango-layout-get-lines-readonly
  input parameter arg1 :: <PangoLayout>;
  result res :: <GSList>;
  c-name: "pango_layout_get_lines_readonly";
end;

define C-function pango-layout-line-get-type
  result res :: <GType>;
  c-name: "pango_layout_line_get_type";
end;

define C-function pango-layout-line-ref
  input parameter arg1 :: <PangoLayoutLine>;
  result res :: <PangoLayoutLine>;
  c-name: "pango_layout_line_ref";
end;

define C-function pango-layout-line-unref
  input parameter arg1 :: <PangoLayoutLine>;
  c-name: "pango_layout_line_unref";
end;

define C-function pango-layout-line-x-to-index
  input parameter arg1 :: <PangoLayoutLine>;
  input parameter arg2 :: <C-signed-int>;
  input parameter arg3 :: <int*>;
  input parameter arg4 :: <int*>;
  result res :: <gboolean>;
  c-name: "pango_layout_line_x_to_index";
end;

define C-function pango-layout-line-index-to-x
  input parameter arg1 :: <PangoLayoutLine>;
  input parameter arg2 :: <C-signed-int>;
  input parameter arg3 :: <gboolean>;
  input parameter arg4 :: <int*>;
  c-name: "pango_layout_line_index_to_x";
end;

define C-function pango-layout-line-get-x-ranges
  input parameter arg1 :: <PangoLayoutLine>;
  input parameter arg2 :: <C-signed-int>;
  input parameter arg3 :: <C-signed-int>;
  input parameter arg4 :: <int**>;
  input parameter arg5 :: <int*>;
  c-name: "pango_layout_line_get_x_ranges";
end;

define C-function pango-layout-line-get-extents
  input parameter arg1 :: <PangoLayoutLine>;
  input parameter arg2 :: <PangoRectangle>;
  input parameter arg3 :: <PangoRectangle>;
  c-name: "pango_layout_line_get_extents";
end;

define C-function pango-layout-line-get-pixel-extents
  input parameter arg1 :: <PangoLayoutLine>;
  input parameter arg2 :: <PangoRectangle>;
  input parameter arg3 :: <PangoRectangle>;
  c-name: "pango_layout_line_get_pixel_extents";
end;

define C-struct <_PangoLayoutIter>
end;

define C-pointer-type <PangoLayoutIter> => <_PangoLayoutIter>;

define C-function pango-layout-iter-get-type
  result res :: <GType>;
  c-name: "pango_layout_iter_get_type";
end;

define C-function pango-layout-get-iter
  input parameter arg1 :: <PangoLayout>;
  result res :: <PangoLayoutIter>;
  c-name: "pango_layout_get_iter";
end;

define C-function pango-layout-iter-free
  input parameter arg1 :: <PangoLayoutIter>;
  c-name: "pango_layout_iter_free";
end;

define C-function pango-layout-iter-get-index
  input parameter arg1 :: <PangoLayoutIter>;
  result res :: <C-signed-int>;
  c-name: "pango_layout_iter_get_index";
end;

define C-function pango-layout-iter-get-run
  input parameter arg1 :: <PangoLayoutIter>;
  result res :: <PangoLayoutRun>;
  c-name: "pango_layout_iter_get_run";
end;

define C-function pango-layout-iter-get-run-readonly
  input parameter arg1 :: <PangoLayoutIter>;
  result res :: <PangoLayoutRun>;
  c-name: "pango_layout_iter_get_run_readonly";
end;

define C-function pango-layout-iter-get-line
  input parameter arg1 :: <PangoLayoutIter>;
  result res :: <PangoLayoutLine>;
  c-name: "pango_layout_iter_get_line";
end;

define C-function pango-layout-iter-get-line-readonly
  input parameter arg1 :: <PangoLayoutIter>;
  result res :: <PangoLayoutLine>;
  c-name: "pango_layout_iter_get_line_readonly";
end;

define C-function pango-layout-iter-at-last-line
  input parameter arg1 :: <PangoLayoutIter>;
  result res :: <gboolean>;
  c-name: "pango_layout_iter_at_last_line";
end;

define C-function pango-layout-iter-next-char
  input parameter arg1 :: <PangoLayoutIter>;
  result res :: <gboolean>;
  c-name: "pango_layout_iter_next_char";
end;

define C-function pango-layout-iter-next-cluster
  input parameter arg1 :: <PangoLayoutIter>;
  result res :: <gboolean>;
  c-name: "pango_layout_iter_next_cluster";
end;

define C-function pango-layout-iter-next-run
  input parameter arg1 :: <PangoLayoutIter>;
  result res :: <gboolean>;
  c-name: "pango_layout_iter_next_run";
end;

define C-function pango-layout-iter-next-line
  input parameter arg1 :: <PangoLayoutIter>;
  result res :: <gboolean>;
  c-name: "pango_layout_iter_next_line";
end;

define C-function pango-layout-iter-get-char-extents
  input parameter arg1 :: <PangoLayoutIter>;
  input parameter arg2 :: <PangoRectangle>;
  c-name: "pango_layout_iter_get_char_extents";
end;

define C-function pango-layout-iter-get-cluster-extents
  input parameter arg1 :: <PangoLayoutIter>;
  input parameter arg2 :: <PangoRectangle>;
  input parameter arg3 :: <PangoRectangle>;
  c-name: "pango_layout_iter_get_cluster_extents";
end;

define C-function pango-layout-iter-get-run-extents
  input parameter arg1 :: <PangoLayoutIter>;
  input parameter arg2 :: <PangoRectangle>;
  input parameter arg3 :: <PangoRectangle>;
  c-name: "pango_layout_iter_get_run_extents";
end;

define C-function pango-layout-iter-get-line-extents
  input parameter arg1 :: <PangoLayoutIter>;
  input parameter arg2 :: <PangoRectangle>;
  input parameter arg3 :: <PangoRectangle>;
  c-name: "pango_layout_iter_get_line_extents";
end;

define C-function pango-layout-iter-get-line-yrange
  input parameter arg1 :: <PangoLayoutIter>;
  input parameter arg2 :: <int*>;
  input parameter arg3 :: <int*>;
  c-name: "pango_layout_iter_get_line_yrange";
end;

define C-function pango-layout-iter-get-layout-extents
  input parameter arg1 :: <PangoLayoutIter>;
  input parameter arg2 :: <PangoRectangle>;
  input parameter arg3 :: <PangoRectangle>;
  c-name: "pango_layout_iter_get_layout_extents";
end;

define C-function pango-layout-iter-get-baseline
  input parameter arg1 :: <PangoLayoutIter>;
  result res :: <C-signed-int>;
  c-name: "pango_layout_iter_get_baseline";
end;

define C-function pango-glyph-item-split
  input parameter arg1 :: <PangoGlyphItem>;
  input parameter arg2 :: <char*>;
  input parameter arg3 :: <C-signed-int>;
  result res :: <PangoGlyphItem>;
  c-name: "pango_glyph_item_split";
end;

define C-function pango-glyph-item-free
  input parameter arg1 :: <PangoGlyphItem>;
  c-name: "pango_glyph_item_free";
end;

define C-function pango-glyph-item-apply-attrs
  input parameter arg1 :: <PangoGlyphItem>;
  input parameter arg2 :: <char*>;
  input parameter arg3 :: <PangoAttrList>;
  result res :: <GSList>;
  c-name: "pango_glyph_item_apply_attrs";
end;

define C-function pango-glyph-item-letter-space
  input parameter arg1 :: <PangoGlyphItem>;
  input parameter arg2 :: <char*>;
  input parameter arg3 :: <PangoLogAttr>;
  input parameter arg4 :: <C-signed-int>;
  c-name: "pango_glyph_item_letter_space";
end;

define C-function pango-glyph-string-new
  result res :: <PangoGlyphString>;
  c-name: "pango_glyph_string_new";
end;

define C-function pango-glyph-string-set-size
  input parameter arg1 :: <PangoGlyphString>;
  input parameter arg2 :: <gint>;
  c-name: "pango_glyph_string_set_size";
end;

define C-function pango-glyph-string-get-type
  result res :: <GType>;
  c-name: "pango_glyph_string_get_type";
end;

define C-function pango-glyph-string-copy
  input parameter arg1 :: <PangoGlyphString>;
  result res :: <PangoGlyphString>;
  c-name: "pango_glyph_string_copy";
end;

define C-function pango-glyph-string-free
  input parameter arg1 :: <PangoGlyphString>;
  c-name: "pango_glyph_string_free";
end;

define C-function pango-glyph-string-extents
  input parameter arg1 :: <PangoGlyphString>;
  input parameter arg2 :: <PangoFont>;
  input parameter arg3 :: <PangoRectangle>;
  input parameter arg4 :: <PangoRectangle>;
  c-name: "pango_glyph_string_extents";
end;

define C-function pango-glyph-string-get-width
  input parameter arg1 :: <PangoGlyphString>;
  result res :: <C-signed-int>;
  c-name: "pango_glyph_string_get_width";
end;

define C-function pango-glyph-string-extents-range
  input parameter arg1 :: <PangoGlyphString>;
  input parameter arg2 :: <C-signed-int>;
  input parameter arg3 :: <C-signed-int>;
  input parameter arg4 :: <PangoFont>;
  input parameter arg5 :: <PangoRectangle>;
  input parameter arg6 :: <PangoRectangle>;
  c-name: "pango_glyph_string_extents_range";
end;

define C-function pango-glyph-string-get-logical-widths
  input parameter arg1 :: <PangoGlyphString>;
  input parameter arg2 :: <char*>;
  input parameter arg3 :: <C-signed-int>;
  input parameter arg4 :: <C-signed-int>;
  input parameter arg5 :: <int*>;
  c-name: "pango_glyph_string_get_logical_widths";
end;

define C-function pango-glyph-string-index-to-x
  input parameter arg1 :: <PangoGlyphString>;
  input parameter arg2 :: <char*>;
  input parameter arg3 :: <C-signed-int>;
  input parameter arg4 :: <PangoAnalysis>;
  input parameter arg5 :: <C-signed-int>;
  input parameter arg6 :: <gboolean>;
  input parameter arg7 :: <int*>;
  c-name: "pango_glyph_string_index_to_x";
end;

define C-function pango-glyph-string-x-to-index
  input parameter arg1 :: <PangoGlyphString>;
  input parameter arg2 :: <char*>;
  input parameter arg3 :: <C-signed-int>;
  input parameter arg4 :: <PangoAnalysis>;
  input parameter arg5 :: <C-signed-int>;
  input parameter arg6 :: <int*>;
  input parameter arg7 :: <int*>;
  c-name: "pango_glyph_string_x_to_index";
end;

define C-function pango-shape
  input parameter arg1 :: <gchar*>;
  input parameter arg2 :: <gint>;
  input parameter arg3 :: <PangoAnalysis>;
  input parameter arg4 :: <PangoGlyphString>;
  c-name: "pango_shape";
end;

define C-function pango-reorder-items
  input parameter arg1 :: <GList>;
  result res :: <GList>;
  c-name: "pango_reorder_items";
end;

define C-function pango-item-get-type
  result res :: <GType>;
  c-name: "pango_item_get_type";
end;

define C-function pango-item-new
  result res :: <PangoItem>;
  c-name: "pango_item_new";
end;

define C-function pango-item-copy
  input parameter arg1 :: <PangoItem>;
  result res :: <PangoItem>;
  c-name: "pango_item_copy";
end;

define C-function pango-item-free
  input parameter arg1 :: <PangoItem>;
  c-name: "pango_item_free";
end;

define C-function pango-item-split
  input parameter arg1 :: <PangoItem>;
  input parameter arg2 :: <C-signed-int>;
  input parameter arg3 :: <C-signed-int>;
  result res :: <PangoItem>;
  c-name: "pango_item_split";
end;

define constant $PANGO-ANALYSIS-FLAG-CENTERED-BASELINE = 1;

define C-function pango-break
  input parameter arg1 :: <gchar*>;
  input parameter arg2 :: <C-signed-int>;
  input parameter arg3 :: <PangoAnalysis>;
  input parameter arg4 :: <PangoLogAttr>;
  input parameter arg5 :: <C-signed-int>;
  c-name: "pango_break";
end;

define C-function pango-find-paragraph-boundary
  input parameter arg1 :: <gchar*>;
  input parameter arg2 :: <gint>;
  input parameter arg3 :: <gint*>;
  input parameter arg4 :: <gint*>;
  c-name: "pango_find_paragraph_boundary";
end;

define C-function pango-get-log-attrs
  input parameter arg1 :: <char*>;
  input parameter arg2 :: <C-signed-int>;
  input parameter arg3 :: <C-signed-int>;
  input parameter arg4 :: <PangoLanguage>;
  input parameter arg5 :: <PangoLogAttr>;
  input parameter arg6 :: <C-signed-int>;
  c-name: "pango_get_log_attrs";
end;

define C-function pango-color-get-type
  result res :: <GType>;
  c-name: "pango_color_get_type";
end;

define C-function pango-color-copy
  input parameter arg1 :: <PangoColor>;
  result res :: <PangoColor>;
  c-name: "pango_color_copy";
end;

define C-function pango-color-free
  input parameter arg1 :: <PangoColor>;
  c-name: "pango_color_free";
end;

define C-function pango-color-parse
  input parameter arg1 :: <PangoColor>;
  input parameter arg2 :: <char*>;
  result res :: <gboolean>;
  c-name: "pango_color_parse";
end;

define C-function pango-color-to-string
  input parameter arg1 :: <PangoColor>;
  result res :: <gchar*>;
  c-name: "pango_color_to_string";
end;

define C-struct <_PangoAttrString>
  slot PangoAttrString-attr :: <_PangoAttribute>;
  slot PangoAttrString-value :: <char*>;
end;

define C-pointer-type <PangoAttrString> => <_PangoAttrString>;

define C-struct <_PangoAttrLanguage>
  slot PangoAttrLanguage-attr :: <_PangoAttribute>;
  slot PangoAttrLanguage-value :: <PangoLanguage>;
end;

define C-pointer-type <PangoAttrLanguage> => <_PangoAttrLanguage>;

define C-struct <_PangoAttrInt>
  slot PangoAttrInt-attr :: <_PangoAttribute>;
  slot PangoAttrInt-value :: <C-signed-int>;
end;

define C-pointer-type <PangoAttrInt> => <_PangoAttrInt>;

define C-struct <_PangoAttrSize>
  slot PangoAttrSize-attr :: <_PangoAttribute>;
  slot PangoAttrSize-size :: <C-signed-int>;
  bitfield slot PangoAttrSize-absolute :: <C-int>, width: 1;
end;

define C-pointer-type <PangoAttrSize> => <_PangoAttrSize>;

define C-struct <_PangoAttrFloat>
  slot PangoAttrFloat-attr :: <_PangoAttribute>;
  slot PangoAttrFloat-value :: <C-double>;
end;

define C-pointer-type <PangoAttrFloat> => <_PangoAttrFloat>;

define C-struct <_PangoAttrColor>
  slot PangoAttrColor-attr :: <_PangoAttribute>;
  slot PangoAttrColor-color :: <_PangoColor>;
end;

define C-pointer-type <PangoAttrColor> => <_PangoAttrColor>;

define C-struct <_PangoAttrFontDesc>
  slot PangoAttrFontDesc-attr :: <_PangoAttribute>;
  slot PangoAttrFontDesc-desc :: <PangoFontDescription>;
end;

define C-pointer-type <PangoAttrFontDesc> => <_PangoAttrFontDesc>;

define C-struct <_PangoAttrIterator>
end;

define C-pointer-type <PangoAttrIterator> => <_PangoAttrIterator>;

define constant <anonymous-2027> = <C-function-pointer>;
define constant <PangoAttrFilterFunc> = <anonymous-2027>;

define C-function pango-attr-type-register
  input parameter arg1 :: <gchar*>;
  result res :: <PangoAttrType>;
  c-name: "pango_attr_type_register";
end;

define C-function pango-attribute-copy
  input parameter arg1 :: <PangoAttribute>;
  result res :: <PangoAttribute>;
  c-name: "pango_attribute_copy";
end;

define C-function pango-attribute-destroy
  input parameter arg1 :: <PangoAttribute>;
  c-name: "pango_attribute_destroy";
end;

define C-function pango-attribute-equal
  input parameter arg1 :: <PangoAttribute>;
  input parameter arg2 :: <PangoAttribute>;
  result res :: <gboolean>;
  c-name: "pango_attribute_equal";
end;

define C-function pango-attr-language-new
  input parameter arg1 :: <PangoLanguage>;
  result res :: <PangoAttribute>;
  c-name: "pango_attr_language_new";
end;

define C-function pango-attr-family-new
  input parameter arg1 :: <char*>;
  result res :: <PangoAttribute>;
  c-name: "pango_attr_family_new";
end;

define C-function pango-attr-foreground-new
  input parameter arg1 :: <guint16>;
  input parameter arg2 :: <guint16>;
  input parameter arg3 :: <guint16>;
  result res :: <PangoAttribute>;
  c-name: "pango_attr_foreground_new";
end;

define C-function pango-attr-background-new
  input parameter arg1 :: <guint16>;
  input parameter arg2 :: <guint16>;
  input parameter arg3 :: <guint16>;
  result res :: <PangoAttribute>;
  c-name: "pango_attr_background_new";
end;

define C-function pango-attr-size-new
  input parameter arg1 :: <C-signed-int>;
  result res :: <PangoAttribute>;
  c-name: "pango_attr_size_new";
end;

define C-function pango-attr-size-new-absolute
  input parameter arg1 :: <C-signed-int>;
  result res :: <PangoAttribute>;
  c-name: "pango_attr_size_new_absolute";
end;

define C-function pango-attr-style-new
  input parameter arg1 :: <PangoStyle>;
  result res :: <PangoAttribute>;
  c-name: "pango_attr_style_new";
end;

define C-function pango-attr-weight-new
  input parameter arg1 :: <PangoWeight>;
  result res :: <PangoAttribute>;
  c-name: "pango_attr_weight_new";
end;

define C-function pango-attr-variant-new
  input parameter arg1 :: <PangoVariant>;
  result res :: <PangoAttribute>;
  c-name: "pango_attr_variant_new";
end;

define C-function pango-attr-stretch-new
  input parameter arg1 :: <PangoStretch>;
  result res :: <PangoAttribute>;
  c-name: "pango_attr_stretch_new";
end;

define C-function pango-attr-font-desc-new
  input parameter arg1 :: <PangoFontDescription>;
  result res :: <PangoAttribute>;
  c-name: "pango_attr_font_desc_new";
end;

define C-function pango-attr-underline-new
  input parameter arg1 :: <PangoUnderline>;
  result res :: <PangoAttribute>;
  c-name: "pango_attr_underline_new";
end;

define C-function pango-attr-underline-color-new
  input parameter arg1 :: <guint16>;
  input parameter arg2 :: <guint16>;
  input parameter arg3 :: <guint16>;
  result res :: <PangoAttribute>;
  c-name: "pango_attr_underline_color_new";
end;

define C-function pango-attr-strikethrough-new
  input parameter arg1 :: <gboolean>;
  result res :: <PangoAttribute>;
  c-name: "pango_attr_strikethrough_new";
end;

define C-function pango-attr-strikethrough-color-new
  input parameter arg1 :: <guint16>;
  input parameter arg2 :: <guint16>;
  input parameter arg3 :: <guint16>;
  result res :: <PangoAttribute>;
  c-name: "pango_attr_strikethrough_color_new";
end;

define C-function pango-attr-rise-new
  input parameter arg1 :: <C-signed-int>;
  result res :: <PangoAttribute>;
  c-name: "pango_attr_rise_new";
end;

define C-function pango-attr-scale-new
  input parameter arg1 :: <C-double>;
  result res :: <PangoAttribute>;
  c-name: "pango_attr_scale_new";
end;

define C-function pango-attr-fallback-new
  input parameter arg1 :: <gboolean>;
  result res :: <PangoAttribute>;
  c-name: "pango_attr_fallback_new";
end;

define C-function pango-attr-letter-spacing-new
  input parameter arg1 :: <C-signed-int>;
  result res :: <PangoAttribute>;
  c-name: "pango_attr_letter_spacing_new";
end;

define C-function pango-attr-shape-new
  input parameter arg1 :: <PangoRectangle>;
  input parameter arg2 :: <PangoRectangle>;
  result res :: <PangoAttribute>;
  c-name: "pango_attr_shape_new";
end;

define C-function pango-attr-shape-new-with-data
  input parameter arg1 :: <PangoRectangle>;
  input parameter arg2 :: <PangoRectangle>;
  input parameter arg3 :: <gpointer>;
  input parameter arg4 :: <PangoAttrDataCopyFunc>;
  input parameter arg5 :: <GDestroyNotify>;
  result res :: <PangoAttribute>;
  c-name: "pango_attr_shape_new_with_data";
end;

define C-function pango-attr-gravity-new
  input parameter arg1 :: <PangoGravity>;
  result res :: <PangoAttribute>;
  c-name: "pango_attr_gravity_new";
end;

define C-function pango-attr-gravity-hint-new
  input parameter arg1 :: <PangoGravityHint>;
  result res :: <PangoAttribute>;
  c-name: "pango_attr_gravity_hint_new";
end;

define C-function pango-attr-list-get-type
  result res :: <GType>;
  c-name: "pango_attr_list_get_type";
end;

define C-function pango-attr-list-new
  result res :: <PangoAttrList>;
  c-name: "pango_attr_list_new";
end;

define C-function pango-attr-list-ref
  input parameter arg1 :: <PangoAttrList>;
  result res :: <PangoAttrList>;
  c-name: "pango_attr_list_ref";
end;

define C-function pango-attr-list-unref
  input parameter arg1 :: <PangoAttrList>;
  c-name: "pango_attr_list_unref";
end;

define C-function pango-attr-list-copy
  input parameter arg1 :: <PangoAttrList>;
  result res :: <PangoAttrList>;
  c-name: "pango_attr_list_copy";
end;

define C-function pango-attr-list-insert
  input parameter arg1 :: <PangoAttrList>;
  input parameter arg2 :: <PangoAttribute>;
  c-name: "pango_attr_list_insert";
end;

define C-function pango-attr-list-insert-before
  input parameter arg1 :: <PangoAttrList>;
  input parameter arg2 :: <PangoAttribute>;
  c-name: "pango_attr_list_insert_before";
end;

define C-function pango-attr-list-change
  input parameter arg1 :: <PangoAttrList>;
  input parameter arg2 :: <PangoAttribute>;
  c-name: "pango_attr_list_change";
end;

define C-function pango-attr-list-splice
  input parameter arg1 :: <PangoAttrList>;
  input parameter arg2 :: <PangoAttrList>;
  input parameter arg3 :: <gint>;
  input parameter arg4 :: <gint>;
  c-name: "pango_attr_list_splice";
end;

define C-function pango-attr-list-filter
  input parameter arg1 :: <PangoAttrList>;
  input parameter arg2 :: <PangoAttrFilterFunc>;
  input parameter arg3 :: <gpointer>;
  result res :: <PangoAttrList>;
  c-name: "pango_attr_list_filter";
end;

define C-function pango-attr-list-get-iterator
  input parameter arg1 :: <PangoAttrList>;
  result res :: <PangoAttrIterator>;
  c-name: "pango_attr_list_get_iterator";
end;

define C-function pango-attr-iterator-range
  input parameter arg1 :: <PangoAttrIterator>;
  input parameter arg2 :: <gint*>;
  input parameter arg3 :: <gint*>;
  c-name: "pango_attr_iterator_range";
end;

define C-function pango-attr-iterator-next
  input parameter arg1 :: <PangoAttrIterator>;
  result res :: <gboolean>;
  c-name: "pango_attr_iterator_next";
end;

define C-function pango-attr-iterator-copy
  input parameter arg1 :: <PangoAttrIterator>;
  result res :: <PangoAttrIterator>;
  c-name: "pango_attr_iterator_copy";
end;

define C-function pango-attr-iterator-destroy
  input parameter arg1 :: <PangoAttrIterator>;
  c-name: "pango_attr_iterator_destroy";
end;

define C-function pango-attr-iterator-get
  input parameter arg1 :: <PangoAttrIterator>;
  input parameter arg2 :: <PangoAttrType>;
  result res :: <PangoAttribute>;
  c-name: "pango_attr_iterator_get";
end;

define C-pointer-type <PangoLanguage*> => <PangoLanguage>;
define C-pointer-type <GSList*> => <GSList>;
define C-function pango-attr-iterator-get-font
  input parameter arg1 :: <PangoAttrIterator>;
  input parameter arg2 :: <PangoFontDescription>;
  input parameter arg3 :: <PangoLanguage*>;
  input parameter arg4 :: <GSList*>;
  c-name: "pango_attr_iterator_get_font";
end;

define C-function pango-attr-iterator-get-attrs
  input parameter arg1 :: <PangoAttrIterator>;
  result res :: <GSList>;
  c-name: "pango_attr_iterator_get_attrs";
end;

define C-pointer-type <PangoAttrList*> => <PangoAttrList>;
define C-function pango-parse-markup
  input parameter arg1 :: <char*>;
  input parameter arg2 :: <C-signed-int>;
  input parameter arg3 :: <gunichar>;
  input parameter arg4 :: <PangoAttrList*>;
  input parameter arg5 :: <c-string-vector>;
  input parameter arg6 :: <gunichar*>;
  input parameter arg7 :: <GError*>;
  result res :: <gboolean>;
  c-name: "pango_parse_markup";
end;

define C-struct <_PangoContextClass>
end;

define C-pointer-type <PangoContextClass> => <_PangoContextClass>;

define C-function pango-context-get-type
  result res :: <GType>;
  c-name: "pango_context_get_type";
end;

define C-function pango-context-get-font-map
  input parameter arg1 :: <PangoContext>;
  result res :: <PangoFontMap>;
  c-name: "pango_context_get_font_map";
end;

define C-pointer-type <PangoFontFamily*> => <PangoFontFamily>;
define C-pointer-type <PangoFontFamily**> => <PangoFontFamily*>;
define C-function pango-context-list-families
  input parameter arg1 :: <PangoContext>;
  input parameter arg2 :: <PangoFontFamily**>;
  input parameter arg3 :: <int*>;
  c-name: "pango_context_list_families";
end;

define C-function pango-context-load-font
  input parameter arg1 :: <PangoContext>;
  input parameter arg2 :: <PangoFontDescription>;
  result res :: <PangoFont>;
  c-name: "pango_context_load_font";
end;

define C-subtype <_PangoFontset> (<_GObject>) end;
define constant <PangoFontset> = <_PangoFontset>;

define C-function pango-context-load-fontset
  input parameter arg1 :: <PangoContext>;
  input parameter arg2 :: <PangoFontDescription>;
  input parameter arg3 :: <PangoLanguage>;
  result res :: <PangoFontset>;
  c-name: "pango_context_load_fontset";
end;

define C-function pango-context-get-metrics
  input parameter arg1 :: <PangoContext>;
  input parameter arg2 :: <PangoFontDescription>;
  input parameter arg3 :: <PangoLanguage>;
  result res :: <PangoFontMetrics>;
  c-name: "pango_context_get_metrics";
end;

define C-function pango-context-set-font-description
  input parameter arg1 :: <PangoContext>;
  input parameter arg2 :: <PangoFontDescription>;
  c-name: "pango_context_set_font_description";
end;

define C-function pango-context-get-font-description
  input parameter arg1 :: <PangoContext>;
  result res :: <PangoFontDescription>;
  c-name: "pango_context_get_font_description";
end;

define C-function pango-context-get-language
  input parameter arg1 :: <PangoContext>;
  result res :: <PangoLanguage>;
  c-name: "pango_context_get_language";
end;

define C-function pango-context-set-language
  input parameter arg1 :: <PangoContext>;
  input parameter arg2 :: <PangoLanguage>;
  c-name: "pango_context_set_language";
end;

define C-function pango-context-set-base-dir
  input parameter arg1 :: <PangoContext>;
  input parameter arg2 :: <PangoDirection>;
  c-name: "pango_context_set_base_dir";
end;

define C-function pango-context-get-base-dir
  input parameter arg1 :: <PangoContext>;
  result res :: <PangoDirection>;
  c-name: "pango_context_get_base_dir";
end;

define C-function pango-context-set-base-gravity
  input parameter arg1 :: <PangoContext>;
  input parameter arg2 :: <PangoGravity>;
  c-name: "pango_context_set_base_gravity";
end;

define C-function pango-context-get-base-gravity
  input parameter arg1 :: <PangoContext>;
  result res :: <PangoGravity>;
  c-name: "pango_context_get_base_gravity";
end;

define C-function pango-context-get-gravity
  input parameter arg1 :: <PangoContext>;
  result res :: <PangoGravity>;
  c-name: "pango_context_get_gravity";
end;

define C-function pango-context-set-gravity-hint
  input parameter arg1 :: <PangoContext>;
  input parameter arg2 :: <PangoGravityHint>;
  c-name: "pango_context_set_gravity_hint";
end;

define C-function pango-context-get-gravity-hint
  input parameter arg1 :: <PangoContext>;
  result res :: <PangoGravityHint>;
  c-name: "pango_context_get_gravity_hint";
end;

define C-function pango-context-set-matrix
  input parameter arg1 :: <PangoContext>;
  input parameter arg2 :: <PangoMatrix>;
  c-name: "pango_context_set_matrix";
end;

define C-function pango-context-get-matrix
  input parameter arg1 :: <PangoContext>;
  result res :: <PangoMatrix>;
  c-name: "pango_context_get_matrix";
end;

define C-function pango-itemize
  input parameter arg1 :: <PangoContext>;
  input parameter arg2 :: <char*>;
  input parameter arg3 :: <C-signed-int>;
  input parameter arg4 :: <C-signed-int>;
  input parameter arg5 :: <PangoAttrList>;
  input parameter arg6 :: <PangoAttrIterator>;
  result res :: <GList>;
  c-name: "pango_itemize";
end;

define C-function pango-itemize-with-base-dir
  input parameter arg1 :: <PangoContext>;
  input parameter arg2 :: <PangoDirection>;
  input parameter arg3 :: <char*>;
  input parameter arg4 :: <C-signed-int>;
  input parameter arg5 :: <C-signed-int>;
  input parameter arg6 :: <PangoAttrList>;
  input parameter arg7 :: <PangoAttrIterator>;
  result res :: <GList>;
  c-name: "pango_itemize_with_base_dir";
end;

define C-function pango-font-map-get-type
  result res :: <GType>;
  c-name: "pango_font_map_get_type";
end;

define C-function pango-font-map-load-font
  input parameter arg1 :: <PangoFontMap>;
  input parameter arg2 :: <PangoContext>;
  input parameter arg3 :: <PangoFontDescription>;
  result res :: <PangoFont>;
  c-name: "pango_font_map_load_font";
end;

define C-function pango-font-map-load-fontset
  input parameter arg1 :: <PangoFontMap>;
  input parameter arg2 :: <PangoContext>;
  input parameter arg3 :: <PangoFontDescription>;
  input parameter arg4 :: <PangoLanguage>;
  result res :: <PangoFontset>;
  c-name: "pango_font_map_load_fontset";
end;

define C-function pango-font-map-list-families
  input parameter arg1 :: <PangoFontMap>;
  input parameter arg2 :: <PangoFontFamily**>;
  input parameter arg3 :: <int*>;
  c-name: "pango_font_map_list_families";
end;

define C-function pango-fontset-get-type
  result res :: <GType>;
  c-name: "pango_fontset_get_type";
end;

define constant <anonymous-2100> = <C-function-pointer>;
define constant <PangoFontsetForeachFunc> = <anonymous-2100>;

define C-function pango-fontset-get-font
  input parameter arg1 :: <PangoFontset>;
  input parameter arg2 :: <guint>;
  result res :: <PangoFont>;
  c-name: "pango_fontset_get_font";
end;

define C-function pango-fontset-get-metrics
  input parameter arg1 :: <PangoFontset>;
  result res :: <PangoFontMetrics>;
  c-name: "pango_fontset_get_metrics";
end;

define C-function pango-fontset-foreach
  input parameter arg1 :: <PangoFontset>;
  input parameter arg2 :: <PangoFontsetForeachFunc>;
  input parameter arg3 :: <gpointer>;
  c-name: "pango_fontset_foreach";
end;

define constant $PANGO-VERSION-MAJOR = 1;

define constant $PANGO-VERSION-MINOR = 18;

define constant $PANGO-VERSION-MICRO = 2;

define constant $PANGO-VERSION-STRING = "1.18.2";

define C-function pango-attr-type-get-type
  result res :: <GType>;
  c-name: "pango_attr_type_get_type";
end;

define C-function pango-underline-get-type
  result res :: <GType>;
  c-name: "pango_underline_get_type";
end;

define C-function pango-coverage-level-get-type
  result res :: <GType>;
  c-name: "pango_coverage_level_get_type";
end;

define C-function pango-style-get-type
  result res :: <GType>;
  c-name: "pango_style_get_type";
end;

define C-function pango-variant-get-type
  result res :: <GType>;
  c-name: "pango_variant_get_type";
end;

define C-function pango-weight-get-type
  result res :: <GType>;
  c-name: "pango_weight_get_type";
end;

define C-function pango-stretch-get-type
  result res :: <GType>;
  c-name: "pango_stretch_get_type";
end;

define C-function pango-font-mask-get-type
  result res :: <GType>;
  c-name: "pango_font_mask_get_type";
end;

define C-function pango-gravity-get-type
  result res :: <GType>;
  c-name: "pango_gravity_get_type";
end;

define C-function pango-gravity-hint-get-type
  result res :: <GType>;
  c-name: "pango_gravity_hint_get_type";
end;

define C-function pango-alignment-get-type
  result res :: <GType>;
  c-name: "pango_alignment_get_type";
end;

define C-function pango-wrap-mode-get-type
  result res :: <GType>;
  c-name: "pango_wrap_mode_get_type";
end;

define C-function pango-ellipsize-mode-get-type
  result res :: <GType>;
  c-name: "pango_ellipsize_mode_get_type";
end;

define C-function pango-render-part-get-type
  result res :: <GType>;
  c-name: "pango_render_part_get_type";
end;

define C-function pango-script-get-type
  result res :: <GType>;
  c-name: "pango_script_get_type";
end;

define C-function pango-tab-align-get-type
  result res :: <GType>;
  c-name: "pango_tab_align_get_type";
end;

define C-function pango-direction-get-type
  result res :: <GType>;
  c-name: "pango_direction_get_type";
end;

define constant <GtkAnchorType> = <C-int>;
define constant $GTK-ANCHOR-CENTER = 0;
define constant $GTK-ANCHOR-NORTH = 1;
define constant $GTK-ANCHOR-NORTH-WEST = 2;
define constant $GTK-ANCHOR-NORTH-EAST = 3;
define constant $GTK-ANCHOR-SOUTH = 4;
define constant $GTK-ANCHOR-SOUTH-WEST = 5;
define constant $GTK-ANCHOR-SOUTH-EAST = 6;
define constant $GTK-ANCHOR-WEST = 7;
define constant $GTK-ANCHOR-EAST = 8;
define constant $GTK-ANCHOR-N = 1;
define constant $GTK-ANCHOR-NW = 2;
define constant $GTK-ANCHOR-NE = 3;
define constant $GTK-ANCHOR-S = 4;
define constant $GTK-ANCHOR-SW = 5;
define constant $GTK-ANCHOR-SE = 6;
define constant $GTK-ANCHOR-W = 7;
define constant $GTK-ANCHOR-E = 8;

define constant <GtkAttachOptions> = <C-int>;
define constant $GTK-EXPAND = 1;
define constant $GTK-SHRINK = 2;
define constant $GTK-FILL = 4;

define constant <GtkButtonBoxStyle> = <C-int>;
define constant $GTK-BUTTONBOX-DEFAULT-STYLE = 0;
define constant $GTK-BUTTONBOX-SPREAD = 1;
define constant $GTK-BUTTONBOX-EDGE = 2;
define constant $GTK-BUTTONBOX-START = 3;
define constant $GTK-BUTTONBOX-END = 4;
define constant $GTK-BUTTONBOX-CENTER = 5;

define constant <GtkCurveType> = <C-int>;
define constant $GTK-CURVE-TYPE-LINEAR = 0;
define constant $GTK-CURVE-TYPE-SPLINE = 1;
define constant $GTK-CURVE-TYPE-FREE = 2;

define constant <GtkDeleteType> = <C-int>;
define constant $GTK-DELETE-CHARS = 0;
define constant $GTK-DELETE-WORD-ENDS = 1;
define constant $GTK-DELETE-WORDS = 2;
define constant $GTK-DELETE-DISPLAY-LINES = 3;
define constant $GTK-DELETE-DISPLAY-LINE-ENDS = 4;
define constant $GTK-DELETE-PARAGRAPH-ENDS = 5;
define constant $GTK-DELETE-PARAGRAPHS = 6;
define constant $GTK-DELETE-WHITESPACE = 7;

define constant <GtkSensitivityType> = <C-int>;
define constant $GTK-SENSITIVITY-AUTO = 0;
define constant $GTK-SENSITIVITY-ON = 1;
define constant $GTK-SENSITIVITY-OFF = 2;

define constant <GtkSideType> = <C-int>;
define constant $GTK-SIDE-TOP = 0;
define constant $GTK-SIDE-BOTTOM = 1;
define constant $GTK-SIDE-LEFT = 2;
define constant $GTK-SIDE-RIGHT = 3;

define constant <GtkJustification> = <C-int>;
define constant $GTK-JUSTIFY-LEFT = 0;
define constant $GTK-JUSTIFY-RIGHT = 1;
define constant $GTK-JUSTIFY-CENTER = 2;
define constant $GTK-JUSTIFY-FILL = 3;

define constant <GtkMatchType> = <C-int>;
define constant $GTK-MATCH-ALL = 0;
define constant $GTK-MATCH-ALL-TAIL = 1;
define constant $GTK-MATCH-HEAD = 2;
define constant $GTK-MATCH-TAIL = 3;
define constant $GTK-MATCH-EXACT = 4;
define constant $GTK-MATCH-LAST = 5;

define constant <GtkMenuDirectionType> = <C-int>;
define constant $GTK-MENU-DIR-PARENT = 0;
define constant $GTK-MENU-DIR-CHILD = 1;
define constant $GTK-MENU-DIR-NEXT = 2;
define constant $GTK-MENU-DIR-PREV = 3;

define constant <GtkMetricType> = <C-int>;
define constant $GTK-PIXELS = 0;
define constant $GTK-INCHES = 1;
define constant $GTK-CENTIMETERS = 2;

define constant <GtkMovementStep> = <C-int>;
define constant $GTK-MOVEMENT-LOGICAL-POSITIONS = 0;
define constant $GTK-MOVEMENT-VISUAL-POSITIONS = 1;
define constant $GTK-MOVEMENT-WORDS = 2;
define constant $GTK-MOVEMENT-DISPLAY-LINES = 3;
define constant $GTK-MOVEMENT-DISPLAY-LINE-ENDS = 4;
define constant $GTK-MOVEMENT-PARAGRAPHS = 5;
define constant $GTK-MOVEMENT-PARAGRAPH-ENDS = 6;
define constant $GTK-MOVEMENT-PAGES = 7;
define constant $GTK-MOVEMENT-BUFFER-ENDS = 8;
define constant $GTK-MOVEMENT-HORIZONTAL-PAGES = 9;

define constant <GtkScrollStep> = <C-int>;
define constant $GTK-SCROLL-STEPS = 0;
define constant $GTK-SCROLL-PAGES = 1;
define constant $GTK-SCROLL-ENDS = 2;
define constant $GTK-SCROLL-HORIZONTAL-STEPS = 3;
define constant $GTK-SCROLL-HORIZONTAL-PAGES = 4;
define constant $GTK-SCROLL-HORIZONTAL-ENDS = 5;

define constant <GtkCornerType> = <C-int>;
define constant $GTK-CORNER-TOP-LEFT = 0;
define constant $GTK-CORNER-BOTTOM-LEFT = 1;
define constant $GTK-CORNER-TOP-RIGHT = 2;
define constant $GTK-CORNER-BOTTOM-RIGHT = 3;

define constant <GtkPackType> = <C-int>;
define constant $GTK-PACK-START = 0;
define constant $GTK-PACK-END = 1;

define constant <GtkPathType> = <C-int>;
define constant $GTK-PATH-WIDGET = 0;
define constant $GTK-PATH-WIDGET-CLASS = 1;
define constant $GTK-PATH-CLASS = 2;

define constant <GtkPolicyType> = <C-int>;
define constant $GTK-POLICY-ALWAYS = 0;
define constant $GTK-POLICY-AUTOMATIC = 1;
define constant $GTK-POLICY-NEVER = 2;

define constant <GtkPreviewType> = <C-int>;
define constant $GTK-PREVIEW-COLOR = 0;
define constant $GTK-PREVIEW-GRAYSCALE = 1;

define constant <GtkReliefStyle> = <C-int>;
define constant $GTK-RELIEF-NORMAL = 0;
define constant $GTK-RELIEF-HALF = 1;
define constant $GTK-RELIEF-NONE = 2;

define constant <GtkResizeMode> = <C-int>;
define constant $GTK-RESIZE-PARENT = 0;
define constant $GTK-RESIZE-QUEUE = 1;
define constant $GTK-RESIZE-IMMEDIATE = 2;

define constant <GtkSignalRunType> = <C-int>;
define constant $GTK-RUN-FIRST = 1;
define constant $GTK-RUN-LAST = 2;
define constant $GTK-RUN-BOTH = 3;
define constant $GTK-RUN-NO-RECURSE = 8;
define constant $GTK-RUN-ACTION = 32;
define constant $GTK-RUN-NO-HOOKS = 64;

define constant <GtkScrollType> = <C-int>;
define constant $GTK-SCROLL-NONE = 0;
define constant $GTK-SCROLL-JUMP = 1;
define constant $GTK-SCROLL-STEP-BACKWARD = 2;
define constant $GTK-SCROLL-STEP-FORWARD = 3;
define constant $GTK-SCROLL-PAGE-BACKWARD = 4;
define constant $GTK-SCROLL-PAGE-FORWARD = 5;
define constant $GTK-SCROLL-STEP-UP = 6;
define constant $GTK-SCROLL-STEP-DOWN = 7;
define constant $GTK-SCROLL-PAGE-UP = 8;
define constant $GTK-SCROLL-PAGE-DOWN = 9;
define constant $GTK-SCROLL-STEP-LEFT = 10;
define constant $GTK-SCROLL-STEP-RIGHT = 11;
define constant $GTK-SCROLL-PAGE-LEFT = 12;
define constant $GTK-SCROLL-PAGE-RIGHT = 13;
define constant $GTK-SCROLL-START = 14;
define constant $GTK-SCROLL-END = 15;

define constant <GtkSelectionMode> = <C-int>;
define constant $GTK-SELECTION-NONE = 0;
define constant $GTK-SELECTION-SINGLE = 1;
define constant $GTK-SELECTION-BROWSE = 2;
define constant $GTK-SELECTION-MULTIPLE = 3;
define constant $GTK-SELECTION-EXTENDED = 3;

define constant <GtkSubmenuDirection> = <C-int>;
define constant $GTK-DIRECTION-LEFT = 0;
define constant $GTK-DIRECTION-RIGHT = 1;

define constant <GtkSubmenuPlacement> = <C-int>;
define constant $GTK-TOP-BOTTOM = 0;
define constant $GTK-LEFT-RIGHT = 1;

define constant <GtkToolbarStyle> = <C-int>;
define constant $GTK-TOOLBAR-ICONS = 0;
define constant $GTK-TOOLBAR-TEXT = 1;
define constant $GTK-TOOLBAR-BOTH = 2;
define constant $GTK-TOOLBAR-BOTH-HORIZ = 3;

define constant <GtkUpdateType> = <C-int>;
define constant $GTK-UPDATE-CONTINUOUS = 0;
define constant $GTK-UPDATE-DISCONTINUOUS = 1;
define constant $GTK-UPDATE-DELAYED = 2;

define constant <GtkVisibility> = <C-int>;
define constant $GTK-VISIBILITY-NONE = 0;
define constant $GTK-VISIBILITY-PARTIAL = 1;
define constant $GTK-VISIBILITY-FULL = 2;

define constant <GtkWrapMode> = <C-int>;
define constant $GTK-WRAP-NONE = 0;
define constant $GTK-WRAP-CHAR = 1;
define constant $GTK-WRAP-WORD = 2;
define constant $GTK-WRAP-WORD-CHAR = 3;

define constant <GtkSortType> = <C-int>;
define constant $GTK-SORT-ASCENDING = 0;
define constant $GTK-SORT-DESCENDING = 1;

define constant <GtkIMPreeditStyle> = <C-int>;
define constant $GTK-IM-PREEDIT-NOTHING = 0;
define constant $GTK-IM-PREEDIT-CALLBACK = 1;
define constant $GTK-IM-PREEDIT-NONE = 2;

define constant <GtkIMStatusStyle> = <C-int>;
define constant $GTK-IM-STATUS-NOTHING = 0;
define constant $GTK-IM-STATUS-CALLBACK = 1;
define constant $GTK-IM-STATUS-NONE = 2;

define constant <GtkPackDirection> = <C-int>;
define constant $GTK-PACK-DIRECTION-LTR = 0;
define constant $GTK-PACK-DIRECTION-RTL = 1;
define constant $GTK-PACK-DIRECTION-TTB = 2;
define constant $GTK-PACK-DIRECTION-BTT = 3;

define constant <GtkPrintPages> = <C-int>;
define constant $GTK-PRINT-PAGES-ALL = 0;
define constant $GTK-PRINT-PAGES-CURRENT = 1;
define constant $GTK-PRINT-PAGES-RANGES = 2;

define constant <GtkPageSet> = <C-int>;
define constant $GTK-PAGE-SET-ALL = 0;
define constant $GTK-PAGE-SET-EVEN = 1;
define constant $GTK-PAGE-SET-ODD = 2;

define constant <GtkPageOrientation> = <C-int>;
define constant $GTK-PAGE-ORIENTATION-PORTRAIT = 0;
define constant $GTK-PAGE-ORIENTATION-LANDSCAPE = 1;
define constant $GTK-PAGE-ORIENTATION-REVERSE-PORTRAIT = 2;
define constant $GTK-PAGE-ORIENTATION-REVERSE-LANDSCAPE = 3;

define constant <GtkPrintQuality> = <C-int>;
define constant $GTK-PRINT-QUALITY-LOW = 0;
define constant $GTK-PRINT-QUALITY-NORMAL = 1;
define constant $GTK-PRINT-QUALITY-HIGH = 2;
define constant $GTK-PRINT-QUALITY-DRAFT = 3;

define constant <GtkPrintDuplex> = <C-int>;
define constant $GTK-PRINT-DUPLEX-SIMPLEX = 0;
define constant $GTK-PRINT-DUPLEX-HORIZONTAL = 1;
define constant $GTK-PRINT-DUPLEX-VERTICAL = 2;

define constant <GtkUnit> = <C-int>;
define constant $GTK-UNIT-PIXEL = 0;
define constant $GTK-UNIT-POINTS = 1;
define constant $GTK-UNIT-INCH = 2;
define constant $GTK-UNIT-MM = 3;

define constant <GtkTreeViewGridLines> = <C-int>;
define constant $GTK-TREE-VIEW-GRID-LINES-NONE = 0;
define constant $GTK-TREE-VIEW-GRID-LINES-HORIZONTAL = 1;
define constant $GTK-TREE-VIEW-GRID-LINES-VERTICAL = 2;
define constant $GTK-TREE-VIEW-GRID-LINES-BOTH = 3;

define constant <GtkDragResult> = <C-int>;
define constant $GTK-DRAG-RESULT-SUCCESS = 0;
define constant $GTK-DRAG-RESULT-NO-TARGET = 1;
define constant $GTK-DRAG-RESULT-USER-CANCELLED = 2;
define constant $GTK-DRAG-RESULT-TIMEOUT-EXPIRED = 3;
define constant $GTK-DRAG-RESULT-GRAB-BROKEN = 4;
define constant $GTK-DRAG-RESULT-ERROR = 5;

define constant $GTK-PATH-PRIO-MASK = 15;

define C-function gdk-parse-args
  input parameter arg1 :: <gint*>;
  input parameter arg2 :: <gchar***>;
  c-name: "gdk_parse_args";
end;

define C-function gdk-init
  input parameter arg1 :: <gint*>;
  input parameter arg2 :: <gchar***>;
  c-name: "gdk_init";
end;

define C-function gdk-init-check
  input parameter arg1 :: <gint*>;
  input parameter arg2 :: <gchar***>;
  result res :: <gboolean>;
  c-name: "gdk_init_check";
end;

define C-function gdk-add-option-entries-libgtk-only
  input parameter arg1 :: <GOptionGroup>;
  c-name: "gdk_add_option_entries_libgtk_only";
end;

define C-function gdk-pre-parse-libgtk-only
  c-name: "gdk_pre_parse_libgtk_only";
end;

define C-function gdk-exit
  input parameter arg1 :: <gint>;
  c-name: "gdk_exit";
end;

define C-function gdk-set-locale
  result res :: <gchar*>;
  c-name: "gdk_set_locale";
end;

define C-function gdk-get-program-class
  result res :: <char*>;
  c-name: "gdk_get_program_class";
end;

define C-function gdk-set-program-class
  input parameter arg1 :: <char*>;
  c-name: "gdk_set_program_class";
end;

define C-function gdk-error-trap-push
  c-name: "gdk_error_trap_push";
end;

define C-function gdk-error-trap-pop
  result res :: <gint>;
  c-name: "gdk_error_trap_pop";
end;

define C-function gdk-set-use-xshm
  input parameter arg1 :: <gboolean>;
  c-name: "gdk_set_use_xshm";
end;

define C-function gdk-get-use-xshm
  result res :: <gboolean>;
  c-name: "gdk_get_use_xshm";
end;

define C-function gdk-get-display
  result res :: <gchar*>;
  c-name: "gdk_get_display";
end;

define C-function gdk-get-display-arg-name
  result res :: <gchar*>;
  c-name: "gdk_get_display_arg_name";
end;

define constant <GdkInputCondition> = <C-int>;
define constant $GDK-INPUT-READ = 1;
define constant $GDK-INPUT-WRITE = 2;
define constant $GDK-INPUT-EXCEPTION = 4;

define constant <anonymous-2427> = <C-function-pointer>;
define constant <GdkInputFunction> = <anonymous-2427>;

define constant <anonymous-2428> = <C-function-pointer>;
define constant <GdkDestroyNotify> = <anonymous-2428>;

define C-function gdk-input-add-full
  input parameter arg1 :: <gint>;
  input parameter arg2 :: <GdkInputCondition>;
  input parameter arg3 :: <GdkInputFunction>;
  input parameter arg4 :: <gpointer>;
  input parameter arg5 :: <GdkDestroyNotify>;
  result res :: <gint>;
  c-name: "gdk_input_add_full";
end;

define C-function gdk-input-add
  input parameter arg1 :: <gint>;
  input parameter arg2 :: <GdkInputCondition>;
  input parameter arg3 :: <GdkInputFunction>;
  input parameter arg4 :: <gpointer>;
  result res :: <gint>;
  c-name: "gdk_input_add";
end;

define C-function gdk-input-remove
  input parameter arg1 :: <gint>;
  c-name: "gdk_input_remove";
end;

define constant <GdkGrabStatus> = <C-int>;
define constant $GDK-GRAB-SUCCESS = 0;
define constant $GDK-GRAB-ALREADY-GRABBED = 1;
define constant $GDK-GRAB-INVALID-TIME = 2;
define constant $GDK-GRAB-NOT-VIEWABLE = 3;
define constant $GDK-GRAB-FROZEN = 4;

define constant <GdkEventMask> = <C-int>;
define constant $GDK-EXPOSURE-MASK = 2;
define constant $GDK-POINTER-MOTION-MASK = 4;
define constant $GDK-POINTER-MOTION-HINT-MASK = 8;
define constant $GDK-BUTTON-MOTION-MASK = 16;
define constant $GDK-BUTTON1-MOTION-MASK = 32;
define constant $GDK-BUTTON2-MOTION-MASK = 64;
define constant $GDK-BUTTON3-MOTION-MASK = 128;
define constant $GDK-BUTTON-PRESS-MASK = 256;
define constant $GDK-BUTTON-RELEASE-MASK = 512;
define constant $GDK-KEY-PRESS-MASK = 1024;
define constant $GDK-KEY-RELEASE-MASK = 2048;
define constant $GDK-ENTER-NOTIFY-MASK = 4096;
define constant $GDK-LEAVE-NOTIFY-MASK = 8192;
define constant $GDK-FOCUS-CHANGE-MASK = 16384;
define constant $GDK-STRUCTURE-MASK = 32768;
define constant $GDK-PROPERTY-CHANGE-MASK = 65536;
define constant $GDK-VISIBILITY-NOTIFY-MASK = 131072;
define constant $GDK-PROXIMITY-IN-MASK = 262144;
define constant $GDK-PROXIMITY-OUT-MASK = 524288;
define constant $GDK-SUBSTRUCTURE-MASK = 1048576;
define constant $GDK-SCROLL-MASK = 2097152;
define constant $GDK-ALL-EVENTS-MASK = 4194302;

define constant <GdkCursorType> = <C-int>;
define constant $GDK-X-CURSOR = 0;
define constant $GDK-ARROW = 2;
define constant $GDK-BASED-ARROW-DOWN = 4;
define constant $GDK-BASED-ARROW-UP = 6;
define constant $GDK-BOAT = 8;
define constant $GDK-BOGOSITY = 10;
define constant $GDK-BOTTOM-LEFT-CORNER = 12;
define constant $GDK-BOTTOM-RIGHT-CORNER = 14;
define constant $GDK-BOTTOM-SIDE = 16;
define constant $GDK-BOTTOM-TEE = 18;
define constant $GDK-BOX-SPIRAL = 20;
define constant $GDK-CENTER-PTR = 22;
define constant $GDK-CIRCLE = 24;
define constant $GDK-CLOCK = 26;
define constant $GDK-COFFEE-MUG = 28;
define constant $GDK-CROSS = 30;
define constant $GDK-CROSS-REVERSE = 32;
define constant $GDK-CROSSHAIR = 34;
define constant $GDK-DIAMOND-CROSS = 36;
define constant $GDK-DOT = 38;
define constant $GDK-DOTBOX = 40;
define constant $GDK-DOUBLE-ARROW = 42;
define constant $GDK-DRAFT-LARGE = 44;
define constant $GDK-DRAFT-SMALL = 46;
define constant $GDK-DRAPED-BOX = 48;
define constant $GDK-EXCHANGE = 50;
define constant $GDK-FLEUR = 52;
define constant $GDK-GOBBLER = 54;
define constant $GDK-GUMBY = 56;
define constant $GDK-HAND1 = 58;
define constant $GDK-HAND2 = 60;
define constant $GDK-HEART = 62;
define constant $GDK-ICON = 64;
define constant $GDK-IRON-CROSS = 66;
define constant $GDK-LEFT-PTR = 68;
define constant $GDK-LEFT-SIDE = 70;
define constant $GDK-LEFT-TEE = 72;
define constant $GDK-LEFTBUTTON = 74;
define constant $GDK-LL-ANGLE = 76;
define constant $GDK-LR-ANGLE = 78;
define constant $GDK-MAN = 80;
define constant $GDK-MIDDLEBUTTON = 82;
define constant $GDK-MOUSE = 84;
define constant $GDK-PENCIL = 86;
define constant $GDK-PIRATE = 88;
define constant $GDK-PLUS = 90;
define constant $GDK-QUESTION-ARROW = 92;
define constant $GDK-RIGHT-PTR = 94;
define constant $GDK-RIGHT-SIDE = 96;
define constant $GDK-RIGHT-TEE = 98;
define constant $GDK-RIGHTBUTTON = 100;
define constant $GDK-RTL-LOGO = 102;
define constant $GDK-SAILBOAT = 104;
define constant $GDK-SB-DOWN-ARROW = 106;
define constant $GDK-SB-H-DOUBLE-ARROW = 108;
define constant $GDK-SB-LEFT-ARROW = 110;
define constant $GDK-SB-RIGHT-ARROW = 112;
define constant $GDK-SB-UP-ARROW = 114;
define constant $GDK-SB-V-DOUBLE-ARROW = 116;
define constant $GDK-SHUTTLE = 118;
define constant $GDK-SIZING = 120;
define constant $GDK-SPIDER = 122;
define constant $GDK-SPRAYCAN = 124;
define constant $GDK-STAR = 126;
define constant $GDK-TARGET = 128;
define constant $GDK-TCROSS = 130;
define constant $GDK-TOP-LEFT-ARROW = 132;
define constant $GDK-TOP-LEFT-CORNER = 134;
define constant $GDK-TOP-RIGHT-CORNER = 136;
define constant $GDK-TOP-SIDE = 138;
define constant $GDK-TOP-TEE = 140;
define constant $GDK-TREK = 142;
define constant $GDK-UL-ANGLE = 144;
define constant $GDK-UMBRELLA = 146;
define constant $GDK-UR-ANGLE = 148;
define constant $GDK-WATCH = 150;
define constant $GDK-XTERM = 152;
define constant $GDK-LAST-CURSOR = 153;
define constant $GDK-CURSOR-IS-PIXMAP = -1;

define C-struct <_GdkCursor>
  slot GdkCursor-type :: <GdkCursorType>;
  slot GdkCursor-ref-count :: <C-unsigned-int>;
end;

define C-pointer-type <GdkCursor> => <_GdkCursor>;

define C-function gdk-pointer-grab
  input parameter arg1 :: <GdkWindow>;
  input parameter arg2 :: <gboolean>;
  input parameter arg3 :: <GdkEventMask>;
  input parameter arg4 :: <GdkWindow>;
  input parameter arg5 :: <GdkCursor>;
  input parameter arg6 :: <guint32>;
  result res :: <GdkGrabStatus>;
  c-name: "gdk_pointer_grab";
end;

define C-function gdk-keyboard-grab
  input parameter arg1 :: <GdkWindow>;
  input parameter arg2 :: <gboolean>;
  input parameter arg3 :: <guint32>;
  result res :: <GdkGrabStatus>;
  c-name: "gdk_keyboard_grab";
end;

define C-function gdk-pointer-grab-info-libgtk-only
  input parameter arg1 :: <GdkDisplay>;
  input parameter arg2 :: <GdkWindow*>;
  input parameter arg3 :: <gboolean*>;
  result res :: <gboolean>;
  c-name: "gdk_pointer_grab_info_libgtk_only";
end;

define C-function gdk-keyboard-grab-info-libgtk-only
  input parameter arg1 :: <GdkDisplay>;
  input parameter arg2 :: <GdkWindow*>;
  input parameter arg3 :: <gboolean*>;
  result res :: <gboolean>;
  c-name: "gdk_keyboard_grab_info_libgtk_only";
end;

define C-function gdk-pointer-ungrab
  input parameter arg1 :: <guint32>;
  c-name: "gdk_pointer_ungrab";
end;

define C-function gdk-keyboard-ungrab
  input parameter arg1 :: <guint32>;
  c-name: "gdk_keyboard_ungrab";
end;

define C-function gdk-pointer-is-grabbed
  result res :: <gboolean>;
  c-name: "gdk_pointer_is_grabbed";
end;

define C-function gdk-screen-width
  result res :: <gint>;
  c-name: "gdk_screen_width";
end;

define C-function gdk-screen-height
  result res :: <gint>;
  c-name: "gdk_screen_height";
end;

define C-function gdk-screen-width-mm
  result res :: <gint>;
  c-name: "gdk_screen_width_mm";
end;

define C-function gdk-screen-height-mm
  result res :: <gint>;
  c-name: "gdk_screen_height_mm";
end;

define C-function gdk-beep
  c-name: "gdk_beep";
end;

define C-function gdk-flush
  c-name: "gdk_flush";
end;

define C-function gdk-set-double-click-time
  input parameter arg1 :: <guint>;
  c-name: "gdk_set_double_click_time";
end;

define C-function gdk-rectangle-intersect
  input parameter arg1 :: <GdkRectangle>;
  input parameter arg2 :: <GdkRectangle>;
  input parameter arg3 :: <GdkRectangle>;
  result res :: <gboolean>;
  c-name: "gdk_rectangle_intersect";
end;

define C-function gdk-rectangle-union
  input parameter arg1 :: <GdkRectangle>;
  input parameter arg2 :: <GdkRectangle>;
  input parameter arg3 :: <GdkRectangle>;
  c-name: "gdk_rectangle_union";
end;

define C-function gdk-rectangle-get-type
  result res :: <GType>;
  c-name: "gdk_rectangle_get_type";
end;

define constant <GdkWChar> = <guint32>;

define C-pointer-type <GdkWChar*> => <GdkWChar>;
define C-function gdk-wcstombs
  input parameter arg1 :: <GdkWChar*>;
  result res :: <gchar*>;
  c-name: "gdk_wcstombs";
end;

define C-function gdk-mbstowcs
  input parameter arg1 :: <GdkWChar*>;
  input parameter arg2 :: <gchar*>;
  input parameter arg3 :: <gint>;
  result res :: <gint>;
  c-name: "gdk_mbstowcs";
end;

define C-function gdk-event-send-client-message
  input parameter arg1 :: <GdkEvent>;
  input parameter arg2 :: <GdkNativeWindow>;
  result res :: <gboolean>;
  c-name: "gdk_event_send_client_message";
end;

define C-function gdk-event-send-clientmessage-toall
  input parameter arg1 :: <GdkEvent>;
  c-name: "gdk_event_send_clientmessage_toall";
end;

define C-function gdk-event-send-client-message-for-display
  input parameter arg1 :: <GdkDisplay>;
  input parameter arg2 :: <GdkEvent>;
  input parameter arg3 :: <GdkNativeWindow>;
  result res :: <gboolean>;
  c-name: "gdk_event_send_client_message_for_display";
end;

define C-function gdk-notify-startup-complete
  c-name: "gdk_notify_startup_complete";
end;

define C-function gdk-notify-startup-complete-with-id
  input parameter arg1 :: <gchar*>;
  c-name: "gdk_notify_startup_complete_with_id";
end;

 /* Ignoring declaration for {instance of <variable-declaration>} "gdk-threads-mutex"*/
 /* Ignoring declaration for {instance of <variable-declaration>} "gdk-threads-lock"*/
 /* Ignoring declaration for {instance of <variable-declaration>} "gdk-threads-unlock"*/
define C-function gdk-threads-enter
  c-name: "gdk_threads_enter";
end;

define C-function gdk-threads-leave
  c-name: "gdk_threads_leave";
end;

define C-function gdk-threads-init
  c-name: "gdk_threads_init";
end;

define C-function gdk-threads-set-lock-functions
  input parameter arg1 :: <GCallback>;
  input parameter arg2 :: <GCallback>;
  c-name: "gdk_threads_set_lock_functions";
end;

define C-function gdk-threads-add-idle-full
  input parameter arg1 :: <gint>;
  input parameter arg2 :: <GSourceFunc>;
  input parameter arg3 :: <gpointer>;
  input parameter arg4 :: <GDestroyNotify>;
  result res :: <guint>;
  c-name: "gdk_threads_add_idle_full";
end;

define C-function gdk-threads-add-idle
  input parameter arg1 :: <GSourceFunc>;
  input parameter arg2 :: <gpointer>;
  result res :: <guint>;
  c-name: "gdk_threads_add_idle";
end;

define C-function gdk-threads-add-timeout-full
  input parameter arg1 :: <gint>;
  input parameter arg2 :: <guint>;
  input parameter arg3 :: <GSourceFunc>;
  input parameter arg4 :: <gpointer>;
  input parameter arg5 :: <GDestroyNotify>;
  result res :: <guint>;
  c-name: "gdk_threads_add_timeout_full";
end;

define C-function gdk-threads-add-timeout
  input parameter arg1 :: <guint>;
  input parameter arg2 :: <GSourceFunc>;
  input parameter arg3 :: <gpointer>;
  result res :: <guint>;
  c-name: "gdk_threads_add_timeout";
end;

define constant $GDK-PRIORITY-EVENTS = 0;

define constant <GdkWindowClass> = <C-int>;
define constant $GDK-INPUT-OUTPUT = 0;
define constant $GDK-INPUT-ONLY = 1;

define constant <GdkWindowType> = <C-int>;
define constant $GDK-WINDOW-ROOT = 0;
define constant $GDK-WINDOW-TOPLEVEL = 1;
define constant $GDK-WINDOW-CHILD = 2;
define constant $GDK-WINDOW-DIALOG = 3;
define constant $GDK-WINDOW-TEMP = 4;
define constant $GDK-WINDOW-FOREIGN = 5;

define C-struct <_GdkWindowAttr>
  slot GdkWindowAttr-title :: <gchar*>;
  slot GdkWindowAttr-event-mask :: <C-signed-int>;
  slot GdkWindowAttr-x :: <C-signed-int>;
  slot GdkWindowAttr-y :: <C-signed-int>;
  slot GdkWindowAttr-width :: <C-signed-int>;
  slot GdkWindowAttr-height :: <C-signed-int>;
  slot GdkWindowAttr-wclass :: <GdkWindowClass>;
  slot GdkWindowAttr-visual :: <GdkVisual>;
  slot GdkWindowAttr-colormap :: <GdkColormap>;
  slot GdkWindowAttr-window-type :: <GdkWindowType>;
  slot GdkWindowAttr-cursor :: <GdkCursor>;
  slot GdkWindowAttr-wmclass-name :: <gchar*>;
  slot GdkWindowAttr-wmclass-class :: <gchar*>;
  slot GdkWindowAttr-override-redirect :: <C-signed-int>;
  slot GdkWindowAttr-type-hint :: <GdkWindowTypeHint>;
end;

define C-pointer-type <GdkWindowAttr> => <_GdkWindowAttr>;

define constant <anonymous-3121> = <C-function-pointer>;
define constant <anonymous-3122> = <C-function-pointer>;
define C-struct <_GdkPointerHooks>
  slot GdkPointerHooks-get-pointer :: <anonymous-3121>;
  slot GdkPointerHooks-window-at-pointer :: <anonymous-3122>;
end;

define C-pointer-type <GdkPointerHooks> => <_GdkPointerHooks>;

define constant <GdkWindowAttributesType> = <C-int>;
define constant $GDK-WA-TITLE = 2;
define constant $GDK-WA-X = 4;
define constant $GDK-WA-Y = 8;
define constant $GDK-WA-CURSOR = 16;
define constant $GDK-WA-COLORMAP = 32;
define constant $GDK-WA-VISUAL = 64;
define constant $GDK-WA-WMCLASS = 128;
define constant $GDK-WA-NOREDIR = 256;
define constant $GDK-WA-TYPE-HINT = 512;

define constant <GdkWMDecoration> = <C-int>;
define constant $GDK-DECOR-ALL = 1;
define constant $GDK-DECOR-BORDER = 2;
define constant $GDK-DECOR-RESIZEH = 4;
define constant $GDK-DECOR-TITLE = 8;
define constant $GDK-DECOR-MENU = 16;
define constant $GDK-DECOR-MINIMIZE = 32;
define constant $GDK-DECOR-MAXIMIZE = 64;

define constant <GdkWMFunction> = <C-int>;
define constant $GDK-FUNC-ALL = 1;
define constant $GDK-FUNC-RESIZE = 2;
define constant $GDK-FUNC-MOVE = 4;
define constant $GDK-FUNC-MINIMIZE = 8;
define constant $GDK-FUNC-MAXIMIZE = 16;
define constant $GDK-FUNC-CLOSE = 32;

define C-pointer-type <GdkWindowObject> => <_GdkWindowObject>;

define C-struct <_GdkWindowObject>
  slot GdkWindowObject-parent-instance :: <_GdkDrawable>;
  slot GdkWindowObject-impl :: <GdkDrawable>;
  slot GdkWindowObject-parent :: <GdkWindowObject>;
  slot GdkWindowObject-user-data :: <C-void*>;
  slot GdkWindowObject-x :: <C-signed-int>;
  slot GdkWindowObject-y :: <C-signed-int>;
  slot GdkWindowObject-extension-events :: <C-signed-int>;
  slot GdkWindowObject-filters :: <GList>;
  slot GdkWindowObject-children :: <GList>;
  slot GdkWindowObject-bg-color :: <_GdkColor>;
  slot GdkWindowObject-bg-pixmap :: <GdkPixmap>;
  slot GdkWindowObject-paint-stack :: <GSList>;
  slot GdkWindowObject-update-area :: <GdkRegion>;
  slot GdkWindowObject-update-freeze-count :: <C-unsigned-int>;
  slot GdkWindowObject-window-type :: <C-unsigned-char>;
  slot GdkWindowObject-depth :: <C-unsigned-char>;
  slot GdkWindowObject-resize-count :: <C-unsigned-char>;
  slot GdkWindowObject-state :: <GdkWindowState>;
  bitfield slot GdkWindowObject-guffaw-gravity :: <C-int>, width: 1;
  bitfield slot GdkWindowObject-input-only :: <C-int>, width: 1;
  bitfield slot GdkWindowObject-modal-hint :: <C-int>, width: 1;
  bitfield slot GdkWindowObject-composited :: <C-int>, width: 1;
  bitfield slot GdkWindowObject-destroyed :: <C-int>, width: 2;
  bitfield slot GdkWindowObject-accept-focus :: <C-int>, width: 1;
  bitfield slot GdkWindowObject-focus-on-map :: <C-int>, width: 1;
  bitfield slot GdkWindowObject-shaped :: <C-int>, width: 1;
  slot GdkWindowObject-event-mask :: <GdkEventMask>;
  slot GdkWindowObject-update-and-descendants-freeze-count :: <C-unsigned-int>;
end;

define constant <GdkFunction> = <C-int>;
define constant $GDK-COPY = 0;
define constant $GDK-INVERT = 1;
define constant $GDK-XOR = 2;
define constant $GDK-CLEAR = 3;
define constant $GDK-AND = 4;
define constant $GDK-AND-REVERSE = 5;
define constant $GDK-AND-INVERT = 6;
define constant $GDK-NOOP = 7;
define constant $GDK-OR = 8;
define constant $GDK-EQUIV = 9;
define constant $GDK-OR-REVERSE = 10;
define constant $GDK-COPY-INVERT = 11;
define constant $GDK-OR-INVERT = 12;
define constant $GDK-NAND = 13;
define constant $GDK-NOR = 14;
define constant $GDK-SET = 15;

define constant <GdkFill> = <C-int>;
define constant $GDK-SOLID = 0;
define constant $GDK-TILED = 1;
define constant $GDK-STIPPLED = 2;
define constant $GDK-OPAQUE-STIPPLED = 3;

define constant <GdkSubwindowMode> = <C-int>;
define constant $GDK-CLIP-BY-CHILDREN = 0;
define constant $GDK-INCLUDE-INFERIORS = 1;

define constant <GdkLineStyle> = <C-int>;
define constant $GDK-LINE-SOLID = 0;
define constant $GDK-LINE-ON-OFF-DASH = 1;
define constant $GDK-LINE-DOUBLE-DASH = 2;

define constant <GdkCapStyle> = <C-int>;
define constant $GDK-CAP-NOT-LAST = 0;
define constant $GDK-CAP-BUTT = 1;
define constant $GDK-CAP-ROUND = 2;
define constant $GDK-CAP-PROJECTING = 3;

define constant <GdkJoinStyle> = <C-int>;
define constant $GDK-JOIN-MITER = 0;
define constant $GDK-JOIN-ROUND = 1;
define constant $GDK-JOIN-BEVEL = 2;

define C-struct <_GdkGCValues>
  slot GdkGCValues-foreground :: <_GdkColor>;
  slot GdkGCValues-background :: <_GdkColor>;
  slot GdkGCValues-font :: <GdkFont>;
  slot GdkGCValues-function :: <GdkFunction>;
  slot GdkGCValues-fill :: <GdkFill>;
  slot GdkGCValues-tile :: <GdkPixmap>;
  slot GdkGCValues-stipple :: <GdkPixmap>;
  slot GdkGCValues-clip-mask :: <GdkPixmap>;
  slot GdkGCValues-subwindow-mode :: <GdkSubwindowMode>;
  slot GdkGCValues-ts-x-origin :: <C-signed-int>;
  slot GdkGCValues-ts-y-origin :: <C-signed-int>;
  slot GdkGCValues-clip-x-origin :: <C-signed-int>;
  slot GdkGCValues-clip-y-origin :: <C-signed-int>;
  slot GdkGCValues-graphics-exposures :: <C-signed-int>;
  slot GdkGCValues-line-width :: <C-signed-int>;
  slot GdkGCValues-line-style :: <GdkLineStyle>;
  slot GdkGCValues-cap-style :: <GdkCapStyle>;
  slot GdkGCValues-join-style :: <GdkJoinStyle>;
end;

define C-pointer-type <GdkGCValues> => <_GdkGCValues>;

define constant <GdkGCValuesMask> = <C-int>;
define constant $GDK-GC-FOREGROUND = 1;
define constant $GDK-GC-BACKGROUND = 2;
define constant $GDK-GC-FONT = 4;
define constant $GDK-GC-FUNCTION = 8;
define constant $GDK-GC-FILL = 16;
define constant $GDK-GC-TILE = 32;
define constant $GDK-GC-STIPPLE = 64;
define constant $GDK-GC-CLIP-MASK = 128;
define constant $GDK-GC-SUBWINDOW = 256;
define constant $GDK-GC-TS-X-ORIGIN = 512;
define constant $GDK-GC-TS-Y-ORIGIN = 1024;
define constant $GDK-GC-CLIP-X-ORIGIN = 2048;
define constant $GDK-GC-CLIP-Y-ORIGIN = 4096;
define constant $GDK-GC-EXPOSURES = 8192;
define constant $GDK-GC-LINE-WIDTH = 16384;
define constant $GDK-GC-LINE-STYLE = 32768;
define constant $GDK-GC-CAP-STYLE = 65536;
define constant $GDK-GC-JOIN-STYLE = 131072;

define constant <anonymous-2799> = <C-function-pointer>;
define constant <anonymous-2800> = <C-function-pointer>;
define constant <anonymous-2801> = <C-function-pointer>;
define constant <anonymous-2802> = <C-function-pointer>;
define constant <anonymous-2803> = <C-function-pointer>;
define constant <anonymous-2804> = <C-function-pointer>;
define constant <anonymous-2805> = <C-function-pointer>;
define constant <anonymous-2806> = <C-function-pointer>;
define C-struct <_GdkSegment>
  slot GdkSegment-x1 :: <C-signed-int>;
  slot GdkSegment-y1 :: <C-signed-int>;
  slot GdkSegment-x2 :: <C-signed-int>;
  slot GdkSegment-y2 :: <C-signed-int>;
end;

define C-pointer-type <GdkSegment> => <_GdkSegment>;

define constant <anonymous-2807> = <C-function-pointer>;
define constant <anonymous-2808> = <C-function-pointer>;
define constant <anonymous-2809> = <C-function-pointer>;
define constant <GdkImageType> = <C-int>;
define constant $GDK-IMAGE-NORMAL = 0;
define constant $GDK-IMAGE-SHARED = 1;
define constant $GDK-IMAGE-FASTEST = 2;

define C-subtype <_GdkImage> (<_GObject>) end;
define constant <GdkImage> = <_GdkImage>;

define constant <anonymous-2810> = <C-function-pointer>;
define constant <anonymous-2811> = <C-function-pointer>;
define constant <anonymous-2812> = <C-function-pointer>;
define constant <anonymous-2813> = <C-function-pointer>;
define constant <anonymous-2814> = <C-function-pointer>;
define constant <anonymous-2815> = <C-function-pointer>;
define constant <anonymous-2816> = <C-function-pointer>;
define constant <anonymous-2817> = <C-function-pointer>;
define constant <anonymous-2818> = <C-function-pointer>;
define constant <anonymous-2819> = <C-function-pointer>;
define constant <anonymous-2820> = <C-function-pointer>;
define constant <GdkRgbDither> = <C-int>;
define constant $GDK-RGB-DITHER-NONE = 0;
define constant $GDK-RGB-DITHER-NORMAL = 1;
define constant $GDK-RGB-DITHER-MAX = 2;

define constant <anonymous-2821> = <C-function-pointer>;
define constant <anonymous-2822> = <C-function-pointer>;
define constant <anonymous-2823> = <C-function-pointer>;
define C-struct <_GdkTrapezoid>
  slot GdkTrapezoid-y1 :: <C-double>;
  slot GdkTrapezoid-x11 :: <C-double>;
  slot GdkTrapezoid-x21 :: <C-double>;
  slot GdkTrapezoid-y2 :: <C-double>;
  slot GdkTrapezoid-x12 :: <C-double>;
  slot GdkTrapezoid-x22 :: <C-double>;
end;

define C-pointer-type <GdkTrapezoid> => <_GdkTrapezoid>;

define constant <anonymous-2824> = <C-function-pointer>;
define C-struct <_cairo-surface>
end;

define C-pointer-type <cairo-surface-t> => <_cairo-surface>;

define constant <anonymous-2825> = <C-function-pointer>;
define constant <anonymous-2826> = <C-function-pointer>;
define constant <anonymous-2827> = <C-function-pointer>;
define constant <anonymous-2828> = <C-function-pointer>;
define constant <anonymous-2829> = <C-function-pointer>;
define constant <anonymous-2830> = <C-function-pointer>;
define constant <anonymous-2831> = <C-function-pointer>;
define constant <anonymous-2832> = <C-function-pointer>;
define constant <anonymous-2833> = <C-function-pointer>;
define constant <anonymous-2834> = <C-function-pointer>;
define constant <anonymous-2835> = <C-function-pointer>;
define constant <anonymous-2836> = <C-function-pointer>;
define constant <anonymous-2837> = <C-function-pointer>;
define C-struct <_GdkDrawableClass>
  slot GdkDrawableClass-parent-class :: <_GObjectClass>;
  slot GdkDrawableClass-create-gc :: <anonymous-2799>;
  slot GdkDrawableClass-draw-rectangle :: <anonymous-2800>;
  slot GdkDrawableClass-draw-arc :: <anonymous-2801>;
  slot GdkDrawableClass-draw-polygon :: <anonymous-2802>;
  slot GdkDrawableClass-draw-text :: <anonymous-2803>;
  slot GdkDrawableClass-draw-text-wc :: <anonymous-2804>;
  slot GdkDrawableClass-draw-drawable :: <anonymous-2805>;
  slot GdkDrawableClass-draw-points :: <anonymous-2806>;
  slot GdkDrawableClass-draw-segments :: <anonymous-2807>;
  slot GdkDrawableClass-draw-lines :: <anonymous-2808>;
  slot GdkDrawableClass-draw-glyphs :: <anonymous-2809>;
  slot GdkDrawableClass-draw-image :: <anonymous-2810>;
  slot GdkDrawableClass-get-depth :: <anonymous-2811>;
  slot GdkDrawableClass-get-size :: <anonymous-2812>;
  slot GdkDrawableClass-set-colormap :: <anonymous-2813>;
  slot GdkDrawableClass-get-colormap :: <anonymous-2814>;
  slot GdkDrawableClass-get-visual :: <anonymous-2815>;
  slot GdkDrawableClass-get-screen :: <anonymous-2816>;
  slot GdkDrawableClass-get-image :: <anonymous-2817>;
  slot GdkDrawableClass-get-clip-region :: <anonymous-2818>;
  slot GdkDrawableClass-get-visible-region :: <anonymous-2819>;
  slot GdkDrawableClass-get-composite-drawable :: <anonymous-2820>;
  slot GdkDrawableClass-draw-pixbuf :: <anonymous-2821>;
  slot GdkDrawableClass-_copy-to-image :: <anonymous-2822>;
  slot GdkDrawableClass-draw-glyphs-transformed :: <anonymous-2823>;
  slot GdkDrawableClass-draw-trapezoids :: <anonymous-2824>;
  slot GdkDrawableClass-ref-cairo-surface :: <anonymous-2825>;
  slot GdkDrawableClass-_gdk-reserved4 :: <anonymous-2826>;
  slot GdkDrawableClass-_gdk-reserved5 :: <anonymous-2827>;
  slot GdkDrawableClass-_gdk-reserved6 :: <anonymous-2828>;
  slot GdkDrawableClass-_gdk-reserved7 :: <anonymous-2829>;
  slot GdkDrawableClass-_gdk-reserved9 :: <anonymous-2830>;
  slot GdkDrawableClass-_gdk-reserved10 :: <anonymous-2831>;
  slot GdkDrawableClass-_gdk-reserved11 :: <anonymous-2832>;
  slot GdkDrawableClass-_gdk-reserved12 :: <anonymous-2833>;
  slot GdkDrawableClass-_gdk-reserved13 :: <anonymous-2834>;
  slot GdkDrawableClass-_gdk-reserved14 :: <anonymous-2835>;
  slot GdkDrawableClass-_gdk-reserved15 :: <anonymous-2836>;
  slot GdkDrawableClass-_gdk-reserved16 :: <anonymous-2837>;
end;

define C-pointer-type <GdkDrawableClass> => <_GdkDrawableClass>;

define C-struct <_GdkWindowObjectClass>
  slot GdkWindowObjectClass-parent-class :: <_GdkDrawableClass>;
end;

define C-pointer-type <GdkWindowObjectClass> => <_GdkWindowObjectClass>;

define C-function gdk-window-object-get-type
  result res :: <GType>;
  c-name: "gdk_window_object_get_type";
end;

define C-function gdk-window-new
  input parameter arg1 :: <GdkWindow>;
  input parameter arg2 :: <GdkWindowAttr>;
  input parameter arg3 :: <gint>;
  result res :: <GdkWindow>;
  c-name: "gdk_window_new";
end;

define C-function gdk-window-destroy
  input parameter arg1 :: <GdkWindow>;
  c-name: "gdk_window_destroy";
end;

define C-function gdk-window-get-window-type
  input parameter arg1 :: <GdkWindow>;
  result res :: <GdkWindowType>;
  c-name: "gdk_window_get_window_type";
end;

define C-function gdk-window-at-pointer
  input parameter arg1 :: <gint*>;
  input parameter arg2 :: <gint*>;
  result res :: <GdkWindow>;
  c-name: "gdk_window_at_pointer";
end;

define C-function gdk-window-show
  input parameter arg1 :: <GdkWindow>;
  c-name: "gdk_window_show";
end;

define C-function gdk-window-hide
  input parameter arg1 :: <GdkWindow>;
  c-name: "gdk_window_hide";
end;

define C-function gdk-window-withdraw
  input parameter arg1 :: <GdkWindow>;
  c-name: "gdk_window_withdraw";
end;

define C-function gdk-window-show-unraised
  input parameter arg1 :: <GdkWindow>;
  c-name: "gdk_window_show_unraised";
end;

define C-function gdk-window-move
  input parameter arg1 :: <GdkWindow>;
  input parameter arg2 :: <gint>;
  input parameter arg3 :: <gint>;
  c-name: "gdk_window_move";
end;

define C-function gdk-window-resize
  input parameter arg1 :: <GdkWindow>;
  input parameter arg2 :: <gint>;
  input parameter arg3 :: <gint>;
  c-name: "gdk_window_resize";
end;

define C-function gdk-window-move-resize
  input parameter arg1 :: <GdkWindow>;
  input parameter arg2 :: <gint>;
  input parameter arg3 :: <gint>;
  input parameter arg4 :: <gint>;
  input parameter arg5 :: <gint>;
  c-name: "gdk_window_move_resize";
end;

define C-function gdk-window-reparent
  input parameter arg1 :: <GdkWindow>;
  input parameter arg2 :: <GdkWindow>;
  input parameter arg3 :: <gint>;
  input parameter arg4 :: <gint>;
  c-name: "gdk_window_reparent";
end;

define C-function gdk-window-clear
  input parameter arg1 :: <GdkWindow>;
  c-name: "gdk_window_clear";
end;

define C-function gdk-window-clear-area
  input parameter arg1 :: <GdkWindow>;
  input parameter arg2 :: <gint>;
  input parameter arg3 :: <gint>;
  input parameter arg4 :: <gint>;
  input parameter arg5 :: <gint>;
  c-name: "gdk_window_clear_area";
end;

define C-function gdk-window-clear-area-e
  input parameter arg1 :: <GdkWindow>;
  input parameter arg2 :: <gint>;
  input parameter arg3 :: <gint>;
  input parameter arg4 :: <gint>;
  input parameter arg5 :: <gint>;
  c-name: "gdk_window_clear_area_e";
end;

define C-function gdk-window-raise
  input parameter arg1 :: <GdkWindow>;
  c-name: "gdk_window_raise";
end;

define C-function gdk-window-lower
  input parameter arg1 :: <GdkWindow>;
  c-name: "gdk_window_lower";
end;

define C-function gdk-window-focus
  input parameter arg1 :: <GdkWindow>;
  input parameter arg2 :: <guint32>;
  c-name: "gdk_window_focus";
end;

define C-function gdk-window-set-user-data
  input parameter arg1 :: <GdkWindow>;
  input parameter arg2 :: <gpointer>;
  c-name: "gdk_window_set_user_data";
end;

define C-function gdk-window-set-override-redirect
  input parameter arg1 :: <GdkWindow>;
  input parameter arg2 :: <gboolean>;
  c-name: "gdk_window_set_override_redirect";
end;

define C-function gdk-window-set-accept-focus
  input parameter arg1 :: <GdkWindow>;
  input parameter arg2 :: <gboolean>;
  c-name: "gdk_window_set_accept_focus";
end;

define C-function gdk-window-set-focus-on-map
  input parameter arg1 :: <GdkWindow>;
  input parameter arg2 :: <gboolean>;
  c-name: "gdk_window_set_focus_on_map";
end;

define constant <GdkFilterReturn> = <C-int>;
define constant $GDK-FILTER-CONTINUE = 0;
define constant $GDK-FILTER-TRANSLATE = 1;
define constant $GDK-FILTER-REMOVE = 2;

define constant <GdkXEvent> = <C-int>;

define C-pointer-type <GdkXEvent*> => <GdkXEvent>;
define constant <anonymous-2672> = <C-function-pointer>;
define constant <GdkFilterFunc> = <anonymous-2672>;

define C-function gdk-window-add-filter
  input parameter arg1 :: <GdkWindow>;
  input parameter arg2 :: <GdkFilterFunc>;
  input parameter arg3 :: <gpointer>;
  c-name: "gdk_window_add_filter";
end;

define C-function gdk-window-remove-filter
  input parameter arg1 :: <GdkWindow>;
  input parameter arg2 :: <GdkFilterFunc>;
  input parameter arg3 :: <gpointer>;
  c-name: "gdk_window_remove_filter";
end;

define C-function gdk-window-scroll
  input parameter arg1 :: <GdkWindow>;
  input parameter arg2 :: <gint>;
  input parameter arg3 :: <gint>;
  c-name: "gdk_window_scroll";
end;

define C-function gdk-window-move-region
  input parameter arg1 :: <GdkWindow>;
  input parameter arg2 :: <GdkRegion>;
  input parameter arg3 :: <gint>;
  input parameter arg4 :: <gint>;
  c-name: "gdk_window_move_region";
end;

define C-function gdk-window-shape-combine-mask
  input parameter arg1 :: <GdkWindow>;
  input parameter arg2 :: <GdkBitmap>;
  input parameter arg3 :: <gint>;
  input parameter arg4 :: <gint>;
  c-name: "gdk_window_shape_combine_mask";
end;

define C-function gdk-window-shape-combine-region
  input parameter arg1 :: <GdkWindow>;
  input parameter arg2 :: <GdkRegion>;
  input parameter arg3 :: <gint>;
  input parameter arg4 :: <gint>;
  c-name: "gdk_window_shape_combine_region";
end;

define C-function gdk-window-set-child-shapes
  input parameter arg1 :: <GdkWindow>;
  c-name: "gdk_window_set_child_shapes";
end;

define C-function gdk-window-set-composited
  input parameter arg1 :: <GdkWindow>;
  input parameter arg2 :: <gboolean>;
  c-name: "gdk_window_set_composited";
end;

define C-function gdk-window-merge-child-shapes
  input parameter arg1 :: <GdkWindow>;
  c-name: "gdk_window_merge_child_shapes";
end;

define C-function gdk-window-input-shape-combine-mask
  input parameter arg1 :: <GdkWindow>;
  input parameter arg2 :: <GdkBitmap>;
  input parameter arg3 :: <gint>;
  input parameter arg4 :: <gint>;
  c-name: "gdk_window_input_shape_combine_mask";
end;

define C-function gdk-window-input-shape-combine-region
  input parameter arg1 :: <GdkWindow>;
  input parameter arg2 :: <GdkRegion>;
  input parameter arg3 :: <gint>;
  input parameter arg4 :: <gint>;
  c-name: "gdk_window_input_shape_combine_region";
end;

define C-function gdk-window-set-child-input-shapes
  input parameter arg1 :: <GdkWindow>;
  c-name: "gdk_window_set_child_input_shapes";
end;

define C-function gdk-window-merge-child-input-shapes
  input parameter arg1 :: <GdkWindow>;
  c-name: "gdk_window_merge_child_input_shapes";
end;

define C-function gdk-window-is-visible
  input parameter arg1 :: <GdkWindow>;
  result res :: <gboolean>;
  c-name: "gdk_window_is_visible";
end;

define C-function gdk-window-is-viewable
  input parameter arg1 :: <GdkWindow>;
  result res :: <gboolean>;
  c-name: "gdk_window_is_viewable";
end;

define C-function gdk-window-get-state
  input parameter arg1 :: <GdkWindow>;
  result res :: <GdkWindowState>;
  c-name: "gdk_window_get_state";
end;

define C-function gdk-window-set-static-gravities
  input parameter arg1 :: <GdkWindow>;
  input parameter arg2 :: <gboolean>;
  result res :: <gboolean>;
  c-name: "gdk_window_set_static_gravities";
end;

define C-function gdk-window-foreign-new
  input parameter arg1 :: <GdkNativeWindow>;
  result res :: <GdkWindow>;
  c-name: "gdk_window_foreign_new";
end;

define C-function gdk-window-lookup
  input parameter arg1 :: <GdkNativeWindow>;
  result res :: <GdkWindow>;
  c-name: "gdk_window_lookup";
end;

define C-function gdk-window-foreign-new-for-display
  input parameter arg1 :: <GdkDisplay>;
  input parameter arg2 :: <GdkNativeWindow>;
  result res :: <GdkWindow>;
  c-name: "gdk_window_foreign_new_for_display";
end;

define C-function gdk-window-lookup-for-display
  input parameter arg1 :: <GdkDisplay>;
  input parameter arg2 :: <GdkNativeWindow>;
  result res :: <GdkWindow>;
  c-name: "gdk_window_lookup_for_display";
end;

define C-function gdk-window-set-hints
  input parameter arg1 :: <GdkWindow>;
  input parameter arg2 :: <gint>;
  input parameter arg3 :: <gint>;
  input parameter arg4 :: <gint>;
  input parameter arg5 :: <gint>;
  input parameter arg6 :: <gint>;
  input parameter arg7 :: <gint>;
  input parameter arg8 :: <gint>;
  c-name: "gdk_window_set_hints";
end;

define C-function gdk-window-set-type-hint
  input parameter arg1 :: <GdkWindow>;
  input parameter arg2 :: <GdkWindowTypeHint>;
  c-name: "gdk_window_set_type_hint";
end;

define C-function gdk-window-get-type-hint
  input parameter arg1 :: <GdkWindow>;
  result res :: <GdkWindowTypeHint>;
  c-name: "gdk_window_get_type_hint";
end;

define C-function gdk-window-set-modal-hint
  input parameter arg1 :: <GdkWindow>;
  input parameter arg2 :: <gboolean>;
  c-name: "gdk_window_set_modal_hint";
end;

define C-function gdk-window-set-skip-taskbar-hint
  input parameter arg1 :: <GdkWindow>;
  input parameter arg2 :: <gboolean>;
  c-name: "gdk_window_set_skip_taskbar_hint";
end;

define C-function gdk-window-set-skip-pager-hint
  input parameter arg1 :: <GdkWindow>;
  input parameter arg2 :: <gboolean>;
  c-name: "gdk_window_set_skip_pager_hint";
end;

define C-function gdk-window-set-urgency-hint
  input parameter arg1 :: <GdkWindow>;
  input parameter arg2 :: <gboolean>;
  c-name: "gdk_window_set_urgency_hint";
end;

define C-function gdk-window-set-geometry-hints
  input parameter arg1 :: <GdkWindow>;
  input parameter arg2 :: <GdkGeometry>;
  input parameter arg3 :: <GdkWindowHints>;
  c-name: "gdk_window_set_geometry_hints";
end;

define C-function gdk-set-sm-client-id
  input parameter arg1 :: <gchar*>;
  c-name: "gdk_set_sm_client_id";
end;

define C-function gdk-window-begin-paint-rect
  input parameter arg1 :: <GdkWindow>;
  input parameter arg2 :: <GdkRectangle>;
  c-name: "gdk_window_begin_paint_rect";
end;

define C-function gdk-window-begin-paint-region
  input parameter arg1 :: <GdkWindow>;
  input parameter arg2 :: <GdkRegion>;
  c-name: "gdk_window_begin_paint_region";
end;

define C-function gdk-window-end-paint
  input parameter arg1 :: <GdkWindow>;
  c-name: "gdk_window_end_paint";
end;

define C-function gdk-window-set-title
  input parameter arg1 :: <GdkWindow>;
  input parameter arg2 :: <gchar*>;
  c-name: "gdk_window_set_title";
end;

define C-function gdk-window-set-role
  input parameter arg1 :: <GdkWindow>;
  input parameter arg2 :: <gchar*>;
  c-name: "gdk_window_set_role";
end;

define C-function gdk-window-set-startup-id
  input parameter arg1 :: <GdkWindow>;
  input parameter arg2 :: <gchar*>;
  c-name: "gdk_window_set_startup_id";
end;

define C-function gdk-window-set-transient-for
  input parameter arg1 :: <GdkWindow>;
  input parameter arg2 :: <GdkWindow>;
  c-name: "gdk_window_set_transient_for";
end;

define C-function gdk-window-set-background
  input parameter arg1 :: <GdkWindow>;
  input parameter arg2 :: <GdkColor>;
  c-name: "gdk_window_set_background";
end;

define C-function gdk-window-set-back-pixmap
  input parameter arg1 :: <GdkWindow>;
  input parameter arg2 :: <GdkPixmap>;
  input parameter arg3 :: <gboolean>;
  c-name: "gdk_window_set_back_pixmap";
end;

define C-function gdk-window-set-cursor
  input parameter arg1 :: <GdkWindow>;
  input parameter arg2 :: <GdkCursor>;
  c-name: "gdk_window_set_cursor";
end;

define C-function gdk-window-get-user-data
  input parameter arg1 :: <GdkWindow>;
  input parameter arg2 :: <gpointer*>;
  c-name: "gdk_window_get_user_data";
end;

define C-function gdk-window-get-geometry
  input parameter arg1 :: <GdkWindow>;
  input parameter arg2 :: <gint*>;
  input parameter arg3 :: <gint*>;
  input parameter arg4 :: <gint*>;
  input parameter arg5 :: <gint*>;
  input parameter arg6 :: <gint*>;
  c-name: "gdk_window_get_geometry";
end;

define C-function gdk-window-get-position
  input parameter arg1 :: <GdkWindow>;
  input parameter arg2 :: <gint*>;
  input parameter arg3 :: <gint*>;
  c-name: "gdk_window_get_position";
end;

define C-function gdk-window-get-origin
  input parameter arg1 :: <GdkWindow>;
  input parameter arg2 :: <gint*>;
  input parameter arg3 :: <gint*>;
  result res :: <gint>;
  c-name: "gdk_window_get_origin";
end;

define C-function gdk-window-get-deskrelative-origin
  input parameter arg1 :: <GdkWindow>;
  input parameter arg2 :: <gint*>;
  input parameter arg3 :: <gint*>;
  result res :: <gboolean>;
  c-name: "gdk_window_get_deskrelative_origin";
end;

define C-function gdk-window-get-root-origin
  input parameter arg1 :: <GdkWindow>;
  input parameter arg2 :: <gint*>;
  input parameter arg3 :: <gint*>;
  c-name: "gdk_window_get_root_origin";
end;

define C-function gdk-window-get-frame-extents
  input parameter arg1 :: <GdkWindow>;
  input parameter arg2 :: <GdkRectangle>;
  c-name: "gdk_window_get_frame_extents";
end;

define C-function gdk-window-get-pointer
  input parameter arg1 :: <GdkWindow>;
  output parameter arg2 :: <gint*>;
  output parameter arg3 :: <gint*>;
  output parameter arg4 :: <GdkModifierType*>;
  result res :: <GdkWindow>;
  c-name: "gdk_window_get_pointer";
end;

define C-function gdk-window-get-parent
  input parameter arg1 :: <GdkWindow>;
  result res :: <GdkWindow>;
  c-name: "gdk_window_get_parent";
end;

define C-function gdk-window-get-toplevel
  input parameter arg1 :: <GdkWindow>;
  result res :: <GdkWindow>;
  c-name: "gdk_window_get_toplevel";
end;

define C-function gdk-window-get-children
  input parameter arg1 :: <GdkWindow>;
  result res :: <GList>;
  c-name: "gdk_window_get_children";
end;

define C-function gdk-window-peek-children
  input parameter arg1 :: <GdkWindow>;
  result res :: <GList>;
  c-name: "gdk_window_peek_children";
end;

define C-function gdk-window-get-events
  input parameter arg1 :: <GdkWindow>;
  result res :: <GdkEventMask>;
  c-name: "gdk_window_get_events";
end;

define C-function gdk-window-set-events
  input parameter arg1 :: <GdkWindow>;
  input parameter arg2 :: <GdkEventMask>;
  c-name: "gdk_window_set_events";
end;

define C-function gdk-window-set-icon-list
  input parameter arg1 :: <GdkWindow>;
  input parameter arg2 :: <GList>;
  c-name: "gdk_window_set_icon_list";
end;

define C-function gdk-window-set-icon
  input parameter arg1 :: <GdkWindow>;
  input parameter arg2 :: <GdkWindow>;
  input parameter arg3 :: <GdkPixmap>;
  input parameter arg4 :: <GdkBitmap>;
  c-name: "gdk_window_set_icon";
end;

define C-function gdk-window-set-icon-name
  input parameter arg1 :: <GdkWindow>;
  input parameter arg2 :: <gchar*>;
  c-name: "gdk_window_set_icon_name";
end;

define C-function gdk-window-set-group
  input parameter arg1 :: <GdkWindow>;
  input parameter arg2 :: <GdkWindow>;
  c-name: "gdk_window_set_group";
end;

define C-function gdk-window-get-group
  input parameter arg1 :: <GdkWindow>;
  result res :: <GdkWindow>;
  c-name: "gdk_window_get_group";
end;

define C-function gdk-window-set-decorations
  input parameter arg1 :: <GdkWindow>;
  input parameter arg2 :: <GdkWMDecoration>;
  c-name: "gdk_window_set_decorations";
end;

define C-pointer-type <GdkWMDecoration*> => <GdkWMDecoration>;
define C-function gdk-window-get-decorations
  input parameter arg1 :: <GdkWindow>;
  input parameter arg2 :: <GdkWMDecoration*>;
  result res :: <gboolean>;
  c-name: "gdk_window_get_decorations";
end;

define C-function gdk-window-set-functions
  input parameter arg1 :: <GdkWindow>;
  input parameter arg2 :: <GdkWMFunction>;
  c-name: "gdk_window_set_functions";
end;

define C-function gdk-window-get-toplevels
  result res :: <GList>;
  c-name: "gdk_window_get_toplevels";
end;

define C-function gdk-window-beep
  input parameter arg1 :: <GdkWindow>;
  c-name: "gdk_window_beep";
end;

define C-function gdk-window-iconify
  input parameter arg1 :: <GdkWindow>;
  c-name: "gdk_window_iconify";
end;

define C-function gdk-window-deiconify
  input parameter arg1 :: <GdkWindow>;
  c-name: "gdk_window_deiconify";
end;

define C-function gdk-window-stick
  input parameter arg1 :: <GdkWindow>;
  c-name: "gdk_window_stick";
end;

define C-function gdk-window-unstick
  input parameter arg1 :: <GdkWindow>;
  c-name: "gdk_window_unstick";
end;

define C-function gdk-window-maximize
  input parameter arg1 :: <GdkWindow>;
  c-name: "gdk_window_maximize";
end;

define C-function gdk-window-unmaximize
  input parameter arg1 :: <GdkWindow>;
  c-name: "gdk_window_unmaximize";
end;

define C-function gdk-window-fullscreen
  input parameter arg1 :: <GdkWindow>;
  c-name: "gdk_window_fullscreen";
end;

define C-function gdk-window-unfullscreen
  input parameter arg1 :: <GdkWindow>;
  c-name: "gdk_window_unfullscreen";
end;

define C-function gdk-window-set-keep-above
  input parameter arg1 :: <GdkWindow>;
  input parameter arg2 :: <gboolean>;
  c-name: "gdk_window_set_keep_above";
end;

define C-function gdk-window-set-keep-below
  input parameter arg1 :: <GdkWindow>;
  input parameter arg2 :: <gboolean>;
  c-name: "gdk_window_set_keep_below";
end;

define C-function gdk-window-set-opacity
  input parameter arg1 :: <GdkWindow>;
  input parameter arg2 :: <gdouble>;
  c-name: "gdk_window_set_opacity";
end;

define C-function gdk-window-register-dnd
  input parameter arg1 :: <GdkWindow>;
  c-name: "gdk_window_register_dnd";
end;

define C-function gdk-window-begin-resize-drag
  input parameter arg1 :: <GdkWindow>;
  input parameter arg2 :: <GdkWindowEdge>;
  input parameter arg3 :: <gint>;
  input parameter arg4 :: <gint>;
  input parameter arg5 :: <gint>;
  input parameter arg6 :: <guint32>;
  c-name: "gdk_window_begin_resize_drag";
end;

define C-function gdk-window-begin-move-drag
  input parameter arg1 :: <GdkWindow>;
  input parameter arg2 :: <gint>;
  input parameter arg3 :: <gint>;
  input parameter arg4 :: <gint>;
  input parameter arg5 :: <guint32>;
  c-name: "gdk_window_begin_move_drag";
end;

define C-function gdk-window-invalidate-rect
  input parameter arg1 :: <GdkWindow>;
  input parameter arg2 :: <GdkRectangle>;
  input parameter arg3 :: <gboolean>;
  c-name: "gdk_window_invalidate_rect";
end;

define C-function gdk-window-invalidate-region
  input parameter arg1 :: <GdkWindow>;
  input parameter arg2 :: <GdkRegion>;
  input parameter arg3 :: <gboolean>;
  c-name: "gdk_window_invalidate_region";
end;

define constant <anonymous-3234> = <C-function-pointer>;
define C-function gdk-window-invalidate-maybe-recurse
  input parameter arg1 :: <GdkWindow>;
  input parameter arg2 :: <GdkRegion>;
  input parameter arg3 :: <anonymous-3234>;
  input parameter arg4 :: <gpointer>;
  c-name: "gdk_window_invalidate_maybe_recurse";
end;

define C-function gdk-window-get-update-area
  input parameter arg1 :: <GdkWindow>;
  result res :: <GdkRegion>;
  c-name: "gdk_window_get_update_area";
end;

define C-function gdk-window-freeze-updates
  input parameter arg1 :: <GdkWindow>;
  c-name: "gdk_window_freeze_updates";
end;

define C-function gdk-window-thaw-updates
  input parameter arg1 :: <GdkWindow>;
  c-name: "gdk_window_thaw_updates";
end;

define C-function gdk-window-freeze-toplevel-updates-libgtk-only
  input parameter arg1 :: <GdkWindow>;
  c-name: "gdk_window_freeze_toplevel_updates_libgtk_only";
end;

define C-function gdk-window-thaw-toplevel-updates-libgtk-only
  input parameter arg1 :: <GdkWindow>;
  c-name: "gdk_window_thaw_toplevel_updates_libgtk_only";
end;

define C-function gdk-window-process-all-updates
  c-name: "gdk_window_process_all_updates";
end;

define C-function gdk-window-process-updates
  input parameter arg1 :: <GdkWindow>;
  input parameter arg2 :: <gboolean>;
  c-name: "gdk_window_process_updates";
end;

define C-function gdk-window-set-debug-updates
  input parameter arg1 :: <gboolean>;
  c-name: "gdk_window_set_debug_updates";
end;

define C-function gdk-window-constrain-size
  input parameter arg1 :: <GdkGeometry>;
  input parameter arg2 :: <guint>;
  input parameter arg3 :: <gint>;
  input parameter arg4 :: <gint>;
  input parameter arg5 :: <gint*>;
  input parameter arg6 :: <gint*>;
  c-name: "gdk_window_constrain_size";
end;

define C-pointer-type <GdkDrawable*> => <GdkDrawable>;
define C-function gdk-window-get-internal-paint-info
  input parameter arg1 :: <GdkWindow>;
  input parameter arg2 :: <GdkDrawable*>;
  input parameter arg3 :: <gint*>;
  input parameter arg4 :: <gint*>;
  c-name: "gdk_window_get_internal_paint_info";
end;

define C-function gdk-window-enable-synchronized-configure
  input parameter arg1 :: <GdkWindow>;
  c-name: "gdk_window_enable_synchronized_configure";
end;

define C-function gdk-window-configure-finished
  input parameter arg1 :: <GdkWindow>;
  c-name: "gdk_window_configure_finished";
end;

define C-function gdk-set-pointer-hooks
  input parameter arg1 :: <GdkPointerHooks>;
  result res :: <GdkPointerHooks>;
  c-name: "gdk_set_pointer_hooks";
end;

define C-function gdk-get-default-root-window
  result res :: <GdkWindow>;
  c-name: "gdk_get_default_root_window";
end;

define C-function gdk-drawable-get-size
  input parameter arg1 :: <GdkDrawable>;
  input parameter arg2 :: <gint*>;
  input parameter arg3 :: <gint*>;
  c-name: "gdk_drawable_get_size";
end;

define constant gdk-window-get-size = gdk-drawable-get-size;

define constant gdk-window-get-type = gdk-window-get-window-type;

define C-function gdk-drawable-get-colormap
  input parameter arg1 :: <GdkDrawable>;
  result res :: <GdkColormap>;
  c-name: "gdk_drawable_get_colormap";
end;

define constant gdk-window-get-colormap = gdk-drawable-get-colormap;

define C-function gdk-drawable-set-colormap
  input parameter arg1 :: <GdkDrawable>;
  input parameter arg2 :: <GdkColormap>;
  c-name: "gdk_drawable_set_colormap";
end;

define constant gdk-window-set-colormap = gdk-drawable-set-colormap;

define C-function gdk-drawable-get-visual
  input parameter arg1 :: <GdkDrawable>;
  result res :: <GdkVisual>;
  c-name: "gdk_drawable_get_visual";
end;

define constant gdk-window-get-visual = gdk-drawable-get-visual;

define C-function gdk-drawable-ref
  input parameter arg1 :: <GdkDrawable>;
  result res :: <GdkDrawable>;
  c-name: "gdk_drawable_ref";
end;

define constant gdk-window-ref = gdk-drawable-ref;

define C-function gdk-drawable-unref
  input parameter arg1 :: <GdkDrawable>;
  c-name: "gdk_drawable_unref";
end;

define constant gdk-window-unref = gdk-drawable-unref;

define constant <anonymous-2670> = <C-function-pointer>;
define constant <GdkEventFunc> = <anonymous-2670>;

define constant <GdkPropertyState> = <C-int>;
define constant $GDK-PROPERTY-NEW-VALUE = 0;
define constant $GDK-PROPERTY-DELETE = 1;

define C-function gdk-event-get-type
  result res :: <GType>;
  c-name: "gdk_event_get_type";
end;

define C-function gdk-events-pending
  result res :: <gboolean>;
  c-name: "gdk_events_pending";
end;

define C-function gdk-event-get
  result res :: <GdkEvent>;
  c-name: "gdk_event_get";
end;

define C-function gdk-event-peek
  result res :: <GdkEvent>;
  c-name: "gdk_event_peek";
end;

define C-function gdk-event-get-graphics-expose
  input parameter arg1 :: <GdkWindow>;
  result res :: <GdkEvent>;
  c-name: "gdk_event_get_graphics_expose";
end;

define C-function gdk-event-put
  input parameter arg1 :: <GdkEvent>;
  c-name: "gdk_event_put";
end;

define C-function gdk-event-new
  input parameter arg1 :: <GdkEventType>;
  result res :: <GdkEvent>;
  c-name: "gdk_event_new";
end;

define C-function gdk-event-copy
  input parameter arg1 :: <GdkEvent>;
  result res :: <GdkEvent>;
  c-name: "gdk_event_copy";
end;

define C-function gdk-event-free
  input parameter arg1 :: <GdkEvent>;
  c-name: "gdk_event_free";
end;

define C-function gdk-event-get-time
  input parameter arg1 :: <GdkEvent>;
  result res :: <guint32>;
  c-name: "gdk_event_get_time";
end;

define C-function gdk-event-get-state
  input parameter arg1 :: <GdkEvent>;
  input parameter arg2 :: <GdkModifierType*>;
  result res :: <gboolean>;
  c-name: "gdk_event_get_state";
end;

define C-function gdk-event-get-coords
  input parameter arg1 :: <GdkEvent>;
  input parameter arg2 :: <gdouble*>;
  input parameter arg3 :: <gdouble*>;
  result res :: <gboolean>;
  c-name: "gdk_event_get_coords";
end;

define C-function gdk-event-get-root-coords
  input parameter arg1 :: <GdkEvent>;
  input parameter arg2 :: <gdouble*>;
  input parameter arg3 :: <gdouble*>;
  result res :: <gboolean>;
  c-name: "gdk_event_get_root_coords";
end;

define C-function gdk-event-get-axis
  input parameter arg1 :: <GdkEvent>;
  input parameter arg2 :: <GdkAxisUse>;
  input parameter arg3 :: <gdouble*>;
  result res :: <gboolean>;
  c-name: "gdk_event_get_axis";
end;

define C-function gdk-event-request-motions
  input parameter arg1 :: <GdkEventMotion>;
  c-name: "gdk_event_request_motions";
end;

define C-function gdk-event-handler-set
  input parameter arg1 :: <GdkEventFunc>;
  input parameter arg2 :: <gpointer>;
  input parameter arg3 :: <GDestroyNotify>;
  c-name: "gdk_event_handler_set";
end;

define C-function gdk-event-set-screen
  input parameter arg1 :: <GdkEvent>;
  input parameter arg2 :: <GdkScreen>;
  c-name: "gdk_event_set_screen";
end;

define C-function gdk-event-get-screen
  input parameter arg1 :: <GdkEvent>;
  result res :: <GdkScreen>;
  c-name: "gdk_event_get_screen";
end;

define C-function gdk-set-show-events
  input parameter arg1 :: <gboolean>;
  c-name: "gdk_set_show_events";
end;

define C-function gdk-get-show-events
  result res :: <gboolean>;
  c-name: "gdk_get_show_events";
end;

define C-function gdk-add-client-message-filter
  input parameter arg1 :: <GdkAtom>;
  input parameter arg2 :: <GdkFilterFunc>;
  input parameter arg3 :: <gpointer>;
  c-name: "gdk_add_client_message_filter";
end;

define C-function gdk-setting-get
  input parameter arg1 :: <gchar*>;
  input parameter arg2 :: <GValue>;
  result res :: <gboolean>;
  c-name: "gdk_setting_get";
end;

define constant $GDK-PRIORITY-REDRAW = 120;

define C-struct <_GdkDeviceClass>
end;

define C-pointer-type <GdkDeviceClass> => <_GdkDeviceClass>;

define constant <gdouble<@128>> = <gdouble*>;
define C-struct <_GdkTimeCoord>
  slot GdkTimeCoord-time :: <C-unsigned-int>;
  array slot GdkTimeCoord-axes :: <gdouble>, length: 128;
end;

define C-pointer-type <GdkTimeCoord> => <_GdkTimeCoord>;

define C-function gdk-device-get-type
  result res :: <GType>;
  c-name: "gdk_device_get_type";
end;

define C-function gdk-devices-list
  result res :: <GList>;
  c-name: "gdk_devices_list";
end;

define C-function gdk-device-set-source
  input parameter arg1 :: <GdkDevice>;
  input parameter arg2 :: <GdkInputSource>;
  c-name: "gdk_device_set_source";
end;

define C-function gdk-device-set-mode
  input parameter arg1 :: <GdkDevice>;
  input parameter arg2 :: <GdkInputMode>;
  result res :: <gboolean>;
  c-name: "gdk_device_set_mode";
end;

define C-function gdk-device-set-key
  input parameter arg1 :: <GdkDevice>;
  input parameter arg2 :: <guint>;
  input parameter arg3 :: <guint>;
  input parameter arg4 :: <GdkModifierType>;
  c-name: "gdk_device_set_key";
end;

define C-function gdk-device-set-axis-use
  input parameter arg1 :: <GdkDevice>;
  input parameter arg2 :: <guint>;
  input parameter arg3 :: <GdkAxisUse>;
  c-name: "gdk_device_set_axis_use";
end;

define C-function gdk-device-get-state
  input parameter arg1 :: <GdkDevice>;
  input parameter arg2 :: <GdkWindow>;
  input parameter arg3 :: <gdouble*>;
  input parameter arg4 :: <GdkModifierType*>;
  c-name: "gdk_device_get_state";
end;

define C-pointer-type <GdkTimeCoord*> => <GdkTimeCoord>;
define C-pointer-type <GdkTimeCoord**> => <GdkTimeCoord*>;
define C-function gdk-device-get-history
  input parameter arg1 :: <GdkDevice>;
  input parameter arg2 :: <GdkWindow>;
  input parameter arg3 :: <guint32>;
  input parameter arg4 :: <guint32>;
  input parameter arg5 :: <GdkTimeCoord**>;
  input parameter arg6 :: <gint*>;
  result res :: <gboolean>;
  c-name: "gdk_device_get_history";
end;

define C-function gdk-device-free-history
  input parameter arg1 :: <GdkTimeCoord*>;
  input parameter arg2 :: <gint>;
  c-name: "gdk_device_free_history";
end;

define C-function gdk-device-get-axis
  input parameter arg1 :: <GdkDevice>;
  input parameter arg2 :: <gdouble*>;
  input parameter arg3 :: <GdkAxisUse>;
  input parameter arg4 :: <gdouble*>;
  result res :: <gboolean>;
  c-name: "gdk_device_get_axis";
end;

define C-function gdk-input-set-extension-events
  input parameter arg1 :: <GdkWindow>;
  input parameter arg2 :: <gint>;
  input parameter arg3 :: <GdkExtensionMode>;
  c-name: "gdk_input_set_extension_events";
end;

define C-function gdk-device-get-core-pointer
  result res :: <GdkDevice>;
  c-name: "gdk_device_get_core_pointer";
end;

define constant $GDK-MAX-TIMECOORD-AXES = 128;

define C-struct <_GdkSpan>
  slot GdkSpan-x :: <C-signed-int>;
  slot GdkSpan-y :: <C-signed-int>;
  slot GdkSpan-width :: <C-signed-int>;
end;

define C-pointer-type <GdkSpan> => <_GdkSpan>;

define constant <GdkStatus> = <C-int>;
define constant $GDK-OK = 0;
define constant $GDK-ERROR = -1;
define constant $GDK-ERROR-PARAM = -2;
define constant $GDK-ERROR-FILE = -3;
define constant $GDK-ERROR-MEM = -4;

define constant $GDK-CURRENT-TIME = 0;

define constant $GDK-PARENT-RELATIVE = 1;

define constant $GDK-HAVE-WCHAR-H = 1;

define constant $GDK-HAVE-WCTYPE-H = 1;

define C-struct <_GdkDragContextClass>
  slot GdkDragContextClass-parent-class :: <_GObjectClass>;
end;

define C-pointer-type <GdkDragContextClass> => <_GdkDragContextClass>;

define C-function gdk-drag-context-get-type
  result res :: <GType>;
  c-name: "gdk_drag_context_get_type";
end;

define C-function gdk-drag-context-new
  result res :: <GdkDragContext>;
  c-name: "gdk_drag_context_new";
end;

define C-function gdk-drag-context-ref
  input parameter arg1 :: <GdkDragContext>;
  c-name: "gdk_drag_context_ref";
end;

define C-function gdk-drag-context-unref
  input parameter arg1 :: <GdkDragContext>;
  c-name: "gdk_drag_context_unref";
end;

define C-function gdk-drag-status
  input parameter arg1 :: <GdkDragContext>;
  input parameter arg2 :: <GdkDragAction>;
  input parameter arg3 :: <guint32>;
  c-name: "gdk_drag_status";
end;

define C-function gdk-drop-reply
  input parameter arg1 :: <GdkDragContext>;
  input parameter arg2 :: <gboolean>;
  input parameter arg3 :: <guint32>;
  c-name: "gdk_drop_reply";
end;

define C-function gdk-drop-finish
  input parameter arg1 :: <GdkDragContext>;
  input parameter arg2 :: <gboolean>;
  input parameter arg3 :: <guint32>;
  c-name: "gdk_drop_finish";
end;

define C-function gdk-drag-get-selection
  input parameter arg1 :: <GdkDragContext>;
  result res :: <GdkAtom>;
  c-name: "gdk_drag_get_selection";
end;

define C-function gdk-drag-begin
  input parameter arg1 :: <GdkWindow>;
  input parameter arg2 :: <GList>;
  result res :: <GdkDragContext>;
  c-name: "gdk_drag_begin";
end;

define C-pointer-type <GdkDragProtocol*> => <GdkDragProtocol>;
define C-function gdk-drag-get-protocol-for-display
  input parameter arg1 :: <GdkDisplay>;
  input parameter arg2 :: <guint32>;
  input parameter arg3 :: <GdkDragProtocol*>;
  result res :: <guint32>;
  c-name: "gdk_drag_get_protocol_for_display";
end;

define C-function gdk-drag-find-window-for-screen
  input parameter arg1 :: <GdkDragContext>;
  input parameter arg2 :: <GdkWindow>;
  input parameter arg3 :: <GdkScreen>;
  input parameter arg4 :: <gint>;
  input parameter arg5 :: <gint>;
  input parameter arg6 :: <GdkWindow*>;
  input parameter arg7 :: <GdkDragProtocol*>;
  c-name: "gdk_drag_find_window_for_screen";
end;

define C-function gdk-drag-get-protocol
  input parameter arg1 :: <guint32>;
  input parameter arg2 :: <GdkDragProtocol*>;
  result res :: <guint32>;
  c-name: "gdk_drag_get_protocol";
end;

define C-function gdk-drag-find-window
  input parameter arg1 :: <GdkDragContext>;
  input parameter arg2 :: <GdkWindow>;
  input parameter arg3 :: <gint>;
  input parameter arg4 :: <gint>;
  input parameter arg5 :: <GdkWindow*>;
  input parameter arg6 :: <GdkDragProtocol*>;
  c-name: "gdk_drag_find_window";
end;

define C-function gdk-drag-motion
  input parameter arg1 :: <GdkDragContext>;
  input parameter arg2 :: <GdkWindow>;
  input parameter arg3 :: <GdkDragProtocol>;
  input parameter arg4 :: <gint>;
  input parameter arg5 :: <gint>;
  input parameter arg6 :: <GdkDragAction>;
  input parameter arg7 :: <GdkDragAction>;
  input parameter arg8 :: <guint32>;
  result res :: <gboolean>;
  c-name: "gdk_drag_motion";
end;

define C-function gdk-drag-drop
  input parameter arg1 :: <GdkDragContext>;
  input parameter arg2 :: <guint32>;
  c-name: "gdk_drag_drop";
end;

define C-function gdk-drag-abort
  input parameter arg1 :: <GdkDragContext>;
  input parameter arg2 :: <guint32>;
  c-name: "gdk_drag_abort";
end;

define C-function gdk-drag-drop-succeeded
  input parameter arg1 :: <GdkDragContext>;
  result res :: <gboolean>;
  c-name: "gdk_drag_drop_succeeded";
end;

define C-struct <_GdkColormapClass>
  slot GdkColormapClass-parent-class :: <_GObjectClass>;
end;

define C-pointer-type <GdkColormapClass> => <_GdkColormapClass>;

define C-function gdk-colormap-get-type
  result res :: <GType>;
  c-name: "gdk_colormap_get_type";
end;

define C-function gdk-colormap-new
  input parameter arg1 :: <GdkVisual>;
  input parameter arg2 :: <gboolean>;
  result res :: <GdkColormap>;
  c-name: "gdk_colormap_new";
end;

define C-function gdk-colormap-ref
  input parameter arg1 :: <GdkColormap>;
  result res :: <GdkColormap>;
  c-name: "gdk_colormap_ref";
end;

define C-function gdk-colormap-unref
  input parameter arg1 :: <GdkColormap>;
  c-name: "gdk_colormap_unref";
end;

define C-function gdk-colormap-get-system
  result res :: <GdkColormap>;
  c-name: "gdk_colormap_get_system";
end;

define C-function gdk-colormap-get-screen
  input parameter arg1 :: <GdkColormap>;
  result res :: <GdkScreen>;
  c-name: "gdk_colormap_get_screen";
end;

define C-function gdk-colormap-get-system-size
  result res :: <gint>;
  c-name: "gdk_colormap_get_system_size";
end;

define C-function gdk-colormap-change
  input parameter arg1 :: <GdkColormap>;
  input parameter arg2 :: <gint>;
  c-name: "gdk_colormap_change";
end;

define C-function gdk-colormap-alloc-colors
  input parameter arg1 :: <GdkColormap>;
  input parameter arg2 :: <GdkColor>;
  input parameter arg3 :: <gint>;
  input parameter arg4 :: <gboolean>;
  input parameter arg5 :: <gboolean>;
  input parameter arg6 :: <gboolean*>;
  result res :: <gint>;
  c-name: "gdk_colormap_alloc_colors";
end;

define C-function gdk-colormap-alloc-color
  input parameter arg1 :: <GdkColormap>;
  input parameter arg2 :: <GdkColor>;
  input parameter arg3 :: <gboolean>;
  input parameter arg4 :: <gboolean>;
  result res :: <gboolean>;
  c-name: "gdk_colormap_alloc_color";
end;

define C-function gdk-colormap-free-colors
  input parameter arg1 :: <GdkColormap>;
  input parameter arg2 :: <GdkColor>;
  input parameter arg3 :: <gint>;
  c-name: "gdk_colormap_free_colors";
end;

define C-function gdk-colormap-query-color
  input parameter arg1 :: <GdkColormap>;
  input parameter arg2 :: <gulong>;
  input parameter arg3 :: <GdkColor>;
  c-name: "gdk_colormap_query_color";
end;

define C-function gdk-colormap-get-visual
  input parameter arg1 :: <GdkColormap>;
  result res :: <GdkVisual>;
  c-name: "gdk_colormap_get_visual";
end;

define C-function gdk-color-copy
  input parameter arg1 :: <GdkColor>;
  result res :: <GdkColor>;
  c-name: "gdk_color_copy";
end;

define C-function gdk-color-free
  input parameter arg1 :: <GdkColor>;
  c-name: "gdk_color_free";
end;

define C-function gdk-color-parse
  input parameter arg1 :: <gchar*>;
  input parameter arg2 :: <GdkColor>;
  result res :: <gboolean>;
  c-name: "gdk_color_parse";
end;

define C-function gdk-color-hash
  input parameter arg1 :: <GdkColor>;
  result res :: <guint>;
  c-name: "gdk_color_hash";
end;

define C-function gdk-color-equal
  input parameter arg1 :: <GdkColor>;
  input parameter arg2 :: <GdkColor>;
  result res :: <gboolean>;
  c-name: "gdk_color_equal";
end;

define C-function gdk-color-to-string
  input parameter arg1 :: <GdkColor>;
  result res :: <gchar*>;
  c-name: "gdk_color_to_string";
end;

define C-function gdk-color-get-type
  result res :: <GType>;
  c-name: "gdk_color_get_type";
end;

define C-function gdk-colors-store
  input parameter arg1 :: <GdkColormap>;
  input parameter arg2 :: <GdkColor>;
  input parameter arg3 :: <gint>;
  c-name: "gdk_colors_store";
end;

define C-function gdk-color-white
  input parameter arg1 :: <GdkColormap>;
  input parameter arg2 :: <GdkColor>;
  result res :: <gint>;
  c-name: "gdk_color_white";
end;

define C-function gdk-color-black
  input parameter arg1 :: <GdkColormap>;
  input parameter arg2 :: <GdkColor>;
  result res :: <gint>;
  c-name: "gdk_color_black";
end;

define C-function gdk-color-alloc
  input parameter arg1 :: <GdkColormap>;
  input parameter arg2 :: <GdkColor>;
  result res :: <gint>;
  c-name: "gdk_color_alloc";
end;

define C-function gdk-color-change
  input parameter arg1 :: <GdkColormap>;
  input parameter arg2 :: <GdkColor>;
  result res :: <gint>;
  c-name: "gdk_color_change";
end;

define C-function gdk-colors-alloc
  input parameter arg1 :: <GdkColormap>;
  input parameter arg2 :: <gboolean>;
  input parameter arg3 :: <gulong*>;
  input parameter arg4 :: <gint>;
  input parameter arg5 :: <gulong*>;
  input parameter arg6 :: <gint>;
  result res :: <gint>;
  c-name: "gdk_colors_alloc";
end;

define C-function gdk-colors-free
  input parameter arg1 :: <GdkColormap>;
  input parameter arg2 :: <gulong*>;
  input parameter arg3 :: <gint>;
  input parameter arg4 :: <gulong>;
  c-name: "gdk_colors_free";
end;

define C-function cairo-version
  result res :: <C-signed-int>;
  c-name: "cairo_version";
end;

define C-function cairo-version-string
  result res :: <char*>;
  c-name: "cairo_version_string";
end;

define constant <cairo-bool-t> = <C-signed-int>;

define C-struct <_cairo>
end;

define C-pointer-type <cairo-t> => <_cairo>;

define C-struct <_cairo-matrix>
  slot cairo_matrix-xx :: <C-double>;
  slot cairo_matrix-yx :: <C-double>;
  slot cairo_matrix-xy :: <C-double>;
  slot cairo_matrix-yy :: <C-double>;
  slot cairo_matrix-x0 :: <C-double>;
  slot cairo_matrix-y0 :: <C-double>;
end;

define C-pointer-type <cairo-matrix-t> => <_cairo-matrix>;

define C-struct <_cairo-pattern>
end;

define C-pointer-type <cairo-pattern-t> => <_cairo-pattern>;

define constant <anonymous-2> = <C-function-pointer>;
define constant <cairo-destroy-func-t> = <anonymous-2>;

define C-struct <_cairo-user-data-key>
  slot cairo_user_data_key-unused :: <C-signed-int>;
end;

define C-pointer-type <cairo-user-data-key-t> => <_cairo-user-data-key>;

define constant <_cairo-status> = <C-int>;
define constant $CAIRO-STATUS-SUCCESS = 0;
define constant $CAIRO-STATUS-NO-MEMORY = 1;
define constant $CAIRO-STATUS-INVALID-RESTORE = 2;
define constant $CAIRO-STATUS-INVALID-POP-GROUP = 3;
define constant $CAIRO-STATUS-NO-CURRENT-POINT = 4;
define constant $CAIRO-STATUS-INVALID-MATRIX = 5;
define constant $CAIRO-STATUS-INVALID-STATUS = 6;
define constant $CAIRO-STATUS-NULL-POINTER = 7;
define constant $CAIRO-STATUS-INVALID-STRING = 8;
define constant $CAIRO-STATUS-INVALID-PATH-DATA = 9;
define constant $CAIRO-STATUS-READ-ERROR = 10;
define constant $CAIRO-STATUS-WRITE-ERROR = 11;
define constant $CAIRO-STATUS-SURFACE-FINISHED = 12;
define constant $CAIRO-STATUS-SURFACE-TYPE-MISMATCH = 13;
define constant $CAIRO-STATUS-PATTERN-TYPE-MISMATCH = 14;
define constant $CAIRO-STATUS-INVALID-CONTENT = 15;
define constant $CAIRO-STATUS-INVALID-FORMAT = 16;
define constant $CAIRO-STATUS-INVALID-VISUAL = 17;
define constant $CAIRO-STATUS-FILE-NOT-FOUND = 18;
define constant $CAIRO-STATUS-INVALID-DASH = 19;
define constant $CAIRO-STATUS-INVALID-DSC-COMMENT = 20;
define constant $CAIRO-STATUS-INVALID-INDEX = 21;
define constant $CAIRO-STATUS-CLIP-NOT-REPRESENTABLE = 22;

define constant <cairo-status-t> = <_cairo-status>;

define constant <_cairo-content> = <C-int>;
define constant $CAIRO-CONTENT-COLOR = 4096;
define constant $CAIRO-CONTENT-ALPHA = 8192;
define constant $CAIRO-CONTENT-COLOR-ALPHA = 12288;

define constant <cairo-content-t> = <_cairo-content>;

define constant <anonymous-3> = <C-function-pointer>;
define constant <cairo-write-func-t> = <anonymous-3>;

define constant <anonymous-4> = <C-function-pointer>;
define constant <cairo-read-func-t> = <anonymous-4>;

define C-function cairo-create
  input parameter arg1 :: <cairo-surface-t>;
  result res :: <cairo-t>;
  c-name: "cairo_create";
end;

define C-function cairo-reference
  input parameter arg1 :: <cairo-t>;
  result res :: <cairo-t>;
  c-name: "cairo_reference";
end;

define C-function cairo-destroy
  input parameter arg1 :: <cairo-t>;
  c-name: "cairo_destroy";
end;

define C-function cairo-get-reference-count
  input parameter arg1 :: <cairo-t>;
  result res :: <C-unsigned-int>;
  c-name: "cairo_get_reference_count";
end;

define C-function cairo-get-user-data
  input parameter arg1 :: <cairo-t>;
  input parameter arg2 :: <cairo-user-data-key-t>;
  result res :: <C-void*>;
  c-name: "cairo_get_user_data";
end;

define C-function cairo-set-user-data
  input parameter arg1 :: <cairo-t>;
  input parameter arg2 :: <cairo-user-data-key-t>;
  input parameter arg3 :: <C-void*>;
  input parameter arg4 :: <cairo-destroy-func-t>;
  result res :: <cairo-status-t>;
  c-name: "cairo_set_user_data";
end;

define C-function cairo-save
  input parameter arg1 :: <cairo-t>;
  c-name: "cairo_save";
end;

define C-function cairo-restore
  input parameter arg1 :: <cairo-t>;
  c-name: "cairo_restore";
end;

define C-function cairo-push-group
  input parameter arg1 :: <cairo-t>;
  c-name: "cairo_push_group";
end;

define C-function cairo-push-group-with-content
  input parameter arg1 :: <cairo-t>;
  input parameter arg2 :: <cairo-content-t>;
  c-name: "cairo_push_group_with_content";
end;

define C-function cairo-pop-group
  input parameter arg1 :: <cairo-t>;
  result res :: <cairo-pattern-t>;
  c-name: "cairo_pop_group";
end;

define C-function cairo-pop-group-to-source
  input parameter arg1 :: <cairo-t>;
  c-name: "cairo_pop_group_to_source";
end;

define constant <_cairo-operator> = <C-int>;
define constant $CAIRO-OPERATOR-CLEAR = 0;
define constant $CAIRO-OPERATOR-SOURCE = 1;
define constant $CAIRO-OPERATOR-OVER = 2;
define constant $CAIRO-OPERATOR-IN = 3;
define constant $CAIRO-OPERATOR-OUT = 4;
define constant $CAIRO-OPERATOR-ATOP = 5;
define constant $CAIRO-OPERATOR-DEST = 6;
define constant $CAIRO-OPERATOR-DEST-OVER = 7;
define constant $CAIRO-OPERATOR-DEST-IN = 8;
define constant $CAIRO-OPERATOR-DEST-OUT = 9;
define constant $CAIRO-OPERATOR-DEST-ATOP = 10;
define constant $CAIRO-OPERATOR-XOR = 11;
define constant $CAIRO-OPERATOR-ADD = 12;
define constant $CAIRO-OPERATOR-SATURATE = 13;

define constant <cairo-operator-t> = <_cairo-operator>;

define C-function cairo-set-operator
  input parameter arg1 :: <cairo-t>;
  input parameter arg2 :: <cairo-operator-t>;
  c-name: "cairo_set_operator";
end;

define C-function cairo-set-source
  input parameter arg1 :: <cairo-t>;
  input parameter arg2 :: <cairo-pattern-t>;
  c-name: "cairo_set_source";
end;

define C-function cairo-set-source-rgb
  input parameter arg1 :: <cairo-t>;
  input parameter arg2 :: <C-double>;
  input parameter arg3 :: <C-double>;
  input parameter arg4 :: <C-double>;
  c-name: "cairo_set_source_rgb";
end;

define C-function cairo-set-source-rgba
  input parameter arg1 :: <cairo-t>;
  input parameter arg2 :: <C-double>;
  input parameter arg3 :: <C-double>;
  input parameter arg4 :: <C-double>;
  input parameter arg5 :: <C-double>;
  c-name: "cairo_set_source_rgba";
end;

define C-function cairo-set-source-surface
  input parameter arg1 :: <cairo-t>;
  input parameter arg2 :: <cairo-surface-t>;
  input parameter arg3 :: <C-double>;
  input parameter arg4 :: <C-double>;
  c-name: "cairo_set_source_surface";
end;

define C-function cairo-set-tolerance
  input parameter arg1 :: <cairo-t>;
  input parameter arg2 :: <C-double>;
  c-name: "cairo_set_tolerance";
end;

define constant <_cairo-antialias> = <C-int>;
define constant $CAIRO-ANTIALIAS-DEFAULT = 0;
define constant $CAIRO-ANTIALIAS-NONE = 1;
define constant $CAIRO-ANTIALIAS-GRAY = 2;
define constant $CAIRO-ANTIALIAS-SUBPIXEL = 3;

define constant <cairo-antialias-t> = <_cairo-antialias>;

define C-function cairo-set-antialias
  input parameter arg1 :: <cairo-t>;
  input parameter arg2 :: <cairo-antialias-t>;
  c-name: "cairo_set_antialias";
end;

define constant <_cairo-fill-rule> = <C-int>;
define constant $CAIRO-FILL-RULE-WINDING = 0;
define constant $CAIRO-FILL-RULE-EVEN-ODD = 1;

define constant <cairo-fill-rule-t> = <_cairo-fill-rule>;

define C-function cairo-set-fill-rule
  input parameter arg1 :: <cairo-t>;
  input parameter arg2 :: <cairo-fill-rule-t>;
  c-name: "cairo_set_fill_rule";
end;

define C-function cairo-set-line-width
  input parameter arg1 :: <cairo-t>;
  input parameter arg2 :: <C-double>;
  c-name: "cairo_set_line_width";
end;

define constant <_cairo-line-cap> = <C-int>;
define constant $CAIRO-LINE-CAP-BUTT = 0;
define constant $CAIRO-LINE-CAP-ROUND = 1;
define constant $CAIRO-LINE-CAP-SQUARE = 2;

define constant <cairo-line-cap-t> = <_cairo-line-cap>;

define C-function cairo-set-line-cap
  input parameter arg1 :: <cairo-t>;
  input parameter arg2 :: <cairo-line-cap-t>;
  c-name: "cairo_set_line_cap";
end;

define constant <_cairo-line-join> = <C-int>;
define constant $CAIRO-LINE-JOIN-MITER = 0;
define constant $CAIRO-LINE-JOIN-ROUND = 1;
define constant $CAIRO-LINE-JOIN-BEVEL = 2;

define constant <cairo-line-join-t> = <_cairo-line-join>;

define C-function cairo-set-line-join
  input parameter arg1 :: <cairo-t>;
  input parameter arg2 :: <cairo-line-join-t>;
  c-name: "cairo_set_line_join";
end;

define C-function cairo-set-dash
  input parameter arg1 :: <cairo-t>;
  input parameter arg2 :: <double*>;
  input parameter arg3 :: <C-signed-int>;
  input parameter arg4 :: <C-double>;
  c-name: "cairo_set_dash";
end;

define C-function cairo-set-miter-limit
  input parameter arg1 :: <cairo-t>;
  input parameter arg2 :: <C-double>;
  c-name: "cairo_set_miter_limit";
end;

define C-function cairo-translate
  input parameter arg1 :: <cairo-t>;
  input parameter arg2 :: <C-double>;
  input parameter arg3 :: <C-double>;
  c-name: "cairo_translate";
end;

define C-function cairo-scale
  input parameter arg1 :: <cairo-t>;
  input parameter arg2 :: <C-double>;
  input parameter arg3 :: <C-double>;
  c-name: "cairo_scale";
end;

define C-function cairo-rotate
  input parameter arg1 :: <cairo-t>;
  input parameter arg2 :: <C-double>;
  c-name: "cairo_rotate";
end;

define C-function cairo-transform
  input parameter arg1 :: <cairo-t>;
  input parameter arg2 :: <cairo-matrix-t>;
  c-name: "cairo_transform";
end;

define C-function cairo-set-matrix
  input parameter arg1 :: <cairo-t>;
  input parameter arg2 :: <cairo-matrix-t>;
  c-name: "cairo_set_matrix";
end;

define C-function cairo-identity-matrix
  input parameter arg1 :: <cairo-t>;
  c-name: "cairo_identity_matrix";
end;

define C-function cairo-user-to-device
  input parameter arg1 :: <cairo-t>;
  input parameter arg2 :: <double*>;
  input parameter arg3 :: <double*>;
  c-name: "cairo_user_to_device";
end;

define C-function cairo-user-to-device-distance
  input parameter arg1 :: <cairo-t>;
  input parameter arg2 :: <double*>;
  input parameter arg3 :: <double*>;
  c-name: "cairo_user_to_device_distance";
end;

define C-function cairo-device-to-user
  input parameter arg1 :: <cairo-t>;
  input parameter arg2 :: <double*>;
  input parameter arg3 :: <double*>;
  c-name: "cairo_device_to_user";
end;

define C-function cairo-device-to-user-distance
  input parameter arg1 :: <cairo-t>;
  input parameter arg2 :: <double*>;
  input parameter arg3 :: <double*>;
  c-name: "cairo_device_to_user_distance";
end;

define C-function cairo-new-path
  input parameter arg1 :: <cairo-t>;
  c-name: "cairo_new_path";
end;

define C-function cairo-move-to
  input parameter arg1 :: <cairo-t>;
  input parameter arg2 :: <C-double>;
  input parameter arg3 :: <C-double>;
  c-name: "cairo_move_to";
end;

define C-function cairo-new-sub-path
  input parameter arg1 :: <cairo-t>;
  c-name: "cairo_new_sub_path";
end;

define C-function cairo-line-to
  input parameter arg1 :: <cairo-t>;
  input parameter arg2 :: <C-double>;
  input parameter arg3 :: <C-double>;
  c-name: "cairo_line_to";
end;

define C-function cairo-curve-to
  input parameter arg1 :: <cairo-t>;
  input parameter arg2 :: <C-double>;
  input parameter arg3 :: <C-double>;
  input parameter arg4 :: <C-double>;
  input parameter arg5 :: <C-double>;
  input parameter arg6 :: <C-double>;
  input parameter arg7 :: <C-double>;
  c-name: "cairo_curve_to";
end;

define C-function cairo-arc
  input parameter arg1 :: <cairo-t>;
  input parameter arg2 :: <C-double>;
  input parameter arg3 :: <C-double>;
  input parameter arg4 :: <C-double>;
  input parameter arg5 :: <C-double>;
  input parameter arg6 :: <C-double>;
  c-name: "cairo_arc";
end;

define C-function cairo-arc-negative
  input parameter arg1 :: <cairo-t>;
  input parameter arg2 :: <C-double>;
  input parameter arg3 :: <C-double>;
  input parameter arg4 :: <C-double>;
  input parameter arg5 :: <C-double>;
  input parameter arg6 :: <C-double>;
  c-name: "cairo_arc_negative";
end;

define C-function cairo-rel-move-to
  input parameter arg1 :: <cairo-t>;
  input parameter arg2 :: <C-double>;
  input parameter arg3 :: <C-double>;
  c-name: "cairo_rel_move_to";
end;

define C-function cairo-rel-line-to
  input parameter arg1 :: <cairo-t>;
  input parameter arg2 :: <C-double>;
  input parameter arg3 :: <C-double>;
  c-name: "cairo_rel_line_to";
end;

define C-function cairo-rel-curve-to
  input parameter arg1 :: <cairo-t>;
  input parameter arg2 :: <C-double>;
  input parameter arg3 :: <C-double>;
  input parameter arg4 :: <C-double>;
  input parameter arg5 :: <C-double>;
  input parameter arg6 :: <C-double>;
  input parameter arg7 :: <C-double>;
  c-name: "cairo_rel_curve_to";
end;

define C-function cairo-rectangle
  input parameter arg1 :: <cairo-t>;
  input parameter arg2 :: <C-double>;
  input parameter arg3 :: <C-double>;
  input parameter arg4 :: <C-double>;
  input parameter arg5 :: <C-double>;
  c-name: "cairo_rectangle";
end;

define C-function cairo-close-path
  input parameter arg1 :: <cairo-t>;
  c-name: "cairo_close_path";
end;

define C-function cairo-paint
  input parameter arg1 :: <cairo-t>;
  c-name: "cairo_paint";
end;

define C-function cairo-paint-with-alpha
  input parameter arg1 :: <cairo-t>;
  input parameter arg2 :: <C-double>;
  c-name: "cairo_paint_with_alpha";
end;

define C-function cairo-mask
  input parameter arg1 :: <cairo-t>;
  input parameter arg2 :: <cairo-pattern-t>;
  c-name: "cairo_mask";
end;

define C-function cairo-mask-surface
  input parameter arg1 :: <cairo-t>;
  input parameter arg2 :: <cairo-surface-t>;
  input parameter arg3 :: <C-double>;
  input parameter arg4 :: <C-double>;
  c-name: "cairo_mask_surface";
end;

define C-function cairo-stroke
  input parameter arg1 :: <cairo-t>;
  c-name: "cairo_stroke";
end;

define C-function cairo-stroke-preserve
  input parameter arg1 :: <cairo-t>;
  c-name: "cairo_stroke_preserve";
end;

define C-function cairo-fill
  input parameter arg1 :: <cairo-t>;
  c-name: "cairo_fill";
end;

define C-function cairo-fill-preserve
  input parameter arg1 :: <cairo-t>;
  c-name: "cairo_fill_preserve";
end;

define C-function cairo-copy-page
  input parameter arg1 :: <cairo-t>;
  c-name: "cairo_copy_page";
end;

define C-function cairo-show-page
  input parameter arg1 :: <cairo-t>;
  c-name: "cairo_show_page";
end;

define C-function cairo-in-stroke
  input parameter arg1 :: <cairo-t>;
  input parameter arg2 :: <C-double>;
  input parameter arg3 :: <C-double>;
  result res :: <cairo-bool-t>;
  c-name: "cairo_in_stroke";
end;

define C-function cairo-in-fill
  input parameter arg1 :: <cairo-t>;
  input parameter arg2 :: <C-double>;
  input parameter arg3 :: <C-double>;
  result res :: <cairo-bool-t>;
  c-name: "cairo_in_fill";
end;

define C-function cairo-stroke-extents
  input parameter arg1 :: <cairo-t>;
  input parameter arg2 :: <double*>;
  input parameter arg3 :: <double*>;
  input parameter arg4 :: <double*>;
  input parameter arg5 :: <double*>;
  c-name: "cairo_stroke_extents";
end;

define C-function cairo-fill-extents
  input parameter arg1 :: <cairo-t>;
  input parameter arg2 :: <double*>;
  input parameter arg3 :: <double*>;
  input parameter arg4 :: <double*>;
  input parameter arg5 :: <double*>;
  c-name: "cairo_fill_extents";
end;

define C-function cairo-reset-clip
  input parameter arg1 :: <cairo-t>;
  c-name: "cairo_reset_clip";
end;

define C-function cairo-clip
  input parameter arg1 :: <cairo-t>;
  c-name: "cairo_clip";
end;

define C-function cairo-clip-preserve
  input parameter arg1 :: <cairo-t>;
  c-name: "cairo_clip_preserve";
end;

define C-function cairo-clip-extents
  input parameter arg1 :: <cairo-t>;
  input parameter arg2 :: <double*>;
  input parameter arg3 :: <double*>;
  input parameter arg4 :: <double*>;
  input parameter arg5 :: <double*>;
  c-name: "cairo_clip_extents";
end;

define C-struct <_cairo-rectangle>
  slot cairo_rectangle-x :: <C-double>;
  slot cairo_rectangle-y :: <C-double>;
  slot cairo_rectangle-width :: <C-double>;
  slot cairo_rectangle-height :: <C-double>;
end;

define C-pointer-type <cairo-rectangle-t> => <_cairo-rectangle>;

define C-struct <_cairo-rectangle-list>
  slot cairo_rectangle_list-status :: <_cairo-status>;
  slot cairo_rectangle_list-rectangles :: <cairo-rectangle-t>;
  slot cairo_rectangle_list-num-rectangles :: <C-signed-int>;
end;

define C-pointer-type <cairo-rectangle-list-t> => <_cairo-rectangle-list>;

define C-function cairo-copy-clip-rectangle-list
  input parameter arg1 :: <cairo-t>;
  result res :: <cairo-rectangle-list-t>;
  c-name: "cairo_copy_clip_rectangle_list";
end;

define C-function cairo-rectangle-list-destroy
  input parameter arg1 :: <cairo-rectangle-list-t>;
  c-name: "cairo_rectangle_list_destroy";
end;

define C-struct <_cairo-scaled-font>
end;

define C-pointer-type <cairo-scaled-font-t> => <_cairo-scaled-font>;

define C-struct <_cairo-font-face>
end;

define C-pointer-type <cairo-font-face-t> => <_cairo-font-face>;

define C-struct <cairo-glyph-t>
  slot airo_glyph_t-index :: <C-unsigned-long>;
  slot airo_glyph_t-x :: <C-double>;
  slot airo_glyph_t-y :: <C-double>;
end;

define C-struct <cairo-text-extents-t>
  slot airo_text_extents_t-x-bearing :: <C-double>;
  slot airo_text_extents_t-y-bearing :: <C-double>;
  slot airo_text_extents_t-width :: <C-double>;
  slot airo_text_extents_t-height :: <C-double>;
  slot airo_text_extents_t-x-advance :: <C-double>;
  slot airo_text_extents_t-y-advance :: <C-double>;
end;

define C-struct <cairo-font-extents-t>
  slot airo_font_extents_t-ascent :: <C-double>;
  slot airo_font_extents_t-descent :: <C-double>;
  slot airo_font_extents_t-height :: <C-double>;
  slot airo_font_extents_t-max-x-advance :: <C-double>;
  slot airo_font_extents_t-max-y-advance :: <C-double>;
end;

define constant <_cairo-font-slant> = <C-int>;
define constant $CAIRO-FONT-SLANT-NORMAL = 0;
define constant $CAIRO-FONT-SLANT-ITALIC = 1;
define constant $CAIRO-FONT-SLANT-OBLIQUE = 2;

define constant <cairo-font-slant-t> = <_cairo-font-slant>;

define constant <_cairo-font-weight> = <C-int>;
define constant $CAIRO-FONT-WEIGHT-NORMAL = 0;
define constant $CAIRO-FONT-WEIGHT-BOLD = 1;

define constant <cairo-font-weight-t> = <_cairo-font-weight>;

define constant <_cairo-subpixel-order> = <C-int>;
define constant $CAIRO-SUBPIXEL-ORDER-DEFAULT = 0;
define constant $CAIRO-SUBPIXEL-ORDER-RGB = 1;
define constant $CAIRO-SUBPIXEL-ORDER-BGR = 2;
define constant $CAIRO-SUBPIXEL-ORDER-VRGB = 3;
define constant $CAIRO-SUBPIXEL-ORDER-VBGR = 4;

define constant <cairo-subpixel-order-t> = <_cairo-subpixel-order>;

define constant <_cairo-hint-style> = <C-int>;
define constant $CAIRO-HINT-STYLE-DEFAULT = 0;
define constant $CAIRO-HINT-STYLE-NONE = 1;
define constant $CAIRO-HINT-STYLE-SLIGHT = 2;
define constant $CAIRO-HINT-STYLE-MEDIUM = 3;
define constant $CAIRO-HINT-STYLE-FULL = 4;

define constant <cairo-hint-style-t> = <_cairo-hint-style>;

define constant <_cairo-hint-metrics> = <C-int>;
define constant $CAIRO-HINT-METRICS-DEFAULT = 0;
define constant $CAIRO-HINT-METRICS-OFF = 1;
define constant $CAIRO-HINT-METRICS-ON = 2;

define constant <cairo-hint-metrics-t> = <_cairo-hint-metrics>;

define C-function cairo-font-options-create
  result res :: <cairo-font-options-t>;
  c-name: "cairo_font_options_create";
end;

define C-function cairo-font-options-copy
  input parameter arg1 :: <cairo-font-options-t>;
  result res :: <cairo-font-options-t>;
  c-name: "cairo_font_options_copy";
end;

define C-function cairo-font-options-destroy
  input parameter arg1 :: <cairo-font-options-t>;
  c-name: "cairo_font_options_destroy";
end;

define C-function cairo-font-options-status
  input parameter arg1 :: <cairo-font-options-t>;
  result res :: <cairo-status-t>;
  c-name: "cairo_font_options_status";
end;

define C-function cairo-font-options-merge
  input parameter arg1 :: <cairo-font-options-t>;
  input parameter arg2 :: <cairo-font-options-t>;
  c-name: "cairo_font_options_merge";
end;

define C-function cairo-font-options-equal
  input parameter arg1 :: <cairo-font-options-t>;
  input parameter arg2 :: <cairo-font-options-t>;
  result res :: <cairo-bool-t>;
  c-name: "cairo_font_options_equal";
end;

define C-function cairo-font-options-hash
  input parameter arg1 :: <cairo-font-options-t>;
  result res :: <C-unsigned-long>;
  c-name: "cairo_font_options_hash";
end;

define C-function cairo-font-options-set-antialias
  input parameter arg1 :: <cairo-font-options-t>;
  input parameter arg2 :: <cairo-antialias-t>;
  c-name: "cairo_font_options_set_antialias";
end;

define C-function cairo-font-options-get-antialias
  input parameter arg1 :: <cairo-font-options-t>;
  result res :: <cairo-antialias-t>;
  c-name: "cairo_font_options_get_antialias";
end;

define C-function cairo-font-options-set-subpixel-order
  input parameter arg1 :: <cairo-font-options-t>;
  input parameter arg2 :: <cairo-subpixel-order-t>;
  c-name: "cairo_font_options_set_subpixel_order";
end;

define C-function cairo-font-options-get-subpixel-order
  input parameter arg1 :: <cairo-font-options-t>;
  result res :: <cairo-subpixel-order-t>;
  c-name: "cairo_font_options_get_subpixel_order";
end;

define C-function cairo-font-options-set-hint-style
  input parameter arg1 :: <cairo-font-options-t>;
  input parameter arg2 :: <cairo-hint-style-t>;
  c-name: "cairo_font_options_set_hint_style";
end;

define C-function cairo-font-options-get-hint-style
  input parameter arg1 :: <cairo-font-options-t>;
  result res :: <cairo-hint-style-t>;
  c-name: "cairo_font_options_get_hint_style";
end;

define C-function cairo-font-options-set-hint-metrics
  input parameter arg1 :: <cairo-font-options-t>;
  input parameter arg2 :: <cairo-hint-metrics-t>;
  c-name: "cairo_font_options_set_hint_metrics";
end;

define C-function cairo-font-options-get-hint-metrics
  input parameter arg1 :: <cairo-font-options-t>;
  result res :: <cairo-hint-metrics-t>;
  c-name: "cairo_font_options_get_hint_metrics";
end;

define C-function cairo-select-font-face
  input parameter arg1 :: <cairo-t>;
  input parameter arg2 :: <char*>;
  input parameter arg3 :: <cairo-font-slant-t>;
  input parameter arg4 :: <cairo-font-weight-t>;
  c-name: "cairo_select_font_face";
end;

define C-function cairo-set-font-size
  input parameter arg1 :: <cairo-t>;
  input parameter arg2 :: <C-double>;
  c-name: "cairo_set_font_size";
end;

define C-function cairo-set-font-matrix
  input parameter arg1 :: <cairo-t>;
  input parameter arg2 :: <cairo-matrix-t>;
  c-name: "cairo_set_font_matrix";
end;

define C-function cairo-get-font-matrix
  input parameter arg1 :: <cairo-t>;
  input parameter arg2 :: <cairo-matrix-t>;
  c-name: "cairo_get_font_matrix";
end;

define C-function cairo-set-font-options
  input parameter arg1 :: <cairo-t>;
  input parameter arg2 :: <cairo-font-options-t>;
  c-name: "cairo_set_font_options";
end;

define C-function cairo-get-font-options
  input parameter arg1 :: <cairo-t>;
  input parameter arg2 :: <cairo-font-options-t>;
  c-name: "cairo_get_font_options";
end;

define C-function cairo-set-font-face
  input parameter arg1 :: <cairo-t>;
  input parameter arg2 :: <cairo-font-face-t>;
  c-name: "cairo_set_font_face";
end;

define C-function cairo-get-font-face
  input parameter arg1 :: <cairo-t>;
  result res :: <cairo-font-face-t>;
  c-name: "cairo_get_font_face";
end;

define C-function cairo-set-scaled-font
  input parameter arg1 :: <cairo-t>;
  input parameter arg2 :: <cairo-scaled-font-t>;
  c-name: "cairo_set_scaled_font";
end;

define C-function cairo-get-scaled-font
  input parameter arg1 :: <cairo-t>;
  result res :: <cairo-scaled-font-t>;
  c-name: "cairo_get_scaled_font";
end;

define C-function cairo-show-text
  input parameter arg1 :: <cairo-t>;
  input parameter arg2 :: <char*>;
  c-name: "cairo_show_text";
end;

define C-function cairo-show-glyphs
  input parameter arg1 :: <cairo-t>;
  input parameter arg2 :: <cairo-glyph-t>;
  input parameter arg3 :: <C-signed-int>;
  c-name: "cairo_show_glyphs";
end;

define C-function cairo-text-path
  input parameter arg1 :: <cairo-t>;
  input parameter arg2 :: <char*>;
  c-name: "cairo_text_path";
end;

define C-function cairo-glyph-path
  input parameter arg1 :: <cairo-t>;
  input parameter arg2 :: <cairo-glyph-t>;
  input parameter arg3 :: <C-signed-int>;
  c-name: "cairo_glyph_path";
end;

define C-function cairo-text-extents
  input parameter arg1 :: <cairo-t>;
  input parameter arg2 :: <char*>;
  input parameter arg3 :: <cairo-text-extents-t>;
  c-name: "cairo_text_extents";
end;

define C-function cairo-glyph-extents
  input parameter arg1 :: <cairo-t>;
  input parameter arg2 :: <cairo-glyph-t>;
  input parameter arg3 :: <C-signed-int>;
  input parameter arg4 :: <cairo-text-extents-t>;
  c-name: "cairo_glyph_extents";
end;

define C-function cairo-font-extents
  input parameter arg1 :: <cairo-t>;
  input parameter arg2 :: <cairo-font-extents-t>;
  c-name: "cairo_font_extents";
end;

define C-function cairo-font-face-reference
  input parameter arg1 :: <cairo-font-face-t>;
  result res :: <cairo-font-face-t>;
  c-name: "cairo_font_face_reference";
end;

define C-function cairo-font-face-destroy
  input parameter arg1 :: <cairo-font-face-t>;
  c-name: "cairo_font_face_destroy";
end;

define C-function cairo-font-face-get-reference-count
  input parameter arg1 :: <cairo-font-face-t>;
  result res :: <C-unsigned-int>;
  c-name: "cairo_font_face_get_reference_count";
end;

define C-function cairo-font-face-status
  input parameter arg1 :: <cairo-font-face-t>;
  result res :: <cairo-status-t>;
  c-name: "cairo_font_face_status";
end;

define constant <_cairo-font-type> = <C-int>;
define constant $CAIRO-FONT-TYPE-TOY = 0;
define constant $CAIRO-FONT-TYPE-FT = 1;
define constant $CAIRO-FONT-TYPE-WIN32 = 2;
define constant $CAIRO-FONT-TYPE-ATSUI = 3;

define constant <cairo-font-type-t> = <_cairo-font-type>;

define C-function cairo-font-face-get-type
  input parameter arg1 :: <cairo-font-face-t>;
  result res :: <cairo-font-type-t>;
  c-name: "cairo_font_face_get_type";
end;

define C-function cairo-font-face-get-user-data
  input parameter arg1 :: <cairo-font-face-t>;
  input parameter arg2 :: <cairo-user-data-key-t>;
  result res :: <C-void*>;
  c-name: "cairo_font_face_get_user_data";
end;

define C-function cairo-font-face-set-user-data
  input parameter arg1 :: <cairo-font-face-t>;
  input parameter arg2 :: <cairo-user-data-key-t>;
  input parameter arg3 :: <C-void*>;
  input parameter arg4 :: <cairo-destroy-func-t>;
  result res :: <cairo-status-t>;
  c-name: "cairo_font_face_set_user_data";
end;

define C-function cairo-scaled-font-create
  input parameter arg1 :: <cairo-font-face-t>;
  input parameter arg2 :: <cairo-matrix-t>;
  input parameter arg3 :: <cairo-matrix-t>;
  input parameter arg4 :: <cairo-font-options-t>;
  result res :: <cairo-scaled-font-t>;
  c-name: "cairo_scaled_font_create";
end;

define C-function cairo-scaled-font-reference
  input parameter arg1 :: <cairo-scaled-font-t>;
  result res :: <cairo-scaled-font-t>;
  c-name: "cairo_scaled_font_reference";
end;

define C-function cairo-scaled-font-destroy
  input parameter arg1 :: <cairo-scaled-font-t>;
  c-name: "cairo_scaled_font_destroy";
end;

define C-function cairo-scaled-font-get-reference-count
  input parameter arg1 :: <cairo-scaled-font-t>;
  result res :: <C-unsigned-int>;
  c-name: "cairo_scaled_font_get_reference_count";
end;

define C-function cairo-scaled-font-status
  input parameter arg1 :: <cairo-scaled-font-t>;
  result res :: <cairo-status-t>;
  c-name: "cairo_scaled_font_status";
end;

define C-function cairo-scaled-font-get-type
  input parameter arg1 :: <cairo-scaled-font-t>;
  result res :: <cairo-font-type-t>;
  c-name: "cairo_scaled_font_get_type";
end;

define C-function cairo-scaled-font-get-user-data
  input parameter arg1 :: <cairo-scaled-font-t>;
  input parameter arg2 :: <cairo-user-data-key-t>;
  result res :: <C-void*>;
  c-name: "cairo_scaled_font_get_user_data";
end;

define C-function cairo-scaled-font-set-user-data
  input parameter arg1 :: <cairo-scaled-font-t>;
  input parameter arg2 :: <cairo-user-data-key-t>;
  input parameter arg3 :: <C-void*>;
  input parameter arg4 :: <cairo-destroy-func-t>;
  result res :: <cairo-status-t>;
  c-name: "cairo_scaled_font_set_user_data";
end;

define C-function cairo-scaled-font-extents
  input parameter arg1 :: <cairo-scaled-font-t>;
  input parameter arg2 :: <cairo-font-extents-t>;
  c-name: "cairo_scaled_font_extents";
end;

define C-function cairo-scaled-font-text-extents
  input parameter arg1 :: <cairo-scaled-font-t>;
  input parameter arg2 :: <char*>;
  input parameter arg3 :: <cairo-text-extents-t>;
  c-name: "cairo_scaled_font_text_extents";
end;

define C-function cairo-scaled-font-glyph-extents
  input parameter arg1 :: <cairo-scaled-font-t>;
  input parameter arg2 :: <cairo-glyph-t>;
  input parameter arg3 :: <C-signed-int>;
  input parameter arg4 :: <cairo-text-extents-t>;
  c-name: "cairo_scaled_font_glyph_extents";
end;

define C-function cairo-scaled-font-get-font-face
  input parameter arg1 :: <cairo-scaled-font-t>;
  result res :: <cairo-font-face-t>;
  c-name: "cairo_scaled_font_get_font_face";
end;

define C-function cairo-scaled-font-get-font-matrix
  input parameter arg1 :: <cairo-scaled-font-t>;
  input parameter arg2 :: <cairo-matrix-t>;
  c-name: "cairo_scaled_font_get_font_matrix";
end;

define C-function cairo-scaled-font-get-ctm
  input parameter arg1 :: <cairo-scaled-font-t>;
  input parameter arg2 :: <cairo-matrix-t>;
  c-name: "cairo_scaled_font_get_ctm";
end;

define C-function cairo-scaled-font-get-font-options
  input parameter arg1 :: <cairo-scaled-font-t>;
  input parameter arg2 :: <cairo-font-options-t>;
  c-name: "cairo_scaled_font_get_font_options";
end;

define C-function cairo-get-operator
  input parameter arg1 :: <cairo-t>;
  result res :: <cairo-operator-t>;
  c-name: "cairo_get_operator";
end;

define C-function cairo-get-source
  input parameter arg1 :: <cairo-t>;
  result res :: <cairo-pattern-t>;
  c-name: "cairo_get_source";
end;

define C-function cairo-get-tolerance
  input parameter arg1 :: <cairo-t>;
  result res :: <C-double>;
  c-name: "cairo_get_tolerance";
end;

define C-function cairo-get-antialias
  input parameter arg1 :: <cairo-t>;
  result res :: <cairo-antialias-t>;
  c-name: "cairo_get_antialias";
end;

define C-function cairo-get-current-point
  input parameter arg1 :: <cairo-t>;
  input parameter arg2 :: <double*>;
  input parameter arg3 :: <double*>;
  c-name: "cairo_get_current_point";
end;

define C-function cairo-get-fill-rule
  input parameter arg1 :: <cairo-t>;
  result res :: <cairo-fill-rule-t>;
  c-name: "cairo_get_fill_rule";
end;

define C-function cairo-get-line-width
  input parameter arg1 :: <cairo-t>;
  result res :: <C-double>;
  c-name: "cairo_get_line_width";
end;

define C-function cairo-get-line-cap
  input parameter arg1 :: <cairo-t>;
  result res :: <cairo-line-cap-t>;
  c-name: "cairo_get_line_cap";
end;

define C-function cairo-get-line-join
  input parameter arg1 :: <cairo-t>;
  result res :: <cairo-line-join-t>;
  c-name: "cairo_get_line_join";
end;

define C-function cairo-get-miter-limit
  input parameter arg1 :: <cairo-t>;
  result res :: <C-double>;
  c-name: "cairo_get_miter_limit";
end;

define C-function cairo-get-dash-count
  input parameter arg1 :: <cairo-t>;
  result res :: <C-signed-int>;
  c-name: "cairo_get_dash_count";
end;

define C-function cairo-get-dash
  input parameter arg1 :: <cairo-t>;
  input parameter arg2 :: <double*>;
  input parameter arg3 :: <double*>;
  c-name: "cairo_get_dash";
end;

define C-function cairo-get-matrix
  input parameter arg1 :: <cairo-t>;
  input parameter arg2 :: <cairo-matrix-t>;
  c-name: "cairo_get_matrix";
end;

define C-function cairo-get-target
  input parameter arg1 :: <cairo-t>;
  result res :: <cairo-surface-t>;
  c-name: "cairo_get_target";
end;

define C-function cairo-get-group-target
  input parameter arg1 :: <cairo-t>;
  result res :: <cairo-surface-t>;
  c-name: "cairo_get_group_target";
end;

define constant <_cairo-path-data-type> = <C-int>;
define constant $CAIRO-PATH-MOVE-TO = 0;
define constant $CAIRO-PATH-LINE-TO = 1;
define constant $CAIRO-PATH-CURVE-TO = 2;
define constant $CAIRO-PATH-CLOSE-PATH = 3;

define constant <cairo-path-data-type-t> = <_cairo-path-data-type>;

define C-struct <anonymous-144>
  slot nonymous-144-type :: <_cairo-path-data-type>;
  slot nonymous-144-length :: <C-signed-int>;
end;

define C-struct <anonymous-145>
  slot nonymous-145-x :: <C-double>;
  slot nonymous-145-y :: <C-double>;
end;

define C-subtype <_cairo-path-data-t> (<C-void*>) end;
define constant <cairo-path-data-t> = <_cairo-path-data-t>;

define C-struct <cairo-path>
  slot airo_path-status :: <_cairo-status>;
  slot airo_path-data :: <cairo-path-data-t>;
  slot airo_path-num-data :: <C-signed-int>;
end;

define C-pointer-type <cairo-path-t> => <cairo-path>;

define C-function cairo-copy-path
  input parameter arg1 :: <cairo-t>;
  result res :: <cairo-path-t>;
  c-name: "cairo_copy_path";
end;

define C-function cairo-copy-path-flat
  input parameter arg1 :: <cairo-t>;
  result res :: <cairo-path-t>;
  c-name: "cairo_copy_path_flat";
end;

define C-function cairo-append-path
  input parameter arg1 :: <cairo-t>;
  input parameter arg2 :: <cairo-path-t>;
  c-name: "cairo_append_path";
end;

define C-function cairo-path-destroy
  input parameter arg1 :: <cairo-path-t>;
  c-name: "cairo_path_destroy";
end;

define C-function cairo-status
  input parameter arg1 :: <cairo-t>;
  result res :: <cairo-status-t>;
  c-name: "cairo_status";
end;

define C-function cairo-status-to-string
  input parameter arg1 :: <cairo-status-t>;
  result res :: <char*>;
  c-name: "cairo_status_to_string";
end;

define C-function cairo-surface-create-similar
  input parameter arg1 :: <cairo-surface-t>;
  input parameter arg2 :: <cairo-content-t>;
  input parameter arg3 :: <C-signed-int>;
  input parameter arg4 :: <C-signed-int>;
  result res :: <cairo-surface-t>;
  c-name: "cairo_surface_create_similar";
end;

define C-function cairo-surface-reference
  input parameter arg1 :: <cairo-surface-t>;
  result res :: <cairo-surface-t>;
  c-name: "cairo_surface_reference";
end;

define C-function cairo-surface-finish
  input parameter arg1 :: <cairo-surface-t>;
  c-name: "cairo_surface_finish";
end;

define C-function cairo-surface-destroy
  input parameter arg1 :: <cairo-surface-t>;
  c-name: "cairo_surface_destroy";
end;

define C-function cairo-surface-get-reference-count
  input parameter arg1 :: <cairo-surface-t>;
  result res :: <C-unsigned-int>;
  c-name: "cairo_surface_get_reference_count";
end;

define C-function cairo-surface-status
  input parameter arg1 :: <cairo-surface-t>;
  result res :: <cairo-status-t>;
  c-name: "cairo_surface_status";
end;

define constant <_cairo-surface-type> = <C-int>;
define constant $CAIRO-SURFACE-TYPE-IMAGE = 0;
define constant $CAIRO-SURFACE-TYPE-PDF = 1;
define constant $CAIRO-SURFACE-TYPE-PS = 2;
define constant $CAIRO-SURFACE-TYPE-XLIB = 3;
define constant $CAIRO-SURFACE-TYPE-XCB = 4;
define constant $CAIRO-SURFACE-TYPE-GLITZ = 5;
define constant $CAIRO-SURFACE-TYPE-QUARTZ = 6;
define constant $CAIRO-SURFACE-TYPE-WIN32 = 7;
define constant $CAIRO-SURFACE-TYPE-BEOS = 8;
define constant $CAIRO-SURFACE-TYPE-DIRECTFB = 9;
define constant $CAIRO-SURFACE-TYPE-SVG = 10;
define constant $CAIRO-SURFACE-TYPE-OS2 = 11;

define constant <cairo-surface-type-t> = <_cairo-surface-type>;

define C-function cairo-surface-get-type
  input parameter arg1 :: <cairo-surface-t>;
  result res :: <cairo-surface-type-t>;
  c-name: "cairo_surface_get_type";
end;

define C-function cairo-surface-get-content
  input parameter arg1 :: <cairo-surface-t>;
  result res :: <cairo-content-t>;
  c-name: "cairo_surface_get_content";
end;

define C-function cairo-surface-write-to-png
  input parameter arg1 :: <cairo-surface-t>;
  input parameter arg2 :: <char*>;
  result res :: <cairo-status-t>;
  c-name: "cairo_surface_write_to_png";
end;

define C-function cairo-surface-write-to-png-stream
  input parameter arg1 :: <cairo-surface-t>;
  input parameter arg2 :: <cairo-write-func-t>;
  input parameter arg3 :: <C-void*>;
  result res :: <cairo-status-t>;
  c-name: "cairo_surface_write_to_png_stream";
end;

define C-function cairo-surface-get-user-data
  input parameter arg1 :: <cairo-surface-t>;
  input parameter arg2 :: <cairo-user-data-key-t>;
  result res :: <C-void*>;
  c-name: "cairo_surface_get_user_data";
end;

define C-function cairo-surface-set-user-data
  input parameter arg1 :: <cairo-surface-t>;
  input parameter arg2 :: <cairo-user-data-key-t>;
  input parameter arg3 :: <C-void*>;
  input parameter arg4 :: <cairo-destroy-func-t>;
  result res :: <cairo-status-t>;
  c-name: "cairo_surface_set_user_data";
end;

define C-function cairo-surface-get-font-options
  input parameter arg1 :: <cairo-surface-t>;
  input parameter arg2 :: <cairo-font-options-t>;
  c-name: "cairo_surface_get_font_options";
end;

define C-function cairo-surface-flush
  input parameter arg1 :: <cairo-surface-t>;
  c-name: "cairo_surface_flush";
end;

define C-function cairo-surface-mark-dirty
  input parameter arg1 :: <cairo-surface-t>;
  c-name: "cairo_surface_mark_dirty";
end;

define C-function cairo-surface-mark-dirty-rectangle
  input parameter arg1 :: <cairo-surface-t>;
  input parameter arg2 :: <C-signed-int>;
  input parameter arg3 :: <C-signed-int>;
  input parameter arg4 :: <C-signed-int>;
  input parameter arg5 :: <C-signed-int>;
  c-name: "cairo_surface_mark_dirty_rectangle";
end;

define C-function cairo-surface-set-device-offset
  input parameter arg1 :: <cairo-surface-t>;
  input parameter arg2 :: <C-double>;
  input parameter arg3 :: <C-double>;
  c-name: "cairo_surface_set_device_offset";
end;

define C-function cairo-surface-get-device-offset
  input parameter arg1 :: <cairo-surface-t>;
  input parameter arg2 :: <double*>;
  input parameter arg3 :: <double*>;
  c-name: "cairo_surface_get_device_offset";
end;

define C-function cairo-surface-set-fallback-resolution
  input parameter arg1 :: <cairo-surface-t>;
  input parameter arg2 :: <C-double>;
  input parameter arg3 :: <C-double>;
  c-name: "cairo_surface_set_fallback_resolution";
end;

define constant <_cairo-format> = <C-int>;
define constant $CAIRO-FORMAT-ARGB32 = 0;
define constant $CAIRO-FORMAT-RGB24 = 1;
define constant $CAIRO-FORMAT-A8 = 2;
define constant $CAIRO-FORMAT-A1 = 3;

define constant <cairo-format-t> = <_cairo-format>;

define C-function cairo-image-surface-create
  input parameter arg1 :: <cairo-format-t>;
  input parameter arg2 :: <C-signed-int>;
  input parameter arg3 :: <C-signed-int>;
  result res :: <cairo-surface-t>;
  c-name: "cairo_image_surface_create";
end;

define C-function cairo-image-surface-create-for-data
  input parameter arg1 :: <unsigned-char*>;
  input parameter arg2 :: <cairo-format-t>;
  input parameter arg3 :: <C-signed-int>;
  input parameter arg4 :: <C-signed-int>;
  input parameter arg5 :: <C-signed-int>;
  result res :: <cairo-surface-t>;
  c-name: "cairo_image_surface_create_for_data";
end;

define C-function cairo-image-surface-get-data
  input parameter arg1 :: <cairo-surface-t>;
  result res :: <unsigned-char*>;
  c-name: "cairo_image_surface_get_data";
end;

define C-function cairo-image-surface-get-format
  input parameter arg1 :: <cairo-surface-t>;
  result res :: <cairo-format-t>;
  c-name: "cairo_image_surface_get_format";
end;

define C-function cairo-image-surface-get-width
  input parameter arg1 :: <cairo-surface-t>;
  result res :: <C-signed-int>;
  c-name: "cairo_image_surface_get_width";
end;

define C-function cairo-image-surface-get-height
  input parameter arg1 :: <cairo-surface-t>;
  result res :: <C-signed-int>;
  c-name: "cairo_image_surface_get_height";
end;

define C-function cairo-image-surface-get-stride
  input parameter arg1 :: <cairo-surface-t>;
  result res :: <C-signed-int>;
  c-name: "cairo_image_surface_get_stride";
end;

define C-function cairo-image-surface-create-from-png
  input parameter arg1 :: <char*>;
  result res :: <cairo-surface-t>;
  c-name: "cairo_image_surface_create_from_png";
end;

define C-function cairo-image-surface-create-from-png-stream
  input parameter arg1 :: <cairo-read-func-t>;
  input parameter arg2 :: <C-void*>;
  result res :: <cairo-surface-t>;
  c-name: "cairo_image_surface_create_from_png_stream";
end;

define C-function cairo-pattern-create-rgb
  input parameter arg1 :: <C-double>;
  input parameter arg2 :: <C-double>;
  input parameter arg3 :: <C-double>;
  result res :: <cairo-pattern-t>;
  c-name: "cairo_pattern_create_rgb";
end;

define C-function cairo-pattern-create-rgba
  input parameter arg1 :: <C-double>;
  input parameter arg2 :: <C-double>;
  input parameter arg3 :: <C-double>;
  input parameter arg4 :: <C-double>;
  result res :: <cairo-pattern-t>;
  c-name: "cairo_pattern_create_rgba";
end;

define C-function cairo-pattern-create-for-surface
  input parameter arg1 :: <cairo-surface-t>;
  result res :: <cairo-pattern-t>;
  c-name: "cairo_pattern_create_for_surface";
end;

define C-function cairo-pattern-create-linear
  input parameter arg1 :: <C-double>;
  input parameter arg2 :: <C-double>;
  input parameter arg3 :: <C-double>;
  input parameter arg4 :: <C-double>;
  result res :: <cairo-pattern-t>;
  c-name: "cairo_pattern_create_linear";
end;

define C-function cairo-pattern-create-radial
  input parameter arg1 :: <C-double>;
  input parameter arg2 :: <C-double>;
  input parameter arg3 :: <C-double>;
  input parameter arg4 :: <C-double>;
  input parameter arg5 :: <C-double>;
  input parameter arg6 :: <C-double>;
  result res :: <cairo-pattern-t>;
  c-name: "cairo_pattern_create_radial";
end;

define C-function cairo-pattern-reference
  input parameter arg1 :: <cairo-pattern-t>;
  result res :: <cairo-pattern-t>;
  c-name: "cairo_pattern_reference";
end;

define C-function cairo-pattern-destroy
  input parameter arg1 :: <cairo-pattern-t>;
  c-name: "cairo_pattern_destroy";
end;

define C-function cairo-pattern-get-reference-count
  input parameter arg1 :: <cairo-pattern-t>;
  result res :: <C-unsigned-int>;
  c-name: "cairo_pattern_get_reference_count";
end;

define C-function cairo-pattern-status
  input parameter arg1 :: <cairo-pattern-t>;
  result res :: <cairo-status-t>;
  c-name: "cairo_pattern_status";
end;

define C-function cairo-pattern-get-user-data
  input parameter arg1 :: <cairo-pattern-t>;
  input parameter arg2 :: <cairo-user-data-key-t>;
  result res :: <C-void*>;
  c-name: "cairo_pattern_get_user_data";
end;

define C-function cairo-pattern-set-user-data
  input parameter arg1 :: <cairo-pattern-t>;
  input parameter arg2 :: <cairo-user-data-key-t>;
  input parameter arg3 :: <C-void*>;
  input parameter arg4 :: <cairo-destroy-func-t>;
  result res :: <cairo-status-t>;
  c-name: "cairo_pattern_set_user_data";
end;

define constant <_cairo-pattern-type> = <C-int>;
define constant $CAIRO-PATTERN-TYPE-SOLID = 0;
define constant $CAIRO-PATTERN-TYPE-SURFACE = 1;
define constant $CAIRO-PATTERN-TYPE-LINEAR = 2;
define constant $CAIRO-PATTERN-TYPE-RADIAL = 3;

define constant <cairo-pattern-type-t> = <_cairo-pattern-type>;

define C-function cairo-pattern-get-type
  input parameter arg1 :: <cairo-pattern-t>;
  result res :: <cairo-pattern-type-t>;
  c-name: "cairo_pattern_get_type";
end;

define C-function cairo-pattern-add-color-stop-rgb
  input parameter arg1 :: <cairo-pattern-t>;
  input parameter arg2 :: <C-double>;
  input parameter arg3 :: <C-double>;
  input parameter arg4 :: <C-double>;
  input parameter arg5 :: <C-double>;
  c-name: "cairo_pattern_add_color_stop_rgb";
end;

define C-function cairo-pattern-add-color-stop-rgba
  input parameter arg1 :: <cairo-pattern-t>;
  input parameter arg2 :: <C-double>;
  input parameter arg3 :: <C-double>;
  input parameter arg4 :: <C-double>;
  input parameter arg5 :: <C-double>;
  input parameter arg6 :: <C-double>;
  c-name: "cairo_pattern_add_color_stop_rgba";
end;

define C-function cairo-pattern-set-matrix
  input parameter arg1 :: <cairo-pattern-t>;
  input parameter arg2 :: <cairo-matrix-t>;
  c-name: "cairo_pattern_set_matrix";
end;

define C-function cairo-pattern-get-matrix
  input parameter arg1 :: <cairo-pattern-t>;
  input parameter arg2 :: <cairo-matrix-t>;
  c-name: "cairo_pattern_get_matrix";
end;

define constant <_cairo-extend> = <C-int>;
define constant $CAIRO-EXTEND-NONE = 0;
define constant $CAIRO-EXTEND-REPEAT = 1;
define constant $CAIRO-EXTEND-REFLECT = 2;
define constant $CAIRO-EXTEND-PAD = 3;

define constant <cairo-extend-t> = <_cairo-extend>;

define C-function cairo-pattern-set-extend
  input parameter arg1 :: <cairo-pattern-t>;
  input parameter arg2 :: <cairo-extend-t>;
  c-name: "cairo_pattern_set_extend";
end;

define C-function cairo-pattern-get-extend
  input parameter arg1 :: <cairo-pattern-t>;
  result res :: <cairo-extend-t>;
  c-name: "cairo_pattern_get_extend";
end;

define constant <_cairo-filter> = <C-int>;
define constant $CAIRO-FILTER-FAST = 0;
define constant $CAIRO-FILTER-GOOD = 1;
define constant $CAIRO-FILTER-BEST = 2;
define constant $CAIRO-FILTER-NEAREST = 3;
define constant $CAIRO-FILTER-BILINEAR = 4;
define constant $CAIRO-FILTER-GAUSSIAN = 5;

define constant <cairo-filter-t> = <_cairo-filter>;

define C-function cairo-pattern-set-filter
  input parameter arg1 :: <cairo-pattern-t>;
  input parameter arg2 :: <cairo-filter-t>;
  c-name: "cairo_pattern_set_filter";
end;

define C-function cairo-pattern-get-filter
  input parameter arg1 :: <cairo-pattern-t>;
  result res :: <cairo-filter-t>;
  c-name: "cairo_pattern_get_filter";
end;

define C-function cairo-pattern-get-rgba
  input parameter arg1 :: <cairo-pattern-t>;
  input parameter arg2 :: <double*>;
  input parameter arg3 :: <double*>;
  input parameter arg4 :: <double*>;
  input parameter arg5 :: <double*>;
  result res :: <cairo-status-t>;
  c-name: "cairo_pattern_get_rgba";
end;

define C-pointer-type <cairo-surface-t*> => <cairo-surface-t>;
define C-function cairo-pattern-get-surface
  input parameter arg1 :: <cairo-pattern-t>;
  input parameter arg2 :: <cairo-surface-t*>;
  result res :: <cairo-status-t>;
  c-name: "cairo_pattern_get_surface";
end;

define C-function cairo-pattern-get-color-stop-rgba
  input parameter arg1 :: <cairo-pattern-t>;
  input parameter arg2 :: <C-signed-int>;
  input parameter arg3 :: <double*>;
  input parameter arg4 :: <double*>;
  input parameter arg5 :: <double*>;
  input parameter arg6 :: <double*>;
  input parameter arg7 :: <double*>;
  result res :: <cairo-status-t>;
  c-name: "cairo_pattern_get_color_stop_rgba";
end;

define C-function cairo-pattern-get-color-stop-count
  input parameter arg1 :: <cairo-pattern-t>;
  input parameter arg2 :: <int*>;
  result res :: <cairo-status-t>;
  c-name: "cairo_pattern_get_color_stop_count";
end;

define C-function cairo-pattern-get-linear-points
  input parameter arg1 :: <cairo-pattern-t>;
  input parameter arg2 :: <double*>;
  input parameter arg3 :: <double*>;
  input parameter arg4 :: <double*>;
  input parameter arg5 :: <double*>;
  result res :: <cairo-status-t>;
  c-name: "cairo_pattern_get_linear_points";
end;

define C-function cairo-pattern-get-radial-circles
  input parameter arg1 :: <cairo-pattern-t>;
  input parameter arg2 :: <double*>;
  input parameter arg3 :: <double*>;
  input parameter arg4 :: <double*>;
  input parameter arg5 :: <double*>;
  input parameter arg6 :: <double*>;
  input parameter arg7 :: <double*>;
  result res :: <cairo-status-t>;
  c-name: "cairo_pattern_get_radial_circles";
end;

define C-function cairo-matrix-init
  input parameter arg1 :: <cairo-matrix-t>;
  input parameter arg2 :: <C-double>;
  input parameter arg3 :: <C-double>;
  input parameter arg4 :: <C-double>;
  input parameter arg5 :: <C-double>;
  input parameter arg6 :: <C-double>;
  input parameter arg7 :: <C-double>;
  c-name: "cairo_matrix_init";
end;

define C-function cairo-matrix-init-identity
  input parameter arg1 :: <cairo-matrix-t>;
  c-name: "cairo_matrix_init_identity";
end;

define C-function cairo-matrix-init-translate
  input parameter arg1 :: <cairo-matrix-t>;
  input parameter arg2 :: <C-double>;
  input parameter arg3 :: <C-double>;
  c-name: "cairo_matrix_init_translate";
end;

define C-function cairo-matrix-init-scale
  input parameter arg1 :: <cairo-matrix-t>;
  input parameter arg2 :: <C-double>;
  input parameter arg3 :: <C-double>;
  c-name: "cairo_matrix_init_scale";
end;

define C-function cairo-matrix-init-rotate
  input parameter arg1 :: <cairo-matrix-t>;
  input parameter arg2 :: <C-double>;
  c-name: "cairo_matrix_init_rotate";
end;

define C-function cairo-matrix-translate
  input parameter arg1 :: <cairo-matrix-t>;
  input parameter arg2 :: <C-double>;
  input parameter arg3 :: <C-double>;
  c-name: "cairo_matrix_translate";
end;

define C-function cairo-matrix-scale
  input parameter arg1 :: <cairo-matrix-t>;
  input parameter arg2 :: <C-double>;
  input parameter arg3 :: <C-double>;
  c-name: "cairo_matrix_scale";
end;

define C-function cairo-matrix-rotate
  input parameter arg1 :: <cairo-matrix-t>;
  input parameter arg2 :: <C-double>;
  c-name: "cairo_matrix_rotate";
end;

define C-function cairo-matrix-invert
  input parameter arg1 :: <cairo-matrix-t>;
  result res :: <cairo-status-t>;
  c-name: "cairo_matrix_invert";
end;

define C-function cairo-matrix-multiply
  input parameter arg1 :: <cairo-matrix-t>;
  input parameter arg2 :: <cairo-matrix-t>;
  input parameter arg3 :: <cairo-matrix-t>;
  c-name: "cairo_matrix_multiply";
end;

define C-function cairo-matrix-transform-distance
  input parameter arg1 :: <cairo-matrix-t>;
  input parameter arg2 :: <double*>;
  input parameter arg3 :: <double*>;
  c-name: "cairo_matrix_transform_distance";
end;

define C-function cairo-matrix-transform-point
  input parameter arg1 :: <cairo-matrix-t>;
  input parameter arg2 :: <double*>;
  input parameter arg3 :: <double*>;
  c-name: "cairo_matrix_transform_point";
end;

define C-function cairo-debug-reset-static-data
  c-name: "cairo_debug_reset_static_data";
end;

define constant $CAIRO-VERSION = 10410;

define constant $CAIRO-FORMAT-RGB16-565 = 4;

define constant $CAIRO-VERSION-MAJOR = 1;

define constant $CAIRO-VERSION-MINOR = 4;

define constant $CAIRO-VERSION-MICRO = 10;

define constant $CAIRO-VERSION-STRING = "1.4.10";

define constant $CAIRO-HAS-SVG-SURFACE = 1;

define constant $CAIRO-HAS-PDF-SURFACE = 1;

define constant $CAIRO-HAS-PS-SURFACE = 1;

define constant $CAIRO-HAS-FT-FONT = 1;

define constant $CAIRO-HAS-PNG-FUNCTIONS = 1;

define constant $CAIRO-HAS-XLIB-XRENDER-SURFACE = 1;

define constant $CAIRO-HAS-XLIB-SURFACE = 1;

define C-function gdk-drawable-get-type
  result res :: <GType>;
  c-name: "gdk_drawable_get_type";
end;

define C-function gdk-drawable-set-data
  input parameter arg1 :: <GdkDrawable>;
  input parameter arg2 :: <gchar*>;
  input parameter arg3 :: <gpointer>;
  input parameter arg4 :: <GDestroyNotify>;
  c-name: "gdk_drawable_set_data";
end;

define C-function gdk-drawable-get-data
  input parameter arg1 :: <GdkDrawable>;
  input parameter arg2 :: <gchar*>;
  result res :: <gpointer>;
  c-name: "gdk_drawable_get_data";
end;

define C-function gdk-drawable-get-depth
  input parameter arg1 :: <GdkDrawable>;
  result res :: <gint>;
  c-name: "gdk_drawable_get_depth";
end;

define C-function gdk-drawable-get-screen
  input parameter arg1 :: <GdkDrawable>;
  result res :: <GdkScreen>;
  c-name: "gdk_drawable_get_screen";
end;

define C-function gdk-drawable-get-display
  input parameter arg1 :: <GdkDrawable>;
  result res :: <GdkDisplay>;
  c-name: "gdk_drawable_get_display";
end;

define C-function gdk-draw-point
  input parameter arg1 :: <GdkDrawable>;
  input parameter arg2 :: <GdkGC>;
  input parameter arg3 :: <gint>;
  input parameter arg4 :: <gint>;
  c-name: "gdk_draw_point";
end;

define C-function gdk-draw-line
  input parameter arg1 :: <GdkDrawable>;
  input parameter arg2 :: <GdkGC>;
  input parameter arg3 :: <gint>;
  input parameter arg4 :: <gint>;
  input parameter arg5 :: <gint>;
  input parameter arg6 :: <gint>;
  c-name: "gdk_draw_line";
end;

define C-function gdk-draw-rectangle
  input parameter arg1 :: <GdkDrawable>;
  input parameter arg2 :: <GdkGC>;
  input parameter arg3 :: <gboolean>;
  input parameter arg4 :: <gint>;
  input parameter arg5 :: <gint>;
  input parameter arg6 :: <gint>;
  input parameter arg7 :: <gint>;
  c-name: "gdk_draw_rectangle";
end;

define C-function gdk-draw-arc
  input parameter arg1 :: <GdkDrawable>;
  input parameter arg2 :: <GdkGC>;
  input parameter arg3 :: <gboolean>;
  input parameter arg4 :: <gint>;
  input parameter arg5 :: <gint>;
  input parameter arg6 :: <gint>;
  input parameter arg7 :: <gint>;
  input parameter arg8 :: <gint>;
  input parameter arg9 :: <gint>;
  c-name: "gdk_draw_arc";
end;

define C-function gdk-draw-polygon
  input parameter arg1 :: <GdkDrawable>;
  input parameter arg2 :: <GdkGC>;
  input parameter arg3 :: <gboolean>;
  input parameter arg4 :: <GdkPoint>;
  input parameter arg5 :: <gint>;
  c-name: "gdk_draw_polygon";
end;

define C-function gdk-draw-string
  input parameter arg1 :: <GdkDrawable>;
  input parameter arg2 :: <GdkFont>;
  input parameter arg3 :: <GdkGC>;
  input parameter arg4 :: <gint>;
  input parameter arg5 :: <gint>;
  input parameter arg6 :: <gchar*>;
  c-name: "gdk_draw_string";
end;

define C-function gdk-draw-text
  input parameter arg1 :: <GdkDrawable>;
  input parameter arg2 :: <GdkFont>;
  input parameter arg3 :: <GdkGC>;
  input parameter arg4 :: <gint>;
  input parameter arg5 :: <gint>;
  input parameter arg6 :: <gchar*>;
  input parameter arg7 :: <gint>;
  c-name: "gdk_draw_text";
end;

define C-function gdk-draw-text-wc
  input parameter arg1 :: <GdkDrawable>;
  input parameter arg2 :: <GdkFont>;
  input parameter arg3 :: <GdkGC>;
  input parameter arg4 :: <gint>;
  input parameter arg5 :: <gint>;
  input parameter arg6 :: <GdkWChar*>;
  input parameter arg7 :: <gint>;
  c-name: "gdk_draw_text_wc";
end;

define C-function gdk-draw-drawable
  input parameter arg1 :: <GdkDrawable>;
  input parameter arg2 :: <GdkGC>;
  input parameter arg3 :: <GdkDrawable>;
  input parameter arg4 :: <gint>;
  input parameter arg5 :: <gint>;
  input parameter arg6 :: <gint>;
  input parameter arg7 :: <gint>;
  input parameter arg8 :: <gint>;
  input parameter arg9 :: <gint>;
  c-name: "gdk_draw_drawable";
end;

define C-function gdk-draw-image
  input parameter arg1 :: <GdkDrawable>;
  input parameter arg2 :: <GdkGC>;
  input parameter arg3 :: <GdkImage>;
  input parameter arg4 :: <gint>;
  input parameter arg5 :: <gint>;
  input parameter arg6 :: <gint>;
  input parameter arg7 :: <gint>;
  input parameter arg8 :: <gint>;
  input parameter arg9 :: <gint>;
  c-name: "gdk_draw_image";
end;

define C-function gdk-draw-points
  input parameter arg1 :: <GdkDrawable>;
  input parameter arg2 :: <GdkGC>;
  input parameter arg3 :: <GdkPoint>;
  input parameter arg4 :: <gint>;
  c-name: "gdk_draw_points";
end;

define C-function gdk-draw-segments
  input parameter arg1 :: <GdkDrawable>;
  input parameter arg2 :: <GdkGC>;
  input parameter arg3 :: <GdkSegment>;
  input parameter arg4 :: <gint>;
  c-name: "gdk_draw_segments";
end;

define C-function gdk-draw-lines
  input parameter arg1 :: <GdkDrawable>;
  input parameter arg2 :: <GdkGC>;
  input parameter arg3 :: <GdkPoint>;
  input parameter arg4 :: <gint>;
  c-name: "gdk_draw_lines";
end;

define C-function gdk-draw-pixbuf
  input parameter arg1 :: <GdkDrawable>;
  input parameter arg2 :: <GdkGC>;
  input parameter arg3 :: <GdkPixbuf>;
  input parameter arg4 :: <gint>;
  input parameter arg5 :: <gint>;
  input parameter arg6 :: <gint>;
  input parameter arg7 :: <gint>;
  input parameter arg8 :: <gint>;
  input parameter arg9 :: <gint>;
  input parameter arg10 :: <GdkRgbDither>;
  input parameter arg11 :: <gint>;
  input parameter arg12 :: <gint>;
  c-name: "gdk_draw_pixbuf";
end;

define C-function gdk-draw-glyphs
  input parameter arg1 :: <GdkDrawable>;
  input parameter arg2 :: <GdkGC>;
  input parameter arg3 :: <PangoFont>;
  input parameter arg4 :: <gint>;
  input parameter arg5 :: <gint>;
  input parameter arg6 :: <PangoGlyphString>;
  c-name: "gdk_draw_glyphs";
end;

define C-function gdk-draw-layout-line
  input parameter arg1 :: <GdkDrawable>;
  input parameter arg2 :: <GdkGC>;
  input parameter arg3 :: <gint>;
  input parameter arg4 :: <gint>;
  input parameter arg5 :: <PangoLayoutLine>;
  c-name: "gdk_draw_layout_line";
end;

define C-function gdk-draw-layout
  input parameter arg1 :: <GdkDrawable>;
  input parameter arg2 :: <GdkGC>;
  input parameter arg3 :: <gint>;
  input parameter arg4 :: <gint>;
  input parameter arg5 :: <PangoLayout>;
  c-name: "gdk_draw_layout";
end;

define C-function gdk-draw-layout-line-with-colors
  input parameter arg1 :: <GdkDrawable>;
  input parameter arg2 :: <GdkGC>;
  input parameter arg3 :: <gint>;
  input parameter arg4 :: <gint>;
  input parameter arg5 :: <PangoLayoutLine>;
  input parameter arg6 :: <GdkColor>;
  input parameter arg7 :: <GdkColor>;
  c-name: "gdk_draw_layout_line_with_colors";
end;

define C-function gdk-draw-layout-with-colors
  input parameter arg1 :: <GdkDrawable>;
  input parameter arg2 :: <GdkGC>;
  input parameter arg3 :: <gint>;
  input parameter arg4 :: <gint>;
  input parameter arg5 :: <PangoLayout>;
  input parameter arg6 :: <GdkColor>;
  input parameter arg7 :: <GdkColor>;
  c-name: "gdk_draw_layout_with_colors";
end;

define C-function gdk-draw-glyphs-transformed
  input parameter arg1 :: <GdkDrawable>;
  input parameter arg2 :: <GdkGC>;
  input parameter arg3 :: <PangoMatrix>;
  input parameter arg4 :: <PangoFont>;
  input parameter arg5 :: <gint>;
  input parameter arg6 :: <gint>;
  input parameter arg7 :: <PangoGlyphString>;
  c-name: "gdk_draw_glyphs_transformed";
end;

define C-function gdk-draw-trapezoids
  input parameter arg1 :: <GdkDrawable>;
  input parameter arg2 :: <GdkGC>;
  input parameter arg3 :: <GdkTrapezoid>;
  input parameter arg4 :: <gint>;
  c-name: "gdk_draw_trapezoids";
end;

define C-function gdk-drawable-get-image
  input parameter arg1 :: <GdkDrawable>;
  input parameter arg2 :: <gint>;
  input parameter arg3 :: <gint>;
  input parameter arg4 :: <gint>;
  input parameter arg5 :: <gint>;
  result res :: <GdkImage>;
  c-name: "gdk_drawable_get_image";
end;

define C-function gdk-drawable-copy-to-image
  input parameter arg1 :: <GdkDrawable>;
  input parameter arg2 :: <GdkImage>;
  input parameter arg3 :: <gint>;
  input parameter arg4 :: <gint>;
  input parameter arg5 :: <gint>;
  input parameter arg6 :: <gint>;
  input parameter arg7 :: <gint>;
  input parameter arg8 :: <gint>;
  result res :: <GdkImage>;
  c-name: "gdk_drawable_copy_to_image";
end;

define C-function gdk-drawable-get-clip-region
  input parameter arg1 :: <GdkDrawable>;
  result res :: <GdkRegion>;
  c-name: "gdk_drawable_get_clip_region";
end;

define C-function gdk-drawable-get-visible-region
  input parameter arg1 :: <GdkDrawable>;
  result res :: <GdkRegion>;
  c-name: "gdk_drawable_get_visible_region";
end;

define constant gdk-draw-pixmap = gdk-draw-drawable;

define constant gdk-draw-bitmap = gdk-draw-drawable;

define C-function gdk-pixbuf-alpha-mode-get-type
  result res :: <GType>;
  c-name: "gdk_pixbuf_alpha_mode_get_type";
end;

define C-function gdk-colorspace-get-type
  result res :: <GType>;
  c-name: "gdk_colorspace_get_type";
end;

define C-function gdk-pixbuf-error-get-type
  result res :: <GType>;
  c-name: "gdk_pixbuf_error_get_type";
end;

define C-function gdk-interp-type-get-type
  result res :: <GType>;
  c-name: "gdk_interp_type_get_type";
end;

define C-function gdk-pixbuf-rotation-get-type
  result res :: <GType>;
  c-name: "gdk_pixbuf_rotation_get_type";
end;

define C-subtype <_GdkPixbufLoader> (<_GObject>) end;
define constant <GdkPixbufLoader> = <_GdkPixbufLoader>;

define constant <anonymous-2564> = <C-function-pointer>;
define constant <anonymous-2565> = <C-function-pointer>;
define constant <anonymous-2566> = <C-function-pointer>;
define constant <anonymous-2567> = <C-function-pointer>;
define C-struct <_GdkPixbufLoaderClass>
  slot GdkPixbufLoaderClass-parent-class :: <_GObjectClass>;
  slot GdkPixbufLoaderClass-size-prepared :: <anonymous-2564>;
  slot GdkPixbufLoaderClass-area-prepared :: <anonymous-2565>;
  slot GdkPixbufLoaderClass-area-updated :: <anonymous-2566>;
  slot GdkPixbufLoaderClass-closed :: <anonymous-2567>;
end;

define C-pointer-type <GdkPixbufLoaderClass> => <_GdkPixbufLoaderClass>;

define C-function gdk-pixbuf-loader-get-type
  result res :: <GType>;
  c-name: "gdk_pixbuf_loader_get_type";
end;

define C-function gdk-pixbuf-loader-new
  result res :: <GdkPixbufLoader>;
  c-name: "gdk_pixbuf_loader_new";
end;

define C-function gdk-pixbuf-loader-new-with-type
  input parameter arg1 :: <char*>;
  input parameter arg2 :: <GError*>;
  result res :: <GdkPixbufLoader>;
  c-name: "gdk_pixbuf_loader_new_with_type";
end;

define C-function gdk-pixbuf-loader-new-with-mime-type
  input parameter arg1 :: <char*>;
  input parameter arg2 :: <GError*>;
  result res :: <GdkPixbufLoader>;
  c-name: "gdk_pixbuf_loader_new_with_mime_type";
end;

define C-function gdk-pixbuf-loader-set-size
  input parameter arg1 :: <GdkPixbufLoader>;
  input parameter arg2 :: <C-signed-int>;
  input parameter arg3 :: <C-signed-int>;
  c-name: "gdk_pixbuf_loader_set_size";
end;

define C-function gdk-pixbuf-loader-write
  input parameter arg1 :: <GdkPixbufLoader>;
  input parameter arg2 :: <guchar*>;
  input parameter arg3 :: <gsize>;
  input parameter arg4 :: <GError*>;
  result res :: <gboolean>;
  c-name: "gdk_pixbuf_loader_write";
end;

define C-function gdk-pixbuf-loader-get-pixbuf
  input parameter arg1 :: <GdkPixbufLoader>;
  result res :: <GdkPixbuf>;
  c-name: "gdk_pixbuf_loader_get_pixbuf";
end;

define C-subtype <_GdkPixbufAnimation> (<_GObject>) end;
define constant <GdkPixbufAnimation> = <_GdkPixbufAnimation>;

define C-function gdk-pixbuf-loader-get-animation
  input parameter arg1 :: <GdkPixbufLoader>;
  result res :: <GdkPixbufAnimation>;
  c-name: "gdk_pixbuf_loader_get_animation";
end;

define C-function gdk-pixbuf-loader-close
  input parameter arg1 :: <GdkPixbufLoader>;
  input parameter arg2 :: <GError*>;
  result res :: <gboolean>;
  c-name: "gdk_pixbuf_loader_close";
end;

define C-struct <_GdkPixbufFormat>
end;

define C-pointer-type <GdkPixbufFormat> => <_GdkPixbufFormat>;

define C-function gdk-pixbuf-loader-get-format
  input parameter arg1 :: <GdkPixbufLoader>;
  result res :: <GdkPixbufFormat>;
  c-name: "gdk_pixbuf_loader_get_format";
end;

define C-function gdk-pixbuf-get-formats
  result res :: <GSList>;
  c-name: "gdk_pixbuf_get_formats";
end;

define C-function gdk-pixbuf-format-get-name
  input parameter arg1 :: <GdkPixbufFormat>;
  result res :: <gchar*>;
  c-name: "gdk_pixbuf_format_get_name";
end;

define C-function gdk-pixbuf-format-get-description
  input parameter arg1 :: <GdkPixbufFormat>;
  result res :: <gchar*>;
  c-name: "gdk_pixbuf_format_get_description";
end;

define C-function gdk-pixbuf-format-get-mime-types
  input parameter arg1 :: <GdkPixbufFormat>;
  result res :: <gchar**>;
  c-name: "gdk_pixbuf_format_get_mime_types";
end;

define C-function gdk-pixbuf-format-get-extensions
  input parameter arg1 :: <GdkPixbufFormat>;
  result res :: <gchar**>;
  c-name: "gdk_pixbuf_format_get_extensions";
end;

define C-function gdk-pixbuf-format-is-writable
  input parameter arg1 :: <GdkPixbufFormat>;
  result res :: <gboolean>;
  c-name: "gdk_pixbuf_format_is_writable";
end;

define C-function gdk-pixbuf-format-is-scalable
  input parameter arg1 :: <GdkPixbufFormat>;
  result res :: <gboolean>;
  c-name: "gdk_pixbuf_format_is_scalable";
end;

define C-function gdk-pixbuf-format-is-disabled
  input parameter arg1 :: <GdkPixbufFormat>;
  result res :: <gboolean>;
  c-name: "gdk_pixbuf_format_is_disabled";
end;

define C-function gdk-pixbuf-format-set-disabled
  input parameter arg1 :: <GdkPixbufFormat>;
  input parameter arg2 :: <gboolean>;
  c-name: "gdk_pixbuf_format_set_disabled";
end;

define C-function gdk-pixbuf-format-get-license
  input parameter arg1 :: <GdkPixbufFormat>;
  result res :: <gchar*>;
  c-name: "gdk_pixbuf_format_get_license";
end;

define C-function gdk-pixbuf-get-file-info
  input parameter arg1 :: <gchar*>;
  input parameter arg2 :: <gint*>;
  input parameter arg3 :: <gint*>;
  result res :: <GdkPixbufFormat>;
  c-name: "gdk_pixbuf_get_file_info";
end;

define C-subtype <_GdkPixbufAnimationIter> (<_GObject>) end;
define constant <GdkPixbufAnimationIter> = <_GdkPixbufAnimationIter>;

define C-function gdk-pixbuf-animation-get-type
  result res :: <GType>;
  c-name: "gdk_pixbuf_animation_get_type";
end;

define C-function gdk-pixbuf-animation-new-from-file
  input parameter arg1 :: <char*>;
  input parameter arg2 :: <GError*>;
  result res :: <GdkPixbufAnimation>;
  c-name: "gdk_pixbuf_animation_new_from_file";
end;

define C-function gdk-pixbuf-animation-ref
  input parameter arg1 :: <GdkPixbufAnimation>;
  result res :: <GdkPixbufAnimation>;
  c-name: "gdk_pixbuf_animation_ref";
end;

define C-function gdk-pixbuf-animation-unref
  input parameter arg1 :: <GdkPixbufAnimation>;
  c-name: "gdk_pixbuf_animation_unref";
end;

define C-function gdk-pixbuf-animation-get-width
  input parameter arg1 :: <GdkPixbufAnimation>;
  result res :: <C-signed-int>;
  c-name: "gdk_pixbuf_animation_get_width";
end;

define C-function gdk-pixbuf-animation-get-height
  input parameter arg1 :: <GdkPixbufAnimation>;
  result res :: <C-signed-int>;
  c-name: "gdk_pixbuf_animation_get_height";
end;

define C-function gdk-pixbuf-animation-is-static-image
  input parameter arg1 :: <GdkPixbufAnimation>;
  result res :: <gboolean>;
  c-name: "gdk_pixbuf_animation_is_static_image";
end;

define C-function gdk-pixbuf-animation-get-static-image
  input parameter arg1 :: <GdkPixbufAnimation>;
  result res :: <GdkPixbuf>;
  c-name: "gdk_pixbuf_animation_get_static_image";
end;

define C-function gdk-pixbuf-animation-get-iter
  input parameter arg1 :: <GdkPixbufAnimation>;
  input parameter arg2 :: <GTimeVal>;
  result res :: <GdkPixbufAnimationIter>;
  c-name: "gdk_pixbuf_animation_get_iter";
end;

define C-function gdk-pixbuf-animation-iter-get-type
  result res :: <GType>;
  c-name: "gdk_pixbuf_animation_iter_get_type";
end;

define C-function gdk-pixbuf-animation-iter-get-delay-time
  input parameter arg1 :: <GdkPixbufAnimationIter>;
  result res :: <C-signed-int>;
  c-name: "gdk_pixbuf_animation_iter_get_delay_time";
end;

define C-function gdk-pixbuf-animation-iter-get-pixbuf
  input parameter arg1 :: <GdkPixbufAnimationIter>;
  result res :: <GdkPixbuf>;
  c-name: "gdk_pixbuf_animation_iter_get_pixbuf";
end;

define C-function gdk-pixbuf-animation-iter-on-currently-loading-frame
  input parameter arg1 :: <GdkPixbufAnimationIter>;
  result res :: <gboolean>;
  c-name: "gdk_pixbuf_animation_iter_on_currently_loading_frame";
end;

define C-function gdk-pixbuf-animation-iter-advance
  input parameter arg1 :: <GdkPixbufAnimationIter>;
  input parameter arg2 :: <GTimeVal>;
  result res :: <gboolean>;
  c-name: "gdk_pixbuf_animation_iter_advance";
end;

define constant <GdkPixbufAlphaMode> = <C-int>;
define constant $GDK-PIXBUF-ALPHA-BILEVEL = 0;
define constant $GDK-PIXBUF-ALPHA-FULL = 1;

define constant <GdkColorspace> = <C-int>;
define constant $GDK-COLORSPACE-RGB = 0;

define constant <anonymous-2479> = <C-function-pointer>;
define constant <GdkPixbufDestroyNotify> = <anonymous-2479>;

define constant <GdkPixbufError> = <C-int>;
define constant $GDK-PIXBUF-ERROR-CORRUPT-IMAGE = 0;
define constant $GDK-PIXBUF-ERROR-INSUFFICIENT-MEMORY = 1;
define constant $GDK-PIXBUF-ERROR-BAD-OPTION = 2;
define constant $GDK-PIXBUF-ERROR-UNKNOWN-TYPE = 3;
define constant $GDK-PIXBUF-ERROR-UNSUPPORTED-OPERATION = 4;
define constant $GDK-PIXBUF-ERROR-FAILED = 5;

define C-function gdk-pixbuf-error-quark
  result res :: <GQuark>;
  c-name: "gdk_pixbuf_error_quark";
end;

define C-function gdk-pixbuf-get-type
  result res :: <GType>;
  c-name: "gdk_pixbuf_get_type";
end;

define C-function gdk-pixbuf-ref
  input parameter arg1 :: <GdkPixbuf>;
  result res :: <GdkPixbuf>;
  c-name: "gdk_pixbuf_ref";
end;

define C-function gdk-pixbuf-unref
  input parameter arg1 :: <GdkPixbuf>;
  c-name: "gdk_pixbuf_unref";
end;

define C-function gdk-pixbuf-get-colorspace
  input parameter arg1 :: <GdkPixbuf>;
  result res :: <GdkColorspace>;
  c-name: "gdk_pixbuf_get_colorspace";
end;

define C-function gdk-pixbuf-get-n-channels
  input parameter arg1 :: <GdkPixbuf>;
  result res :: <C-signed-int>;
  c-name: "gdk_pixbuf_get_n_channels";
end;

define C-function gdk-pixbuf-get-has-alpha
  input parameter arg1 :: <GdkPixbuf>;
  result res :: <gboolean>;
  c-name: "gdk_pixbuf_get_has_alpha";
end;

define C-function gdk-pixbuf-get-bits-per-sample
  input parameter arg1 :: <GdkPixbuf>;
  result res :: <C-signed-int>;
  c-name: "gdk_pixbuf_get_bits_per_sample";
end;

define C-function gdk-pixbuf-get-pixels
  input parameter arg1 :: <GdkPixbuf>;
  result res :: <guchar*>;
  c-name: "gdk_pixbuf_get_pixels";
end;

define C-function gdk-pixbuf-get-width
  input parameter arg1 :: <GdkPixbuf>;
  result res :: <C-signed-int>;
  c-name: "gdk_pixbuf_get_width";
end;

define C-function gdk-pixbuf-get-height
  input parameter arg1 :: <GdkPixbuf>;
  result res :: <C-signed-int>;
  c-name: "gdk_pixbuf_get_height";
end;

define C-function gdk-pixbuf-get-rowstride
  input parameter arg1 :: <GdkPixbuf>;
  result res :: <C-signed-int>;
  c-name: "gdk_pixbuf_get_rowstride";
end;

define C-function gdk-pixbuf-new
  input parameter arg1 :: <GdkColorspace>;
  input parameter arg2 :: <gboolean>;
  input parameter arg3 :: <C-signed-int>;
  input parameter arg4 :: <C-signed-int>;
  input parameter arg5 :: <C-signed-int>;
  result res :: <GdkPixbuf>;
  c-name: "gdk_pixbuf_new";
end;

define C-function gdk-pixbuf-copy
  input parameter arg1 :: <GdkPixbuf>;
  result res :: <GdkPixbuf>;
  c-name: "gdk_pixbuf_copy";
end;

define C-function gdk-pixbuf-new-subpixbuf
  input parameter arg1 :: <GdkPixbuf>;
  input parameter arg2 :: <C-signed-int>;
  input parameter arg3 :: <C-signed-int>;
  input parameter arg4 :: <C-signed-int>;
  input parameter arg5 :: <C-signed-int>;
  result res :: <GdkPixbuf>;
  c-name: "gdk_pixbuf_new_subpixbuf";
end;

define C-function gdk-pixbuf-new-from-file
  input parameter arg1 :: <char*>;
  input parameter arg2 :: <GError*>;
  result res :: <GdkPixbuf>;
  c-name: "gdk_pixbuf_new_from_file";
end;

define C-function gdk-pixbuf-new-from-file-at-size
  input parameter arg1 :: <char*>;
  input parameter arg2 :: <C-signed-int>;
  input parameter arg3 :: <C-signed-int>;
  input parameter arg4 :: <GError*>;
  result res :: <GdkPixbuf>;
  c-name: "gdk_pixbuf_new_from_file_at_size";
end;

define C-function gdk-pixbuf-new-from-file-at-scale
  input parameter arg1 :: <char*>;
  input parameter arg2 :: <C-signed-int>;
  input parameter arg3 :: <C-signed-int>;
  input parameter arg4 :: <gboolean>;
  input parameter arg5 :: <GError*>;
  result res :: <GdkPixbuf>;
  c-name: "gdk_pixbuf_new_from_file_at_scale";
end;

define C-function gdk-pixbuf-new-from-data
  input parameter arg1 :: <guchar*>;
  input parameter arg2 :: <GdkColorspace>;
  input parameter arg3 :: <gboolean>;
  input parameter arg4 :: <C-signed-int>;
  input parameter arg5 :: <C-signed-int>;
  input parameter arg6 :: <C-signed-int>;
  input parameter arg7 :: <C-signed-int>;
  input parameter arg8 :: <GdkPixbufDestroyNotify>;
  input parameter arg9 :: <gpointer>;
  result res :: <GdkPixbuf>;
  c-name: "gdk_pixbuf_new_from_data";
end;

define C-function gdk-pixbuf-new-from-xpm-data
  input parameter arg1 :: <c-string-vector>;
  result res :: <GdkPixbuf>;
  c-name: "gdk_pixbuf_new_from_xpm_data";
end;

define C-function gdk-pixbuf-new-from-inline
  input parameter arg1 :: <gint>;
  input parameter arg2 :: <guint8*>;
  input parameter arg3 :: <gboolean>;
  input parameter arg4 :: <GError*>;
  result res :: <GdkPixbuf>;
  c-name: "gdk_pixbuf_new_from_inline";
end;

define C-function gdk-pixbuf-fill
  input parameter arg1 :: <GdkPixbuf>;
  input parameter arg2 :: <guint32>;
  c-name: "gdk_pixbuf_fill";
end;

define C-function gdk-pixbuf-save
  input parameter arg1 :: <GdkPixbuf>;
  input parameter arg2 :: <char*>;
  input parameter arg3 :: <char*>;
  input parameter arg4 :: <GError*>;
  result res :: <gboolean>;
  c-name: "gdk_pixbuf_save";
end;

define C-function gdk-pixbuf-savev
  input parameter arg1 :: <GdkPixbuf>;
  input parameter arg2 :: <char*>;
  input parameter arg3 :: <char*>;
  input parameter arg4 :: <c-string-vector>;
  input parameter arg5 :: <c-string-vector>;
  input parameter arg6 :: <GError*>;
  result res :: <gboolean>;
  c-name: "gdk_pixbuf_savev";
end;

define constant <anonymous-2505> = <C-function-pointer>;
define constant <GdkPixbufSaveFunc> = <anonymous-2505>;

define C-function gdk-pixbuf-save-to-callback
  input parameter arg1 :: <GdkPixbuf>;
  input parameter arg2 :: <GdkPixbufSaveFunc>;
  input parameter arg3 :: <gpointer>;
  input parameter arg4 :: <char*>;
  input parameter arg5 :: <GError*>;
  result res :: <gboolean>;
  c-name: "gdk_pixbuf_save_to_callback";
end;

define C-function gdk-pixbuf-save-to-callbackv
  input parameter arg1 :: <GdkPixbuf>;
  input parameter arg2 :: <GdkPixbufSaveFunc>;
  input parameter arg3 :: <gpointer>;
  input parameter arg4 :: <char*>;
  input parameter arg5 :: <c-string-vector>;
  input parameter arg6 :: <c-string-vector>;
  input parameter arg7 :: <GError*>;
  result res :: <gboolean>;
  c-name: "gdk_pixbuf_save_to_callbackv";
end;

define C-function gdk-pixbuf-save-to-buffer
  input parameter arg1 :: <GdkPixbuf>;
  input parameter arg2 :: <gchar**>;
  input parameter arg3 :: <gsize*>;
  input parameter arg4 :: <char*>;
  input parameter arg5 :: <GError*>;
  result res :: <gboolean>;
  c-name: "gdk_pixbuf_save_to_buffer";
end;

define C-function gdk-pixbuf-save-to-bufferv
  input parameter arg1 :: <GdkPixbuf>;
  input parameter arg2 :: <gchar**>;
  input parameter arg3 :: <gsize*>;
  input parameter arg4 :: <char*>;
  input parameter arg5 :: <c-string-vector>;
  input parameter arg6 :: <c-string-vector>;
  input parameter arg7 :: <GError*>;
  result res :: <gboolean>;
  c-name: "gdk_pixbuf_save_to_bufferv";
end;

define C-function gdk-pixbuf-add-alpha
  input parameter arg1 :: <GdkPixbuf>;
  input parameter arg2 :: <gboolean>;
  input parameter arg3 :: <guchar>;
  input parameter arg4 :: <guchar>;
  input parameter arg5 :: <guchar>;
  result res :: <GdkPixbuf>;
  c-name: "gdk_pixbuf_add_alpha";
end;

define C-function gdk-pixbuf-copy-area
  input parameter arg1 :: <GdkPixbuf>;
  input parameter arg2 :: <C-signed-int>;
  input parameter arg3 :: <C-signed-int>;
  input parameter arg4 :: <C-signed-int>;
  input parameter arg5 :: <C-signed-int>;
  input parameter arg6 :: <GdkPixbuf>;
  input parameter arg7 :: <C-signed-int>;
  input parameter arg8 :: <C-signed-int>;
  c-name: "gdk_pixbuf_copy_area";
end;

define C-function gdk-pixbuf-saturate-and-pixelate
  input parameter arg1 :: <GdkPixbuf>;
  input parameter arg2 :: <GdkPixbuf>;
  input parameter arg3 :: <gfloat>;
  input parameter arg4 :: <gboolean>;
  c-name: "gdk_pixbuf_saturate_and_pixelate";
end;

define C-function gdk-pixbuf-apply-embedded-orientation
  input parameter arg1 :: <GdkPixbuf>;
  result res :: <GdkPixbuf>;
  c-name: "gdk_pixbuf_apply_embedded_orientation";
end;

define C-function gdk-pixbuf-get-option
  input parameter arg1 :: <GdkPixbuf>;
  input parameter arg2 :: <gchar*>;
  result res :: <gchar*>;
  c-name: "gdk_pixbuf_get_option";
end;

define constant <GModuleFlags> = <C-int>;
define constant $G-MODULE-BIND-LAZY = 1;
define constant $G-MODULE-BIND-LOCAL = 2;
define constant $G-MODULE-BIND-MASK = 3;

define C-struct <_GModule>
end;

define C-pointer-type <GModule> => <_GModule>;

define constant <anonymous-2543> = <C-function-pointer>;
define constant <GModuleCheckInit> = <anonymous-2543>;

define constant <anonymous-2544> = <C-function-pointer>;
define constant <GModuleUnload> = <anonymous-2544>;

define C-function g-module-supported
  result res :: <gboolean>;
  c-name: "g_module_supported";
end;

define C-function g-module-open
  input parameter arg1 :: <gchar*>;
  input parameter arg2 :: <GModuleFlags>;
  result res :: <GModule>;
  c-name: "g_module_open";
end;

define C-function g-module-close
  input parameter arg1 :: <GModule>;
  result res :: <gboolean>;
  c-name: "g_module_close";
end;

define C-function g-module-make-resident
  input parameter arg1 :: <GModule>;
  c-name: "g_module_make_resident";
end;

define C-function g-module-error
  result res :: <gchar*>;
  c-name: "g_module_error";
end;

define C-function g-module-symbol
  input parameter arg1 :: <GModule>;
  input parameter arg2 :: <gchar*>;
  input parameter arg3 :: <gpointer*>;
  result res :: <gboolean>;
  c-name: "g_module_symbol";
end;

define C-function g-module-name
  input parameter arg1 :: <GModule>;
  result res :: <gchar*>;
  c-name: "g_module_name";
end;

define C-function g-module-build-path
  input parameter arg1 :: <gchar*>;
  input parameter arg2 :: <gchar*>;
  result res :: <gchar*>;
  c-name: "g_module_build_path";
end;

define C-subtype <_GdkPixbufSimpleAnim> (<_GdkPixbufAnimation>) end;
define constant <GdkPixbufSimpleAnim> = <_GdkPixbufSimpleAnim>;

define C-struct <_GdkPixbufSimpleAnimClass>
end;

define C-pointer-type <GdkPixbufSimpleAnimClass> => <_GdkPixbufSimpleAnimClass>;

define C-function gdk-pixbuf-simple-anim-get-type
  result res :: <GType>;
  c-name: "gdk_pixbuf_simple_anim_get_type";
end;

define C-function gdk-pixbuf-simple-anim-iter-get-type
  result res :: <GType>;
  c-name: "gdk_pixbuf_simple_anim_iter_get_type";
end;

define C-function gdk-pixbuf-simple-anim-new
  input parameter arg1 :: <gint>;
  input parameter arg2 :: <gint>;
  input parameter arg3 :: <gfloat>;
  result res :: <GdkPixbufSimpleAnim>;
  c-name: "gdk_pixbuf_simple_anim_new";
end;

define C-function gdk-pixbuf-simple-anim-add-frame
  input parameter arg1 :: <GdkPixbufSimpleAnim>;
  input parameter arg2 :: <GdkPixbuf>;
  c-name: "gdk_pixbuf_simple_anim_add_frame";
end;

define constant <GdkInterpType> = <C-int>;
define constant $GDK-INTERP-NEAREST = 0;
define constant $GDK-INTERP-TILES = 1;
define constant $GDK-INTERP-BILINEAR = 2;
define constant $GDK-INTERP-HYPER = 3;

define constant <GdkPixbufRotation> = <C-int>;
define constant $GDK-PIXBUF-ROTATE-NONE = 0;
define constant $GDK-PIXBUF-ROTATE-COUNTERCLOCKWISE = 90;
define constant $GDK-PIXBUF-ROTATE-UPSIDEDOWN = 180;
define constant $GDK-PIXBUF-ROTATE-CLOCKWISE = 270;

define C-function gdk-pixbuf-scale
  input parameter arg1 :: <GdkPixbuf>;
  input parameter arg2 :: <GdkPixbuf>;
  input parameter arg3 :: <C-signed-int>;
  input parameter arg4 :: <C-signed-int>;
  input parameter arg5 :: <C-signed-int>;
  input parameter arg6 :: <C-signed-int>;
  input parameter arg7 :: <C-double>;
  input parameter arg8 :: <C-double>;
  input parameter arg9 :: <C-double>;
  input parameter arg10 :: <C-double>;
  input parameter arg11 :: <GdkInterpType>;
  c-name: "gdk_pixbuf_scale";
end;

define C-function gdk-pixbuf-composite
  input parameter arg1 :: <GdkPixbuf>;
  input parameter arg2 :: <GdkPixbuf>;
  input parameter arg3 :: <C-signed-int>;
  input parameter arg4 :: <C-signed-int>;
  input parameter arg5 :: <C-signed-int>;
  input parameter arg6 :: <C-signed-int>;
  input parameter arg7 :: <C-double>;
  input parameter arg8 :: <C-double>;
  input parameter arg9 :: <C-double>;
  input parameter arg10 :: <C-double>;
  input parameter arg11 :: <GdkInterpType>;
  input parameter arg12 :: <C-signed-int>;
  c-name: "gdk_pixbuf_composite";
end;

define C-function gdk-pixbuf-composite-color
  input parameter arg1 :: <GdkPixbuf>;
  input parameter arg2 :: <GdkPixbuf>;
  input parameter arg3 :: <C-signed-int>;
  input parameter arg4 :: <C-signed-int>;
  input parameter arg5 :: <C-signed-int>;
  input parameter arg6 :: <C-signed-int>;
  input parameter arg7 :: <C-double>;
  input parameter arg8 :: <C-double>;
  input parameter arg9 :: <C-double>;
  input parameter arg10 :: <C-double>;
  input parameter arg11 :: <GdkInterpType>;
  input parameter arg12 :: <C-signed-int>;
  input parameter arg13 :: <C-signed-int>;
  input parameter arg14 :: <C-signed-int>;
  input parameter arg15 :: <C-signed-int>;
  input parameter arg16 :: <guint32>;
  input parameter arg17 :: <guint32>;
  c-name: "gdk_pixbuf_composite_color";
end;

define C-function gdk-pixbuf-scale-simple
  input parameter arg1 :: <GdkPixbuf>;
  input parameter arg2 :: <C-signed-int>;
  input parameter arg3 :: <C-signed-int>;
  input parameter arg4 :: <GdkInterpType>;
  result res :: <GdkPixbuf>;
  c-name: "gdk_pixbuf_scale_simple";
end;

define C-function gdk-pixbuf-composite-color-simple
  input parameter arg1 :: <GdkPixbuf>;
  input parameter arg2 :: <C-signed-int>;
  input parameter arg3 :: <C-signed-int>;
  input parameter arg4 :: <GdkInterpType>;
  input parameter arg5 :: <C-signed-int>;
  input parameter arg6 :: <C-signed-int>;
  input parameter arg7 :: <guint32>;
  input parameter arg8 :: <guint32>;
  result res :: <GdkPixbuf>;
  c-name: "gdk_pixbuf_composite_color_simple";
end;

define C-function gdk-pixbuf-rotate-simple
  input parameter arg1 :: <GdkPixbuf>;
  input parameter arg2 :: <GdkPixbufRotation>;
  result res :: <GdkPixbuf>;
  c-name: "gdk_pixbuf_rotate_simple";
end;

define C-function gdk-pixbuf-flip
  input parameter arg1 :: <GdkPixbuf>;
  input parameter arg2 :: <gboolean>;
  result res :: <GdkPixbuf>;
  c-name: "gdk_pixbuf_flip";
end;

 /* Ignoring declaration for {instance of <variable-declaration>} "gdk-pixbuf-major-version"*/
 /* Ignoring declaration for {instance of <variable-declaration>} "gdk-pixbuf-minor-version"*/
 /* Ignoring declaration for {instance of <variable-declaration>} "gdk-pixbuf-micro-version"*/
 /* Ignoring declaration for {instance of <variable-declaration>} "gdk-pixbuf-version"*/
define constant $GDK-PIXBUF-FEATURES-H = 1;

define constant $GDK-PIXBUF-MAJOR = 2;

define constant $GDK-PIXBUF-MINOR = 12;

define constant $GDK-PIXBUF-MICRO = 0;

define constant $GDK-PIXBUF-VERSION = "2.12.0";

define constant <guint32<@256>> = <guint32*>;
define C-struct <_GdkRgbCmap>
  array slot GdkRgbCmap-colors :: <guint32>, length: 256;
  slot GdkRgbCmap-n-colors :: <C-signed-int>;
  slot GdkRgbCmap-info-list :: <GSList>;
end;

define C-pointer-type <GdkRgbCmap> => <_GdkRgbCmap>;

define C-function gdk-rgb-init
  c-name: "gdk_rgb_init";
end;

define C-function gdk-rgb-xpixel-from-rgb
  input parameter arg1 :: <guint32>;
  result res :: <gulong>;
  c-name: "gdk_rgb_xpixel_from_rgb";
end;

define C-function gdk-rgb-gc-set-foreground
  input parameter arg1 :: <GdkGC>;
  input parameter arg2 :: <guint32>;
  c-name: "gdk_rgb_gc_set_foreground";
end;

define C-function gdk-rgb-gc-set-background
  input parameter arg1 :: <GdkGC>;
  input parameter arg2 :: <guint32>;
  c-name: "gdk_rgb_gc_set_background";
end;

define C-function gdk-rgb-find-color
  input parameter arg1 :: <GdkColormap>;
  input parameter arg2 :: <GdkColor>;
  c-name: "gdk_rgb_find_color";
end;

define C-function gdk-draw-rgb-image
  input parameter arg1 :: <GdkDrawable>;
  input parameter arg2 :: <GdkGC>;
  input parameter arg3 :: <gint>;
  input parameter arg4 :: <gint>;
  input parameter arg5 :: <gint>;
  input parameter arg6 :: <gint>;
  input parameter arg7 :: <GdkRgbDither>;
  input parameter arg8 :: <guchar*>;
  input parameter arg9 :: <gint>;
  c-name: "gdk_draw_rgb_image";
end;

define C-function gdk-draw-rgb-image-dithalign
  input parameter arg1 :: <GdkDrawable>;
  input parameter arg2 :: <GdkGC>;
  input parameter arg3 :: <gint>;
  input parameter arg4 :: <gint>;
  input parameter arg5 :: <gint>;
  input parameter arg6 :: <gint>;
  input parameter arg7 :: <GdkRgbDither>;
  input parameter arg8 :: <guchar*>;
  input parameter arg9 :: <gint>;
  input parameter arg10 :: <gint>;
  input parameter arg11 :: <gint>;
  c-name: "gdk_draw_rgb_image_dithalign";
end;

define C-function gdk-draw-rgb-32-image
  input parameter arg1 :: <GdkDrawable>;
  input parameter arg2 :: <GdkGC>;
  input parameter arg3 :: <gint>;
  input parameter arg4 :: <gint>;
  input parameter arg5 :: <gint>;
  input parameter arg6 :: <gint>;
  input parameter arg7 :: <GdkRgbDither>;
  input parameter arg8 :: <guchar*>;
  input parameter arg9 :: <gint>;
  c-name: "gdk_draw_rgb_32_image";
end;

define C-function gdk-draw-rgb-32-image-dithalign
  input parameter arg1 :: <GdkDrawable>;
  input parameter arg2 :: <GdkGC>;
  input parameter arg3 :: <gint>;
  input parameter arg4 :: <gint>;
  input parameter arg5 :: <gint>;
  input parameter arg6 :: <gint>;
  input parameter arg7 :: <GdkRgbDither>;
  input parameter arg8 :: <guchar*>;
  input parameter arg9 :: <gint>;
  input parameter arg10 :: <gint>;
  input parameter arg11 :: <gint>;
  c-name: "gdk_draw_rgb_32_image_dithalign";
end;

define C-function gdk-draw-gray-image
  input parameter arg1 :: <GdkDrawable>;
  input parameter arg2 :: <GdkGC>;
  input parameter arg3 :: <gint>;
  input parameter arg4 :: <gint>;
  input parameter arg5 :: <gint>;
  input parameter arg6 :: <gint>;
  input parameter arg7 :: <GdkRgbDither>;
  input parameter arg8 :: <guchar*>;
  input parameter arg9 :: <gint>;
  c-name: "gdk_draw_gray_image";
end;

define C-function gdk-draw-indexed-image
  input parameter arg1 :: <GdkDrawable>;
  input parameter arg2 :: <GdkGC>;
  input parameter arg3 :: <gint>;
  input parameter arg4 :: <gint>;
  input parameter arg5 :: <gint>;
  input parameter arg6 :: <gint>;
  input parameter arg7 :: <GdkRgbDither>;
  input parameter arg8 :: <guchar*>;
  input parameter arg9 :: <gint>;
  input parameter arg10 :: <GdkRgbCmap>;
  c-name: "gdk_draw_indexed_image";
end;

define C-function gdk-rgb-cmap-new
  input parameter arg1 :: <guint32*>;
  input parameter arg2 :: <gint>;
  result res :: <GdkRgbCmap>;
  c-name: "gdk_rgb_cmap_new";
end;

define C-function gdk-rgb-cmap-free
  input parameter arg1 :: <GdkRgbCmap>;
  c-name: "gdk_rgb_cmap_free";
end;

define C-function gdk-rgb-set-verbose
  input parameter arg1 :: <gboolean>;
  c-name: "gdk_rgb_set_verbose";
end;

define C-function gdk-rgb-set-install
  input parameter arg1 :: <gboolean>;
  c-name: "gdk_rgb_set_install";
end;

define C-function gdk-rgb-set-min-colors
  input parameter arg1 :: <gint>;
  c-name: "gdk_rgb_set_min_colors";
end;

define C-function gdk-rgb-get-colormap
  result res :: <GdkColormap>;
  c-name: "gdk_rgb_get_colormap";
end;

define C-function gdk-rgb-get-visual
  result res :: <GdkVisual>;
  c-name: "gdk_rgb_get_visual";
end;

define C-function gdk-rgb-ditherable
  result res :: <gboolean>;
  c-name: "gdk_rgb_ditherable";
end;

define C-function gdk-rgb-colormap-ditherable
  input parameter arg1 :: <GdkColormap>;
  result res :: <gboolean>;
  c-name: "gdk_rgb_colormap_ditherable";
end;

define constant gdk-rgb-get-cmap = gdk-rgb-get-colormap;

define constant <anonymous-2762> = <C-function-pointer>;
define constant <anonymous-2763> = <C-function-pointer>;
define C-pointer-type <gint8*> => <gint8>;
define constant <gint8<@>> = <gint8*>;
define constant <anonymous-2764> = <C-function-pointer>;
define constant <anonymous-2765> = <C-function-pointer>;
define constant <anonymous-2766> = <C-function-pointer>;
define constant <anonymous-2767> = <C-function-pointer>;
define constant <anonymous-2768> = <C-function-pointer>;
define C-struct <_GdkGCClass>
  slot GdkGCClass-parent-class :: <_GObjectClass>;
  slot GdkGCClass-get-values :: <anonymous-2762>;
  slot GdkGCClass-set-values :: <anonymous-2763>;
  slot GdkGCClass-set-dashes :: <anonymous-2764>;
  slot GdkGCClass-_gdk-reserved1 :: <anonymous-2765>;
  slot GdkGCClass-_gdk-reserved2 :: <anonymous-2766>;
  slot GdkGCClass-_gdk-reserved3 :: <anonymous-2767>;
  slot GdkGCClass-_gdk-reserved4 :: <anonymous-2768>;
end;

define C-pointer-type <GdkGCClass> => <_GdkGCClass>;

define C-function gdk-gc-get-type
  result res :: <GType>;
  c-name: "gdk_gc_get_type";
end;

define C-function gdk-gc-new
  input parameter arg1 :: <GdkDrawable>;
  result res :: <GdkGC>;
  c-name: "gdk_gc_new";
end;

define C-function gdk-gc-new-with-values
  input parameter arg1 :: <GdkDrawable>;
  input parameter arg2 :: <GdkGCValues>;
  input parameter arg3 :: <GdkGCValuesMask>;
  result res :: <GdkGC>;
  c-name: "gdk_gc_new_with_values";
end;

define C-function gdk-gc-ref
  input parameter arg1 :: <GdkGC>;
  result res :: <GdkGC>;
  c-name: "gdk_gc_ref";
end;

define C-function gdk-gc-unref
  input parameter arg1 :: <GdkGC>;
  c-name: "gdk_gc_unref";
end;

define C-function gdk-gc-get-values
  input parameter arg1 :: <GdkGC>;
  input parameter arg2 :: <GdkGCValues>;
  c-name: "gdk_gc_get_values";
end;

define C-function gdk-gc-set-values
  input parameter arg1 :: <GdkGC>;
  input parameter arg2 :: <GdkGCValues>;
  input parameter arg3 :: <GdkGCValuesMask>;
  c-name: "gdk_gc_set_values";
end;

define C-function gdk-gc-set-foreground
  input parameter arg1 :: <GdkGC>;
  input parameter arg2 :: <GdkColor>;
  c-name: "gdk_gc_set_foreground";
end;

define C-function gdk-gc-set-background
  input parameter arg1 :: <GdkGC>;
  input parameter arg2 :: <GdkColor>;
  c-name: "gdk_gc_set_background";
end;

define C-function gdk-gc-set-font
  input parameter arg1 :: <GdkGC>;
  input parameter arg2 :: <GdkFont>;
  c-name: "gdk_gc_set_font";
end;

define C-function gdk-gc-set-function
  input parameter arg1 :: <GdkGC>;
  input parameter arg2 :: <GdkFunction>;
  c-name: "gdk_gc_set_function";
end;

define C-function gdk-gc-set-fill
  input parameter arg1 :: <GdkGC>;
  input parameter arg2 :: <GdkFill>;
  c-name: "gdk_gc_set_fill";
end;

define C-function gdk-gc-set-tile
  input parameter arg1 :: <GdkGC>;
  input parameter arg2 :: <GdkPixmap>;
  c-name: "gdk_gc_set_tile";
end;

define C-function gdk-gc-set-stipple
  input parameter arg1 :: <GdkGC>;
  input parameter arg2 :: <GdkPixmap>;
  c-name: "gdk_gc_set_stipple";
end;

define C-function gdk-gc-set-ts-origin
  input parameter arg1 :: <GdkGC>;
  input parameter arg2 :: <gint>;
  input parameter arg3 :: <gint>;
  c-name: "gdk_gc_set_ts_origin";
end;

define C-function gdk-gc-set-clip-origin
  input parameter arg1 :: <GdkGC>;
  input parameter arg2 :: <gint>;
  input parameter arg3 :: <gint>;
  c-name: "gdk_gc_set_clip_origin";
end;

define C-function gdk-gc-set-clip-mask
  input parameter arg1 :: <GdkGC>;
  input parameter arg2 :: <GdkBitmap>;
  c-name: "gdk_gc_set_clip_mask";
end;

define C-function gdk-gc-set-clip-rectangle
  input parameter arg1 :: <GdkGC>;
  input parameter arg2 :: <GdkRectangle>;
  c-name: "gdk_gc_set_clip_rectangle";
end;

define C-function gdk-gc-set-clip-region
  input parameter arg1 :: <GdkGC>;
  input parameter arg2 :: <GdkRegion>;
  c-name: "gdk_gc_set_clip_region";
end;

define C-function gdk-gc-set-subwindow
  input parameter arg1 :: <GdkGC>;
  input parameter arg2 :: <GdkSubwindowMode>;
  c-name: "gdk_gc_set_subwindow";
end;

define C-function gdk-gc-set-exposures
  input parameter arg1 :: <GdkGC>;
  input parameter arg2 :: <gboolean>;
  c-name: "gdk_gc_set_exposures";
end;

define C-function gdk-gc-set-line-attributes
  input parameter arg1 :: <GdkGC>;
  input parameter arg2 :: <gint>;
  input parameter arg3 :: <GdkLineStyle>;
  input parameter arg4 :: <GdkCapStyle>;
  input parameter arg5 :: <GdkJoinStyle>;
  c-name: "gdk_gc_set_line_attributes";
end;

define C-function gdk-gc-set-dashes
  input parameter arg1 :: <GdkGC>;
  input parameter arg2 :: <gint>;
  input parameter arg3 :: <gint8<@>>;
  input parameter arg4 :: <gint>;
  c-name: "gdk_gc_set_dashes";
end;

define C-function gdk-gc-offset
  input parameter arg1 :: <GdkGC>;
  input parameter arg2 :: <gint>;
  input parameter arg3 :: <gint>;
  c-name: "gdk_gc_offset";
end;

define C-function gdk-gc-copy
  input parameter arg1 :: <GdkGC>;
  input parameter arg2 :: <GdkGC>;
  c-name: "gdk_gc_copy";
end;

define C-function gdk-gc-set-colormap
  input parameter arg1 :: <GdkGC>;
  input parameter arg2 :: <GdkColormap>;
  c-name: "gdk_gc_set_colormap";
end;

define C-function gdk-gc-get-colormap
  input parameter arg1 :: <GdkGC>;
  result res :: <GdkColormap>;
  c-name: "gdk_gc_get_colormap";
end;

define C-function gdk-gc-set-rgb-fg-color
  input parameter arg1 :: <GdkGC>;
  input parameter arg2 :: <GdkColor>;
  c-name: "gdk_gc_set_rgb_fg_color";
end;

define C-function gdk-gc-set-rgb-bg-color
  input parameter arg1 :: <GdkGC>;
  input parameter arg2 :: <GdkColor>;
  c-name: "gdk_gc_set_rgb_bg_color";
end;

define C-function gdk-gc-get-screen
  input parameter arg1 :: <GdkGC>;
  result res :: <GdkScreen>;
  c-name: "gdk_gc_get_screen";
end;

define constant gdk-gc-destroy = gdk-gc-unref;

define C-struct <_GdkVisualClass>
end;

define C-pointer-type <GdkVisualClass> => <_GdkVisualClass>;

define C-function gdk-visual-get-type
  result res :: <GType>;
  c-name: "gdk_visual_get_type";
end;

define C-function gdk-visual-get-best-depth
  result res :: <gint>;
  c-name: "gdk_visual_get_best_depth";
end;

define C-function gdk-visual-get-best-type
  result res :: <GdkVisualType>;
  c-name: "gdk_visual_get_best_type";
end;

define C-function gdk-visual-get-system
  result res :: <GdkVisual>;
  c-name: "gdk_visual_get_system";
end;

define C-function gdk-visual-get-best
  result res :: <GdkVisual>;
  c-name: "gdk_visual_get_best";
end;

define C-function gdk-visual-get-best-with-depth
  input parameter arg1 :: <gint>;
  result res :: <GdkVisual>;
  c-name: "gdk_visual_get_best_with_depth";
end;

define C-function gdk-visual-get-best-with-type
  input parameter arg1 :: <GdkVisualType>;
  result res :: <GdkVisual>;
  c-name: "gdk_visual_get_best_with_type";
end;

define C-function gdk-visual-get-best-with-both
  input parameter arg1 :: <gint>;
  input parameter arg2 :: <GdkVisualType>;
  result res :: <GdkVisual>;
  c-name: "gdk_visual_get_best_with_both";
end;

define C-function gdk-query-depths
  input parameter arg1 :: <gint**>;
  input parameter arg2 :: <gint*>;
  c-name: "gdk_query_depths";
end;

define C-pointer-type <GdkVisualType*> => <GdkVisualType>;
define C-pointer-type <GdkVisualType**> => <GdkVisualType*>;
define C-function gdk-query-visual-types
  input parameter arg1 :: <GdkVisualType**>;
  input parameter arg2 :: <gint*>;
  c-name: "gdk_query_visual_types";
end;

define C-function gdk-list-visuals
  result res :: <GList>;
  c-name: "gdk_list_visuals";
end;

define C-function gdk-visual-get-screen
  input parameter arg1 :: <GdkVisual>;
  result res :: <GdkScreen>;
  c-name: "gdk_visual_get_screen";
end;

define C-function gdk-spawn-on-screen
  input parameter arg1 :: <GdkScreen>;
  input parameter arg2 :: <gchar*>;
  input parameter arg3 :: <gchar**>;
  input parameter arg4 :: <gchar**>;
  input parameter arg5 :: <GSpawnFlags>;
  input parameter arg6 :: <GSpawnChildSetupFunc>;
  input parameter arg7 :: <gpointer>;
  input parameter arg8 :: <gint*>;
  input parameter arg9 :: <GError*>;
  result res :: <gboolean>;
  c-name: "gdk_spawn_on_screen";
end;

define C-function gdk-spawn-on-screen-with-pipes
  input parameter arg1 :: <GdkScreen>;
  input parameter arg2 :: <gchar*>;
  input parameter arg3 :: <gchar**>;
  input parameter arg4 :: <gchar**>;
  input parameter arg5 :: <GSpawnFlags>;
  input parameter arg6 :: <GSpawnChildSetupFunc>;
  input parameter arg7 :: <gpointer>;
  input parameter arg8 :: <gint*>;
  input parameter arg9 :: <gint*>;
  input parameter arg10 :: <gint*>;
  input parameter arg11 :: <gint*>;
  input parameter arg12 :: <GError*>;
  result res :: <gboolean>;
  c-name: "gdk_spawn_on_screen_with_pipes";
end;

define C-function gdk-spawn-command-line-on-screen
  input parameter arg1 :: <GdkScreen>;
  input parameter arg2 :: <gchar*>;
  input parameter arg3 :: <GError*>;
  result res :: <gboolean>;
  c-name: "gdk_spawn_command_line_on_screen";
end;

define constant <anonymous-3053> = <C-function-pointer>;
define constant <anonymous-3054> = <C-function-pointer>;
define C-struct <_GdkScreenClass>
  slot GdkScreenClass-parent-class :: <_GObjectClass>;
  slot GdkScreenClass-size-changed :: <anonymous-3053>;
  slot GdkScreenClass-composited-changed :: <anonymous-3054>;
end;

define C-pointer-type <GdkScreenClass> => <_GdkScreenClass>;

define C-function gdk-screen-get-type
  result res :: <GType>;
  c-name: "gdk_screen_get_type";
end;

define C-function gdk-screen-get-default-colormap
  input parameter arg1 :: <GdkScreen>;
  result res :: <GdkColormap>;
  c-name: "gdk_screen_get_default_colormap";
end;

define C-function gdk-screen-set-default-colormap
  input parameter arg1 :: <GdkScreen>;
  input parameter arg2 :: <GdkColormap>;
  c-name: "gdk_screen_set_default_colormap";
end;

define C-function gdk-screen-get-system-colormap
  input parameter arg1 :: <GdkScreen>;
  result res :: <GdkColormap>;
  c-name: "gdk_screen_get_system_colormap";
end;

define C-function gdk-screen-get-system-visual
  input parameter arg1 :: <GdkScreen>;
  result res :: <GdkVisual>;
  c-name: "gdk_screen_get_system_visual";
end;

define C-function gdk-screen-get-rgb-colormap
  input parameter arg1 :: <GdkScreen>;
  result res :: <GdkColormap>;
  c-name: "gdk_screen_get_rgb_colormap";
end;

define C-function gdk-screen-get-rgb-visual
  input parameter arg1 :: <GdkScreen>;
  result res :: <GdkVisual>;
  c-name: "gdk_screen_get_rgb_visual";
end;

define C-function gdk-screen-get-rgba-colormap
  input parameter arg1 :: <GdkScreen>;
  result res :: <GdkColormap>;
  c-name: "gdk_screen_get_rgba_colormap";
end;

define C-function gdk-screen-get-rgba-visual
  input parameter arg1 :: <GdkScreen>;
  result res :: <GdkVisual>;
  c-name: "gdk_screen_get_rgba_visual";
end;

define C-function gdk-screen-is-composited
  input parameter arg1 :: <GdkScreen>;
  result res :: <gboolean>;
  c-name: "gdk_screen_is_composited";
end;

define C-function gdk-screen-get-root-window
  input parameter arg1 :: <GdkScreen>;
  result res :: <GdkWindow>;
  c-name: "gdk_screen_get_root_window";
end;

define C-function gdk-screen-get-display
  input parameter arg1 :: <GdkScreen>;
  result res :: <GdkDisplay>;
  c-name: "gdk_screen_get_display";
end;

define C-function gdk-screen-get-number
  input parameter arg1 :: <GdkScreen>;
  result res :: <gint>;
  c-name: "gdk_screen_get_number";
end;

define C-function gdk-screen-get-width
  input parameter arg1 :: <GdkScreen>;
  result res :: <gint>;
  c-name: "gdk_screen_get_width";
end;

define C-function gdk-screen-get-height
  input parameter arg1 :: <GdkScreen>;
  result res :: <gint>;
  c-name: "gdk_screen_get_height";
end;

define C-function gdk-screen-get-width-mm
  input parameter arg1 :: <GdkScreen>;
  result res :: <gint>;
  c-name: "gdk_screen_get_width_mm";
end;

define C-function gdk-screen-get-height-mm
  input parameter arg1 :: <GdkScreen>;
  result res :: <gint>;
  c-name: "gdk_screen_get_height_mm";
end;

define C-function gdk-screen-list-visuals
  input parameter arg1 :: <GdkScreen>;
  result res :: <GList>;
  c-name: "gdk_screen_list_visuals";
end;

define C-function gdk-screen-get-toplevel-windows
  input parameter arg1 :: <GdkScreen>;
  result res :: <GList>;
  c-name: "gdk_screen_get_toplevel_windows";
end;

define C-function gdk-screen-make-display-name
  input parameter arg1 :: <GdkScreen>;
  result res :: <gchar*>;
  c-name: "gdk_screen_make_display_name";
end;

define C-function gdk-screen-get-n-monitors
  input parameter arg1 :: <GdkScreen>;
  result res :: <gint>;
  c-name: "gdk_screen_get_n_monitors";
end;

define C-function gdk-screen-get-monitor-geometry
  input parameter arg1 :: <GdkScreen>;
  input parameter arg2 :: <gint>;
  input parameter arg3 :: <GdkRectangle>;
  c-name: "gdk_screen_get_monitor_geometry";
end;

define C-function gdk-screen-get-monitor-at-point
  input parameter arg1 :: <GdkScreen>;
  input parameter arg2 :: <gint>;
  input parameter arg3 :: <gint>;
  result res :: <gint>;
  c-name: "gdk_screen_get_monitor_at_point";
end;

define C-function gdk-screen-get-monitor-at-window
  input parameter arg1 :: <GdkScreen>;
  input parameter arg2 :: <GdkWindow>;
  result res :: <gint>;
  c-name: "gdk_screen_get_monitor_at_window";
end;

define C-function gdk-screen-broadcast-client-message
  input parameter arg1 :: <GdkScreen>;
  input parameter arg2 :: <GdkEvent>;
  c-name: "gdk_screen_broadcast_client_message";
end;

define C-function gdk-screen-get-default
  result res :: <GdkScreen>;
  c-name: "gdk_screen_get_default";
end;

define C-function gdk-screen-get-setting
  input parameter arg1 :: <GdkScreen>;
  input parameter arg2 :: <gchar*>;
  input parameter arg3 :: <GValue>;
  result res :: <gboolean>;
  c-name: "gdk_screen_get_setting";
end;

define C-function gdk-screen-set-font-options
  input parameter arg1 :: <GdkScreen>;
  input parameter arg2 :: <cairo-font-options-t>;
  c-name: "gdk_screen_set_font_options";
end;

define C-function gdk-screen-get-font-options
  input parameter arg1 :: <GdkScreen>;
  result res :: <cairo-font-options-t>;
  c-name: "gdk_screen_get_font_options";
end;

define C-function gdk-screen-set-resolution
  input parameter arg1 :: <GdkScreen>;
  input parameter arg2 :: <gdouble>;
  c-name: "gdk_screen_set_resolution";
end;

define C-function gdk-screen-get-resolution
  input parameter arg1 :: <GdkScreen>;
  result res :: <gdouble>;
  c-name: "gdk_screen_get_resolution";
end;

define C-function gdk-screen-get-active-window
  input parameter arg1 :: <GdkScreen>;
  result res :: <GdkWindow>;
  c-name: "gdk_screen_get_active_window";
end;

define C-function gdk-screen-get-window-stack
  input parameter arg1 :: <GdkScreen>;
  result res :: <GList>;
  c-name: "gdk_screen_get_window_stack";
end;

define constant <anonymous-2708> = <C-function-pointer>;
define constant <anonymous-2709> = <C-function-pointer>;
define constant <anonymous-2710> = <C-function-pointer>;
define constant <anonymous-2711> = <C-function-pointer>;
define constant <anonymous-2712> = <C-function-pointer>;
define C-struct <_GdkDisplayClass>
  slot GdkDisplayClass-parent-class :: <_GObjectClass>;
  slot GdkDisplayClass-get-display-name :: <anonymous-2708>;
  slot GdkDisplayClass-get-n-screens :: <anonymous-2709>;
  slot GdkDisplayClass-get-screen :: <anonymous-2710>;
  slot GdkDisplayClass-get-default-screen :: <anonymous-2711>;
  slot GdkDisplayClass-closed :: <anonymous-2712>;
end;

define C-pointer-type <GdkDisplayClass> => <_GdkDisplayClass>;

define C-function gdk-display-get-type
  result res :: <GType>;
  c-name: "gdk_display_get_type";
end;

define C-function gdk-display-open
  input parameter arg1 :: <gchar*>;
  result res :: <GdkDisplay>;
  c-name: "gdk_display_open";
end;

define C-function gdk-display-get-name
  input parameter arg1 :: <GdkDisplay>;
  result res :: <gchar*>;
  c-name: "gdk_display_get_name";
end;

define C-function gdk-display-get-n-screens
  input parameter arg1 :: <GdkDisplay>;
  result res :: <gint>;
  c-name: "gdk_display_get_n_screens";
end;

define C-function gdk-display-get-screen
  input parameter arg1 :: <GdkDisplay>;
  input parameter arg2 :: <gint>;
  result res :: <GdkScreen>;
  c-name: "gdk_display_get_screen";
end;

define C-function gdk-display-get-default-screen
  input parameter arg1 :: <GdkDisplay>;
  result res :: <GdkScreen>;
  c-name: "gdk_display_get_default_screen";
end;

define C-function gdk-display-pointer-ungrab
  input parameter arg1 :: <GdkDisplay>;
  input parameter arg2 :: <guint32>;
  c-name: "gdk_display_pointer_ungrab";
end;

define C-function gdk-display-keyboard-ungrab
  input parameter arg1 :: <GdkDisplay>;
  input parameter arg2 :: <guint32>;
  c-name: "gdk_display_keyboard_ungrab";
end;

define C-function gdk-display-pointer-is-grabbed
  input parameter arg1 :: <GdkDisplay>;
  result res :: <gboolean>;
  c-name: "gdk_display_pointer_is_grabbed";
end;

define C-function gdk-display-beep
  input parameter arg1 :: <GdkDisplay>;
  c-name: "gdk_display_beep";
end;

define C-function gdk-display-sync
  input parameter arg1 :: <GdkDisplay>;
  c-name: "gdk_display_sync";
end;

define C-function gdk-display-flush
  input parameter arg1 :: <GdkDisplay>;
  c-name: "gdk_display_flush";
end;

define C-function gdk-display-close
  input parameter arg1 :: <GdkDisplay>;
  c-name: "gdk_display_close";
end;

define C-function gdk-display-list-devices
  input parameter arg1 :: <GdkDisplay>;
  result res :: <GList>;
  c-name: "gdk_display_list_devices";
end;

define C-function gdk-display-get-event
  input parameter arg1 :: <GdkDisplay>;
  result res :: <GdkEvent>;
  c-name: "gdk_display_get_event";
end;

define C-function gdk-display-peek-event
  input parameter arg1 :: <GdkDisplay>;
  result res :: <GdkEvent>;
  c-name: "gdk_display_peek_event";
end;

define C-function gdk-display-put-event
  input parameter arg1 :: <GdkDisplay>;
  input parameter arg2 :: <GdkEvent>;
  c-name: "gdk_display_put_event";
end;

define C-function gdk-display-add-client-message-filter
  input parameter arg1 :: <GdkDisplay>;
  input parameter arg2 :: <GdkAtom>;
  input parameter arg3 :: <GdkFilterFunc>;
  input parameter arg4 :: <gpointer>;
  c-name: "gdk_display_add_client_message_filter";
end;

define C-function gdk-display-set-double-click-time
  input parameter arg1 :: <GdkDisplay>;
  input parameter arg2 :: <guint>;
  c-name: "gdk_display_set_double_click_time";
end;

define C-function gdk-display-set-double-click-distance
  input parameter arg1 :: <GdkDisplay>;
  input parameter arg2 :: <guint>;
  c-name: "gdk_display_set_double_click_distance";
end;

define C-function gdk-display-get-default
  result res :: <GdkDisplay>;
  c-name: "gdk_display_get_default";
end;

define C-function gdk-display-get-core-pointer
  input parameter arg1 :: <GdkDisplay>;
  result res :: <GdkDevice>;
  c-name: "gdk_display_get_core_pointer";
end;

define C-function gdk-display-get-pointer
  input parameter arg1 :: <GdkDisplay>;
  input parameter arg2 :: <GdkScreen*>;
  input parameter arg3 :: <gint*>;
  input parameter arg4 :: <gint*>;
  input parameter arg5 :: <GdkModifierType*>;
  c-name: "gdk_display_get_pointer";
end;

define C-function gdk-display-get-window-at-pointer
  input parameter arg1 :: <GdkDisplay>;
  input parameter arg2 :: <gint*>;
  input parameter arg3 :: <gint*>;
  result res :: <GdkWindow>;
  c-name: "gdk_display_get_window_at_pointer";
end;

define C-function gdk-display-warp-pointer
  input parameter arg1 :: <GdkDisplay>;
  input parameter arg2 :: <GdkScreen>;
  input parameter arg3 :: <gint>;
  input parameter arg4 :: <gint>;
  c-name: "gdk_display_warp_pointer";
end;

define C-function gdk-display-set-pointer-hooks
  input parameter arg1 :: <GdkDisplay>;
  input parameter arg2 :: <GdkDisplayPointerHooks>;
  result res :: <GdkDisplayPointerHooks>;
  c-name: "gdk_display_set_pointer_hooks";
end;

define C-function gdk-display-open-default-libgtk-only
  result res :: <GdkDisplay>;
  c-name: "gdk_display_open_default_libgtk_only";
end;

define C-function gdk-display-supports-cursor-alpha
  input parameter arg1 :: <GdkDisplay>;
  result res :: <gboolean>;
  c-name: "gdk_display_supports_cursor_alpha";
end;

define C-function gdk-display-supports-cursor-color
  input parameter arg1 :: <GdkDisplay>;
  result res :: <gboolean>;
  c-name: "gdk_display_supports_cursor_color";
end;

define C-function gdk-display-get-default-cursor-size
  input parameter arg1 :: <GdkDisplay>;
  result res :: <guint>;
  c-name: "gdk_display_get_default_cursor_size";
end;

define C-function gdk-display-get-maximal-cursor-size
  input parameter arg1 :: <GdkDisplay>;
  input parameter arg2 :: <guint*>;
  input parameter arg3 :: <guint*>;
  c-name: "gdk_display_get_maximal_cursor_size";
end;

define C-function gdk-display-get-default-group
  input parameter arg1 :: <GdkDisplay>;
  result res :: <GdkWindow>;
  c-name: "gdk_display_get_default_group";
end;

define C-function gdk-display-supports-selection-notification
  input parameter arg1 :: <GdkDisplay>;
  result res :: <gboolean>;
  c-name: "gdk_display_supports_selection_notification";
end;

define C-function gdk-display-request-selection-notification
  input parameter arg1 :: <GdkDisplay>;
  input parameter arg2 :: <GdkAtom>;
  result res :: <gboolean>;
  c-name: "gdk_display_request_selection_notification";
end;

define C-function gdk-display-supports-clipboard-persistence
  input parameter arg1 :: <GdkDisplay>;
  result res :: <gboolean>;
  c-name: "gdk_display_supports_clipboard_persistence";
end;

define C-pointer-type <GdkAtom*> => <GdkAtom>;
define C-function gdk-display-store-clipboard
  input parameter arg1 :: <GdkDisplay>;
  input parameter arg2 :: <GdkWindow>;
  input parameter arg3 :: <guint32>;
  input parameter arg4 :: <GdkAtom*>;
  input parameter arg5 :: <gint>;
  c-name: "gdk_display_store_clipboard";
end;

define C-function gdk-display-supports-shapes
  input parameter arg1 :: <GdkDisplay>;
  result res :: <gboolean>;
  c-name: "gdk_display_supports_shapes";
end;

define C-function gdk-display-supports-input-shapes
  input parameter arg1 :: <GdkDisplay>;
  result res :: <gboolean>;
  c-name: "gdk_display_supports_input_shapes";
end;

define C-function gdk-display-supports-composite
  input parameter arg1 :: <GdkDisplay>;
  result res :: <gboolean>;
  c-name: "gdk_display_supports_composite";
end;

define constant <GdkSelection> = <GdkAtom>;

define constant <GdkTarget> = <GdkAtom>;

define constant <GdkSelectionType> = <GdkAtom>;

define C-function gdk-selection-owner-set
  input parameter arg1 :: <GdkWindow>;
  input parameter arg2 :: <GdkAtom>;
  input parameter arg3 :: <guint32>;
  input parameter arg4 :: <gboolean>;
  result res :: <gboolean>;
  c-name: "gdk_selection_owner_set";
end;

define C-function gdk-selection-owner-get
  input parameter arg1 :: <GdkAtom>;
  result res :: <GdkWindow>;
  c-name: "gdk_selection_owner_get";
end;

define C-function gdk-selection-owner-set-for-display
  input parameter arg1 :: <GdkDisplay>;
  input parameter arg2 :: <GdkWindow>;
  input parameter arg3 :: <GdkAtom>;
  input parameter arg4 :: <guint32>;
  input parameter arg5 :: <gboolean>;
  result res :: <gboolean>;
  c-name: "gdk_selection_owner_set_for_display";
end;

define C-function gdk-selection-owner-get-for-display
  input parameter arg1 :: <GdkDisplay>;
  input parameter arg2 :: <GdkAtom>;
  result res :: <GdkWindow>;
  c-name: "gdk_selection_owner_get_for_display";
end;

define C-function gdk-selection-convert
  input parameter arg1 :: <GdkWindow>;
  input parameter arg2 :: <GdkAtom>;
  input parameter arg3 :: <GdkAtom>;
  input parameter arg4 :: <guint32>;
  c-name: "gdk_selection_convert";
end;

define C-function gdk-selection-property-get
  input parameter arg1 :: <GdkWindow>;
  input parameter arg2 :: <guchar**>;
  input parameter arg3 :: <GdkAtom*>;
  input parameter arg4 :: <gint*>;
  result res :: <gboolean>;
  c-name: "gdk_selection_property_get";
end;

define C-function gdk-selection-send-notify
  input parameter arg1 :: <guint32>;
  input parameter arg2 :: <GdkAtom>;
  input parameter arg3 :: <GdkAtom>;
  input parameter arg4 :: <GdkAtom>;
  input parameter arg5 :: <guint32>;
  c-name: "gdk_selection_send_notify";
end;

define C-function gdk-selection-send-notify-for-display
  input parameter arg1 :: <GdkDisplay>;
  input parameter arg2 :: <guint32>;
  input parameter arg3 :: <GdkAtom>;
  input parameter arg4 :: <GdkAtom>;
  input parameter arg5 :: <GdkAtom>;
  input parameter arg6 :: <guint32>;
  c-name: "gdk_selection_send_notify_for_display";
end;

define constant <GdkFillRule> = <C-int>;
define constant $GDK-EVEN-ODD-RULE = 0;
define constant $GDK-WINDING-RULE = 1;

define constant <GdkOverlapType> = <C-int>;
define constant $GDK-OVERLAP-RECTANGLE-IN = 0;
define constant $GDK-OVERLAP-RECTANGLE-OUT = 1;
define constant $GDK-OVERLAP-RECTANGLE-PART = 2;

define constant <anonymous-3032> = <C-function-pointer>;
define constant <GdkSpanFunc> = <anonymous-3032>;

define C-function gdk-region-new
  result res :: <GdkRegion>;
  c-name: "gdk_region_new";
end;

define C-function gdk-region-polygon
  input parameter arg1 :: <GdkPoint>;
  input parameter arg2 :: <gint>;
  input parameter arg3 :: <GdkFillRule>;
  result res :: <GdkRegion>;
  c-name: "gdk_region_polygon";
end;

define C-function gdk-region-copy
  input parameter arg1 :: <GdkRegion>;
  result res :: <GdkRegion>;
  c-name: "gdk_region_copy";
end;

define C-function gdk-region-rectangle
  input parameter arg1 :: <GdkRectangle>;
  result res :: <GdkRegion>;
  c-name: "gdk_region_rectangle";
end;

define C-function gdk-region-destroy
  input parameter arg1 :: <GdkRegion>;
  c-name: "gdk_region_destroy";
end;

define C-function gdk-region-get-clipbox
  input parameter arg1 :: <GdkRegion>;
  input parameter arg2 :: <GdkRectangle>;
  c-name: "gdk_region_get_clipbox";
end;

define C-pointer-type <GdkRectangle*> => <GdkRectangle>;
define C-function gdk-region-get-rectangles
  input parameter arg1 :: <GdkRegion>;
  input parameter arg2 :: <GdkRectangle*>;
  input parameter arg3 :: <gint*>;
  c-name: "gdk_region_get_rectangles";
end;

define C-function gdk-region-empty
  input parameter arg1 :: <GdkRegion>;
  result res :: <gboolean>;
  c-name: "gdk_region_empty";
end;

define C-function gdk-region-equal
  input parameter arg1 :: <GdkRegion>;
  input parameter arg2 :: <GdkRegion>;
  result res :: <gboolean>;
  c-name: "gdk_region_equal";
end;

define C-function gdk-region-point-in
  input parameter arg1 :: <GdkRegion>;
  input parameter arg2 :: <C-signed-int>;
  input parameter arg3 :: <C-signed-int>;
  result res :: <gboolean>;
  c-name: "gdk_region_point_in";
end;

define C-function gdk-region-rect-in
  input parameter arg1 :: <GdkRegion>;
  input parameter arg2 :: <GdkRectangle>;
  result res :: <GdkOverlapType>;
  c-name: "gdk_region_rect_in";
end;

define C-function gdk-region-offset
  input parameter arg1 :: <GdkRegion>;
  input parameter arg2 :: <gint>;
  input parameter arg3 :: <gint>;
  c-name: "gdk_region_offset";
end;

define C-function gdk-region-shrink
  input parameter arg1 :: <GdkRegion>;
  input parameter arg2 :: <gint>;
  input parameter arg3 :: <gint>;
  c-name: "gdk_region_shrink";
end;

define C-function gdk-region-union-with-rect
  input parameter arg1 :: <GdkRegion>;
  input parameter arg2 :: <GdkRectangle>;
  c-name: "gdk_region_union_with_rect";
end;

define C-function gdk-region-intersect
  input parameter arg1 :: <GdkRegion>;
  input parameter arg2 :: <GdkRegion>;
  c-name: "gdk_region_intersect";
end;

define C-function gdk-region-union
  input parameter arg1 :: <GdkRegion>;
  input parameter arg2 :: <GdkRegion>;
  c-name: "gdk_region_union";
end;

define C-function gdk-region-subtract
  input parameter arg1 :: <GdkRegion>;
  input parameter arg2 :: <GdkRegion>;
  c-name: "gdk_region_subtract";
end;

define C-function gdk-region-xor
  input parameter arg1 :: <GdkRegion>;
  input parameter arg2 :: <GdkRegion>;
  c-name: "gdk_region_xor";
end;

define C-function gdk-region-spans-intersect-foreach
  input parameter arg1 :: <GdkRegion>;
  input parameter arg2 :: <GdkSpan>;
  input parameter arg3 :: <C-signed-int>;
  input parameter arg4 :: <gboolean>;
  input parameter arg5 :: <GdkSpanFunc>;
  input parameter arg6 :: <gpointer>;
  c-name: "gdk_region_spans_intersect_foreach";
end;

define constant <GdkPropMode> = <C-int>;
define constant $GDK-PROP-MODE-REPLACE = 0;
define constant $GDK-PROP-MODE-PREPEND = 1;
define constant $GDK-PROP-MODE-APPEND = 2;

define C-function gdk-atom-intern
  input parameter arg1 :: <gchar*>;
  input parameter arg2 :: <gboolean>;
  result res :: <GdkAtom>;
  c-name: "gdk_atom_intern";
end;

define C-function gdk-atom-intern-static-string
  input parameter arg1 :: <gchar*>;
  result res :: <GdkAtom>;
  c-name: "gdk_atom_intern_static_string";
end;

define C-function gdk-atom-name
  input parameter arg1 :: <GdkAtom>;
  result res :: <gchar*>;
  c-name: "gdk_atom_name";
end;

define C-function gdk-property-get
  input parameter arg1 :: <GdkWindow>;
  input parameter arg2 :: <GdkAtom>;
  input parameter arg3 :: <GdkAtom>;
  input parameter arg4 :: <gulong>;
  input parameter arg5 :: <gulong>;
  input parameter arg6 :: <gint>;
  input parameter arg7 :: <GdkAtom*>;
  input parameter arg8 :: <gint*>;
  input parameter arg9 :: <gint*>;
  input parameter arg10 :: <guchar**>;
  result res :: <gboolean>;
  c-name: "gdk_property_get";
end;

define C-function gdk-property-change
  input parameter arg1 :: <GdkWindow>;
  input parameter arg2 :: <GdkAtom>;
  input parameter arg3 :: <GdkAtom>;
  input parameter arg4 :: <gint>;
  input parameter arg5 :: <GdkPropMode>;
  input parameter arg6 :: <guchar*>;
  input parameter arg7 :: <gint>;
  c-name: "gdk_property_change";
end;

define C-function gdk-property-delete
  input parameter arg1 :: <GdkWindow>;
  input parameter arg2 :: <GdkAtom>;
  c-name: "gdk_property_delete";
end;

define C-function gdk-text-property-to-text-list
  input parameter arg1 :: <GdkAtom>;
  input parameter arg2 :: <gint>;
  input parameter arg3 :: <guchar*>;
  input parameter arg4 :: <gint>;
  input parameter arg5 :: <gchar***>;
  result res :: <gint>;
  c-name: "gdk_text_property_to_text_list";
end;

define C-function gdk-text-property-to-utf8-list
  input parameter arg1 :: <GdkAtom>;
  input parameter arg2 :: <gint>;
  input parameter arg3 :: <guchar*>;
  input parameter arg4 :: <gint>;
  input parameter arg5 :: <gchar***>;
  result res :: <gint>;
  c-name: "gdk_text_property_to_utf8_list";
end;

define C-function gdk-utf8-to-compound-text
  input parameter arg1 :: <gchar*>;
  input parameter arg2 :: <GdkAtom*>;
  input parameter arg3 :: <gint*>;
  input parameter arg4 :: <guchar**>;
  input parameter arg5 :: <gint*>;
  result res :: <gboolean>;
  c-name: "gdk_utf8_to_compound_text";
end;

define C-function gdk-string-to-compound-text
  input parameter arg1 :: <gchar*>;
  input parameter arg2 :: <GdkAtom*>;
  input parameter arg3 :: <gint*>;
  input parameter arg4 :: <guchar**>;
  input parameter arg5 :: <gint*>;
  result res :: <gint>;
  c-name: "gdk_string_to_compound_text";
end;

define C-function gdk-text-property-to-text-list-for-display
  input parameter arg1 :: <GdkDisplay>;
  input parameter arg2 :: <GdkAtom>;
  input parameter arg3 :: <gint>;
  input parameter arg4 :: <guchar*>;
  input parameter arg5 :: <gint>;
  input parameter arg6 :: <gchar***>;
  result res :: <gint>;
  c-name: "gdk_text_property_to_text_list_for_display";
end;

define C-function gdk-text-property-to-utf8-list-for-display
  input parameter arg1 :: <GdkDisplay>;
  input parameter arg2 :: <GdkAtom>;
  input parameter arg3 :: <gint>;
  input parameter arg4 :: <guchar*>;
  input parameter arg5 :: <gint>;
  input parameter arg6 :: <gchar***>;
  result res :: <gint>;
  c-name: "gdk_text_property_to_utf8_list_for_display";
end;

define C-function gdk-utf8-to-string-target
  input parameter arg1 :: <gchar*>;
  result res :: <gchar*>;
  c-name: "gdk_utf8_to_string_target";
end;

define C-function gdk-string-to-compound-text-for-display
  input parameter arg1 :: <GdkDisplay>;
  input parameter arg2 :: <gchar*>;
  input parameter arg3 :: <GdkAtom*>;
  input parameter arg4 :: <gint*>;
  input parameter arg5 :: <guchar**>;
  input parameter arg6 :: <gint*>;
  result res :: <gint>;
  c-name: "gdk_string_to_compound_text_for_display";
end;

define C-function gdk-utf8-to-compound-text-for-display
  input parameter arg1 :: <GdkDisplay>;
  input parameter arg2 :: <gchar*>;
  input parameter arg3 :: <GdkAtom*>;
  input parameter arg4 :: <gint*>;
  input parameter arg5 :: <guchar**>;
  input parameter arg6 :: <gint*>;
  result res :: <gboolean>;
  c-name: "gdk_utf8_to_compound_text_for_display";
end;

define C-function gdk-free-text-list
  input parameter arg1 :: <gchar**>;
  c-name: "gdk_free_text_list";
end;

define C-function gdk-free-compound-text
  input parameter arg1 :: <guchar*>;
  c-name: "gdk_free_compound_text";
end;

define C-struct <_GdkPixmapObject>
  slot GdkPixmapObject-parent-instance :: <_GdkDrawable>;
  slot GdkPixmapObject-impl :: <GdkDrawable>;
  slot GdkPixmapObject-depth :: <C-signed-int>;
end;

define C-pointer-type <GdkPixmapObject> => <_GdkPixmapObject>;

define C-struct <_GdkPixmapObjectClass>
  slot GdkPixmapObjectClass-parent-class :: <_GdkDrawableClass>;
end;

define C-pointer-type <GdkPixmapObjectClass> => <_GdkPixmapObjectClass>;

define C-function gdk-pixmap-get-type
  result res :: <GType>;
  c-name: "gdk_pixmap_get_type";
end;

define C-function gdk-pixmap-new
  input parameter arg1 :: <GdkDrawable>;
  input parameter arg2 :: <gint>;
  input parameter arg3 :: <gint>;
  input parameter arg4 :: <gint>;
  result res :: <GdkPixmap>;
  c-name: "gdk_pixmap_new";
end;

define C-function gdk-bitmap-create-from-data
  input parameter arg1 :: <GdkDrawable>;
  input parameter arg2 :: <gchar*>;
  input parameter arg3 :: <gint>;
  input parameter arg4 :: <gint>;
  result res :: <GdkBitmap>;
  c-name: "gdk_bitmap_create_from_data";
end;

define C-function gdk-pixmap-create-from-data
  input parameter arg1 :: <GdkDrawable>;
  input parameter arg2 :: <gchar*>;
  input parameter arg3 :: <gint>;
  input parameter arg4 :: <gint>;
  input parameter arg5 :: <gint>;
  input parameter arg6 :: <GdkColor>;
  input parameter arg7 :: <GdkColor>;
  result res :: <GdkPixmap>;
  c-name: "gdk_pixmap_create_from_data";
end;

define C-pointer-type <GdkBitmap*> => <GdkBitmap>;
define C-function gdk-pixmap-create-from-xpm
  input parameter arg1 :: <GdkDrawable>;
  input parameter arg2 :: <GdkBitmap*>;
  input parameter arg3 :: <GdkColor>;
  input parameter arg4 :: <gchar*>;
  result res :: <GdkPixmap>;
  c-name: "gdk_pixmap_create_from_xpm";
end;

define C-function gdk-pixmap-colormap-create-from-xpm
  input parameter arg1 :: <GdkDrawable>;
  input parameter arg2 :: <GdkColormap>;
  input parameter arg3 :: <GdkBitmap*>;
  input parameter arg4 :: <GdkColor>;
  input parameter arg5 :: <gchar*>;
  result res :: <GdkPixmap>;
  c-name: "gdk_pixmap_colormap_create_from_xpm";
end;

define C-function gdk-pixmap-create-from-xpm-d
  input parameter arg1 :: <GdkDrawable>;
  input parameter arg2 :: <GdkBitmap*>;
  input parameter arg3 :: <GdkColor>;
  input parameter arg4 :: <gchar**>;
  result res :: <GdkPixmap>;
  c-name: "gdk_pixmap_create_from_xpm_d";
end;

define C-function gdk-pixmap-colormap-create-from-xpm-d
  input parameter arg1 :: <GdkDrawable>;
  input parameter arg2 :: <GdkColormap>;
  input parameter arg3 :: <GdkBitmap*>;
  input parameter arg4 :: <GdkColor>;
  input parameter arg5 :: <gchar**>;
  result res :: <GdkPixmap>;
  c-name: "gdk_pixmap_colormap_create_from_xpm_d";
end;

define C-function gdk-pixmap-foreign-new
  input parameter arg1 :: <GdkNativeWindow>;
  result res :: <GdkPixmap>;
  c-name: "gdk_pixmap_foreign_new";
end;

define C-function gdk-pixmap-lookup
  input parameter arg1 :: <GdkNativeWindow>;
  result res :: <GdkPixmap>;
  c-name: "gdk_pixmap_lookup";
end;

define C-function gdk-pixmap-foreign-new-for-display
  input parameter arg1 :: <GdkDisplay>;
  input parameter arg2 :: <GdkNativeWindow>;
  result res :: <GdkPixmap>;
  c-name: "gdk_pixmap_foreign_new_for_display";
end;

define C-function gdk-pixmap-lookup-for-display
  input parameter arg1 :: <GdkDisplay>;
  input parameter arg2 :: <GdkNativeWindow>;
  result res :: <GdkPixmap>;
  c-name: "gdk_pixmap_lookup_for_display";
end;

define C-function gdk-pixmap-foreign-new-for-screen
  input parameter arg1 :: <GdkScreen>;
  input parameter arg2 :: <GdkNativeWindow>;
  input parameter arg3 :: <gint>;
  input parameter arg4 :: <gint>;
  input parameter arg5 :: <gint>;
  result res :: <GdkPixmap>;
  c-name: "gdk_pixmap_foreign_new_for_screen";
end;

define constant gdk-bitmap-ref = gdk-drawable-ref;

define constant gdk-bitmap-unref = gdk-drawable-unref;

define constant gdk-pixmap-ref = gdk-drawable-ref;

define constant gdk-pixmap-unref = gdk-drawable-unref;

define C-function gdk-pixbuf-render-threshold-alpha
  input parameter arg1 :: <GdkPixbuf>;
  input parameter arg2 :: <GdkBitmap>;
  input parameter arg3 :: <C-signed-int>;
  input parameter arg4 :: <C-signed-int>;
  input parameter arg5 :: <C-signed-int>;
  input parameter arg6 :: <C-signed-int>;
  input parameter arg7 :: <C-signed-int>;
  input parameter arg8 :: <C-signed-int>;
  input parameter arg9 :: <C-signed-int>;
  c-name: "gdk_pixbuf_render_threshold_alpha";
end;

define C-function gdk-pixbuf-render-to-drawable
  input parameter arg1 :: <GdkPixbuf>;
  input parameter arg2 :: <GdkDrawable>;
  input parameter arg3 :: <GdkGC>;
  input parameter arg4 :: <C-signed-int>;
  input parameter arg5 :: <C-signed-int>;
  input parameter arg6 :: <C-signed-int>;
  input parameter arg7 :: <C-signed-int>;
  input parameter arg8 :: <C-signed-int>;
  input parameter arg9 :: <C-signed-int>;
  input parameter arg10 :: <GdkRgbDither>;
  input parameter arg11 :: <C-signed-int>;
  input parameter arg12 :: <C-signed-int>;
  c-name: "gdk_pixbuf_render_to_drawable";
end;

define C-function gdk-pixbuf-render-to-drawable-alpha
  input parameter arg1 :: <GdkPixbuf>;
  input parameter arg2 :: <GdkDrawable>;
  input parameter arg3 :: <C-signed-int>;
  input parameter arg4 :: <C-signed-int>;
  input parameter arg5 :: <C-signed-int>;
  input parameter arg6 :: <C-signed-int>;
  input parameter arg7 :: <C-signed-int>;
  input parameter arg8 :: <C-signed-int>;
  input parameter arg9 :: <GdkPixbufAlphaMode>;
  input parameter arg10 :: <C-signed-int>;
  input parameter arg11 :: <GdkRgbDither>;
  input parameter arg12 :: <C-signed-int>;
  input parameter arg13 :: <C-signed-int>;
  c-name: "gdk_pixbuf_render_to_drawable_alpha";
end;

define C-function gdk-pixbuf-render-pixmap-and-mask-for-colormap
  input parameter arg1 :: <GdkPixbuf>;
  input parameter arg2 :: <GdkColormap>;
  input parameter arg3 :: <GdkPixmap*>;
  input parameter arg4 :: <GdkBitmap*>;
  input parameter arg5 :: <C-signed-int>;
  c-name: "gdk_pixbuf_render_pixmap_and_mask_for_colormap";
end;

define C-function gdk-pixbuf-render-pixmap-and-mask
  input parameter arg1 :: <GdkPixbuf>;
  input parameter arg2 :: <GdkPixmap*>;
  input parameter arg3 :: <GdkBitmap*>;
  input parameter arg4 :: <C-signed-int>;
  c-name: "gdk_pixbuf_render_pixmap_and_mask";
end;

define C-function gdk-pixbuf-get-from-drawable
  input parameter arg1 :: <GdkPixbuf>;
  input parameter arg2 :: <GdkDrawable>;
  input parameter arg3 :: <GdkColormap>;
  input parameter arg4 :: <C-signed-int>;
  input parameter arg5 :: <C-signed-int>;
  input parameter arg6 :: <C-signed-int>;
  input parameter arg7 :: <C-signed-int>;
  input parameter arg8 :: <C-signed-int>;
  input parameter arg9 :: <C-signed-int>;
  result res :: <GdkPixbuf>;
  c-name: "gdk_pixbuf_get_from_drawable";
end;

define C-function gdk-pixbuf-get-from-image
  input parameter arg1 :: <GdkPixbuf>;
  input parameter arg2 :: <GdkImage>;
  input parameter arg3 :: <GdkColormap>;
  input parameter arg4 :: <C-signed-int>;
  input parameter arg5 :: <C-signed-int>;
  input parameter arg6 :: <C-signed-int>;
  input parameter arg7 :: <C-signed-int>;
  input parameter arg8 :: <C-signed-int>;
  input parameter arg9 :: <C-signed-int>;
  result res :: <GdkPixbuf>;
  c-name: "gdk_pixbuf_get_from_image";
end;

define C-struct <_GdkPangoRendererPrivate>
end;

define C-pointer-type <GdkPangoRendererPrivate> => <_GdkPangoRendererPrivate>;

define C-subtype <_GdkPangoRenderer> (<_PangoRenderer>) end;
define constant <GdkPangoRenderer> = <_GdkPangoRenderer>;

define C-struct <_GdkPangoRendererClass>
  slot GdkPangoRendererClass-parent-class :: <_PangoRendererClass>;
end;

define C-pointer-type <GdkPangoRendererClass> => <_GdkPangoRendererClass>;

define C-function gdk-pango-renderer-get-type
  result res :: <GType>;
  c-name: "gdk_pango_renderer_get_type";
end;

define C-function gdk-pango-renderer-new
  input parameter arg1 :: <GdkScreen>;
  result res :: <PangoRenderer>;
  c-name: "gdk_pango_renderer_new";
end;

define C-function gdk-pango-renderer-get-default
  input parameter arg1 :: <GdkScreen>;
  result res :: <PangoRenderer>;
  c-name: "gdk_pango_renderer_get_default";
end;

define C-function gdk-pango-renderer-set-drawable
  input parameter arg1 :: <GdkPangoRenderer>;
  input parameter arg2 :: <GdkDrawable>;
  c-name: "gdk_pango_renderer_set_drawable";
end;

define C-function gdk-pango-renderer-set-gc
  input parameter arg1 :: <GdkPangoRenderer>;
  input parameter arg2 :: <GdkGC>;
  c-name: "gdk_pango_renderer_set_gc";
end;

define C-function gdk-pango-renderer-set-stipple
  input parameter arg1 :: <GdkPangoRenderer>;
  input parameter arg2 :: <PangoRenderPart>;
  input parameter arg3 :: <GdkBitmap>;
  c-name: "gdk_pango_renderer_set_stipple";
end;

define C-function gdk-pango-renderer-set-override-color
  input parameter arg1 :: <GdkPangoRenderer>;
  input parameter arg2 :: <PangoRenderPart>;
  input parameter arg3 :: <GdkColor>;
  c-name: "gdk_pango_renderer_set_override_color";
end;

define C-function gdk-pango-context-get-for-screen
  input parameter arg1 :: <GdkScreen>;
  result res :: <PangoContext>;
  c-name: "gdk_pango_context_get_for_screen";
end;

define C-function gdk-pango-context-get
  result res :: <PangoContext>;
  c-name: "gdk_pango_context_get";
end;

define C-function gdk-pango-context-set-colormap
  input parameter arg1 :: <PangoContext>;
  input parameter arg2 :: <GdkColormap>;
  c-name: "gdk_pango_context_set_colormap";
end;

define C-function gdk-pango-layout-line-get-clip-region
  input parameter arg1 :: <PangoLayoutLine>;
  input parameter arg2 :: <gint>;
  input parameter arg3 :: <gint>;
  input parameter arg4 :: <gint*>;
  input parameter arg5 :: <gint>;
  result res :: <GdkRegion>;
  c-name: "gdk_pango_layout_line_get_clip_region";
end;

define C-function gdk-pango-layout-get-clip-region
  input parameter arg1 :: <PangoLayout>;
  input parameter arg2 :: <gint>;
  input parameter arg3 :: <gint>;
  input parameter arg4 :: <gint*>;
  input parameter arg5 :: <gint>;
  result res :: <GdkRegion>;
  c-name: "gdk_pango_layout_get_clip_region";
end;

define C-struct <_GdkPangoAttrStipple>
  slot GdkPangoAttrStipple-attr :: <_PangoAttribute>;
  slot GdkPangoAttrStipple-stipple :: <GdkBitmap>;
end;

define C-pointer-type <GdkPangoAttrStipple> => <_GdkPangoAttrStipple>;

define C-struct <_GdkPangoAttrEmbossed>
  slot GdkPangoAttrEmbossed-attr :: <_PangoAttribute>;
  slot GdkPangoAttrEmbossed-embossed :: <C-signed-int>;
end;

define C-pointer-type <GdkPangoAttrEmbossed> => <_GdkPangoAttrEmbossed>;

define C-struct <_GdkPangoAttrEmbossColor>
  slot GdkPangoAttrEmbossColor-attr :: <_PangoAttribute>;
  slot GdkPangoAttrEmbossColor-color :: <_PangoColor>;
end;

define C-pointer-type <GdkPangoAttrEmbossColor> => <_GdkPangoAttrEmbossColor>;

define C-function gdk-pango-attr-stipple-new
  input parameter arg1 :: <GdkBitmap>;
  result res :: <PangoAttribute>;
  c-name: "gdk_pango_attr_stipple_new";
end;

define C-function gdk-pango-attr-embossed-new
  input parameter arg1 :: <gboolean>;
  result res :: <PangoAttribute>;
  c-name: "gdk_pango_attr_embossed_new";
end;

define C-function gdk-pango-attr-emboss-color-new
  input parameter arg1 :: <GdkColor>;
  result res :: <PangoAttribute>;
  c-name: "gdk_pango_attr_emboss_color_new";
end;

define C-subtype <_GdkDisplayManager> (<_GObject>) end;
define constant <GdkDisplayManager> = <_GdkDisplayManager>;

define constant <anonymous-2978> = <C-function-pointer>;
define C-struct <_GdkDisplayManagerClass>
  slot GdkDisplayManagerClass-parent-class :: <_GObjectClass>;
  slot GdkDisplayManagerClass-display-opened :: <anonymous-2978>;
end;

define C-pointer-type <GdkDisplayManagerClass> => <_GdkDisplayManagerClass>;

define C-function gdk-display-manager-get-type
  result res :: <GType>;
  c-name: "gdk_display_manager_get_type";
end;

define C-function gdk-display-manager-get
  result res :: <GdkDisplayManager>;
  c-name: "gdk_display_manager_get";
end;

define C-function gdk-display-manager-get-default-display
  input parameter arg1 :: <GdkDisplayManager>;
  result res :: <GdkDisplay>;
  c-name: "gdk_display_manager_get_default_display";
end;

define C-function gdk-display-manager-set-default-display
  input parameter arg1 :: <GdkDisplayManager>;
  input parameter arg2 :: <GdkDisplay>;
  c-name: "gdk_display_manager_set_default_display";
end;

define C-function gdk-display-manager-list-displays
  input parameter arg1 :: <GdkDisplayManager>;
  result res :: <GSList>;
  c-name: "gdk_display_manager_list_displays";
end;

define C-struct <_GdkKeymapKey>
  slot GdkKeymapKey-keycode :: <C-unsigned-int>;
  slot GdkKeymapKey-group :: <C-signed-int>;
  slot GdkKeymapKey-level :: <C-signed-int>;
end;

define C-pointer-type <GdkKeymapKey> => <_GdkKeymapKey>;

define C-subtype <_GdkKeymap> (<_GObject>) end;
define constant <GdkKeymap> = <_GdkKeymap>;

define constant <anonymous-2958> = <C-function-pointer>;
define constant <anonymous-2959> = <C-function-pointer>;
define C-struct <_GdkKeymapClass>
  slot GdkKeymapClass-parent-class :: <_GObjectClass>;
  slot GdkKeymapClass-direction-changed :: <anonymous-2958>;
  slot GdkKeymapClass-keys-changed :: <anonymous-2959>;
end;

define C-pointer-type <GdkKeymapClass> => <_GdkKeymapClass>;

define C-function gdk-keymap-get-type
  result res :: <GType>;
  c-name: "gdk_keymap_get_type";
end;

define C-function gdk-keymap-get-default
  result res :: <GdkKeymap>;
  c-name: "gdk_keymap_get_default";
end;

define C-function gdk-keymap-get-for-display
  input parameter arg1 :: <GdkDisplay>;
  result res :: <GdkKeymap>;
  c-name: "gdk_keymap_get_for_display";
end;

define C-function gdk-keymap-lookup-key
  input parameter arg1 :: <GdkKeymap>;
  input parameter arg2 :: <GdkKeymapKey>;
  result res :: <guint>;
  c-name: "gdk_keymap_lookup_key";
end;

define C-function gdk-keymap-translate-keyboard-state
  input parameter arg1 :: <GdkKeymap>;
  input parameter arg2 :: <guint>;
  input parameter arg3 :: <GdkModifierType>;
  input parameter arg4 :: <gint>;
  input parameter arg5 :: <guint*>;
  input parameter arg6 :: <gint*>;
  input parameter arg7 :: <gint*>;
  input parameter arg8 :: <GdkModifierType*>;
  result res :: <gboolean>;
  c-name: "gdk_keymap_translate_keyboard_state";
end;

define C-pointer-type <GdkKeymapKey*> => <GdkKeymapKey>;
define C-function gdk-keymap-get-entries-for-keyval
  input parameter arg1 :: <GdkKeymap>;
  input parameter arg2 :: <guint>;
  input parameter arg3 :: <GdkKeymapKey*>;
  input parameter arg4 :: <gint*>;
  result res :: <gboolean>;
  c-name: "gdk_keymap_get_entries_for_keyval";
end;

define C-pointer-type <guint**> => <guint*>;
define C-function gdk-keymap-get-entries-for-keycode
  input parameter arg1 :: <GdkKeymap>;
  input parameter arg2 :: <guint>;
  input parameter arg3 :: <GdkKeymapKey*>;
  input parameter arg4 :: <guint**>;
  input parameter arg5 :: <gint*>;
  result res :: <gboolean>;
  c-name: "gdk_keymap_get_entries_for_keycode";
end;

define C-function gdk-keymap-get-direction
  input parameter arg1 :: <GdkKeymap>;
  result res :: <PangoDirection>;
  c-name: "gdk_keymap_get_direction";
end;

define C-function gdk-keymap-have-bidi-layouts
  input parameter arg1 :: <GdkKeymap>;
  result res :: <gboolean>;
  c-name: "gdk_keymap_have_bidi_layouts";
end;

define C-function gdk-keyval-name
  input parameter arg1 :: <guint>;
  result res :: <gchar*>;
  c-name: "gdk_keyval_name";
end;

define C-function gdk-keyval-from-name
  input parameter arg1 :: <gchar*>;
  result res :: <guint>;
  c-name: "gdk_keyval_from_name";
end;

define C-function gdk-keyval-convert-case
  input parameter arg1 :: <guint>;
  input parameter arg2 :: <guint*>;
  input parameter arg3 :: <guint*>;
  c-name: "gdk_keyval_convert_case";
end;

define C-function gdk-keyval-to-upper
  input parameter arg1 :: <guint>;
  result res :: <guint>;
  c-name: "gdk_keyval_to_upper";
end;

define C-function gdk-keyval-to-lower
  input parameter arg1 :: <guint>;
  result res :: <guint>;
  c-name: "gdk_keyval_to_lower";
end;

define C-function gdk-keyval-is-upper
  input parameter arg1 :: <guint>;
  result res :: <gboolean>;
  c-name: "gdk_keyval_is_upper";
end;

define C-function gdk-keyval-is-lower
  input parameter arg1 :: <guint>;
  result res :: <gboolean>;
  c-name: "gdk_keyval_is_lower";
end;

define C-function gdk-keyval-to-unicode
  input parameter arg1 :: <guint>;
  result res :: <guint32>;
  c-name: "gdk_keyval_to_unicode";
end;

define C-function gdk-unicode-to-keyval
  input parameter arg1 :: <guint32>;
  result res :: <guint>;
  c-name: "gdk_unicode_to_keyval";
end;

define C-struct <_GdkImageClass>
  slot GdkImageClass-parent-class :: <_GObjectClass>;
end;

define C-pointer-type <GdkImageClass> => <_GdkImageClass>;

define C-function gdk-image-get-type
  result res :: <GType>;
  c-name: "gdk_image_get_type";
end;

define C-function gdk-image-new
  input parameter arg1 :: <GdkImageType>;
  input parameter arg2 :: <GdkVisual>;
  input parameter arg3 :: <gint>;
  input parameter arg4 :: <gint>;
  result res :: <GdkImage>;
  c-name: "gdk_image_new";
end;

define C-function gdk-image-get
  input parameter arg1 :: <GdkDrawable>;
  input parameter arg2 :: <gint>;
  input parameter arg3 :: <gint>;
  input parameter arg4 :: <gint>;
  input parameter arg5 :: <gint>;
  result res :: <GdkImage>;
  c-name: "gdk_image_get";
end;

define C-function gdk-image-ref
  input parameter arg1 :: <GdkImage>;
  result res :: <GdkImage>;
  c-name: "gdk_image_ref";
end;

define C-function gdk-image-unref
  input parameter arg1 :: <GdkImage>;
  c-name: "gdk_image_unref";
end;

define C-function gdk-image-put-pixel
  input parameter arg1 :: <GdkImage>;
  input parameter arg2 :: <gint>;
  input parameter arg3 :: <gint>;
  input parameter arg4 :: <guint32>;
  c-name: "gdk_image_put_pixel";
end;

define C-function gdk-image-get-pixel
  input parameter arg1 :: <GdkImage>;
  input parameter arg2 :: <gint>;
  input parameter arg3 :: <gint>;
  result res :: <guint32>;
  c-name: "gdk_image_get_pixel";
end;

define C-function gdk-image-set-colormap
  input parameter arg1 :: <GdkImage>;
  input parameter arg2 :: <GdkColormap>;
  c-name: "gdk_image_set_colormap";
end;

define C-function gdk-image-get-colormap
  input parameter arg1 :: <GdkImage>;
  result res :: <GdkColormap>;
  c-name: "gdk_image_get_colormap";
end;

define constant gdk-image-destroy = gdk-image-unref;

define C-function gdk-font-get-type
  result res :: <GType>;
  c-name: "gdk_font_get_type";
end;

define C-function gdk-font-ref
  input parameter arg1 :: <GdkFont>;
  result res :: <GdkFont>;
  c-name: "gdk_font_ref";
end;

define C-function gdk-font-unref
  input parameter arg1 :: <GdkFont>;
  c-name: "gdk_font_unref";
end;

define C-function gdk-font-id
  input parameter arg1 :: <GdkFont>;
  result res :: <gint>;
  c-name: "gdk_font_id";
end;

define C-function gdk-font-equal
  input parameter arg1 :: <GdkFont>;
  input parameter arg2 :: <GdkFont>;
  result res :: <gboolean>;
  c-name: "gdk_font_equal";
end;

define C-function gdk-font-load-for-display
  input parameter arg1 :: <GdkDisplay>;
  input parameter arg2 :: <gchar*>;
  result res :: <GdkFont>;
  c-name: "gdk_font_load_for_display";
end;

define C-function gdk-fontset-load-for-display
  input parameter arg1 :: <GdkDisplay>;
  input parameter arg2 :: <gchar*>;
  result res :: <GdkFont>;
  c-name: "gdk_fontset_load_for_display";
end;

define C-function gdk-font-from-description-for-display
  input parameter arg1 :: <GdkDisplay>;
  input parameter arg2 :: <PangoFontDescription>;
  result res :: <GdkFont>;
  c-name: "gdk_font_from_description_for_display";
end;

define C-function gdk-font-load
  input parameter arg1 :: <gchar*>;
  result res :: <GdkFont>;
  c-name: "gdk_font_load";
end;

define C-function gdk-fontset-load
  input parameter arg1 :: <gchar*>;
  result res :: <GdkFont>;
  c-name: "gdk_fontset_load";
end;

define C-function gdk-font-from-description
  input parameter arg1 :: <PangoFontDescription>;
  result res :: <GdkFont>;
  c-name: "gdk_font_from_description";
end;

define C-function gdk-string-width
  input parameter arg1 :: <GdkFont>;
  input parameter arg2 :: <gchar*>;
  result res :: <gint>;
  c-name: "gdk_string_width";
end;

define C-function gdk-text-width
  input parameter arg1 :: <GdkFont>;
  input parameter arg2 :: <gchar*>;
  input parameter arg3 :: <gint>;
  result res :: <gint>;
  c-name: "gdk_text_width";
end;

define C-function gdk-text-width-wc
  input parameter arg1 :: <GdkFont>;
  input parameter arg2 :: <GdkWChar*>;
  input parameter arg3 :: <gint>;
  result res :: <gint>;
  c-name: "gdk_text_width_wc";
end;

define C-function gdk-char-width
  input parameter arg1 :: <GdkFont>;
  input parameter arg2 :: <gchar>;
  result res :: <gint>;
  c-name: "gdk_char_width";
end;

define C-function gdk-char-width-wc
  input parameter arg1 :: <GdkFont>;
  input parameter arg2 :: <GdkWChar>;
  result res :: <gint>;
  c-name: "gdk_char_width_wc";
end;

define C-function gdk-string-measure
  input parameter arg1 :: <GdkFont>;
  input parameter arg2 :: <gchar*>;
  result res :: <gint>;
  c-name: "gdk_string_measure";
end;

define C-function gdk-text-measure
  input parameter arg1 :: <GdkFont>;
  input parameter arg2 :: <gchar*>;
  input parameter arg3 :: <gint>;
  result res :: <gint>;
  c-name: "gdk_text_measure";
end;

define C-function gdk-char-measure
  input parameter arg1 :: <GdkFont>;
  input parameter arg2 :: <gchar>;
  result res :: <gint>;
  c-name: "gdk_char_measure";
end;

define C-function gdk-string-height
  input parameter arg1 :: <GdkFont>;
  input parameter arg2 :: <gchar*>;
  result res :: <gint>;
  c-name: "gdk_string_height";
end;

define C-function gdk-text-height
  input parameter arg1 :: <GdkFont>;
  input parameter arg2 :: <gchar*>;
  input parameter arg3 :: <gint>;
  result res :: <gint>;
  c-name: "gdk_text_height";
end;

define C-function gdk-char-height
  input parameter arg1 :: <GdkFont>;
  input parameter arg2 :: <gchar>;
  result res :: <gint>;
  c-name: "gdk_char_height";
end;

define C-function gdk-text-extents
  input parameter arg1 :: <GdkFont>;
  input parameter arg2 :: <gchar*>;
  input parameter arg3 :: <gint>;
  input parameter arg4 :: <gint*>;
  input parameter arg5 :: <gint*>;
  input parameter arg6 :: <gint*>;
  input parameter arg7 :: <gint*>;
  input parameter arg8 :: <gint*>;
  c-name: "gdk_text_extents";
end;

define C-function gdk-text-extents-wc
  input parameter arg1 :: <GdkFont>;
  input parameter arg2 :: <GdkWChar*>;
  input parameter arg3 :: <gint>;
  input parameter arg4 :: <gint*>;
  input parameter arg5 :: <gint*>;
  input parameter arg6 :: <gint*>;
  input parameter arg7 :: <gint*>;
  input parameter arg8 :: <gint*>;
  c-name: "gdk_text_extents_wc";
end;

define C-function gdk-string-extents
  input parameter arg1 :: <GdkFont>;
  input parameter arg2 :: <gchar*>;
  input parameter arg3 :: <gint*>;
  input parameter arg4 :: <gint*>;
  input parameter arg5 :: <gint*>;
  input parameter arg6 :: <gint*>;
  input parameter arg7 :: <gint*>;
  c-name: "gdk_string_extents";
end;

define C-function gdk-font-get-display
  input parameter arg1 :: <GdkFont>;
  result res :: <GdkDisplay>;
  c-name: "gdk_font_get_display";
end;

define C-function gdk-cursor-type-get-type
  result res :: <GType>;
  c-name: "gdk_cursor_type_get_type";
end;

define C-function gdk-drag-action-get-type
  result res :: <GType>;
  c-name: "gdk_drag_action_get_type";
end;

define C-function gdk-drag-protocol-get-type
  result res :: <GType>;
  c-name: "gdk_drag_protocol_get_type";
end;

define C-function gdk-filter-return-get-type
  result res :: <GType>;
  c-name: "gdk_filter_return_get_type";
end;

define C-function gdk-event-type-get-type
  result res :: <GType>;
  c-name: "gdk_event_type_get_type";
end;

define C-function gdk-event-mask-get-type
  result res :: <GType>;
  c-name: "gdk_event_mask_get_type";
end;

define C-function gdk-visibility-state-get-type
  result res :: <GType>;
  c-name: "gdk_visibility_state_get_type";
end;

define C-function gdk-scroll-direction-get-type
  result res :: <GType>;
  c-name: "gdk_scroll_direction_get_type";
end;

define C-function gdk-notify-type-get-type
  result res :: <GType>;
  c-name: "gdk_notify_type_get_type";
end;

define C-function gdk-crossing-mode-get-type
  result res :: <GType>;
  c-name: "gdk_crossing_mode_get_type";
end;

define C-function gdk-property-state-get-type
  result res :: <GType>;
  c-name: "gdk_property_state_get_type";
end;

define C-function gdk-window-state-get-type
  result res :: <GType>;
  c-name: "gdk_window_state_get_type";
end;

define C-function gdk-setting-action-get-type
  result res :: <GType>;
  c-name: "gdk_setting_action_get_type";
end;

define C-function gdk-owner-change-get-type
  result res :: <GType>;
  c-name: "gdk_owner_change_get_type";
end;

define C-function gdk-font-type-get-type
  result res :: <GType>;
  c-name: "gdk_font_type_get_type";
end;

define C-function gdk-cap-style-get-type
  result res :: <GType>;
  c-name: "gdk_cap_style_get_type";
end;

define C-function gdk-fill-get-type
  result res :: <GType>;
  c-name: "gdk_fill_get_type";
end;

define C-function gdk-function-get-type
  result res :: <GType>;
  c-name: "gdk_function_get_type";
end;

define C-function gdk-join-style-get-type
  result res :: <GType>;
  c-name: "gdk_join_style_get_type";
end;

define C-function gdk-line-style-get-type
  result res :: <GType>;
  c-name: "gdk_line_style_get_type";
end;

define C-function gdk-subwindow-mode-get-type
  result res :: <GType>;
  c-name: "gdk_subwindow_mode_get_type";
end;

define C-function gdk-gc-values-mask-get-type
  result res :: <GType>;
  c-name: "gdk_gc_values_mask_get_type";
end;

define C-function gdk-image-type-get-type
  result res :: <GType>;
  c-name: "gdk_image_type_get_type";
end;

define C-function gdk-extension-mode-get-type
  result res :: <GType>;
  c-name: "gdk_extension_mode_get_type";
end;

define C-function gdk-input-source-get-type
  result res :: <GType>;
  c-name: "gdk_input_source_get_type";
end;

define C-function gdk-input-mode-get-type
  result res :: <GType>;
  c-name: "gdk_input_mode_get_type";
end;

define C-function gdk-axis-use-get-type
  result res :: <GType>;
  c-name: "gdk_axis_use_get_type";
end;

define C-function gdk-prop-mode-get-type
  result res :: <GType>;
  c-name: "gdk_prop_mode_get_type";
end;

define C-function gdk-fill-rule-get-type
  result res :: <GType>;
  c-name: "gdk_fill_rule_get_type";
end;

define C-function gdk-overlap-type-get-type
  result res :: <GType>;
  c-name: "gdk_overlap_type_get_type";
end;

define C-function gdk-rgb-dither-get-type
  result res :: <GType>;
  c-name: "gdk_rgb_dither_get_type";
end;

define C-function gdk-byte-order-get-type
  result res :: <GType>;
  c-name: "gdk_byte_order_get_type";
end;

define C-function gdk-modifier-type-get-type
  result res :: <GType>;
  c-name: "gdk_modifier_type_get_type";
end;

define C-function gdk-input-condition-get-type
  result res :: <GType>;
  c-name: "gdk_input_condition_get_type";
end;

define C-function gdk-status-get-type
  result res :: <GType>;
  c-name: "gdk_status_get_type";
end;

define C-function gdk-grab-status-get-type
  result res :: <GType>;
  c-name: "gdk_grab_status_get_type";
end;

define C-function gdk-visual-type-get-type
  result res :: <GType>;
  c-name: "gdk_visual_type_get_type";
end;

define C-function gdk-window-class-get-type
  result res :: <GType>;
  c-name: "gdk_window_class_get_type";
end;

define C-function gdk-window-type-get-type
  result res :: <GType>;
  c-name: "gdk_window_type_get_type";
end;

define C-function gdk-window-attributes-type-get-type
  result res :: <GType>;
  c-name: "gdk_window_attributes_type_get_type";
end;

define C-function gdk-window-hints-get-type
  result res :: <GType>;
  c-name: "gdk_window_hints_get_type";
end;

define C-function gdk-window-type-hint-get-type
  result res :: <GType>;
  c-name: "gdk_window_type_hint_get_type";
end;

define C-function gdk-wm-decoration-get-type
  result res :: <GType>;
  c-name: "gdk_wm_decoration_get_type";
end;

define C-function gdk-wm-function-get-type
  result res :: <GType>;
  c-name: "gdk_wm_function_get_type";
end;

define C-function gdk-gravity-get-type
  result res :: <GType>;
  c-name: "gdk_gravity_get_type";
end;

define C-function gdk-window-edge-get-type
  result res :: <GType>;
  c-name: "gdk_window_edge_get_type";
end;

define C-function gdk-cursor-get-type
  result res :: <GType>;
  c-name: "gdk_cursor_get_type";
end;

define C-function gdk-cursor-new-for-display
  input parameter arg1 :: <GdkDisplay>;
  input parameter arg2 :: <GdkCursorType>;
  result res :: <GdkCursor>;
  c-name: "gdk_cursor_new_for_display";
end;

define C-function gdk-cursor-new
  input parameter arg1 :: <GdkCursorType>;
  result res :: <GdkCursor>;
  c-name: "gdk_cursor_new";
end;

define C-function gdk-cursor-new-from-pixmap
  input parameter arg1 :: <GdkPixmap>;
  input parameter arg2 :: <GdkPixmap>;
  input parameter arg3 :: <GdkColor>;
  input parameter arg4 :: <GdkColor>;
  input parameter arg5 :: <gint>;
  input parameter arg6 :: <gint>;
  result res :: <GdkCursor>;
  c-name: "gdk_cursor_new_from_pixmap";
end;

define C-function gdk-cursor-new-from-pixbuf
  input parameter arg1 :: <GdkDisplay>;
  input parameter arg2 :: <GdkPixbuf>;
  input parameter arg3 :: <gint>;
  input parameter arg4 :: <gint>;
  result res :: <GdkCursor>;
  c-name: "gdk_cursor_new_from_pixbuf";
end;

define C-function gdk-cursor-get-display
  input parameter arg1 :: <GdkCursor>;
  result res :: <GdkDisplay>;
  c-name: "gdk_cursor_get_display";
end;

define C-function gdk-cursor-ref
  input parameter arg1 :: <GdkCursor>;
  result res :: <GdkCursor>;
  c-name: "gdk_cursor_ref";
end;

define C-function gdk-cursor-unref
  input parameter arg1 :: <GdkCursor>;
  c-name: "gdk_cursor_unref";
end;

define C-function gdk-cursor-new-from-name
  input parameter arg1 :: <GdkDisplay>;
  input parameter arg2 :: <gchar*>;
  result res :: <GdkCursor>;
  c-name: "gdk_cursor_new_from_name";
end;

define C-function gdk-cursor-get-image
  input parameter arg1 :: <GdkCursor>;
  result res :: <GdkPixbuf>;
  c-name: "gdk_cursor_get_image";
end;

define constant gdk-cursor-destroy = gdk-cursor-unref;

define C-function gdk-cairo-create
  input parameter arg1 :: <GdkDrawable>;
  result res :: <cairo-t>;
  c-name: "gdk_cairo_create";
end;

define C-function gdk-cairo-set-source-color
  input parameter arg1 :: <cairo-t>;
  input parameter arg2 :: <GdkColor>;
  c-name: "gdk_cairo_set_source_color";
end;

define C-function gdk-cairo-set-source-pixbuf
  input parameter arg1 :: <cairo-t>;
  input parameter arg2 :: <GdkPixbuf>;
  input parameter arg3 :: <C-double>;
  input parameter arg4 :: <C-double>;
  c-name: "gdk_cairo_set_source_pixbuf";
end;

define C-function gdk-cairo-set-source-pixmap
  input parameter arg1 :: <cairo-t>;
  input parameter arg2 :: <GdkPixmap>;
  input parameter arg3 :: <C-double>;
  input parameter arg4 :: <C-double>;
  c-name: "gdk_cairo_set_source_pixmap";
end;

define C-function gdk-cairo-rectangle
  input parameter arg1 :: <cairo-t>;
  input parameter arg2 :: <GdkRectangle>;
  c-name: "gdk_cairo_rectangle";
end;

define C-function gdk-cairo-region
  input parameter arg1 :: <cairo-t>;
  input parameter arg2 :: <GdkRegion>;
  c-name: "gdk_cairo_region";
end;

define C-struct <_PangoCairoFont>
end;

define C-pointer-type <PangoCairoFont> => <_PangoCairoFont>;

define C-struct <_PangoCairoFontMap>
end;

define C-pointer-type <PangoCairoFontMap> => <_PangoCairoFontMap>;

define constant <anonymous-2590> = <C-function-pointer>;
define constant <PangoCairoShapeRendererFunc> = <anonymous-2590>;

define C-function pango-cairo-font-map-get-type
  result res :: <GType>;
  c-name: "pango_cairo_font_map_get_type";
end;

define C-function pango-cairo-font-map-new
  result res :: <PangoFontMap>;
  c-name: "pango_cairo_font_map_new";
end;

define C-function pango-cairo-font-map-new-for-font-type
  input parameter arg1 :: <cairo-font-type-t>;
  result res :: <PangoFontMap>;
  c-name: "pango_cairo_font_map_new_for_font_type";
end;

define C-function pango-cairo-font-map-get-default
  result res :: <PangoFontMap>;
  c-name: "pango_cairo_font_map_get_default";
end;

define C-function pango-cairo-font-map-get-font-type
  input parameter arg1 :: <PangoCairoFontMap>;
  result res :: <cairo-font-type-t>;
  c-name: "pango_cairo_font_map_get_font_type";
end;

define C-function pango-cairo-font-map-set-resolution
  input parameter arg1 :: <PangoCairoFontMap>;
  input parameter arg2 :: <C-double>;
  c-name: "pango_cairo_font_map_set_resolution";
end;

define C-function pango-cairo-font-map-get-resolution
  input parameter arg1 :: <PangoCairoFontMap>;
  result res :: <C-double>;
  c-name: "pango_cairo_font_map_get_resolution";
end;

define C-function pango-cairo-font-map-create-context
  input parameter arg1 :: <PangoCairoFontMap>;
  result res :: <PangoContext>;
  c-name: "pango_cairo_font_map_create_context";
end;

define C-function pango-cairo-font-get-type
  result res :: <GType>;
  c-name: "pango_cairo_font_get_type";
end;

define C-function pango-cairo-font-get-scaled-font
  input parameter arg1 :: <PangoCairoFont>;
  result res :: <cairo-scaled-font-t>;
  c-name: "pango_cairo_font_get_scaled_font";
end;

define C-function pango-cairo-update-context
  input parameter arg1 :: <cairo-t>;
  input parameter arg2 :: <PangoContext>;
  c-name: "pango_cairo_update_context";
end;

define C-function pango-cairo-context-set-font-options
  input parameter arg1 :: <PangoContext>;
  input parameter arg2 :: <cairo-font-options-t>;
  c-name: "pango_cairo_context_set_font_options";
end;

define C-function pango-cairo-context-get-font-options
  input parameter arg1 :: <PangoContext>;
  result res :: <cairo-font-options-t>;
  c-name: "pango_cairo_context_get_font_options";
end;

define C-function pango-cairo-context-set-resolution
  input parameter arg1 :: <PangoContext>;
  input parameter arg2 :: <C-double>;
  c-name: "pango_cairo_context_set_resolution";
end;

define C-function pango-cairo-context-get-resolution
  input parameter arg1 :: <PangoContext>;
  result res :: <C-double>;
  c-name: "pango_cairo_context_get_resolution";
end;

define C-function pango-cairo-context-set-shape-renderer
  input parameter arg1 :: <PangoContext>;
  input parameter arg2 :: <PangoCairoShapeRendererFunc>;
  input parameter arg3 :: <gpointer>;
  input parameter arg4 :: <GDestroyNotify>;
  c-name: "pango_cairo_context_set_shape_renderer";
end;

define C-function pango-cairo-context-get-shape-renderer
  input parameter arg1 :: <PangoContext>;
  input parameter arg2 :: <gpointer*>;
  result res :: <PangoCairoShapeRendererFunc>;
  c-name: "pango_cairo_context_get_shape_renderer";
end;

define C-function pango-cairo-create-layout
  input parameter arg1 :: <cairo-t>;
  result res :: <PangoLayout>;
  c-name: "pango_cairo_create_layout";
end;

define C-function pango-cairo-update-layout
  input parameter arg1 :: <cairo-t>;
  input parameter arg2 :: <PangoLayout>;
  c-name: "pango_cairo_update_layout";
end;

define C-function pango-cairo-show-glyph-string
  input parameter arg1 :: <cairo-t>;
  input parameter arg2 :: <PangoFont>;
  input parameter arg3 :: <PangoGlyphString>;
  c-name: "pango_cairo_show_glyph_string";
end;

define C-function pango-cairo-show-layout-line
  input parameter arg1 :: <cairo-t>;
  input parameter arg2 :: <PangoLayoutLine>;
  c-name: "pango_cairo_show_layout_line";
end;

define C-function pango-cairo-show-layout
  input parameter arg1 :: <cairo-t>;
  input parameter arg2 :: <PangoLayout>;
  c-name: "pango_cairo_show_layout";
end;

define C-function pango-cairo-show-error-underline
  input parameter arg1 :: <cairo-t>;
  input parameter arg2 :: <C-double>;
  input parameter arg3 :: <C-double>;
  input parameter arg4 :: <C-double>;
  input parameter arg5 :: <C-double>;
  c-name: "pango_cairo_show_error_underline";
end;

define C-function pango-cairo-glyph-string-path
  input parameter arg1 :: <cairo-t>;
  input parameter arg2 :: <PangoFont>;
  input parameter arg3 :: <PangoGlyphString>;
  c-name: "pango_cairo_glyph_string_path";
end;

define C-function pango-cairo-layout-line-path
  input parameter arg1 :: <cairo-t>;
  input parameter arg2 :: <PangoLayoutLine>;
  c-name: "pango_cairo_layout_line_path";
end;

define C-function pango-cairo-layout-path
  input parameter arg1 :: <cairo-t>;
  input parameter arg2 :: <PangoLayout>;
  c-name: "pango_cairo_layout_path";
end;

define C-function pango-cairo-error-underline-path
  input parameter arg1 :: <cairo-t>;
  input parameter arg2 :: <C-double>;
  input parameter arg3 :: <C-double>;
  input parameter arg4 :: <C-double>;
  input parameter arg5 :: <C-double>;
  c-name: "pango_cairo_error_underline_path";
end;

define constant <anonymous-3542> = <C-function-pointer>;
define constant <anonymous-3543> = <C-function-pointer>;
define constant <anonymous-3544> = <C-function-pointer>;
define constant <anonymous-3545> = <C-function-pointer>;
define constant <anonymous-3546> = <C-function-pointer>;
define constant <anonymous-3547> = <C-function-pointer>;
define C-struct <_GtkAdjustmentClass>
  slot GtkAdjustmentClass-parent-class :: <_GtkObjectClass>;
  slot GtkAdjustmentClass-changed :: <anonymous-3542>;
  slot GtkAdjustmentClass-value-changed :: <anonymous-3543>;
  slot GtkAdjustmentClass-_gtk-reserved1 :: <anonymous-3544>;
  slot GtkAdjustmentClass-_gtk-reserved2 :: <anonymous-3545>;
  slot GtkAdjustmentClass-_gtk-reserved3 :: <anonymous-3546>;
  slot GtkAdjustmentClass-_gtk-reserved4 :: <anonymous-3547>;
end;

define C-pointer-type <GtkAdjustmentClass> => <_GtkAdjustmentClass>;

define C-function gtk-adjustment-get-type
  result res :: <GType>;
  c-name: "gtk_adjustment_get_type";
end;

define C-function gtk-adjustment-new
  input parameter arg1 :: <gdouble>;
  input parameter arg2 :: <gdouble>;
  input parameter arg3 :: <gdouble>;
  input parameter arg4 :: <gdouble>;
  input parameter arg5 :: <gdouble>;
  input parameter arg6 :: <gdouble>;
  result res :: <GtkObject>;
  c-name: "gtk_adjustment_new";
end;

define C-function gtk-adjustment-changed
  input parameter arg1 :: <GtkAdjustment>;
  c-name: "gtk_adjustment_changed";
end;

define C-function gtk-adjustment-value-changed
  input parameter arg1 :: <GtkAdjustment>;
  c-name: "gtk_adjustment_value_changed";
end;

define C-function gtk-adjustment-clamp-page
  input parameter arg1 :: <GtkAdjustment>;
  input parameter arg2 :: <gdouble>;
  input parameter arg3 :: <gdouble>;
  c-name: "gtk_adjustment_clamp_page";
end;

define C-function gtk-adjustment-get-value
  input parameter arg1 :: <GtkAdjustment>;
  result res :: <gdouble>;
  c-name: "gtk_adjustment_get_value";
end;

define C-function gtk-adjustment-set-value
  input parameter arg1 :: <GtkAdjustment>;
  input parameter arg2 :: <gdouble>;
  c-name: "gtk_adjustment_set_value";
end;

define constant <GtkObjectFlags> = <C-int>;
define constant $GTK-IN-DESTRUCTION = 1;
define constant $GTK-FLOATING = 2;
define constant $GTK-RESERVED-1 = 4;
define constant $GTK-RESERVED-2 = 8;

define C-function gtk-object-get-type
  result res :: <GtkType>;
  c-name: "gtk_object_get_type";
end;

define C-function gtk-object-sink
  input parameter arg1 :: <GtkObject>;
  c-name: "gtk_object_sink";
end;

define C-function gtk-object-destroy
  input parameter arg1 :: <GtkObject>;
  c-name: "gtk_object_destroy";
end;

define C-function gtk-object-new
  input parameter arg1 :: <GtkType>;
  input parameter arg2 :: <gchar*>;
  result res :: <GtkObject>;
  c-name: "gtk_object_new";
end;

define C-function gtk-object-ref
  input parameter arg1 :: <GtkObject>;
  result res :: <GtkObject>;
  c-name: "gtk_object_ref";
end;

define C-function gtk-object-unref
  input parameter arg1 :: <GtkObject>;
  c-name: "gtk_object_unref";
end;

define constant <anonymous-3500> = <C-function-pointer>;
define constant <GtkDestroyNotify> = <anonymous-3500>;

define C-function gtk-object-weakref
  input parameter arg1 :: <GtkObject>;
  input parameter arg2 :: <GtkDestroyNotify>;
  input parameter arg3 :: <gpointer>;
  c-name: "gtk_object_weakref";
end;

define C-function gtk-object-weakunref
  input parameter arg1 :: <GtkObject>;
  input parameter arg2 :: <GtkDestroyNotify>;
  input parameter arg3 :: <gpointer>;
  c-name: "gtk_object_weakunref";
end;

define C-function gtk-object-set-data
  input parameter arg1 :: <GtkObject>;
  input parameter arg2 :: <gchar*>;
  input parameter arg3 :: <gpointer>;
  c-name: "gtk_object_set_data";
end;

define C-function gtk-object-set-data-full
  input parameter arg1 :: <GtkObject>;
  input parameter arg2 :: <gchar*>;
  input parameter arg3 :: <gpointer>;
  input parameter arg4 :: <GtkDestroyNotify>;
  c-name: "gtk_object_set_data_full";
end;

define C-function gtk-object-remove-data
  input parameter arg1 :: <GtkObject>;
  input parameter arg2 :: <gchar*>;
  c-name: "gtk_object_remove_data";
end;

define C-function gtk-object-get-data
  input parameter arg1 :: <GtkObject>;
  input parameter arg2 :: <gchar*>;
  result res :: <gpointer>;
  c-name: "gtk_object_get_data";
end;

define C-function gtk-object-remove-no-notify
  input parameter arg1 :: <GtkObject>;
  input parameter arg2 :: <gchar*>;
  c-name: "gtk_object_remove_no_notify";
end;

define C-function gtk-object-set-user-data
  input parameter arg1 :: <GtkObject>;
  input parameter arg2 :: <gpointer>;
  c-name: "gtk_object_set_user_data";
end;

define C-function gtk-object-get-user-data
  input parameter arg1 :: <GtkObject>;
  result res :: <gpointer>;
  c-name: "gtk_object_get_user_data";
end;

define C-function gtk-object-set-data-by-id
  input parameter arg1 :: <GtkObject>;
  input parameter arg2 :: <GQuark>;
  input parameter arg3 :: <gpointer>;
  c-name: "gtk_object_set_data_by_id";
end;

define C-function gtk-object-set-data-by-id-full
  input parameter arg1 :: <GtkObject>;
  input parameter arg2 :: <GQuark>;
  input parameter arg3 :: <gpointer>;
  input parameter arg4 :: <GtkDestroyNotify>;
  c-name: "gtk_object_set_data_by_id_full";
end;

define C-function gtk-object-get-data-by-id
  input parameter arg1 :: <GtkObject>;
  input parameter arg2 :: <GQuark>;
  result res :: <gpointer>;
  c-name: "gtk_object_get_data_by_id";
end;

define C-function gtk-object-remove-data-by-id
  input parameter arg1 :: <GtkObject>;
  input parameter arg2 :: <GQuark>;
  c-name: "gtk_object_remove_data_by_id";
end;

define C-function gtk-object-remove-no-notify-by-id
  input parameter arg1 :: <GtkObject>;
  input parameter arg2 :: <GQuark>;
  c-name: "gtk_object_remove_no_notify_by_id";
end;

define constant <GtkArgFlags> = <C-int>;
define constant $GTK-ARG-READABLE = 1;
define constant $GTK-ARG-WRITABLE = 2;
define constant $GTK-ARG-CONSTRUCT = 4;
define constant $GTK-ARG-CONSTRUCT-ONLY = 8;
define constant $GTK-ARG-CHILD-ARG = 16;

define C-function gtk-object-get
  input parameter arg1 :: <GtkObject>;
  input parameter arg2 :: <gchar*>;
  c-name: "gtk_object_get";
end;

define C-function gtk-object-set
  input parameter arg1 :: <GtkObject>;
  input parameter arg2 :: <gchar*>;
  c-name: "gtk_object_set";
end;

define C-function gtk-object-add-arg-type
  input parameter arg1 :: <gchar*>;
  input parameter arg2 :: <GtkType>;
  input parameter arg3 :: <guint>;
  input parameter arg4 :: <guint>;
  c-name: "gtk_object_add_arg_type";
end;

define constant gtk-object-data-try-key = g-quark-try-string;

define constant gtk-object-data-force-id = g-quark-from-string;

define constant $GTK-ARG-READWRITE = 0;

define constant <GtkDebugFlag> = <C-int>;
define constant $GTK-DEBUG-MISC = 1;
define constant $GTK-DEBUG-PLUGSOCKET = 2;
define constant $GTK-DEBUG-TEXT = 4;
define constant $GTK-DEBUG-TREE = 8;
define constant $GTK-DEBUG-UPDATES = 16;
define constant $GTK-DEBUG-KEYBINDINGS = 32;
define constant $GTK-DEBUG-MULTIHEAD = 64;
define constant $GTK-DEBUG-MODULES = 128;
define constant $GTK-DEBUG-GEOMETRY = 256;
define constant $GTK-DEBUG-ICONTHEME = 512;
define constant $GTK-DEBUG-PRINTING = 1024;
define constant $GTK-DEBUG-BUILDER = 2048;

 /* Ignoring declaration for {instance of <variable-declaration>} "gtk-debug-flags"*/
define constant <GtkFundamentalType> = <GType>;

define constant <GtkTypeObject> = <GTypeInstance>;

define constant <GtkTypeClass> = <GTypeClass>;

define constant <GtkClassInitFunc> = <GBaseInitFunc>;

define constant <GtkObjectInitFunc> = <GInstanceInitFunc>;

define C-function gtk-identifier-get-type
  result res :: <GType>;
  c-name: "gtk_identifier_get_type";
end;

define constant <anonymous-3499> = <C-function-pointer>;
define constant <GtkFunction> = <anonymous-3499>;

define constant <anonymous-3501> = <C-function-pointer>;
define constant <GtkCallbackMarshal> = <anonymous-3501>;

define C-struct <_GtkTypeInfo>
  slot GtkTypeInfo-type-name :: <gchar*>;
  slot GtkTypeInfo-object-size :: <C-unsigned-int>;
  slot GtkTypeInfo-class-size :: <C-unsigned-int>;
  slot GtkTypeInfo-class-init-func :: <anonymous-1521>;
  slot GtkTypeInfo-object-init-func :: <anonymous-1525>;
  slot GtkTypeInfo-reserved-1 :: <C-void*>;
  slot GtkTypeInfo-reserved-2 :: <C-void*>;
  slot GtkTypeInfo-base-class-init-func :: <anonymous-1521>;
end;

define C-pointer-type <GtkTypeInfo> => <_GtkTypeInfo>;

define constant <GtkSignalMarshaller> = <GSignalCMarshaller>;

define C-function gtk-type-class
  input parameter arg1 :: <GtkType>;
  result res :: <gpointer>;
  c-name: "gtk_type_class";
end;

define C-function gtk-type-unique
  input parameter arg1 :: <GtkType>;
  input parameter arg2 :: <GtkTypeInfo>;
  result res :: <GtkType>;
  c-name: "gtk_type_unique";
end;

define C-function gtk-type-new
  input parameter arg1 :: <GtkType>;
  result res :: <gpointer>;
  c-name: "gtk_type_new";
end;

define constant <GtkEnumValue> = <GEnumValue>;

define constant <GtkFlagValue> = <GFlagsValue>;

define C-function gtk-type-enum-get-values
  input parameter arg1 :: <GtkType>;
  result res :: <GtkEnumValue>;
  c-name: "gtk_type_enum_get_values";
end;

define C-function gtk-type-flags-get-values
  input parameter arg1 :: <GtkType>;
  result res :: <GtkFlagValue>;
  c-name: "gtk_type_flags_get_values";
end;

define C-function gtk-type-enum-find-value
  input parameter arg1 :: <GtkType>;
  input parameter arg2 :: <gchar*>;
  result res :: <GtkEnumValue>;
  c-name: "gtk_type_enum_find_value";
end;

define C-function gtk-type-flags-find-value
  input parameter arg1 :: <GtkType>;
  input parameter arg2 :: <gchar*>;
  result res :: <GtkFlagValue>;
  c-name: "gtk_type_flags_find_value";
end;

define C-function gtk-type-init
  input parameter arg1 :: <GTypeDebugFlags>;
  c-name: "gtk_type_init";
end;

define constant $GTK-TYPE-INVALID = 0;

define constant $GTK-TYPE-NONE = 4;

define constant $GTK-TYPE-ENUM = 48;

define constant $GTK-TYPE-FLAGS = 52;

define constant $GTK-TYPE-CHAR = 12;

define constant $GTK-TYPE-UCHAR = 16;

define constant $GTK-TYPE-BOOL = 20;

define constant $GTK-TYPE-INT = 24;

define constant $GTK-TYPE-UINT = 28;

define constant $GTK-TYPE-LONG = 32;

define constant $GTK-TYPE-ULONG = 36;

define constant $GTK-TYPE-FLOAT = 56;

define constant $GTK-TYPE-DOUBLE = 60;

define constant $GTK-TYPE-STRING = 64;

define constant $GTK-TYPE-BOXED = 72;

define constant $GTK-TYPE-POINTER = 68;

define constant $GTK-TYPE-FUNDAMENTAL-LAST = -1;

define constant $GTK-TYPE-FUNDAMENTAL-MAX = 1020;

define C-function gtk-accel-flags-get-type
  result res :: <GType>;
  c-name: "gtk_accel_flags_get_type";
end;

define C-function gtk-assistant-page-type-get-type
  result res :: <GType>;
  c-name: "gtk_assistant_page_type_get_type";
end;

define C-function gtk-builder-error-get-type
  result res :: <GType>;
  c-name: "gtk_builder_error_get_type";
end;

define C-function gtk-calendar-display-options-get-type
  result res :: <GType>;
  c-name: "gtk_calendar_display_options_get_type";
end;

define C-function gtk-cell-renderer-state-get-type
  result res :: <GType>;
  c-name: "gtk_cell_renderer_state_get_type";
end;

define C-function gtk-cell-renderer-mode-get-type
  result res :: <GType>;
  c-name: "gtk_cell_renderer_mode_get_type";
end;

define C-function gtk-cell-renderer-accel-mode-get-type
  result res :: <GType>;
  c-name: "gtk_cell_renderer_accel_mode_get_type";
end;

define C-function gtk-cell-type-get-type
  result res :: <GType>;
  c-name: "gtk_cell_type_get_type";
end;

define C-function gtk-clist-drag-pos-get-type
  result res :: <GType>;
  c-name: "gtk_clist_drag_pos_get_type";
end;

define C-function gtk-button-action-get-type
  result res :: <GType>;
  c-name: "gtk_button_action_get_type";
end;

define C-function gtk-ctree-pos-get-type
  result res :: <GType>;
  c-name: "gtk_ctree_pos_get_type";
end;

define C-function gtk-ctree-line-style-get-type
  result res :: <GType>;
  c-name: "gtk_ctree_line_style_get_type";
end;

define C-function gtk-ctree-expander-style-get-type
  result res :: <GType>;
  c-name: "gtk_ctree_expander_style_get_type";
end;

define C-function gtk-ctree-expansion-type-get-type
  result res :: <GType>;
  c-name: "gtk_ctree_expansion_type_get_type";
end;

define C-function gtk-debug-flag-get-type
  result res :: <GType>;
  c-name: "gtk_debug_flag_get_type";
end;

define C-function gtk-dialog-flags-get-type
  result res :: <GType>;
  c-name: "gtk_dialog_flags_get_type";
end;

define C-function gtk-response-type-get-type
  result res :: <GType>;
  c-name: "gtk_response_type_get_type";
end;

define C-function gtk-dest-defaults-get-type
  result res :: <GType>;
  c-name: "gtk_dest_defaults_get_type";
end;

define C-function gtk-target-flags-get-type
  result res :: <GType>;
  c-name: "gtk_target_flags_get_type";
end;

define C-function gtk-anchor-type-get-type
  result res :: <GType>;
  c-name: "gtk_anchor_type_get_type";
end;

define C-function gtk-arrow-type-get-type
  result res :: <GType>;
  c-name: "gtk_arrow_type_get_type";
end;

define C-function gtk-attach-options-get-type
  result res :: <GType>;
  c-name: "gtk_attach_options_get_type";
end;

define C-function gtk-button-box-style-get-type
  result res :: <GType>;
  c-name: "gtk_button_box_style_get_type";
end;

define C-function gtk-curve-type-get-type
  result res :: <GType>;
  c-name: "gtk_curve_type_get_type";
end;

define C-function gtk-delete-type-get-type
  result res :: <GType>;
  c-name: "gtk_delete_type_get_type";
end;

define C-function gtk-direction-type-get-type
  result res :: <GType>;
  c-name: "gtk_direction_type_get_type";
end;

define C-function gtk-expander-style-get-type
  result res :: <GType>;
  c-name: "gtk_expander_style_get_type";
end;

define C-function gtk-icon-size-get-type
  result res :: <GType>;
  c-name: "gtk_icon_size_get_type";
end;

define C-function gtk-sensitivity-type-get-type
  result res :: <GType>;
  c-name: "gtk_sensitivity_type_get_type";
end;

define C-function gtk-side-type-get-type
  result res :: <GType>;
  c-name: "gtk_side_type_get_type";
end;

define C-function gtk-text-direction-get-type
  result res :: <GType>;
  c-name: "gtk_text_direction_get_type";
end;

define C-function gtk-justification-get-type
  result res :: <GType>;
  c-name: "gtk_justification_get_type";
end;

define C-function gtk-match-type-get-type
  result res :: <GType>;
  c-name: "gtk_match_type_get_type";
end;

define C-function gtk-menu-direction-type-get-type
  result res :: <GType>;
  c-name: "gtk_menu_direction_type_get_type";
end;

define C-function gtk-metric-type-get-type
  result res :: <GType>;
  c-name: "gtk_metric_type_get_type";
end;

define C-function gtk-movement-step-get-type
  result res :: <GType>;
  c-name: "gtk_movement_step_get_type";
end;

define C-function gtk-scroll-step-get-type
  result res :: <GType>;
  c-name: "gtk_scroll_step_get_type";
end;

define C-function gtk-orientation-get-type
  result res :: <GType>;
  c-name: "gtk_orientation_get_type";
end;

define C-function gtk-corner-type-get-type
  result res :: <GType>;
  c-name: "gtk_corner_type_get_type";
end;

define C-function gtk-pack-type-get-type
  result res :: <GType>;
  c-name: "gtk_pack_type_get_type";
end;

define C-function gtk-path-priority-type-get-type
  result res :: <GType>;
  c-name: "gtk_path_priority_type_get_type";
end;

define C-function gtk-path-type-get-type
  result res :: <GType>;
  c-name: "gtk_path_type_get_type";
end;

define C-function gtk-policy-type-get-type
  result res :: <GType>;
  c-name: "gtk_policy_type_get_type";
end;

define C-function gtk-position-type-get-type
  result res :: <GType>;
  c-name: "gtk_position_type_get_type";
end;

define C-function gtk-preview-type-get-type
  result res :: <GType>;
  c-name: "gtk_preview_type_get_type";
end;

define C-function gtk-relief-style-get-type
  result res :: <GType>;
  c-name: "gtk_relief_style_get_type";
end;

define C-function gtk-resize-mode-get-type
  result res :: <GType>;
  c-name: "gtk_resize_mode_get_type";
end;

define C-function gtk-signal-run-type-get-type
  result res :: <GType>;
  c-name: "gtk_signal_run_type_get_type";
end;

define C-function gtk-scroll-type-get-type
  result res :: <GType>;
  c-name: "gtk_scroll_type_get_type";
end;

define C-function gtk-selection-mode-get-type
  result res :: <GType>;
  c-name: "gtk_selection_mode_get_type";
end;

define C-function gtk-shadow-type-get-type
  result res :: <GType>;
  c-name: "gtk_shadow_type_get_type";
end;

define C-function gtk-state-type-get-type
  result res :: <GType>;
  c-name: "gtk_state_type_get_type";
end;

define C-function gtk-submenu-direction-get-type
  result res :: <GType>;
  c-name: "gtk_submenu_direction_get_type";
end;

define C-function gtk-submenu-placement-get-type
  result res :: <GType>;
  c-name: "gtk_submenu_placement_get_type";
end;

define C-function gtk-toolbar-style-get-type
  result res :: <GType>;
  c-name: "gtk_toolbar_style_get_type";
end;

define C-function gtk-update-type-get-type
  result res :: <GType>;
  c-name: "gtk_update_type_get_type";
end;

define C-function gtk-visibility-get-type
  result res :: <GType>;
  c-name: "gtk_visibility_get_type";
end;

define C-function gtk-window-position-get-type
  result res :: <GType>;
  c-name: "gtk_window_position_get_type";
end;

define C-function gtk-window-type-get-type
  result res :: <GType>;
  c-name: "gtk_window_type_get_type";
end;

define C-function gtk-wrap-mode-get-type
  result res :: <GType>;
  c-name: "gtk_wrap_mode_get_type";
end;

define C-function gtk-sort-type-get-type
  result res :: <GType>;
  c-name: "gtk_sort_type_get_type";
end;

define C-function gtk-im-preedit-style-get-type
  result res :: <GType>;
  c-name: "gtk_im_preedit_style_get_type";
end;

define C-function gtk-im-status-style-get-type
  result res :: <GType>;
  c-name: "gtk_im_status_style_get_type";
end;

define C-function gtk-pack-direction-get-type
  result res :: <GType>;
  c-name: "gtk_pack_direction_get_type";
end;

define C-function gtk-print-pages-get-type
  result res :: <GType>;
  c-name: "gtk_print_pages_get_type";
end;

define C-function gtk-page-set-get-type
  result res :: <GType>;
  c-name: "gtk_page_set_get_type";
end;

define C-function gtk-page-orientation-get-type
  result res :: <GType>;
  c-name: "gtk_page_orientation_get_type";
end;

define C-function gtk-print-quality-get-type
  result res :: <GType>;
  c-name: "gtk_print_quality_get_type";
end;

define C-function gtk-print-duplex-get-type
  result res :: <GType>;
  c-name: "gtk_print_duplex_get_type";
end;

define C-function gtk-unit-get-type
  result res :: <GType>;
  c-name: "gtk_unit_get_type";
end;

define C-function gtk-tree-view-grid-lines-get-type
  result res :: <GType>;
  c-name: "gtk_tree_view_grid_lines_get_type";
end;

define C-function gtk-drag-result-get-type
  result res :: <GType>;
  c-name: "gtk_drag_result_get_type";
end;

define C-function gtk-file-chooser-action-get-type
  result res :: <GType>;
  c-name: "gtk_file_chooser_action_get_type";
end;

define C-function gtk-file-chooser-confirmation-get-type
  result res :: <GType>;
  c-name: "gtk_file_chooser_confirmation_get_type";
end;

define C-function gtk-file-chooser-error-get-type
  result res :: <GType>;
  c-name: "gtk_file_chooser_error_get_type";
end;

define C-function gtk-file-filter-flags-get-type
  result res :: <GType>;
  c-name: "gtk_file_filter_flags_get_type";
end;

define C-function gtk-icon-lookup-flags-get-type
  result res :: <GType>;
  c-name: "gtk_icon_lookup_flags_get_type";
end;

define C-function gtk-icon-theme-error-get-type
  result res :: <GType>;
  c-name: "gtk_icon_theme_error_get_type";
end;

define C-function gtk-icon-view-drop-position-get-type
  result res :: <GType>;
  c-name: "gtk_icon_view_drop_position_get_type";
end;

define C-function gtk-image-type-get-type
  result res :: <GType>;
  c-name: "gtk_image_type_get_type";
end;

define C-function gtk-message-type-get-type
  result res :: <GType>;
  c-name: "gtk_message_type_get_type";
end;

define C-function gtk-buttons-type-get-type
  result res :: <GType>;
  c-name: "gtk_buttons_type_get_type";
end;

define C-function gtk-notebook-tab-get-type
  result res :: <GType>;
  c-name: "gtk_notebook_tab_get_type";
end;

define C-function gtk-object-flags-get-type
  result res :: <GType>;
  c-name: "gtk_object_flags_get_type";
end;

define C-function gtk-arg-flags-get-type
  result res :: <GType>;
  c-name: "gtk_arg_flags_get_type";
end;

define C-function gtk-print-status-get-type
  result res :: <GType>;
  c-name: "gtk_print_status_get_type";
end;

define C-function gtk-print-operation-result-get-type
  result res :: <GType>;
  c-name: "gtk_print_operation_result_get_type";
end;

define C-function gtk-print-operation-action-get-type
  result res :: <GType>;
  c-name: "gtk_print_operation_action_get_type";
end;

define C-function gtk-print-error-get-type
  result res :: <GType>;
  c-name: "gtk_print_error_get_type";
end;

define C-function gtk-private-flags-get-type
  result res :: <GType>;
  c-name: "gtk_private_flags_get_type";
end;

define C-function gtk-progress-bar-style-get-type
  result res :: <GType>;
  c-name: "gtk_progress_bar_style_get_type";
end;

define C-function gtk-progress-bar-orientation-get-type
  result res :: <GType>;
  c-name: "gtk_progress_bar_orientation_get_type";
end;

define C-function gtk-rc-flags-get-type
  result res :: <GType>;
  c-name: "gtk_rc_flags_get_type";
end;

define C-function gtk-rc-token-type-get-type
  result res :: <GType>;
  c-name: "gtk_rc_token_type_get_type";
end;

define C-function gtk-recent-sort-type-get-type
  result res :: <GType>;
  c-name: "gtk_recent_sort_type_get_type";
end;

define C-function gtk-recent-chooser-error-get-type
  result res :: <GType>;
  c-name: "gtk_recent_chooser_error_get_type";
end;

define C-function gtk-recent-filter-flags-get-type
  result res :: <GType>;
  c-name: "gtk_recent_filter_flags_get_type";
end;

define C-function gtk-recent-manager-error-get-type
  result res :: <GType>;
  c-name: "gtk_recent_manager_error_get_type";
end;

define C-function gtk-size-group-mode-get-type
  result res :: <GType>;
  c-name: "gtk_size_group_mode_get_type";
end;

define C-function gtk-spin-button-update-policy-get-type
  result res :: <GType>;
  c-name: "gtk_spin_button_update_policy_get_type";
end;

define C-function gtk-spin-type-get-type
  result res :: <GType>;
  c-name: "gtk_spin_type_get_type";
end;

define C-function gtk-text-buffer-target-info-get-type
  result res :: <GType>;
  c-name: "gtk_text_buffer_target_info_get_type";
end;

define C-function gtk-text-search-flags-get-type
  result res :: <GType>;
  c-name: "gtk_text_search_flags_get_type";
end;

define C-function gtk-text-window-type-get-type
  result res :: <GType>;
  c-name: "gtk_text_window_type_get_type";
end;

define C-function gtk-toolbar-child-type-get-type
  result res :: <GType>;
  c-name: "gtk_toolbar_child_type_get_type";
end;

define C-function gtk-toolbar-space-style-get-type
  result res :: <GType>;
  c-name: "gtk_toolbar_space_style_get_type";
end;

define C-function gtk-tree-view-mode-get-type
  result res :: <GType>;
  c-name: "gtk_tree_view_mode_get_type";
end;

define C-function gtk-tree-model-flags-get-type
  result res :: <GType>;
  c-name: "gtk_tree_model_flags_get_type";
end;

define C-function gtk-tree-view-drop-position-get-type
  result res :: <GType>;
  c-name: "gtk_tree_view_drop_position_get_type";
end;

define C-function gtk-tree-view-column-sizing-get-type
  result res :: <GType>;
  c-name: "gtk_tree_view_column_sizing_get_type";
end;

define C-function gtk-ui-manager-item-type-get-type
  result res :: <GType>;
  c-name: "gtk_ui_manager_item_type_get_type";
end;

define C-function gtk-widget-flags-get-type
  result res :: <GType>;
  c-name: "gtk_widget_flags_get_type";
end;

define C-function gtk-widget-help-type-get-type
  result res :: <GType>;
  c-name: "gtk_widget_help_type_get_type";
end;

define constant <anonymous-3356> = <C-function-pointer>;
define constant <anonymous-3357> = <C-function-pointer>;
define constant <anonymous-3358> = <C-function-pointer>;
define constant <anonymous-3359> = <C-function-pointer>;
define constant <anonymous-3360> = <C-function-pointer>;
define C-struct <_GtkAccelGroupClass>
  slot GtkAccelGroupClass-parent-class :: <_GObjectClass>;
  slot GtkAccelGroupClass-accel-changed :: <anonymous-3356>;
  slot GtkAccelGroupClass-_gtk-reserved1 :: <anonymous-3357>;
  slot GtkAccelGroupClass-_gtk-reserved2 :: <anonymous-3358>;
  slot GtkAccelGroupClass-_gtk-reserved3 :: <anonymous-3359>;
  slot GtkAccelGroupClass-_gtk-reserved4 :: <anonymous-3360>;
end;

define C-pointer-type <GtkAccelGroupClass> => <_GtkAccelGroupClass>;

define constant <anonymous-3354> = <C-function-pointer>;
define constant <GtkAccelGroupActivate> = <anonymous-3354>;

define constant <anonymous-3355> = <C-function-pointer>;
define constant <GtkAccelGroupFindFunc> = <anonymous-3355>;

define C-function gtk-accel-group-get-type
  result res :: <GType>;
  c-name: "gtk_accel_group_get_type";
end;

define C-function gtk-accel-group-new
  result res :: <GtkAccelGroup>;
  c-name: "gtk_accel_group_new";
end;

define C-function gtk-accel-group-lock
  input parameter arg1 :: <GtkAccelGroup>;
  c-name: "gtk_accel_group_lock";
end;

define C-function gtk-accel-group-unlock
  input parameter arg1 :: <GtkAccelGroup>;
  c-name: "gtk_accel_group_unlock";
end;

define C-function gtk-accel-group-connect
  input parameter arg1 :: <GtkAccelGroup>;
  input parameter arg2 :: <guint>;
  input parameter arg3 :: <GdkModifierType>;
  input parameter arg4 :: <GtkAccelFlags>;
  input parameter arg5 :: <GClosure>;
  c-name: "gtk_accel_group_connect";
end;

define C-function gtk-accel-group-connect-by-path
  input parameter arg1 :: <GtkAccelGroup>;
  input parameter arg2 :: <gchar*>;
  input parameter arg3 :: <GClosure>;
  c-name: "gtk_accel_group_connect_by_path";
end;

define C-function gtk-accel-group-disconnect
  input parameter arg1 :: <GtkAccelGroup>;
  input parameter arg2 :: <GClosure>;
  result res :: <gboolean>;
  c-name: "gtk_accel_group_disconnect";
end;

define C-function gtk-accel-group-disconnect-key
  input parameter arg1 :: <GtkAccelGroup>;
  input parameter arg2 :: <guint>;
  input parameter arg3 :: <GdkModifierType>;
  result res :: <gboolean>;
  c-name: "gtk_accel_group_disconnect_key";
end;

define C-function gtk-accel-group-activate
  input parameter arg1 :: <GtkAccelGroup>;
  input parameter arg2 :: <GQuark>;
  input parameter arg3 :: <GObject>;
  input parameter arg4 :: <guint>;
  input parameter arg5 :: <GdkModifierType>;
  result res :: <gboolean>;
  c-name: "gtk_accel_group_activate";
end;

define C-function gtk-accel-groups-activate
  input parameter arg1 :: <GObject>;
  input parameter arg2 :: <guint>;
  input parameter arg3 :: <GdkModifierType>;
  result res :: <gboolean>;
  c-name: "gtk_accel_groups_activate";
end;

define C-function gtk-accel-groups-from-object
  input parameter arg1 :: <GObject>;
  result res :: <GSList>;
  c-name: "gtk_accel_groups_from_object";
end;

define C-function gtk-accel-group-find
  input parameter arg1 :: <GtkAccelGroup>;
  input parameter arg2 :: <GtkAccelGroupFindFunc>;
  input parameter arg3 :: <gpointer>;
  result res :: <GtkAccelKey>;
  c-name: "gtk_accel_group_find";
end;

define C-function gtk-accel-group-from-accel-closure
  input parameter arg1 :: <GClosure>;
  result res :: <GtkAccelGroup>;
  c-name: "gtk_accel_group_from_accel_closure";
end;

define C-function gtk-accelerator-valid
  input parameter arg1 :: <guint>;
  input parameter arg2 :: <GdkModifierType>;
  result res :: <gboolean>;
  c-name: "gtk_accelerator_valid";
end;

define C-function gtk-accelerator-parse
  input parameter arg1 :: <gchar*>;
  input parameter arg2 :: <guint*>;
  input parameter arg3 :: <GdkModifierType*>;
  c-name: "gtk_accelerator_parse";
end;

define C-function gtk-accelerator-name
  input parameter arg1 :: <guint>;
  input parameter arg2 :: <GdkModifierType>;
  result res :: <gchar*>;
  c-name: "gtk_accelerator_name";
end;

define C-function gtk-accelerator-get-label
  input parameter arg1 :: <guint>;
  input parameter arg2 :: <GdkModifierType>;
  result res :: <gchar*>;
  c-name: "gtk_accelerator_get_label";
end;

define C-function gtk-accelerator-set-default-mod-mask
  input parameter arg1 :: <GdkModifierType>;
  c-name: "gtk_accelerator_set_default_mod_mask";
end;

define C-function gtk-accelerator-get-default-mod-mask
  result res :: <guint>;
  c-name: "gtk_accelerator_get_default_mod_mask";
end;

define C-function gtk-accel-group-query
  input parameter arg1 :: <GtkAccelGroup>;
  input parameter arg2 :: <guint>;
  input parameter arg3 :: <GdkModifierType>;
  input parameter arg4 :: <guint*>;
  result res :: <GtkAccelGroupEntry>;
  c-name: "gtk_accel_group_query";
end;

define constant gtk-accel-group-ref = g-object-ref;

define constant gtk-accel-group-unref = g-object-unref;

define C-function gtk-bin-get-type
  result res :: <GType>;
  c-name: "gtk_bin_get_type";
end;

define C-function gtk-bin-get-child
  input parameter arg1 :: <GtkBin>;
  result res :: <GtkWidget>;
  c-name: "gtk_bin_get_child";
end;

define C-function gtk-container-get-type
  result res :: <GType>;
  c-name: "gtk_container_get_type";
end;

define C-function gtk-container-set-border-width
  input parameter arg1 :: <GtkContainer>;
  input parameter arg2 :: <guint>;
  c-name: "gtk_container_set_border_width";
end;

define C-function gtk-container-get-border-width
  input parameter arg1 :: <GtkContainer>;
  result res :: <guint>;
  c-name: "gtk_container_get_border_width";
end;

define C-function gtk-container-add
  input parameter arg1 :: <GtkContainer>;
  input parameter arg2 :: <GtkWidget>;
  c-name: "gtk_container_add";
end;

define C-function gtk-container-remove
  input parameter arg1 :: <GtkContainer>;
  input parameter arg2 :: <GtkWidget>;
  c-name: "gtk_container_remove";
end;

define C-function gtk-container-set-resize-mode
  input parameter arg1 :: <GtkContainer>;
  input parameter arg2 :: <GtkResizeMode>;
  c-name: "gtk_container_set_resize_mode";
end;

define C-function gtk-container-get-resize-mode
  input parameter arg1 :: <GtkContainer>;
  result res :: <GtkResizeMode>;
  c-name: "gtk_container_get_resize_mode";
end;

define C-function gtk-container-check-resize
  input parameter arg1 :: <GtkContainer>;
  c-name: "gtk_container_check_resize";
end;

define C-function gtk-container-foreach
  input parameter arg1 :: <GtkContainer>;
  input parameter arg2 :: <GtkCallback>;
  input parameter arg3 :: <gpointer>;
  c-name: "gtk_container_foreach";
end;

define C-function gtk-container-foreach-full
  input parameter arg1 :: <GtkContainer>;
  input parameter arg2 :: <GtkCallback>;
  input parameter arg3 :: <GtkCallbackMarshal>;
  input parameter arg4 :: <gpointer>;
  input parameter arg5 :: <GtkDestroyNotify>;
  c-name: "gtk_container_foreach_full";
end;

define C-function gtk-container-get-children
  input parameter arg1 :: <GtkContainer>;
  result res :: <GList>;
  c-name: "gtk_container_get_children";
end;

define C-function gtk-container-propagate-expose
  input parameter arg1 :: <GtkContainer>;
  input parameter arg2 :: <GtkWidget>;
  input parameter arg3 :: <GdkEventExpose>;
  c-name: "gtk_container_propagate_expose";
end;

define C-function gtk-container-set-focus-chain
  input parameter arg1 :: <GtkContainer>;
  input parameter arg2 :: <GList>;
  c-name: "gtk_container_set_focus_chain";
end;

define C-pointer-type <GList*> => <GList>;
define C-function gtk-container-get-focus-chain
  input parameter arg1 :: <GtkContainer>;
  input parameter arg2 :: <GList*>;
  result res :: <gboolean>;
  c-name: "gtk_container_get_focus_chain";
end;

define C-function gtk-container-unset-focus-chain
  input parameter arg1 :: <GtkContainer>;
  c-name: "gtk_container_unset_focus_chain";
end;

define C-function gtk-container-set-reallocate-redraws
  input parameter arg1 :: <GtkContainer>;
  input parameter arg2 :: <gboolean>;
  c-name: "gtk_container_set_reallocate_redraws";
end;

define C-function gtk-container-set-focus-child
  input parameter arg1 :: <GtkContainer>;
  input parameter arg2 :: <GtkWidget>;
  c-name: "gtk_container_set_focus_child";
end;

define C-function gtk-container-set-focus-vadjustment
  input parameter arg1 :: <GtkContainer>;
  input parameter arg2 :: <GtkAdjustment>;
  c-name: "gtk_container_set_focus_vadjustment";
end;

define C-function gtk-container-get-focus-vadjustment
  input parameter arg1 :: <GtkContainer>;
  result res :: <GtkAdjustment>;
  c-name: "gtk_container_get_focus_vadjustment";
end;

define C-function gtk-container-set-focus-hadjustment
  input parameter arg1 :: <GtkContainer>;
  input parameter arg2 :: <GtkAdjustment>;
  c-name: "gtk_container_set_focus_hadjustment";
end;

define C-function gtk-container-get-focus-hadjustment
  input parameter arg1 :: <GtkContainer>;
  result res :: <GtkAdjustment>;
  c-name: "gtk_container_get_focus_hadjustment";
end;

define C-function gtk-container-resize-children
  input parameter arg1 :: <GtkContainer>;
  c-name: "gtk_container_resize_children";
end;

define C-function gtk-container-child-type
  input parameter arg1 :: <GtkContainer>;
  result res :: <GType>;
  c-name: "gtk_container_child_type";
end;

define C-function gtk-container-class-install-child-property
  input parameter arg1 :: <GtkContainerClass>;
  input parameter arg2 :: <guint>;
  input parameter arg3 :: <GParamSpec>;
  c-name: "gtk_container_class_install_child_property";
end;

define C-function gtk-container-class-find-child-property
  input parameter arg1 :: <GObjectClass>;
  input parameter arg2 :: <gchar*>;
  result res :: <GParamSpec>;
  c-name: "gtk_container_class_find_child_property";
end;

define C-function gtk-container-class-list-child-properties
  input parameter arg1 :: <GObjectClass>;
  input parameter arg2 :: <guint*>;
  result res :: <GParamSpec*>;
  c-name: "gtk_container_class_list_child_properties";
end;

define C-function gtk-container-add-with-properties
  input parameter arg1 :: <GtkContainer>;
  input parameter arg2 :: <GtkWidget>;
  input parameter arg3 :: <gchar*>;
  c-name: "gtk_container_add_with_properties";
end;

define C-function gtk-container-child-set
  input parameter arg1 :: <GtkContainer>;
  input parameter arg2 :: <GtkWidget>;
  input parameter arg3 :: <gchar*>;
  c-name: "gtk_container_child_set";
end;

define C-function gtk-container-child-get
  input parameter arg1 :: <GtkContainer>;
  input parameter arg2 :: <GtkWidget>;
  input parameter arg3 :: <gchar*>;
  c-name: "gtk_container_child_get";
end;

define C-function gtk-container-child-set-valist
  input parameter arg1 :: <GtkContainer>;
  input parameter arg2 :: <GtkWidget>;
  input parameter arg3 :: <gchar*>;
  input parameter arg4 :: <va-list>;
  c-name: "gtk_container_child_set_valist";
end;

define C-function gtk-container-child-get-valist
  input parameter arg1 :: <GtkContainer>;
  input parameter arg2 :: <GtkWidget>;
  input parameter arg3 :: <gchar*>;
  input parameter arg4 :: <va-list>;
  c-name: "gtk_container_child_get_valist";
end;

define C-function gtk-container-child-set-property
  input parameter arg1 :: <GtkContainer>;
  input parameter arg2 :: <GtkWidget>;
  input parameter arg3 :: <gchar*>;
  input parameter arg4 :: <GValue>;
  c-name: "gtk_container_child_set_property";
end;

define C-function gtk-container-child-get-property
  input parameter arg1 :: <GtkContainer>;
  input parameter arg2 :: <GtkWidget>;
  input parameter arg3 :: <gchar*>;
  input parameter arg4 :: <GValue>;
  c-name: "gtk_container_child_get_property";
end;

define C-function gtk-container-forall
  input parameter arg1 :: <GtkContainer>;
  input parameter arg2 :: <GtkCallback>;
  input parameter arg3 :: <gpointer>;
  c-name: "gtk_container_forall";
end;

define constant gtk-container-children = gtk-container-get-children;

define constant gtk-container-border-width = gtk-container-set-border-width;

define C-subtype <_GtkSeparator> (<_GtkWidget>, <_AtkImplementorIface>) end;
define constant <GtkSeparator> = <_GtkSeparator>;

define C-subtype <_GtkVSeparator> (<_GtkSeparator>, <_AtkImplementorIface>) end;
define constant <GtkVSeparator> = <_GtkVSeparator>;

define C-struct <_GtkSeparatorClass>
  slot GtkSeparatorClass-parent-class :: <_GtkWidgetClass>;
end;

define C-pointer-type <GtkSeparatorClass> => <_GtkSeparatorClass>;

define C-struct <_GtkVSeparatorClass>
  slot GtkVSeparatorClass-parent-class :: <_GtkSeparatorClass>;
end;

define C-pointer-type <GtkVSeparatorClass> => <_GtkVSeparatorClass>;

define C-function gtk-vseparator-get-type
  result res :: <GType>;
  c-name: "gtk_vseparator_get_type";
end;

define C-function gtk-vseparator-new
  result res :: <GtkWidget>;
  c-name: "gtk_vseparator_new";
end;

define C-function gtk-separator-get-type
  result res :: <GType>;
  c-name: "gtk_separator_get_type";
end;

define C-struct <_GtkRangeLayout>
end;

define C-pointer-type <GtkRangeLayout> => <_GtkRangeLayout>;

define C-struct <_GtkRangeStepTimer>
end;

define C-pointer-type <GtkRangeStepTimer> => <_GtkRangeStepTimer>;

define C-subtype <_GtkRange> (<_GtkWidget>, <_AtkImplementorIface>) end;
define constant <GtkRange> = <_GtkRange>;

define C-subtype <_GtkScrollbar> (<_GtkRange>, <_AtkImplementorIface>) end;
define constant <GtkScrollbar> = <_GtkScrollbar>;

define C-subtype <_GtkVScrollbar> (<_GtkScrollbar>, <_AtkImplementorIface>) end;
define constant <GtkVScrollbar> = <_GtkVScrollbar>;

define constant <anonymous-5853> = <C-function-pointer>;
define constant <anonymous-5854> = <C-function-pointer>;
define constant <anonymous-5855> = <C-function-pointer>;
define constant <anonymous-5856> = <C-function-pointer>;
define constant <anonymous-5857> = <C-function-pointer>;
define constant <anonymous-5858> = <C-function-pointer>;
define constant <anonymous-5859> = <C-function-pointer>;
define constant <anonymous-5860> = <C-function-pointer>;
define C-struct <_GtkRangeClass>
  slot GtkRangeClass-parent-class :: <_GtkWidgetClass>;
  slot GtkRangeClass-slider-detail :: <gchar*>;
  slot GtkRangeClass-stepper-detail :: <gchar*>;
  slot GtkRangeClass-value-changed :: <anonymous-5853>;
  slot GtkRangeClass-adjust-bounds :: <anonymous-5854>;
  slot GtkRangeClass-move-slider :: <anonymous-5855>;
  slot GtkRangeClass-get-range-border :: <anonymous-5856>;
  slot GtkRangeClass-change-value :: <anonymous-5857>;
  slot GtkRangeClass-_gtk-reserved1 :: <anonymous-5858>;
  slot GtkRangeClass-_gtk-reserved2 :: <anonymous-5859>;
  slot GtkRangeClass-_gtk-reserved3 :: <anonymous-5860>;
end;

define C-pointer-type <GtkRangeClass> => <_GtkRangeClass>;

define constant <anonymous-5883> = <C-function-pointer>;
define constant <anonymous-5884> = <C-function-pointer>;
define constant <anonymous-5885> = <C-function-pointer>;
define constant <anonymous-5886> = <C-function-pointer>;
define C-struct <_GtkScrollbarClass>
  slot GtkScrollbarClass-parent-class :: <_GtkRangeClass>;
  slot GtkScrollbarClass-_gtk-reserved1 :: <anonymous-5883>;
  slot GtkScrollbarClass-_gtk-reserved2 :: <anonymous-5884>;
  slot GtkScrollbarClass-_gtk-reserved3 :: <anonymous-5885>;
  slot GtkScrollbarClass-_gtk-reserved4 :: <anonymous-5886>;
end;

define C-pointer-type <GtkScrollbarClass> => <_GtkScrollbarClass>;

define C-struct <_GtkVScrollbarClass>
  slot GtkVScrollbarClass-parent-class :: <_GtkScrollbarClass>;
end;

define C-pointer-type <GtkVScrollbarClass> => <_GtkVScrollbarClass>;

define C-function gtk-vscrollbar-get-type
  result res :: <GType>;
  c-name: "gtk_vscrollbar_get_type";
end;

define C-function gtk-vscrollbar-new
  input parameter arg1 :: <GtkAdjustment>;
  result res :: <GtkWidget>;
  c-name: "gtk_vscrollbar_new";
end;

define C-function gtk-scrollbar-get-type
  result res :: <GType>;
  c-name: "gtk_scrollbar_get_type";
end;

define C-function gtk-range-get-type
  result res :: <GType>;
  c-name: "gtk_range_get_type";
end;

define C-function gtk-range-set-update-policy
  input parameter arg1 :: <GtkRange>;
  input parameter arg2 :: <GtkUpdateType>;
  c-name: "gtk_range_set_update_policy";
end;

define C-function gtk-range-get-update-policy
  input parameter arg1 :: <GtkRange>;
  result res :: <GtkUpdateType>;
  c-name: "gtk_range_get_update_policy";
end;

define C-function gtk-range-set-adjustment
  input parameter arg1 :: <GtkRange>;
  input parameter arg2 :: <GtkAdjustment>;
  c-name: "gtk_range_set_adjustment";
end;

define C-function gtk-range-get-adjustment
  input parameter arg1 :: <GtkRange>;
  result res :: <GtkAdjustment>;
  c-name: "gtk_range_get_adjustment";
end;

define C-function gtk-range-set-inverted
  input parameter arg1 :: <GtkRange>;
  input parameter arg2 :: <gboolean>;
  c-name: "gtk_range_set_inverted";
end;

define C-function gtk-range-get-inverted
  input parameter arg1 :: <GtkRange>;
  result res :: <gboolean>;
  c-name: "gtk_range_get_inverted";
end;

define C-function gtk-range-set-lower-stepper-sensitivity
  input parameter arg1 :: <GtkRange>;
  input parameter arg2 :: <GtkSensitivityType>;
  c-name: "gtk_range_set_lower_stepper_sensitivity";
end;

define C-function gtk-range-get-lower-stepper-sensitivity
  input parameter arg1 :: <GtkRange>;
  result res :: <GtkSensitivityType>;
  c-name: "gtk_range_get_lower_stepper_sensitivity";
end;

define C-function gtk-range-set-upper-stepper-sensitivity
  input parameter arg1 :: <GtkRange>;
  input parameter arg2 :: <GtkSensitivityType>;
  c-name: "gtk_range_set_upper_stepper_sensitivity";
end;

define C-function gtk-range-get-upper-stepper-sensitivity
  input parameter arg1 :: <GtkRange>;
  result res :: <GtkSensitivityType>;
  c-name: "gtk_range_get_upper_stepper_sensitivity";
end;

define C-function gtk-range-set-increments
  input parameter arg1 :: <GtkRange>;
  input parameter arg2 :: <gdouble>;
  input parameter arg3 :: <gdouble>;
  c-name: "gtk_range_set_increments";
end;

define C-function gtk-range-set-range
  input parameter arg1 :: <GtkRange>;
  input parameter arg2 :: <gdouble>;
  input parameter arg3 :: <gdouble>;
  c-name: "gtk_range_set_range";
end;

define C-function gtk-range-set-value
  input parameter arg1 :: <GtkRange>;
  input parameter arg2 :: <gdouble>;
  c-name: "gtk_range_set_value";
end;

define C-function gtk-range-get-value
  input parameter arg1 :: <GtkRange>;
  result res :: <gdouble>;
  c-name: "gtk_range_get_value";
end;

define C-function gtk-range-set-show-fill-level
  input parameter arg1 :: <GtkRange>;
  input parameter arg2 :: <gboolean>;
  c-name: "gtk_range_set_show_fill_level";
end;

define C-function gtk-range-get-show-fill-level
  input parameter arg1 :: <GtkRange>;
  result res :: <gboolean>;
  c-name: "gtk_range_get_show_fill_level";
end;

define C-function gtk-range-set-restrict-to-fill-level
  input parameter arg1 :: <GtkRange>;
  input parameter arg2 :: <gboolean>;
  c-name: "gtk_range_set_restrict_to_fill_level";
end;

define C-function gtk-range-get-restrict-to-fill-level
  input parameter arg1 :: <GtkRange>;
  result res :: <gboolean>;
  c-name: "gtk_range_get_restrict_to_fill_level";
end;

define C-function gtk-range-set-fill-level
  input parameter arg1 :: <GtkRange>;
  input parameter arg2 :: <gdouble>;
  c-name: "gtk_range_set_fill_level";
end;

define C-function gtk-range-get-fill-level
  input parameter arg1 :: <GtkRange>;
  result res :: <gdouble>;
  c-name: "gtk_range_get_fill_level";
end;

define C-subtype <_GtkScale> (<_GtkRange>, <_AtkImplementorIface>) end;
define constant <GtkScale> = <_GtkScale>;

define C-subtype <_GtkVScale> (<_GtkScale>, <_AtkImplementorIface>) end;
define constant <GtkVScale> = <_GtkVScale>;

define constant <anonymous-6855> = <C-function-pointer>;
define constant <anonymous-6856> = <C-function-pointer>;
define constant <anonymous-6857> = <C-function-pointer>;
define constant <anonymous-6858> = <C-function-pointer>;
define constant <anonymous-6859> = <C-function-pointer>;
define constant <anonymous-6860> = <C-function-pointer>;
define C-struct <_GtkScaleClass>
  slot GtkScaleClass-parent-class :: <_GtkRangeClass>;
  slot GtkScaleClass-format-value :: <anonymous-6855>;
  slot GtkScaleClass-draw-value :: <anonymous-6856>;
  slot GtkScaleClass-get-layout-offsets :: <anonymous-6857>;
  slot GtkScaleClass-_gtk-reserved2 :: <anonymous-6858>;
  slot GtkScaleClass-_gtk-reserved3 :: <anonymous-6859>;
  slot GtkScaleClass-_gtk-reserved4 :: <anonymous-6860>;
end;

define C-pointer-type <GtkScaleClass> => <_GtkScaleClass>;

define C-struct <_GtkVScaleClass>
  slot GtkVScaleClass-parent-class :: <_GtkScaleClass>;
end;

define C-pointer-type <GtkVScaleClass> => <_GtkVScaleClass>;

define C-function gtk-vscale-get-type
  result res :: <GType>;
  c-name: "gtk_vscale_get_type";
end;

define C-function gtk-vscale-new
  input parameter arg1 :: <GtkAdjustment>;
  result res :: <GtkWidget>;
  c-name: "gtk_vscale_new";
end;

define C-function gtk-vscale-new-with-range
  input parameter arg1 :: <gdouble>;
  input parameter arg2 :: <gdouble>;
  input parameter arg3 :: <gdouble>;
  result res :: <GtkWidget>;
  c-name: "gtk_vscale_new_with_range";
end;

define C-function gtk-scale-get-type
  result res :: <GType>;
  c-name: "gtk_scale_get_type";
end;

define C-function gtk-scale-set-digits
  input parameter arg1 :: <GtkScale>;
  input parameter arg2 :: <gint>;
  c-name: "gtk_scale_set_digits";
end;

define C-function gtk-scale-get-digits
  input parameter arg1 :: <GtkScale>;
  result res :: <gint>;
  c-name: "gtk_scale_get_digits";
end;

define C-function gtk-scale-set-draw-value
  input parameter arg1 :: <GtkScale>;
  input parameter arg2 :: <gboolean>;
  c-name: "gtk_scale_set_draw_value";
end;

define C-function gtk-scale-get-draw-value
  input parameter arg1 :: <GtkScale>;
  result res :: <gboolean>;
  c-name: "gtk_scale_get_draw_value";
end;

define C-function gtk-scale-set-value-pos
  input parameter arg1 :: <GtkScale>;
  input parameter arg2 :: <GtkPositionType>;
  c-name: "gtk_scale_set_value_pos";
end;

define C-function gtk-scale-get-value-pos
  input parameter arg1 :: <GtkScale>;
  result res :: <GtkPositionType>;
  c-name: "gtk_scale_get_value_pos";
end;

define C-function gtk-scale-get-layout
  input parameter arg1 :: <GtkScale>;
  result res :: <PangoLayout>;
  c-name: "gtk_scale_get_layout";
end;

define C-function gtk-scale-get-layout-offsets
  input parameter arg1 :: <GtkScale>;
  input parameter arg2 :: <gint*>;
  input parameter arg3 :: <gint*>;
  c-name: "gtk_scale_get_layout_offsets";
end;

define constant <gdouble<@10>> = <gdouble*>;
define constant <gint<@5>> = <gint*>;
define C-struct <_GtkRulerMetric>
  slot GtkRulerMetric-metric-name :: <gchar*>;
  slot GtkRulerMetric-abbrev :: <gchar*>;
  slot GtkRulerMetric-pixels-per-unit :: <C-double>;
  array slot GtkRulerMetric-ruler-scale :: <gdouble>, length: 10;
  array slot GtkRulerMetric-subdivide :: <gint>, length: 5;
end;

define C-pointer-type <GtkRulerMetric> => <_GtkRulerMetric>;

define C-subtype <_GtkRuler> (<_GtkWidget>, <_AtkImplementorIface>) end;
define constant <GtkRuler> = <_GtkRuler>;

define C-subtype <_GtkVRuler> (<_GtkRuler>, <_AtkImplementorIface>) end;
define constant <GtkVRuler> = <_GtkVRuler>;

define constant <anonymous-6838> = <C-function-pointer>;
define constant <anonymous-6839> = <C-function-pointer>;
define constant <anonymous-6840> = <C-function-pointer>;
define constant <anonymous-6841> = <C-function-pointer>;
define constant <anonymous-6842> = <C-function-pointer>;
define constant <anonymous-6843> = <C-function-pointer>;
define C-struct <_GtkRulerClass>
  slot GtkRulerClass-parent-class :: <_GtkWidgetClass>;
  slot GtkRulerClass-draw-ticks :: <anonymous-6838>;
  slot GtkRulerClass-draw-pos :: <anonymous-6839>;
  slot GtkRulerClass-_gtk-reserved1 :: <anonymous-6840>;
  slot GtkRulerClass-_gtk-reserved2 :: <anonymous-6841>;
  slot GtkRulerClass-_gtk-reserved3 :: <anonymous-6842>;
  slot GtkRulerClass-_gtk-reserved4 :: <anonymous-6843>;
end;

define C-pointer-type <GtkRulerClass> => <_GtkRulerClass>;

define C-struct <_GtkVRulerClass>
  slot GtkVRulerClass-parent-class :: <_GtkRulerClass>;
end;

define C-pointer-type <GtkVRulerClass> => <_GtkVRulerClass>;

define C-function gtk-vruler-get-type
  result res :: <GType>;
  c-name: "gtk_vruler_get_type";
end;

define C-function gtk-vruler-new
  result res :: <GtkWidget>;
  c-name: "gtk_vruler_new";
end;

define C-function gtk-ruler-get-type
  result res :: <GType>;
  c-name: "gtk_ruler_get_type";
end;

define C-function gtk-ruler-set-metric
  input parameter arg1 :: <GtkRuler>;
  input parameter arg2 :: <GtkMetricType>;
  c-name: "gtk_ruler_set_metric";
end;

define C-function gtk-ruler-set-range
  input parameter arg1 :: <GtkRuler>;
  input parameter arg2 :: <gdouble>;
  input parameter arg3 :: <gdouble>;
  input parameter arg4 :: <gdouble>;
  input parameter arg5 :: <gdouble>;
  c-name: "gtk_ruler_set_range";
end;

define C-function gtk-ruler-draw-ticks
  input parameter arg1 :: <GtkRuler>;
  c-name: "gtk_ruler_draw_ticks";
end;

define C-function gtk-ruler-draw-pos
  input parameter arg1 :: <GtkRuler>;
  c-name: "gtk_ruler_draw_pos";
end;

define C-function gtk-ruler-get-metric
  input parameter arg1 :: <GtkRuler>;
  result res :: <GtkMetricType>;
  c-name: "gtk_ruler_get_metric";
end;

define C-function gtk-ruler-get-range
  input parameter arg1 :: <GtkRuler>;
  input parameter arg2 :: <gdouble*>;
  input parameter arg3 :: <gdouble*>;
  input parameter arg4 :: <gdouble*>;
  input parameter arg5 :: <gdouble*>;
  c-name: "gtk_ruler_get_range";
end;

define C-struct <_GtkPanedPrivate>
end;

define C-pointer-type <GtkPanedPrivate> => <_GtkPanedPrivate>;

define C-subtype <_GtkPaned> (<_GtkContainer>, <_AtkImplementorIface>) end;
define constant <GtkPaned> = <_GtkPaned>;

define C-subtype <_GtkVPaned> (<_GtkPaned>, <_AtkImplementorIface>) end;
define constant <GtkVPaned> = <_GtkVPaned>;

define constant <anonymous-6816> = <C-function-pointer>;
define constant <anonymous-6817> = <C-function-pointer>;
define constant <anonymous-6818> = <C-function-pointer>;
define constant <anonymous-6819> = <C-function-pointer>;
define constant <anonymous-6820> = <C-function-pointer>;
define constant <anonymous-6821> = <C-function-pointer>;
define constant <anonymous-6822> = <C-function-pointer>;
define constant <anonymous-6823> = <C-function-pointer>;
define constant <anonymous-6824> = <C-function-pointer>;
define constant <anonymous-6825> = <C-function-pointer>;
define C-struct <_GtkPanedClass>
  slot GtkPanedClass-parent-class :: <_GtkContainerClass>;
  slot GtkPanedClass-cycle-child-focus :: <anonymous-6816>;
  slot GtkPanedClass-toggle-handle-focus :: <anonymous-6817>;
  slot GtkPanedClass-move-handle :: <anonymous-6818>;
  slot GtkPanedClass-cycle-handle-focus :: <anonymous-6819>;
  slot GtkPanedClass-accept-position :: <anonymous-6820>;
  slot GtkPanedClass-cancel-position :: <anonymous-6821>;
  slot GtkPanedClass-_gtk-reserved1 :: <anonymous-6822>;
  slot GtkPanedClass-_gtk-reserved2 :: <anonymous-6823>;
  slot GtkPanedClass-_gtk-reserved3 :: <anonymous-6824>;
  slot GtkPanedClass-_gtk-reserved4 :: <anonymous-6825>;
end;

define C-pointer-type <GtkPanedClass> => <_GtkPanedClass>;

define C-struct <_GtkVPanedClass>
  slot GtkVPanedClass-parent-class :: <_GtkPanedClass>;
end;

define C-pointer-type <GtkVPanedClass> => <_GtkVPanedClass>;

define C-function gtk-vpaned-get-type
  result res :: <GType>;
  c-name: "gtk_vpaned_get_type";
end;

define C-function gtk-vpaned-new
  result res :: <GtkWidget>;
  c-name: "gtk_vpaned_new";
end;

define C-function gtk-paned-get-type
  result res :: <GType>;
  c-name: "gtk_paned_get_type";
end;

define C-function gtk-paned-add1
  input parameter arg1 :: <GtkPaned>;
  input parameter arg2 :: <GtkWidget>;
  c-name: "gtk_paned_add1";
end;

define C-function gtk-paned-add2
  input parameter arg1 :: <GtkPaned>;
  input parameter arg2 :: <GtkWidget>;
  c-name: "gtk_paned_add2";
end;

define C-function gtk-paned-pack1
  input parameter arg1 :: <GtkPaned>;
  input parameter arg2 :: <GtkWidget>;
  input parameter arg3 :: <gboolean>;
  input parameter arg4 :: <gboolean>;
  c-name: "gtk_paned_pack1";
end;

define C-function gtk-paned-pack2
  input parameter arg1 :: <GtkPaned>;
  input parameter arg2 :: <GtkWidget>;
  input parameter arg3 :: <gboolean>;
  input parameter arg4 :: <gboolean>;
  c-name: "gtk_paned_pack2";
end;

define C-function gtk-paned-get-position
  input parameter arg1 :: <GtkPaned>;
  result res :: <gint>;
  c-name: "gtk_paned_get_position";
end;

define C-function gtk-paned-set-position
  input parameter arg1 :: <GtkPaned>;
  input parameter arg2 :: <gint>;
  c-name: "gtk_paned_set_position";
end;

define C-function gtk-paned-get-child1
  input parameter arg1 :: <GtkPaned>;
  result res :: <GtkWidget>;
  c-name: "gtk_paned_get_child1";
end;

define C-function gtk-paned-get-child2
  input parameter arg1 :: <GtkPaned>;
  result res :: <GtkWidget>;
  c-name: "gtk_paned_get_child2";
end;

define C-function gtk-paned-compute-position
  input parameter arg1 :: <GtkPaned>;
  input parameter arg2 :: <gint>;
  input parameter arg3 :: <gint>;
  input parameter arg4 :: <gint>;
  c-name: "gtk_paned_compute_position";
end;

define C-struct <_GtkVolumeButton>
end;

define C-pointer-type <GtkVolumeButton> => <_GtkVolumeButton>;

define C-subtype <_GtkButton> (<_GtkBin>, <_AtkImplementorIface>) end;
define constant <GtkButton> = <_GtkButton>;

define constant <anonymous-5122> = <C-function-pointer>;
define constant <anonymous-5123> = <C-function-pointer>;
define constant <anonymous-5124> = <C-function-pointer>;
define constant <anonymous-5125> = <C-function-pointer>;
define constant <anonymous-5126> = <C-function-pointer>;
define constant <anonymous-5127> = <C-function-pointer>;
define constant <anonymous-5128> = <C-function-pointer>;
define constant <anonymous-5129> = <C-function-pointer>;
define constant <anonymous-5130> = <C-function-pointer>;
define constant <anonymous-5131> = <C-function-pointer>;
define C-struct <_GtkButtonClass>
  slot GtkButtonClass-parent-class :: <_GtkBinClass>;
  slot GtkButtonClass-pressed :: <anonymous-5122>;
  slot GtkButtonClass-released :: <anonymous-5123>;
  slot GtkButtonClass-clicked :: <anonymous-5124>;
  slot GtkButtonClass-enter :: <anonymous-5125>;
  slot GtkButtonClass-leave :: <anonymous-5126>;
  slot GtkButtonClass-activate :: <anonymous-5127>;
  slot GtkButtonClass-_gtk-reserved1 :: <anonymous-5128>;
  slot GtkButtonClass-_gtk-reserved2 :: <anonymous-5129>;
  slot GtkButtonClass-_gtk-reserved3 :: <anonymous-5130>;
  slot GtkButtonClass-_gtk-reserved4 :: <anonymous-5131>;
end;

define C-pointer-type <GtkButtonClass> => <_GtkButtonClass>;

define C-struct <_GtkScaleButtonPrivate>
end;

define C-pointer-type <GtkScaleButtonPrivate> => <_GtkScaleButtonPrivate>;

define C-struct <_GtkScaleButton>
  slot GtkScaleButton-parent :: <_GtkButton>;
  slot GtkScaleButton-plus-button :: <GtkWidget>;
  slot GtkScaleButton-minus-button :: <GtkWidget>;
  slot GtkScaleButton-priv :: <GtkScaleButtonPrivate>;
end;

define C-pointer-type <GtkScaleButton> => <_GtkScaleButton>;

define constant <anonymous-7932> = <C-function-pointer>;
define constant <anonymous-7933> = <C-function-pointer>;
define constant <anonymous-7934> = <C-function-pointer>;
define constant <anonymous-7935> = <C-function-pointer>;
define constant <anonymous-7936> = <C-function-pointer>;
define C-struct <_GtkScaleButtonClass>
  slot GtkScaleButtonClass-parent-class :: <_GtkButtonClass>;
  slot GtkScaleButtonClass-value-changed :: <anonymous-7932>;
  slot GtkScaleButtonClass-_gtk-reserved1 :: <anonymous-7933>;
  slot GtkScaleButtonClass-_gtk-reserved2 :: <anonymous-7934>;
  slot GtkScaleButtonClass-_gtk-reserved3 :: <anonymous-7935>;
  slot GtkScaleButtonClass-_gtk-reserved4 :: <anonymous-7936>;
end;

define C-pointer-type <GtkScaleButtonClass> => <_GtkScaleButtonClass>;

define constant <anonymous-8541> = <C-function-pointer>;
define constant <anonymous-8542> = <C-function-pointer>;
define constant <anonymous-8543> = <C-function-pointer>;
define constant <anonymous-8544> = <C-function-pointer>;
define C-struct <_GtkVolumeButtonClass>
  slot GtkVolumeButtonClass-parent-class :: <_GtkScaleButtonClass>;
  slot GtkVolumeButtonClass-_gtk-reserved1 :: <anonymous-8541>;
  slot GtkVolumeButtonClass-_gtk-reserved2 :: <anonymous-8542>;
  slot GtkVolumeButtonClass-_gtk-reserved3 :: <anonymous-8543>;
  slot GtkVolumeButtonClass-_gtk-reserved4 :: <anonymous-8544>;
end;

define C-pointer-type <GtkVolumeButtonClass> => <_GtkVolumeButtonClass>;

define C-function gtk-volume-button-get-type
  result res :: <GType>;
  c-name: "gtk_volume_button_get_type";
end;

define C-function gtk-volume-button-new
  result res :: <GtkWidget>;
  c-name: "gtk_volume_button_new";
end;

define C-function gtk-scale-button-get-type
  result res :: <GType>;
  c-name: "gtk_scale_button_get_type";
end;

define C-function gtk-scale-button-new
  input parameter arg1 :: <GtkIconSize>;
  input parameter arg2 :: <gdouble>;
  input parameter arg3 :: <gdouble>;
  input parameter arg4 :: <gdouble>;
  input parameter arg5 :: <gchar**>;
  result res :: <GtkWidget>;
  c-name: "gtk_scale_button_new";
end;

define C-function gtk-scale-button-set-icons
  input parameter arg1 :: <GtkScaleButton>;
  input parameter arg2 :: <gchar**>;
  c-name: "gtk_scale_button_set_icons";
end;

define C-function gtk-scale-button-get-value
  input parameter arg1 :: <GtkScaleButton>;
  result res :: <gdouble>;
  c-name: "gtk_scale_button_get_value";
end;

define C-function gtk-scale-button-set-value
  input parameter arg1 :: <GtkScaleButton>;
  input parameter arg2 :: <gdouble>;
  c-name: "gtk_scale_button_set_value";
end;

define C-function gtk-scale-button-get-adjustment
  input parameter arg1 :: <GtkScaleButton>;
  result res :: <GtkAdjustment>;
  c-name: "gtk_scale_button_get_adjustment";
end;

define C-function gtk-scale-button-set-adjustment
  input parameter arg1 :: <GtkScaleButton>;
  input parameter arg2 :: <GtkAdjustment>;
  c-name: "gtk_scale_button_set_adjustment";
end;

define C-function gtk-button-get-type
  result res :: <GType>;
  c-name: "gtk_button_get_type";
end;

define C-function gtk-button-new
  result res :: <GtkWidget>;
  c-name: "gtk_button_new";
end;

define C-function gtk-button-new-with-label
  input parameter arg1 :: <gchar*>;
  result res :: <GtkWidget>;
  c-name: "gtk_button_new_with_label";
end;

define C-function gtk-button-new-from-stock
  input parameter arg1 :: <gchar*>;
  result res :: <GtkWidget>;
  c-name: "gtk_button_new_from_stock";
end;

define C-function gtk-button-new-with-mnemonic
  input parameter arg1 :: <gchar*>;
  result res :: <GtkWidget>;
  c-name: "gtk_button_new_with_mnemonic";
end;

define C-function gtk-button-pressed
  input parameter arg1 :: <GtkButton>;
  c-name: "gtk_button_pressed";
end;

define C-function gtk-button-released
  input parameter arg1 :: <GtkButton>;
  c-name: "gtk_button_released";
end;

define C-function gtk-button-clicked
  input parameter arg1 :: <GtkButton>;
  c-name: "gtk_button_clicked";
end;

define C-function gtk-button-enter
  input parameter arg1 :: <GtkButton>;
  c-name: "gtk_button_enter";
end;

define C-function gtk-button-leave
  input parameter arg1 :: <GtkButton>;
  c-name: "gtk_button_leave";
end;

define C-function gtk-button-set-relief
  input parameter arg1 :: <GtkButton>;
  input parameter arg2 :: <GtkReliefStyle>;
  c-name: "gtk_button_set_relief";
end;

define C-function gtk-button-get-relief
  input parameter arg1 :: <GtkButton>;
  result res :: <GtkReliefStyle>;
  c-name: "gtk_button_get_relief";
end;

define C-function gtk-button-set-label
  input parameter arg1 :: <GtkButton>;
  input parameter arg2 :: <gchar*>;
  c-name: "gtk_button_set_label";
end;

define C-function gtk-button-get-label
  input parameter arg1 :: <GtkButton>;
  result res :: <gchar*>;
  c-name: "gtk_button_get_label";
end;

define C-function gtk-button-set-use-underline
  input parameter arg1 :: <GtkButton>;
  input parameter arg2 :: <gboolean>;
  c-name: "gtk_button_set_use_underline";
end;

define C-function gtk-button-get-use-underline
  input parameter arg1 :: <GtkButton>;
  result res :: <gboolean>;
  c-name: "gtk_button_get_use_underline";
end;

define C-function gtk-button-set-use-stock
  input parameter arg1 :: <GtkButton>;
  input parameter arg2 :: <gboolean>;
  c-name: "gtk_button_set_use_stock";
end;

define C-function gtk-button-get-use-stock
  input parameter arg1 :: <GtkButton>;
  result res :: <gboolean>;
  c-name: "gtk_button_get_use_stock";
end;

define C-function gtk-button-set-focus-on-click
  input parameter arg1 :: <GtkButton>;
  input parameter arg2 :: <gboolean>;
  c-name: "gtk_button_set_focus_on_click";
end;

define C-function gtk-button-get-focus-on-click
  input parameter arg1 :: <GtkButton>;
  result res :: <gboolean>;
  c-name: "gtk_button_get_focus_on_click";
end;

define C-function gtk-button-set-alignment
  input parameter arg1 :: <GtkButton>;
  input parameter arg2 :: <gfloat>;
  input parameter arg3 :: <gfloat>;
  c-name: "gtk_button_set_alignment";
end;

define C-pointer-type <gfloat*> => <gfloat>;
define C-function gtk-button-get-alignment
  input parameter arg1 :: <GtkButton>;
  input parameter arg2 :: <gfloat*>;
  input parameter arg3 :: <gfloat*>;
  c-name: "gtk_button_get_alignment";
end;

define C-function gtk-button-set-image
  input parameter arg1 :: <GtkButton>;
  input parameter arg2 :: <GtkWidget>;
  c-name: "gtk_button_set_image";
end;

define C-function gtk-button-get-image
  input parameter arg1 :: <GtkButton>;
  result res :: <GtkWidget>;
  c-name: "gtk_button_get_image";
end;

define C-function gtk-button-set-image-position
  input parameter arg1 :: <GtkButton>;
  input parameter arg2 :: <GtkPositionType>;
  c-name: "gtk_button_set_image_position";
end;

define C-function gtk-button-get-image-position
  input parameter arg1 :: <GtkButton>;
  result res :: <GtkPositionType>;
  c-name: "gtk_button_get_image_position";
end;

define C-subtype <_GtkMisc> (<_GtkWidget>, <_AtkImplementorIface>) end;
define constant <GtkMisc> = <_GtkMisc>;

define constant <GtkImageType> = <C-int>;
define constant $GTK-IMAGE-EMPTY = 0;
define constant $GTK-IMAGE-PIXMAP = 1;
define constant $GTK-IMAGE-IMAGE = 2;
define constant $GTK-IMAGE-PIXBUF = 3;
define constant $GTK-IMAGE-STOCK = 4;
define constant $GTK-IMAGE-ICON-SET = 5;
define constant $GTK-IMAGE-ANIMATION = 6;
define constant $GTK-IMAGE-ICON-NAME = 7;

define C-struct <_GtkImagePixmapData>
  slot GtkImagePixmapData-pixmap :: <GdkPixmap>;
end;

define C-pointer-type <GtkImagePixmapData> => <_GtkImagePixmapData>;

define C-struct <_GtkImageImageData>
  slot GtkImageImageData-image :: <GdkImage>;
end;

define C-pointer-type <GtkImageImageData> => <_GtkImageImageData>;

define C-struct <_GtkImagePixbufData>
  slot GtkImagePixbufData-pixbuf :: <GdkPixbuf>;
end;

define C-pointer-type <GtkImagePixbufData> => <_GtkImagePixbufData>;

define C-struct <_GtkImageStockData>
  slot GtkImageStockData-stock-id :: <gchar*>;
end;

define C-pointer-type <GtkImageStockData> => <_GtkImageStockData>;

define C-struct <_GtkImageIconSetData>
  slot GtkImageIconSetData-icon-set :: <GtkIconSet>;
end;

define C-pointer-type <GtkImageIconSetData> => <_GtkImageIconSetData>;

define C-struct <_GtkImageAnimationData>
  slot GtkImageAnimationData-anim :: <GdkPixbufAnimation>;
  slot GtkImageAnimationData-iter :: <GdkPixbufAnimationIter>;
  slot GtkImageAnimationData-frame-timeout :: <C-unsigned-int>;
end;

define C-pointer-type <GtkImageAnimationData> => <_GtkImageAnimationData>;

define C-struct <_GtkImageIconNameData>
  slot GtkImageIconNameData-icon-name :: <gchar*>;
  slot GtkImageIconNameData-pixbuf :: <GdkPixbuf>;
  slot GtkImageIconNameData-theme-change-id :: <C-unsigned-int>;
end;

define C-pointer-type <GtkImageIconNameData> => <_GtkImageIconNameData>;

define C-subtype <anonymous-5077> (<C-void*>) end;
define C-subtype <_GtkImage> (<_GtkMisc>, <_AtkImplementorIface>) end;
define constant <GtkImage> = <_GtkImage>;

define C-struct <_GtkMiscClass>
  slot GtkMiscClass-parent-class :: <_GtkWidgetClass>;
end;

define C-pointer-type <GtkMiscClass> => <_GtkMiscClass>;

define constant <anonymous-5078> = <C-function-pointer>;
define constant <anonymous-5079> = <C-function-pointer>;
define constant <anonymous-5080> = <C-function-pointer>;
define constant <anonymous-5081> = <C-function-pointer>;
define C-struct <_GtkImageClass>
  slot GtkImageClass-parent-class :: <_GtkMiscClass>;
  slot GtkImageClass-_gtk-reserved1 :: <anonymous-5078>;
  slot GtkImageClass-_gtk-reserved2 :: <anonymous-5079>;
  slot GtkImageClass-_gtk-reserved3 :: <anonymous-5080>;
  slot GtkImageClass-_gtk-reserved4 :: <anonymous-5081>;
end;

define C-pointer-type <GtkImageClass> => <_GtkImageClass>;

define C-function gtk-image-get-type
  result res :: <GType>;
  c-name: "gtk_image_get_type";
end;

define C-function gtk-image-new
  result res :: <GtkWidget>;
  c-name: "gtk_image_new";
end;

define C-function gtk-image-new-from-pixmap
  input parameter arg1 :: <GdkPixmap>;
  input parameter arg2 :: <GdkBitmap>;
  result res :: <GtkWidget>;
  c-name: "gtk_image_new_from_pixmap";
end;

define C-function gtk-image-new-from-image
  input parameter arg1 :: <GdkImage>;
  input parameter arg2 :: <GdkBitmap>;
  result res :: <GtkWidget>;
  c-name: "gtk_image_new_from_image";
end;

define C-function gtk-image-new-from-file
  input parameter arg1 :: <gchar*>;
  result res :: <GtkWidget>;
  c-name: "gtk_image_new_from_file";
end;

define C-function gtk-image-new-from-pixbuf
  input parameter arg1 :: <GdkPixbuf>;
  result res :: <GtkWidget>;
  c-name: "gtk_image_new_from_pixbuf";
end;

define C-function gtk-image-new-from-stock
  input parameter arg1 :: <gchar*>;
  input parameter arg2 :: <GtkIconSize>;
  result res :: <GtkWidget>;
  c-name: "gtk_image_new_from_stock";
end;

define C-function gtk-image-new-from-icon-set
  input parameter arg1 :: <GtkIconSet>;
  input parameter arg2 :: <GtkIconSize>;
  result res :: <GtkWidget>;
  c-name: "gtk_image_new_from_icon_set";
end;

define C-function gtk-image-new-from-animation
  input parameter arg1 :: <GdkPixbufAnimation>;
  result res :: <GtkWidget>;
  c-name: "gtk_image_new_from_animation";
end;

define C-function gtk-image-new-from-icon-name
  input parameter arg1 :: <gchar*>;
  input parameter arg2 :: <GtkIconSize>;
  result res :: <GtkWidget>;
  c-name: "gtk_image_new_from_icon_name";
end;

define C-function gtk-image-clear
  input parameter arg1 :: <GtkImage>;
  c-name: "gtk_image_clear";
end;

define C-function gtk-image-set-from-pixmap
  input parameter arg1 :: <GtkImage>;
  input parameter arg2 :: <GdkPixmap>;
  input parameter arg3 :: <GdkBitmap>;
  c-name: "gtk_image_set_from_pixmap";
end;

define C-function gtk-image-set-from-image
  input parameter arg1 :: <GtkImage>;
  input parameter arg2 :: <GdkImage>;
  input parameter arg3 :: <GdkBitmap>;
  c-name: "gtk_image_set_from_image";
end;

define C-function gtk-image-set-from-file
  input parameter arg1 :: <GtkImage>;
  input parameter arg2 :: <gchar*>;
  c-name: "gtk_image_set_from_file";
end;

define C-function gtk-image-set-from-pixbuf
  input parameter arg1 :: <GtkImage>;
  input parameter arg2 :: <GdkPixbuf>;
  c-name: "gtk_image_set_from_pixbuf";
end;

define C-function gtk-image-set-from-stock
  input parameter arg1 :: <GtkImage>;
  input parameter arg2 :: <gchar*>;
  input parameter arg3 :: <GtkIconSize>;
  c-name: "gtk_image_set_from_stock";
end;

define C-function gtk-image-set-from-icon-set
  input parameter arg1 :: <GtkImage>;
  input parameter arg2 :: <GtkIconSet>;
  input parameter arg3 :: <GtkIconSize>;
  c-name: "gtk_image_set_from_icon_set";
end;

define C-function gtk-image-set-from-animation
  input parameter arg1 :: <GtkImage>;
  input parameter arg2 :: <GdkPixbufAnimation>;
  c-name: "gtk_image_set_from_animation";
end;

define C-function gtk-image-set-from-icon-name
  input parameter arg1 :: <GtkImage>;
  input parameter arg2 :: <gchar*>;
  input parameter arg3 :: <GtkIconSize>;
  c-name: "gtk_image_set_from_icon_name";
end;

define C-function gtk-image-set-pixel-size
  input parameter arg1 :: <GtkImage>;
  input parameter arg2 :: <gint>;
  c-name: "gtk_image_set_pixel_size";
end;

define C-function gtk-image-get-storage-type
  input parameter arg1 :: <GtkImage>;
  result res :: <GtkImageType>;
  c-name: "gtk_image_get_storage_type";
end;

define C-function gtk-image-get-pixmap
  input parameter arg1 :: <GtkImage>;
  input parameter arg2 :: <GdkPixmap*>;
  input parameter arg3 :: <GdkBitmap*>;
  c-name: "gtk_image_get_pixmap";
end;

define C-pointer-type <GdkImage*> => <GdkImage>;
define C-function gtk-image-get-image
  input parameter arg1 :: <GtkImage>;
  input parameter arg2 :: <GdkImage*>;
  input parameter arg3 :: <GdkBitmap*>;
  c-name: "gtk_image_get_image";
end;

define C-function gtk-image-get-pixbuf
  input parameter arg1 :: <GtkImage>;
  result res :: <GdkPixbuf>;
  c-name: "gtk_image_get_pixbuf";
end;

define C-pointer-type <GtkIconSize*> => <GtkIconSize>;
define C-function gtk-image-get-stock
  input parameter arg1 :: <GtkImage>;
  input parameter arg2 :: <gchar**>;
  input parameter arg3 :: <GtkIconSize*>;
  c-name: "gtk_image_get_stock";
end;

define C-pointer-type <GtkIconSet*> => <GtkIconSet>;
define C-function gtk-image-get-icon-set
  input parameter arg1 :: <GtkImage>;
  input parameter arg2 :: <GtkIconSet*>;
  input parameter arg3 :: <GtkIconSize*>;
  c-name: "gtk_image_get_icon_set";
end;

define C-function gtk-image-get-animation
  input parameter arg1 :: <GtkImage>;
  result res :: <GdkPixbufAnimation>;
  c-name: "gtk_image_get_animation";
end;

define C-function gtk-image-get-icon-name
  input parameter arg1 :: <GtkImage>;
  input parameter arg2 :: <gchar**>;
  input parameter arg3 :: <GtkIconSize*>;
  c-name: "gtk_image_get_icon_name";
end;

define C-function gtk-image-get-pixel-size
  input parameter arg1 :: <GtkImage>;
  result res :: <gint>;
  c-name: "gtk_image_get_pixel_size";
end;

define C-function gtk-image-set
  input parameter arg1 :: <GtkImage>;
  input parameter arg2 :: <GdkImage>;
  input parameter arg3 :: <GdkBitmap>;
  c-name: "gtk_image_set";
end;

define C-function gtk-image-get
  input parameter arg1 :: <GtkImage>;
  input parameter arg2 :: <GdkImage*>;
  input parameter arg3 :: <GdkBitmap*>;
  c-name: "gtk_image_get";
end;

define C-function gtk-misc-get-type
  result res :: <GType>;
  c-name: "gtk_misc_get_type";
end;

define C-function gtk-misc-set-alignment
  input parameter arg1 :: <GtkMisc>;
  input parameter arg2 :: <gfloat>;
  input parameter arg3 :: <gfloat>;
  c-name: "gtk_misc_set_alignment";
end;

define C-function gtk-misc-get-alignment
  input parameter arg1 :: <GtkMisc>;
  input parameter arg2 :: <gfloat*>;
  input parameter arg3 :: <gfloat*>;
  c-name: "gtk_misc_get_alignment";
end;

define C-function gtk-misc-set-padding
  input parameter arg1 :: <GtkMisc>;
  input parameter arg2 :: <gint>;
  input parameter arg3 :: <gint>;
  c-name: "gtk_misc_set_padding";
end;

define C-function gtk-misc-get-padding
  input parameter arg1 :: <GtkMisc>;
  input parameter arg2 :: <gint*>;
  input parameter arg3 :: <gint*>;
  c-name: "gtk_misc_get_padding";
end;

define C-subtype <_GtkViewport> (<_GtkBin>, <_AtkImplementorIface>) end;
define constant <GtkViewport> = <_GtkViewport>;

define constant <anonymous-7944> = <C-function-pointer>;
define C-struct <_GtkViewportClass>
  slot GtkViewportClass-parent-class :: <_GtkBinClass>;
  slot GtkViewportClass-set-scroll-adjustments :: <anonymous-7944>;
end;

define C-pointer-type <GtkViewportClass> => <_GtkViewportClass>;

define C-function gtk-viewport-get-type
  result res :: <GType>;
  c-name: "gtk_viewport_get_type";
end;

define C-function gtk-viewport-new
  input parameter arg1 :: <GtkAdjustment>;
  input parameter arg2 :: <GtkAdjustment>;
  result res :: <GtkWidget>;
  c-name: "gtk_viewport_new";
end;

define C-function gtk-viewport-get-hadjustment
  input parameter arg1 :: <GtkViewport>;
  result res :: <GtkAdjustment>;
  c-name: "gtk_viewport_get_hadjustment";
end;

define C-function gtk-viewport-get-vadjustment
  input parameter arg1 :: <GtkViewport>;
  result res :: <GtkAdjustment>;
  c-name: "gtk_viewport_get_vadjustment";
end;

define C-function gtk-viewport-set-hadjustment
  input parameter arg1 :: <GtkViewport>;
  input parameter arg2 :: <GtkAdjustment>;
  c-name: "gtk_viewport_set_hadjustment";
end;

define C-function gtk-viewport-set-vadjustment
  input parameter arg1 :: <GtkViewport>;
  input parameter arg2 :: <GtkAdjustment>;
  c-name: "gtk_viewport_set_vadjustment";
end;

define C-function gtk-viewport-set-shadow-type
  input parameter arg1 :: <GtkViewport>;
  input parameter arg2 :: <GtkShadowType>;
  c-name: "gtk_viewport_set_shadow_type";
end;

define C-function gtk-viewport-get-shadow-type
  input parameter arg1 :: <GtkViewport>;
  result res :: <GtkShadowType>;
  c-name: "gtk_viewport_get_shadow_type";
end;

define constant $GTK-MAJOR-VERSION = 2;

define constant $GTK-MINOR-VERSION = 12;

define constant $GTK-MICRO-VERSION = 0;

define constant $GTK-BINARY-AGE = 1200;

define constant $GTK-INTERFACE-AGE = 0;

define C-subtype <_GtkBox> (<_GtkContainer>, <_AtkImplementorIface>) end;
define constant <GtkBox> = <_GtkBox>;

define C-subtype <_GtkVBox> (<_GtkBox>, <_AtkImplementorIface>) end;
define constant <GtkVBox> = <_GtkVBox>;

define C-struct <_GtkBoxClass>
  slot GtkBoxClass-parent-class :: <_GtkContainerClass>;
end;

define C-pointer-type <GtkBoxClass> => <_GtkBoxClass>;

define C-struct <_GtkVBoxClass>
  slot GtkVBoxClass-parent-class :: <_GtkBoxClass>;
end;

define C-pointer-type <GtkVBoxClass> => <_GtkVBoxClass>;

define C-function gtk-vbox-get-type
  result res :: <GType>;
  c-name: "gtk_vbox_get_type";
end;

define C-function gtk-vbox-new
  input parameter arg1 :: <gboolean>;
  input parameter arg2 :: <gint>;
  result res :: <GtkWidget>;
  c-name: "gtk_vbox_new";
end;

define C-struct <_GtkBoxChild>
  slot GtkBoxChild-widget :: <GtkWidget>;
  slot GtkBoxChild-padding :: <C-unsigned-short>;
  bitfield slot GtkBoxChild-expand :: <C-int>, width: 1;
  bitfield slot GtkBoxChild-fill :: <C-int>, width: 1;
  bitfield slot GtkBoxChild-pack :: <C-int>, width: 1;
  bitfield slot GtkBoxChild-is-secondary :: <C-int>, width: 1;
end;

define C-pointer-type <GtkBoxChild> => <_GtkBoxChild>;

define C-function gtk-box-get-type
  result res :: <GType>;
  c-name: "gtk_box_get_type";
end;

define C-function gtk-box-pack-start
  input parameter arg1 :: <GtkBox>;
  input parameter arg2 :: <GtkWidget>;
  input parameter arg3 :: <gboolean>;
  input parameter arg4 :: <gboolean>;
  input parameter arg5 :: <guint>;
  c-name: "gtk_box_pack_start";
end;

define C-function gtk-box-pack-end
  input parameter arg1 :: <GtkBox>;
  input parameter arg2 :: <GtkWidget>;
  input parameter arg3 :: <gboolean>;
  input parameter arg4 :: <gboolean>;
  input parameter arg5 :: <guint>;
  c-name: "gtk_box_pack_end";
end;

define C-function gtk-box-pack-start-defaults
  input parameter arg1 :: <GtkBox>;
  input parameter arg2 :: <GtkWidget>;
  c-name: "gtk_box_pack_start_defaults";
end;

define C-function gtk-box-pack-end-defaults
  input parameter arg1 :: <GtkBox>;
  input parameter arg2 :: <GtkWidget>;
  c-name: "gtk_box_pack_end_defaults";
end;

define C-function gtk-box-set-homogeneous
  input parameter arg1 :: <GtkBox>;
  input parameter arg2 :: <gboolean>;
  c-name: "gtk_box_set_homogeneous";
end;

define C-function gtk-box-get-homogeneous
  input parameter arg1 :: <GtkBox>;
  result res :: <gboolean>;
  c-name: "gtk_box_get_homogeneous";
end;

define C-function gtk-box-set-spacing
  input parameter arg1 :: <GtkBox>;
  input parameter arg2 :: <gint>;
  c-name: "gtk_box_set_spacing";
end;

define C-function gtk-box-get-spacing
  input parameter arg1 :: <GtkBox>;
  result res :: <gint>;
  c-name: "gtk_box_get_spacing";
end;

define C-function gtk-box-reorder-child
  input parameter arg1 :: <GtkBox>;
  input parameter arg2 :: <GtkWidget>;
  input parameter arg3 :: <gint>;
  c-name: "gtk_box_reorder_child";
end;

define C-pointer-type <GtkPackType*> => <GtkPackType>;
define C-function gtk-box-query-child-packing
  input parameter arg1 :: <GtkBox>;
  input parameter arg2 :: <GtkWidget>;
  input parameter arg3 :: <gboolean*>;
  input parameter arg4 :: <gboolean*>;
  input parameter arg5 :: <guint*>;
  input parameter arg6 :: <GtkPackType*>;
  c-name: "gtk_box_query_child_packing";
end;

define C-function gtk-box-set-child-packing
  input parameter arg1 :: <GtkBox>;
  input parameter arg2 :: <GtkWidget>;
  input parameter arg3 :: <gboolean>;
  input parameter arg4 :: <gboolean>;
  input parameter arg5 :: <guint>;
  input parameter arg6 :: <GtkPackType>;
  c-name: "gtk_box_set_child_packing";
end;

define C-subtype <_GtkButtonBox> (<_GtkBox>, <_AtkImplementorIface>) end;
define constant <GtkButtonBox> = <_GtkButtonBox>;

define C-subtype <_GtkVButtonBox> (<_GtkButtonBox>, <_AtkImplementorIface>) end;
define constant <GtkVButtonBox> = <_GtkVButtonBox>;

define C-struct <_GtkButtonBoxClass>
  slot GtkButtonBoxClass-parent-class :: <_GtkBoxClass>;
end;

define C-pointer-type <GtkButtonBoxClass> => <_GtkButtonBoxClass>;

define C-struct <_GtkVButtonBoxClass>
  slot GtkVButtonBoxClass-parent-class :: <_GtkButtonBoxClass>;
end;

define C-pointer-type <GtkVButtonBoxClass> => <_GtkVButtonBoxClass>;

define C-function gtk-vbutton-box-get-type
  result res :: <GType>;
  c-name: "gtk_vbutton_box_get_type";
end;

define C-function gtk-vbutton-box-new
  result res :: <GtkWidget>;
  c-name: "gtk_vbutton_box_new";
end;

define C-function gtk-vbutton-box-get-spacing-default
  result res :: <gint>;
  c-name: "gtk_vbutton_box_get_spacing_default";
end;

define C-function gtk-vbutton-box-set-spacing-default
  input parameter arg1 :: <gint>;
  c-name: "gtk_vbutton_box_set_spacing_default";
end;

define C-function gtk-vbutton-box-get-layout-default
  result res :: <GtkButtonBoxStyle>;
  c-name: "gtk_vbutton_box_get_layout_default";
end;

define C-function gtk-vbutton-box-set-layout-default
  input parameter arg1 :: <GtkButtonBoxStyle>;
  c-name: "gtk_vbutton_box_set_layout_default";
end;

define C-function gtk-button-box-get-type
  result res :: <GType>;
  c-name: "gtk_button_box_get_type";
end;

define C-function gtk-button-box-get-layout
  input parameter arg1 :: <GtkButtonBox>;
  result res :: <GtkButtonBoxStyle>;
  c-name: "gtk_button_box_get_layout";
end;

define C-function gtk-button-box-set-layout
  input parameter arg1 :: <GtkButtonBox>;
  input parameter arg2 :: <GtkButtonBoxStyle>;
  c-name: "gtk_button_box_set_layout";
end;

define C-function gtk-button-box-get-child-secondary
  input parameter arg1 :: <GtkButtonBox>;
  input parameter arg2 :: <GtkWidget>;
  result res :: <gboolean>;
  c-name: "gtk_button_box_get_child_secondary";
end;

define C-function gtk-button-box-set-child-secondary
  input parameter arg1 :: <GtkButtonBox>;
  input parameter arg2 :: <GtkWidget>;
  input parameter arg3 :: <gboolean>;
  c-name: "gtk_button_box_set_child_secondary";
end;

define C-function gtk-button-box-set-child-size
  input parameter arg1 :: <GtkButtonBox>;
  input parameter arg2 :: <gint>;
  input parameter arg3 :: <gint>;
  c-name: "gtk_button_box_set_child_size";
end;

define C-function gtk-button-box-set-child-ipadding
  input parameter arg1 :: <GtkButtonBox>;
  input parameter arg2 :: <gint>;
  input parameter arg3 :: <gint>;
  c-name: "gtk_button_box_set_child_ipadding";
end;

define C-function gtk-button-box-get-child-size
  input parameter arg1 :: <GtkButtonBox>;
  input parameter arg2 :: <gint*>;
  input parameter arg3 :: <gint*>;
  c-name: "gtk_button_box_get_child_size";
end;

define C-function gtk-button-box-get-child-ipadding
  input parameter arg1 :: <GtkButtonBox>;
  input parameter arg2 :: <gint*>;
  input parameter arg3 :: <gint*>;
  c-name: "gtk_button_box_get_child_ipadding";
end;

define constant $GTK-BUTTONBOX-DEFAULT = -1;

define C-struct <_GtkUIManagerPrivate>
end;

define C-pointer-type <GtkUIManagerPrivate> => <_GtkUIManagerPrivate>;

define C-subtype <_GtkUIManager> (<_GObject>) end;
define constant <GtkUIManager> = <_GtkUIManager>;

define constant <anonymous-8506> = <C-function-pointer>;
define constant <anonymous-8507> = <C-function-pointer>;
define C-struct <_GtkActionPrivate>
end;

define C-pointer-type <GtkActionPrivate> => <_GtkActionPrivate>;

define C-subtype <_GtkAction> (<_GObject>) end;
define constant <GtkAction> = <_GtkAction>;

define constant <anonymous-8508> = <C-function-pointer>;
define constant <anonymous-8509> = <C-function-pointer>;
define constant <anonymous-8510> = <C-function-pointer>;
define constant <anonymous-8511> = <C-function-pointer>;
define constant <anonymous-8512> = <C-function-pointer>;
define constant <anonymous-8513> = <C-function-pointer>;
define constant <anonymous-8514> = <C-function-pointer>;
define constant <anonymous-8515> = <C-function-pointer>;
define C-struct <_GtkUIManagerClass>
  slot GtkUIManagerClass-parent-class :: <_GObjectClass>;
  slot GtkUIManagerClass-add-widget :: <anonymous-8506>;
  slot GtkUIManagerClass-actions-changed :: <anonymous-8507>;
  slot GtkUIManagerClass-connect-proxy :: <anonymous-8508>;
  slot GtkUIManagerClass-disconnect-proxy :: <anonymous-8509>;
  slot GtkUIManagerClass-pre-activate :: <anonymous-8510>;
  slot GtkUIManagerClass-post-activate :: <anonymous-8511>;
  slot GtkUIManagerClass-get-widget :: <anonymous-8512>;
  slot GtkUIManagerClass-get-action :: <anonymous-8513>;
  slot GtkUIManagerClass-_gtk-reserved1 :: <anonymous-8514>;
  slot GtkUIManagerClass-_gtk-reserved2 :: <anonymous-8515>;
end;

define C-pointer-type <GtkUIManagerClass> => <_GtkUIManagerClass>;

define constant <GtkUIManagerItemType> = <C-int>;
define constant $GTK-UI-MANAGER-AUTO = 0;
define constant $GTK-UI-MANAGER-MENUBAR = 1;
define constant $GTK-UI-MANAGER-MENU = 2;
define constant $GTK-UI-MANAGER-TOOLBAR = 4;
define constant $GTK-UI-MANAGER-PLACEHOLDER = 8;
define constant $GTK-UI-MANAGER-POPUP = 16;
define constant $GTK-UI-MANAGER-MENUITEM = 32;
define constant $GTK-UI-MANAGER-TOOLITEM = 64;
define constant $GTK-UI-MANAGER-SEPARATOR = 128;
define constant $GTK-UI-MANAGER-ACCELERATOR = 256;

define C-function gtk-ui-manager-get-type
  result res :: <GType>;
  c-name: "gtk_ui_manager_get_type";
end;

define C-function gtk-ui-manager-new
  result res :: <GtkUIManager>;
  c-name: "gtk_ui_manager_new";
end;

define C-function gtk-ui-manager-set-add-tearoffs
  input parameter arg1 :: <GtkUIManager>;
  input parameter arg2 :: <gboolean>;
  c-name: "gtk_ui_manager_set_add_tearoffs";
end;

define C-function gtk-ui-manager-get-add-tearoffs
  input parameter arg1 :: <GtkUIManager>;
  result res :: <gboolean>;
  c-name: "gtk_ui_manager_get_add_tearoffs";
end;

define C-struct <_GtkActionGroupPrivate>
end;

define C-pointer-type <GtkActionGroupPrivate> => <_GtkActionGroupPrivate>;

define C-subtype <_GtkActionGroup> (<_GObject>) end;
define constant <GtkActionGroup> = <_GtkActionGroup>;

define C-function gtk-ui-manager-insert-action-group
  input parameter arg1 :: <GtkUIManager>;
  input parameter arg2 :: <GtkActionGroup>;
  input parameter arg3 :: <gint>;
  c-name: "gtk_ui_manager_insert_action_group";
end;

define C-function gtk-ui-manager-remove-action-group
  input parameter arg1 :: <GtkUIManager>;
  input parameter arg2 :: <GtkActionGroup>;
  c-name: "gtk_ui_manager_remove_action_group";
end;

define C-function gtk-ui-manager-get-action-groups
  input parameter arg1 :: <GtkUIManager>;
  result res :: <GList>;
  c-name: "gtk_ui_manager_get_action_groups";
end;

define C-function gtk-ui-manager-get-accel-group
  input parameter arg1 :: <GtkUIManager>;
  result res :: <GtkAccelGroup>;
  c-name: "gtk_ui_manager_get_accel_group";
end;

define C-function gtk-ui-manager-get-widget
  input parameter arg1 :: <GtkUIManager>;
  input parameter arg2 :: <gchar*>;
  result res :: <GtkWidget>;
  c-name: "gtk_ui_manager_get_widget";
end;

define C-function gtk-ui-manager-get-toplevels
  input parameter arg1 :: <GtkUIManager>;
  input parameter arg2 :: <GtkUIManagerItemType>;
  result res :: <GSList>;
  c-name: "gtk_ui_manager_get_toplevels";
end;

define C-function gtk-ui-manager-get-action
  input parameter arg1 :: <GtkUIManager>;
  input parameter arg2 :: <gchar*>;
  result res :: <GtkAction>;
  c-name: "gtk_ui_manager_get_action";
end;

define C-function gtk-ui-manager-add-ui-from-string
  input parameter arg1 :: <GtkUIManager>;
  input parameter arg2 :: <gchar*>;
  input parameter arg3 :: <gssize>;
  input parameter arg4 :: <GError*>;
  result res :: <guint>;
  c-name: "gtk_ui_manager_add_ui_from_string";
end;

define C-function gtk-ui-manager-add-ui-from-file
  input parameter arg1 :: <GtkUIManager>;
  input parameter arg2 :: <gchar*>;
  input parameter arg3 :: <GError*>;
  result res :: <guint>;
  c-name: "gtk_ui_manager_add_ui_from_file";
end;

define C-function gtk-ui-manager-add-ui
  input parameter arg1 :: <GtkUIManager>;
  input parameter arg2 :: <guint>;
  input parameter arg3 :: <gchar*>;
  input parameter arg4 :: <gchar*>;
  input parameter arg5 :: <gchar*>;
  input parameter arg6 :: <GtkUIManagerItemType>;
  input parameter arg7 :: <gboolean>;
  c-name: "gtk_ui_manager_add_ui";
end;

define C-function gtk-ui-manager-remove-ui
  input parameter arg1 :: <GtkUIManager>;
  input parameter arg2 :: <guint>;
  c-name: "gtk_ui_manager_remove_ui";
end;

define C-function gtk-ui-manager-get-ui
  input parameter arg1 :: <GtkUIManager>;
  result res :: <gchar*>;
  c-name: "gtk_ui_manager_get_ui";
end;

define C-function gtk-ui-manager-ensure-update
  input parameter arg1 :: <GtkUIManager>;
  c-name: "gtk_ui_manager_ensure_update";
end;

define C-function gtk-ui-manager-new-merge-id
  input parameter arg1 :: <GtkUIManager>;
  result res :: <guint>;
  c-name: "gtk_ui_manager_new_merge_id";
end;

define constant <anonymous-4895> = <C-function-pointer>;
define constant <anonymous-4896> = <C-function-pointer>;
define constant <anonymous-4897> = <C-function-pointer>;
define constant <anonymous-4898> = <C-function-pointer>;
define constant <anonymous-4899> = <C-function-pointer>;
define C-struct <_GtkActionGroupClass>
  slot GtkActionGroupClass-parent-class :: <_GObjectClass>;
  slot GtkActionGroupClass-get-action :: <anonymous-4895>;
  slot GtkActionGroupClass-_gtk-reserved1 :: <anonymous-4896>;
  slot GtkActionGroupClass-_gtk-reserved2 :: <anonymous-4897>;
  slot GtkActionGroupClass-_gtk-reserved3 :: <anonymous-4898>;
  slot GtkActionGroupClass-_gtk-reserved4 :: <anonymous-4899>;
end;

define C-pointer-type <GtkActionGroupClass> => <_GtkActionGroupClass>;

define C-struct <_GtkActionEntry>
  slot GtkActionEntry-name :: <gchar*>;
  slot GtkActionEntry-stock-id :: <gchar*>;
  slot GtkActionEntry-label :: <gchar*>;
  slot GtkActionEntry-accelerator :: <gchar*>;
  slot GtkActionEntry-tooltip :: <gchar*>;
  slot GtkActionEntry-callback :: <anonymous-1667>;
end;

define C-pointer-type <GtkActionEntry> => <_GtkActionEntry>;

define C-struct <_GtkToggleActionEntry>
  slot GtkToggleActionEntry-name :: <gchar*>;
  slot GtkToggleActionEntry-stock-id :: <gchar*>;
  slot GtkToggleActionEntry-label :: <gchar*>;
  slot GtkToggleActionEntry-accelerator :: <gchar*>;
  slot GtkToggleActionEntry-tooltip :: <gchar*>;
  slot GtkToggleActionEntry-callback :: <anonymous-1667>;
  slot GtkToggleActionEntry-is-active :: <C-signed-int>;
end;

define C-pointer-type <GtkToggleActionEntry> => <_GtkToggleActionEntry>;

define C-struct <_GtkRadioActionEntry>
  slot GtkRadioActionEntry-name :: <gchar*>;
  slot GtkRadioActionEntry-stock-id :: <gchar*>;
  slot GtkRadioActionEntry-label :: <gchar*>;
  slot GtkRadioActionEntry-accelerator :: <gchar*>;
  slot GtkRadioActionEntry-tooltip :: <gchar*>;
  slot GtkRadioActionEntry-value :: <C-signed-int>;
end;

define C-pointer-type <GtkRadioActionEntry> => <_GtkRadioActionEntry>;

define C-function gtk-action-group-get-type
  result res :: <GType>;
  c-name: "gtk_action_group_get_type";
end;

define C-function gtk-action-group-new
  input parameter arg1 :: <gchar*>;
  result res :: <GtkActionGroup>;
  c-name: "gtk_action_group_new";
end;

define C-function gtk-action-group-get-name
  input parameter arg1 :: <GtkActionGroup>;
  result res :: <gchar*>;
  c-name: "gtk_action_group_get_name";
end;

define C-function gtk-action-group-get-sensitive
  input parameter arg1 :: <GtkActionGroup>;
  result res :: <gboolean>;
  c-name: "gtk_action_group_get_sensitive";
end;

define C-function gtk-action-group-set-sensitive
  input parameter arg1 :: <GtkActionGroup>;
  input parameter arg2 :: <gboolean>;
  c-name: "gtk_action_group_set_sensitive";
end;

define C-function gtk-action-group-get-visible
  input parameter arg1 :: <GtkActionGroup>;
  result res :: <gboolean>;
  c-name: "gtk_action_group_get_visible";
end;

define C-function gtk-action-group-set-visible
  input parameter arg1 :: <GtkActionGroup>;
  input parameter arg2 :: <gboolean>;
  c-name: "gtk_action_group_set_visible";
end;

define C-function gtk-action-group-get-action
  input parameter arg1 :: <GtkActionGroup>;
  input parameter arg2 :: <gchar*>;
  result res :: <GtkAction>;
  c-name: "gtk_action_group_get_action";
end;

define C-function gtk-action-group-list-actions
  input parameter arg1 :: <GtkActionGroup>;
  result res :: <GList>;
  c-name: "gtk_action_group_list_actions";
end;

define C-function gtk-action-group-add-action
  input parameter arg1 :: <GtkActionGroup>;
  input parameter arg2 :: <GtkAction>;
  c-name: "gtk_action_group_add_action";
end;

define C-function gtk-action-group-add-action-with-accel
  input parameter arg1 :: <GtkActionGroup>;
  input parameter arg2 :: <GtkAction>;
  input parameter arg3 :: <gchar*>;
  c-name: "gtk_action_group_add_action_with_accel";
end;

define C-function gtk-action-group-remove-action
  input parameter arg1 :: <GtkActionGroup>;
  input parameter arg2 :: <GtkAction>;
  c-name: "gtk_action_group_remove_action";
end;

define C-function gtk-action-group-add-actions
  input parameter arg1 :: <GtkActionGroup>;
  input parameter arg2 :: <GtkActionEntry>;
  input parameter arg3 :: <guint>;
  input parameter arg4 :: <gpointer>;
  c-name: "gtk_action_group_add_actions";
end;

define C-function gtk-action-group-add-toggle-actions
  input parameter arg1 :: <GtkActionGroup>;
  input parameter arg2 :: <GtkToggleActionEntry>;
  input parameter arg3 :: <guint>;
  input parameter arg4 :: <gpointer>;
  c-name: "gtk_action_group_add_toggle_actions";
end;

define C-function gtk-action-group-add-radio-actions
  input parameter arg1 :: <GtkActionGroup>;
  input parameter arg2 :: <GtkRadioActionEntry>;
  input parameter arg3 :: <guint>;
  input parameter arg4 :: <gint>;
  input parameter arg5 :: <GCallback>;
  input parameter arg6 :: <gpointer>;
  c-name: "gtk_action_group_add_radio_actions";
end;

define C-function gtk-action-group-add-actions-full
  input parameter arg1 :: <GtkActionGroup>;
  input parameter arg2 :: <GtkActionEntry>;
  input parameter arg3 :: <guint>;
  input parameter arg4 :: <gpointer>;
  input parameter arg5 :: <GDestroyNotify>;
  c-name: "gtk_action_group_add_actions_full";
end;

define C-function gtk-action-group-add-toggle-actions-full
  input parameter arg1 :: <GtkActionGroup>;
  input parameter arg2 :: <GtkToggleActionEntry>;
  input parameter arg3 :: <guint>;
  input parameter arg4 :: <gpointer>;
  input parameter arg5 :: <GDestroyNotify>;
  c-name: "gtk_action_group_add_toggle_actions_full";
end;

define C-function gtk-action-group-add-radio-actions-full
  input parameter arg1 :: <GtkActionGroup>;
  input parameter arg2 :: <GtkRadioActionEntry>;
  input parameter arg3 :: <guint>;
  input parameter arg4 :: <gint>;
  input parameter arg5 :: <GCallback>;
  input parameter arg6 :: <gpointer>;
  input parameter arg7 :: <GDestroyNotify>;
  c-name: "gtk_action_group_add_radio_actions_full";
end;

define constant <anonymous-4860> = <C-function-pointer>;
define constant <GtkTranslateFunc> = <anonymous-4860>;

define C-function gtk-action-group-set-translate-func
  input parameter arg1 :: <GtkActionGroup>;
  input parameter arg2 :: <GtkTranslateFunc>;
  input parameter arg3 :: <gpointer>;
  input parameter arg4 :: <GtkDestroyNotify>;
  c-name: "gtk_action_group_set_translate_func";
end;

define C-function gtk-action-group-set-translation-domain
  input parameter arg1 :: <GtkActionGroup>;
  input parameter arg2 :: <gchar*>;
  c-name: "gtk_action_group_set_translation_domain";
end;

define C-function gtk-action-group-translate-string
  input parameter arg1 :: <GtkActionGroup>;
  input parameter arg2 :: <gchar*>;
  result res :: <gchar*>;
  c-name: "gtk_action_group_translate_string";
end;

define constant <anonymous-4861> = <C-function-pointer>;
define constant <GtkPrintFunc> = <anonymous-4861>;

define constant <anonymous-4862> = <C-function-pointer>;
define constant <GtkItemFactoryCallback> = <anonymous-4862>;

define constant <anonymous-4863> = <C-function-pointer>;
define constant <GtkItemFactoryCallback1> = <anonymous-4863>;

define C-subtype <_GtkItemFactory> (<_GtkObject>) end;
define constant <GtkItemFactory> = <_GtkItemFactory>;

define constant <anonymous-4864> = <C-function-pointer>;
define constant <anonymous-4865> = <C-function-pointer>;
define constant <anonymous-4866> = <C-function-pointer>;
define constant <anonymous-4867> = <C-function-pointer>;
define C-struct <_GtkItemFactoryClass>
  slot GtkItemFactoryClass-object-class :: <_GtkObjectClass>;
  slot GtkItemFactoryClass-item-ht :: <GHashTable>;
  slot GtkItemFactoryClass-_gtk-reserved1 :: <anonymous-4864>;
  slot GtkItemFactoryClass-_gtk-reserved2 :: <anonymous-4865>;
  slot GtkItemFactoryClass-_gtk-reserved3 :: <anonymous-4866>;
  slot GtkItemFactoryClass-_gtk-reserved4 :: <anonymous-4867>;
end;

define C-pointer-type <GtkItemFactoryClass> => <_GtkItemFactoryClass>;

define C-struct <_GtkItemFactoryEntry>
  slot GtkItemFactoryEntry-path :: <gchar*>;
  slot GtkItemFactoryEntry-accelerator :: <gchar*>;
  slot GtkItemFactoryEntry-callback :: <anonymous-4862>;
  slot GtkItemFactoryEntry-callback-action :: <C-unsigned-int>;
  slot GtkItemFactoryEntry-item-type :: <gchar*>;
  slot GtkItemFactoryEntry-extra-data :: <C-void*>;
end;

define C-pointer-type <GtkItemFactoryEntry> => <_GtkItemFactoryEntry>;

define C-struct <_GtkItemFactoryItem>
  slot GtkItemFactoryItem-path :: <gchar*>;
  slot GtkItemFactoryItem-widgets :: <GSList>;
end;

define C-pointer-type <GtkItemFactoryItem> => <_GtkItemFactoryItem>;

define C-function gtk-item-factory-get-type
  result res :: <GType>;
  c-name: "gtk_item_factory_get_type";
end;

define C-function gtk-item-factory-new
  input parameter arg1 :: <GType>;
  input parameter arg2 :: <gchar*>;
  input parameter arg3 :: <GtkAccelGroup>;
  result res :: <GtkItemFactory>;
  c-name: "gtk_item_factory_new";
end;

define C-function gtk-item-factory-construct
  input parameter arg1 :: <GtkItemFactory>;
  input parameter arg2 :: <GType>;
  input parameter arg3 :: <gchar*>;
  input parameter arg4 :: <GtkAccelGroup>;
  c-name: "gtk_item_factory_construct";
end;

define C-function gtk-item-factory-add-foreign
  input parameter arg1 :: <GtkWidget>;
  input parameter arg2 :: <gchar*>;
  input parameter arg3 :: <GtkAccelGroup>;
  input parameter arg4 :: <guint>;
  input parameter arg5 :: <GdkModifierType>;
  c-name: "gtk_item_factory_add_foreign";
end;

define C-function gtk-item-factory-from-widget
  input parameter arg1 :: <GtkWidget>;
  result res :: <GtkItemFactory>;
  c-name: "gtk_item_factory_from_widget";
end;

define C-function gtk-item-factory-path-from-widget
  input parameter arg1 :: <GtkWidget>;
  result res :: <gchar*>;
  c-name: "gtk_item_factory_path_from_widget";
end;

define C-function gtk-item-factory-get-item
  input parameter arg1 :: <GtkItemFactory>;
  input parameter arg2 :: <gchar*>;
  result res :: <GtkWidget>;
  c-name: "gtk_item_factory_get_item";
end;

define C-function gtk-item-factory-get-widget
  input parameter arg1 :: <GtkItemFactory>;
  input parameter arg2 :: <gchar*>;
  result res :: <GtkWidget>;
  c-name: "gtk_item_factory_get_widget";
end;

define C-function gtk-item-factory-get-widget-by-action
  input parameter arg1 :: <GtkItemFactory>;
  input parameter arg2 :: <guint>;
  result res :: <GtkWidget>;
  c-name: "gtk_item_factory_get_widget_by_action";
end;

define C-function gtk-item-factory-get-item-by-action
  input parameter arg1 :: <GtkItemFactory>;
  input parameter arg2 :: <guint>;
  result res :: <GtkWidget>;
  c-name: "gtk_item_factory_get_item_by_action";
end;

define C-function gtk-item-factory-create-item
  input parameter arg1 :: <GtkItemFactory>;
  input parameter arg2 :: <GtkItemFactoryEntry>;
  input parameter arg3 :: <gpointer>;
  input parameter arg4 :: <guint>;
  c-name: "gtk_item_factory_create_item";
end;

define C-function gtk-item-factory-create-items
  input parameter arg1 :: <GtkItemFactory>;
  input parameter arg2 :: <guint>;
  input parameter arg3 :: <GtkItemFactoryEntry>;
  input parameter arg4 :: <gpointer>;
  c-name: "gtk_item_factory_create_items";
end;

define C-function gtk-item-factory-delete-item
  input parameter arg1 :: <GtkItemFactory>;
  input parameter arg2 :: <gchar*>;
  c-name: "gtk_item_factory_delete_item";
end;

define C-function gtk-item-factory-delete-entry
  input parameter arg1 :: <GtkItemFactory>;
  input parameter arg2 :: <GtkItemFactoryEntry>;
  c-name: "gtk_item_factory_delete_entry";
end;

define C-function gtk-item-factory-delete-entries
  input parameter arg1 :: <GtkItemFactory>;
  input parameter arg2 :: <guint>;
  input parameter arg3 :: <GtkItemFactoryEntry>;
  c-name: "gtk_item_factory_delete_entries";
end;

define C-function gtk-item-factory-popup
  input parameter arg1 :: <GtkItemFactory>;
  input parameter arg2 :: <guint>;
  input parameter arg3 :: <guint>;
  input parameter arg4 :: <guint>;
  input parameter arg5 :: <guint32>;
  c-name: "gtk_item_factory_popup";
end;

define C-function gtk-item-factory-popup-with-data
  input parameter arg1 :: <GtkItemFactory>;
  input parameter arg2 :: <gpointer>;
  input parameter arg3 :: <GtkDestroyNotify>;
  input parameter arg4 :: <guint>;
  input parameter arg5 :: <guint>;
  input parameter arg6 :: <guint>;
  input parameter arg7 :: <guint32>;
  c-name: "gtk_item_factory_popup_with_data";
end;

define C-function gtk-item-factory-popup-data
  input parameter arg1 :: <GtkItemFactory>;
  result res :: <gpointer>;
  c-name: "gtk_item_factory_popup_data";
end;

define C-function gtk-item-factory-popup-data-from-widget
  input parameter arg1 :: <GtkWidget>;
  result res :: <gpointer>;
  c-name: "gtk_item_factory_popup_data_from_widget";
end;

define C-function gtk-item-factory-set-translate-func
  input parameter arg1 :: <GtkItemFactory>;
  input parameter arg2 :: <GtkTranslateFunc>;
  input parameter arg3 :: <gpointer>;
  input parameter arg4 :: <GtkDestroyNotify>;
  c-name: "gtk_item_factory_set_translate_func";
end;

define constant <anonymous-4888> = <C-function-pointer>;
define constant <GtkMenuCallback> = <anonymous-4888>;

define C-struct <GtkMenuEntry>
  slot tkMenuEntry-path :: <gchar*>;
  slot tkMenuEntry-accelerator :: <gchar*>;
  slot tkMenuEntry-callback :: <anonymous-4888>;
  slot tkMenuEntry-callback-data :: <C-void*>;
  slot tkMenuEntry-widget :: <GtkWidget>;
end;

define constant <anonymous-4890> = <C-function-pointer>;
define constant <GtkItemFactoryCallback2> = <anonymous-4890>;

define C-function gtk-item-factory-create-items-ac
  input parameter arg1 :: <GtkItemFactory>;
  input parameter arg2 :: <guint>;
  input parameter arg3 :: <GtkItemFactoryEntry>;
  input parameter arg4 :: <gpointer>;
  input parameter arg5 :: <guint>;
  c-name: "gtk_item_factory_create_items_ac";
end;

define C-function gtk-item-factory-from-path
  input parameter arg1 :: <gchar*>;
  result res :: <GtkItemFactory>;
  c-name: "gtk_item_factory_from_path";
end;

define C-function gtk-item-factory-create-menu-entries
  input parameter arg1 :: <guint>;
  input parameter arg2 :: <GtkMenuEntry>;
  c-name: "gtk_item_factory_create_menu_entries";
end;

define C-function gtk-item-factories-path-delete
  input parameter arg1 :: <gchar*>;
  input parameter arg2 :: <gchar*>;
  c-name: "gtk_item_factories_path_delete";
end;

define constant <anonymous-4821> = <C-function-pointer>;
define constant <anonymous-4822> = <C-function-pointer>;
define constant <anonymous-4823> = <C-function-pointer>;
define constant <anonymous-4824> = <C-function-pointer>;
define constant <anonymous-4825> = <C-function-pointer>;
define constant <anonymous-4826> = <C-function-pointer>;
define constant <anonymous-4827> = <C-function-pointer>;
define constant <anonymous-4828> = <C-function-pointer>;
define constant <anonymous-4829> = <C-function-pointer>;
define C-struct <_GtkActionClass>
  slot GtkActionClass-parent-class :: <_GObjectClass>;
  slot GtkActionClass-activate :: <anonymous-4821>;
  slot GtkActionClass-menu-item-type :: <C-unsigned-int>;
  slot GtkActionClass-toolbar-item-type :: <C-unsigned-int>;
  slot GtkActionClass-create-menu-item :: <anonymous-4822>;
  slot GtkActionClass-create-tool-item :: <anonymous-4823>;
  slot GtkActionClass-connect-proxy :: <anonymous-4824>;
  slot GtkActionClass-disconnect-proxy :: <anonymous-4825>;
  slot GtkActionClass-create-menu :: <anonymous-4826>;
  slot GtkActionClass-_gtk-reserved2 :: <anonymous-4827>;
  slot GtkActionClass-_gtk-reserved3 :: <anonymous-4828>;
  slot GtkActionClass-_gtk-reserved4 :: <anonymous-4829>;
end;

define C-pointer-type <GtkActionClass> => <_GtkActionClass>;

define C-function gtk-action-get-type
  result res :: <GType>;
  c-name: "gtk_action_get_type";
end;

define C-function gtk-action-new
  input parameter arg1 :: <gchar*>;
  input parameter arg2 :: <gchar*>;
  input parameter arg3 :: <gchar*>;
  input parameter arg4 :: <gchar*>;
  result res :: <GtkAction>;
  c-name: "gtk_action_new";
end;

define C-function gtk-action-get-name
  input parameter arg1 :: <GtkAction>;
  result res :: <gchar*>;
  c-name: "gtk_action_get_name";
end;

define C-function gtk-action-is-sensitive
  input parameter arg1 :: <GtkAction>;
  result res :: <gboolean>;
  c-name: "gtk_action_is_sensitive";
end;

define C-function gtk-action-get-sensitive
  input parameter arg1 :: <GtkAction>;
  result res :: <gboolean>;
  c-name: "gtk_action_get_sensitive";
end;

define C-function gtk-action-set-sensitive
  input parameter arg1 :: <GtkAction>;
  input parameter arg2 :: <gboolean>;
  c-name: "gtk_action_set_sensitive";
end;

define C-function gtk-action-is-visible
  input parameter arg1 :: <GtkAction>;
  result res :: <gboolean>;
  c-name: "gtk_action_is_visible";
end;

define C-function gtk-action-get-visible
  input parameter arg1 :: <GtkAction>;
  result res :: <gboolean>;
  c-name: "gtk_action_get_visible";
end;

define C-function gtk-action-set-visible
  input parameter arg1 :: <GtkAction>;
  input parameter arg2 :: <gboolean>;
  c-name: "gtk_action_set_visible";
end;

define C-function gtk-action-activate
  input parameter arg1 :: <GtkAction>;
  c-name: "gtk_action_activate";
end;

define C-function gtk-action-create-icon
  input parameter arg1 :: <GtkAction>;
  input parameter arg2 :: <GtkIconSize>;
  result res :: <GtkWidget>;
  c-name: "gtk_action_create_icon";
end;

define C-function gtk-action-create-menu-item
  input parameter arg1 :: <GtkAction>;
  result res :: <GtkWidget>;
  c-name: "gtk_action_create_menu_item";
end;

define C-function gtk-action-create-tool-item
  input parameter arg1 :: <GtkAction>;
  result res :: <GtkWidget>;
  c-name: "gtk_action_create_tool_item";
end;

define C-function gtk-action-create-menu
  input parameter arg1 :: <GtkAction>;
  result res :: <GtkWidget>;
  c-name: "gtk_action_create_menu";
end;

define C-function gtk-action-connect-proxy
  input parameter arg1 :: <GtkAction>;
  input parameter arg2 :: <GtkWidget>;
  c-name: "gtk_action_connect_proxy";
end;

define C-function gtk-action-disconnect-proxy
  input parameter arg1 :: <GtkAction>;
  input parameter arg2 :: <GtkWidget>;
  c-name: "gtk_action_disconnect_proxy";
end;

define C-function gtk-action-get-proxies
  input parameter arg1 :: <GtkAction>;
  result res :: <GSList>;
  c-name: "gtk_action_get_proxies";
end;

define C-function gtk-widget-get-action
  input parameter arg1 :: <GtkWidget>;
  result res :: <GtkAction>;
  c-name: "gtk_widget_get_action";
end;

define C-function gtk-action-connect-accelerator
  input parameter arg1 :: <GtkAction>;
  c-name: "gtk_action_connect_accelerator";
end;

define C-function gtk-action-disconnect-accelerator
  input parameter arg1 :: <GtkAction>;
  c-name: "gtk_action_disconnect_accelerator";
end;

define C-function gtk-action-get-accel-path
  input parameter arg1 :: <GtkAction>;
  result res :: <gchar*>;
  c-name: "gtk_action_get_accel_path";
end;

define C-function gtk-action-get-accel-closure
  input parameter arg1 :: <GtkAction>;
  result res :: <GClosure>;
  c-name: "gtk_action_get_accel_closure";
end;

define C-function gtk-action-block-activate-from
  input parameter arg1 :: <GtkAction>;
  input parameter arg2 :: <GtkWidget>;
  c-name: "gtk_action_block_activate_from";
end;

define C-function gtk-action-unblock-activate-from
  input parameter arg1 :: <GtkAction>;
  input parameter arg2 :: <GtkWidget>;
  c-name: "gtk_action_unblock_activate_from";
end;

define C-function gtk-action-set-accel-path
  input parameter arg1 :: <GtkAction>;
  input parameter arg2 :: <gchar*>;
  c-name: "gtk_action_set_accel_path";
end;

define C-function gtk-action-set-accel-group
  input parameter arg1 :: <GtkAction>;
  input parameter arg2 :: <GtkAccelGroup>;
  c-name: "gtk_action_set_accel_group";
end;

define C-function _gtk-action-sync-sensitive
  input parameter arg1 :: <GtkAction>;
  c-name: "_gtk_action_sync_sensitive";
end;

define C-function _gtk-action-sync-visible
  input parameter arg1 :: <GtkAction>;
  c-name: "_gtk_action_sync_visible";
end;

define C-function _gtk-action-sync-menu-visible
  input parameter arg1 :: <GtkAction>;
  input parameter arg2 :: <GtkWidget>;
  input parameter arg3 :: <gboolean>;
  c-name: "_gtk_action_sync_menu_visible";
end;

define constant <GtkTreeViewColumnSizing> = <C-int>;
define constant $GTK-TREE-VIEW-COLUMN-GROW-ONLY = 0;
define constant $GTK-TREE-VIEW-COLUMN-AUTOSIZE = 1;
define constant $GTK-TREE-VIEW-COLUMN-FIXED = 2;

define C-subtype <_GtkCellEditable> (<C-void*>) end;
define constant <GtkCellEditable> = <_GtkCellEditable>;

define C-subtype <_GtkTreeViewColumn> (<_GtkObject>, <_GtkCellLayout>) end;
define constant <GtkTreeViewColumn> = <_GtkTreeViewColumn>;

define constant <anonymous-5361> = <C-function-pointer>;
define constant <anonymous-5362> = <C-function-pointer>;
define constant <anonymous-5363> = <C-function-pointer>;
define constant <anonymous-5364> = <C-function-pointer>;
define constant <anonymous-5365> = <C-function-pointer>;
define C-struct <_GtkTreeViewColumnClass>
  slot GtkTreeViewColumnClass-parent-class :: <_GtkObjectClass>;
  slot GtkTreeViewColumnClass-clicked :: <anonymous-5361>;
  slot GtkTreeViewColumnClass-_gtk-reserved1 :: <anonymous-5362>;
  slot GtkTreeViewColumnClass-_gtk-reserved2 :: <anonymous-5363>;
  slot GtkTreeViewColumnClass-_gtk-reserved3 :: <anonymous-5364>;
  slot GtkTreeViewColumnClass-_gtk-reserved4 :: <anonymous-5365>;
end;

define C-pointer-type <GtkTreeViewColumnClass> => <_GtkTreeViewColumnClass>;

define C-subtype <_GtkCellRenderer> (<_GtkObject>) end;
define constant <GtkCellRenderer> = <_GtkCellRenderer>;

define C-subtype <_GtkTreeModel> (<C-void*>) end;
define constant <GtkTreeModel> = <_GtkTreeModel>;

define C-struct <_GtkTreeIter>
  slot GtkTreeIter-stamp :: <C-signed-int>;
  slot GtkTreeIter-user-data :: <C-void*>;
  slot GtkTreeIter-user-data2 :: <C-void*>;
  slot GtkTreeIter-user-data3 :: <C-void*>;
end;

define C-pointer-type <GtkTreeIter> => <_GtkTreeIter>;

define constant <anonymous-5351> = <C-function-pointer>;
define constant <GtkTreeCellDataFunc> = <anonymous-5351>;

define C-function gtk-tree-view-column-get-type
  result res :: <GType>;
  c-name: "gtk_tree_view_column_get_type";
end;

define C-function gtk-tree-view-column-new
  result res :: <GtkTreeViewColumn>;
  c-name: "gtk_tree_view_column_new";
end;

define C-function gtk-tree-view-column-new-with-attributes
  input parameter arg1 :: <gchar*>;
  input parameter arg2 :: <GtkCellRenderer>;
  result res :: <GtkTreeViewColumn>;
  c-name: "gtk_tree_view_column_new_with_attributes";
end;

define C-function gtk-tree-view-column-pack-start
  input parameter arg1 :: <GtkTreeViewColumn>;
  input parameter arg2 :: <GtkCellRenderer>;
  input parameter arg3 :: <gboolean>;
  c-name: "gtk_tree_view_column_pack_start";
end;

define C-function gtk-tree-view-column-pack-end
  input parameter arg1 :: <GtkTreeViewColumn>;
  input parameter arg2 :: <GtkCellRenderer>;
  input parameter arg3 :: <gboolean>;
  c-name: "gtk_tree_view_column_pack_end";
end;

define C-function gtk-tree-view-column-clear
  input parameter arg1 :: <GtkTreeViewColumn>;
  c-name: "gtk_tree_view_column_clear";
end;

define C-function gtk-tree-view-column-get-cell-renderers
  input parameter arg1 :: <GtkTreeViewColumn>;
  result res :: <GList>;
  c-name: "gtk_tree_view_column_get_cell_renderers";
end;

define C-function gtk-tree-view-column-add-attribute
  input parameter arg1 :: <GtkTreeViewColumn>;
  input parameter arg2 :: <GtkCellRenderer>;
  input parameter arg3 :: <gchar*>;
  input parameter arg4 :: <gint>;
  c-name: "gtk_tree_view_column_add_attribute";
end;

define C-function gtk-tree-view-column-set-attributes
  input parameter arg1 :: <GtkTreeViewColumn>;
  input parameter arg2 :: <GtkCellRenderer>;
  c-name: "gtk_tree_view_column_set_attributes";
end;

define C-function gtk-tree-view-column-set-cell-data-func
  input parameter arg1 :: <GtkTreeViewColumn>;
  input parameter arg2 :: <GtkCellRenderer>;
  input parameter arg3 :: <GtkTreeCellDataFunc>;
  input parameter arg4 :: <gpointer>;
  input parameter arg5 :: <GtkDestroyNotify>;
  c-name: "gtk_tree_view_column_set_cell_data_func";
end;

define C-function gtk-tree-view-column-clear-attributes
  input parameter arg1 :: <GtkTreeViewColumn>;
  input parameter arg2 :: <GtkCellRenderer>;
  c-name: "gtk_tree_view_column_clear_attributes";
end;

define C-function gtk-tree-view-column-set-spacing
  input parameter arg1 :: <GtkTreeViewColumn>;
  input parameter arg2 :: <gint>;
  c-name: "gtk_tree_view_column_set_spacing";
end;

define C-function gtk-tree-view-column-get-spacing
  input parameter arg1 :: <GtkTreeViewColumn>;
  result res :: <gint>;
  c-name: "gtk_tree_view_column_get_spacing";
end;

define C-function gtk-tree-view-column-set-visible
  input parameter arg1 :: <GtkTreeViewColumn>;
  input parameter arg2 :: <gboolean>;
  c-name: "gtk_tree_view_column_set_visible";
end;

define C-function gtk-tree-view-column-get-visible
  input parameter arg1 :: <GtkTreeViewColumn>;
  result res :: <gboolean>;
  c-name: "gtk_tree_view_column_get_visible";
end;

define C-function gtk-tree-view-column-set-resizable
  input parameter arg1 :: <GtkTreeViewColumn>;
  input parameter arg2 :: <gboolean>;
  c-name: "gtk_tree_view_column_set_resizable";
end;

define C-function gtk-tree-view-column-get-resizable
  input parameter arg1 :: <GtkTreeViewColumn>;
  result res :: <gboolean>;
  c-name: "gtk_tree_view_column_get_resizable";
end;

define C-function gtk-tree-view-column-set-sizing
  input parameter arg1 :: <GtkTreeViewColumn>;
  input parameter arg2 :: <GtkTreeViewColumnSizing>;
  c-name: "gtk_tree_view_column_set_sizing";
end;

define C-function gtk-tree-view-column-get-sizing
  input parameter arg1 :: <GtkTreeViewColumn>;
  result res :: <GtkTreeViewColumnSizing>;
  c-name: "gtk_tree_view_column_get_sizing";
end;

define C-function gtk-tree-view-column-get-width
  input parameter arg1 :: <GtkTreeViewColumn>;
  result res :: <gint>;
  c-name: "gtk_tree_view_column_get_width";
end;

define C-function gtk-tree-view-column-get-fixed-width
  input parameter arg1 :: <GtkTreeViewColumn>;
  result res :: <gint>;
  c-name: "gtk_tree_view_column_get_fixed_width";
end;

define C-function gtk-tree-view-column-set-fixed-width
  input parameter arg1 :: <GtkTreeViewColumn>;
  input parameter arg2 :: <gint>;
  c-name: "gtk_tree_view_column_set_fixed_width";
end;

define C-function gtk-tree-view-column-set-min-width
  input parameter arg1 :: <GtkTreeViewColumn>;
  input parameter arg2 :: <gint>;
  c-name: "gtk_tree_view_column_set_min_width";
end;

define C-function gtk-tree-view-column-get-min-width
  input parameter arg1 :: <GtkTreeViewColumn>;
  result res :: <gint>;
  c-name: "gtk_tree_view_column_get_min_width";
end;

define C-function gtk-tree-view-column-set-max-width
  input parameter arg1 :: <GtkTreeViewColumn>;
  input parameter arg2 :: <gint>;
  c-name: "gtk_tree_view_column_set_max_width";
end;

define C-function gtk-tree-view-column-get-max-width
  input parameter arg1 :: <GtkTreeViewColumn>;
  result res :: <gint>;
  c-name: "gtk_tree_view_column_get_max_width";
end;

define C-function gtk-tree-view-column-clicked
  input parameter arg1 :: <GtkTreeViewColumn>;
  c-name: "gtk_tree_view_column_clicked";
end;

define C-function gtk-tree-view-column-set-title
  input parameter arg1 :: <GtkTreeViewColumn>;
  input parameter arg2 :: <gchar*>;
  c-name: "gtk_tree_view_column_set_title";
end;

define C-function gtk-tree-view-column-get-title
  input parameter arg1 :: <GtkTreeViewColumn>;
  result res :: <gchar*>;
  c-name: "gtk_tree_view_column_get_title";
end;

define C-function gtk-tree-view-column-set-expand
  input parameter arg1 :: <GtkTreeViewColumn>;
  input parameter arg2 :: <gboolean>;
  c-name: "gtk_tree_view_column_set_expand";
end;

define C-function gtk-tree-view-column-get-expand
  input parameter arg1 :: <GtkTreeViewColumn>;
  result res :: <gboolean>;
  c-name: "gtk_tree_view_column_get_expand";
end;

define C-function gtk-tree-view-column-set-clickable
  input parameter arg1 :: <GtkTreeViewColumn>;
  input parameter arg2 :: <gboolean>;
  c-name: "gtk_tree_view_column_set_clickable";
end;

define C-function gtk-tree-view-column-get-clickable
  input parameter arg1 :: <GtkTreeViewColumn>;
  result res :: <gboolean>;
  c-name: "gtk_tree_view_column_get_clickable";
end;

define C-function gtk-tree-view-column-set-widget
  input parameter arg1 :: <GtkTreeViewColumn>;
  input parameter arg2 :: <GtkWidget>;
  c-name: "gtk_tree_view_column_set_widget";
end;

define C-function gtk-tree-view-column-get-widget
  input parameter arg1 :: <GtkTreeViewColumn>;
  result res :: <GtkWidget>;
  c-name: "gtk_tree_view_column_get_widget";
end;

define C-function gtk-tree-view-column-set-alignment
  input parameter arg1 :: <GtkTreeViewColumn>;
  input parameter arg2 :: <gfloat>;
  c-name: "gtk_tree_view_column_set_alignment";
end;

define C-function gtk-tree-view-column-get-alignment
  input parameter arg1 :: <GtkTreeViewColumn>;
  result res :: <gfloat>;
  c-name: "gtk_tree_view_column_get_alignment";
end;

define C-function gtk-tree-view-column-set-reorderable
  input parameter arg1 :: <GtkTreeViewColumn>;
  input parameter arg2 :: <gboolean>;
  c-name: "gtk_tree_view_column_set_reorderable";
end;

define C-function gtk-tree-view-column-get-reorderable
  input parameter arg1 :: <GtkTreeViewColumn>;
  result res :: <gboolean>;
  c-name: "gtk_tree_view_column_get_reorderable";
end;

define C-function gtk-tree-view-column-set-sort-column-id
  input parameter arg1 :: <GtkTreeViewColumn>;
  input parameter arg2 :: <gint>;
  c-name: "gtk_tree_view_column_set_sort_column_id";
end;

define C-function gtk-tree-view-column-get-sort-column-id
  input parameter arg1 :: <GtkTreeViewColumn>;
  result res :: <gint>;
  c-name: "gtk_tree_view_column_get_sort_column_id";
end;

define C-function gtk-tree-view-column-set-sort-indicator
  input parameter arg1 :: <GtkTreeViewColumn>;
  input parameter arg2 :: <gboolean>;
  c-name: "gtk_tree_view_column_set_sort_indicator";
end;

define C-function gtk-tree-view-column-get-sort-indicator
  input parameter arg1 :: <GtkTreeViewColumn>;
  result res :: <gboolean>;
  c-name: "gtk_tree_view_column_get_sort_indicator";
end;

define C-function gtk-tree-view-column-set-sort-order
  input parameter arg1 :: <GtkTreeViewColumn>;
  input parameter arg2 :: <GtkSortType>;
  c-name: "gtk_tree_view_column_set_sort_order";
end;

define C-function gtk-tree-view-column-get-sort-order
  input parameter arg1 :: <GtkTreeViewColumn>;
  result res :: <GtkSortType>;
  c-name: "gtk_tree_view_column_get_sort_order";
end;

define C-function gtk-tree-view-column-cell-set-cell-data
  input parameter arg1 :: <GtkTreeViewColumn>;
  input parameter arg2 :: <GtkTreeModel>;
  input parameter arg3 :: <GtkTreeIter>;
  input parameter arg4 :: <gboolean>;
  input parameter arg5 :: <gboolean>;
  c-name: "gtk_tree_view_column_cell_set_cell_data";
end;

define C-function gtk-tree-view-column-cell-get-size
  input parameter arg1 :: <GtkTreeViewColumn>;
  input parameter arg2 :: <GdkRectangle>;
  input parameter arg3 :: <gint*>;
  input parameter arg4 :: <gint*>;
  input parameter arg5 :: <gint*>;
  input parameter arg6 :: <gint*>;
  c-name: "gtk_tree_view_column_cell_get_size";
end;

define C-function gtk-tree-view-column-cell-is-visible
  input parameter arg1 :: <GtkTreeViewColumn>;
  result res :: <gboolean>;
  c-name: "gtk_tree_view_column_cell_is_visible";
end;

define C-function gtk-tree-view-column-focus-cell
  input parameter arg1 :: <GtkTreeViewColumn>;
  input parameter arg2 :: <GtkCellRenderer>;
  c-name: "gtk_tree_view_column_focus_cell";
end;

define C-function gtk-tree-view-column-cell-get-position
  input parameter arg1 :: <GtkTreeViewColumn>;
  input parameter arg2 :: <GtkCellRenderer>;
  input parameter arg3 :: <gint*>;
  input parameter arg4 :: <gint*>;
  result res :: <gboolean>;
  c-name: "gtk_tree_view_column_cell_get_position";
end;

define C-function gtk-tree-view-column-queue-resize
  input parameter arg1 :: <GtkTreeViewColumn>;
  c-name: "gtk_tree_view_column_queue_resize";
end;

define C-function gtk-tree-view-column-get-tree-view
  input parameter arg1 :: <GtkTreeViewColumn>;
  result res :: <GtkWidget>;
  c-name: "gtk_tree_view_column_get_tree_view";
end;

define constant <anonymous-5335> = <C-int>;
define constant $GTK-TREE-SORTABLE-DEFAULT-SORT-COLUMN-ID = -1;
define constant $GTK-TREE-SORTABLE-UNSORTED-SORT-COLUMN-ID = -2;

define C-subtype <_GtkTreeSortable> (<C-void*>) end;
define constant <GtkTreeSortable> = <_GtkTreeSortable>;

define constant <anonymous-5337> = <C-function-pointer>;
define C-pointer-type <GtkSortType*> => <GtkSortType>;
define constant <anonymous-5338> = <C-function-pointer>;
define constant <anonymous-5339> = <C-function-pointer>;
define constant <anonymous-5336> = <C-function-pointer>;
define constant <GtkTreeIterCompareFunc> = <anonymous-5336>;

define constant <anonymous-5340> = <C-function-pointer>;
define constant <anonymous-5341> = <C-function-pointer>;
define constant <anonymous-5342> = <C-function-pointer>;
define C-struct <_GtkTreeSortableIface>
  slot GtkTreeSortableIface-g-iface :: <_GTypeInterface>;
  slot GtkTreeSortableIface-sort-column-changed :: <anonymous-5337>;
  slot GtkTreeSortableIface-get-sort-column-id :: <anonymous-5338>;
  slot GtkTreeSortableIface-set-sort-column-id :: <anonymous-5339>;
  slot GtkTreeSortableIface-set-sort-func :: <anonymous-5340>;
  slot GtkTreeSortableIface-set-default-sort-func :: <anonymous-5341>;
  slot GtkTreeSortableIface-has-default-sort-func :: <anonymous-5342>;
end;

define C-pointer-type <GtkTreeSortableIface> => <_GtkTreeSortableIface>;

define C-function gtk-tree-sortable-get-type
  result res :: <GType>;
  c-name: "gtk_tree_sortable_get_type";
end;

define C-function gtk-tree-sortable-sort-column-changed
  input parameter arg1 :: <GtkTreeSortable>;
  c-name: "gtk_tree_sortable_sort_column_changed";
end;

define C-function gtk-tree-sortable-get-sort-column-id
  input parameter arg1 :: <GtkTreeSortable>;
  input parameter arg2 :: <gint*>;
  input parameter arg3 :: <GtkSortType*>;
  result res :: <gboolean>;
  c-name: "gtk_tree_sortable_get_sort_column_id";
end;

define C-function gtk-tree-sortable-set-sort-column-id
  input parameter arg1 :: <GtkTreeSortable>;
  input parameter arg2 :: <gint>;
  input parameter arg3 :: <GtkSortType>;
  c-name: "gtk_tree_sortable_set_sort_column_id";
end;

define C-function gtk-tree-sortable-set-sort-func
  input parameter arg1 :: <GtkTreeSortable>;
  input parameter arg2 :: <gint>;
  input parameter arg3 :: <GtkTreeIterCompareFunc>;
  input parameter arg4 :: <gpointer>;
  input parameter arg5 :: <GtkDestroyNotify>;
  c-name: "gtk_tree_sortable_set_sort_func";
end;

define C-function gtk-tree-sortable-set-default-sort-func
  input parameter arg1 :: <GtkTreeSortable>;
  input parameter arg2 :: <GtkTreeIterCompareFunc>;
  input parameter arg3 :: <gpointer>;
  input parameter arg4 :: <GtkDestroyNotify>;
  c-name: "gtk_tree_sortable_set_default_sort_func";
end;

define C-function gtk-tree-sortable-has-default-sort-func
  input parameter arg1 :: <GtkTreeSortable>;
  result res :: <gboolean>;
  c-name: "gtk_tree_sortable_has_default_sort_func";
end;

define C-struct <_GtkTreePath>
end;

define C-pointer-type <GtkTreePath> => <_GtkTreePath>;

define C-struct <_GtkTreeRowReference>
end;

define C-pointer-type <GtkTreeRowReference> => <_GtkTreeRowReference>;

define constant <anonymous-5257> = <C-function-pointer>;
define constant <anonymous-5258> = <C-function-pointer>;
define constant <anonymous-5259> = <C-function-pointer>;
define constant <anonymous-5260> = <C-function-pointer>;
define constant <anonymous-5261> = <C-function-pointer>;
define constant <GtkTreeModelFlags> = <C-int>;
define constant $GTK-TREE-MODEL-ITERS-PERSIST = 1;
define constant $GTK-TREE-MODEL-LIST-ONLY = 2;

define constant <anonymous-5262> = <C-function-pointer>;
define constant <anonymous-5263> = <C-function-pointer>;
define constant <anonymous-5264> = <C-function-pointer>;
define constant <anonymous-5265> = <C-function-pointer>;
define constant <anonymous-5266> = <C-function-pointer>;
define constant <anonymous-5267> = <C-function-pointer>;
define constant <anonymous-5268> = <C-function-pointer>;
define constant <anonymous-5269> = <C-function-pointer>;
define constant <anonymous-5270> = <C-function-pointer>;
define constant <anonymous-5271> = <C-function-pointer>;
define constant <anonymous-5272> = <C-function-pointer>;
define constant <anonymous-5273> = <C-function-pointer>;
define constant <anonymous-5274> = <C-function-pointer>;
define constant <anonymous-5275> = <C-function-pointer>;
define C-struct <_GtkTreeModelIface>
  slot GtkTreeModelIface-g-iface :: <_GTypeInterface>;
  slot GtkTreeModelIface-row-changed :: <anonymous-5257>;
  slot GtkTreeModelIface-row-inserted :: <anonymous-5258>;
  slot GtkTreeModelIface-row-has-child-toggled :: <anonymous-5259>;
  slot GtkTreeModelIface-row-deleted :: <anonymous-5260>;
  slot GtkTreeModelIface-rows-reordered :: <anonymous-5261>;
  slot GtkTreeModelIface-get-flags :: <anonymous-5262>;
  slot GtkTreeModelIface-get-n-columns :: <anonymous-5263>;
  slot GtkTreeModelIface-get-column-type :: <anonymous-5264>;
  slot GtkTreeModelIface-get-iter :: <anonymous-5265>;
  slot GtkTreeModelIface-get-path :: <anonymous-5266>;
  slot GtkTreeModelIface-get-value :: <anonymous-5267>;
  slot GtkTreeModelIface-iter-next :: <anonymous-5268>;
  slot GtkTreeModelIface-iter-children :: <anonymous-5269>;
  slot GtkTreeModelIface-iter-has-child :: <anonymous-5270>;
  slot GtkTreeModelIface-iter-n-children :: <anonymous-5271>;
  slot GtkTreeModelIface-iter-nth-child :: <anonymous-5272>;
  slot GtkTreeModelIface-iter-parent :: <anonymous-5273>;
  slot GtkTreeModelIface-ref-node :: <anonymous-5274>;
  slot GtkTreeModelIface-unref-node :: <anonymous-5275>;
end;

define C-pointer-type <GtkTreeModelIface> => <_GtkTreeModelIface>;

define constant <anonymous-5255> = <C-function-pointer>;
define constant <GtkTreeModelForeachFunc> = <anonymous-5255>;

define C-function gtk-tree-path-new
  result res :: <GtkTreePath>;
  c-name: "gtk_tree_path_new";
end;

define C-function gtk-tree-path-new-from-string
  input parameter arg1 :: <gchar*>;
  result res :: <GtkTreePath>;
  c-name: "gtk_tree_path_new_from_string";
end;

define C-function gtk-tree-path-new-from-indices
  input parameter arg1 :: <gint>;
  result res :: <GtkTreePath>;
  c-name: "gtk_tree_path_new_from_indices";
end;

define C-function gtk-tree-path-to-string
  input parameter arg1 :: <GtkTreePath>;
  result res :: <gchar*>;
  c-name: "gtk_tree_path_to_string";
end;

define C-function gtk-tree-path-new-first
  result res :: <GtkTreePath>;
  c-name: "gtk_tree_path_new_first";
end;

define C-function gtk-tree-path-append-index
  input parameter arg1 :: <GtkTreePath>;
  input parameter arg2 :: <gint>;
  c-name: "gtk_tree_path_append_index";
end;

define C-function gtk-tree-path-prepend-index
  input parameter arg1 :: <GtkTreePath>;
  input parameter arg2 :: <gint>;
  c-name: "gtk_tree_path_prepend_index";
end;

define C-function gtk-tree-path-get-depth
  input parameter arg1 :: <GtkTreePath>;
  result res :: <gint>;
  c-name: "gtk_tree_path_get_depth";
end;

define C-function gtk-tree-path-get-indices
  input parameter arg1 :: <GtkTreePath>;
  result res :: <gint*>;
  c-name: "gtk_tree_path_get_indices";
end;

define C-function gtk-tree-path-free
  input parameter arg1 :: <GtkTreePath>;
  c-name: "gtk_tree_path_free";
end;

define C-function gtk-tree-path-copy
  input parameter arg1 :: <GtkTreePath>;
  result res :: <GtkTreePath>;
  c-name: "gtk_tree_path_copy";
end;

define C-function gtk-tree-path-get-type
  result res :: <GType>;
  c-name: "gtk_tree_path_get_type";
end;

define C-function gtk-tree-path-compare
  input parameter arg1 :: <GtkTreePath>;
  input parameter arg2 :: <GtkTreePath>;
  result res :: <gint>;
  c-name: "gtk_tree_path_compare";
end;

define C-function gtk-tree-path-next
  input parameter arg1 :: <GtkTreePath>;
  c-name: "gtk_tree_path_next";
end;

define C-function gtk-tree-path-prev
  input parameter arg1 :: <GtkTreePath>;
  result res :: <gboolean>;
  c-name: "gtk_tree_path_prev";
end;

define C-function gtk-tree-path-up
  input parameter arg1 :: <GtkTreePath>;
  result res :: <gboolean>;
  c-name: "gtk_tree_path_up";
end;

define C-function gtk-tree-path-down
  input parameter arg1 :: <GtkTreePath>;
  c-name: "gtk_tree_path_down";
end;

define C-function gtk-tree-path-is-ancestor
  input parameter arg1 :: <GtkTreePath>;
  input parameter arg2 :: <GtkTreePath>;
  result res :: <gboolean>;
  c-name: "gtk_tree_path_is_ancestor";
end;

define C-function gtk-tree-path-is-descendant
  input parameter arg1 :: <GtkTreePath>;
  input parameter arg2 :: <GtkTreePath>;
  result res :: <gboolean>;
  c-name: "gtk_tree_path_is_descendant";
end;

define C-function gtk-tree-row-reference-get-type
  result res :: <GType>;
  c-name: "gtk_tree_row_reference_get_type";
end;

define C-function gtk-tree-row-reference-new
  input parameter arg1 :: <GtkTreeModel>;
  input parameter arg2 :: <GtkTreePath>;
  result res :: <GtkTreeRowReference>;
  c-name: "gtk_tree_row_reference_new";
end;

define C-function gtk-tree-row-reference-new-proxy
  input parameter arg1 :: <GObject>;
  input parameter arg2 :: <GtkTreeModel>;
  input parameter arg3 :: <GtkTreePath>;
  result res :: <GtkTreeRowReference>;
  c-name: "gtk_tree_row_reference_new_proxy";
end;

define C-function gtk-tree-row-reference-get-path
  input parameter arg1 :: <GtkTreeRowReference>;
  result res :: <GtkTreePath>;
  c-name: "gtk_tree_row_reference_get_path";
end;

define C-function gtk-tree-row-reference-get-model
  input parameter arg1 :: <GtkTreeRowReference>;
  result res :: <GtkTreeModel>;
  c-name: "gtk_tree_row_reference_get_model";
end;

define C-function gtk-tree-row-reference-valid
  input parameter arg1 :: <GtkTreeRowReference>;
  result res :: <gboolean>;
  c-name: "gtk_tree_row_reference_valid";
end;

define C-function gtk-tree-row-reference-copy
  input parameter arg1 :: <GtkTreeRowReference>;
  result res :: <GtkTreeRowReference>;
  c-name: "gtk_tree_row_reference_copy";
end;

define C-function gtk-tree-row-reference-free
  input parameter arg1 :: <GtkTreeRowReference>;
  c-name: "gtk_tree_row_reference_free";
end;

define C-function gtk-tree-row-reference-inserted
  input parameter arg1 :: <GObject>;
  input parameter arg2 :: <GtkTreePath>;
  c-name: "gtk_tree_row_reference_inserted";
end;

define C-function gtk-tree-row-reference-deleted
  input parameter arg1 :: <GObject>;
  input parameter arg2 :: <GtkTreePath>;
  c-name: "gtk_tree_row_reference_deleted";
end;

define C-function gtk-tree-row-reference-reordered
  input parameter arg1 :: <GObject>;
  input parameter arg2 :: <GtkTreePath>;
  input parameter arg3 :: <GtkTreeIter>;
  input parameter arg4 :: <gint*>;
  c-name: "gtk_tree_row_reference_reordered";
end;

define C-function gtk-tree-iter-copy
  input parameter arg1 :: <GtkTreeIter>;
  result res :: <GtkTreeIter>;
  c-name: "gtk_tree_iter_copy";
end;

define C-function gtk-tree-iter-free
  input parameter arg1 :: <GtkTreeIter>;
  c-name: "gtk_tree_iter_free";
end;

define C-function gtk-tree-iter-get-type
  result res :: <GType>;
  c-name: "gtk_tree_iter_get_type";
end;

define C-function gtk-tree-model-get-type
  result res :: <GType>;
  c-name: "gtk_tree_model_get_type";
end;

define C-function gtk-tree-model-get-flags
  input parameter arg1 :: <GtkTreeModel>;
  result res :: <GtkTreeModelFlags>;
  c-name: "gtk_tree_model_get_flags";
end;

define C-function gtk-tree-model-get-n-columns
  input parameter arg1 :: <GtkTreeModel>;
  result res :: <gint>;
  c-name: "gtk_tree_model_get_n_columns";
end;

define C-function gtk-tree-model-get-column-type
  input parameter arg1 :: <GtkTreeModel>;
  input parameter arg2 :: <gint>;
  result res :: <GType>;
  c-name: "gtk_tree_model_get_column_type";
end;

define C-function gtk-tree-model-get-iter
  input parameter arg1 :: <GtkTreeModel>;
  input parameter arg2 :: <GtkTreeIter>;
  input parameter arg3 :: <GtkTreePath>;
  result res :: <gboolean>;
  c-name: "gtk_tree_model_get_iter";
end;

define C-function gtk-tree-model-get-iter-from-string
  input parameter arg1 :: <GtkTreeModel>;
  input parameter arg2 :: <GtkTreeIter>;
  input parameter arg3 :: <gchar*>;
  result res :: <gboolean>;
  c-name: "gtk_tree_model_get_iter_from_string";
end;

define C-function gtk-tree-model-get-string-from-iter
  input parameter arg1 :: <GtkTreeModel>;
  input parameter arg2 :: <GtkTreeIter>;
  result res :: <gchar*>;
  c-name: "gtk_tree_model_get_string_from_iter";
end;

define C-function gtk-tree-model-get-iter-first
  input parameter arg1 :: <GtkTreeModel>;
  input parameter arg2 :: <GtkTreeIter>;
  result res :: <gboolean>;
  c-name: "gtk_tree_model_get_iter_first";
end;

define C-function gtk-tree-model-get-path
  input parameter arg1 :: <GtkTreeModel>;
  input parameter arg2 :: <GtkTreeIter>;
  result res :: <GtkTreePath>;
  c-name: "gtk_tree_model_get_path";
end;

define C-function gtk-tree-model-get-value
  input parameter arg1 :: <GtkTreeModel>;
  input parameter arg2 :: <GtkTreeIter>;
  input parameter arg3 :: <gint>;
  input parameter arg4 :: <GValue>;
  c-name: "gtk_tree_model_get_value";
end;

define C-function gtk-tree-model-iter-next
  input parameter arg1 :: <GtkTreeModel>;
  input parameter arg2 :: <GtkTreeIter>;
  result res :: <gboolean>;
  c-name: "gtk_tree_model_iter_next";
end;

define C-function gtk-tree-model-iter-children
  input parameter arg1 :: <GtkTreeModel>;
  input parameter arg2 :: <GtkTreeIter>;
  input parameter arg3 :: <GtkTreeIter>;
  result res :: <gboolean>;
  c-name: "gtk_tree_model_iter_children";
end;

define C-function gtk-tree-model-iter-has-child
  input parameter arg1 :: <GtkTreeModel>;
  input parameter arg2 :: <GtkTreeIter>;
  result res :: <gboolean>;
  c-name: "gtk_tree_model_iter_has_child";
end;

define C-function gtk-tree-model-iter-n-children
  input parameter arg1 :: <GtkTreeModel>;
  input parameter arg2 :: <GtkTreeIter>;
  result res :: <gint>;
  c-name: "gtk_tree_model_iter_n_children";
end;

define C-function gtk-tree-model-iter-nth-child
  input parameter arg1 :: <GtkTreeModel>;
  input parameter arg2 :: <GtkTreeIter>;
  input parameter arg3 :: <GtkTreeIter>;
  input parameter arg4 :: <gint>;
  result res :: <gboolean>;
  c-name: "gtk_tree_model_iter_nth_child";
end;

define C-function gtk-tree-model-iter-parent
  input parameter arg1 :: <GtkTreeModel>;
  input parameter arg2 :: <GtkTreeIter>;
  input parameter arg3 :: <GtkTreeIter>;
  result res :: <gboolean>;
  c-name: "gtk_tree_model_iter_parent";
end;

define C-function gtk-tree-model-ref-node
  input parameter arg1 :: <GtkTreeModel>;
  input parameter arg2 :: <GtkTreeIter>;
  c-name: "gtk_tree_model_ref_node";
end;

define C-function gtk-tree-model-unref-node
  input parameter arg1 :: <GtkTreeModel>;
  input parameter arg2 :: <GtkTreeIter>;
  c-name: "gtk_tree_model_unref_node";
end;

define C-function gtk-tree-model-get
  input parameter arg1 :: <GtkTreeModel>;
  input parameter arg2 :: <GtkTreeIter>;
  c-name: "gtk_tree_model_get";
end;

define C-function gtk-tree-model-get-valist
  input parameter arg1 :: <GtkTreeModel>;
  input parameter arg2 :: <GtkTreeIter>;
  input parameter arg3 :: <va-list>;
  c-name: "gtk_tree_model_get_valist";
end;

define C-function gtk-tree-model-foreach
  input parameter arg1 :: <GtkTreeModel>;
  input parameter arg2 :: <GtkTreeModelForeachFunc>;
  input parameter arg3 :: <gpointer>;
  c-name: "gtk_tree_model_foreach";
end;

define C-function gtk-tree-model-row-changed
  input parameter arg1 :: <GtkTreeModel>;
  input parameter arg2 :: <GtkTreePath>;
  input parameter arg3 :: <GtkTreeIter>;
  c-name: "gtk_tree_model_row_changed";
end;

define C-function gtk-tree-model-row-inserted
  input parameter arg1 :: <GtkTreeModel>;
  input parameter arg2 :: <GtkTreePath>;
  input parameter arg3 :: <GtkTreeIter>;
  c-name: "gtk_tree_model_row_inserted";
end;

define C-function gtk-tree-model-row-has-child-toggled
  input parameter arg1 :: <GtkTreeModel>;
  input parameter arg2 :: <GtkTreePath>;
  input parameter arg3 :: <GtkTreeIter>;
  c-name: "gtk_tree_model_row_has_child_toggled";
end;

define C-function gtk-tree-model-row-deleted
  input parameter arg1 :: <GtkTreeModel>;
  input parameter arg2 :: <GtkTreePath>;
  c-name: "gtk_tree_model_row_deleted";
end;

define C-function gtk-tree-model-rows-reordered
  input parameter arg1 :: <GtkTreeModel>;
  input parameter arg2 :: <GtkTreePath>;
  input parameter arg3 :: <GtkTreeIter>;
  input parameter arg4 :: <gint*>;
  c-name: "gtk_tree_model_rows_reordered";
end;

define constant <GtkCellRendererState> = <C-int>;
define constant $GTK-CELL-RENDERER-SELECTED = 1;
define constant $GTK-CELL-RENDERER-PRELIT = 2;
define constant $GTK-CELL-RENDERER-INSENSITIVE = 4;
define constant $GTK-CELL-RENDERER-SORTED = 8;
define constant $GTK-CELL-RENDERER-FOCUSED = 16;

define constant <GtkCellRendererMode> = <C-int>;
define constant $GTK-CELL-RENDERER-MODE-INERT = 0;
define constant $GTK-CELL-RENDERER-MODE-ACTIVATABLE = 1;
define constant $GTK-CELL-RENDERER-MODE-EDITABLE = 2;

define constant <anonymous-5238> = <C-function-pointer>;
define constant <anonymous-5239> = <C-function-pointer>;
define constant <anonymous-5240> = <C-function-pointer>;
define constant <anonymous-5241> = <C-function-pointer>;
define constant <anonymous-5242> = <C-function-pointer>;
define constant <anonymous-5243> = <C-function-pointer>;
define constant <anonymous-5244> = <C-function-pointer>;
define constant <anonymous-5245> = <C-function-pointer>;
define C-struct <_GtkCellRendererClass>
  slot GtkCellRendererClass-parent-class :: <_GtkObjectClass>;
  slot GtkCellRendererClass-get-size :: <anonymous-5238>;
  slot GtkCellRendererClass-render :: <anonymous-5239>;
  slot GtkCellRendererClass-activate :: <anonymous-5240>;
  slot GtkCellRendererClass-start-editing :: <anonymous-5241>;
  slot GtkCellRendererClass-editing-canceled :: <anonymous-5242>;
  slot GtkCellRendererClass-editing-started :: <anonymous-5243>;
  slot GtkCellRendererClass-_gtk-reserved1 :: <anonymous-5244>;
  slot GtkCellRendererClass-_gtk-reserved2 :: <anonymous-5245>;
end;

define C-pointer-type <GtkCellRendererClass> => <_GtkCellRendererClass>;

define C-function gtk-cell-renderer-get-type
  result res :: <GType>;
  c-name: "gtk_cell_renderer_get_type";
end;

define C-function gtk-cell-renderer-get-size
  input parameter arg1 :: <GtkCellRenderer>;
  input parameter arg2 :: <GtkWidget>;
  input parameter arg3 :: <GdkRectangle>;
  input parameter arg4 :: <gint*>;
  input parameter arg5 :: <gint*>;
  input parameter arg6 :: <gint*>;
  input parameter arg7 :: <gint*>;
  c-name: "gtk_cell_renderer_get_size";
end;

define C-function gtk-cell-renderer-render
  input parameter arg1 :: <GtkCellRenderer>;
  input parameter arg2 :: <GdkWindow>;
  input parameter arg3 :: <GtkWidget>;
  input parameter arg4 :: <GdkRectangle>;
  input parameter arg5 :: <GdkRectangle>;
  input parameter arg6 :: <GdkRectangle>;
  input parameter arg7 :: <GtkCellRendererState>;
  c-name: "gtk_cell_renderer_render";
end;

define C-function gtk-cell-renderer-activate
  input parameter arg1 :: <GtkCellRenderer>;
  input parameter arg2 :: <GdkEvent>;
  input parameter arg3 :: <GtkWidget>;
  input parameter arg4 :: <gchar*>;
  input parameter arg5 :: <GdkRectangle>;
  input parameter arg6 :: <GdkRectangle>;
  input parameter arg7 :: <GtkCellRendererState>;
  result res :: <gboolean>;
  c-name: "gtk_cell_renderer_activate";
end;

define C-function gtk-cell-renderer-start-editing
  input parameter arg1 :: <GtkCellRenderer>;
  input parameter arg2 :: <GdkEvent>;
  input parameter arg3 :: <GtkWidget>;
  input parameter arg4 :: <gchar*>;
  input parameter arg5 :: <GdkRectangle>;
  input parameter arg6 :: <GdkRectangle>;
  input parameter arg7 :: <GtkCellRendererState>;
  result res :: <GtkCellEditable>;
  c-name: "gtk_cell_renderer_start_editing";
end;

define C-function gtk-cell-renderer-set-fixed-size
  input parameter arg1 :: <GtkCellRenderer>;
  input parameter arg2 :: <gint>;
  input parameter arg3 :: <gint>;
  c-name: "gtk_cell_renderer_set_fixed_size";
end;

define C-function gtk-cell-renderer-get-fixed-size
  input parameter arg1 :: <GtkCellRenderer>;
  input parameter arg2 :: <gint*>;
  input parameter arg3 :: <gint*>;
  c-name: "gtk_cell_renderer_get_fixed_size";
end;

define C-function gtk-cell-renderer-editing-canceled
  input parameter arg1 :: <GtkCellRenderer>;
  c-name: "gtk_cell_renderer_editing_canceled";
end;

define C-function gtk-cell-renderer-stop-editing
  input parameter arg1 :: <GtkCellRenderer>;
  input parameter arg2 :: <gboolean>;
  c-name: "gtk_cell_renderer_stop_editing";
end;

define constant <anonymous-5222> = <C-function-pointer>;
define constant <anonymous-5223> = <C-function-pointer>;
define constant <anonymous-5224> = <C-function-pointer>;
define C-struct <_GtkCellEditableIface>
  slot GtkCellEditableIface-g-iface :: <_GTypeInterface>;
  slot GtkCellEditableIface-editing-done :: <anonymous-5222>;
  slot GtkCellEditableIface-remove-widget :: <anonymous-5223>;
  slot GtkCellEditableIface-start-editing :: <anonymous-5224>;
end;

define C-pointer-type <GtkCellEditableIface> => <_GtkCellEditableIface>;

define C-function gtk-cell-editable-get-type
  result res :: <GType>;
  c-name: "gtk_cell_editable_get_type";
end;

define C-function gtk-cell-editable-start-editing
  input parameter arg1 :: <GtkCellEditable>;
  input parameter arg2 :: <GdkEvent>;
  c-name: "gtk_cell_editable_start_editing";
end;

define C-function gtk-cell-editable-editing-done
  input parameter arg1 :: <GtkCellEditable>;
  c-name: "gtk_cell_editable_editing_done";
end;

define C-function gtk-cell-editable-remove-widget
  input parameter arg1 :: <GtkCellEditable>;
  c-name: "gtk_cell_editable_remove_widget";
end;

define constant <GtkTreeViewDropPosition> = <C-int>;
define constant $GTK-TREE-VIEW-DROP-BEFORE = 0;
define constant $GTK-TREE-VIEW-DROP-AFTER = 1;
define constant $GTK-TREE-VIEW-DROP-INTO-OR-BEFORE = 2;
define constant $GTK-TREE-VIEW-DROP-INTO-OR-AFTER = 3;

define C-struct <_GtkTreeViewPrivate>
end;

define C-pointer-type <GtkTreeViewPrivate> => <_GtkTreeViewPrivate>;

define C-subtype <_GtkTreeView> (<_GtkContainer>, <_AtkImplementorIface>) end;
define constant <GtkTreeView> = <_GtkTreeView>;

define constant <anonymous-6326> = <C-function-pointer>;
define constant <anonymous-6327> = <C-function-pointer>;
define constant <anonymous-6328> = <C-function-pointer>;
define constant <anonymous-6329> = <C-function-pointer>;
define constant <anonymous-6330> = <C-function-pointer>;
define constant <anonymous-6331> = <C-function-pointer>;
define constant <anonymous-6332> = <C-function-pointer>;
define constant <anonymous-6333> = <C-function-pointer>;
define constant <anonymous-6334> = <C-function-pointer>;
define constant <anonymous-6335> = <C-function-pointer>;
define constant <anonymous-6336> = <C-function-pointer>;
define constant <anonymous-6337> = <C-function-pointer>;
define constant <anonymous-6338> = <C-function-pointer>;
define constant <anonymous-6339> = <C-function-pointer>;
define constant <anonymous-6340> = <C-function-pointer>;
define constant <anonymous-6341> = <C-function-pointer>;
define constant <anonymous-6342> = <C-function-pointer>;
define constant <anonymous-6343> = <C-function-pointer>;
define constant <anonymous-6344> = <C-function-pointer>;
define constant <anonymous-6345> = <C-function-pointer>;
define constant <anonymous-6346> = <C-function-pointer>;
define C-struct <_GtkTreeViewClass>
  slot GtkTreeViewClass-parent-class :: <_GtkContainerClass>;
  slot GtkTreeViewClass-set-scroll-adjustments :: <anonymous-6326>;
  slot GtkTreeViewClass-row-activated :: <anonymous-6327>;
  slot GtkTreeViewClass-test-expand-row :: <anonymous-6328>;
  slot GtkTreeViewClass-test-collapse-row :: <anonymous-6329>;
  slot GtkTreeViewClass-row-expanded :: <anonymous-6330>;
  slot GtkTreeViewClass-row-collapsed :: <anonymous-6331>;
  slot GtkTreeViewClass-columns-changed :: <anonymous-6332>;
  slot GtkTreeViewClass-cursor-changed :: <anonymous-6333>;
  slot GtkTreeViewClass-move-cursor :: <anonymous-6334>;
  slot GtkTreeViewClass-select-all :: <anonymous-6335>;
  slot GtkTreeViewClass-unselect-all :: <anonymous-6336>;
  slot GtkTreeViewClass-select-cursor-row :: <anonymous-6337>;
  slot GtkTreeViewClass-toggle-cursor-row :: <anonymous-6338>;
  slot GtkTreeViewClass-expand-collapse-cursor-row :: <anonymous-6339>;
  slot GtkTreeViewClass-select-cursor-parent :: <anonymous-6340>;
  slot GtkTreeViewClass-start-interactive-search :: <anonymous-6341>;
  slot GtkTreeViewClass-_gtk-reserved0 :: <anonymous-6342>;
  slot GtkTreeViewClass-_gtk-reserved1 :: <anonymous-6343>;
  slot GtkTreeViewClass-_gtk-reserved2 :: <anonymous-6344>;
  slot GtkTreeViewClass-_gtk-reserved3 :: <anonymous-6345>;
  slot GtkTreeViewClass-_gtk-reserved4 :: <anonymous-6346>;
end;

define C-pointer-type <GtkTreeViewClass> => <_GtkTreeViewClass>;

define constant <GtkTreeSelection> = <_GtkTreeSelection>;

define constant <anonymous-8450> = <C-function-pointer>;
define constant <GtkTreeSelectionFunc> = <anonymous-8450>;

define C-subtype <_GtkTreeSelection> (<_GObject>) end;
define constant <anonymous-8452> = <C-function-pointer>;
define constant <anonymous-8453> = <C-function-pointer>;
define constant <anonymous-8454> = <C-function-pointer>;
define constant <anonymous-8455> = <C-function-pointer>;
define constant <anonymous-8456> = <C-function-pointer>;
define C-struct <_GtkTreeSelectionClass>
  slot GtkTreeSelectionClass-parent-class :: <_GObjectClass>;
  slot GtkTreeSelectionClass-changed :: <anonymous-8452>;
  slot GtkTreeSelectionClass-_gtk-reserved1 :: <anonymous-8453>;
  slot GtkTreeSelectionClass-_gtk-reserved2 :: <anonymous-8454>;
  slot GtkTreeSelectionClass-_gtk-reserved3 :: <anonymous-8455>;
  slot GtkTreeSelectionClass-_gtk-reserved4 :: <anonymous-8456>;
end;

define C-pointer-type <GtkTreeSelectionClass> => <_GtkTreeSelectionClass>;

define constant <anonymous-6347> = <C-function-pointer>;
define constant <GtkTreeViewColumnDropFunc> = <anonymous-6347>;

define constant <anonymous-6348> = <C-function-pointer>;
define constant <GtkTreeViewMappingFunc> = <anonymous-6348>;

define constant <anonymous-6349> = <C-function-pointer>;
define constant <GtkTreeViewSearchEqualFunc> = <anonymous-6349>;

define constant <anonymous-6350> = <C-function-pointer>;
define constant <GtkTreeViewRowSeparatorFunc> = <anonymous-6350>;

define constant <anonymous-6351> = <C-function-pointer>;
define constant <GtkTreeViewSearchPositionFunc> = <anonymous-6351>;

define C-function gtk-tree-view-get-type
  result res :: <GType>;
  c-name: "gtk_tree_view_get_type";
end;

define C-function gtk-tree-view-new
  result res :: <GtkWidget>;
  c-name: "gtk_tree_view_new";
end;

define C-function gtk-tree-view-new-with-model
  input parameter arg1 :: <GtkTreeModel>;
  result res :: <GtkWidget>;
  c-name: "gtk_tree_view_new_with_model";
end;

define C-function gtk-tree-view-get-model
  input parameter arg1 :: <GtkTreeView>;
  result res :: <GtkTreeModel>;
  c-name: "gtk_tree_view_get_model";
end;

define C-function gtk-tree-view-set-model
  input parameter arg1 :: <GtkTreeView>;
  input parameter arg2 :: <GtkTreeModel>;
  c-name: "gtk_tree_view_set_model";
end;

define C-function gtk-tree-view-get-selection
  input parameter arg1 :: <GtkTreeView>;
  result res :: <GtkTreeSelection>;
  c-name: "gtk_tree_view_get_selection";
end;

define C-function gtk-tree-view-get-hadjustment
  input parameter arg1 :: <GtkTreeView>;
  result res :: <GtkAdjustment>;
  c-name: "gtk_tree_view_get_hadjustment";
end;

define C-function gtk-tree-view-set-hadjustment
  input parameter arg1 :: <GtkTreeView>;
  input parameter arg2 :: <GtkAdjustment>;
  c-name: "gtk_tree_view_set_hadjustment";
end;

define C-function gtk-tree-view-get-vadjustment
  input parameter arg1 :: <GtkTreeView>;
  result res :: <GtkAdjustment>;
  c-name: "gtk_tree_view_get_vadjustment";
end;

define C-function gtk-tree-view-set-vadjustment
  input parameter arg1 :: <GtkTreeView>;
  input parameter arg2 :: <GtkAdjustment>;
  c-name: "gtk_tree_view_set_vadjustment";
end;

define C-function gtk-tree-view-get-headers-visible
  input parameter arg1 :: <GtkTreeView>;
  result res :: <gboolean>;
  c-name: "gtk_tree_view_get_headers_visible";
end;

define C-function gtk-tree-view-set-headers-visible
  input parameter arg1 :: <GtkTreeView>;
  input parameter arg2 :: <gboolean>;
  c-name: "gtk_tree_view_set_headers_visible";
end;

define C-function gtk-tree-view-columns-autosize
  input parameter arg1 :: <GtkTreeView>;
  c-name: "gtk_tree_view_columns_autosize";
end;

define C-function gtk-tree-view-get-headers-clickable
  input parameter arg1 :: <GtkTreeView>;
  result res :: <gboolean>;
  c-name: "gtk_tree_view_get_headers_clickable";
end;

define C-function gtk-tree-view-set-headers-clickable
  input parameter arg1 :: <GtkTreeView>;
  input parameter arg2 :: <gboolean>;
  c-name: "gtk_tree_view_set_headers_clickable";
end;

define C-function gtk-tree-view-set-rules-hint
  input parameter arg1 :: <GtkTreeView>;
  input parameter arg2 :: <gboolean>;
  c-name: "gtk_tree_view_set_rules_hint";
end;

define C-function gtk-tree-view-get-rules-hint
  input parameter arg1 :: <GtkTreeView>;
  result res :: <gboolean>;
  c-name: "gtk_tree_view_get_rules_hint";
end;

define C-function gtk-tree-view-append-column
  input parameter arg1 :: <GtkTreeView>;
  input parameter arg2 :: <GtkTreeViewColumn>;
  result res :: <gint>;
  c-name: "gtk_tree_view_append_column";
end;

define C-function gtk-tree-view-remove-column
  input parameter arg1 :: <GtkTreeView>;
  input parameter arg2 :: <GtkTreeViewColumn>;
  result res :: <gint>;
  c-name: "gtk_tree_view_remove_column";
end;

define C-function gtk-tree-view-insert-column
  input parameter arg1 :: <GtkTreeView>;
  input parameter arg2 :: <GtkTreeViewColumn>;
  input parameter arg3 :: <gint>;
  result res :: <gint>;
  c-name: "gtk_tree_view_insert_column";
end;

define C-function gtk-tree-view-insert-column-with-attributes
  input parameter arg1 :: <GtkTreeView>;
  input parameter arg2 :: <gint>;
  input parameter arg3 :: <gchar*>;
  input parameter arg4 :: <GtkCellRenderer>;
  result res :: <gint>;
  c-name: "gtk_tree_view_insert_column_with_attributes";
end;

define C-function gtk-tree-view-insert-column-with-data-func
  input parameter arg1 :: <GtkTreeView>;
  input parameter arg2 :: <gint>;
  input parameter arg3 :: <gchar*>;
  input parameter arg4 :: <GtkCellRenderer>;
  input parameter arg5 :: <GtkTreeCellDataFunc>;
  input parameter arg6 :: <gpointer>;
  input parameter arg7 :: <GDestroyNotify>;
  result res :: <gint>;
  c-name: "gtk_tree_view_insert_column_with_data_func";
end;

define C-function gtk-tree-view-get-column
  input parameter arg1 :: <GtkTreeView>;
  input parameter arg2 :: <gint>;
  result res :: <GtkTreeViewColumn>;
  c-name: "gtk_tree_view_get_column";
end;

define C-function gtk-tree-view-get-columns
  input parameter arg1 :: <GtkTreeView>;
  result res :: <GList>;
  c-name: "gtk_tree_view_get_columns";
end;

define C-function gtk-tree-view-move-column-after
  input parameter arg1 :: <GtkTreeView>;
  input parameter arg2 :: <GtkTreeViewColumn>;
  input parameter arg3 :: <GtkTreeViewColumn>;
  c-name: "gtk_tree_view_move_column_after";
end;

define C-function gtk-tree-view-set-expander-column
  input parameter arg1 :: <GtkTreeView>;
  input parameter arg2 :: <GtkTreeViewColumn>;
  c-name: "gtk_tree_view_set_expander_column";
end;

define C-function gtk-tree-view-get-expander-column
  input parameter arg1 :: <GtkTreeView>;
  result res :: <GtkTreeViewColumn>;
  c-name: "gtk_tree_view_get_expander_column";
end;

define C-function gtk-tree-view-set-column-drag-function
  input parameter arg1 :: <GtkTreeView>;
  input parameter arg2 :: <GtkTreeViewColumnDropFunc>;
  input parameter arg3 :: <gpointer>;
  input parameter arg4 :: <GtkDestroyNotify>;
  c-name: "gtk_tree_view_set_column_drag_function";
end;

define C-function gtk-tree-view-scroll-to-point
  input parameter arg1 :: <GtkTreeView>;
  input parameter arg2 :: <gint>;
  input parameter arg3 :: <gint>;
  c-name: "gtk_tree_view_scroll_to_point";
end;

define C-function gtk-tree-view-scroll-to-cell
  input parameter arg1 :: <GtkTreeView>;
  input parameter arg2 :: <GtkTreePath>;
  input parameter arg3 :: <GtkTreeViewColumn>;
  input parameter arg4 :: <gboolean>;
  input parameter arg5 :: <gfloat>;
  input parameter arg6 :: <gfloat>;
  c-name: "gtk_tree_view_scroll_to_cell";
end;

define C-function gtk-tree-view-row-activated
  input parameter arg1 :: <GtkTreeView>;
  input parameter arg2 :: <GtkTreePath>;
  input parameter arg3 :: <GtkTreeViewColumn>;
  c-name: "gtk_tree_view_row_activated";
end;

define C-function gtk-tree-view-expand-all
  input parameter arg1 :: <GtkTreeView>;
  c-name: "gtk_tree_view_expand_all";
end;

define C-function gtk-tree-view-collapse-all
  input parameter arg1 :: <GtkTreeView>;
  c-name: "gtk_tree_view_collapse_all";
end;

define C-function gtk-tree-view-expand-to-path
  input parameter arg1 :: <GtkTreeView>;
  input parameter arg2 :: <GtkTreePath>;
  c-name: "gtk_tree_view_expand_to_path";
end;

define C-function gtk-tree-view-expand-row
  input parameter arg1 :: <GtkTreeView>;
  input parameter arg2 :: <GtkTreePath>;
  input parameter arg3 :: <gboolean>;
  result res :: <gboolean>;
  c-name: "gtk_tree_view_expand_row";
end;

define C-function gtk-tree-view-collapse-row
  input parameter arg1 :: <GtkTreeView>;
  input parameter arg2 :: <GtkTreePath>;
  result res :: <gboolean>;
  c-name: "gtk_tree_view_collapse_row";
end;

define C-function gtk-tree-view-map-expanded-rows
  input parameter arg1 :: <GtkTreeView>;
  input parameter arg2 :: <GtkTreeViewMappingFunc>;
  input parameter arg3 :: <gpointer>;
  c-name: "gtk_tree_view_map_expanded_rows";
end;

define C-function gtk-tree-view-row-expanded
  input parameter arg1 :: <GtkTreeView>;
  input parameter arg2 :: <GtkTreePath>;
  result res :: <gboolean>;
  c-name: "gtk_tree_view_row_expanded";
end;

define C-function gtk-tree-view-set-reorderable
  input parameter arg1 :: <GtkTreeView>;
  input parameter arg2 :: <gboolean>;
  c-name: "gtk_tree_view_set_reorderable";
end;

define C-function gtk-tree-view-get-reorderable
  input parameter arg1 :: <GtkTreeView>;
  result res :: <gboolean>;
  c-name: "gtk_tree_view_get_reorderable";
end;

define C-function gtk-tree-view-set-cursor
  input parameter arg1 :: <GtkTreeView>;
  input parameter arg2 :: <GtkTreePath>;
  input parameter arg3 :: <GtkTreeViewColumn>;
  input parameter arg4 :: <gboolean>;
  c-name: "gtk_tree_view_set_cursor";
end;

define C-function gtk-tree-view-set-cursor-on-cell
  input parameter arg1 :: <GtkTreeView>;
  input parameter arg2 :: <GtkTreePath>;
  input parameter arg3 :: <GtkTreeViewColumn>;
  input parameter arg4 :: <GtkCellRenderer>;
  input parameter arg5 :: <gboolean>;
  c-name: "gtk_tree_view_set_cursor_on_cell";
end;

define C-pointer-type <GtkTreePath*> => <GtkTreePath>;
define C-pointer-type <GtkTreeViewColumn*> => <GtkTreeViewColumn>;
define C-function gtk-tree-view-get-cursor
  input parameter arg1 :: <GtkTreeView>;
  input parameter arg2 :: <GtkTreePath*>;
  input parameter arg3 :: <GtkTreeViewColumn*>;
  c-name: "gtk_tree_view_get_cursor";
end;

define C-function gtk-tree-view-get-bin-window
  input parameter arg1 :: <GtkTreeView>;
  result res :: <GdkWindow>;
  c-name: "gtk_tree_view_get_bin_window";
end;

define C-function gtk-tree-view-get-path-at-pos
  input parameter arg1 :: <GtkTreeView>;
  input parameter arg2 :: <gint>;
  input parameter arg3 :: <gint>;
  input parameter arg4 :: <GtkTreePath*>;
  input parameter arg5 :: <GtkTreeViewColumn*>;
  input parameter arg6 :: <gint*>;
  input parameter arg7 :: <gint*>;
  result res :: <gboolean>;
  c-name: "gtk_tree_view_get_path_at_pos";
end;

define C-function gtk-tree-view-get-cell-area
  input parameter arg1 :: <GtkTreeView>;
  input parameter arg2 :: <GtkTreePath>;
  input parameter arg3 :: <GtkTreeViewColumn>;
  input parameter arg4 :: <GdkRectangle>;
  c-name: "gtk_tree_view_get_cell_area";
end;

define C-function gtk-tree-view-get-background-area
  input parameter arg1 :: <GtkTreeView>;
  input parameter arg2 :: <GtkTreePath>;
  input parameter arg3 :: <GtkTreeViewColumn>;
  input parameter arg4 :: <GdkRectangle>;
  c-name: "gtk_tree_view_get_background_area";
end;

define C-function gtk-tree-view-get-visible-rect
  input parameter arg1 :: <GtkTreeView>;
  input parameter arg2 :: <GdkRectangle>;
  c-name: "gtk_tree_view_get_visible_rect";
end;

define C-function gtk-tree-view-widget-to-tree-coords
  input parameter arg1 :: <GtkTreeView>;
  input parameter arg2 :: <gint>;
  input parameter arg3 :: <gint>;
  input parameter arg4 :: <gint*>;
  input parameter arg5 :: <gint*>;
  c-name: "gtk_tree_view_widget_to_tree_coords";
end;

define C-function gtk-tree-view-tree-to-widget-coords
  input parameter arg1 :: <GtkTreeView>;
  input parameter arg2 :: <gint>;
  input parameter arg3 :: <gint>;
  input parameter arg4 :: <gint*>;
  input parameter arg5 :: <gint*>;
  c-name: "gtk_tree_view_tree_to_widget_coords";
end;

define C-function gtk-tree-view-get-visible-range
  input parameter arg1 :: <GtkTreeView>;
  input parameter arg2 :: <GtkTreePath*>;
  input parameter arg3 :: <GtkTreePath*>;
  result res :: <gboolean>;
  c-name: "gtk_tree_view_get_visible_range";
end;

define C-struct <_GtkTargetEntry>
  slot GtkTargetEntry-target :: <gchar*>;
  slot GtkTargetEntry-flags :: <C-unsigned-int>;
  slot GtkTargetEntry-info :: <C-unsigned-int>;
end;

define C-pointer-type <GtkTargetEntry> => <_GtkTargetEntry>;

define C-function gtk-tree-view-enable-model-drag-source
  input parameter arg1 :: <GtkTreeView>;
  input parameter arg2 :: <GdkModifierType>;
  input parameter arg3 :: <GtkTargetEntry>;
  input parameter arg4 :: <gint>;
  input parameter arg5 :: <GdkDragAction>;
  c-name: "gtk_tree_view_enable_model_drag_source";
end;

define C-function gtk-tree-view-enable-model-drag-dest
  input parameter arg1 :: <GtkTreeView>;
  input parameter arg2 :: <GtkTargetEntry>;
  input parameter arg3 :: <gint>;
  input parameter arg4 :: <GdkDragAction>;
  c-name: "gtk_tree_view_enable_model_drag_dest";
end;

define C-function gtk-tree-view-unset-rows-drag-source
  input parameter arg1 :: <GtkTreeView>;
  c-name: "gtk_tree_view_unset_rows_drag_source";
end;

define C-function gtk-tree-view-unset-rows-drag-dest
  input parameter arg1 :: <GtkTreeView>;
  c-name: "gtk_tree_view_unset_rows_drag_dest";
end;

define C-function gtk-tree-view-set-drag-dest-row
  input parameter arg1 :: <GtkTreeView>;
  input parameter arg2 :: <GtkTreePath>;
  input parameter arg3 :: <GtkTreeViewDropPosition>;
  c-name: "gtk_tree_view_set_drag_dest_row";
end;

define C-pointer-type <GtkTreeViewDropPosition*> => <GtkTreeViewDropPosition>;
define C-function gtk-tree-view-get-drag-dest-row
  input parameter arg1 :: <GtkTreeView>;
  input parameter arg2 :: <GtkTreePath*>;
  input parameter arg3 :: <GtkTreeViewDropPosition*>;
  c-name: "gtk_tree_view_get_drag_dest_row";
end;

define C-function gtk-tree-view-get-dest-row-at-pos
  input parameter arg1 :: <GtkTreeView>;
  input parameter arg2 :: <gint>;
  input parameter arg3 :: <gint>;
  input parameter arg4 :: <GtkTreePath*>;
  input parameter arg5 :: <GtkTreeViewDropPosition*>;
  result res :: <gboolean>;
  c-name: "gtk_tree_view_get_dest_row_at_pos";
end;

define C-function gtk-tree-view-create-row-drag-icon
  input parameter arg1 :: <GtkTreeView>;
  input parameter arg2 :: <GtkTreePath>;
  result res :: <GdkPixmap>;
  c-name: "gtk_tree_view_create_row_drag_icon";
end;

define C-function gtk-tree-view-set-enable-search
  input parameter arg1 :: <GtkTreeView>;
  input parameter arg2 :: <gboolean>;
  c-name: "gtk_tree_view_set_enable_search";
end;

define C-function gtk-tree-view-get-enable-search
  input parameter arg1 :: <GtkTreeView>;
  result res :: <gboolean>;
  c-name: "gtk_tree_view_get_enable_search";
end;

define C-function gtk-tree-view-get-search-column
  input parameter arg1 :: <GtkTreeView>;
  result res :: <gint>;
  c-name: "gtk_tree_view_get_search_column";
end;

define C-function gtk-tree-view-set-search-column
  input parameter arg1 :: <GtkTreeView>;
  input parameter arg2 :: <gint>;
  c-name: "gtk_tree_view_set_search_column";
end;

define C-function gtk-tree-view-get-search-equal-func
  input parameter arg1 :: <GtkTreeView>;
  result res :: <GtkTreeViewSearchEqualFunc>;
  c-name: "gtk_tree_view_get_search_equal_func";
end;

define C-function gtk-tree-view-set-search-equal-func
  input parameter arg1 :: <GtkTreeView>;
  input parameter arg2 :: <GtkTreeViewSearchEqualFunc>;
  input parameter arg3 :: <gpointer>;
  input parameter arg4 :: <GtkDestroyNotify>;
  c-name: "gtk_tree_view_set_search_equal_func";
end;

define C-subtype <_GtkIMContext> (<_GObject>) end;
define constant <GtkIMContext> = <_GtkIMContext>;

define C-subtype <_GtkEntry> (<_GtkWidget>, <_AtkImplementorIface>, <_GtkCellEditable>, <_GtkEditable>) end;
define constant <GtkEntry> = <_GtkEntry>;

define C-function gtk-tree-view-get-search-entry
  input parameter arg1 :: <GtkTreeView>;
  result res :: <GtkEntry>;
  c-name: "gtk_tree_view_get_search_entry";
end;

define C-function gtk-tree-view-set-search-entry
  input parameter arg1 :: <GtkTreeView>;
  input parameter arg2 :: <GtkEntry>;
  c-name: "gtk_tree_view_set_search_entry";
end;

define C-function gtk-tree-view-get-search-position-func
  input parameter arg1 :: <GtkTreeView>;
  result res :: <GtkTreeViewSearchPositionFunc>;
  c-name: "gtk_tree_view_get_search_position_func";
end;

define C-function gtk-tree-view-set-search-position-func
  input parameter arg1 :: <GtkTreeView>;
  input parameter arg2 :: <GtkTreeViewSearchPositionFunc>;
  input parameter arg3 :: <gpointer>;
  input parameter arg4 :: <GDestroyNotify>;
  c-name: "gtk_tree_view_set_search_position_func";
end;

define C-function gtk-tree-view-convert-widget-to-tree-coords
  input parameter arg1 :: <GtkTreeView>;
  input parameter arg2 :: <gint>;
  input parameter arg3 :: <gint>;
  input parameter arg4 :: <gint*>;
  input parameter arg5 :: <gint*>;
  c-name: "gtk_tree_view_convert_widget_to_tree_coords";
end;

define C-function gtk-tree-view-convert-tree-to-widget-coords
  input parameter arg1 :: <GtkTreeView>;
  input parameter arg2 :: <gint>;
  input parameter arg3 :: <gint>;
  input parameter arg4 :: <gint*>;
  input parameter arg5 :: <gint*>;
  c-name: "gtk_tree_view_convert_tree_to_widget_coords";
end;

define C-function gtk-tree-view-convert-widget-to-bin-window-coords
  input parameter arg1 :: <GtkTreeView>;
  input parameter arg2 :: <gint>;
  input parameter arg3 :: <gint>;
  input parameter arg4 :: <gint*>;
  input parameter arg5 :: <gint*>;
  c-name: "gtk_tree_view_convert_widget_to_bin_window_coords";
end;

define C-function gtk-tree-view-convert-bin-window-to-widget-coords
  input parameter arg1 :: <GtkTreeView>;
  input parameter arg2 :: <gint>;
  input parameter arg3 :: <gint>;
  input parameter arg4 :: <gint*>;
  input parameter arg5 :: <gint*>;
  c-name: "gtk_tree_view_convert_bin_window_to_widget_coords";
end;

define C-function gtk-tree-view-convert-tree-to-bin-window-coords
  input parameter arg1 :: <GtkTreeView>;
  input parameter arg2 :: <gint>;
  input parameter arg3 :: <gint>;
  input parameter arg4 :: <gint*>;
  input parameter arg5 :: <gint*>;
  c-name: "gtk_tree_view_convert_tree_to_bin_window_coords";
end;

define C-function gtk-tree-view-convert-bin-window-to-tree-coords
  input parameter arg1 :: <GtkTreeView>;
  input parameter arg2 :: <gint>;
  input parameter arg3 :: <gint>;
  input parameter arg4 :: <gint*>;
  input parameter arg5 :: <gint*>;
  c-name: "gtk_tree_view_convert_bin_window_to_tree_coords";
end;

define constant <anonymous-6427> = <C-function-pointer>;
define constant <GtkTreeDestroyCountFunc> = <anonymous-6427>;

define C-function gtk-tree-view-set-destroy-count-func
  input parameter arg1 :: <GtkTreeView>;
  input parameter arg2 :: <GtkTreeDestroyCountFunc>;
  input parameter arg3 :: <gpointer>;
  input parameter arg4 :: <GtkDestroyNotify>;
  c-name: "gtk_tree_view_set_destroy_count_func";
end;

define C-function gtk-tree-view-set-fixed-height-mode
  input parameter arg1 :: <GtkTreeView>;
  input parameter arg2 :: <gboolean>;
  c-name: "gtk_tree_view_set_fixed_height_mode";
end;

define C-function gtk-tree-view-get-fixed-height-mode
  input parameter arg1 :: <GtkTreeView>;
  result res :: <gboolean>;
  c-name: "gtk_tree_view_get_fixed_height_mode";
end;

define C-function gtk-tree-view-set-hover-selection
  input parameter arg1 :: <GtkTreeView>;
  input parameter arg2 :: <gboolean>;
  c-name: "gtk_tree_view_set_hover_selection";
end;

define C-function gtk-tree-view-get-hover-selection
  input parameter arg1 :: <GtkTreeView>;
  result res :: <gboolean>;
  c-name: "gtk_tree_view_get_hover_selection";
end;

define C-function gtk-tree-view-set-hover-expand
  input parameter arg1 :: <GtkTreeView>;
  input parameter arg2 :: <gboolean>;
  c-name: "gtk_tree_view_set_hover_expand";
end;

define C-function gtk-tree-view-get-hover-expand
  input parameter arg1 :: <GtkTreeView>;
  result res :: <gboolean>;
  c-name: "gtk_tree_view_get_hover_expand";
end;

define C-function gtk-tree-view-set-rubber-banding
  input parameter arg1 :: <GtkTreeView>;
  input parameter arg2 :: <gboolean>;
  c-name: "gtk_tree_view_set_rubber_banding";
end;

define C-function gtk-tree-view-get-rubber-banding
  input parameter arg1 :: <GtkTreeView>;
  result res :: <gboolean>;
  c-name: "gtk_tree_view_get_rubber_banding";
end;

define C-function gtk-tree-view-is-rubber-banding-active
  input parameter arg1 :: <GtkTreeView>;
  result res :: <gboolean>;
  c-name: "gtk_tree_view_is_rubber_banding_active";
end;

define C-function gtk-tree-view-get-row-separator-func
  input parameter arg1 :: <GtkTreeView>;
  result res :: <GtkTreeViewRowSeparatorFunc>;
  c-name: "gtk_tree_view_get_row_separator_func";
end;

define C-function gtk-tree-view-set-row-separator-func
  input parameter arg1 :: <GtkTreeView>;
  input parameter arg2 :: <GtkTreeViewRowSeparatorFunc>;
  input parameter arg3 :: <gpointer>;
  input parameter arg4 :: <GtkDestroyNotify>;
  c-name: "gtk_tree_view_set_row_separator_func";
end;

define C-function gtk-tree-view-get-grid-lines
  input parameter arg1 :: <GtkTreeView>;
  result res :: <GtkTreeViewGridLines>;
  c-name: "gtk_tree_view_get_grid_lines";
end;

define C-function gtk-tree-view-set-grid-lines
  input parameter arg1 :: <GtkTreeView>;
  input parameter arg2 :: <GtkTreeViewGridLines>;
  c-name: "gtk_tree_view_set_grid_lines";
end;

define C-function gtk-tree-view-get-enable-tree-lines
  input parameter arg1 :: <GtkTreeView>;
  result res :: <gboolean>;
  c-name: "gtk_tree_view_get_enable_tree_lines";
end;

define C-function gtk-tree-view-set-enable-tree-lines
  input parameter arg1 :: <GtkTreeView>;
  input parameter arg2 :: <gboolean>;
  c-name: "gtk_tree_view_set_enable_tree_lines";
end;

define C-function gtk-tree-view-set-show-expanders
  input parameter arg1 :: <GtkTreeView>;
  input parameter arg2 :: <gboolean>;
  c-name: "gtk_tree_view_set_show_expanders";
end;

define C-function gtk-tree-view-get-show-expanders
  input parameter arg1 :: <GtkTreeView>;
  result res :: <gboolean>;
  c-name: "gtk_tree_view_get_show_expanders";
end;

define C-function gtk-tree-view-set-level-indentation
  input parameter arg1 :: <GtkTreeView>;
  input parameter arg2 :: <gint>;
  c-name: "gtk_tree_view_set_level_indentation";
end;

define C-function gtk-tree-view-get-level-indentation
  input parameter arg1 :: <GtkTreeView>;
  result res :: <gint>;
  c-name: "gtk_tree_view_get_level_indentation";
end;

define C-function gtk-tree-view-set-tooltip-row
  input parameter arg1 :: <GtkTreeView>;
  input parameter arg2 :: <GtkTooltip>;
  input parameter arg3 :: <GtkTreePath>;
  c-name: "gtk_tree_view_set_tooltip_row";
end;

define C-function gtk-tree-view-set-tooltip-cell
  input parameter arg1 :: <GtkTreeView>;
  input parameter arg2 :: <GtkTooltip>;
  input parameter arg3 :: <GtkTreePath>;
  input parameter arg4 :: <GtkTreeViewColumn>;
  input parameter arg5 :: <GtkCellRenderer>;
  c-name: "gtk_tree_view_set_tooltip_cell";
end;

define C-pointer-type <GtkTreeModel*> => <GtkTreeModel>;
define C-function gtk-tree-view-get-tooltip-context
  input parameter arg1 :: <GtkTreeView>;
  input parameter arg2 :: <gint*>;
  input parameter arg3 :: <gint*>;
  input parameter arg4 :: <gboolean>;
  input parameter arg5 :: <GtkTreeModel*>;
  input parameter arg6 :: <GtkTreePath*>;
  input parameter arg7 :: <GtkTreeIter>;
  result res :: <gboolean>;
  c-name: "gtk_tree_view_get_tooltip_context";
end;

define C-function gtk-tree-view-set-tooltip-column
  input parameter arg1 :: <GtkTreeView>;
  input parameter arg2 :: <gint>;
  c-name: "gtk_tree_view_set_tooltip_column";
end;

define C-function gtk-tree-view-get-tooltip-column
  input parameter arg1 :: <GtkTreeView>;
  result res :: <gint>;
  c-name: "gtk_tree_view_get_tooltip_column";
end;

define C-subtype <_GtkMenuShell> (<_GtkContainer>, <_AtkImplementorIface>) end;
define constant <GtkMenuShell> = <_GtkMenuShell>;

define constant <anonymous-4334> = <C-function-pointer>;
define constant <GtkMenuPositionFunc> = <anonymous-4334>;

define C-subtype <_GtkMenu> (<_GtkMenuShell>, <_AtkImplementorIface>) end;
define constant <GtkMenu> = <_GtkMenu>;

define constant <anonymous-6278> = <C-function-pointer>;
define constant <anonymous-6279> = <C-function-pointer>;
define constant <anonymous-6280> = <C-function-pointer>;
define constant <anonymous-6281> = <C-function-pointer>;
define constant <anonymous-6282> = <C-function-pointer>;
define constant <anonymous-6283> = <C-function-pointer>;
define constant <anonymous-6284> = <C-function-pointer>;
define constant <anonymous-6285> = <C-function-pointer>;
define constant <anonymous-6286> = <C-function-pointer>;
define constant <anonymous-6287> = <C-function-pointer>;
define constant <anonymous-6288> = <C-function-pointer>;
define constant <anonymous-6289> = <C-function-pointer>;
define constant <anonymous-6290> = <C-function-pointer>;
define C-struct <_GtkEntryClass>
  slot GtkEntryClass-parent-class :: <_GtkWidgetClass>;
  slot GtkEntryClass-populate-popup :: <anonymous-6278>;
  slot GtkEntryClass-activate :: <anonymous-6279>;
  slot GtkEntryClass-move-cursor :: <anonymous-6280>;
  slot GtkEntryClass-insert-at-cursor :: <anonymous-6281>;
  slot GtkEntryClass-delete-from-cursor :: <anonymous-6282>;
  slot GtkEntryClass-backspace :: <anonymous-6283>;
  slot GtkEntryClass-cut-clipboard :: <anonymous-6284>;
  slot GtkEntryClass-copy-clipboard :: <anonymous-6285>;
  slot GtkEntryClass-paste-clipboard :: <anonymous-6286>;
  slot GtkEntryClass-toggle-overwrite :: <anonymous-6287>;
  slot GtkEntryClass-_gtk-reserved1 :: <anonymous-6288>;
  slot GtkEntryClass-_gtk-reserved2 :: <anonymous-6289>;
  slot GtkEntryClass-_gtk-reserved3 :: <anonymous-6290>;
end;

define C-pointer-type <GtkEntryClass> => <_GtkEntryClass>;

define C-function gtk-entry-get-type
  result res :: <GType>;
  c-name: "gtk_entry_get_type";
end;

define C-function gtk-entry-new
  result res :: <GtkWidget>;
  c-name: "gtk_entry_new";
end;

define C-function gtk-entry-set-visibility
  input parameter arg1 :: <GtkEntry>;
  input parameter arg2 :: <gboolean>;
  c-name: "gtk_entry_set_visibility";
end;

define C-function gtk-entry-get-visibility
  input parameter arg1 :: <GtkEntry>;
  result res :: <gboolean>;
  c-name: "gtk_entry_get_visibility";
end;

define C-function gtk-entry-set-invisible-char
  input parameter arg1 :: <GtkEntry>;
  input parameter arg2 :: <gunichar>;
  c-name: "gtk_entry_set_invisible_char";
end;

define C-function gtk-entry-get-invisible-char
  input parameter arg1 :: <GtkEntry>;
  result res :: <gunichar>;
  c-name: "gtk_entry_get_invisible_char";
end;

define C-function gtk-entry-set-has-frame
  input parameter arg1 :: <GtkEntry>;
  input parameter arg2 :: <gboolean>;
  c-name: "gtk_entry_set_has_frame";
end;

define C-function gtk-entry-get-has-frame
  input parameter arg1 :: <GtkEntry>;
  result res :: <gboolean>;
  c-name: "gtk_entry_get_has_frame";
end;

define C-function gtk-entry-set-inner-border
  input parameter arg1 :: <GtkEntry>;
  input parameter arg2 :: <GtkBorder>;
  c-name: "gtk_entry_set_inner_border";
end;

define C-function gtk-entry-get-inner-border
  input parameter arg1 :: <GtkEntry>;
  result res :: <GtkBorder>;
  c-name: "gtk_entry_get_inner_border";
end;

define C-function gtk-entry-set-max-length
  input parameter arg1 :: <GtkEntry>;
  input parameter arg2 :: <gint>;
  c-name: "gtk_entry_set_max_length";
end;

define C-function gtk-entry-get-max-length
  input parameter arg1 :: <GtkEntry>;
  result res :: <gint>;
  c-name: "gtk_entry_get_max_length";
end;

define C-function gtk-entry-set-activates-default
  input parameter arg1 :: <GtkEntry>;
  input parameter arg2 :: <gboolean>;
  c-name: "gtk_entry_set_activates_default";
end;

define C-function gtk-entry-get-activates-default
  input parameter arg1 :: <GtkEntry>;
  result res :: <gboolean>;
  c-name: "gtk_entry_get_activates_default";
end;

define C-function gtk-entry-set-width-chars
  input parameter arg1 :: <GtkEntry>;
  input parameter arg2 :: <gint>;
  c-name: "gtk_entry_set_width_chars";
end;

define C-function gtk-entry-get-width-chars
  input parameter arg1 :: <GtkEntry>;
  result res :: <gint>;
  c-name: "gtk_entry_get_width_chars";
end;

define C-function gtk-entry-set-text
  input parameter arg1 :: <GtkEntry>;
  input parameter arg2 :: <gchar*>;
  c-name: "gtk_entry_set_text";
end;

define C-function gtk-entry-get-text
  input parameter arg1 :: <GtkEntry>;
  result res :: <gchar*>;
  c-name: "gtk_entry_get_text";
end;

define C-function gtk-entry-get-layout
  input parameter arg1 :: <GtkEntry>;
  result res :: <PangoLayout>;
  c-name: "gtk_entry_get_layout";
end;

define C-function gtk-entry-get-layout-offsets
  input parameter arg1 :: <GtkEntry>;
  input parameter arg2 :: <gint*>;
  input parameter arg3 :: <gint*>;
  c-name: "gtk_entry_get_layout_offsets";
end;

define C-function gtk-entry-set-alignment
  input parameter arg1 :: <GtkEntry>;
  input parameter arg2 :: <gfloat>;
  c-name: "gtk_entry_set_alignment";
end;

define C-function gtk-entry-get-alignment
  input parameter arg1 :: <GtkEntry>;
  result res :: <gfloat>;
  c-name: "gtk_entry_get_alignment";
end;

define C-struct <_GtkEntryCompletionPrivate>
end;

define C-pointer-type <GtkEntryCompletionPrivate> => <_GtkEntryCompletionPrivate>;

define C-subtype <_GtkEntryCompletion> (<_GObject>, <_GtkCellLayout>) end;
define constant <GtkEntryCompletion> = <_GtkEntryCompletion>;

define C-function gtk-entry-set-completion
  input parameter arg1 :: <GtkEntry>;
  input parameter arg2 :: <GtkEntryCompletion>;
  c-name: "gtk_entry_set_completion";
end;

define C-function gtk-entry-get-completion
  input parameter arg1 :: <GtkEntry>;
  result res :: <GtkEntryCompletion>;
  c-name: "gtk_entry_get_completion";
end;

define C-function gtk-entry-layout-index-to-text-index
  input parameter arg1 :: <GtkEntry>;
  input parameter arg2 :: <gint>;
  result res :: <gint>;
  c-name: "gtk_entry_layout_index_to_text_index";
end;

define C-function gtk-entry-text-index-to-layout-index
  input parameter arg1 :: <GtkEntry>;
  input parameter arg2 :: <gint>;
  result res :: <gint>;
  c-name: "gtk_entry_text_index_to_layout_index";
end;

define C-function gtk-entry-set-cursor-hadjustment
  input parameter arg1 :: <GtkEntry>;
  input parameter arg2 :: <GtkAdjustment>;
  c-name: "gtk_entry_set_cursor_hadjustment";
end;

define C-function gtk-entry-get-cursor-hadjustment
  input parameter arg1 :: <GtkEntry>;
  result res :: <GtkAdjustment>;
  c-name: "gtk_entry_get_cursor_hadjustment";
end;

define C-function gtk-entry-new-with-max-length
  input parameter arg1 :: <gint>;
  result res :: <GtkWidget>;
  c-name: "gtk_entry_new_with_max_length";
end;

define C-function gtk-entry-append-text
  input parameter arg1 :: <GtkEntry>;
  input parameter arg2 :: <gchar*>;
  c-name: "gtk_entry_append_text";
end;

define C-function gtk-entry-prepend-text
  input parameter arg1 :: <GtkEntry>;
  input parameter arg2 :: <gchar*>;
  c-name: "gtk_entry_prepend_text";
end;

define C-function gtk-entry-set-position
  input parameter arg1 :: <GtkEntry>;
  input parameter arg2 :: <gint>;
  c-name: "gtk_entry_set_position";
end;

define C-function gtk-entry-select-region
  input parameter arg1 :: <GtkEntry>;
  input parameter arg2 :: <gint>;
  input parameter arg3 :: <gint>;
  c-name: "gtk_entry_select_region";
end;

define C-function gtk-entry-set-editable
  input parameter arg1 :: <GtkEntry>;
  input parameter arg2 :: <gboolean>;
  c-name: "gtk_entry_set_editable";
end;

define constant <anonymous-6229> = <C-function-pointer>;
define constant <anonymous-6230> = <C-function-pointer>;
define constant <anonymous-6231> = <C-function-pointer>;
define constant <anonymous-6232> = <C-function-pointer>;
define constant <anonymous-6233> = <C-function-pointer>;
define constant <anonymous-6234> = <C-function-pointer>;
define C-struct <_GtkEntryCompletionClass>
  slot GtkEntryCompletionClass-parent-class :: <_GObjectClass>;
  slot GtkEntryCompletionClass-match-selected :: <anonymous-6229>;
  slot GtkEntryCompletionClass-action-activated :: <anonymous-6230>;
  slot GtkEntryCompletionClass-insert-prefix :: <anonymous-6231>;
  slot GtkEntryCompletionClass-cursor-on-match :: <anonymous-6232>;
  slot GtkEntryCompletionClass-_gtk-reserved0 :: <anonymous-6233>;
  slot GtkEntryCompletionClass-_gtk-reserved1 :: <anonymous-6234>;
end;

define C-pointer-type <GtkEntryCompletionClass> => <_GtkEntryCompletionClass>;

define constant <anonymous-6228> = <C-function-pointer>;
define constant <GtkEntryCompletionMatchFunc> = <anonymous-6228>;

define C-function gtk-entry-completion-get-type
  result res :: <GType>;
  c-name: "gtk_entry_completion_get_type";
end;

define C-function gtk-entry-completion-new
  result res :: <GtkEntryCompletion>;
  c-name: "gtk_entry_completion_new";
end;

define C-function gtk-entry-completion-get-entry
  input parameter arg1 :: <GtkEntryCompletion>;
  result res :: <GtkWidget>;
  c-name: "gtk_entry_completion_get_entry";
end;

define C-function gtk-entry-completion-set-model
  input parameter arg1 :: <GtkEntryCompletion>;
  input parameter arg2 :: <GtkTreeModel>;
  c-name: "gtk_entry_completion_set_model";
end;

define C-function gtk-entry-completion-get-model
  input parameter arg1 :: <GtkEntryCompletion>;
  result res :: <GtkTreeModel>;
  c-name: "gtk_entry_completion_get_model";
end;

define C-function gtk-entry-completion-set-match-func
  input parameter arg1 :: <GtkEntryCompletion>;
  input parameter arg2 :: <GtkEntryCompletionMatchFunc>;
  input parameter arg3 :: <gpointer>;
  input parameter arg4 :: <GDestroyNotify>;
  c-name: "gtk_entry_completion_set_match_func";
end;

define C-function gtk-entry-completion-set-minimum-key-length
  input parameter arg1 :: <GtkEntryCompletion>;
  input parameter arg2 :: <gint>;
  c-name: "gtk_entry_completion_set_minimum_key_length";
end;

define C-function gtk-entry-completion-get-minimum-key-length
  input parameter arg1 :: <GtkEntryCompletion>;
  result res :: <gint>;
  c-name: "gtk_entry_completion_get_minimum_key_length";
end;

define C-function gtk-entry-completion-complete
  input parameter arg1 :: <GtkEntryCompletion>;
  c-name: "gtk_entry_completion_complete";
end;

define C-function gtk-entry-completion-insert-prefix
  input parameter arg1 :: <GtkEntryCompletion>;
  c-name: "gtk_entry_completion_insert_prefix";
end;

define C-function gtk-entry-completion-insert-action-text
  input parameter arg1 :: <GtkEntryCompletion>;
  input parameter arg2 :: <gint>;
  input parameter arg3 :: <gchar*>;
  c-name: "gtk_entry_completion_insert_action_text";
end;

define C-function gtk-entry-completion-insert-action-markup
  input parameter arg1 :: <GtkEntryCompletion>;
  input parameter arg2 :: <gint>;
  input parameter arg3 :: <gchar*>;
  c-name: "gtk_entry_completion_insert_action_markup";
end;

define C-function gtk-entry-completion-delete-action
  input parameter arg1 :: <GtkEntryCompletion>;
  input parameter arg2 :: <gint>;
  c-name: "gtk_entry_completion_delete_action";
end;

define C-function gtk-entry-completion-set-inline-completion
  input parameter arg1 :: <GtkEntryCompletion>;
  input parameter arg2 :: <gboolean>;
  c-name: "gtk_entry_completion_set_inline_completion";
end;

define C-function gtk-entry-completion-get-inline-completion
  input parameter arg1 :: <GtkEntryCompletion>;
  result res :: <gboolean>;
  c-name: "gtk_entry_completion_get_inline_completion";
end;

define C-function gtk-entry-completion-set-inline-selection
  input parameter arg1 :: <GtkEntryCompletion>;
  input parameter arg2 :: <gboolean>;
  c-name: "gtk_entry_completion_set_inline_selection";
end;

define C-function gtk-entry-completion-get-inline-selection
  input parameter arg1 :: <GtkEntryCompletion>;
  result res :: <gboolean>;
  c-name: "gtk_entry_completion_get_inline_selection";
end;

define C-function gtk-entry-completion-set-popup-completion
  input parameter arg1 :: <GtkEntryCompletion>;
  input parameter arg2 :: <gboolean>;
  c-name: "gtk_entry_completion_set_popup_completion";
end;

define C-function gtk-entry-completion-get-popup-completion
  input parameter arg1 :: <GtkEntryCompletion>;
  result res :: <gboolean>;
  c-name: "gtk_entry_completion_get_popup_completion";
end;

define C-function gtk-entry-completion-set-popup-set-width
  input parameter arg1 :: <GtkEntryCompletion>;
  input parameter arg2 :: <gboolean>;
  c-name: "gtk_entry_completion_set_popup_set_width";
end;

define C-function gtk-entry-completion-get-popup-set-width
  input parameter arg1 :: <GtkEntryCompletion>;
  result res :: <gboolean>;
  c-name: "gtk_entry_completion_get_popup_set_width";
end;

define C-function gtk-entry-completion-set-popup-single-match
  input parameter arg1 :: <GtkEntryCompletion>;
  input parameter arg2 :: <gboolean>;
  c-name: "gtk_entry_completion_set_popup_single_match";
end;

define C-function gtk-entry-completion-get-popup-single-match
  input parameter arg1 :: <GtkEntryCompletion>;
  result res :: <gboolean>;
  c-name: "gtk_entry_completion_get_popup_single_match";
end;

define C-function gtk-entry-completion-get-completion-prefix
  input parameter arg1 :: <GtkEntryCompletion>;
  result res :: <gchar*>;
  c-name: "gtk_entry_completion_get_completion_prefix";
end;

define C-function gtk-entry-completion-set-text-column
  input parameter arg1 :: <GtkEntryCompletion>;
  input parameter arg2 :: <gint>;
  c-name: "gtk_entry_completion_set_text_column";
end;

define C-function gtk-entry-completion-get-text-column
  input parameter arg1 :: <GtkEntryCompletion>;
  result res :: <gint>;
  c-name: "gtk_entry_completion_get_text_column";
end;

define constant <anonymous-6210> = <C-function-pointer>;
define constant <GtkTreeModelFilterVisibleFunc> = <anonymous-6210>;

define constant <anonymous-6211> = <C-function-pointer>;
define constant <GtkTreeModelFilterModifyFunc> = <anonymous-6211>;

define C-struct <_GtkTreeModelFilterPrivate>
end;

define C-pointer-type <GtkTreeModelFilterPrivate> => <_GtkTreeModelFilterPrivate>;

define C-subtype <_GtkTreeModelFilter> (<_GObject>, <_GtkTreeModel>, <_GtkTreeDragSource>) end;
define constant <GtkTreeModelFilter> = <_GtkTreeModelFilter>;

define constant <anonymous-6212> = <C-function-pointer>;
define constant <anonymous-6213> = <C-function-pointer>;
define constant <anonymous-6214> = <C-function-pointer>;
define constant <anonymous-6215> = <C-function-pointer>;
define C-struct <_GtkTreeModelFilterClass>
  slot GtkTreeModelFilterClass-parent-class :: <_GObjectClass>;
  slot GtkTreeModelFilterClass-_gtk-reserved0 :: <anonymous-6212>;
  slot GtkTreeModelFilterClass-_gtk-reserved1 :: <anonymous-6213>;
  slot GtkTreeModelFilterClass-_gtk-reserved2 :: <anonymous-6214>;
  slot GtkTreeModelFilterClass-_gtk-reserved3 :: <anonymous-6215>;
end;

define C-pointer-type <GtkTreeModelFilterClass> => <_GtkTreeModelFilterClass>;

define C-function gtk-tree-model-filter-get-type
  result res :: <GType>;
  c-name: "gtk_tree_model_filter_get_type";
end;

define C-function gtk-tree-model-filter-new
  input parameter arg1 :: <GtkTreeModel>;
  input parameter arg2 :: <GtkTreePath>;
  result res :: <GtkTreeModel>;
  c-name: "gtk_tree_model_filter_new";
end;

define C-function gtk-tree-model-filter-set-visible-func
  input parameter arg1 :: <GtkTreeModelFilter>;
  input parameter arg2 :: <GtkTreeModelFilterVisibleFunc>;
  input parameter arg3 :: <gpointer>;
  input parameter arg4 :: <GtkDestroyNotify>;
  c-name: "gtk_tree_model_filter_set_visible_func";
end;

define C-function gtk-tree-model-filter-set-modify-func
  input parameter arg1 :: <GtkTreeModelFilter>;
  input parameter arg2 :: <gint>;
  input parameter arg3 :: <GType*>;
  input parameter arg4 :: <GtkTreeModelFilterModifyFunc>;
  input parameter arg5 :: <gpointer>;
  input parameter arg6 :: <GtkDestroyNotify>;
  c-name: "gtk_tree_model_filter_set_modify_func";
end;

define C-function gtk-tree-model-filter-set-visible-column
  input parameter arg1 :: <GtkTreeModelFilter>;
  input parameter arg2 :: <gint>;
  c-name: "gtk_tree_model_filter_set_visible_column";
end;

define C-function gtk-tree-model-filter-get-model
  input parameter arg1 :: <GtkTreeModelFilter>;
  result res :: <GtkTreeModel>;
  c-name: "gtk_tree_model_filter_get_model";
end;

define C-function gtk-tree-model-filter-convert-child-iter-to-iter
  input parameter arg1 :: <GtkTreeModelFilter>;
  input parameter arg2 :: <GtkTreeIter>;
  input parameter arg3 :: <GtkTreeIter>;
  result res :: <gboolean>;
  c-name: "gtk_tree_model_filter_convert_child_iter_to_iter";
end;

define C-function gtk-tree-model-filter-convert-iter-to-child-iter
  input parameter arg1 :: <GtkTreeModelFilter>;
  input parameter arg2 :: <GtkTreeIter>;
  input parameter arg3 :: <GtkTreeIter>;
  c-name: "gtk_tree_model_filter_convert_iter_to_child_iter";
end;

define C-function gtk-tree-model-filter-convert-child-path-to-path
  input parameter arg1 :: <GtkTreeModelFilter>;
  input parameter arg2 :: <GtkTreePath>;
  result res :: <GtkTreePath>;
  c-name: "gtk_tree_model_filter_convert_child_path_to_path";
end;

define C-function gtk-tree-model-filter-convert-path-to-child-path
  input parameter arg1 :: <GtkTreeModelFilter>;
  input parameter arg2 :: <GtkTreePath>;
  result res :: <GtkTreePath>;
  c-name: "gtk_tree_model_filter_convert_path_to_child_path";
end;

define C-function gtk-tree-model-filter-refilter
  input parameter arg1 :: <GtkTreeModelFilter>;
  c-name: "gtk_tree_model_filter_refilter";
end;

define C-function gtk-tree-model-filter-clear-cache
  input parameter arg1 :: <GtkTreeModelFilter>;
  c-name: "gtk_tree_model_filter_clear_cache";
end;

define C-subtype <_GtkListStore> (<_GObject>, <_GtkTreeModel>, <_GtkTreeDragSource>, <_GtkTreeDragDest>, <_GtkTreeSortable>) end;
define constant <GtkListStore> = <_GtkListStore>;

define constant <anonymous-6184> = <C-function-pointer>;
define constant <anonymous-6185> = <C-function-pointer>;
define constant <anonymous-6186> = <C-function-pointer>;
define constant <anonymous-6187> = <C-function-pointer>;
define C-struct <_GtkListStoreClass>
  slot GtkListStoreClass-parent-class :: <_GObjectClass>;
  slot GtkListStoreClass-_gtk-reserved1 :: <anonymous-6184>;
  slot GtkListStoreClass-_gtk-reserved2 :: <anonymous-6185>;
  slot GtkListStoreClass-_gtk-reserved3 :: <anonymous-6186>;
  slot GtkListStoreClass-_gtk-reserved4 :: <anonymous-6187>;
end;

define C-pointer-type <GtkListStoreClass> => <_GtkListStoreClass>;

define C-function gtk-list-store-get-type
  result res :: <GType>;
  c-name: "gtk_list_store_get_type";
end;

define C-function gtk-list-store-new
  input parameter arg1 :: <gint>;
  result res :: <GtkListStore>;
  c-name: "gtk_list_store_new";
end;

define C-function gtk-list-store-newv
  input parameter arg1 :: <gint>;
  input parameter arg2 :: <GType*>;
  result res :: <GtkListStore>;
  c-name: "gtk_list_store_newv";
end;

define C-function gtk-list-store-set-column-types
  input parameter arg1 :: <GtkListStore>;
  input parameter arg2 :: <gint>;
  input parameter arg3 :: <GType*>;
  c-name: "gtk_list_store_set_column_types";
end;

define C-function gtk-list-store-set-value
  input parameter arg1 :: <GtkListStore>;
  input parameter arg2 :: <GtkTreeIter>;
  input parameter arg3 :: <gint>;
  input parameter arg4 :: <GValue>;
  c-name: "gtk_list_store_set_value";
end;

define C-function gtk-list-store-set
  input parameter arg1 :: <GtkListStore>;
  input parameter arg2 :: <GtkTreeIter>;
  c-name: "gtk_list_store_set";
end;

define C-function gtk-list-store-set-valuesv
  input parameter arg1 :: <GtkListStore>;
  input parameter arg2 :: <GtkTreeIter>;
  input parameter arg3 :: <gint*>;
  input parameter arg4 :: <GValue>;
  input parameter arg5 :: <gint>;
  c-name: "gtk_list_store_set_valuesv";
end;

define C-function gtk-list-store-set-valist
  input parameter arg1 :: <GtkListStore>;
  input parameter arg2 :: <GtkTreeIter>;
  input parameter arg3 :: <va-list>;
  c-name: "gtk_list_store_set_valist";
end;

define C-function gtk-list-store-remove
  input parameter arg1 :: <GtkListStore>;
  input parameter arg2 :: <GtkTreeIter>;
  result res :: <gboolean>;
  c-name: "gtk_list_store_remove";
end;

define C-function gtk-list-store-insert
  input parameter arg1 :: <GtkListStore>;
  input parameter arg2 :: <GtkTreeIter>;
  input parameter arg3 :: <gint>;
  c-name: "gtk_list_store_insert";
end;

define C-function gtk-list-store-insert-before
  input parameter arg1 :: <GtkListStore>;
  input parameter arg2 :: <GtkTreeIter>;
  input parameter arg3 :: <GtkTreeIter>;
  c-name: "gtk_list_store_insert_before";
end;

define C-function gtk-list-store-insert-after
  input parameter arg1 :: <GtkListStore>;
  input parameter arg2 :: <GtkTreeIter>;
  input parameter arg3 :: <GtkTreeIter>;
  c-name: "gtk_list_store_insert_after";
end;

define C-function gtk-list-store-insert-with-values
  input parameter arg1 :: <GtkListStore>;
  input parameter arg2 :: <GtkTreeIter>;
  input parameter arg3 :: <gint>;
  c-name: "gtk_list_store_insert_with_values";
end;

define C-function gtk-list-store-insert-with-valuesv
  input parameter arg1 :: <GtkListStore>;
  input parameter arg2 :: <GtkTreeIter>;
  input parameter arg3 :: <gint>;
  input parameter arg4 :: <gint*>;
  input parameter arg5 :: <GValue>;
  input parameter arg6 :: <gint>;
  c-name: "gtk_list_store_insert_with_valuesv";
end;

define C-function gtk-list-store-prepend
  input parameter arg1 :: <GtkListStore>;
  input parameter arg2 :: <GtkTreeIter>;
  c-name: "gtk_list_store_prepend";
end;

define C-function gtk-list-store-append
  input parameter arg1 :: <GtkListStore>;
  input parameter arg2 :: <GtkTreeIter>;
  c-name: "gtk_list_store_append";
end;

define C-function gtk-list-store-clear
  input parameter arg1 :: <GtkListStore>;
  c-name: "gtk_list_store_clear";
end;

define C-function gtk-list-store-iter-is-valid
  input parameter arg1 :: <GtkListStore>;
  input parameter arg2 :: <GtkTreeIter>;
  result res :: <gboolean>;
  c-name: "gtk_list_store_iter_is_valid";
end;

define C-function gtk-list-store-reorder
  input parameter arg1 :: <GtkListStore>;
  input parameter arg2 :: <gint*>;
  c-name: "gtk_list_store_reorder";
end;

define C-function gtk-list-store-swap
  input parameter arg1 :: <GtkListStore>;
  input parameter arg2 :: <GtkTreeIter>;
  input parameter arg3 :: <GtkTreeIter>;
  c-name: "gtk_list_store_swap";
end;

define C-function gtk-list-store-move-after
  input parameter arg1 :: <GtkListStore>;
  input parameter arg2 :: <GtkTreeIter>;
  input parameter arg3 :: <GtkTreeIter>;
  c-name: "gtk_list_store_move_after";
end;

define C-function gtk-list-store-move-before
  input parameter arg1 :: <GtkListStore>;
  input parameter arg2 :: <GtkTreeIter>;
  input parameter arg3 :: <GtkTreeIter>;
  c-name: "gtk_list_store_move_before";
end;

define constant <anonymous-4306> = <C-function-pointer>;
define constant <anonymous-4307> = <C-function-pointer>;
define constant <anonymous-4308> = <C-function-pointer>;
define constant <anonymous-4309> = <C-function-pointer>;
define constant <anonymous-4310> = <C-function-pointer>;
define constant <anonymous-4311> = <C-function-pointer>;
define constant <anonymous-4312> = <C-function-pointer>;
define constant <anonymous-4313> = <C-function-pointer>;
define constant <anonymous-4314> = <C-function-pointer>;
define constant <anonymous-4315> = <C-function-pointer>;
define constant <anonymous-4316> = <C-function-pointer>;
define C-struct <_GtkMenuShellClass>
  slot GtkMenuShellClass-parent-class :: <_GtkContainerClass>;
  bitfield slot GtkMenuShellClass-submenu-placement :: <C-int>, width: 1;
  slot GtkMenuShellClass-deactivate :: <anonymous-4306>;
  slot GtkMenuShellClass-selection-done :: <anonymous-4307>;
  slot GtkMenuShellClass-move-current :: <anonymous-4308>;
  slot GtkMenuShellClass-activate-current :: <anonymous-4309>;
  slot GtkMenuShellClass-cancel :: <anonymous-4310>;
  slot GtkMenuShellClass-select-item :: <anonymous-4311>;
  slot GtkMenuShellClass-insert :: <anonymous-4312>;
  slot GtkMenuShellClass-get-popup-delay :: <anonymous-4313>;
  slot GtkMenuShellClass-move-selected :: <anonymous-4314>;
  slot GtkMenuShellClass-_gtk-reserved1 :: <anonymous-4315>;
  slot GtkMenuShellClass-_gtk-reserved2 :: <anonymous-4316>;
end;

define C-pointer-type <GtkMenuShellClass> => <_GtkMenuShellClass>;

define constant <anonymous-4344> = <C-function-pointer>;
define constant <anonymous-4345> = <C-function-pointer>;
define constant <anonymous-4346> = <C-function-pointer>;
define constant <anonymous-4347> = <C-function-pointer>;
define C-struct <_GtkMenuClass>
  slot GtkMenuClass-parent-class :: <_GtkMenuShellClass>;
  slot GtkMenuClass-_gtk-reserved1 :: <anonymous-4344>;
  slot GtkMenuClass-_gtk-reserved2 :: <anonymous-4345>;
  slot GtkMenuClass-_gtk-reserved3 :: <anonymous-4346>;
  slot GtkMenuClass-_gtk-reserved4 :: <anonymous-4347>;
end;

define C-pointer-type <GtkMenuClass> => <_GtkMenuClass>;

define constant <anonymous-4335> = <C-function-pointer>;
define constant <GtkMenuDetachFunc> = <anonymous-4335>;

define C-function gtk-menu-get-type
  result res :: <GType>;
  c-name: "gtk_menu_get_type";
end;

define C-function gtk-menu-new
  result res :: <GtkWidget>;
  c-name: "gtk_menu_new";
end;

define C-function gtk-menu-popup
  input parameter arg1 :: <GtkMenu>;
  input parameter arg2 :: <GtkWidget>;
  input parameter arg3 :: <GtkWidget>;
  input parameter arg4 :: <GtkMenuPositionFunc>;
  input parameter arg5 :: <gpointer>;
  input parameter arg6 :: <guint>;
  input parameter arg7 :: <guint32>;
  c-name: "gtk_menu_popup";
end;

define C-function gtk-menu-reposition
  input parameter arg1 :: <GtkMenu>;
  c-name: "gtk_menu_reposition";
end;

define C-function gtk-menu-popdown
  input parameter arg1 :: <GtkMenu>;
  c-name: "gtk_menu_popdown";
end;

define C-function gtk-menu-get-active
  input parameter arg1 :: <GtkMenu>;
  result res :: <GtkWidget>;
  c-name: "gtk_menu_get_active";
end;

define C-function gtk-menu-set-active
  input parameter arg1 :: <GtkMenu>;
  input parameter arg2 :: <guint>;
  c-name: "gtk_menu_set_active";
end;

define C-function gtk-menu-set-accel-group
  input parameter arg1 :: <GtkMenu>;
  input parameter arg2 :: <GtkAccelGroup>;
  c-name: "gtk_menu_set_accel_group";
end;

define C-function gtk-menu-get-accel-group
  input parameter arg1 :: <GtkMenu>;
  result res :: <GtkAccelGroup>;
  c-name: "gtk_menu_get_accel_group";
end;

define C-function gtk-menu-set-accel-path
  input parameter arg1 :: <GtkMenu>;
  input parameter arg2 :: <gchar*>;
  c-name: "gtk_menu_set_accel_path";
end;

define C-function gtk-menu-attach-to-widget
  input parameter arg1 :: <GtkMenu>;
  input parameter arg2 :: <GtkWidget>;
  input parameter arg3 :: <GtkMenuDetachFunc>;
  c-name: "gtk_menu_attach_to_widget";
end;

define C-function gtk-menu-detach
  input parameter arg1 :: <GtkMenu>;
  c-name: "gtk_menu_detach";
end;

define C-function gtk-menu-get-attach-widget
  input parameter arg1 :: <GtkMenu>;
  result res :: <GtkWidget>;
  c-name: "gtk_menu_get_attach_widget";
end;

define C-function gtk-menu-set-tearoff-state
  input parameter arg1 :: <GtkMenu>;
  input parameter arg2 :: <gboolean>;
  c-name: "gtk_menu_set_tearoff_state";
end;

define C-function gtk-menu-get-tearoff-state
  input parameter arg1 :: <GtkMenu>;
  result res :: <gboolean>;
  c-name: "gtk_menu_get_tearoff_state";
end;

define C-function gtk-menu-set-title
  input parameter arg1 :: <GtkMenu>;
  input parameter arg2 :: <gchar*>;
  c-name: "gtk_menu_set_title";
end;

define C-function gtk-menu-get-title
  input parameter arg1 :: <GtkMenu>;
  result res :: <gchar*>;
  c-name: "gtk_menu_get_title";
end;

define C-function gtk-menu-reorder-child
  input parameter arg1 :: <GtkMenu>;
  input parameter arg2 :: <GtkWidget>;
  input parameter arg3 :: <gint>;
  c-name: "gtk_menu_reorder_child";
end;

define C-function gtk-menu-set-screen
  input parameter arg1 :: <GtkMenu>;
  input parameter arg2 :: <GdkScreen>;
  c-name: "gtk_menu_set_screen";
end;

define C-function gtk-menu-attach
  input parameter arg1 :: <GtkMenu>;
  input parameter arg2 :: <GtkWidget>;
  input parameter arg3 :: <guint>;
  input parameter arg4 :: <guint>;
  input parameter arg5 :: <guint>;
  input parameter arg6 :: <guint>;
  c-name: "gtk_menu_attach";
end;

define C-function gtk-menu-set-monitor
  input parameter arg1 :: <GtkMenu>;
  input parameter arg2 :: <gint>;
  c-name: "gtk_menu_set_monitor";
end;

define C-function gtk-menu-get-for-attach-widget
  input parameter arg1 :: <GtkWidget>;
  result res :: <GList>;
  c-name: "gtk_menu_get_for_attach_widget";
end;

define C-function gtk-menu-shell-get-type
  result res :: <GType>;
  c-name: "gtk_menu_shell_get_type";
end;

define C-function gtk-menu-shell-append
  input parameter arg1 :: <GtkMenuShell>;
  input parameter arg2 :: <GtkWidget>;
  c-name: "gtk_menu_shell_append";
end;

define C-function gtk-menu-shell-prepend
  input parameter arg1 :: <GtkMenuShell>;
  input parameter arg2 :: <GtkWidget>;
  c-name: "gtk_menu_shell_prepend";
end;

define C-function gtk-menu-shell-insert
  input parameter arg1 :: <GtkMenuShell>;
  input parameter arg2 :: <GtkWidget>;
  input parameter arg3 :: <gint>;
  c-name: "gtk_menu_shell_insert";
end;

define C-function gtk-menu-shell-deactivate
  input parameter arg1 :: <GtkMenuShell>;
  c-name: "gtk_menu_shell_deactivate";
end;

define C-function gtk-menu-shell-select-item
  input parameter arg1 :: <GtkMenuShell>;
  input parameter arg2 :: <GtkWidget>;
  c-name: "gtk_menu_shell_select_item";
end;

define C-function gtk-menu-shell-deselect
  input parameter arg1 :: <GtkMenuShell>;
  c-name: "gtk_menu_shell_deselect";
end;

define C-function gtk-menu-shell-activate-item
  input parameter arg1 :: <GtkMenuShell>;
  input parameter arg2 :: <GtkWidget>;
  input parameter arg3 :: <gboolean>;
  c-name: "gtk_menu_shell_activate_item";
end;

define C-function gtk-menu-shell-select-first
  input parameter arg1 :: <GtkMenuShell>;
  input parameter arg2 :: <gboolean>;
  c-name: "gtk_menu_shell_select_first";
end;

define C-function gtk-menu-shell-cancel
  input parameter arg1 :: <GtkMenuShell>;
  c-name: "gtk_menu_shell_cancel";
end;

define C-function gtk-menu-shell-get-take-focus
  input parameter arg1 :: <GtkMenuShell>;
  result res :: <gboolean>;
  c-name: "gtk_menu_shell_get_take_focus";
end;

define C-function gtk-menu-shell-set-take-focus
  input parameter arg1 :: <GtkMenuShell>;
  input parameter arg2 :: <gboolean>;
  c-name: "gtk_menu_shell_set_take_focus";
end;

define constant <anonymous-6149> = <C-function-pointer>;
define constant <anonymous-6150> = <C-function-pointer>;
define constant <anonymous-6151> = <C-function-pointer>;
define constant <anonymous-6152> = <C-function-pointer>;
define constant <anonymous-6153> = <C-function-pointer>;
define constant <anonymous-6154> = <C-function-pointer>;
define constant <anonymous-6155> = <C-function-pointer>;
define constant <anonymous-6156> = <C-function-pointer>;
define constant <anonymous-6157> = <C-function-pointer>;
define constant <anonymous-6158> = <C-function-pointer>;
define constant <anonymous-6159> = <C-function-pointer>;
define constant <anonymous-6160> = <C-function-pointer>;
define constant <anonymous-6161> = <C-function-pointer>;
define constant <anonymous-6162> = <C-function-pointer>;
define constant <anonymous-6163> = <C-function-pointer>;
define constant <anonymous-6164> = <C-function-pointer>;
define constant <anonymous-6165> = <C-function-pointer>;
define constant <anonymous-6166> = <C-function-pointer>;
define constant <anonymous-6167> = <C-function-pointer>;
define constant <anonymous-6168> = <C-function-pointer>;
define constant <anonymous-6169> = <C-function-pointer>;
define constant <anonymous-6170> = <C-function-pointer>;
define C-struct <_GtkIMContextClass>
  slot GtkIMContextClass-parent-class :: <_GtkObjectClass>;
  slot GtkIMContextClass-preedit-start :: <anonymous-6149>;
  slot GtkIMContextClass-preedit-end :: <anonymous-6150>;
  slot GtkIMContextClass-preedit-changed :: <anonymous-6151>;
  slot GtkIMContextClass-commit :: <anonymous-6152>;
  slot GtkIMContextClass-retrieve-surrounding :: <anonymous-6153>;
  slot GtkIMContextClass-delete-surrounding :: <anonymous-6154>;
  slot GtkIMContextClass-set-client-window :: <anonymous-6155>;
  slot GtkIMContextClass-get-preedit-string :: <anonymous-6156>;
  slot GtkIMContextClass-filter-keypress :: <anonymous-6157>;
  slot GtkIMContextClass-focus-in :: <anonymous-6158>;
  slot GtkIMContextClass-focus-out :: <anonymous-6159>;
  slot GtkIMContextClass-reset :: <anonymous-6160>;
  slot GtkIMContextClass-set-cursor-location :: <anonymous-6161>;
  slot GtkIMContextClass-set-use-preedit :: <anonymous-6162>;
  slot GtkIMContextClass-set-surrounding :: <anonymous-6163>;
  slot GtkIMContextClass-get-surrounding :: <anonymous-6164>;
  slot GtkIMContextClass-_gtk-reserved1 :: <anonymous-6165>;
  slot GtkIMContextClass-_gtk-reserved2 :: <anonymous-6166>;
  slot GtkIMContextClass-_gtk-reserved3 :: <anonymous-6167>;
  slot GtkIMContextClass-_gtk-reserved4 :: <anonymous-6168>;
  slot GtkIMContextClass-_gtk-reserved5 :: <anonymous-6169>;
  slot GtkIMContextClass-_gtk-reserved6 :: <anonymous-6170>;
end;

define C-pointer-type <GtkIMContextClass> => <_GtkIMContextClass>;

define C-function gtk-im-context-get-type
  result res :: <GType>;
  c-name: "gtk_im_context_get_type";
end;

define C-function gtk-im-context-set-client-window
  input parameter arg1 :: <GtkIMContext>;
  input parameter arg2 :: <GdkWindow>;
  c-name: "gtk_im_context_set_client_window";
end;

define C-function gtk-im-context-get-preedit-string
  input parameter arg1 :: <GtkIMContext>;
  input parameter arg2 :: <gchar**>;
  input parameter arg3 :: <PangoAttrList*>;
  input parameter arg4 :: <gint*>;
  c-name: "gtk_im_context_get_preedit_string";
end;

define C-function gtk-im-context-filter-keypress
  input parameter arg1 :: <GtkIMContext>;
  input parameter arg2 :: <GdkEventKey>;
  result res :: <gboolean>;
  c-name: "gtk_im_context_filter_keypress";
end;

define C-function gtk-im-context-focus-in
  input parameter arg1 :: <GtkIMContext>;
  c-name: "gtk_im_context_focus_in";
end;

define C-function gtk-im-context-focus-out
  input parameter arg1 :: <GtkIMContext>;
  c-name: "gtk_im_context_focus_out";
end;

define C-function gtk-im-context-reset
  input parameter arg1 :: <GtkIMContext>;
  c-name: "gtk_im_context_reset";
end;

define C-function gtk-im-context-set-cursor-location
  input parameter arg1 :: <GtkIMContext>;
  input parameter arg2 :: <GdkRectangle>;
  c-name: "gtk_im_context_set_cursor_location";
end;

define C-function gtk-im-context-set-use-preedit
  input parameter arg1 :: <GtkIMContext>;
  input parameter arg2 :: <gboolean>;
  c-name: "gtk_im_context_set_use_preedit";
end;

define C-function gtk-im-context-set-surrounding
  input parameter arg1 :: <GtkIMContext>;
  input parameter arg2 :: <gchar*>;
  input parameter arg3 :: <gint>;
  input parameter arg4 :: <gint>;
  c-name: "gtk_im_context_set_surrounding";
end;

define C-function gtk-im-context-get-surrounding
  input parameter arg1 :: <GtkIMContext>;
  input parameter arg2 :: <gchar**>;
  input parameter arg3 :: <gint*>;
  result res :: <gboolean>;
  c-name: "gtk_im_context_get_surrounding";
end;

define C-function gtk-im-context-delete-surrounding
  input parameter arg1 :: <GtkIMContext>;
  input parameter arg2 :: <gint>;
  input parameter arg3 :: <gint>;
  result res :: <gboolean>;
  c-name: "gtk_im_context_delete_surrounding";
end;

define C-subtype <_GtkEditable> (<C-void*>) end;
define constant <GtkEditable> = <_GtkEditable>;

define constant <anonymous-6125> = <C-function-pointer>;
define constant <anonymous-6126> = <C-function-pointer>;
define constant <anonymous-6127> = <C-function-pointer>;
define constant <anonymous-6128> = <C-function-pointer>;
define constant <anonymous-6129> = <C-function-pointer>;
define constant <anonymous-6130> = <C-function-pointer>;
define constant <anonymous-6131> = <C-function-pointer>;
define constant <anonymous-6132> = <C-function-pointer>;
define constant <anonymous-6133> = <C-function-pointer>;
define constant <anonymous-6134> = <C-function-pointer>;
define C-struct <_GtkEditableClass>
  slot GtkEditableClass-base-iface :: <_GTypeInterface>;
  slot GtkEditableClass-insert-text :: <anonymous-6125>;
  slot GtkEditableClass-delete-text :: <anonymous-6126>;
  slot GtkEditableClass-changed :: <anonymous-6127>;
  slot GtkEditableClass-do-insert-text :: <anonymous-6128>;
  slot GtkEditableClass-do-delete-text :: <anonymous-6129>;
  slot GtkEditableClass-get-chars :: <anonymous-6130>;
  slot GtkEditableClass-set-selection-bounds :: <anonymous-6131>;
  slot GtkEditableClass-get-selection-bounds :: <anonymous-6132>;
  slot GtkEditableClass-set-position :: <anonymous-6133>;
  slot GtkEditableClass-get-position :: <anonymous-6134>;
end;

define C-pointer-type <GtkEditableClass> => <_GtkEditableClass>;

define C-function gtk-editable-get-type
  result res :: <GType>;
  c-name: "gtk_editable_get_type";
end;

define C-function gtk-editable-select-region
  input parameter arg1 :: <GtkEditable>;
  input parameter arg2 :: <gint>;
  input parameter arg3 :: <gint>;
  c-name: "gtk_editable_select_region";
end;

define C-function gtk-editable-get-selection-bounds
  input parameter arg1 :: <GtkEditable>;
  input parameter arg2 :: <gint*>;
  input parameter arg3 :: <gint*>;
  result res :: <gboolean>;
  c-name: "gtk_editable_get_selection_bounds";
end;

define C-function gtk-editable-insert-text
  input parameter arg1 :: <GtkEditable>;
  input parameter arg2 :: <gchar*>;
  input parameter arg3 :: <gint>;
  input parameter arg4 :: <gint*>;
  c-name: "gtk_editable_insert_text";
end;

define C-function gtk-editable-delete-text
  input parameter arg1 :: <GtkEditable>;
  input parameter arg2 :: <gint>;
  input parameter arg3 :: <gint>;
  c-name: "gtk_editable_delete_text";
end;

define C-function gtk-editable-get-chars
  input parameter arg1 :: <GtkEditable>;
  input parameter arg2 :: <gint>;
  input parameter arg3 :: <gint>;
  result res :: <gchar*>;
  c-name: "gtk_editable_get_chars";
end;

define C-function gtk-editable-cut-clipboard
  input parameter arg1 :: <GtkEditable>;
  c-name: "gtk_editable_cut_clipboard";
end;

define C-function gtk-editable-copy-clipboard
  input parameter arg1 :: <GtkEditable>;
  c-name: "gtk_editable_copy_clipboard";
end;

define C-function gtk-editable-paste-clipboard
  input parameter arg1 :: <GtkEditable>;
  c-name: "gtk_editable_paste_clipboard";
end;

define C-function gtk-editable-delete-selection
  input parameter arg1 :: <GtkEditable>;
  c-name: "gtk_editable_delete_selection";
end;

define C-function gtk-editable-set-position
  input parameter arg1 :: <GtkEditable>;
  input parameter arg2 :: <gint>;
  c-name: "gtk_editable_set_position";
end;

define C-function gtk-editable-get-position
  input parameter arg1 :: <GtkEditable>;
  result res :: <gint>;
  c-name: "gtk_editable_get_position";
end;

define C-function gtk-editable-set-editable
  input parameter arg1 :: <GtkEditable>;
  input parameter arg2 :: <gboolean>;
  c-name: "gtk_editable_set_editable";
end;

define C-function gtk-editable-get-editable
  input parameter arg1 :: <GtkEditable>;
  result res :: <gboolean>;
  c-name: "gtk_editable_get_editable";
end;

define constant <GtkDestDefaults> = <C-int>;
define constant $GTK-DEST-DEFAULT-MOTION = 1;
define constant $GTK-DEST-DEFAULT-HIGHLIGHT = 2;
define constant $GTK-DEST-DEFAULT-DROP = 4;
define constant $GTK-DEST-DEFAULT-ALL = 7;

define constant <GtkTargetFlags> = <C-int>;
define constant $GTK-TARGET-SAME-APP = 1;
define constant $GTK-TARGET-SAME-WIDGET = 2;
define constant $GTK-TARGET-OTHER-APP = 4;
define constant $GTK-TARGET-OTHER-WIDGET = 8;

define C-function gtk-drag-get-data
  input parameter arg1 :: <GtkWidget>;
  input parameter arg2 :: <GdkDragContext>;
  input parameter arg3 :: <GdkAtom>;
  input parameter arg4 :: <guint32>;
  c-name: "gtk_drag_get_data";
end;

define C-function gtk-drag-finish
  input parameter arg1 :: <GdkDragContext>;
  input parameter arg2 :: <gboolean>;
  input parameter arg3 :: <gboolean>;
  input parameter arg4 :: <guint32>;
  c-name: "gtk_drag_finish";
end;

define C-function gtk-drag-get-source-widget
  input parameter arg1 :: <GdkDragContext>;
  result res :: <GtkWidget>;
  c-name: "gtk_drag_get_source_widget";
end;

define C-function gtk-drag-highlight
  input parameter arg1 :: <GtkWidget>;
  c-name: "gtk_drag_highlight";
end;

define C-function gtk-drag-unhighlight
  input parameter arg1 :: <GtkWidget>;
  c-name: "gtk_drag_unhighlight";
end;

define C-function gtk-drag-dest-set
  input parameter arg1 :: <GtkWidget>;
  input parameter arg2 :: <GtkDestDefaults>;
  input parameter arg3 :: <GtkTargetEntry>;
  input parameter arg4 :: <gint>;
  input parameter arg5 :: <GdkDragAction>;
  c-name: "gtk_drag_dest_set";
end;

define C-function gtk-drag-dest-set-proxy
  input parameter arg1 :: <GtkWidget>;
  input parameter arg2 :: <GdkWindow>;
  input parameter arg3 :: <GdkDragProtocol>;
  input parameter arg4 :: <gboolean>;
  c-name: "gtk_drag_dest_set_proxy";
end;

define C-function gtk-drag-dest-unset
  input parameter arg1 :: <GtkWidget>;
  c-name: "gtk_drag_dest_unset";
end;

define C-struct <_GtkTargetList>
  slot GtkTargetList-list :: <GList>;
  slot GtkTargetList-ref-count :: <C-unsigned-int>;
end;

define C-pointer-type <GtkTargetList> => <_GtkTargetList>;

define C-function gtk-drag-dest-find-target
  input parameter arg1 :: <GtkWidget>;
  input parameter arg2 :: <GdkDragContext>;
  input parameter arg3 :: <GtkTargetList>;
  result res :: <GdkAtom>;
  c-name: "gtk_drag_dest_find_target";
end;

define C-function gtk-drag-dest-get-target-list
  input parameter arg1 :: <GtkWidget>;
  result res :: <GtkTargetList>;
  c-name: "gtk_drag_dest_get_target_list";
end;

define C-function gtk-drag-dest-set-target-list
  input parameter arg1 :: <GtkWidget>;
  input parameter arg2 :: <GtkTargetList>;
  c-name: "gtk_drag_dest_set_target_list";
end;

define C-function gtk-drag-dest-add-text-targets
  input parameter arg1 :: <GtkWidget>;
  c-name: "gtk_drag_dest_add_text_targets";
end;

define C-function gtk-drag-dest-add-image-targets
  input parameter arg1 :: <GtkWidget>;
  c-name: "gtk_drag_dest_add_image_targets";
end;

define C-function gtk-drag-dest-add-uri-targets
  input parameter arg1 :: <GtkWidget>;
  c-name: "gtk_drag_dest_add_uri_targets";
end;

define C-function gtk-drag-dest-set-track-motion
  input parameter arg1 :: <GtkWidget>;
  input parameter arg2 :: <gboolean>;
  c-name: "gtk_drag_dest_set_track_motion";
end;

define C-function gtk-drag-dest-get-track-motion
  input parameter arg1 :: <GtkWidget>;
  result res :: <gboolean>;
  c-name: "gtk_drag_dest_get_track_motion";
end;

define C-function gtk-drag-source-set
  input parameter arg1 :: <GtkWidget>;
  input parameter arg2 :: <GdkModifierType>;
  input parameter arg3 :: <GtkTargetEntry>;
  input parameter arg4 :: <gint>;
  input parameter arg5 :: <GdkDragAction>;
  c-name: "gtk_drag_source_set";
end;

define C-function gtk-drag-source-unset
  input parameter arg1 :: <GtkWidget>;
  c-name: "gtk_drag_source_unset";
end;

define C-function gtk-drag-source-get-target-list
  input parameter arg1 :: <GtkWidget>;
  result res :: <GtkTargetList>;
  c-name: "gtk_drag_source_get_target_list";
end;

define C-function gtk-drag-source-set-target-list
  input parameter arg1 :: <GtkWidget>;
  input parameter arg2 :: <GtkTargetList>;
  c-name: "gtk_drag_source_set_target_list";
end;

define C-function gtk-drag-source-add-text-targets
  input parameter arg1 :: <GtkWidget>;
  c-name: "gtk_drag_source_add_text_targets";
end;

define C-function gtk-drag-source-add-image-targets
  input parameter arg1 :: <GtkWidget>;
  c-name: "gtk_drag_source_add_image_targets";
end;

define C-function gtk-drag-source-add-uri-targets
  input parameter arg1 :: <GtkWidget>;
  c-name: "gtk_drag_source_add_uri_targets";
end;

define C-function gtk-drag-source-set-icon
  input parameter arg1 :: <GtkWidget>;
  input parameter arg2 :: <GdkColormap>;
  input parameter arg3 :: <GdkPixmap>;
  input parameter arg4 :: <GdkBitmap>;
  c-name: "gtk_drag_source_set_icon";
end;

define C-function gtk-drag-source-set-icon-pixbuf
  input parameter arg1 :: <GtkWidget>;
  input parameter arg2 :: <GdkPixbuf>;
  c-name: "gtk_drag_source_set_icon_pixbuf";
end;

define C-function gtk-drag-source-set-icon-stock
  input parameter arg1 :: <GtkWidget>;
  input parameter arg2 :: <gchar*>;
  c-name: "gtk_drag_source_set_icon_stock";
end;

define C-function gtk-drag-source-set-icon-name
  input parameter arg1 :: <GtkWidget>;
  input parameter arg2 :: <gchar*>;
  c-name: "gtk_drag_source_set_icon_name";
end;

define C-function gtk-drag-begin
  input parameter arg1 :: <GtkWidget>;
  input parameter arg2 :: <GtkTargetList>;
  input parameter arg3 :: <GdkDragAction>;
  input parameter arg4 :: <gint>;
  input parameter arg5 :: <GdkEvent>;
  result res :: <GdkDragContext>;
  c-name: "gtk_drag_begin";
end;

define C-function gtk-drag-set-icon-widget
  input parameter arg1 :: <GdkDragContext>;
  input parameter arg2 :: <GtkWidget>;
  input parameter arg3 :: <gint>;
  input parameter arg4 :: <gint>;
  c-name: "gtk_drag_set_icon_widget";
end;

define C-function gtk-drag-set-icon-pixmap
  input parameter arg1 :: <GdkDragContext>;
  input parameter arg2 :: <GdkColormap>;
  input parameter arg3 :: <GdkPixmap>;
  input parameter arg4 :: <GdkBitmap>;
  input parameter arg5 :: <gint>;
  input parameter arg6 :: <gint>;
  c-name: "gtk_drag_set_icon_pixmap";
end;

define C-function gtk-drag-set-icon-pixbuf
  input parameter arg1 :: <GdkDragContext>;
  input parameter arg2 :: <GdkPixbuf>;
  input parameter arg3 :: <gint>;
  input parameter arg4 :: <gint>;
  c-name: "gtk_drag_set_icon_pixbuf";
end;

define C-function gtk-drag-set-icon-stock
  input parameter arg1 :: <GdkDragContext>;
  input parameter arg2 :: <gchar*>;
  input parameter arg3 :: <gint>;
  input parameter arg4 :: <gint>;
  c-name: "gtk_drag_set_icon_stock";
end;

define C-function gtk-drag-set-icon-name
  input parameter arg1 :: <GdkDragContext>;
  input parameter arg2 :: <gchar*>;
  input parameter arg3 :: <gint>;
  input parameter arg4 :: <gint>;
  c-name: "gtk_drag_set_icon_name";
end;

define C-function gtk-drag-set-icon-default
  input parameter arg1 :: <GdkDragContext>;
  c-name: "gtk_drag_set_icon_default";
end;

define C-function gtk-drag-check-threshold
  input parameter arg1 :: <GtkWidget>;
  input parameter arg2 :: <gint>;
  input parameter arg3 :: <gint>;
  input parameter arg4 :: <gint>;
  input parameter arg5 :: <gint>;
  result res :: <gboolean>;
  c-name: "gtk_drag_check_threshold";
end;

define C-function gtk-drag-set-default-icon
  input parameter arg1 :: <GdkColormap>;
  input parameter arg2 :: <GdkPixmap>;
  input parameter arg3 :: <GdkBitmap>;
  input parameter arg4 :: <gint>;
  input parameter arg5 :: <gint>;
  c-name: "gtk_drag_set_default_icon";
end;

define C-struct <_GtkTargetPair>
  slot GtkTargetPair-target :: <_GdkAtom>;
  slot GtkTargetPair-flags :: <C-unsigned-int>;
  slot GtkTargetPair-info :: <C-unsigned-int>;
end;

define C-pointer-type <GtkTargetPair> => <_GtkTargetPair>;

define C-function gtk-target-list-new
  input parameter arg1 :: <GtkTargetEntry>;
  input parameter arg2 :: <guint>;
  result res :: <GtkTargetList>;
  c-name: "gtk_target_list_new";
end;

define C-function gtk-target-list-ref
  input parameter arg1 :: <GtkTargetList>;
  result res :: <GtkTargetList>;
  c-name: "gtk_target_list_ref";
end;

define C-function gtk-target-list-unref
  input parameter arg1 :: <GtkTargetList>;
  c-name: "gtk_target_list_unref";
end;

define C-function gtk-target-list-add
  input parameter arg1 :: <GtkTargetList>;
  input parameter arg2 :: <GdkAtom>;
  input parameter arg3 :: <guint>;
  input parameter arg4 :: <guint>;
  c-name: "gtk_target_list_add";
end;

define C-function gtk-target-list-add-text-targets
  input parameter arg1 :: <GtkTargetList>;
  input parameter arg2 :: <guint>;
  c-name: "gtk_target_list_add_text_targets";
end;

define C-subtype <_GtkTextTagTable> (<_GObject>) end;
define constant <GtkTextTagTable> = <_GtkTextTagTable>;

define C-struct <_GtkTextBTree>
end;

define C-pointer-type <GtkTextBTree> => <_GtkTextBTree>;

define C-struct <_GtkTextLogAttrCache>
end;

define C-pointer-type <GtkTextLogAttrCache> => <_GtkTextLogAttrCache>;

define C-subtype <_GtkTextBuffer> (<_GObject>) end;
define constant <GtkTextBuffer> = <_GtkTextBuffer>;

define C-function gtk-target-list-add-rich-text-targets
  input parameter arg1 :: <GtkTargetList>;
  input parameter arg2 :: <guint>;
  input parameter arg3 :: <gboolean>;
  input parameter arg4 :: <GtkTextBuffer>;
  c-name: "gtk_target_list_add_rich_text_targets";
end;

define C-function gtk-target-list-add-image-targets
  input parameter arg1 :: <GtkTargetList>;
  input parameter arg2 :: <guint>;
  input parameter arg3 :: <gboolean>;
  c-name: "gtk_target_list_add_image_targets";
end;

define C-function gtk-target-list-add-uri-targets
  input parameter arg1 :: <GtkTargetList>;
  input parameter arg2 :: <guint>;
  c-name: "gtk_target_list_add_uri_targets";
end;

define C-function gtk-target-list-add-table
  input parameter arg1 :: <GtkTargetList>;
  input parameter arg2 :: <GtkTargetEntry>;
  input parameter arg3 :: <guint>;
  c-name: "gtk_target_list_add_table";
end;

define C-function gtk-target-list-remove
  input parameter arg1 :: <GtkTargetList>;
  input parameter arg2 :: <GdkAtom>;
  c-name: "gtk_target_list_remove";
end;

define C-function gtk-target-list-find
  input parameter arg1 :: <GtkTargetList>;
  input parameter arg2 :: <GdkAtom>;
  input parameter arg3 :: <guint*>;
  result res :: <gboolean>;
  c-name: "gtk_target_list_find";
end;

define C-function gtk-target-table-new-from-list
  input parameter arg1 :: <GtkTargetList>;
  input parameter arg2 :: <gint*>;
  result res :: <GtkTargetEntry>;
  c-name: "gtk_target_table_new_from_list";
end;

define C-function gtk-target-table-free
  input parameter arg1 :: <GtkTargetEntry>;
  input parameter arg2 :: <gint>;
  c-name: "gtk_target_table_free";
end;

define C-function gtk-selection-owner-set
  input parameter arg1 :: <GtkWidget>;
  input parameter arg2 :: <GdkAtom>;
  input parameter arg3 :: <guint32>;
  result res :: <gboolean>;
  c-name: "gtk_selection_owner_set";
end;

define C-function gtk-selection-owner-set-for-display
  input parameter arg1 :: <GdkDisplay>;
  input parameter arg2 :: <GtkWidget>;
  input parameter arg3 :: <GdkAtom>;
  input parameter arg4 :: <guint32>;
  result res :: <gboolean>;
  c-name: "gtk_selection_owner_set_for_display";
end;

define C-function gtk-selection-add-target
  input parameter arg1 :: <GtkWidget>;
  input parameter arg2 :: <GdkAtom>;
  input parameter arg3 :: <GdkAtom>;
  input parameter arg4 :: <guint>;
  c-name: "gtk_selection_add_target";
end;

define C-function gtk-selection-add-targets
  input parameter arg1 :: <GtkWidget>;
  input parameter arg2 :: <GdkAtom>;
  input parameter arg3 :: <GtkTargetEntry>;
  input parameter arg4 :: <guint>;
  c-name: "gtk_selection_add_targets";
end;

define C-function gtk-selection-clear-targets
  input parameter arg1 :: <GtkWidget>;
  input parameter arg2 :: <GdkAtom>;
  c-name: "gtk_selection_clear_targets";
end;

define C-function gtk-selection-convert
  input parameter arg1 :: <GtkWidget>;
  input parameter arg2 :: <GdkAtom>;
  input parameter arg3 :: <GdkAtom>;
  input parameter arg4 :: <guint32>;
  result res :: <gboolean>;
  c-name: "gtk_selection_convert";
end;

define C-function gtk-selection-data-set
  input parameter arg1 :: <GtkSelectionData>;
  input parameter arg2 :: <GdkAtom>;
  input parameter arg3 :: <gint>;
  input parameter arg4 :: <guchar*>;
  input parameter arg5 :: <gint>;
  c-name: "gtk_selection_data_set";
end;

define C-function gtk-selection-data-set-text
  input parameter arg1 :: <GtkSelectionData>;
  input parameter arg2 :: <gchar*>;
  input parameter arg3 :: <gint>;
  result res :: <gboolean>;
  c-name: "gtk_selection_data_set_text";
end;

define C-function gtk-selection-data-get-text
  input parameter arg1 :: <GtkSelectionData>;
  result res :: <guchar*>;
  c-name: "gtk_selection_data_get_text";
end;

define C-function gtk-selection-data-set-pixbuf
  input parameter arg1 :: <GtkSelectionData>;
  input parameter arg2 :: <GdkPixbuf>;
  result res :: <gboolean>;
  c-name: "gtk_selection_data_set_pixbuf";
end;

define C-function gtk-selection-data-get-pixbuf
  input parameter arg1 :: <GtkSelectionData>;
  result res :: <GdkPixbuf>;
  c-name: "gtk_selection_data_get_pixbuf";
end;

define C-function gtk-selection-data-set-uris
  input parameter arg1 :: <GtkSelectionData>;
  input parameter arg2 :: <gchar**>;
  result res :: <gboolean>;
  c-name: "gtk_selection_data_set_uris";
end;

define C-function gtk-selection-data-get-uris
  input parameter arg1 :: <GtkSelectionData>;
  result res :: <gchar**>;
  c-name: "gtk_selection_data_get_uris";
end;

define C-pointer-type <GdkAtom**> => <GdkAtom*>;
define C-function gtk-selection-data-get-targets
  input parameter arg1 :: <GtkSelectionData>;
  input parameter arg2 :: <GdkAtom**>;
  input parameter arg3 :: <gint*>;
  result res :: <gboolean>;
  c-name: "gtk_selection_data_get_targets";
end;

define C-function gtk-selection-data-targets-include-text
  input parameter arg1 :: <GtkSelectionData>;
  result res :: <gboolean>;
  c-name: "gtk_selection_data_targets_include_text";
end;

define C-function gtk-selection-data-targets-include-rich-text
  input parameter arg1 :: <GtkSelectionData>;
  input parameter arg2 :: <GtkTextBuffer>;
  result res :: <gboolean>;
  c-name: "gtk_selection_data_targets_include_rich_text";
end;

define C-function gtk-selection-data-targets-include-image
  input parameter arg1 :: <GtkSelectionData>;
  input parameter arg2 :: <gboolean>;
  result res :: <gboolean>;
  c-name: "gtk_selection_data_targets_include_image";
end;

define C-function gtk-selection-data-targets-include-uri
  input parameter arg1 :: <GtkSelectionData>;
  result res :: <gboolean>;
  c-name: "gtk_selection_data_targets_include_uri";
end;

define C-function gtk-targets-include-text
  input parameter arg1 :: <GdkAtom*>;
  input parameter arg2 :: <gint>;
  result res :: <gboolean>;
  c-name: "gtk_targets_include_text";
end;

define C-function gtk-targets-include-rich-text
  input parameter arg1 :: <GdkAtom*>;
  input parameter arg2 :: <gint>;
  input parameter arg3 :: <GtkTextBuffer>;
  result res :: <gboolean>;
  c-name: "gtk_targets_include_rich_text";
end;

define C-function gtk-targets-include-image
  input parameter arg1 :: <GdkAtom*>;
  input parameter arg2 :: <gint>;
  input parameter arg3 :: <gboolean>;
  result res :: <gboolean>;
  c-name: "gtk_targets_include_image";
end;

define C-function gtk-targets-include-uri
  input parameter arg1 :: <GdkAtom*>;
  input parameter arg2 :: <gint>;
  result res :: <gboolean>;
  c-name: "gtk_targets_include_uri";
end;

define C-function gtk-selection-remove-all
  input parameter arg1 :: <GtkWidget>;
  c-name: "gtk_selection_remove_all";
end;

define C-function gtk-selection-clear
  input parameter arg1 :: <GtkWidget>;
  input parameter arg2 :: <GdkEventSelection>;
  result res :: <gboolean>;
  c-name: "gtk_selection_clear";
end;

define C-function gtk-selection-data-get-type
  result res :: <GType>;
  c-name: "gtk_selection_data_get_type";
end;

define C-function gtk-selection-data-copy
  input parameter arg1 :: <GtkSelectionData>;
  result res :: <GtkSelectionData>;
  c-name: "gtk_selection_data_copy";
end;

define C-function gtk-selection-data-free
  input parameter arg1 :: <GtkSelectionData>;
  c-name: "gtk_selection_data_free";
end;

define C-function gtk-target-list-get-type
  result res :: <GType>;
  c-name: "gtk_target_list_get_type";
end;

define constant <GtkTextSearchFlags> = <C-int>;
define constant $GTK-TEXT-SEARCH-VISIBLE-ONLY = 1;
define constant $GTK-TEXT-SEARCH-TEXT-ONLY = 2;

define C-struct <_GtkTextIter>
  slot GtkTextIter-dummy1 :: <C-void*>;
  slot GtkTextIter-dummy2 :: <C-void*>;
  slot GtkTextIter-dummy3 :: <C-signed-int>;
  slot GtkTextIter-dummy4 :: <C-signed-int>;
  slot GtkTextIter-dummy5 :: <C-signed-int>;
  slot GtkTextIter-dummy6 :: <C-signed-int>;
  slot GtkTextIter-dummy7 :: <C-signed-int>;
  slot GtkTextIter-dummy8 :: <C-signed-int>;
  slot GtkTextIter-dummy9 :: <C-void*>;
  slot GtkTextIter-dummy10 :: <C-void*>;
  slot GtkTextIter-dummy11 :: <C-signed-int>;
  slot GtkTextIter-dummy12 :: <C-signed-int>;
  slot GtkTextIter-dummy13 :: <C-signed-int>;
  slot GtkTextIter-dummy14 :: <C-void*>;
end;

define C-pointer-type <GtkTextIter> => <_GtkTextIter>;

define C-function gtk-text-iter-get-buffer
  input parameter arg1 :: <GtkTextIter>;
  result res :: <GtkTextBuffer>;
  c-name: "gtk_text_iter_get_buffer";
end;

define C-function gtk-text-iter-copy
  input parameter arg1 :: <GtkTextIter>;
  result res :: <GtkTextIter>;
  c-name: "gtk_text_iter_copy";
end;

define C-function gtk-text-iter-free
  input parameter arg1 :: <GtkTextIter>;
  c-name: "gtk_text_iter_free";
end;

define C-function gtk-text-iter-get-type
  result res :: <GType>;
  c-name: "gtk_text_iter_get_type";
end;

define C-function gtk-text-iter-get-offset
  input parameter arg1 :: <GtkTextIter>;
  result res :: <gint>;
  c-name: "gtk_text_iter_get_offset";
end;

define C-function gtk-text-iter-get-line
  input parameter arg1 :: <GtkTextIter>;
  result res :: <gint>;
  c-name: "gtk_text_iter_get_line";
end;

define C-function gtk-text-iter-get-line-offset
  input parameter arg1 :: <GtkTextIter>;
  result res :: <gint>;
  c-name: "gtk_text_iter_get_line_offset";
end;

define C-function gtk-text-iter-get-line-index
  input parameter arg1 :: <GtkTextIter>;
  result res :: <gint>;
  c-name: "gtk_text_iter_get_line_index";
end;

define C-function gtk-text-iter-get-visible-line-offset
  input parameter arg1 :: <GtkTextIter>;
  result res :: <gint>;
  c-name: "gtk_text_iter_get_visible_line_offset";
end;

define C-function gtk-text-iter-get-visible-line-index
  input parameter arg1 :: <GtkTextIter>;
  result res :: <gint>;
  c-name: "gtk_text_iter_get_visible_line_index";
end;

define C-function gtk-text-iter-get-char
  input parameter arg1 :: <GtkTextIter>;
  result res :: <gunichar>;
  c-name: "gtk_text_iter_get_char";
end;

define C-function gtk-text-iter-get-slice
  input parameter arg1 :: <GtkTextIter>;
  input parameter arg2 :: <GtkTextIter>;
  result res :: <gchar*>;
  c-name: "gtk_text_iter_get_slice";
end;

define C-function gtk-text-iter-get-text
  input parameter arg1 :: <GtkTextIter>;
  input parameter arg2 :: <GtkTextIter>;
  result res :: <gchar*>;
  c-name: "gtk_text_iter_get_text";
end;

define C-function gtk-text-iter-get-visible-slice
  input parameter arg1 :: <GtkTextIter>;
  input parameter arg2 :: <GtkTextIter>;
  result res :: <gchar*>;
  c-name: "gtk_text_iter_get_visible_slice";
end;

define C-function gtk-text-iter-get-visible-text
  input parameter arg1 :: <GtkTextIter>;
  input parameter arg2 :: <GtkTextIter>;
  result res :: <gchar*>;
  c-name: "gtk_text_iter_get_visible_text";
end;

define C-function gtk-text-iter-get-pixbuf
  input parameter arg1 :: <GtkTextIter>;
  result res :: <GdkPixbuf>;
  c-name: "gtk_text_iter_get_pixbuf";
end;

define C-function gtk-text-iter-get-marks
  input parameter arg1 :: <GtkTextIter>;
  result res :: <GSList>;
  c-name: "gtk_text_iter_get_marks";
end;

define C-subtype <_GtkTextChildAnchor> (<_GObject>) end;
define constant <GtkTextChildAnchor> = <_GtkTextChildAnchor>;

define C-function gtk-text-iter-get-child-anchor
  input parameter arg1 :: <GtkTextIter>;
  result res :: <GtkTextChildAnchor>;
  c-name: "gtk_text_iter_get_child_anchor";
end;

define C-function gtk-text-iter-get-toggled-tags
  input parameter arg1 :: <GtkTextIter>;
  input parameter arg2 :: <gboolean>;
  result res :: <GSList>;
  c-name: "gtk_text_iter_get_toggled_tags";
end;

define C-struct <_GtkTextAppearance>
  slot GtkTextAppearance-bg-color :: <_GdkColor>;
  slot GtkTextAppearance-fg-color :: <_GdkColor>;
  slot GtkTextAppearance-bg-stipple :: <GdkBitmap>;
  slot GtkTextAppearance-fg-stipple :: <GdkBitmap>;
  slot GtkTextAppearance-rise :: <C-signed-int>;
  slot GtkTextAppearance-padding1 :: <C-void*>;
  bitfield slot GtkTextAppearance-underline :: <C-int>, width: 4;
  bitfield slot GtkTextAppearance-strikethrough :: <C-int>, width: 1;
  bitfield slot GtkTextAppearance-draw-bg :: <C-int>, width: 1;
  bitfield slot GtkTextAppearance-inside-selection :: <C-int>, width: 1;
  bitfield slot GtkTextAppearance-is-text :: <C-int>, width: 1;
  bitfield slot GtkTextAppearance-pad1 :: <C-int>, width: 1;
  bitfield slot GtkTextAppearance-pad2 :: <C-int>, width: 1;
  bitfield slot GtkTextAppearance-pad3 :: <C-int>, width: 1;
  bitfield slot GtkTextAppearance-pad4 :: <C-int>, width: 1;
end;

define C-pointer-type <GtkTextAppearance> => <_GtkTextAppearance>;

define C-struct <_GtkTextAttributes>
  slot GtkTextAttributes-refcount :: <C-unsigned-int>;
  slot GtkTextAttributes-appearance :: <_GtkTextAppearance>;
  slot GtkTextAttributes-justification :: <GtkJustification>;
  slot GtkTextAttributes-direction :: <GtkTextDirection>;
  slot GtkTextAttributes-font :: <PangoFontDescription>;
  slot GtkTextAttributes-font-scale :: <C-double>;
  slot GtkTextAttributes-left-margin :: <C-signed-int>;
  slot GtkTextAttributes-indent :: <C-signed-int>;
  slot GtkTextAttributes-right-margin :: <C-signed-int>;
  slot GtkTextAttributes-pixels-above-lines :: <C-signed-int>;
  slot GtkTextAttributes-pixels-below-lines :: <C-signed-int>;
  slot GtkTextAttributes-pixels-inside-wrap :: <C-signed-int>;
  slot GtkTextAttributes-tabs :: <PangoTabArray>;
  slot GtkTextAttributes-wrap-mode :: <GtkWrapMode>;
  slot GtkTextAttributes-language :: <PangoLanguage>;
  slot GtkTextAttributes-pg-bg-color :: <GdkColor>;
  bitfield slot GtkTextAttributes-invisible :: <C-int>, width: 1;
  bitfield slot GtkTextAttributes-bg-full-height :: <C-int>, width: 1;
  bitfield slot GtkTextAttributes-editable :: <C-int>, width: 1;
  bitfield slot GtkTextAttributes-realized :: <C-int>, width: 1;
  bitfield slot GtkTextAttributes-pad1 :: <C-int>, width: 1;
  bitfield slot GtkTextAttributes-pad2 :: <C-int>, width: 1;
  bitfield slot GtkTextAttributes-pad3 :: <C-int>, width: 1;
  bitfield slot GtkTextAttributes-pad4 :: <C-int>, width: 1;
end;

define C-pointer-type <GtkTextAttributes> => <_GtkTextAttributes>;

define C-subtype <_GtkTextTag> (<_GObject>) end;
define constant <GtkTextTag> = <_GtkTextTag>;

define C-function gtk-text-iter-begins-tag
  input parameter arg1 :: <GtkTextIter>;
  input parameter arg2 :: <GtkTextTag>;
  result res :: <gboolean>;
  c-name: "gtk_text_iter_begins_tag";
end;

define C-function gtk-text-iter-ends-tag
  input parameter arg1 :: <GtkTextIter>;
  input parameter arg2 :: <GtkTextTag>;
  result res :: <gboolean>;
  c-name: "gtk_text_iter_ends_tag";
end;

define C-function gtk-text-iter-toggles-tag
  input parameter arg1 :: <GtkTextIter>;
  input parameter arg2 :: <GtkTextTag>;
  result res :: <gboolean>;
  c-name: "gtk_text_iter_toggles_tag";
end;

define C-function gtk-text-iter-has-tag
  input parameter arg1 :: <GtkTextIter>;
  input parameter arg2 :: <GtkTextTag>;
  result res :: <gboolean>;
  c-name: "gtk_text_iter_has_tag";
end;

define C-function gtk-text-iter-get-tags
  input parameter arg1 :: <GtkTextIter>;
  result res :: <GSList>;
  c-name: "gtk_text_iter_get_tags";
end;

define C-function gtk-text-iter-editable
  input parameter arg1 :: <GtkTextIter>;
  input parameter arg2 :: <gboolean>;
  result res :: <gboolean>;
  c-name: "gtk_text_iter_editable";
end;

define C-function gtk-text-iter-can-insert
  input parameter arg1 :: <GtkTextIter>;
  input parameter arg2 :: <gboolean>;
  result res :: <gboolean>;
  c-name: "gtk_text_iter_can_insert";
end;

define C-function gtk-text-iter-starts-word
  input parameter arg1 :: <GtkTextIter>;
  result res :: <gboolean>;
  c-name: "gtk_text_iter_starts_word";
end;

define C-function gtk-text-iter-ends-word
  input parameter arg1 :: <GtkTextIter>;
  result res :: <gboolean>;
  c-name: "gtk_text_iter_ends_word";
end;

define C-function gtk-text-iter-inside-word
  input parameter arg1 :: <GtkTextIter>;
  result res :: <gboolean>;
  c-name: "gtk_text_iter_inside_word";
end;

define C-function gtk-text-iter-starts-sentence
  input parameter arg1 :: <GtkTextIter>;
  result res :: <gboolean>;
  c-name: "gtk_text_iter_starts_sentence";
end;

define C-function gtk-text-iter-ends-sentence
  input parameter arg1 :: <GtkTextIter>;
  result res :: <gboolean>;
  c-name: "gtk_text_iter_ends_sentence";
end;

define C-function gtk-text-iter-inside-sentence
  input parameter arg1 :: <GtkTextIter>;
  result res :: <gboolean>;
  c-name: "gtk_text_iter_inside_sentence";
end;

define C-function gtk-text-iter-starts-line
  input parameter arg1 :: <GtkTextIter>;
  result res :: <gboolean>;
  c-name: "gtk_text_iter_starts_line";
end;

define C-function gtk-text-iter-ends-line
  input parameter arg1 :: <GtkTextIter>;
  result res :: <gboolean>;
  c-name: "gtk_text_iter_ends_line";
end;

define C-function gtk-text-iter-is-cursor-position
  input parameter arg1 :: <GtkTextIter>;
  result res :: <gboolean>;
  c-name: "gtk_text_iter_is_cursor_position";
end;

define C-function gtk-text-iter-get-chars-in-line
  input parameter arg1 :: <GtkTextIter>;
  result res :: <gint>;
  c-name: "gtk_text_iter_get_chars_in_line";
end;

define C-function gtk-text-iter-get-bytes-in-line
  input parameter arg1 :: <GtkTextIter>;
  result res :: <gint>;
  c-name: "gtk_text_iter_get_bytes_in_line";
end;

define C-function gtk-text-iter-get-attributes
  input parameter arg1 :: <GtkTextIter>;
  input parameter arg2 :: <GtkTextAttributes>;
  result res :: <gboolean>;
  c-name: "gtk_text_iter_get_attributes";
end;

define C-function gtk-text-iter-get-language
  input parameter arg1 :: <GtkTextIter>;
  result res :: <PangoLanguage>;
  c-name: "gtk_text_iter_get_language";
end;

define C-function gtk-text-iter-is-end
  input parameter arg1 :: <GtkTextIter>;
  result res :: <gboolean>;
  c-name: "gtk_text_iter_is_end";
end;

define C-function gtk-text-iter-is-start
  input parameter arg1 :: <GtkTextIter>;
  result res :: <gboolean>;
  c-name: "gtk_text_iter_is_start";
end;

define C-function gtk-text-iter-forward-char
  input parameter arg1 :: <GtkTextIter>;
  result res :: <gboolean>;
  c-name: "gtk_text_iter_forward_char";
end;

define C-function gtk-text-iter-backward-char
  input parameter arg1 :: <GtkTextIter>;
  result res :: <gboolean>;
  c-name: "gtk_text_iter_backward_char";
end;

define C-function gtk-text-iter-forward-chars
  input parameter arg1 :: <GtkTextIter>;
  input parameter arg2 :: <gint>;
  result res :: <gboolean>;
  c-name: "gtk_text_iter_forward_chars";
end;

define C-function gtk-text-iter-backward-chars
  input parameter arg1 :: <GtkTextIter>;
  input parameter arg2 :: <gint>;
  result res :: <gboolean>;
  c-name: "gtk_text_iter_backward_chars";
end;

define C-function gtk-text-iter-forward-line
  input parameter arg1 :: <GtkTextIter>;
  result res :: <gboolean>;
  c-name: "gtk_text_iter_forward_line";
end;

define C-function gtk-text-iter-backward-line
  input parameter arg1 :: <GtkTextIter>;
  result res :: <gboolean>;
  c-name: "gtk_text_iter_backward_line";
end;

define C-function gtk-text-iter-forward-lines
  input parameter arg1 :: <GtkTextIter>;
  input parameter arg2 :: <gint>;
  result res :: <gboolean>;
  c-name: "gtk_text_iter_forward_lines";
end;

define C-function gtk-text-iter-backward-lines
  input parameter arg1 :: <GtkTextIter>;
  input parameter arg2 :: <gint>;
  result res :: <gboolean>;
  c-name: "gtk_text_iter_backward_lines";
end;

define C-function gtk-text-iter-forward-word-end
  input parameter arg1 :: <GtkTextIter>;
  result res :: <gboolean>;
  c-name: "gtk_text_iter_forward_word_end";
end;

define C-function gtk-text-iter-backward-word-start
  input parameter arg1 :: <GtkTextIter>;
  result res :: <gboolean>;
  c-name: "gtk_text_iter_backward_word_start";
end;

define C-function gtk-text-iter-forward-word-ends
  input parameter arg1 :: <GtkTextIter>;
  input parameter arg2 :: <gint>;
  result res :: <gboolean>;
  c-name: "gtk_text_iter_forward_word_ends";
end;

define C-function gtk-text-iter-backward-word-starts
  input parameter arg1 :: <GtkTextIter>;
  input parameter arg2 :: <gint>;
  result res :: <gboolean>;
  c-name: "gtk_text_iter_backward_word_starts";
end;

define C-function gtk-text-iter-forward-visible-line
  input parameter arg1 :: <GtkTextIter>;
  result res :: <gboolean>;
  c-name: "gtk_text_iter_forward_visible_line";
end;

define C-function gtk-text-iter-backward-visible-line
  input parameter arg1 :: <GtkTextIter>;
  result res :: <gboolean>;
  c-name: "gtk_text_iter_backward_visible_line";
end;

define C-function gtk-text-iter-forward-visible-lines
  input parameter arg1 :: <GtkTextIter>;
  input parameter arg2 :: <gint>;
  result res :: <gboolean>;
  c-name: "gtk_text_iter_forward_visible_lines";
end;

define C-function gtk-text-iter-backward-visible-lines
  input parameter arg1 :: <GtkTextIter>;
  input parameter arg2 :: <gint>;
  result res :: <gboolean>;
  c-name: "gtk_text_iter_backward_visible_lines";
end;

define C-function gtk-text-iter-forward-visible-word-end
  input parameter arg1 :: <GtkTextIter>;
  result res :: <gboolean>;
  c-name: "gtk_text_iter_forward_visible_word_end";
end;

define C-function gtk-text-iter-backward-visible-word-start
  input parameter arg1 :: <GtkTextIter>;
  result res :: <gboolean>;
  c-name: "gtk_text_iter_backward_visible_word_start";
end;

define C-function gtk-text-iter-forward-visible-word-ends
  input parameter arg1 :: <GtkTextIter>;
  input parameter arg2 :: <gint>;
  result res :: <gboolean>;
  c-name: "gtk_text_iter_forward_visible_word_ends";
end;

define C-function gtk-text-iter-backward-visible-word-starts
  input parameter arg1 :: <GtkTextIter>;
  input parameter arg2 :: <gint>;
  result res :: <gboolean>;
  c-name: "gtk_text_iter_backward_visible_word_starts";
end;

define C-function gtk-text-iter-forward-sentence-end
  input parameter arg1 :: <GtkTextIter>;
  result res :: <gboolean>;
  c-name: "gtk_text_iter_forward_sentence_end";
end;

define C-function gtk-text-iter-backward-sentence-start
  input parameter arg1 :: <GtkTextIter>;
  result res :: <gboolean>;
  c-name: "gtk_text_iter_backward_sentence_start";
end;

define C-function gtk-text-iter-forward-sentence-ends
  input parameter arg1 :: <GtkTextIter>;
  input parameter arg2 :: <gint>;
  result res :: <gboolean>;
  c-name: "gtk_text_iter_forward_sentence_ends";
end;

define C-function gtk-text-iter-backward-sentence-starts
  input parameter arg1 :: <GtkTextIter>;
  input parameter arg2 :: <gint>;
  result res :: <gboolean>;
  c-name: "gtk_text_iter_backward_sentence_starts";
end;

define C-function gtk-text-iter-forward-cursor-position
  input parameter arg1 :: <GtkTextIter>;
  result res :: <gboolean>;
  c-name: "gtk_text_iter_forward_cursor_position";
end;

define C-function gtk-text-iter-backward-cursor-position
  input parameter arg1 :: <GtkTextIter>;
  result res :: <gboolean>;
  c-name: "gtk_text_iter_backward_cursor_position";
end;

define C-function gtk-text-iter-forward-cursor-positions
  input parameter arg1 :: <GtkTextIter>;
  input parameter arg2 :: <gint>;
  result res :: <gboolean>;
  c-name: "gtk_text_iter_forward_cursor_positions";
end;

define C-function gtk-text-iter-backward-cursor-positions
  input parameter arg1 :: <GtkTextIter>;
  input parameter arg2 :: <gint>;
  result res :: <gboolean>;
  c-name: "gtk_text_iter_backward_cursor_positions";
end;

define C-function gtk-text-iter-forward-visible-cursor-position
  input parameter arg1 :: <GtkTextIter>;
  result res :: <gboolean>;
  c-name: "gtk_text_iter_forward_visible_cursor_position";
end;

define C-function gtk-text-iter-backward-visible-cursor-position
  input parameter arg1 :: <GtkTextIter>;
  result res :: <gboolean>;
  c-name: "gtk_text_iter_backward_visible_cursor_position";
end;

define C-function gtk-text-iter-forward-visible-cursor-positions
  input parameter arg1 :: <GtkTextIter>;
  input parameter arg2 :: <gint>;
  result res :: <gboolean>;
  c-name: "gtk_text_iter_forward_visible_cursor_positions";
end;

define C-function gtk-text-iter-backward-visible-cursor-positions
  input parameter arg1 :: <GtkTextIter>;
  input parameter arg2 :: <gint>;
  result res :: <gboolean>;
  c-name: "gtk_text_iter_backward_visible_cursor_positions";
end;

define C-function gtk-text-iter-set-offset
  input parameter arg1 :: <GtkTextIter>;
  input parameter arg2 :: <gint>;
  c-name: "gtk_text_iter_set_offset";
end;

define C-function gtk-text-iter-set-line
  input parameter arg1 :: <GtkTextIter>;
  input parameter arg2 :: <gint>;
  c-name: "gtk_text_iter_set_line";
end;

define C-function gtk-text-iter-set-line-offset
  input parameter arg1 :: <GtkTextIter>;
  input parameter arg2 :: <gint>;
  c-name: "gtk_text_iter_set_line_offset";
end;

define C-function gtk-text-iter-set-line-index
  input parameter arg1 :: <GtkTextIter>;
  input parameter arg2 :: <gint>;
  c-name: "gtk_text_iter_set_line_index";
end;

define C-function gtk-text-iter-forward-to-end
  input parameter arg1 :: <GtkTextIter>;
  c-name: "gtk_text_iter_forward_to_end";
end;

define C-function gtk-text-iter-forward-to-line-end
  input parameter arg1 :: <GtkTextIter>;
  result res :: <gboolean>;
  c-name: "gtk_text_iter_forward_to_line_end";
end;

define C-function gtk-text-iter-set-visible-line-offset
  input parameter arg1 :: <GtkTextIter>;
  input parameter arg2 :: <gint>;
  c-name: "gtk_text_iter_set_visible_line_offset";
end;

define C-function gtk-text-iter-set-visible-line-index
  input parameter arg1 :: <GtkTextIter>;
  input parameter arg2 :: <gint>;
  c-name: "gtk_text_iter_set_visible_line_index";
end;

define C-function gtk-text-iter-forward-to-tag-toggle
  input parameter arg1 :: <GtkTextIter>;
  input parameter arg2 :: <GtkTextTag>;
  result res :: <gboolean>;
  c-name: "gtk_text_iter_forward_to_tag_toggle";
end;

define C-function gtk-text-iter-backward-to-tag-toggle
  input parameter arg1 :: <GtkTextIter>;
  input parameter arg2 :: <GtkTextTag>;
  result res :: <gboolean>;
  c-name: "gtk_text_iter_backward_to_tag_toggle";
end;

define constant <anonymous-5754> = <C-function-pointer>;
define constant <GtkTextCharPredicate> = <anonymous-5754>;

define C-function gtk-text-iter-forward-find-char
  input parameter arg1 :: <GtkTextIter>;
  input parameter arg2 :: <GtkTextCharPredicate>;
  input parameter arg3 :: <gpointer>;
  input parameter arg4 :: <GtkTextIter>;
  result res :: <gboolean>;
  c-name: "gtk_text_iter_forward_find_char";
end;

define C-function gtk-text-iter-backward-find-char
  input parameter arg1 :: <GtkTextIter>;
  input parameter arg2 :: <GtkTextCharPredicate>;
  input parameter arg3 :: <gpointer>;
  input parameter arg4 :: <GtkTextIter>;
  result res :: <gboolean>;
  c-name: "gtk_text_iter_backward_find_char";
end;

define C-function gtk-text-iter-forward-search
  input parameter arg1 :: <GtkTextIter>;
  input parameter arg2 :: <gchar*>;
  input parameter arg3 :: <GtkTextSearchFlags>;
  input parameter arg4 :: <GtkTextIter>;
  input parameter arg5 :: <GtkTextIter>;
  input parameter arg6 :: <GtkTextIter>;
  result res :: <gboolean>;
  c-name: "gtk_text_iter_forward_search";
end;

define C-function gtk-text-iter-backward-search
  input parameter arg1 :: <GtkTextIter>;
  input parameter arg2 :: <gchar*>;
  input parameter arg3 :: <GtkTextSearchFlags>;
  input parameter arg4 :: <GtkTextIter>;
  input parameter arg5 :: <GtkTextIter>;
  input parameter arg6 :: <GtkTextIter>;
  result res :: <gboolean>;
  c-name: "gtk_text_iter_backward_search";
end;

define C-function gtk-text-iter-equal
  input parameter arg1 :: <GtkTextIter>;
  input parameter arg2 :: <GtkTextIter>;
  result res :: <gboolean>;
  c-name: "gtk_text_iter_equal";
end;

define C-function gtk-text-iter-compare
  input parameter arg1 :: <GtkTextIter>;
  input parameter arg2 :: <GtkTextIter>;
  result res :: <gint>;
  c-name: "gtk_text_iter_compare";
end;

define C-function gtk-text-iter-in-range
  input parameter arg1 :: <GtkTextIter>;
  input parameter arg2 :: <GtkTextIter>;
  input parameter arg3 :: <GtkTextIter>;
  result res :: <gboolean>;
  c-name: "gtk_text_iter_in_range";
end;

define C-function gtk-text-iter-order
  input parameter arg1 :: <GtkTextIter>;
  input parameter arg2 :: <GtkTextIter>;
  c-name: "gtk_text_iter_order";
end;

define constant <anonymous-5662> = <C-function-pointer>;
define constant <anonymous-5663> = <C-function-pointer>;
define constant <anonymous-5664> = <C-function-pointer>;
define constant <anonymous-5665> = <C-function-pointer>;
define C-struct <_GtkTextChildAnchorClass>
  slot GtkTextChildAnchorClass-parent-class :: <_GObjectClass>;
  slot GtkTextChildAnchorClass-_gtk-reserved1 :: <anonymous-5662>;
  slot GtkTextChildAnchorClass-_gtk-reserved2 :: <anonymous-5663>;
  slot GtkTextChildAnchorClass-_gtk-reserved3 :: <anonymous-5664>;
  slot GtkTextChildAnchorClass-_gtk-reserved4 :: <anonymous-5665>;
end;

define C-pointer-type <GtkTextChildAnchorClass> => <_GtkTextChildAnchorClass>;

define C-function gtk-text-child-anchor-get-type
  result res :: <GType>;
  c-name: "gtk_text_child_anchor_get_type";
end;

define C-function gtk-text-child-anchor-new
  result res :: <GtkTextChildAnchor>;
  c-name: "gtk_text_child_anchor_new";
end;

define C-function gtk-text-child-anchor-get-widgets
  input parameter arg1 :: <GtkTextChildAnchor>;
  result res :: <GList>;
  c-name: "gtk_text_child_anchor_get_widgets";
end;

define C-function gtk-text-child-anchor-get-deleted
  input parameter arg1 :: <GtkTextChildAnchor>;
  result res :: <gboolean>;
  c-name: "gtk_text_child_anchor_get_deleted";
end;

define constant <anonymous-5629> = <C-function-pointer>;
define constant <anonymous-5630> = <C-function-pointer>;
define constant <anonymous-5631> = <C-function-pointer>;
define constant <anonymous-5632> = <C-function-pointer>;
define constant <anonymous-5633> = <C-function-pointer>;
define C-struct <_GtkTextTagClass>
  slot GtkTextTagClass-parent-class :: <_GObjectClass>;
  slot GtkTextTagClass-event :: <anonymous-5629>;
  slot GtkTextTagClass-_gtk-reserved1 :: <anonymous-5630>;
  slot GtkTextTagClass-_gtk-reserved2 :: <anonymous-5631>;
  slot GtkTextTagClass-_gtk-reserved3 :: <anonymous-5632>;
  slot GtkTextTagClass-_gtk-reserved4 :: <anonymous-5633>;
end;

define C-pointer-type <GtkTextTagClass> => <_GtkTextTagClass>;

define C-function gtk-text-tag-get-type
  result res :: <GType>;
  c-name: "gtk_text_tag_get_type";
end;

define C-function gtk-text-tag-new
  input parameter arg1 :: <gchar*>;
  result res :: <GtkTextTag>;
  c-name: "gtk_text_tag_new";
end;

define C-function gtk-text-tag-get-priority
  input parameter arg1 :: <GtkTextTag>;
  result res :: <gint>;
  c-name: "gtk_text_tag_get_priority";
end;

define C-function gtk-text-tag-set-priority
  input parameter arg1 :: <GtkTextTag>;
  input parameter arg2 :: <gint>;
  c-name: "gtk_text_tag_set_priority";
end;

define C-function gtk-text-tag-event
  input parameter arg1 :: <GtkTextTag>;
  input parameter arg2 :: <GObject>;
  input parameter arg3 :: <GdkEvent>;
  input parameter arg4 :: <GtkTextIter>;
  result res :: <gboolean>;
  c-name: "gtk_text_tag_event";
end;

define C-function gtk-text-attributes-new
  result res :: <GtkTextAttributes>;
  c-name: "gtk_text_attributes_new";
end;

define C-function gtk-text-attributes-copy
  input parameter arg1 :: <GtkTextAttributes>;
  result res :: <GtkTextAttributes>;
  c-name: "gtk_text_attributes_copy";
end;

define C-function gtk-text-attributes-copy-values
  input parameter arg1 :: <GtkTextAttributes>;
  input parameter arg2 :: <GtkTextAttributes>;
  c-name: "gtk_text_attributes_copy_values";
end;

define C-function gtk-text-attributes-unref
  input parameter arg1 :: <GtkTextAttributes>;
  c-name: "gtk_text_attributes_unref";
end;

define C-function gtk-text-attributes-ref
  input parameter arg1 :: <GtkTextAttributes>;
  result res :: <GtkTextAttributes>;
  c-name: "gtk_text_attributes_ref";
end;

define C-function gtk-text-attributes-get-type
  result res :: <GType>;
  c-name: "gtk_text_attributes_get_type";
end;

define C-subtype <_GtkTreeStore> (<_GObject>, <_GtkTreeModel>, <_GtkTreeDragSource>, <_GtkTreeDragDest>, <_GtkTreeSortable>) end;
define constant <GtkTreeStore> = <_GtkTreeStore>;

define constant <anonymous-8478> = <C-function-pointer>;
define constant <anonymous-8479> = <C-function-pointer>;
define constant <anonymous-8480> = <C-function-pointer>;
define constant <anonymous-8481> = <C-function-pointer>;
define C-struct <_GtkTreeStoreClass>
  slot GtkTreeStoreClass-parent-class :: <_GObjectClass>;
  slot GtkTreeStoreClass-_gtk-reserved1 :: <anonymous-8478>;
  slot GtkTreeStoreClass-_gtk-reserved2 :: <anonymous-8479>;
  slot GtkTreeStoreClass-_gtk-reserved3 :: <anonymous-8480>;
  slot GtkTreeStoreClass-_gtk-reserved4 :: <anonymous-8481>;
end;

define C-pointer-type <GtkTreeStoreClass> => <_GtkTreeStoreClass>;

define C-function gtk-tree-store-get-type
  result res :: <GType>;
  c-name: "gtk_tree_store_get_type";
end;

define C-function gtk-tree-store-new
  input parameter arg1 :: <gint>;
  result res :: <GtkTreeStore>;
  c-name: "gtk_tree_store_new";
end;

define C-function gtk-tree-store-newv
  input parameter arg1 :: <gint>;
  input parameter arg2 :: <GType*>;
  result res :: <GtkTreeStore>;
  c-name: "gtk_tree_store_newv";
end;

define C-function gtk-tree-store-set-column-types
  input parameter arg1 :: <GtkTreeStore>;
  input parameter arg2 :: <gint>;
  input parameter arg3 :: <GType*>;
  c-name: "gtk_tree_store_set_column_types";
end;

define C-function gtk-tree-store-set-value
  input parameter arg1 :: <GtkTreeStore>;
  input parameter arg2 :: <GtkTreeIter>;
  input parameter arg3 :: <gint>;
  input parameter arg4 :: <GValue>;
  c-name: "gtk_tree_store_set_value";
end;

define C-function gtk-tree-store-set
  input parameter arg1 :: <GtkTreeStore>;
  input parameter arg2 :: <GtkTreeIter>;
  c-name: "gtk_tree_store_set";
end;

define C-function gtk-tree-store-set-valuesv
  input parameter arg1 :: <GtkTreeStore>;
  input parameter arg2 :: <GtkTreeIter>;
  input parameter arg3 :: <gint*>;
  input parameter arg4 :: <GValue>;
  input parameter arg5 :: <gint>;
  c-name: "gtk_tree_store_set_valuesv";
end;

define C-function gtk-tree-store-set-valist
  input parameter arg1 :: <GtkTreeStore>;
  input parameter arg2 :: <GtkTreeIter>;
  input parameter arg3 :: <va-list>;
  c-name: "gtk_tree_store_set_valist";
end;

define C-function gtk-tree-store-remove
  input parameter arg1 :: <GtkTreeStore>;
  input parameter arg2 :: <GtkTreeIter>;
  result res :: <gboolean>;
  c-name: "gtk_tree_store_remove";
end;

define C-function gtk-tree-store-insert
  input parameter arg1 :: <GtkTreeStore>;
  input parameter arg2 :: <GtkTreeIter>;
  input parameter arg3 :: <GtkTreeIter>;
  input parameter arg4 :: <gint>;
  c-name: "gtk_tree_store_insert";
end;

define C-function gtk-tree-store-insert-before
  input parameter arg1 :: <GtkTreeStore>;
  input parameter arg2 :: <GtkTreeIter>;
  input parameter arg3 :: <GtkTreeIter>;
  input parameter arg4 :: <GtkTreeIter>;
  c-name: "gtk_tree_store_insert_before";
end;

define C-function gtk-tree-store-insert-after
  input parameter arg1 :: <GtkTreeStore>;
  input parameter arg2 :: <GtkTreeIter>;
  input parameter arg3 :: <GtkTreeIter>;
  input parameter arg4 :: <GtkTreeIter>;
  c-name: "gtk_tree_store_insert_after";
end;

define C-function gtk-tree-store-insert-with-values
  input parameter arg1 :: <GtkTreeStore>;
  input parameter arg2 :: <GtkTreeIter>;
  input parameter arg3 :: <GtkTreeIter>;
  input parameter arg4 :: <gint>;
  c-name: "gtk_tree_store_insert_with_values";
end;

define C-function gtk-tree-store-insert-with-valuesv
  input parameter arg1 :: <GtkTreeStore>;
  input parameter arg2 :: <GtkTreeIter>;
  input parameter arg3 :: <GtkTreeIter>;
  input parameter arg4 :: <gint>;
  input parameter arg5 :: <gint*>;
  input parameter arg6 :: <GValue>;
  input parameter arg7 :: <gint>;
  c-name: "gtk_tree_store_insert_with_valuesv";
end;

define C-function gtk-tree-store-prepend
  input parameter arg1 :: <GtkTreeStore>;
  input parameter arg2 :: <GtkTreeIter>;
  input parameter arg3 :: <GtkTreeIter>;
  c-name: "gtk_tree_store_prepend";
end;

define C-function gtk-tree-store-append
  input parameter arg1 :: <GtkTreeStore>;
  input parameter arg2 :: <GtkTreeIter>;
  input parameter arg3 :: <GtkTreeIter>;
  c-name: "gtk_tree_store_append";
end;

define C-function gtk-tree-store-is-ancestor
  input parameter arg1 :: <GtkTreeStore>;
  input parameter arg2 :: <GtkTreeIter>;
  input parameter arg3 :: <GtkTreeIter>;
  result res :: <gboolean>;
  c-name: "gtk_tree_store_is_ancestor";
end;

define C-function gtk-tree-store-iter-depth
  input parameter arg1 :: <GtkTreeStore>;
  input parameter arg2 :: <GtkTreeIter>;
  result res :: <gint>;
  c-name: "gtk_tree_store_iter_depth";
end;

define C-function gtk-tree-store-clear
  input parameter arg1 :: <GtkTreeStore>;
  c-name: "gtk_tree_store_clear";
end;

define C-function gtk-tree-store-iter-is-valid
  input parameter arg1 :: <GtkTreeStore>;
  input parameter arg2 :: <GtkTreeIter>;
  result res :: <gboolean>;
  c-name: "gtk_tree_store_iter_is_valid";
end;

define C-function gtk-tree-store-reorder
  input parameter arg1 :: <GtkTreeStore>;
  input parameter arg2 :: <GtkTreeIter>;
  input parameter arg3 :: <gint*>;
  c-name: "gtk_tree_store_reorder";
end;

define C-function gtk-tree-store-swap
  input parameter arg1 :: <GtkTreeStore>;
  input parameter arg2 :: <GtkTreeIter>;
  input parameter arg3 :: <GtkTreeIter>;
  c-name: "gtk_tree_store_swap";
end;

define C-function gtk-tree-store-move-before
  input parameter arg1 :: <GtkTreeStore>;
  input parameter arg2 :: <GtkTreeIter>;
  input parameter arg3 :: <GtkTreeIter>;
  c-name: "gtk_tree_store_move_before";
end;

define C-function gtk-tree-store-move-after
  input parameter arg1 :: <GtkTreeStore>;
  input parameter arg2 :: <GtkTreeIter>;
  input parameter arg3 :: <GtkTreeIter>;
  c-name: "gtk_tree_store_move_after";
end;

define constant <anonymous-8451> = <C-function-pointer>;
define constant <GtkTreeSelectionForeachFunc> = <anonymous-8451>;

define C-function gtk-tree-selection-get-type
  result res :: <GType>;
  c-name: "gtk_tree_selection_get_type";
end;

define C-function gtk-tree-selection-set-mode
  input parameter arg1 :: <GtkTreeSelection>;
  input parameter arg2 :: <GtkSelectionMode>;
  c-name: "gtk_tree_selection_set_mode";
end;

define C-function gtk-tree-selection-get-mode
  input parameter arg1 :: <GtkTreeSelection>;
  result res :: <GtkSelectionMode>;
  c-name: "gtk_tree_selection_get_mode";
end;

define C-function gtk-tree-selection-set-select-function
  input parameter arg1 :: <GtkTreeSelection>;
  input parameter arg2 :: <GtkTreeSelectionFunc>;
  input parameter arg3 :: <gpointer>;
  input parameter arg4 :: <GtkDestroyNotify>;
  c-name: "gtk_tree_selection_set_select_function";
end;

define C-function gtk-tree-selection-get-user-data
  input parameter arg1 :: <GtkTreeSelection>;
  result res :: <gpointer>;
  c-name: "gtk_tree_selection_get_user_data";
end;

define C-function gtk-tree-selection-get-tree-view
  input parameter arg1 :: <GtkTreeSelection>;
  result res :: <GtkTreeView>;
  c-name: "gtk_tree_selection_get_tree_view";
end;

define C-function gtk-tree-selection-get-selected
  input parameter arg1 :: <GtkTreeSelection>;
  input parameter arg2 :: <GtkTreeModel*>;
  input parameter arg3 :: <GtkTreeIter>;
  result res :: <gboolean>;
  c-name: "gtk_tree_selection_get_selected";
end;

define C-function gtk-tree-selection-get-selected-rows
  input parameter arg1 :: <GtkTreeSelection>;
  input parameter arg2 :: <GtkTreeModel*>;
  result res :: <GList>;
  c-name: "gtk_tree_selection_get_selected_rows";
end;

define C-function gtk-tree-selection-count-selected-rows
  input parameter arg1 :: <GtkTreeSelection>;
  result res :: <gint>;
  c-name: "gtk_tree_selection_count_selected_rows";
end;

define C-function gtk-tree-selection-selected-foreach
  input parameter arg1 :: <GtkTreeSelection>;
  input parameter arg2 :: <GtkTreeSelectionForeachFunc>;
  input parameter arg3 :: <gpointer>;
  c-name: "gtk_tree_selection_selected_foreach";
end;

define C-function gtk-tree-selection-select-path
  input parameter arg1 :: <GtkTreeSelection>;
  input parameter arg2 :: <GtkTreePath>;
  c-name: "gtk_tree_selection_select_path";
end;

define C-function gtk-tree-selection-unselect-path
  input parameter arg1 :: <GtkTreeSelection>;
  input parameter arg2 :: <GtkTreePath>;
  c-name: "gtk_tree_selection_unselect_path";
end;

define C-function gtk-tree-selection-select-iter
  input parameter arg1 :: <GtkTreeSelection>;
  input parameter arg2 :: <GtkTreeIter>;
  c-name: "gtk_tree_selection_select_iter";
end;

define C-function gtk-tree-selection-unselect-iter
  input parameter arg1 :: <GtkTreeSelection>;
  input parameter arg2 :: <GtkTreeIter>;
  c-name: "gtk_tree_selection_unselect_iter";
end;

define C-function gtk-tree-selection-path-is-selected
  input parameter arg1 :: <GtkTreeSelection>;
  input parameter arg2 :: <GtkTreePath>;
  result res :: <gboolean>;
  c-name: "gtk_tree_selection_path_is_selected";
end;

define C-function gtk-tree-selection-iter-is-selected
  input parameter arg1 :: <GtkTreeSelection>;
  input parameter arg2 :: <GtkTreeIter>;
  result res :: <gboolean>;
  c-name: "gtk_tree_selection_iter_is_selected";
end;

define C-function gtk-tree-selection-select-all
  input parameter arg1 :: <GtkTreeSelection>;
  c-name: "gtk_tree_selection_select_all";
end;

define C-function gtk-tree-selection-unselect-all
  input parameter arg1 :: <GtkTreeSelection>;
  c-name: "gtk_tree_selection_unselect_all";
end;

define C-function gtk-tree-selection-select-range
  input parameter arg1 :: <GtkTreeSelection>;
  input parameter arg2 :: <GtkTreePath>;
  input parameter arg3 :: <GtkTreePath>;
  c-name: "gtk_tree_selection_select_range";
end;

define C-function gtk-tree-selection-unselect-range
  input parameter arg1 :: <GtkTreeSelection>;
  input parameter arg2 :: <GtkTreePath>;
  input parameter arg3 :: <GtkTreePath>;
  c-name: "gtk_tree_selection_unselect_range";
end;

define C-subtype <_GtkTreeModelSort> (<_GObject>, <_GtkTreeModel>, <_GtkTreeDragSource>, <_GtkTreeSortable>) end;
define constant <GtkTreeModelSort> = <_GtkTreeModelSort>;

define constant <anonymous-8436> = <C-function-pointer>;
define constant <anonymous-8437> = <C-function-pointer>;
define constant <anonymous-8438> = <C-function-pointer>;
define constant <anonymous-8439> = <C-function-pointer>;
define C-struct <_GtkTreeModelSortClass>
  slot GtkTreeModelSortClass-parent-class :: <_GObjectClass>;
  slot GtkTreeModelSortClass-_gtk-reserved1 :: <anonymous-8436>;
  slot GtkTreeModelSortClass-_gtk-reserved2 :: <anonymous-8437>;
  slot GtkTreeModelSortClass-_gtk-reserved3 :: <anonymous-8438>;
  slot GtkTreeModelSortClass-_gtk-reserved4 :: <anonymous-8439>;
end;

define C-pointer-type <GtkTreeModelSortClass> => <_GtkTreeModelSortClass>;

define C-function gtk-tree-model-sort-get-type
  result res :: <GType>;
  c-name: "gtk_tree_model_sort_get_type";
end;

define C-function gtk-tree-model-sort-new-with-model
  input parameter arg1 :: <GtkTreeModel>;
  result res :: <GtkTreeModel>;
  c-name: "gtk_tree_model_sort_new_with_model";
end;

define C-function gtk-tree-model-sort-get-model
  input parameter arg1 :: <GtkTreeModelSort>;
  result res :: <GtkTreeModel>;
  c-name: "gtk_tree_model_sort_get_model";
end;

define C-function gtk-tree-model-sort-convert-child-path-to-path
  input parameter arg1 :: <GtkTreeModelSort>;
  input parameter arg2 :: <GtkTreePath>;
  result res :: <GtkTreePath>;
  c-name: "gtk_tree_model_sort_convert_child_path_to_path";
end;

define C-function gtk-tree-model-sort-convert-child-iter-to-iter
  input parameter arg1 :: <GtkTreeModelSort>;
  input parameter arg2 :: <GtkTreeIter>;
  input parameter arg3 :: <GtkTreeIter>;
  c-name: "gtk_tree_model_sort_convert_child_iter_to_iter";
end;

define C-function gtk-tree-model-sort-convert-path-to-child-path
  input parameter arg1 :: <GtkTreeModelSort>;
  input parameter arg2 :: <GtkTreePath>;
  result res :: <GtkTreePath>;
  c-name: "gtk_tree_model_sort_convert_path_to_child_path";
end;

define C-function gtk-tree-model-sort-convert-iter-to-child-iter
  input parameter arg1 :: <GtkTreeModelSort>;
  input parameter arg2 :: <GtkTreeIter>;
  input parameter arg3 :: <GtkTreeIter>;
  c-name: "gtk_tree_model_sort_convert_iter_to_child_iter";
end;

define C-function gtk-tree-model-sort-reset-default-sort-func
  input parameter arg1 :: <GtkTreeModelSort>;
  c-name: "gtk_tree_model_sort_reset_default_sort_func";
end;

define C-function gtk-tree-model-sort-clear-cache
  input parameter arg1 :: <GtkTreeModelSort>;
  c-name: "gtk_tree_model_sort_clear_cache";
end;

define C-function gtk-tree-model-sort-iter-is-valid
  input parameter arg1 :: <GtkTreeModelSort>;
  input parameter arg2 :: <GtkTreeIter>;
  result res :: <gboolean>;
  c-name: "gtk_tree_model_sort_iter_is_valid";
end;

define C-subtype <_GtkTreeDragSource> (<C-void*>) end;
define constant <GtkTreeDragSource> = <_GtkTreeDragSource>;

define constant <anonymous-8422> = <C-function-pointer>;
define constant <anonymous-8423> = <C-function-pointer>;
define constant <anonymous-8424> = <C-function-pointer>;
define C-struct <_GtkTreeDragSourceIface>
  slot GtkTreeDragSourceIface-g-iface :: <_GTypeInterface>;
  slot GtkTreeDragSourceIface-row-draggable :: <anonymous-8422>;
  slot GtkTreeDragSourceIface-drag-data-get :: <anonymous-8423>;
  slot GtkTreeDragSourceIface-drag-data-delete :: <anonymous-8424>;
end;

define C-pointer-type <GtkTreeDragSourceIface> => <_GtkTreeDragSourceIface>;

define C-function gtk-tree-drag-source-get-type
  result res :: <GType>;
  c-name: "gtk_tree_drag_source_get_type";
end;

define C-function gtk-tree-drag-source-row-draggable
  input parameter arg1 :: <GtkTreeDragSource>;
  input parameter arg2 :: <GtkTreePath>;
  result res :: <gboolean>;
  c-name: "gtk_tree_drag_source_row_draggable";
end;

define C-function gtk-tree-drag-source-drag-data-delete
  input parameter arg1 :: <GtkTreeDragSource>;
  input parameter arg2 :: <GtkTreePath>;
  result res :: <gboolean>;
  c-name: "gtk_tree_drag_source_drag_data_delete";
end;

define C-function gtk-tree-drag-source-drag-data-get
  input parameter arg1 :: <GtkTreeDragSource>;
  input parameter arg2 :: <GtkTreePath>;
  input parameter arg3 :: <GtkSelectionData>;
  result res :: <gboolean>;
  c-name: "gtk_tree_drag_source_drag_data_get";
end;

define C-subtype <_GtkTreeDragDest> (<C-void*>) end;
define constant <GtkTreeDragDest> = <_GtkTreeDragDest>;

define constant <anonymous-8429> = <C-function-pointer>;
define constant <anonymous-8430> = <C-function-pointer>;
define C-struct <_GtkTreeDragDestIface>
  slot GtkTreeDragDestIface-g-iface :: <_GTypeInterface>;
  slot GtkTreeDragDestIface-drag-data-received :: <anonymous-8429>;
  slot GtkTreeDragDestIface-row-drop-possible :: <anonymous-8430>;
end;

define C-pointer-type <GtkTreeDragDestIface> => <_GtkTreeDragDestIface>;

define C-function gtk-tree-drag-dest-get-type
  result res :: <GType>;
  c-name: "gtk_tree_drag_dest_get_type";
end;

define C-function gtk-tree-drag-dest-drag-data-received
  input parameter arg1 :: <GtkTreeDragDest>;
  input parameter arg2 :: <GtkTreePath>;
  input parameter arg3 :: <GtkSelectionData>;
  result res :: <gboolean>;
  c-name: "gtk_tree_drag_dest_drag_data_received";
end;

define C-function gtk-tree-drag-dest-row-drop-possible
  input parameter arg1 :: <GtkTreeDragDest>;
  input parameter arg2 :: <GtkTreePath>;
  input parameter arg3 :: <GtkSelectionData>;
  result res :: <gboolean>;
  c-name: "gtk_tree_drag_dest_row_drop_possible";
end;

define C-function gtk-tree-set-row-drag-data
  input parameter arg1 :: <GtkSelectionData>;
  input parameter arg2 :: <GtkTreeModel>;
  input parameter arg3 :: <GtkTreePath>;
  result res :: <gboolean>;
  c-name: "gtk_tree_set_row_drag_data";
end;

define C-function gtk-tree-get-row-drag-data
  input parameter arg1 :: <GtkSelectionData>;
  input parameter arg2 :: <GtkTreeModel*>;
  input parameter arg3 :: <GtkTreePath*>;
  result res :: <gboolean>;
  c-name: "gtk_tree_get_row_drag_data";
end;

define constant <GtkTooltips> = <_GtkTooltips>;

define C-struct <_GtkTooltipsData>
  slot GtkTooltipsData-tooltips :: <GtkTooltips>;
  slot GtkTooltipsData-widget :: <GtkWidget>;
  slot GtkTooltipsData-tip-text :: <gchar*>;
  slot GtkTooltipsData-tip-private :: <gchar*>;
end;

define C-pointer-type <GtkTooltipsData> => <_GtkTooltipsData>;

define C-subtype <_GtkTooltips> (<_GtkObject>) end;
define constant <anonymous-7222> = <C-function-pointer>;
define constant <anonymous-7223> = <C-function-pointer>;
define constant <anonymous-7224> = <C-function-pointer>;
define constant <anonymous-7225> = <C-function-pointer>;
define C-struct <_GtkTooltipsClass>
  slot GtkTooltipsClass-parent-class :: <_GtkObjectClass>;
  slot GtkTooltipsClass-_gtk-reserved1 :: <anonymous-7222>;
  slot GtkTooltipsClass-_gtk-reserved2 :: <anonymous-7223>;
  slot GtkTooltipsClass-_gtk-reserved3 :: <anonymous-7224>;
  slot GtkTooltipsClass-_gtk-reserved4 :: <anonymous-7225>;
end;

define C-pointer-type <GtkTooltipsClass> => <_GtkTooltipsClass>;

define C-function gtk-tooltips-get-type
  result res :: <GType>;
  c-name: "gtk_tooltips_get_type";
end;

define C-function gtk-tooltips-new
  result res :: <GtkTooltips>;
  c-name: "gtk_tooltips_new";
end;

define C-function gtk-tooltips-enable
  input parameter arg1 :: <GtkTooltips>;
  c-name: "gtk_tooltips_enable";
end;

define C-function gtk-tooltips-disable
  input parameter arg1 :: <GtkTooltips>;
  c-name: "gtk_tooltips_disable";
end;

define C-function gtk-tooltips-set-delay
  input parameter arg1 :: <GtkTooltips>;
  input parameter arg2 :: <guint>;
  c-name: "gtk_tooltips_set_delay";
end;

define C-function gtk-tooltips-set-tip
  input parameter arg1 :: <GtkTooltips>;
  input parameter arg2 :: <GtkWidget>;
  input parameter arg3 :: <gchar*>;
  input parameter arg4 :: <gchar*>;
  c-name: "gtk_tooltips_set_tip";
end;

define C-function gtk-tooltips-data-get
  input parameter arg1 :: <GtkWidget>;
  result res :: <GtkTooltipsData>;
  c-name: "gtk_tooltips_data_get";
end;

define C-function gtk-tooltips-force-window
  input parameter arg1 :: <GtkTooltips>;
  c-name: "gtk_tooltips_force_window";
end;

define C-pointer-type <GtkTooltips*> => <GtkTooltips>;
define C-function gtk-tooltips-get-info-from-tip-window
  input parameter arg1 :: <GtkWindow>;
  input parameter arg2 :: <GtkTooltips*>;
  input parameter arg3 :: <GtkWidget*>;
  result res :: <gboolean>;
  c-name: "gtk_tooltips_get_info_from_tip_window";
end;

define C-function gtk-tooltip-get-type
  result res :: <GType>;
  c-name: "gtk_tooltip_get_type";
end;

define C-function gtk-tooltip-set-markup
  input parameter arg1 :: <GtkTooltip>;
  input parameter arg2 :: <gchar*>;
  c-name: "gtk_tooltip_set_markup";
end;

define C-function gtk-tooltip-set-text
  input parameter arg1 :: <GtkTooltip>;
  input parameter arg2 :: <gchar*>;
  c-name: "gtk_tooltip_set_text";
end;

define C-function gtk-tooltip-set-icon
  input parameter arg1 :: <GtkTooltip>;
  input parameter arg2 :: <GdkPixbuf>;
  c-name: "gtk_tooltip_set_icon";
end;

define C-function gtk-tooltip-set-icon-from-stock
  input parameter arg1 :: <GtkTooltip>;
  input parameter arg2 :: <gchar*>;
  input parameter arg3 :: <GtkIconSize>;
  c-name: "gtk_tooltip_set_icon_from_stock";
end;

define C-function gtk-tooltip-set-custom
  input parameter arg1 :: <GtkTooltip>;
  input parameter arg2 :: <GtkWidget>;
  c-name: "gtk_tooltip_set_custom";
end;

define C-function gtk-tooltip-set-tip-area
  input parameter arg1 :: <GtkTooltip>;
  input parameter arg2 :: <GdkRectangle>;
  c-name: "gtk_tooltip_set_tip_area";
end;

define C-function gtk-tooltip-trigger-tooltip-query
  input parameter arg1 :: <GdkDisplay>;
  c-name: "gtk_tooltip_trigger_tooltip_query";
end;

define C-function _gtk-tooltip-focus-in
  input parameter arg1 :: <GtkWidget>;
  c-name: "_gtk_tooltip_focus_in";
end;

define C-function _gtk-tooltip-focus-out
  input parameter arg1 :: <GtkWidget>;
  c-name: "_gtk_tooltip_focus_out";
end;

define C-function _gtk-tooltip-toggle-keyboard-mode
  input parameter arg1 :: <GtkWidget>;
  c-name: "_gtk_tooltip_toggle_keyboard_mode";
end;

define C-function _gtk-tooltip-handle-event
  input parameter arg1 :: <GdkEvent>;
  c-name: "_gtk_tooltip_handle_event";
end;

define C-function _gtk-tooltip-hide
  input parameter arg1 :: <GtkWidget>;
  c-name: "_gtk_tooltip_hide";
end;

define C-struct <_GtkToolItemPrivate>
end;

define C-pointer-type <GtkToolItemPrivate> => <_GtkToolItemPrivate>;

define C-subtype <_GtkToolItem> (<_GtkBin>, <_AtkImplementorIface>) end;
define constant <GtkToolItem> = <_GtkToolItem>;

define constant <anonymous-7235> = <C-function-pointer>;
define constant <anonymous-7236> = <C-function-pointer>;
define constant <anonymous-7237> = <C-function-pointer>;
define constant <anonymous-7238> = <C-function-pointer>;
define constant <anonymous-7239> = <C-function-pointer>;
define constant <anonymous-7240> = <C-function-pointer>;
define constant <anonymous-7241> = <C-function-pointer>;
define C-struct <_GtkToolItemClass>
  slot GtkToolItemClass-parent-class :: <_GtkBinClass>;
  slot GtkToolItemClass-create-menu-proxy :: <anonymous-7235>;
  slot GtkToolItemClass-toolbar-reconfigured :: <anonymous-7236>;
  slot GtkToolItemClass-set-tooltip :: <anonymous-7237>;
  slot GtkToolItemClass-_gtk-reserved1 :: <anonymous-7238>;
  slot GtkToolItemClass-_gtk-reserved2 :: <anonymous-7239>;
  slot GtkToolItemClass-_gtk-reserved3 :: <anonymous-7240>;
  slot GtkToolItemClass-_gtk-reserved4 :: <anonymous-7241>;
end;

define C-pointer-type <GtkToolItemClass> => <_GtkToolItemClass>;

define C-function gtk-tool-item-get-type
  result res :: <GType>;
  c-name: "gtk_tool_item_get_type";
end;

define C-function gtk-tool-item-new
  result res :: <GtkToolItem>;
  c-name: "gtk_tool_item_new";
end;

define C-function gtk-tool-item-set-homogeneous
  input parameter arg1 :: <GtkToolItem>;
  input parameter arg2 :: <gboolean>;
  c-name: "gtk_tool_item_set_homogeneous";
end;

define C-function gtk-tool-item-get-homogeneous
  input parameter arg1 :: <GtkToolItem>;
  result res :: <gboolean>;
  c-name: "gtk_tool_item_get_homogeneous";
end;

define C-function gtk-tool-item-set-expand
  input parameter arg1 :: <GtkToolItem>;
  input parameter arg2 :: <gboolean>;
  c-name: "gtk_tool_item_set_expand";
end;

define C-function gtk-tool-item-get-expand
  input parameter arg1 :: <GtkToolItem>;
  result res :: <gboolean>;
  c-name: "gtk_tool_item_get_expand";
end;

define C-function gtk-tool-item-set-tooltip
  input parameter arg1 :: <GtkToolItem>;
  input parameter arg2 :: <GtkTooltips>;
  input parameter arg3 :: <gchar*>;
  input parameter arg4 :: <gchar*>;
  c-name: "gtk_tool_item_set_tooltip";
end;

define C-function gtk-tool-item-set-tooltip-text
  input parameter arg1 :: <GtkToolItem>;
  input parameter arg2 :: <gchar*>;
  c-name: "gtk_tool_item_set_tooltip_text";
end;

define C-function gtk-tool-item-set-tooltip-markup
  input parameter arg1 :: <GtkToolItem>;
  input parameter arg2 :: <gchar*>;
  c-name: "gtk_tool_item_set_tooltip_markup";
end;

define C-function gtk-tool-item-set-use-drag-window
  input parameter arg1 :: <GtkToolItem>;
  input parameter arg2 :: <gboolean>;
  c-name: "gtk_tool_item_set_use_drag_window";
end;

define C-function gtk-tool-item-get-use-drag-window
  input parameter arg1 :: <GtkToolItem>;
  result res :: <gboolean>;
  c-name: "gtk_tool_item_get_use_drag_window";
end;

define C-function gtk-tool-item-set-visible-horizontal
  input parameter arg1 :: <GtkToolItem>;
  input parameter arg2 :: <gboolean>;
  c-name: "gtk_tool_item_set_visible_horizontal";
end;

define C-function gtk-tool-item-get-visible-horizontal
  input parameter arg1 :: <GtkToolItem>;
  result res :: <gboolean>;
  c-name: "gtk_tool_item_get_visible_horizontal";
end;

define C-function gtk-tool-item-set-visible-vertical
  input parameter arg1 :: <GtkToolItem>;
  input parameter arg2 :: <gboolean>;
  c-name: "gtk_tool_item_set_visible_vertical";
end;

define C-function gtk-tool-item-get-visible-vertical
  input parameter arg1 :: <GtkToolItem>;
  result res :: <gboolean>;
  c-name: "gtk_tool_item_get_visible_vertical";
end;

define C-function gtk-tool-item-get-is-important
  input parameter arg1 :: <GtkToolItem>;
  result res :: <gboolean>;
  c-name: "gtk_tool_item_get_is_important";
end;

define C-function gtk-tool-item-set-is-important
  input parameter arg1 :: <GtkToolItem>;
  input parameter arg2 :: <gboolean>;
  c-name: "gtk_tool_item_set_is_important";
end;

define C-function gtk-tool-item-get-icon-size
  input parameter arg1 :: <GtkToolItem>;
  result res :: <GtkIconSize>;
  c-name: "gtk_tool_item_get_icon_size";
end;

define C-function gtk-tool-item-get-orientation
  input parameter arg1 :: <GtkToolItem>;
  result res :: <GtkOrientation>;
  c-name: "gtk_tool_item_get_orientation";
end;

define C-function gtk-tool-item-get-toolbar-style
  input parameter arg1 :: <GtkToolItem>;
  result res :: <GtkToolbarStyle>;
  c-name: "gtk_tool_item_get_toolbar_style";
end;

define C-function gtk-tool-item-get-relief-style
  input parameter arg1 :: <GtkToolItem>;
  result res :: <GtkReliefStyle>;
  c-name: "gtk_tool_item_get_relief_style";
end;

define C-function gtk-tool-item-retrieve-proxy-menu-item
  input parameter arg1 :: <GtkToolItem>;
  result res :: <GtkWidget>;
  c-name: "gtk_tool_item_retrieve_proxy_menu_item";
end;

define C-function gtk-tool-item-get-proxy-menu-item
  input parameter arg1 :: <GtkToolItem>;
  input parameter arg2 :: <gchar*>;
  result res :: <GtkWidget>;
  c-name: "gtk_tool_item_get_proxy_menu_item";
end;

define C-function gtk-tool-item-set-proxy-menu-item
  input parameter arg1 :: <GtkToolItem>;
  input parameter arg2 :: <gchar*>;
  input parameter arg3 :: <GtkWidget>;
  c-name: "gtk_tool_item_set_proxy_menu_item";
end;

define C-function gtk-tool-item-rebuild-menu
  input parameter arg1 :: <GtkToolItem>;
  c-name: "gtk_tool_item_rebuild_menu";
end;

define C-subtype <_GtkItem> (<_GtkBin>, <_AtkImplementorIface>) end;
define constant <GtkItem> = <_GtkItem>;

define C-subtype <_GtkMenuItem> (<_GtkItem>, <_AtkImplementorIface>) end;
define constant <GtkMenuItem> = <_GtkMenuItem>;

define constant <anonymous-5538> = <C-function-pointer>;
define constant <anonymous-5539> = <C-function-pointer>;
define constant <anonymous-5540> = <C-function-pointer>;
define constant <anonymous-5541> = <C-function-pointer>;
define constant <anonymous-5542> = <C-function-pointer>;
define constant <anonymous-5543> = <C-function-pointer>;
define constant <anonymous-5544> = <C-function-pointer>;
define C-struct <_GtkItemClass>
  slot GtkItemClass-parent-class :: <_GtkBinClass>;
  slot GtkItemClass-select :: <anonymous-5538>;
  slot GtkItemClass-deselect :: <anonymous-5539>;
  slot GtkItemClass-toggle :: <anonymous-5540>;
  slot GtkItemClass-_gtk-reserved1 :: <anonymous-5541>;
  slot GtkItemClass-_gtk-reserved2 :: <anonymous-5542>;
  slot GtkItemClass-_gtk-reserved3 :: <anonymous-5543>;
  slot GtkItemClass-_gtk-reserved4 :: <anonymous-5544>;
end;

define C-pointer-type <GtkItemClass> => <_GtkItemClass>;

define constant <anonymous-5556> = <C-function-pointer>;
define constant <anonymous-5557> = <C-function-pointer>;
define constant <anonymous-5558> = <C-function-pointer>;
define constant <anonymous-5559> = <C-function-pointer>;
define constant <anonymous-5560> = <C-function-pointer>;
define constant <anonymous-5561> = <C-function-pointer>;
define constant <anonymous-5562> = <C-function-pointer>;
define constant <anonymous-5563> = <C-function-pointer>;
define C-struct <_GtkMenuItemClass>
  slot GtkMenuItemClass-parent-class :: <_GtkItemClass>;
  bitfield slot GtkMenuItemClass-hide-on-activate :: <C-int>, width: 1;
  slot GtkMenuItemClass-activate :: <anonymous-5556>;
  slot GtkMenuItemClass-activate-item :: <anonymous-5557>;
  slot GtkMenuItemClass-toggle-size-request :: <anonymous-5558>;
  slot GtkMenuItemClass-toggle-size-allocate :: <anonymous-5559>;
  slot GtkMenuItemClass-_gtk-reserved1 :: <anonymous-5560>;
  slot GtkMenuItemClass-_gtk-reserved2 :: <anonymous-5561>;
  slot GtkMenuItemClass-_gtk-reserved3 :: <anonymous-5562>;
  slot GtkMenuItemClass-_gtk-reserved4 :: <anonymous-5563>;
end;

define C-pointer-type <GtkMenuItemClass> => <_GtkMenuItemClass>;

define C-function gtk-menu-item-get-type
  result res :: <GType>;
  c-name: "gtk_menu_item_get_type";
end;

define C-function gtk-menu-item-new
  result res :: <GtkWidget>;
  c-name: "gtk_menu_item_new";
end;

define C-function gtk-menu-item-new-with-label
  input parameter arg1 :: <gchar*>;
  result res :: <GtkWidget>;
  c-name: "gtk_menu_item_new_with_label";
end;

define C-function gtk-menu-item-new-with-mnemonic
  input parameter arg1 :: <gchar*>;
  result res :: <GtkWidget>;
  c-name: "gtk_menu_item_new_with_mnemonic";
end;

define C-function gtk-menu-item-set-submenu
  input parameter arg1 :: <GtkMenuItem>;
  input parameter arg2 :: <GtkWidget>;
  c-name: "gtk_menu_item_set_submenu";
end;

define C-function gtk-menu-item-get-submenu
  input parameter arg1 :: <GtkMenuItem>;
  result res :: <GtkWidget>;
  c-name: "gtk_menu_item_get_submenu";
end;

define C-function gtk-menu-item-select
  input parameter arg1 :: <GtkMenuItem>;
  c-name: "gtk_menu_item_select";
end;

define C-function gtk-menu-item-deselect
  input parameter arg1 :: <GtkMenuItem>;
  c-name: "gtk_menu_item_deselect";
end;

define C-function gtk-menu-item-activate
  input parameter arg1 :: <GtkMenuItem>;
  c-name: "gtk_menu_item_activate";
end;

define C-function gtk-menu-item-toggle-size-request
  input parameter arg1 :: <GtkMenuItem>;
  input parameter arg2 :: <gint*>;
  c-name: "gtk_menu_item_toggle_size_request";
end;

define C-function gtk-menu-item-toggle-size-allocate
  input parameter arg1 :: <GtkMenuItem>;
  input parameter arg2 :: <gint>;
  c-name: "gtk_menu_item_toggle_size_allocate";
end;

define C-function gtk-menu-item-set-right-justified
  input parameter arg1 :: <GtkMenuItem>;
  input parameter arg2 :: <gboolean>;
  c-name: "gtk_menu_item_set_right_justified";
end;

define C-function gtk-menu-item-get-right-justified
  input parameter arg1 :: <GtkMenuItem>;
  result res :: <gboolean>;
  c-name: "gtk_menu_item_get_right_justified";
end;

define C-function gtk-menu-item-set-accel-path
  input parameter arg1 :: <GtkMenuItem>;
  input parameter arg2 :: <gchar*>;
  c-name: "gtk_menu_item_set_accel_path";
end;

define C-function _gtk-menu-item-popdown-submenu
  input parameter arg1 :: <GtkWidget>;
  c-name: "_gtk_menu_item_popdown_submenu";
end;

define C-function gtk-menu-item-remove-submenu
  input parameter arg1 :: <GtkMenuItem>;
  c-name: "gtk_menu_item_remove_submenu";
end;

define C-function gtk-item-get-type
  result res :: <GType>;
  c-name: "gtk_item_get_type";
end;

define C-function gtk-item-select
  input parameter arg1 :: <GtkItem>;
  c-name: "gtk_item_select";
end;

define C-function gtk-item-deselect
  input parameter arg1 :: <GtkItem>;
  c-name: "gtk_item_deselect";
end;

define C-function gtk-item-toggle
  input parameter arg1 :: <GtkItem>;
  c-name: "gtk_item_toggle";
end;

define C-struct <_GtkToolButtonPrivate>
end;

define C-pointer-type <GtkToolButtonPrivate> => <_GtkToolButtonPrivate>;

define C-subtype <_GtkToolButton> (<_GtkToolItem>, <_AtkImplementorIface>) end;
define constant <GtkToolButton> = <_GtkToolButton>;

define constant <anonymous-7268> = <C-function-pointer>;
define constant <anonymous-7269> = <C-function-pointer>;
define constant <anonymous-7270> = <C-function-pointer>;
define constant <anonymous-7271> = <C-function-pointer>;
define constant <anonymous-7272> = <C-function-pointer>;
define C-struct <_GtkToolButtonClass>
  slot GtkToolButtonClass-parent-class :: <_GtkToolItemClass>;
  slot GtkToolButtonClass-button-type :: <C-unsigned-int>;
  slot GtkToolButtonClass-clicked :: <anonymous-7268>;
  slot GtkToolButtonClass-_gtk-reserved1 :: <anonymous-7269>;
  slot GtkToolButtonClass-_gtk-reserved2 :: <anonymous-7270>;
  slot GtkToolButtonClass-_gtk-reserved3 :: <anonymous-7271>;
  slot GtkToolButtonClass-_gtk-reserved4 :: <anonymous-7272>;
end;

define C-pointer-type <GtkToolButtonClass> => <_GtkToolButtonClass>;

define C-function gtk-tool-button-get-type
  result res :: <GType>;
  c-name: "gtk_tool_button_get_type";
end;

define C-function gtk-tool-button-new
  input parameter arg1 :: <GtkWidget>;
  input parameter arg2 :: <gchar*>;
  result res :: <GtkToolItem>;
  c-name: "gtk_tool_button_new";
end;

define C-function gtk-tool-button-new-from-stock
  input parameter arg1 :: <gchar*>;
  result res :: <GtkToolItem>;
  c-name: "gtk_tool_button_new_from_stock";
end;

define C-function gtk-tool-button-set-label
  input parameter arg1 :: <GtkToolButton>;
  input parameter arg2 :: <gchar*>;
  c-name: "gtk_tool_button_set_label";
end;

define C-function gtk-tool-button-get-label
  input parameter arg1 :: <GtkToolButton>;
  result res :: <gchar*>;
  c-name: "gtk_tool_button_get_label";
end;

define C-function gtk-tool-button-set-use-underline
  input parameter arg1 :: <GtkToolButton>;
  input parameter arg2 :: <gboolean>;
  c-name: "gtk_tool_button_set_use_underline";
end;

define C-function gtk-tool-button-get-use-underline
  input parameter arg1 :: <GtkToolButton>;
  result res :: <gboolean>;
  c-name: "gtk_tool_button_get_use_underline";
end;

define C-function gtk-tool-button-set-stock-id
  input parameter arg1 :: <GtkToolButton>;
  input parameter arg2 :: <gchar*>;
  c-name: "gtk_tool_button_set_stock_id";
end;

define C-function gtk-tool-button-get-stock-id
  input parameter arg1 :: <GtkToolButton>;
  result res :: <gchar*>;
  c-name: "gtk_tool_button_get_stock_id";
end;

define C-function gtk-tool-button-set-icon-name
  input parameter arg1 :: <GtkToolButton>;
  input parameter arg2 :: <gchar*>;
  c-name: "gtk_tool_button_set_icon_name";
end;

define C-function gtk-tool-button-get-icon-name
  input parameter arg1 :: <GtkToolButton>;
  result res :: <gchar*>;
  c-name: "gtk_tool_button_get_icon_name";
end;

define C-function gtk-tool-button-set-icon-widget
  input parameter arg1 :: <GtkToolButton>;
  input parameter arg2 :: <GtkWidget>;
  c-name: "gtk_tool_button_set_icon_widget";
end;

define C-function gtk-tool-button-get-icon-widget
  input parameter arg1 :: <GtkToolButton>;
  result res :: <GtkWidget>;
  c-name: "gtk_tool_button_get_icon_widget";
end;

define C-function gtk-tool-button-set-label-widget
  input parameter arg1 :: <GtkToolButton>;
  input parameter arg2 :: <GtkWidget>;
  c-name: "gtk_tool_button_set_label_widget";
end;

define C-function gtk-tool-button-get-label-widget
  input parameter arg1 :: <GtkToolButton>;
  result res :: <GtkWidget>;
  c-name: "gtk_tool_button_get_label_widget";
end;

define constant <GtkToolbarChildType> = <C-int>;
define constant $GTK-TOOLBAR-CHILD-SPACE = 0;
define constant $GTK-TOOLBAR-CHILD-BUTTON = 1;
define constant $GTK-TOOLBAR-CHILD-TOGGLEBUTTON = 2;
define constant $GTK-TOOLBAR-CHILD-RADIOBUTTON = 3;
define constant $GTK-TOOLBAR-CHILD-WIDGET = 4;

define C-struct <_GtkToolbarChild>
  slot GtkToolbarChild-type :: <GtkToolbarChildType>;
  slot GtkToolbarChild-widget :: <GtkWidget>;
  slot GtkToolbarChild-icon :: <GtkWidget>;
  slot GtkToolbarChild-label :: <GtkWidget>;
end;

define C-pointer-type <GtkToolbarChild> => <_GtkToolbarChild>;

define constant <GtkToolbarSpaceStyle> = <C-int>;
define constant $GTK-TOOLBAR-SPACE-EMPTY = 0;
define constant $GTK-TOOLBAR-SPACE-LINE = 1;

define C-subtype <_GtkToolbar> (<_GtkContainer>, <_AtkImplementorIface>) end;
define constant <GtkToolbar> = <_GtkToolbar>;

define constant <anonymous-8377> = <C-function-pointer>;
define constant <anonymous-8378> = <C-function-pointer>;
define constant <anonymous-8379> = <C-function-pointer>;
define constant <anonymous-8380> = <C-function-pointer>;
define constant <anonymous-8381> = <C-function-pointer>;
define constant <anonymous-8382> = <C-function-pointer>;
define C-struct <_GtkToolbarClass>
  slot GtkToolbarClass-parent-class :: <_GtkContainerClass>;
  slot GtkToolbarClass-orientation-changed :: <anonymous-8377>;
  slot GtkToolbarClass-style-changed :: <anonymous-8378>;
  slot GtkToolbarClass-popup-context-menu :: <anonymous-8379>;
  slot GtkToolbarClass-_gtk-reserved1 :: <anonymous-8380>;
  slot GtkToolbarClass-_gtk-reserved2 :: <anonymous-8381>;
  slot GtkToolbarClass-_gtk-reserved3 :: <anonymous-8382>;
end;

define C-pointer-type <GtkToolbarClass> => <_GtkToolbarClass>;

define C-struct <_GtkToolbarPrivate>
end;

define C-pointer-type <GtkToolbarPrivate> => <_GtkToolbarPrivate>;

define C-function gtk-toolbar-get-type
  result res :: <GType>;
  c-name: "gtk_toolbar_get_type";
end;

define C-function gtk-toolbar-new
  result res :: <GtkWidget>;
  c-name: "gtk_toolbar_new";
end;

define C-function gtk-toolbar-insert
  input parameter arg1 :: <GtkToolbar>;
  input parameter arg2 :: <GtkToolItem>;
  input parameter arg3 :: <gint>;
  c-name: "gtk_toolbar_insert";
end;

define C-function gtk-toolbar-get-item-index
  input parameter arg1 :: <GtkToolbar>;
  input parameter arg2 :: <GtkToolItem>;
  result res :: <gint>;
  c-name: "gtk_toolbar_get_item_index";
end;

define C-function gtk-toolbar-get-n-items
  input parameter arg1 :: <GtkToolbar>;
  result res :: <gint>;
  c-name: "gtk_toolbar_get_n_items";
end;

define C-function gtk-toolbar-get-nth-item
  input parameter arg1 :: <GtkToolbar>;
  input parameter arg2 :: <gint>;
  result res :: <GtkToolItem>;
  c-name: "gtk_toolbar_get_nth_item";
end;

define C-function gtk-toolbar-get-show-arrow
  input parameter arg1 :: <GtkToolbar>;
  result res :: <gboolean>;
  c-name: "gtk_toolbar_get_show_arrow";
end;

define C-function gtk-toolbar-set-show-arrow
  input parameter arg1 :: <GtkToolbar>;
  input parameter arg2 :: <gboolean>;
  c-name: "gtk_toolbar_set_show_arrow";
end;

define C-function gtk-toolbar-get-orientation
  input parameter arg1 :: <GtkToolbar>;
  result res :: <GtkOrientation>;
  c-name: "gtk_toolbar_get_orientation";
end;

define C-function gtk-toolbar-set-orientation
  input parameter arg1 :: <GtkToolbar>;
  input parameter arg2 :: <GtkOrientation>;
  c-name: "gtk_toolbar_set_orientation";
end;

define C-function gtk-toolbar-get-tooltips
  input parameter arg1 :: <GtkToolbar>;
  result res :: <gboolean>;
  c-name: "gtk_toolbar_get_tooltips";
end;

define C-function gtk-toolbar-set-tooltips
  input parameter arg1 :: <GtkToolbar>;
  input parameter arg2 :: <gboolean>;
  c-name: "gtk_toolbar_set_tooltips";
end;

define C-function gtk-toolbar-get-style
  input parameter arg1 :: <GtkToolbar>;
  result res :: <GtkToolbarStyle>;
  c-name: "gtk_toolbar_get_style";
end;

define C-function gtk-toolbar-set-style
  input parameter arg1 :: <GtkToolbar>;
  input parameter arg2 :: <GtkToolbarStyle>;
  c-name: "gtk_toolbar_set_style";
end;

define C-function gtk-toolbar-unset-style
  input parameter arg1 :: <GtkToolbar>;
  c-name: "gtk_toolbar_unset_style";
end;

define C-function gtk-toolbar-get-icon-size
  input parameter arg1 :: <GtkToolbar>;
  result res :: <GtkIconSize>;
  c-name: "gtk_toolbar_get_icon_size";
end;

define C-function gtk-toolbar-get-relief-style
  input parameter arg1 :: <GtkToolbar>;
  result res :: <GtkReliefStyle>;
  c-name: "gtk_toolbar_get_relief_style";
end;

define C-function gtk-toolbar-get-drop-index
  input parameter arg1 :: <GtkToolbar>;
  input parameter arg2 :: <gint>;
  input parameter arg3 :: <gint>;
  result res :: <gint>;
  c-name: "gtk_toolbar_get_drop_index";
end;

define C-function gtk-toolbar-set-drop-highlight-item
  input parameter arg1 :: <GtkToolbar>;
  input parameter arg2 :: <GtkToolItem>;
  input parameter arg3 :: <gint>;
  c-name: "gtk_toolbar_set_drop_highlight_item";
end;

define C-function gtk-toolbar-set-icon-size
  input parameter arg1 :: <GtkToolbar>;
  input parameter arg2 :: <GtkIconSize>;
  c-name: "gtk_toolbar_set_icon_size";
end;

define C-function gtk-toolbar-unset-icon-size
  input parameter arg1 :: <GtkToolbar>;
  c-name: "gtk_toolbar_unset_icon_size";
end;

define C-function gtk-toolbar-append-item
  input parameter arg1 :: <GtkToolbar>;
  input parameter arg2 :: <char*>;
  input parameter arg3 :: <char*>;
  input parameter arg4 :: <char*>;
  input parameter arg5 :: <GtkWidget>;
  input parameter arg6 :: <GtkSignalFunc>;
  input parameter arg7 :: <gpointer>;
  result res :: <GtkWidget>;
  c-name: "gtk_toolbar_append_item";
end;

define C-function gtk-toolbar-prepend-item
  input parameter arg1 :: <GtkToolbar>;
  input parameter arg2 :: <char*>;
  input parameter arg3 :: <char*>;
  input parameter arg4 :: <char*>;
  input parameter arg5 :: <GtkWidget>;
  input parameter arg6 :: <GtkSignalFunc>;
  input parameter arg7 :: <gpointer>;
  result res :: <GtkWidget>;
  c-name: "gtk_toolbar_prepend_item";
end;

define C-function gtk-toolbar-insert-item
  input parameter arg1 :: <GtkToolbar>;
  input parameter arg2 :: <char*>;
  input parameter arg3 :: <char*>;
  input parameter arg4 :: <char*>;
  input parameter arg5 :: <GtkWidget>;
  input parameter arg6 :: <GtkSignalFunc>;
  input parameter arg7 :: <gpointer>;
  input parameter arg8 :: <gint>;
  result res :: <GtkWidget>;
  c-name: "gtk_toolbar_insert_item";
end;

define C-function gtk-toolbar-insert-stock
  input parameter arg1 :: <GtkToolbar>;
  input parameter arg2 :: <gchar*>;
  input parameter arg3 :: <char*>;
  input parameter arg4 :: <char*>;
  input parameter arg5 :: <GtkSignalFunc>;
  input parameter arg6 :: <gpointer>;
  input parameter arg7 :: <gint>;
  result res :: <GtkWidget>;
  c-name: "gtk_toolbar_insert_stock";
end;

define C-function gtk-toolbar-append-space
  input parameter arg1 :: <GtkToolbar>;
  c-name: "gtk_toolbar_append_space";
end;

define C-function gtk-toolbar-prepend-space
  input parameter arg1 :: <GtkToolbar>;
  c-name: "gtk_toolbar_prepend_space";
end;

define C-function gtk-toolbar-insert-space
  input parameter arg1 :: <GtkToolbar>;
  input parameter arg2 :: <gint>;
  c-name: "gtk_toolbar_insert_space";
end;

define C-function gtk-toolbar-remove-space
  input parameter arg1 :: <GtkToolbar>;
  input parameter arg2 :: <gint>;
  c-name: "gtk_toolbar_remove_space";
end;

define C-function gtk-toolbar-append-element
  input parameter arg1 :: <GtkToolbar>;
  input parameter arg2 :: <GtkToolbarChildType>;
  input parameter arg3 :: <GtkWidget>;
  input parameter arg4 :: <char*>;
  input parameter arg5 :: <char*>;
  input parameter arg6 :: <char*>;
  input parameter arg7 :: <GtkWidget>;
  input parameter arg8 :: <GtkSignalFunc>;
  input parameter arg9 :: <gpointer>;
  result res :: <GtkWidget>;
  c-name: "gtk_toolbar_append_element";
end;

define C-function gtk-toolbar-prepend-element
  input parameter arg1 :: <GtkToolbar>;
  input parameter arg2 :: <GtkToolbarChildType>;
  input parameter arg3 :: <GtkWidget>;
  input parameter arg4 :: <char*>;
  input parameter arg5 :: <char*>;
  input parameter arg6 :: <char*>;
  input parameter arg7 :: <GtkWidget>;
  input parameter arg8 :: <GtkSignalFunc>;
  input parameter arg9 :: <gpointer>;
  result res :: <GtkWidget>;
  c-name: "gtk_toolbar_prepend_element";
end;

define C-function gtk-toolbar-insert-element
  input parameter arg1 :: <GtkToolbar>;
  input parameter arg2 :: <GtkToolbarChildType>;
  input parameter arg3 :: <GtkWidget>;
  input parameter arg4 :: <char*>;
  input parameter arg5 :: <char*>;
  input parameter arg6 :: <char*>;
  input parameter arg7 :: <GtkWidget>;
  input parameter arg8 :: <GtkSignalFunc>;
  input parameter arg9 :: <gpointer>;
  input parameter arg10 :: <gint>;
  result res :: <GtkWidget>;
  c-name: "gtk_toolbar_insert_element";
end;

define C-function gtk-toolbar-append-widget
  input parameter arg1 :: <GtkToolbar>;
  input parameter arg2 :: <GtkWidget>;
  input parameter arg3 :: <char*>;
  input parameter arg4 :: <char*>;
  c-name: "gtk_toolbar_append_widget";
end;

define C-function gtk-toolbar-prepend-widget
  input parameter arg1 :: <GtkToolbar>;
  input parameter arg2 :: <GtkWidget>;
  input parameter arg3 :: <char*>;
  input parameter arg4 :: <char*>;
  c-name: "gtk_toolbar_prepend_widget";
end;

define C-function gtk-toolbar-insert-widget
  input parameter arg1 :: <GtkToolbar>;
  input parameter arg2 :: <GtkWidget>;
  input parameter arg3 :: <char*>;
  input parameter arg4 :: <char*>;
  input parameter arg5 :: <gint>;
  c-name: "gtk_toolbar_insert_widget";
end;

define C-pointer-type <GtkType*> => <GtkType>;
define C-function gtk-signal-newv
  input parameter arg1 :: <gchar*>;
  input parameter arg2 :: <GtkSignalRunType>;
  input parameter arg3 :: <GtkType>;
  input parameter arg4 :: <guint>;
  input parameter arg5 :: <GtkSignalMarshaller>;
  input parameter arg6 :: <GtkType>;
  input parameter arg7 :: <guint>;
  input parameter arg8 :: <GtkType*>;
  result res :: <guint>;
  c-name: "gtk_signal_newv";
end;

define C-function gtk-signal-new
  input parameter arg1 :: <gchar*>;
  input parameter arg2 :: <GtkSignalRunType>;
  input parameter arg3 :: <GtkType>;
  input parameter arg4 :: <guint>;
  input parameter arg5 :: <GtkSignalMarshaller>;
  input parameter arg6 :: <GtkType>;
  input parameter arg7 :: <guint>;
  result res :: <guint>;
  c-name: "gtk_signal_new";
end;

define C-function gtk-signal-emit-stop-by-name
  input parameter arg1 :: <GtkObject>;
  input parameter arg2 :: <gchar*>;
  c-name: "gtk_signal_emit_stop_by_name";
end;

define C-function gtk-signal-connect-object-while-alive
  input parameter arg1 :: <GtkObject>;
  input parameter arg2 :: <gchar*>;
  input parameter arg3 :: <GtkSignalFunc>;
  input parameter arg4 :: <GtkObject>;
  c-name: "gtk_signal_connect_object_while_alive";
end;

define C-function gtk-signal-connect-while-alive
  input parameter arg1 :: <GtkObject>;
  input parameter arg2 :: <gchar*>;
  input parameter arg3 :: <GtkSignalFunc>;
  input parameter arg4 :: <gpointer>;
  input parameter arg5 :: <GtkObject>;
  c-name: "gtk_signal_connect_while_alive";
end;

define C-function gtk-signal-connect-full
  input parameter arg1 :: <GtkObject>;
  input parameter arg2 :: <gchar*>;
  input parameter arg3 :: <GtkSignalFunc>;
  input parameter arg4 :: <GtkCallbackMarshal>;
  input parameter arg5 :: <gpointer>;
  input parameter arg6 :: <GtkDestroyNotify>;
  input parameter arg7 :: <gint>;
  input parameter arg8 :: <gint>;
  result res :: <gulong>;
  c-name: "gtk_signal_connect_full";
end;

define C-function gtk-signal-emitv
  input parameter arg1 :: <GtkObject>;
  input parameter arg2 :: <guint>;
  input parameter arg3 :: <GtkArg>;
  c-name: "gtk_signal_emitv";
end;

define C-function gtk-signal-emit
  input parameter arg1 :: <GtkObject>;
  input parameter arg2 :: <guint>;
  c-name: "gtk_signal_emit";
end;

define C-function gtk-signal-emit-by-name
  input parameter arg1 :: <GtkObject>;
  input parameter arg2 :: <gchar*>;
  c-name: "gtk_signal_emit_by_name";
end;

define C-function gtk-signal-emitv-by-name
  input parameter arg1 :: <GtkObject>;
  input parameter arg2 :: <gchar*>;
  input parameter arg3 :: <GtkArg>;
  c-name: "gtk_signal_emitv_by_name";
end;

define C-function gtk-signal-compat-matched
  input parameter arg1 :: <GtkObject>;
  input parameter arg2 :: <GtkSignalFunc>;
  input parameter arg3 :: <gpointer>;
  input parameter arg4 :: <GSignalMatchType>;
  input parameter arg5 :: <guint>;
  c-name: "gtk_signal_compat_matched";
end;

define constant gtk-signal-default-marshaller = g-cclosure-marshal-VOID--VOID;

define C-function gtk-marshal-BOOLEAN--VOID
  input parameter arg1 :: <GClosure>;
  input parameter arg2 :: <GValue>;
  input parameter arg3 :: <guint>;
  input parameter arg4 :: <GValue>;
  input parameter arg5 :: <gpointer>;
  input parameter arg6 :: <gpointer>;
  c-name: "gtk_marshal_BOOLEAN__VOID";
end;

define C-function gtk-marshal-BOOLEAN--POINTER
  input parameter arg1 :: <GClosure>;
  input parameter arg2 :: <GValue>;
  input parameter arg3 :: <guint>;
  input parameter arg4 :: <GValue>;
  input parameter arg5 :: <gpointer>;
  input parameter arg6 :: <gpointer>;
  c-name: "gtk_marshal_BOOLEAN__POINTER";
end;

define C-function gtk-marshal-BOOLEAN--POINTER-POINTER-INT-INT
  input parameter arg1 :: <GClosure>;
  input parameter arg2 :: <GValue>;
  input parameter arg3 :: <guint>;
  input parameter arg4 :: <GValue>;
  input parameter arg5 :: <gpointer>;
  input parameter arg6 :: <gpointer>;
  c-name: "gtk_marshal_BOOLEAN__POINTER_POINTER_INT_INT";
end;

define C-function gtk-marshal-BOOLEAN--POINTER-INT-INT
  input parameter arg1 :: <GClosure>;
  input parameter arg2 :: <GValue>;
  input parameter arg3 :: <guint>;
  input parameter arg4 :: <GValue>;
  input parameter arg5 :: <gpointer>;
  input parameter arg6 :: <gpointer>;
  c-name: "gtk_marshal_BOOLEAN__POINTER_INT_INT";
end;

define C-function gtk-marshal-BOOLEAN--POINTER-INT-INT-UINT
  input parameter arg1 :: <GClosure>;
  input parameter arg2 :: <GValue>;
  input parameter arg3 :: <guint>;
  input parameter arg4 :: <GValue>;
  input parameter arg5 :: <gpointer>;
  input parameter arg6 :: <gpointer>;
  c-name: "gtk_marshal_BOOLEAN__POINTER_INT_INT_UINT";
end;

define C-function gtk-marshal-BOOLEAN--POINTER-STRING-STRING-POINTER
  input parameter arg1 :: <GClosure>;
  input parameter arg2 :: <GValue>;
  input parameter arg3 :: <guint>;
  input parameter arg4 :: <GValue>;
  input parameter arg5 :: <gpointer>;
  input parameter arg6 :: <gpointer>;
  c-name: "gtk_marshal_BOOLEAN__POINTER_STRING_STRING_POINTER";
end;

define C-function gtk-marshal-ENUM--ENUM
  input parameter arg1 :: <GClosure>;
  input parameter arg2 :: <GValue>;
  input parameter arg3 :: <guint>;
  input parameter arg4 :: <GValue>;
  input parameter arg5 :: <gpointer>;
  input parameter arg6 :: <gpointer>;
  c-name: "gtk_marshal_ENUM__ENUM";
end;

define C-function gtk-marshal-INT--POINTER
  input parameter arg1 :: <GClosure>;
  input parameter arg2 :: <GValue>;
  input parameter arg3 :: <guint>;
  input parameter arg4 :: <GValue>;
  input parameter arg5 :: <gpointer>;
  input parameter arg6 :: <gpointer>;
  c-name: "gtk_marshal_INT__POINTER";
end;

define C-function gtk-marshal-INT--POINTER-CHAR-CHAR
  input parameter arg1 :: <GClosure>;
  input parameter arg2 :: <GValue>;
  input parameter arg3 :: <guint>;
  input parameter arg4 :: <GValue>;
  input parameter arg5 :: <gpointer>;
  input parameter arg6 :: <gpointer>;
  c-name: "gtk_marshal_INT__POINTER_CHAR_CHAR";
end;

define C-function gtk-marshal-VOID--ENUM-FLOAT
  input parameter arg1 :: <GClosure>;
  input parameter arg2 :: <GValue>;
  input parameter arg3 :: <guint>;
  input parameter arg4 :: <GValue>;
  input parameter arg5 :: <gpointer>;
  input parameter arg6 :: <gpointer>;
  c-name: "gtk_marshal_VOID__ENUM_FLOAT";
end;

define C-function gtk-marshal-VOID--ENUM-FLOAT-BOOLEAN
  input parameter arg1 :: <GClosure>;
  input parameter arg2 :: <GValue>;
  input parameter arg3 :: <guint>;
  input parameter arg4 :: <GValue>;
  input parameter arg5 :: <gpointer>;
  input parameter arg6 :: <gpointer>;
  c-name: "gtk_marshal_VOID__ENUM_FLOAT_BOOLEAN";
end;

define C-function gtk-marshal-VOID--INT-INT
  input parameter arg1 :: <GClosure>;
  input parameter arg2 :: <GValue>;
  input parameter arg3 :: <guint>;
  input parameter arg4 :: <GValue>;
  input parameter arg5 :: <gpointer>;
  input parameter arg6 :: <gpointer>;
  c-name: "gtk_marshal_VOID__INT_INT";
end;

define C-function gtk-marshal-VOID--INT-INT-POINTER
  input parameter arg1 :: <GClosure>;
  input parameter arg2 :: <GValue>;
  input parameter arg3 :: <guint>;
  input parameter arg4 :: <GValue>;
  input parameter arg5 :: <gpointer>;
  input parameter arg6 :: <gpointer>;
  c-name: "gtk_marshal_VOID__INT_INT_POINTER";
end;

define C-function gtk-marshal-VOID--POINTER-INT
  input parameter arg1 :: <GClosure>;
  input parameter arg2 :: <GValue>;
  input parameter arg3 :: <guint>;
  input parameter arg4 :: <GValue>;
  input parameter arg5 :: <gpointer>;
  input parameter arg6 :: <gpointer>;
  c-name: "gtk_marshal_VOID__POINTER_INT";
end;

define C-function gtk-marshal-VOID--POINTER-POINTER
  input parameter arg1 :: <GClosure>;
  input parameter arg2 :: <GValue>;
  input parameter arg3 :: <guint>;
  input parameter arg4 :: <GValue>;
  input parameter arg5 :: <gpointer>;
  input parameter arg6 :: <gpointer>;
  c-name: "gtk_marshal_VOID__POINTER_POINTER";
end;

define C-function gtk-marshal-VOID--POINTER-POINTER-POINTER
  input parameter arg1 :: <GClosure>;
  input parameter arg2 :: <GValue>;
  input parameter arg3 :: <guint>;
  input parameter arg4 :: <GValue>;
  input parameter arg5 :: <gpointer>;
  input parameter arg6 :: <gpointer>;
  c-name: "gtk_marshal_VOID__POINTER_POINTER_POINTER";
end;

define C-function gtk-marshal-VOID--POINTER-STRING-STRING
  input parameter arg1 :: <GClosure>;
  input parameter arg2 :: <GValue>;
  input parameter arg3 :: <guint>;
  input parameter arg4 :: <GValue>;
  input parameter arg5 :: <gpointer>;
  input parameter arg6 :: <gpointer>;
  c-name: "gtk_marshal_VOID__POINTER_STRING_STRING";
end;

define C-function gtk-marshal-VOID--POINTER-UINT
  input parameter arg1 :: <GClosure>;
  input parameter arg2 :: <GValue>;
  input parameter arg3 :: <guint>;
  input parameter arg4 :: <GValue>;
  input parameter arg5 :: <gpointer>;
  input parameter arg6 :: <gpointer>;
  c-name: "gtk_marshal_VOID__POINTER_UINT";
end;

define C-function gtk-marshal-VOID--POINTER-UINT-ENUM
  input parameter arg1 :: <GClosure>;
  input parameter arg2 :: <GValue>;
  input parameter arg3 :: <guint>;
  input parameter arg4 :: <GValue>;
  input parameter arg5 :: <gpointer>;
  input parameter arg6 :: <gpointer>;
  c-name: "gtk_marshal_VOID__POINTER_UINT_ENUM";
end;

define C-function gtk-marshal-VOID--POINTER-POINTER-UINT-UINT
  input parameter arg1 :: <GClosure>;
  input parameter arg2 :: <GValue>;
  input parameter arg3 :: <guint>;
  input parameter arg4 :: <GValue>;
  input parameter arg5 :: <gpointer>;
  input parameter arg6 :: <gpointer>;
  c-name: "gtk_marshal_VOID__POINTER_POINTER_UINT_UINT";
end;

define C-function gtk-marshal-VOID--POINTER-INT-INT-POINTER-UINT-UINT
  input parameter arg1 :: <GClosure>;
  input parameter arg2 :: <GValue>;
  input parameter arg3 :: <guint>;
  input parameter arg4 :: <GValue>;
  input parameter arg5 :: <gpointer>;
  input parameter arg6 :: <gpointer>;
  c-name: "gtk_marshal_VOID__POINTER_INT_INT_POINTER_UINT_UINT";
end;

define C-function gtk-marshal-VOID--POINTER-UINT-UINT
  input parameter arg1 :: <GClosure>;
  input parameter arg2 :: <GValue>;
  input parameter arg3 :: <guint>;
  input parameter arg4 :: <GValue>;
  input parameter arg5 :: <gpointer>;
  input parameter arg6 :: <gpointer>;
  c-name: "gtk_marshal_VOID__POINTER_UINT_UINT";
end;

define C-function gtk-marshal-VOID--STRING-INT-POINTER
  input parameter arg1 :: <GClosure>;
  input parameter arg2 :: <GValue>;
  input parameter arg3 :: <guint>;
  input parameter arg4 :: <GValue>;
  input parameter arg5 :: <gpointer>;
  input parameter arg6 :: <gpointer>;
  c-name: "gtk_marshal_VOID__STRING_INT_POINTER";
end;

define C-function gtk-marshal-VOID--UINT-POINTER-UINT-ENUM-ENUM-POINTER
  input parameter arg1 :: <GClosure>;
  input parameter arg2 :: <GValue>;
  input parameter arg3 :: <guint>;
  input parameter arg4 :: <GValue>;
  input parameter arg5 :: <gpointer>;
  input parameter arg6 :: <gpointer>;
  c-name: "gtk_marshal_VOID__UINT_POINTER_UINT_ENUM_ENUM_POINTER";
end;

define C-function gtk-marshal-VOID--UINT-POINTER-UINT-UINT-ENUM
  input parameter arg1 :: <GClosure>;
  input parameter arg2 :: <GValue>;
  input parameter arg3 :: <guint>;
  input parameter arg4 :: <GValue>;
  input parameter arg5 :: <gpointer>;
  input parameter arg6 :: <gpointer>;
  c-name: "gtk_marshal_VOID__UINT_POINTER_UINT_UINT_ENUM";
end;

define C-function gtk-marshal-VOID--UINT-STRING
  input parameter arg1 :: <GClosure>;
  input parameter arg2 :: <GValue>;
  input parameter arg3 :: <guint>;
  input parameter arg4 :: <GValue>;
  input parameter arg5 :: <gpointer>;
  input parameter arg6 :: <gpointer>;
  c-name: "gtk_marshal_VOID__UINT_STRING";
end;

define constant gtk-marshal-BOOL--NONE = gtk-marshal-BOOLEAN--VOID;

define constant gtk-marshal-BOOL--POINTER = gtk-marshal-BOOLEAN--POINTER;

define constant gtk-marshal-BOOL--POINTER-POINTER-INT-INT = gtk-marshal-BOOLEAN--POINTER-POINTER-INT-INT;

define constant gtk-marshal-BOOL--POINTER-INT-INT = gtk-marshal-BOOLEAN--POINTER-INT-INT;

define constant gtk-marshal-BOOL--POINTER-INT-INT-UINT = gtk-marshal-BOOLEAN--POINTER-INT-INT-UINT;

define constant gtk-marshal-BOOL--POINTER-STRING-STRING-POINTER = gtk-marshal-BOOLEAN--POINTER-STRING-STRING-POINTER;

define constant gtk-marshal-VOID--BOOLEAN = g-cclosure-marshal-VOID--BOOLEAN;

define constant gtk-marshal-NONE--BOOL = g-cclosure-marshal-VOID--BOOLEAN;

define constant gtk-marshal-VOID--BOXED = g-cclosure-marshal-VOID--BOXED;

define constant gtk-marshal-NONE--BOXED = g-cclosure-marshal-VOID--BOXED;

define constant gtk-marshal-VOID--ENUM = g-cclosure-marshal-VOID--ENUM;

define constant gtk-marshal-NONE--ENUM = g-cclosure-marshal-VOID--ENUM;

define constant gtk-marshal-NONE--ENUM-FLOAT = gtk-marshal-VOID--ENUM-FLOAT;

define constant gtk-marshal-NONE--ENUM-FLOAT-BOOL = gtk-marshal-VOID--ENUM-FLOAT-BOOLEAN;

define constant gtk-marshal-VOID--INT = g-cclosure-marshal-VOID--INT;

define constant gtk-marshal-NONE--INT = g-cclosure-marshal-VOID--INT;

define constant gtk-marshal-NONE--INT-INT = gtk-marshal-VOID--INT-INT;

define constant gtk-marshal-NONE--INT-INT-POINTER = gtk-marshal-VOID--INT-INT-POINTER;

define constant gtk-marshal-VOID--VOID = g-cclosure-marshal-VOID--VOID;

define constant gtk-marshal-NONE--NONE = g-cclosure-marshal-VOID--VOID;

define constant gtk-marshal-VOID--OBJECT = g-cclosure-marshal-VOID--OBJECT;

define constant gtk-marshal-NONE--OBJECT = g-cclosure-marshal-VOID--OBJECT;

define constant gtk-marshal-VOID--POINTER = g-cclosure-marshal-VOID--POINTER;

define constant gtk-marshal-NONE--POINTER = g-cclosure-marshal-VOID--POINTER;

define constant gtk-marshal-NONE--POINTER-INT = gtk-marshal-VOID--POINTER-INT;

define constant gtk-marshal-NONE--POINTER-POINTER = gtk-marshal-VOID--POINTER-POINTER;

define constant gtk-marshal-NONE--POINTER-POINTER-POINTER = gtk-marshal-VOID--POINTER-POINTER-POINTER;

define constant gtk-marshal-NONE--POINTER-STRING-STRING = gtk-marshal-VOID--POINTER-STRING-STRING;

define constant gtk-marshal-NONE--POINTER-UINT = gtk-marshal-VOID--POINTER-UINT;

define constant gtk-marshal-NONE--POINTER-UINT-ENUM = gtk-marshal-VOID--POINTER-UINT-ENUM;

define constant gtk-marshal-NONE--POINTER-POINTER-UINT-UINT = gtk-marshal-VOID--POINTER-POINTER-UINT-UINT;

define constant gtk-marshal-NONE--POINTER-INT-INT-POINTER-UINT-UINT = gtk-marshal-VOID--POINTER-INT-INT-POINTER-UINT-UINT;

define constant gtk-marshal-NONE--POINTER-UINT-UINT = gtk-marshal-VOID--POINTER-UINT-UINT;

define constant gtk-marshal-VOID--STRING = g-cclosure-marshal-VOID--STRING;

define constant gtk-marshal-NONE--STRING = g-cclosure-marshal-VOID--STRING;

define constant gtk-marshal-NONE--STRING-INT-POINTER = gtk-marshal-VOID--STRING-INT-POINTER;

define constant gtk-marshal-VOID--UINT = g-cclosure-marshal-VOID--UINT;

define constant gtk-marshal-NONE--UINT = g-cclosure-marshal-VOID--UINT;

define constant gtk-marshal-NONE--UINT-POINTER-UINT-ENUM-ENUM-POINTER = gtk-marshal-VOID--UINT-POINTER-UINT-ENUM-ENUM-POINTER;

define constant gtk-marshal-NONE--UINT-POINTER-UINT-UINT-ENUM = gtk-marshal-VOID--UINT-POINTER-UINT-UINT-ENUM;

define constant gtk-marshal-NONE--UINT-STRING = gtk-marshal-VOID--UINT-STRING;

define C-subtype <_GtkPixmap> (<_GtkMisc>, <_AtkImplementorIface>) end;
define constant <GtkPixmap> = <_GtkPixmap>;

define C-struct <_GtkPixmapClass>
  slot GtkPixmapClass-parent-class :: <_GtkMiscClass>;
end;

define C-pointer-type <GtkPixmapClass> => <_GtkPixmapClass>;

define C-function gtk-pixmap-get-type
  result res :: <GtkType>;
  c-name: "gtk_pixmap_get_type";
end;

define C-function gtk-pixmap-new
  input parameter arg1 :: <GdkPixmap>;
  input parameter arg2 :: <GdkBitmap>;
  result res :: <GtkWidget>;
  c-name: "gtk_pixmap_new";
end;

define C-function gtk-pixmap-set
  input parameter arg1 :: <GtkPixmap>;
  input parameter arg2 :: <GdkPixmap>;
  input parameter arg3 :: <GdkBitmap>;
  c-name: "gtk_pixmap_set";
end;

define C-function gtk-pixmap-get
  input parameter arg1 :: <GtkPixmap>;
  input parameter arg2 :: <GdkPixmap*>;
  input parameter arg3 :: <GdkBitmap*>;
  c-name: "gtk_pixmap_get";
end;

define C-function gtk-pixmap-set-build-insensitive
  input parameter arg1 :: <GtkPixmap>;
  input parameter arg2 :: <gboolean>;
  c-name: "gtk_pixmap_set_build_insensitive";
end;

define C-struct <_GtkToggleToolButtonPrivate>
end;

define C-pointer-type <GtkToggleToolButtonPrivate> => <_GtkToggleToolButtonPrivate>;

define C-subtype <_GtkToggleToolButton> (<_GtkToolButton>, <_AtkImplementorIface>) end;
define constant <GtkToggleToolButton> = <_GtkToggleToolButton>;

define constant <anonymous-7777> = <C-function-pointer>;
define constant <anonymous-7778> = <C-function-pointer>;
define constant <anonymous-7779> = <C-function-pointer>;
define constant <anonymous-7780> = <C-function-pointer>;
define constant <anonymous-7781> = <C-function-pointer>;
define C-struct <_GtkToggleToolButtonClass>
  slot GtkToggleToolButtonClass-parent-class :: <_GtkToolButtonClass>;
  slot GtkToggleToolButtonClass-toggled :: <anonymous-7777>;
  slot GtkToggleToolButtonClass-_gtk-reserved1 :: <anonymous-7778>;
  slot GtkToggleToolButtonClass-_gtk-reserved2 :: <anonymous-7779>;
  slot GtkToggleToolButtonClass-_gtk-reserved3 :: <anonymous-7780>;
  slot GtkToggleToolButtonClass-_gtk-reserved4 :: <anonymous-7781>;
end;

define C-pointer-type <GtkToggleToolButtonClass> => <_GtkToggleToolButtonClass>;

define C-function gtk-toggle-tool-button-get-type
  result res :: <GType>;
  c-name: "gtk_toggle_tool_button_get_type";
end;

define C-function gtk-toggle-tool-button-new
  result res :: <GtkToolItem>;
  c-name: "gtk_toggle_tool_button_new";
end;

define C-function gtk-toggle-tool-button-new-from-stock
  input parameter arg1 :: <gchar*>;
  result res :: <GtkToolItem>;
  c-name: "gtk_toggle_tool_button_new_from_stock";
end;

define C-function gtk-toggle-tool-button-set-active
  input parameter arg1 :: <GtkToggleToolButton>;
  input parameter arg2 :: <gboolean>;
  c-name: "gtk_toggle_tool_button_set_active";
end;

define C-function gtk-toggle-tool-button-get-active
  input parameter arg1 :: <GtkToggleToolButton>;
  result res :: <gboolean>;
  c-name: "gtk_toggle_tool_button_get_active";
end;

define C-subtype <_GtkToggleButton> (<_GtkButton>, <_AtkImplementorIface>) end;
define constant <GtkToggleButton> = <_GtkToggleButton>;

define constant <anonymous-5512> = <C-function-pointer>;
define constant <anonymous-5513> = <C-function-pointer>;
define constant <anonymous-5514> = <C-function-pointer>;
define constant <anonymous-5515> = <C-function-pointer>;
define constant <anonymous-5516> = <C-function-pointer>;
define C-struct <_GtkToggleButtonClass>
  slot GtkToggleButtonClass-parent-class :: <_GtkButtonClass>;
  slot GtkToggleButtonClass-toggled :: <anonymous-5512>;
  slot GtkToggleButtonClass-_gtk-reserved1 :: <anonymous-5513>;
  slot GtkToggleButtonClass-_gtk-reserved2 :: <anonymous-5514>;
  slot GtkToggleButtonClass-_gtk-reserved3 :: <anonymous-5515>;
  slot GtkToggleButtonClass-_gtk-reserved4 :: <anonymous-5516>;
end;

define C-pointer-type <GtkToggleButtonClass> => <_GtkToggleButtonClass>;

define C-function gtk-toggle-button-get-type
  result res :: <GType>;
  c-name: "gtk_toggle_button_get_type";
end;

define C-function gtk-toggle-button-new
  result res :: <GtkWidget>;
  c-name: "gtk_toggle_button_new";
end;

define C-function gtk-toggle-button-new-with-label
  input parameter arg1 :: <gchar*>;
  result res :: <GtkWidget>;
  c-name: "gtk_toggle_button_new_with_label";
end;

define C-function gtk-toggle-button-new-with-mnemonic
  input parameter arg1 :: <gchar*>;
  result res :: <GtkWidget>;
  c-name: "gtk_toggle_button_new_with_mnemonic";
end;

define C-function gtk-toggle-button-set-mode
  input parameter arg1 :: <GtkToggleButton>;
  input parameter arg2 :: <gboolean>;
  c-name: "gtk_toggle_button_set_mode";
end;

define C-function gtk-toggle-button-get-mode
  input parameter arg1 :: <GtkToggleButton>;
  result res :: <gboolean>;
  c-name: "gtk_toggle_button_get_mode";
end;

define C-function gtk-toggle-button-set-active
  input parameter arg1 :: <GtkToggleButton>;
  input parameter arg2 :: <gboolean>;
  c-name: "gtk_toggle_button_set_active";
end;

define C-function gtk-toggle-button-get-active
  input parameter arg1 :: <GtkToggleButton>;
  result res :: <gboolean>;
  c-name: "gtk_toggle_button_get_active";
end;

define C-function gtk-toggle-button-toggled
  input parameter arg1 :: <GtkToggleButton>;
  c-name: "gtk_toggle_button_toggled";
end;

define C-function gtk-toggle-button-set-inconsistent
  input parameter arg1 :: <GtkToggleButton>;
  input parameter arg2 :: <gboolean>;
  c-name: "gtk_toggle_button_set_inconsistent";
end;

define C-function gtk-toggle-button-get-inconsistent
  input parameter arg1 :: <GtkToggleButton>;
  result res :: <gboolean>;
  c-name: "gtk_toggle_button_get_inconsistent";
end;

define constant gtk-toggle-button-set-state = gtk-toggle-button-set-active;

define C-struct <_GtkToggleActionPrivate>
end;

define C-pointer-type <GtkToggleActionPrivate> => <_GtkToggleActionPrivate>;

define C-subtype <_GtkToggleAction> (<_GtkAction>) end;
define constant <GtkToggleAction> = <_GtkToggleAction>;

define constant <anonymous-7728> = <C-function-pointer>;
define constant <anonymous-7729> = <C-function-pointer>;
define constant <anonymous-7730> = <C-function-pointer>;
define constant <anonymous-7731> = <C-function-pointer>;
define constant <anonymous-7732> = <C-function-pointer>;
define C-struct <_GtkToggleActionClass>
  slot GtkToggleActionClass-parent-class :: <_GtkActionClass>;
  slot GtkToggleActionClass-toggled :: <anonymous-7728>;
  slot GtkToggleActionClass-_gtk-reserved1 :: <anonymous-7729>;
  slot GtkToggleActionClass-_gtk-reserved2 :: <anonymous-7730>;
  slot GtkToggleActionClass-_gtk-reserved3 :: <anonymous-7731>;
  slot GtkToggleActionClass-_gtk-reserved4 :: <anonymous-7732>;
end;

define C-pointer-type <GtkToggleActionClass> => <_GtkToggleActionClass>;

define C-function gtk-toggle-action-get-type
  result res :: <GType>;
  c-name: "gtk_toggle_action_get_type";
end;

define C-function gtk-toggle-action-new
  input parameter arg1 :: <gchar*>;
  input parameter arg2 :: <gchar*>;
  input parameter arg3 :: <gchar*>;
  input parameter arg4 :: <gchar*>;
  result res :: <GtkToggleAction>;
  c-name: "gtk_toggle_action_new";
end;

define C-function gtk-toggle-action-toggled
  input parameter arg1 :: <GtkToggleAction>;
  c-name: "gtk_toggle_action_toggled";
end;

define C-function gtk-toggle-action-set-active
  input parameter arg1 :: <GtkToggleAction>;
  input parameter arg2 :: <gboolean>;
  c-name: "gtk_toggle_action_set_active";
end;

define C-function gtk-toggle-action-get-active
  input parameter arg1 :: <GtkToggleAction>;
  result res :: <gboolean>;
  c-name: "gtk_toggle_action_get_active";
end;

define C-function gtk-toggle-action-set-draw-as-radio
  input parameter arg1 :: <GtkToggleAction>;
  input parameter arg2 :: <gboolean>;
  c-name: "gtk_toggle_action_set_draw_as_radio";
end;

define C-function gtk-toggle-action-get-draw-as-radio
  input parameter arg1 :: <GtkToggleAction>;
  result res :: <gboolean>;
  c-name: "gtk_toggle_action_get_draw_as_radio";
end;

define C-struct <_GtkLabelSelectionInfo>
end;

define C-pointer-type <GtkLabelSelectionInfo> => <_GtkLabelSelectionInfo>;

define C-subtype <_GtkLabel> (<_GtkMisc>, <_AtkImplementorIface>) end;
define constant <GtkLabel> = <_GtkLabel>;

define C-subtype <_GtkTipsQuery> (<_GtkLabel>, <_AtkImplementorIface>) end;
define constant <GtkTipsQuery> = <_GtkTipsQuery>;

define constant <anonymous-4380> = <C-function-pointer>;
define constant <anonymous-4381> = <C-function-pointer>;
define constant <anonymous-4382> = <C-function-pointer>;
define constant <anonymous-4383> = <C-function-pointer>;
define constant <anonymous-4384> = <C-function-pointer>;
define constant <anonymous-4385> = <C-function-pointer>;
define constant <anonymous-4386> = <C-function-pointer>;
define C-struct <_GtkLabelClass>
  slot GtkLabelClass-parent-class :: <_GtkMiscClass>;
  slot GtkLabelClass-move-cursor :: <anonymous-4380>;
  slot GtkLabelClass-copy-clipboard :: <anonymous-4381>;
  slot GtkLabelClass-populate-popup :: <anonymous-4382>;
  slot GtkLabelClass-_gtk-reserved1 :: <anonymous-4383>;
  slot GtkLabelClass-_gtk-reserved2 :: <anonymous-4384>;
  slot GtkLabelClass-_gtk-reserved3 :: <anonymous-4385>;
  slot GtkLabelClass-_gtk-reserved4 :: <anonymous-4386>;
end;

define C-pointer-type <GtkLabelClass> => <_GtkLabelClass>;

define constant <anonymous-8359> = <C-function-pointer>;
define constant <anonymous-8360> = <C-function-pointer>;
define constant <anonymous-8361> = <C-function-pointer>;
define constant <anonymous-8362> = <C-function-pointer>;
define constant <anonymous-8363> = <C-function-pointer>;
define constant <anonymous-8364> = <C-function-pointer>;
define constant <anonymous-8365> = <C-function-pointer>;
define constant <anonymous-8366> = <C-function-pointer>;
define C-struct <_GtkTipsQueryClass>
  slot GtkTipsQueryClass-parent-class :: <_GtkLabelClass>;
  slot GtkTipsQueryClass-start-query :: <anonymous-8359>;
  slot GtkTipsQueryClass-stop-query :: <anonymous-8360>;
  slot GtkTipsQueryClass-widget-entered :: <anonymous-8361>;
  slot GtkTipsQueryClass-widget-selected :: <anonymous-8362>;
  slot GtkTipsQueryClass-_gtk-reserved1 :: <anonymous-8363>;
  slot GtkTipsQueryClass-_gtk-reserved2 :: <anonymous-8364>;
  slot GtkTipsQueryClass-_gtk-reserved3 :: <anonymous-8365>;
  slot GtkTipsQueryClass-_gtk-reserved4 :: <anonymous-8366>;
end;

define C-pointer-type <GtkTipsQueryClass> => <_GtkTipsQueryClass>;

define C-function gtk-tips-query-get-type
  result res :: <GtkType>;
  c-name: "gtk_tips_query_get_type";
end;

define C-function gtk-tips-query-new
  result res :: <GtkWidget>;
  c-name: "gtk_tips_query_new";
end;

define C-function gtk-tips-query-start-query
  input parameter arg1 :: <GtkTipsQuery>;
  c-name: "gtk_tips_query_start_query";
end;

define C-function gtk-tips-query-stop-query
  input parameter arg1 :: <GtkTipsQuery>;
  c-name: "gtk_tips_query_stop_query";
end;

define C-function gtk-tips-query-set-caller
  input parameter arg1 :: <GtkTipsQuery>;
  input parameter arg2 :: <GtkWidget>;
  c-name: "gtk_tips_query_set_caller";
end;

define C-function gtk-tips-query-set-labels
  input parameter arg1 :: <GtkTipsQuery>;
  input parameter arg2 :: <gchar*>;
  input parameter arg3 :: <gchar*>;
  c-name: "gtk_tips_query_set_labels";
end;

define C-function gtk-label-get-type
  result res :: <GType>;
  c-name: "gtk_label_get_type";
end;

define C-function gtk-label-new
  input parameter arg1 :: <gchar*>;
  result res :: <GtkWidget>;
  c-name: "gtk_label_new";
end;

define C-function gtk-label-new-with-mnemonic
  input parameter arg1 :: <gchar*>;
  result res :: <GtkWidget>;
  c-name: "gtk_label_new_with_mnemonic";
end;

define C-function gtk-label-set-text
  input parameter arg1 :: <GtkLabel>;
  input parameter arg2 :: <gchar*>;
  c-name: "gtk_label_set_text";
end;

define C-function gtk-label-get-text
  input parameter arg1 :: <GtkLabel>;
  result res :: <gchar*>;
  c-name: "gtk_label_get_text";
end;

define C-function gtk-label-set-attributes
  input parameter arg1 :: <GtkLabel>;
  input parameter arg2 :: <PangoAttrList>;
  c-name: "gtk_label_set_attributes";
end;

define C-function gtk-label-get-attributes
  input parameter arg1 :: <GtkLabel>;
  result res :: <PangoAttrList>;
  c-name: "gtk_label_get_attributes";
end;

define C-function gtk-label-set-label
  input parameter arg1 :: <GtkLabel>;
  input parameter arg2 :: <gchar*>;
  c-name: "gtk_label_set_label";
end;

define C-function gtk-label-get-label
  input parameter arg1 :: <GtkLabel>;
  result res :: <gchar*>;
  c-name: "gtk_label_get_label";
end;

define C-function gtk-label-set-markup
  input parameter arg1 :: <GtkLabel>;
  input parameter arg2 :: <gchar*>;
  c-name: "gtk_label_set_markup";
end;

define C-function gtk-label-set-use-markup
  input parameter arg1 :: <GtkLabel>;
  input parameter arg2 :: <gboolean>;
  c-name: "gtk_label_set_use_markup";
end;

define C-function gtk-label-get-use-markup
  input parameter arg1 :: <GtkLabel>;
  result res :: <gboolean>;
  c-name: "gtk_label_get_use_markup";
end;

define C-function gtk-label-set-use-underline
  input parameter arg1 :: <GtkLabel>;
  input parameter arg2 :: <gboolean>;
  c-name: "gtk_label_set_use_underline";
end;

define C-function gtk-label-get-use-underline
  input parameter arg1 :: <GtkLabel>;
  result res :: <gboolean>;
  c-name: "gtk_label_get_use_underline";
end;

define C-function gtk-label-set-markup-with-mnemonic
  input parameter arg1 :: <GtkLabel>;
  input parameter arg2 :: <gchar*>;
  c-name: "gtk_label_set_markup_with_mnemonic";
end;

define C-function gtk-label-get-mnemonic-keyval
  input parameter arg1 :: <GtkLabel>;
  result res :: <guint>;
  c-name: "gtk_label_get_mnemonic_keyval";
end;

define C-function gtk-label-set-mnemonic-widget
  input parameter arg1 :: <GtkLabel>;
  input parameter arg2 :: <GtkWidget>;
  c-name: "gtk_label_set_mnemonic_widget";
end;

define C-function gtk-label-get-mnemonic-widget
  input parameter arg1 :: <GtkLabel>;
  result res :: <GtkWidget>;
  c-name: "gtk_label_get_mnemonic_widget";
end;

define C-function gtk-label-set-text-with-mnemonic
  input parameter arg1 :: <GtkLabel>;
  input parameter arg2 :: <gchar*>;
  c-name: "gtk_label_set_text_with_mnemonic";
end;

define C-function gtk-label-set-justify
  input parameter arg1 :: <GtkLabel>;
  input parameter arg2 :: <GtkJustification>;
  c-name: "gtk_label_set_justify";
end;

define C-function gtk-label-get-justify
  input parameter arg1 :: <GtkLabel>;
  result res :: <GtkJustification>;
  c-name: "gtk_label_get_justify";
end;

define C-function gtk-label-set-ellipsize
  input parameter arg1 :: <GtkLabel>;
  input parameter arg2 :: <PangoEllipsizeMode>;
  c-name: "gtk_label_set_ellipsize";
end;

define C-function gtk-label-get-ellipsize
  input parameter arg1 :: <GtkLabel>;
  result res :: <PangoEllipsizeMode>;
  c-name: "gtk_label_get_ellipsize";
end;

define C-function gtk-label-set-width-chars
  input parameter arg1 :: <GtkLabel>;
  input parameter arg2 :: <gint>;
  c-name: "gtk_label_set_width_chars";
end;

define C-function gtk-label-get-width-chars
  input parameter arg1 :: <GtkLabel>;
  result res :: <gint>;
  c-name: "gtk_label_get_width_chars";
end;

define C-function gtk-label-set-max-width-chars
  input parameter arg1 :: <GtkLabel>;
  input parameter arg2 :: <gint>;
  c-name: "gtk_label_set_max_width_chars";
end;

define C-function gtk-label-get-max-width-chars
  input parameter arg1 :: <GtkLabel>;
  result res :: <gint>;
  c-name: "gtk_label_get_max_width_chars";
end;

define C-function gtk-label-set-pattern
  input parameter arg1 :: <GtkLabel>;
  input parameter arg2 :: <gchar*>;
  c-name: "gtk_label_set_pattern";
end;

define C-function gtk-label-set-line-wrap
  input parameter arg1 :: <GtkLabel>;
  input parameter arg2 :: <gboolean>;
  c-name: "gtk_label_set_line_wrap";
end;

define C-function gtk-label-get-line-wrap
  input parameter arg1 :: <GtkLabel>;
  result res :: <gboolean>;
  c-name: "gtk_label_get_line_wrap";
end;

define C-function gtk-label-set-line-wrap-mode
  input parameter arg1 :: <GtkLabel>;
  input parameter arg2 :: <PangoWrapMode>;
  c-name: "gtk_label_set_line_wrap_mode";
end;

define C-function gtk-label-get-line-wrap-mode
  input parameter arg1 :: <GtkLabel>;
  result res :: <PangoWrapMode>;
  c-name: "gtk_label_get_line_wrap_mode";
end;

define C-function gtk-label-set-selectable
  input parameter arg1 :: <GtkLabel>;
  input parameter arg2 :: <gboolean>;
  c-name: "gtk_label_set_selectable";
end;

define C-function gtk-label-get-selectable
  input parameter arg1 :: <GtkLabel>;
  result res :: <gboolean>;
  c-name: "gtk_label_get_selectable";
end;

define C-function gtk-label-set-angle
  input parameter arg1 :: <GtkLabel>;
  input parameter arg2 :: <gdouble>;
  c-name: "gtk_label_set_angle";
end;

define C-function gtk-label-get-angle
  input parameter arg1 :: <GtkLabel>;
  result res :: <gdouble>;
  c-name: "gtk_label_get_angle";
end;

define C-function gtk-label-select-region
  input parameter arg1 :: <GtkLabel>;
  input parameter arg2 :: <gint>;
  input parameter arg3 :: <gint>;
  c-name: "gtk_label_select_region";
end;

define C-function gtk-label-get-selection-bounds
  input parameter arg1 :: <GtkLabel>;
  input parameter arg2 :: <gint*>;
  input parameter arg3 :: <gint*>;
  result res :: <gboolean>;
  c-name: "gtk_label_get_selection_bounds";
end;

define C-function gtk-label-get-layout
  input parameter arg1 :: <GtkLabel>;
  result res :: <PangoLayout>;
  c-name: "gtk_label_get_layout";
end;

define C-function gtk-label-get-layout-offsets
  input parameter arg1 :: <GtkLabel>;
  input parameter arg2 :: <gint*>;
  input parameter arg3 :: <gint*>;
  c-name: "gtk_label_get_layout_offsets";
end;

define C-function gtk-label-set-single-line-mode
  input parameter arg1 :: <GtkLabel>;
  input parameter arg2 :: <gboolean>;
  c-name: "gtk_label_set_single_line_mode";
end;

define C-function gtk-label-get-single-line-mode
  input parameter arg1 :: <GtkLabel>;
  result res :: <gboolean>;
  c-name: "gtk_label_get_single_line_mode";
end;

define C-function gtk-label-get
  input parameter arg1 :: <GtkLabel>;
  input parameter arg2 :: <gchar**>;
  c-name: "gtk_label_get";
end;

define C-function gtk-label-parse-uline
  input parameter arg1 :: <GtkLabel>;
  input parameter arg2 :: <gchar*>;
  result res :: <guint>;
  c-name: "gtk_label_parse_uline";
end;

define constant gtk-label-set = gtk-label-set-text;

define constant <GtkTextWindowType> = <C-int>;
define constant $GTK-TEXT-WINDOW-PRIVATE = 0;
define constant $GTK-TEXT-WINDOW-WIDGET = 1;
define constant $GTK-TEXT-WINDOW-TEXT = 2;
define constant $GTK-TEXT-WINDOW-LEFT = 3;
define constant $GTK-TEXT-WINDOW-RIGHT = 4;
define constant $GTK-TEXT-WINDOW-TOP = 5;
define constant $GTK-TEXT-WINDOW-BOTTOM = 6;

define C-struct <_GtkTextLayout>
end;

define C-struct <_GtkTextWindow>
end;

define C-pointer-type <GtkTextWindow> => <_GtkTextWindow>;

define C-subtype <_GtkTextMark> (<_GObject>) end;
define constant <GtkTextMark> = <_GtkTextMark>;

define C-struct <_GtkTextPendingScroll>
end;

define C-pointer-type <GtkTextPendingScroll> => <_GtkTextPendingScroll>;

define C-subtype <_GtkTextView> (<_GtkContainer>, <_AtkImplementorIface>) end;
define constant <GtkTextView> = <_GtkTextView>;

define constant <anonymous-8279> = <C-function-pointer>;
define constant <anonymous-8280> = <C-function-pointer>;
define constant <anonymous-8281> = <C-function-pointer>;
define constant <anonymous-8282> = <C-function-pointer>;
define constant <anonymous-8283> = <C-function-pointer>;
define constant <anonymous-8284> = <C-function-pointer>;
define constant <anonymous-8285> = <C-function-pointer>;
define constant <anonymous-8286> = <C-function-pointer>;
define constant <anonymous-8287> = <C-function-pointer>;
define constant <anonymous-8288> = <C-function-pointer>;
define constant <anonymous-8289> = <C-function-pointer>;
define constant <anonymous-8290> = <C-function-pointer>;
define constant <anonymous-8291> = <C-function-pointer>;
define constant <anonymous-8292> = <C-function-pointer>;
define constant <anonymous-8293> = <C-function-pointer>;
define constant <anonymous-8294> = <C-function-pointer>;
define constant <anonymous-8295> = <C-function-pointer>;
define constant <anonymous-8296> = <C-function-pointer>;
define constant <anonymous-8297> = <C-function-pointer>;
define constant <anonymous-8298> = <C-function-pointer>;
define C-struct <_GtkTextViewClass>
  slot GtkTextViewClass-parent-class :: <_GtkContainerClass>;
  slot GtkTextViewClass-set-scroll-adjustments :: <anonymous-8279>;
  slot GtkTextViewClass-populate-popup :: <anonymous-8280>;
  slot GtkTextViewClass-move-cursor :: <anonymous-8281>;
  slot GtkTextViewClass-page-horizontally :: <anonymous-8282>;
  slot GtkTextViewClass-set-anchor :: <anonymous-8283>;
  slot GtkTextViewClass-insert-at-cursor :: <anonymous-8284>;
  slot GtkTextViewClass-delete-from-cursor :: <anonymous-8285>;
  slot GtkTextViewClass-backspace :: <anonymous-8286>;
  slot GtkTextViewClass-cut-clipboard :: <anonymous-8287>;
  slot GtkTextViewClass-copy-clipboard :: <anonymous-8288>;
  slot GtkTextViewClass-paste-clipboard :: <anonymous-8289>;
  slot GtkTextViewClass-toggle-overwrite :: <anonymous-8290>;
  slot GtkTextViewClass-move-focus :: <anonymous-8291>;
  slot GtkTextViewClass-_gtk-reserved1 :: <anonymous-8292>;
  slot GtkTextViewClass-_gtk-reserved2 :: <anonymous-8293>;
  slot GtkTextViewClass-_gtk-reserved3 :: <anonymous-8294>;
  slot GtkTextViewClass-_gtk-reserved4 :: <anonymous-8295>;
  slot GtkTextViewClass-_gtk-reserved5 :: <anonymous-8296>;
  slot GtkTextViewClass-_gtk-reserved6 :: <anonymous-8297>;
  slot GtkTextViewClass-_gtk-reserved7 :: <anonymous-8298>;
end;

define C-pointer-type <GtkTextViewClass> => <_GtkTextViewClass>;

define C-function gtk-text-view-get-type
  result res :: <GType>;
  c-name: "gtk_text_view_get_type";
end;

define C-function gtk-text-view-new
  result res :: <GtkWidget>;
  c-name: "gtk_text_view_new";
end;

define C-function gtk-text-view-new-with-buffer
  input parameter arg1 :: <GtkTextBuffer>;
  result res :: <GtkWidget>;
  c-name: "gtk_text_view_new_with_buffer";
end;

define C-function gtk-text-view-set-buffer
  input parameter arg1 :: <GtkTextView>;
  input parameter arg2 :: <GtkTextBuffer>;
  c-name: "gtk_text_view_set_buffer";
end;

define C-function gtk-text-view-get-buffer
  input parameter arg1 :: <GtkTextView>;
  result res :: <GtkTextBuffer>;
  c-name: "gtk_text_view_get_buffer";
end;

define C-function gtk-text-view-scroll-to-iter
  input parameter arg1 :: <GtkTextView>;
  input parameter arg2 :: <GtkTextIter>;
  input parameter arg3 :: <gdouble>;
  input parameter arg4 :: <gboolean>;
  input parameter arg5 :: <gdouble>;
  input parameter arg6 :: <gdouble>;
  result res :: <gboolean>;
  c-name: "gtk_text_view_scroll_to_iter";
end;

define C-function gtk-text-view-scroll-to-mark
  input parameter arg1 :: <GtkTextView>;
  input parameter arg2 :: <GtkTextMark>;
  input parameter arg3 :: <gdouble>;
  input parameter arg4 :: <gboolean>;
  input parameter arg5 :: <gdouble>;
  input parameter arg6 :: <gdouble>;
  c-name: "gtk_text_view_scroll_to_mark";
end;

define C-function gtk-text-view-scroll-mark-onscreen
  input parameter arg1 :: <GtkTextView>;
  input parameter arg2 :: <GtkTextMark>;
  c-name: "gtk_text_view_scroll_mark_onscreen";
end;

define C-function gtk-text-view-move-mark-onscreen
  input parameter arg1 :: <GtkTextView>;
  input parameter arg2 :: <GtkTextMark>;
  result res :: <gboolean>;
  c-name: "gtk_text_view_move_mark_onscreen";
end;

define C-function gtk-text-view-place-cursor-onscreen
  input parameter arg1 :: <GtkTextView>;
  result res :: <gboolean>;
  c-name: "gtk_text_view_place_cursor_onscreen";
end;

define C-function gtk-text-view-get-visible-rect
  input parameter arg1 :: <GtkTextView>;
  input parameter arg2 :: <GdkRectangle>;
  c-name: "gtk_text_view_get_visible_rect";
end;

define C-function gtk-text-view-set-cursor-visible
  input parameter arg1 :: <GtkTextView>;
  input parameter arg2 :: <gboolean>;
  c-name: "gtk_text_view_set_cursor_visible";
end;

define C-function gtk-text-view-get-cursor-visible
  input parameter arg1 :: <GtkTextView>;
  result res :: <gboolean>;
  c-name: "gtk_text_view_get_cursor_visible";
end;

define C-function gtk-text-view-get-iter-location
  input parameter arg1 :: <GtkTextView>;
  input parameter arg2 :: <GtkTextIter>;
  input parameter arg3 :: <GdkRectangle>;
  c-name: "gtk_text_view_get_iter_location";
end;

define C-function gtk-text-view-get-iter-at-location
  input parameter arg1 :: <GtkTextView>;
  input parameter arg2 :: <GtkTextIter>;
  input parameter arg3 :: <gint>;
  input parameter arg4 :: <gint>;
  c-name: "gtk_text_view_get_iter_at_location";
end;

define C-function gtk-text-view-get-iter-at-position
  input parameter arg1 :: <GtkTextView>;
  input parameter arg2 :: <GtkTextIter>;
  input parameter arg3 :: <gint*>;
  input parameter arg4 :: <gint>;
  input parameter arg5 :: <gint>;
  c-name: "gtk_text_view_get_iter_at_position";
end;

define C-function gtk-text-view-get-line-yrange
  input parameter arg1 :: <GtkTextView>;
  input parameter arg2 :: <GtkTextIter>;
  input parameter arg3 :: <gint*>;
  input parameter arg4 :: <gint*>;
  c-name: "gtk_text_view_get_line_yrange";
end;

define C-function gtk-text-view-get-line-at-y
  input parameter arg1 :: <GtkTextView>;
  input parameter arg2 :: <GtkTextIter>;
  input parameter arg3 :: <gint>;
  input parameter arg4 :: <gint*>;
  c-name: "gtk_text_view_get_line_at_y";
end;

define C-function gtk-text-view-buffer-to-window-coords
  input parameter arg1 :: <GtkTextView>;
  input parameter arg2 :: <GtkTextWindowType>;
  input parameter arg3 :: <gint>;
  input parameter arg4 :: <gint>;
  input parameter arg5 :: <gint*>;
  input parameter arg6 :: <gint*>;
  c-name: "gtk_text_view_buffer_to_window_coords";
end;

define C-function gtk-text-view-window-to-buffer-coords
  input parameter arg1 :: <GtkTextView>;
  input parameter arg2 :: <GtkTextWindowType>;
  input parameter arg3 :: <gint>;
  input parameter arg4 :: <gint>;
  input parameter arg5 :: <gint*>;
  input parameter arg6 :: <gint*>;
  c-name: "gtk_text_view_window_to_buffer_coords";
end;

define C-function gtk-text-view-get-window
  input parameter arg1 :: <GtkTextView>;
  input parameter arg2 :: <GtkTextWindowType>;
  result res :: <GdkWindow>;
  c-name: "gtk_text_view_get_window";
end;

define C-function gtk-text-view-get-window-type
  input parameter arg1 :: <GtkTextView>;
  input parameter arg2 :: <GdkWindow>;
  result res :: <GtkTextWindowType>;
  c-name: "gtk_text_view_get_window_type";
end;

define C-function gtk-text-view-set-border-window-size
  input parameter arg1 :: <GtkTextView>;
  input parameter arg2 :: <GtkTextWindowType>;
  input parameter arg3 :: <gint>;
  c-name: "gtk_text_view_set_border_window_size";
end;

define C-function gtk-text-view-get-border-window-size
  input parameter arg1 :: <GtkTextView>;
  input parameter arg2 :: <GtkTextWindowType>;
  result res :: <gint>;
  c-name: "gtk_text_view_get_border_window_size";
end;

define C-function gtk-text-view-forward-display-line
  input parameter arg1 :: <GtkTextView>;
  input parameter arg2 :: <GtkTextIter>;
  result res :: <gboolean>;
  c-name: "gtk_text_view_forward_display_line";
end;

define C-function gtk-text-view-backward-display-line
  input parameter arg1 :: <GtkTextView>;
  input parameter arg2 :: <GtkTextIter>;
  result res :: <gboolean>;
  c-name: "gtk_text_view_backward_display_line";
end;

define C-function gtk-text-view-forward-display-line-end
  input parameter arg1 :: <GtkTextView>;
  input parameter arg2 :: <GtkTextIter>;
  result res :: <gboolean>;
  c-name: "gtk_text_view_forward_display_line_end";
end;

define C-function gtk-text-view-backward-display-line-start
  input parameter arg1 :: <GtkTextView>;
  input parameter arg2 :: <GtkTextIter>;
  result res :: <gboolean>;
  c-name: "gtk_text_view_backward_display_line_start";
end;

define C-function gtk-text-view-starts-display-line
  input parameter arg1 :: <GtkTextView>;
  input parameter arg2 :: <GtkTextIter>;
  result res :: <gboolean>;
  c-name: "gtk_text_view_starts_display_line";
end;

define C-function gtk-text-view-move-visually
  input parameter arg1 :: <GtkTextView>;
  input parameter arg2 :: <GtkTextIter>;
  input parameter arg3 :: <gint>;
  result res :: <gboolean>;
  c-name: "gtk_text_view_move_visually";
end;

define C-function gtk-text-view-add-child-at-anchor
  input parameter arg1 :: <GtkTextView>;
  input parameter arg2 :: <GtkWidget>;
  input parameter arg3 :: <GtkTextChildAnchor>;
  c-name: "gtk_text_view_add_child_at_anchor";
end;

define C-function gtk-text-view-add-child-in-window
  input parameter arg1 :: <GtkTextView>;
  input parameter arg2 :: <GtkWidget>;
  input parameter arg3 :: <GtkTextWindowType>;
  input parameter arg4 :: <gint>;
  input parameter arg5 :: <gint>;
  c-name: "gtk_text_view_add_child_in_window";
end;

define C-function gtk-text-view-move-child
  input parameter arg1 :: <GtkTextView>;
  input parameter arg2 :: <GtkWidget>;
  input parameter arg3 :: <gint>;
  input parameter arg4 :: <gint>;
  c-name: "gtk_text_view_move_child";
end;

define C-function gtk-text-view-set-wrap-mode
  input parameter arg1 :: <GtkTextView>;
  input parameter arg2 :: <GtkWrapMode>;
  c-name: "gtk_text_view_set_wrap_mode";
end;

define C-function gtk-text-view-get-wrap-mode
  input parameter arg1 :: <GtkTextView>;
  result res :: <GtkWrapMode>;
  c-name: "gtk_text_view_get_wrap_mode";
end;

define C-function gtk-text-view-set-editable
  input parameter arg1 :: <GtkTextView>;
  input parameter arg2 :: <gboolean>;
  c-name: "gtk_text_view_set_editable";
end;

define C-function gtk-text-view-get-editable
  input parameter arg1 :: <GtkTextView>;
  result res :: <gboolean>;
  c-name: "gtk_text_view_get_editable";
end;

define C-function gtk-text-view-set-overwrite
  input parameter arg1 :: <GtkTextView>;
  input parameter arg2 :: <gboolean>;
  c-name: "gtk_text_view_set_overwrite";
end;

define C-function gtk-text-view-get-overwrite
  input parameter arg1 :: <GtkTextView>;
  result res :: <gboolean>;
  c-name: "gtk_text_view_get_overwrite";
end;

define C-function gtk-text-view-set-accepts-tab
  input parameter arg1 :: <GtkTextView>;
  input parameter arg2 :: <gboolean>;
  c-name: "gtk_text_view_set_accepts_tab";
end;

define C-function gtk-text-view-get-accepts-tab
  input parameter arg1 :: <GtkTextView>;
  result res :: <gboolean>;
  c-name: "gtk_text_view_get_accepts_tab";
end;

define C-function gtk-text-view-set-pixels-above-lines
  input parameter arg1 :: <GtkTextView>;
  input parameter arg2 :: <gint>;
  c-name: "gtk_text_view_set_pixels_above_lines";
end;

define C-function gtk-text-view-get-pixels-above-lines
  input parameter arg1 :: <GtkTextView>;
  result res :: <gint>;
  c-name: "gtk_text_view_get_pixels_above_lines";
end;

define C-function gtk-text-view-set-pixels-below-lines
  input parameter arg1 :: <GtkTextView>;
  input parameter arg2 :: <gint>;
  c-name: "gtk_text_view_set_pixels_below_lines";
end;

define C-function gtk-text-view-get-pixels-below-lines
  input parameter arg1 :: <GtkTextView>;
  result res :: <gint>;
  c-name: "gtk_text_view_get_pixels_below_lines";
end;

define C-function gtk-text-view-set-pixels-inside-wrap
  input parameter arg1 :: <GtkTextView>;
  input parameter arg2 :: <gint>;
  c-name: "gtk_text_view_set_pixels_inside_wrap";
end;

define C-function gtk-text-view-get-pixels-inside-wrap
  input parameter arg1 :: <GtkTextView>;
  result res :: <gint>;
  c-name: "gtk_text_view_get_pixels_inside_wrap";
end;

define C-function gtk-text-view-set-justification
  input parameter arg1 :: <GtkTextView>;
  input parameter arg2 :: <GtkJustification>;
  c-name: "gtk_text_view_set_justification";
end;

define C-function gtk-text-view-get-justification
  input parameter arg1 :: <GtkTextView>;
  result res :: <GtkJustification>;
  c-name: "gtk_text_view_get_justification";
end;

define C-function gtk-text-view-set-left-margin
  input parameter arg1 :: <GtkTextView>;
  input parameter arg2 :: <gint>;
  c-name: "gtk_text_view_set_left_margin";
end;

define C-function gtk-text-view-get-left-margin
  input parameter arg1 :: <GtkTextView>;
  result res :: <gint>;
  c-name: "gtk_text_view_get_left_margin";
end;

define C-function gtk-text-view-set-right-margin
  input parameter arg1 :: <GtkTextView>;
  input parameter arg2 :: <gint>;
  c-name: "gtk_text_view_set_right_margin";
end;

define C-function gtk-text-view-get-right-margin
  input parameter arg1 :: <GtkTextView>;
  result res :: <gint>;
  c-name: "gtk_text_view_get_right_margin";
end;

define C-function gtk-text-view-set-indent
  input parameter arg1 :: <GtkTextView>;
  input parameter arg2 :: <gint>;
  c-name: "gtk_text_view_set_indent";
end;

define C-function gtk-text-view-get-indent
  input parameter arg1 :: <GtkTextView>;
  result res :: <gint>;
  c-name: "gtk_text_view_get_indent";
end;

define C-function gtk-text-view-set-tabs
  input parameter arg1 :: <GtkTextView>;
  input parameter arg2 :: <PangoTabArray>;
  c-name: "gtk_text_view_set_tabs";
end;

define C-function gtk-text-view-get-tabs
  input parameter arg1 :: <GtkTextView>;
  result res :: <PangoTabArray>;
  c-name: "gtk_text_view_get_tabs";
end;

define C-function gtk-text-view-get-default-attributes
  input parameter arg1 :: <GtkTextView>;
  result res :: <GtkTextAttributes>;
  c-name: "gtk_text_view_get_default_attributes";
end;

define constant $GTK-TEXT-VIEW-PRIORITY-VALIDATE = 125;

define constant <GtkTextBufferTargetInfo> = <C-int>;
define constant $GTK-TEXT-BUFFER-TARGET-INFO-BUFFER-CONTENTS = -1;
define constant $GTK-TEXT-BUFFER-TARGET-INFO-RICH-TEXT = -2;
define constant $GTK-TEXT-BUFFER-TARGET-INFO-TEXT = -3;

define constant <anonymous-8172> = <C-function-pointer>;
define constant <anonymous-8173> = <C-function-pointer>;
define constant <anonymous-8174> = <C-function-pointer>;
define constant <anonymous-8175> = <C-function-pointer>;
define constant <anonymous-8176> = <C-function-pointer>;
define constant <anonymous-8177> = <C-function-pointer>;
define constant <anonymous-8178> = <C-function-pointer>;
define constant <anonymous-8179> = <C-function-pointer>;
define constant <anonymous-8180> = <C-function-pointer>;
define constant <anonymous-8181> = <C-function-pointer>;
define constant <anonymous-8182> = <C-function-pointer>;
define constant <anonymous-8183> = <C-function-pointer>;
define constant <anonymous-8184> = <C-function-pointer>;
define constant <anonymous-8185> = <C-function-pointer>;
define constant <anonymous-8186> = <C-function-pointer>;
define constant <anonymous-8187> = <C-function-pointer>;
define constant <anonymous-8188> = <C-function-pointer>;
define constant <anonymous-8189> = <C-function-pointer>;
define C-struct <_GtkTextBufferClass>
  slot GtkTextBufferClass-parent-class :: <_GObjectClass>;
  slot GtkTextBufferClass-insert-text :: <anonymous-8172>;
  slot GtkTextBufferClass-insert-pixbuf :: <anonymous-8173>;
  slot GtkTextBufferClass-insert-child-anchor :: <anonymous-8174>;
  slot GtkTextBufferClass-delete-range :: <anonymous-8175>;
  slot GtkTextBufferClass-changed :: <anonymous-8176>;
  slot GtkTextBufferClass-modified-changed :: <anonymous-8177>;
  slot GtkTextBufferClass-mark-set :: <anonymous-8178>;
  slot GtkTextBufferClass-mark-deleted :: <anonymous-8179>;
  slot GtkTextBufferClass-apply-tag :: <anonymous-8180>;
  slot GtkTextBufferClass-remove-tag :: <anonymous-8181>;
  slot GtkTextBufferClass-begin-user-action :: <anonymous-8182>;
  slot GtkTextBufferClass-end-user-action :: <anonymous-8183>;
  slot GtkTextBufferClass-_gtk-reserved1 :: <anonymous-8184>;
  slot GtkTextBufferClass-_gtk-reserved2 :: <anonymous-8185>;
  slot GtkTextBufferClass-_gtk-reserved3 :: <anonymous-8186>;
  slot GtkTextBufferClass-_gtk-reserved4 :: <anonymous-8187>;
  slot GtkTextBufferClass-_gtk-reserved5 :: <anonymous-8188>;
  slot GtkTextBufferClass-_gtk-reserved6 :: <anonymous-8189>;
end;

define C-pointer-type <GtkTextBufferClass> => <_GtkTextBufferClass>;

define C-function gtk-text-buffer-get-type
  result res :: <GType>;
  c-name: "gtk_text_buffer_get_type";
end;

define C-function gtk-text-buffer-new
  input parameter arg1 :: <GtkTextTagTable>;
  result res :: <GtkTextBuffer>;
  c-name: "gtk_text_buffer_new";
end;

define C-function gtk-text-buffer-get-line-count
  input parameter arg1 :: <GtkTextBuffer>;
  result res :: <gint>;
  c-name: "gtk_text_buffer_get_line_count";
end;

define C-function gtk-text-buffer-get-char-count
  input parameter arg1 :: <GtkTextBuffer>;
  result res :: <gint>;
  c-name: "gtk_text_buffer_get_char_count";
end;

define C-function gtk-text-buffer-get-tag-table
  input parameter arg1 :: <GtkTextBuffer>;
  result res :: <GtkTextTagTable>;
  c-name: "gtk_text_buffer_get_tag_table";
end;

define C-function gtk-text-buffer-set-text
  input parameter arg1 :: <GtkTextBuffer>;
  input parameter arg2 :: <gchar*>;
  input parameter arg3 :: <gint>;
  c-name: "gtk_text_buffer_set_text";
end;

define C-function gtk-text-buffer-insert
  input parameter arg1 :: <GtkTextBuffer>;
  input parameter arg2 :: <GtkTextIter>;
  input parameter arg3 :: <gchar*>;
  input parameter arg4 :: <gint>;
  c-name: "gtk_text_buffer_insert";
end;

define C-function gtk-text-buffer-insert-at-cursor
  input parameter arg1 :: <GtkTextBuffer>;
  input parameter arg2 :: <gchar*>;
  input parameter arg3 :: <gint>;
  c-name: "gtk_text_buffer_insert_at_cursor";
end;

define C-function gtk-text-buffer-insert-interactive
  input parameter arg1 :: <GtkTextBuffer>;
  input parameter arg2 :: <GtkTextIter>;
  input parameter arg3 :: <gchar*>;
  input parameter arg4 :: <gint>;
  input parameter arg5 :: <gboolean>;
  result res :: <gboolean>;
  c-name: "gtk_text_buffer_insert_interactive";
end;

define C-function gtk-text-buffer-insert-interactive-at-cursor
  input parameter arg1 :: <GtkTextBuffer>;
  input parameter arg2 :: <gchar*>;
  input parameter arg3 :: <gint>;
  input parameter arg4 :: <gboolean>;
  result res :: <gboolean>;
  c-name: "gtk_text_buffer_insert_interactive_at_cursor";
end;

define C-function gtk-text-buffer-insert-range
  input parameter arg1 :: <GtkTextBuffer>;
  input parameter arg2 :: <GtkTextIter>;
  input parameter arg3 :: <GtkTextIter>;
  input parameter arg4 :: <GtkTextIter>;
  c-name: "gtk_text_buffer_insert_range";
end;

define C-function gtk-text-buffer-insert-range-interactive
  input parameter arg1 :: <GtkTextBuffer>;
  input parameter arg2 :: <GtkTextIter>;
  input parameter arg3 :: <GtkTextIter>;
  input parameter arg4 :: <GtkTextIter>;
  input parameter arg5 :: <gboolean>;
  result res :: <gboolean>;
  c-name: "gtk_text_buffer_insert_range_interactive";
end;

define C-function gtk-text-buffer-insert-with-tags
  input parameter arg1 :: <GtkTextBuffer>;
  input parameter arg2 :: <GtkTextIter>;
  input parameter arg3 :: <gchar*>;
  input parameter arg4 :: <gint>;
  input parameter arg5 :: <GtkTextTag>;
  c-name: "gtk_text_buffer_insert_with_tags";
end;

define C-function gtk-text-buffer-insert-with-tags-by-name
  input parameter arg1 :: <GtkTextBuffer>;
  input parameter arg2 :: <GtkTextIter>;
  input parameter arg3 :: <gchar*>;
  input parameter arg4 :: <gint>;
  input parameter arg5 :: <gchar*>;
  c-name: "gtk_text_buffer_insert_with_tags_by_name";
end;

define C-function gtk-text-buffer-delete
  input parameter arg1 :: <GtkTextBuffer>;
  input parameter arg2 :: <GtkTextIter>;
  input parameter arg3 :: <GtkTextIter>;
  c-name: "gtk_text_buffer_delete";
end;

define C-function gtk-text-buffer-delete-interactive
  input parameter arg1 :: <GtkTextBuffer>;
  input parameter arg2 :: <GtkTextIter>;
  input parameter arg3 :: <GtkTextIter>;
  input parameter arg4 :: <gboolean>;
  result res :: <gboolean>;
  c-name: "gtk_text_buffer_delete_interactive";
end;

define C-function gtk-text-buffer-backspace
  input parameter arg1 :: <GtkTextBuffer>;
  input parameter arg2 :: <GtkTextIter>;
  input parameter arg3 :: <gboolean>;
  input parameter arg4 :: <gboolean>;
  result res :: <gboolean>;
  c-name: "gtk_text_buffer_backspace";
end;

define C-function gtk-text-buffer-get-text
  input parameter arg1 :: <GtkTextBuffer>;
  input parameter arg2 :: <GtkTextIter>;
  input parameter arg3 :: <GtkTextIter>;
  input parameter arg4 :: <gboolean>;
  result res :: <gchar*>;
  c-name: "gtk_text_buffer_get_text";
end;

define C-function gtk-text-buffer-get-slice
  input parameter arg1 :: <GtkTextBuffer>;
  input parameter arg2 :: <GtkTextIter>;
  input parameter arg3 :: <GtkTextIter>;
  input parameter arg4 :: <gboolean>;
  result res :: <gchar*>;
  c-name: "gtk_text_buffer_get_slice";
end;

define C-function gtk-text-buffer-insert-pixbuf
  input parameter arg1 :: <GtkTextBuffer>;
  input parameter arg2 :: <GtkTextIter>;
  input parameter arg3 :: <GdkPixbuf>;
  c-name: "gtk_text_buffer_insert_pixbuf";
end;

define C-function gtk-text-buffer-insert-child-anchor
  input parameter arg1 :: <GtkTextBuffer>;
  input parameter arg2 :: <GtkTextIter>;
  input parameter arg3 :: <GtkTextChildAnchor>;
  c-name: "gtk_text_buffer_insert_child_anchor";
end;

define C-function gtk-text-buffer-create-child-anchor
  input parameter arg1 :: <GtkTextBuffer>;
  input parameter arg2 :: <GtkTextIter>;
  result res :: <GtkTextChildAnchor>;
  c-name: "gtk_text_buffer_create_child_anchor";
end;

define C-function gtk-text-buffer-add-mark
  input parameter arg1 :: <GtkTextBuffer>;
  input parameter arg2 :: <GtkTextMark>;
  input parameter arg3 :: <GtkTextIter>;
  c-name: "gtk_text_buffer_add_mark";
end;

define C-function gtk-text-buffer-create-mark
  input parameter arg1 :: <GtkTextBuffer>;
  input parameter arg2 :: <gchar*>;
  input parameter arg3 :: <GtkTextIter>;
  input parameter arg4 :: <gboolean>;
  result res :: <GtkTextMark>;
  c-name: "gtk_text_buffer_create_mark";
end;

define C-function gtk-text-buffer-move-mark
  input parameter arg1 :: <GtkTextBuffer>;
  input parameter arg2 :: <GtkTextMark>;
  input parameter arg3 :: <GtkTextIter>;
  c-name: "gtk_text_buffer_move_mark";
end;

define C-function gtk-text-buffer-delete-mark
  input parameter arg1 :: <GtkTextBuffer>;
  input parameter arg2 :: <GtkTextMark>;
  c-name: "gtk_text_buffer_delete_mark";
end;

define C-function gtk-text-buffer-get-mark
  input parameter arg1 :: <GtkTextBuffer>;
  input parameter arg2 :: <gchar*>;
  result res :: <GtkTextMark>;
  c-name: "gtk_text_buffer_get_mark";
end;

define C-function gtk-text-buffer-move-mark-by-name
  input parameter arg1 :: <GtkTextBuffer>;
  input parameter arg2 :: <gchar*>;
  input parameter arg3 :: <GtkTextIter>;
  c-name: "gtk_text_buffer_move_mark_by_name";
end;

define C-function gtk-text-buffer-delete-mark-by-name
  input parameter arg1 :: <GtkTextBuffer>;
  input parameter arg2 :: <gchar*>;
  c-name: "gtk_text_buffer_delete_mark_by_name";
end;

define C-function gtk-text-buffer-get-insert
  input parameter arg1 :: <GtkTextBuffer>;
  result res :: <GtkTextMark>;
  c-name: "gtk_text_buffer_get_insert";
end;

define C-function gtk-text-buffer-get-selection-bound
  input parameter arg1 :: <GtkTextBuffer>;
  result res :: <GtkTextMark>;
  c-name: "gtk_text_buffer_get_selection_bound";
end;

define C-function gtk-text-buffer-place-cursor
  input parameter arg1 :: <GtkTextBuffer>;
  input parameter arg2 :: <GtkTextIter>;
  c-name: "gtk_text_buffer_place_cursor";
end;

define C-function gtk-text-buffer-select-range
  input parameter arg1 :: <GtkTextBuffer>;
  input parameter arg2 :: <GtkTextIter>;
  input parameter arg3 :: <GtkTextIter>;
  c-name: "gtk_text_buffer_select_range";
end;

define C-function gtk-text-buffer-apply-tag
  input parameter arg1 :: <GtkTextBuffer>;
  input parameter arg2 :: <GtkTextTag>;
  input parameter arg3 :: <GtkTextIter>;
  input parameter arg4 :: <GtkTextIter>;
  c-name: "gtk_text_buffer_apply_tag";
end;

define C-function gtk-text-buffer-remove-tag
  input parameter arg1 :: <GtkTextBuffer>;
  input parameter arg2 :: <GtkTextTag>;
  input parameter arg3 :: <GtkTextIter>;
  input parameter arg4 :: <GtkTextIter>;
  c-name: "gtk_text_buffer_remove_tag";
end;

define C-function gtk-text-buffer-apply-tag-by-name
  input parameter arg1 :: <GtkTextBuffer>;
  input parameter arg2 :: <gchar*>;
  input parameter arg3 :: <GtkTextIter>;
  input parameter arg4 :: <GtkTextIter>;
  c-name: "gtk_text_buffer_apply_tag_by_name";
end;

define C-function gtk-text-buffer-remove-tag-by-name
  input parameter arg1 :: <GtkTextBuffer>;
  input parameter arg2 :: <gchar*>;
  input parameter arg3 :: <GtkTextIter>;
  input parameter arg4 :: <GtkTextIter>;
  c-name: "gtk_text_buffer_remove_tag_by_name";
end;

define C-function gtk-text-buffer-remove-all-tags
  input parameter arg1 :: <GtkTextBuffer>;
  input parameter arg2 :: <GtkTextIter>;
  input parameter arg3 :: <GtkTextIter>;
  c-name: "gtk_text_buffer_remove_all_tags";
end;

define C-function gtk-text-buffer-create-tag
  input parameter arg1 :: <GtkTextBuffer>;
  input parameter arg2 :: <gchar*>;
  input parameter arg3 :: <gchar*>;
  result res :: <GtkTextTag>;
  c-name: "gtk_text_buffer_create_tag";
end;

define C-function gtk-text-buffer-get-iter-at-line-offset
  input parameter arg1 :: <GtkTextBuffer>;
  input parameter arg2 :: <GtkTextIter>;
  input parameter arg3 :: <gint>;
  input parameter arg4 :: <gint>;
  c-name: "gtk_text_buffer_get_iter_at_line_offset";
end;

define C-function gtk-text-buffer-get-iter-at-line-index
  input parameter arg1 :: <GtkTextBuffer>;
  input parameter arg2 :: <GtkTextIter>;
  input parameter arg3 :: <gint>;
  input parameter arg4 :: <gint>;
  c-name: "gtk_text_buffer_get_iter_at_line_index";
end;

define C-function gtk-text-buffer-get-iter-at-offset
  input parameter arg1 :: <GtkTextBuffer>;
  input parameter arg2 :: <GtkTextIter>;
  input parameter arg3 :: <gint>;
  c-name: "gtk_text_buffer_get_iter_at_offset";
end;

define C-function gtk-text-buffer-get-iter-at-line
  input parameter arg1 :: <GtkTextBuffer>;
  input parameter arg2 :: <GtkTextIter>;
  input parameter arg3 :: <gint>;
  c-name: "gtk_text_buffer_get_iter_at_line";
end;

define C-function gtk-text-buffer-get-start-iter
  input parameter arg1 :: <GtkTextBuffer>;
  input parameter arg2 :: <GtkTextIter>;
  c-name: "gtk_text_buffer_get_start_iter";
end;

define C-function gtk-text-buffer-get-end-iter
  input parameter arg1 :: <GtkTextBuffer>;
  input parameter arg2 :: <GtkTextIter>;
  c-name: "gtk_text_buffer_get_end_iter";
end;

define C-function gtk-text-buffer-get-bounds
  input parameter arg1 :: <GtkTextBuffer>;
  input parameter arg2 :: <GtkTextIter>;
  input parameter arg3 :: <GtkTextIter>;
  c-name: "gtk_text_buffer_get_bounds";
end;

define C-function gtk-text-buffer-get-iter-at-mark
  input parameter arg1 :: <GtkTextBuffer>;
  input parameter arg2 :: <GtkTextIter>;
  input parameter arg3 :: <GtkTextMark>;
  c-name: "gtk_text_buffer_get_iter_at_mark";
end;

define C-function gtk-text-buffer-get-iter-at-child-anchor
  input parameter arg1 :: <GtkTextBuffer>;
  input parameter arg2 :: <GtkTextIter>;
  input parameter arg3 :: <GtkTextChildAnchor>;
  c-name: "gtk_text_buffer_get_iter_at_child_anchor";
end;

define C-function gtk-text-buffer-get-modified
  input parameter arg1 :: <GtkTextBuffer>;
  result res :: <gboolean>;
  c-name: "gtk_text_buffer_get_modified";
end;

define C-function gtk-text-buffer-set-modified
  input parameter arg1 :: <GtkTextBuffer>;
  input parameter arg2 :: <gboolean>;
  c-name: "gtk_text_buffer_set_modified";
end;

define C-function gtk-text-buffer-get-has-selection
  input parameter arg1 :: <GtkTextBuffer>;
  result res :: <gboolean>;
  c-name: "gtk_text_buffer_get_has_selection";
end;

define C-function gtk-text-buffer-add-selection-clipboard
  input parameter arg1 :: <GtkTextBuffer>;
  input parameter arg2 :: <GtkClipboard>;
  c-name: "gtk_text_buffer_add_selection_clipboard";
end;

define C-function gtk-text-buffer-remove-selection-clipboard
  input parameter arg1 :: <GtkTextBuffer>;
  input parameter arg2 :: <GtkClipboard>;
  c-name: "gtk_text_buffer_remove_selection_clipboard";
end;

define C-function gtk-text-buffer-cut-clipboard
  input parameter arg1 :: <GtkTextBuffer>;
  input parameter arg2 :: <GtkClipboard>;
  input parameter arg3 :: <gboolean>;
  c-name: "gtk_text_buffer_cut_clipboard";
end;

define C-function gtk-text-buffer-copy-clipboard
  input parameter arg1 :: <GtkTextBuffer>;
  input parameter arg2 :: <GtkClipboard>;
  c-name: "gtk_text_buffer_copy_clipboard";
end;

define C-function gtk-text-buffer-paste-clipboard
  input parameter arg1 :: <GtkTextBuffer>;
  input parameter arg2 :: <GtkClipboard>;
  input parameter arg3 :: <GtkTextIter>;
  input parameter arg4 :: <gboolean>;
  c-name: "gtk_text_buffer_paste_clipboard";
end;

define C-function gtk-text-buffer-get-selection-bounds
  input parameter arg1 :: <GtkTextBuffer>;
  input parameter arg2 :: <GtkTextIter>;
  input parameter arg3 :: <GtkTextIter>;
  result res :: <gboolean>;
  c-name: "gtk_text_buffer_get_selection_bounds";
end;

define C-function gtk-text-buffer-delete-selection
  input parameter arg1 :: <GtkTextBuffer>;
  input parameter arg2 :: <gboolean>;
  input parameter arg3 :: <gboolean>;
  result res :: <gboolean>;
  c-name: "gtk_text_buffer_delete_selection";
end;

define C-function gtk-text-buffer-begin-user-action
  input parameter arg1 :: <GtkTextBuffer>;
  c-name: "gtk_text_buffer_begin_user_action";
end;

define C-function gtk-text-buffer-end-user-action
  input parameter arg1 :: <GtkTextBuffer>;
  c-name: "gtk_text_buffer_end_user_action";
end;

define C-function gtk-text-buffer-get-copy-target-list
  input parameter arg1 :: <GtkTextBuffer>;
  result res :: <GtkTargetList>;
  c-name: "gtk_text_buffer_get_copy_target_list";
end;

define C-function gtk-text-buffer-get-paste-target-list
  input parameter arg1 :: <GtkTextBuffer>;
  result res :: <GtkTargetList>;
  c-name: "gtk_text_buffer_get_paste_target_list";
end;

define constant <anonymous-8157> = <C-function-pointer>;
define constant <anonymous-8158> = <C-function-pointer>;
define constant <anonymous-8159> = <C-function-pointer>;
define constant <anonymous-8160> = <C-function-pointer>;
define C-struct <_GtkTextMarkClass>
  slot GtkTextMarkClass-parent-class :: <_GObjectClass>;
  slot GtkTextMarkClass-_gtk-reserved1 :: <anonymous-8157>;
  slot GtkTextMarkClass-_gtk-reserved2 :: <anonymous-8158>;
  slot GtkTextMarkClass-_gtk-reserved3 :: <anonymous-8159>;
  slot GtkTextMarkClass-_gtk-reserved4 :: <anonymous-8160>;
end;

define C-pointer-type <GtkTextMarkClass> => <_GtkTextMarkClass>;

define C-function gtk-text-mark-get-type
  result res :: <GType>;
  c-name: "gtk_text_mark_get_type";
end;

define C-function gtk-text-mark-set-visible
  input parameter arg1 :: <GtkTextMark>;
  input parameter arg2 :: <gboolean>;
  c-name: "gtk_text_mark_set_visible";
end;

define C-function gtk-text-mark-get-visible
  input parameter arg1 :: <GtkTextMark>;
  result res :: <gboolean>;
  c-name: "gtk_text_mark_get_visible";
end;

define C-function gtk-text-mark-new
  input parameter arg1 :: <gchar*>;
  input parameter arg2 :: <gboolean>;
  result res :: <GtkTextMark>;
  c-name: "gtk_text_mark_new";
end;

define C-function gtk-text-mark-get-name
  input parameter arg1 :: <GtkTextMark>;
  result res :: <gchar*>;
  c-name: "gtk_text_mark_get_name";
end;

define C-function gtk-text-mark-get-deleted
  input parameter arg1 :: <GtkTextMark>;
  result res :: <gboolean>;
  c-name: "gtk_text_mark_get_deleted";
end;

define C-function gtk-text-mark-get-buffer
  input parameter arg1 :: <GtkTextMark>;
  result res :: <GtkTextBuffer>;
  c-name: "gtk_text_mark_get_buffer";
end;

define C-function gtk-text-mark-get-left-gravity
  input parameter arg1 :: <GtkTextMark>;
  result res :: <gboolean>;
  c-name: "gtk_text_mark_get_left_gravity";
end;

define constant <anonymous-8140> = <C-function-pointer>;
define constant <GtkTextTagTableForeach> = <anonymous-8140>;

define constant <anonymous-8141> = <C-function-pointer>;
define constant <anonymous-8142> = <C-function-pointer>;
define constant <anonymous-8143> = <C-function-pointer>;
define constant <anonymous-8144> = <C-function-pointer>;
define constant <anonymous-8145> = <C-function-pointer>;
define constant <anonymous-8146> = <C-function-pointer>;
define constant <anonymous-8147> = <C-function-pointer>;
define C-struct <_GtkTextTagTableClass>
  slot GtkTextTagTableClass-parent-class :: <_GObjectClass>;
  slot GtkTextTagTableClass-tag-changed :: <anonymous-8141>;
  slot GtkTextTagTableClass-tag-added :: <anonymous-8142>;
  slot GtkTextTagTableClass-tag-removed :: <anonymous-8143>;
  slot GtkTextTagTableClass-_gtk-reserved1 :: <anonymous-8144>;
  slot GtkTextTagTableClass-_gtk-reserved2 :: <anonymous-8145>;
  slot GtkTextTagTableClass-_gtk-reserved3 :: <anonymous-8146>;
  slot GtkTextTagTableClass-_gtk-reserved4 :: <anonymous-8147>;
end;

define C-pointer-type <GtkTextTagTableClass> => <_GtkTextTagTableClass>;

define C-function gtk-text-tag-table-get-type
  result res :: <GType>;
  c-name: "gtk_text_tag_table_get_type";
end;

define C-function gtk-text-tag-table-new
  result res :: <GtkTextTagTable>;
  c-name: "gtk_text_tag_table_new";
end;

define C-function gtk-text-tag-table-add
  input parameter arg1 :: <GtkTextTagTable>;
  input parameter arg2 :: <GtkTextTag>;
  c-name: "gtk_text_tag_table_add";
end;

define C-function gtk-text-tag-table-remove
  input parameter arg1 :: <GtkTextTagTable>;
  input parameter arg2 :: <GtkTextTag>;
  c-name: "gtk_text_tag_table_remove";
end;

define C-function gtk-text-tag-table-lookup
  input parameter arg1 :: <GtkTextTagTable>;
  input parameter arg2 :: <gchar*>;
  result res :: <GtkTextTag>;
  c-name: "gtk_text_tag_table_lookup";
end;

define C-function gtk-text-tag-table-foreach
  input parameter arg1 :: <GtkTextTagTable>;
  input parameter arg2 :: <GtkTextTagTableForeach>;
  input parameter arg3 :: <gpointer>;
  c-name: "gtk_text_tag_table_foreach";
end;

define C-function gtk-text-tag-table-get-size
  input parameter arg1 :: <GtkTextTagTable>;
  result res :: <gint>;
  c-name: "gtk_text_tag_table_get_size";
end;

define constant <anonymous-5808> = <C-function-pointer>;
define constant <GtkClipboardReceivedFunc> = <anonymous-5808>;

define constant <anonymous-5809> = <C-function-pointer>;
define constant <GtkClipboardTextReceivedFunc> = <anonymous-5809>;

define constant <anonymous-5810> = <C-function-pointer>;
define constant <GtkClipboardRichTextReceivedFunc> = <anonymous-5810>;

define constant <anonymous-5811> = <C-function-pointer>;
define constant <GtkClipboardImageReceivedFunc> = <anonymous-5811>;

define constant <anonymous-5812> = <C-function-pointer>;
define constant <GtkClipboardTargetsReceivedFunc> = <anonymous-5812>;

define constant <anonymous-5813> = <C-function-pointer>;
define constant <GtkClipboardGetFunc> = <anonymous-5813>;

define constant <anonymous-5814> = <C-function-pointer>;
define constant <GtkClipboardClearFunc> = <anonymous-5814>;

define C-function gtk-clipboard-get-type
  result res :: <GType>;
  c-name: "gtk_clipboard_get_type";
end;

define C-function gtk-clipboard-get-for-display
  input parameter arg1 :: <GdkDisplay>;
  input parameter arg2 :: <GdkAtom>;
  result res :: <GtkClipboard>;
  c-name: "gtk_clipboard_get_for_display";
end;

define C-function gtk-clipboard-get
  input parameter arg1 :: <GdkAtom>;
  result res :: <GtkClipboard>;
  c-name: "gtk_clipboard_get";
end;

define C-function gtk-clipboard-get-display
  input parameter arg1 :: <GtkClipboard>;
  result res :: <GdkDisplay>;
  c-name: "gtk_clipboard_get_display";
end;

define C-function gtk-clipboard-set-with-data
  input parameter arg1 :: <GtkClipboard>;
  input parameter arg2 :: <GtkTargetEntry>;
  input parameter arg3 :: <guint>;
  input parameter arg4 :: <GtkClipboardGetFunc>;
  input parameter arg5 :: <GtkClipboardClearFunc>;
  input parameter arg6 :: <gpointer>;
  result res :: <gboolean>;
  c-name: "gtk_clipboard_set_with_data";
end;

define C-function gtk-clipboard-set-with-owner
  input parameter arg1 :: <GtkClipboard>;
  input parameter arg2 :: <GtkTargetEntry>;
  input parameter arg3 :: <guint>;
  input parameter arg4 :: <GtkClipboardGetFunc>;
  input parameter arg5 :: <GtkClipboardClearFunc>;
  input parameter arg6 :: <GObject>;
  result res :: <gboolean>;
  c-name: "gtk_clipboard_set_with_owner";
end;

define C-function gtk-clipboard-get-owner
  input parameter arg1 :: <GtkClipboard>;
  result res :: <GObject>;
  c-name: "gtk_clipboard_get_owner";
end;

define C-function gtk-clipboard-clear
  input parameter arg1 :: <GtkClipboard>;
  c-name: "gtk_clipboard_clear";
end;

define C-function gtk-clipboard-set-text
  input parameter arg1 :: <GtkClipboard>;
  input parameter arg2 :: <gchar*>;
  input parameter arg3 :: <gint>;
  c-name: "gtk_clipboard_set_text";
end;

define C-function gtk-clipboard-set-image
  input parameter arg1 :: <GtkClipboard>;
  input parameter arg2 :: <GdkPixbuf>;
  c-name: "gtk_clipboard_set_image";
end;

define C-function gtk-clipboard-request-contents
  input parameter arg1 :: <GtkClipboard>;
  input parameter arg2 :: <GdkAtom>;
  input parameter arg3 :: <GtkClipboardReceivedFunc>;
  input parameter arg4 :: <gpointer>;
  c-name: "gtk_clipboard_request_contents";
end;

define C-function gtk-clipboard-request-text
  input parameter arg1 :: <GtkClipboard>;
  input parameter arg2 :: <GtkClipboardTextReceivedFunc>;
  input parameter arg3 :: <gpointer>;
  c-name: "gtk_clipboard_request_text";
end;

define C-function gtk-clipboard-request-rich-text
  input parameter arg1 :: <GtkClipboard>;
  input parameter arg2 :: <GtkTextBuffer>;
  input parameter arg3 :: <GtkClipboardRichTextReceivedFunc>;
  input parameter arg4 :: <gpointer>;
  c-name: "gtk_clipboard_request_rich_text";
end;

define C-function gtk-clipboard-request-image
  input parameter arg1 :: <GtkClipboard>;
  input parameter arg2 :: <GtkClipboardImageReceivedFunc>;
  input parameter arg3 :: <gpointer>;
  c-name: "gtk_clipboard_request_image";
end;

define C-function gtk-clipboard-request-targets
  input parameter arg1 :: <GtkClipboard>;
  input parameter arg2 :: <GtkClipboardTargetsReceivedFunc>;
  input parameter arg3 :: <gpointer>;
  c-name: "gtk_clipboard_request_targets";
end;

define C-function gtk-clipboard-wait-for-contents
  input parameter arg1 :: <GtkClipboard>;
  input parameter arg2 :: <GdkAtom>;
  result res :: <GtkSelectionData>;
  c-name: "gtk_clipboard_wait_for_contents";
end;

define C-function gtk-clipboard-wait-for-text
  input parameter arg1 :: <GtkClipboard>;
  result res :: <gchar*>;
  c-name: "gtk_clipboard_wait_for_text";
end;

define C-function gtk-clipboard-wait-for-rich-text
  input parameter arg1 :: <GtkClipboard>;
  input parameter arg2 :: <GtkTextBuffer>;
  input parameter arg3 :: <GdkAtom*>;
  input parameter arg4 :: <gsize*>;
  result res :: <guint8*>;
  c-name: "gtk_clipboard_wait_for_rich_text";
end;

define C-function gtk-clipboard-wait-for-image
  input parameter arg1 :: <GtkClipboard>;
  result res :: <GdkPixbuf>;
  c-name: "gtk_clipboard_wait_for_image";
end;

define C-function gtk-clipboard-wait-for-targets
  input parameter arg1 :: <GtkClipboard>;
  input parameter arg2 :: <GdkAtom**>;
  input parameter arg3 :: <gint*>;
  result res :: <gboolean>;
  c-name: "gtk_clipboard_wait_for_targets";
end;

define C-function gtk-clipboard-wait-is-text-available
  input parameter arg1 :: <GtkClipboard>;
  result res :: <gboolean>;
  c-name: "gtk_clipboard_wait_is_text_available";
end;

define C-function gtk-clipboard-wait-is-rich-text-available
  input parameter arg1 :: <GtkClipboard>;
  input parameter arg2 :: <GtkTextBuffer>;
  result res :: <gboolean>;
  c-name: "gtk_clipboard_wait_is_rich_text_available";
end;

define C-function gtk-clipboard-wait-is-image-available
  input parameter arg1 :: <GtkClipboard>;
  result res :: <gboolean>;
  c-name: "gtk_clipboard_wait_is_image_available";
end;

define C-function gtk-clipboard-wait-is-target-available
  input parameter arg1 :: <GtkClipboard>;
  input parameter arg2 :: <GdkAtom>;
  result res :: <gboolean>;
  c-name: "gtk_clipboard_wait_is_target_available";
end;

define C-function gtk-clipboard-set-can-store
  input parameter arg1 :: <GtkClipboard>;
  input parameter arg2 :: <GtkTargetEntry>;
  input parameter arg3 :: <gint>;
  c-name: "gtk_clipboard_set_can_store";
end;

define C-function gtk-clipboard-store
  input parameter arg1 :: <GtkClipboard>;
  c-name: "gtk_clipboard_store";
end;

define constant <anonymous-8256> = <C-function-pointer>;
define constant <GtkTextBufferSerializeFunc> = <anonymous-8256>;

define constant <anonymous-8257> = <C-function-pointer>;
define constant <GtkTextBufferDeserializeFunc> = <anonymous-8257>;

define C-function gtk-text-buffer-register-serialize-format
  input parameter arg1 :: <GtkTextBuffer>;
  input parameter arg2 :: <gchar*>;
  input parameter arg3 :: <GtkTextBufferSerializeFunc>;
  input parameter arg4 :: <gpointer>;
  input parameter arg5 :: <GDestroyNotify>;
  result res :: <GdkAtom>;
  c-name: "gtk_text_buffer_register_serialize_format";
end;

define C-function gtk-text-buffer-register-serialize-tagset
  input parameter arg1 :: <GtkTextBuffer>;
  input parameter arg2 :: <gchar*>;
  result res :: <GdkAtom>;
  c-name: "gtk_text_buffer_register_serialize_tagset";
end;

define C-function gtk-text-buffer-register-deserialize-format
  input parameter arg1 :: <GtkTextBuffer>;
  input parameter arg2 :: <gchar*>;
  input parameter arg3 :: <GtkTextBufferDeserializeFunc>;
  input parameter arg4 :: <gpointer>;
  input parameter arg5 :: <GDestroyNotify>;
  result res :: <GdkAtom>;
  c-name: "gtk_text_buffer_register_deserialize_format";
end;

define C-function gtk-text-buffer-register-deserialize-tagset
  input parameter arg1 :: <GtkTextBuffer>;
  input parameter arg2 :: <gchar*>;
  result res :: <GdkAtom>;
  c-name: "gtk_text_buffer_register_deserialize_tagset";
end;

define C-function gtk-text-buffer-unregister-serialize-format
  input parameter arg1 :: <GtkTextBuffer>;
  input parameter arg2 :: <GdkAtom>;
  c-name: "gtk_text_buffer_unregister_serialize_format";
end;

define C-function gtk-text-buffer-unregister-deserialize-format
  input parameter arg1 :: <GtkTextBuffer>;
  input parameter arg2 :: <GdkAtom>;
  c-name: "gtk_text_buffer_unregister_deserialize_format";
end;

define C-function gtk-text-buffer-deserialize-set-can-create-tags
  input parameter arg1 :: <GtkTextBuffer>;
  input parameter arg2 :: <GdkAtom>;
  input parameter arg3 :: <gboolean>;
  c-name: "gtk_text_buffer_deserialize_set_can_create_tags";
end;

define C-function gtk-text-buffer-deserialize-get-can-create-tags
  input parameter arg1 :: <GtkTextBuffer>;
  input parameter arg2 :: <GdkAtom>;
  result res :: <gboolean>;
  c-name: "gtk_text_buffer_deserialize_get_can_create_tags";
end;

define C-function gtk-text-buffer-get-serialize-formats
  input parameter arg1 :: <GtkTextBuffer>;
  input parameter arg2 :: <gint*>;
  result res :: <GdkAtom*>;
  c-name: "gtk_text_buffer_get_serialize_formats";
end;

define C-function gtk-text-buffer-get-deserialize-formats
  input parameter arg1 :: <GtkTextBuffer>;
  input parameter arg2 :: <gint*>;
  result res :: <GdkAtom*>;
  c-name: "gtk_text_buffer_get_deserialize_formats";
end;

define C-function gtk-text-buffer-serialize
  input parameter arg1 :: <GtkTextBuffer>;
  input parameter arg2 :: <GtkTextBuffer>;
  input parameter arg3 :: <GdkAtom>;
  input parameter arg4 :: <GtkTextIter>;
  input parameter arg5 :: <GtkTextIter>;
  input parameter arg6 :: <gsize*>;
  result res :: <guint8*>;
  c-name: "gtk_text_buffer_serialize";
end;

define C-function gtk-text-buffer-deserialize
  input parameter arg1 :: <GtkTextBuffer>;
  input parameter arg2 :: <GtkTextBuffer>;
  input parameter arg3 :: <GdkAtom>;
  input parameter arg4 :: <GtkTextIter>;
  input parameter arg5 :: <guint8*>;
  input parameter arg6 :: <gsize>;
  input parameter arg7 :: <GError*>;
  result res :: <gboolean>;
  c-name: "gtk_text_buffer_deserialize";
end;

define C-subtype <_GtkTearoffMenuItem> (<_GtkMenuItem>, <_AtkImplementorIface>) end;
define constant <GtkTearoffMenuItem> = <_GtkTearoffMenuItem>;

define constant <anonymous-8134> = <C-function-pointer>;
define constant <anonymous-8135> = <C-function-pointer>;
define constant <anonymous-8136> = <C-function-pointer>;
define constant <anonymous-8137> = <C-function-pointer>;
define C-struct <_GtkTearoffMenuItemClass>
  slot GtkTearoffMenuItemClass-parent-class :: <_GtkMenuItemClass>;
  slot GtkTearoffMenuItemClass-_gtk-reserved1 :: <anonymous-8134>;
  slot GtkTearoffMenuItemClass-_gtk-reserved2 :: <anonymous-8135>;
  slot GtkTearoffMenuItemClass-_gtk-reserved3 :: <anonymous-8136>;
  slot GtkTearoffMenuItemClass-_gtk-reserved4 :: <anonymous-8137>;
end;

define C-pointer-type <GtkTearoffMenuItemClass> => <_GtkTearoffMenuItemClass>;

define C-function gtk-tearoff-menu-item-get-type
  result res :: <GType>;
  c-name: "gtk_tearoff_menu_item_get_type";
end;

define C-function gtk-tearoff-menu-item-new
  result res :: <GtkWidget>;
  c-name: "gtk_tearoff_menu_item_new";
end;

define C-struct <_GtkTableRowCol>
  slot GtkTableRowCol-requisition :: <C-unsigned-short>;
  slot GtkTableRowCol-allocation :: <C-unsigned-short>;
  slot GtkTableRowCol-spacing :: <C-unsigned-short>;
  bitfield slot GtkTableRowCol-need-expand :: <C-int>, width: 1;
  bitfield slot GtkTableRowCol-need-shrink :: <C-int>, width: 1;
  bitfield slot GtkTableRowCol-expand :: <C-int>, width: 1;
  bitfield slot GtkTableRowCol-shrink :: <C-int>, width: 1;
  bitfield slot GtkTableRowCol-empty :: <C-int>, width: 1;
end;

define C-pointer-type <GtkTableRowCol> => <_GtkTableRowCol>;

define C-subtype <_GtkTable> (<_GtkContainer>, <_AtkImplementorIface>) end;
define constant <GtkTable> = <_GtkTable>;

define C-struct <_GtkTableClass>
  slot GtkTableClass-parent-class :: <_GtkContainerClass>;
end;

define C-pointer-type <GtkTableClass> => <_GtkTableClass>;

define C-struct <_GtkTableChild>
  slot GtkTableChild-widget :: <GtkWidget>;
  slot GtkTableChild-left-attach :: <C-unsigned-short>;
  slot GtkTableChild-right-attach :: <C-unsigned-short>;
  slot GtkTableChild-top-attach :: <C-unsigned-short>;
  slot GtkTableChild-bottom-attach :: <C-unsigned-short>;
  slot GtkTableChild-xpadding :: <C-unsigned-short>;
  slot GtkTableChild-ypadding :: <C-unsigned-short>;
  bitfield slot GtkTableChild-xexpand :: <C-int>, width: 1;
  bitfield slot GtkTableChild-yexpand :: <C-int>, width: 1;
  bitfield slot GtkTableChild-xshrink :: <C-int>, width: 1;
  bitfield slot GtkTableChild-yshrink :: <C-int>, width: 1;
  bitfield slot GtkTableChild-xfill :: <C-int>, width: 1;
  bitfield slot GtkTableChild-yfill :: <C-int>, width: 1;
end;

define C-pointer-type <GtkTableChild> => <_GtkTableChild>;

define C-function gtk-table-get-type
  result res :: <GType>;
  c-name: "gtk_table_get_type";
end;

define C-function gtk-table-new
  input parameter arg1 :: <guint>;
  input parameter arg2 :: <guint>;
  input parameter arg3 :: <gboolean>;
  result res :: <GtkWidget>;
  c-name: "gtk_table_new";
end;

define C-function gtk-table-resize
  input parameter arg1 :: <GtkTable>;
  input parameter arg2 :: <guint>;
  input parameter arg3 :: <guint>;
  c-name: "gtk_table_resize";
end;

define C-function gtk-table-attach
  input parameter arg1 :: <GtkTable>;
  input parameter arg2 :: <GtkWidget>;
  input parameter arg3 :: <guint>;
  input parameter arg4 :: <guint>;
  input parameter arg5 :: <guint>;
  input parameter arg6 :: <guint>;
  input parameter arg7 :: <GtkAttachOptions>;
  input parameter arg8 :: <GtkAttachOptions>;
  input parameter arg9 :: <guint>;
  input parameter arg10 :: <guint>;
  c-name: "gtk_table_attach";
end;

define C-function gtk-table-attach-defaults
  input parameter arg1 :: <GtkTable>;
  input parameter arg2 :: <GtkWidget>;
  input parameter arg3 :: <guint>;
  input parameter arg4 :: <guint>;
  input parameter arg5 :: <guint>;
  input parameter arg6 :: <guint>;
  c-name: "gtk_table_attach_defaults";
end;

define C-function gtk-table-set-row-spacing
  input parameter arg1 :: <GtkTable>;
  input parameter arg2 :: <guint>;
  input parameter arg3 :: <guint>;
  c-name: "gtk_table_set_row_spacing";
end;

define C-function gtk-table-get-row-spacing
  input parameter arg1 :: <GtkTable>;
  input parameter arg2 :: <guint>;
  result res :: <guint>;
  c-name: "gtk_table_get_row_spacing";
end;

define C-function gtk-table-set-col-spacing
  input parameter arg1 :: <GtkTable>;
  input parameter arg2 :: <guint>;
  input parameter arg3 :: <guint>;
  c-name: "gtk_table_set_col_spacing";
end;

define C-function gtk-table-get-col-spacing
  input parameter arg1 :: <GtkTable>;
  input parameter arg2 :: <guint>;
  result res :: <guint>;
  c-name: "gtk_table_get_col_spacing";
end;

define C-function gtk-table-set-row-spacings
  input parameter arg1 :: <GtkTable>;
  input parameter arg2 :: <guint>;
  c-name: "gtk_table_set_row_spacings";
end;

define C-function gtk-table-get-default-row-spacing
  input parameter arg1 :: <GtkTable>;
  result res :: <guint>;
  c-name: "gtk_table_get_default_row_spacing";
end;

define C-function gtk-table-set-col-spacings
  input parameter arg1 :: <GtkTable>;
  input parameter arg2 :: <guint>;
  c-name: "gtk_table_set_col_spacings";
end;

define C-function gtk-table-get-default-col-spacing
  input parameter arg1 :: <GtkTable>;
  result res :: <guint>;
  c-name: "gtk_table_get_default_col_spacing";
end;

define C-function gtk-table-set-homogeneous
  input parameter arg1 :: <GtkTable>;
  input parameter arg2 :: <gboolean>;
  c-name: "gtk_table_set_homogeneous";
end;

define C-function gtk-table-get-homogeneous
  input parameter arg1 :: <GtkTable>;
  result res :: <gboolean>;
  c-name: "gtk_table_get_homogeneous";
end;

define C-struct <_GtkStockItem>
  slot GtkStockItem-stock-id :: <gchar*>;
  slot GtkStockItem-label :: <gchar*>;
  slot GtkStockItem-modifier :: <GdkModifierType>;
  slot GtkStockItem-keyval :: <C-unsigned-int>;
  slot GtkStockItem-translation-domain :: <gchar*>;
end;

define C-pointer-type <GtkStockItem> => <_GtkStockItem>;

define C-function gtk-stock-add
  input parameter arg1 :: <GtkStockItem>;
  input parameter arg2 :: <guint>;
  c-name: "gtk_stock_add";
end;

define C-function gtk-stock-add-static
  input parameter arg1 :: <GtkStockItem>;
  input parameter arg2 :: <guint>;
  c-name: "gtk_stock_add_static";
end;

define C-function gtk-stock-lookup
  input parameter arg1 :: <gchar*>;
  input parameter arg2 :: <GtkStockItem>;
  result res :: <gboolean>;
  c-name: "gtk_stock_lookup";
end;

define C-function gtk-stock-list-ids
  result res :: <GSList>;
  c-name: "gtk_stock_list_ids";
end;

define C-function gtk-stock-item-copy
  input parameter arg1 :: <GtkStockItem>;
  result res :: <GtkStockItem>;
  c-name: "gtk_stock_item_copy";
end;

define C-function gtk-stock-item-free
  input parameter arg1 :: <GtkStockItem>;
  c-name: "gtk_stock_item_free";
end;

define C-function gtk-stock-set-translate-func
  input parameter arg1 :: <gchar*>;
  input parameter arg2 :: <GtkTranslateFunc>;
  input parameter arg3 :: <gpointer>;
  input parameter arg4 :: <GtkDestroyNotify>;
  c-name: "gtk_stock_set_translate_func";
end;

define constant $GTK-STOCK-DIALOG-AUTHENTICATION = "gtk-dialog-authentication";

define constant $GTK-STOCK-DIALOG-INFO = "gtk-dialog-info";

define constant $GTK-STOCK-DIALOG-WARNING = "gtk-dialog-warning";

define constant $GTK-STOCK-DIALOG-ERROR = "gtk-dialog-error";

define constant $GTK-STOCK-DIALOG-QUESTION = "gtk-dialog-question";

define constant $GTK-STOCK-DND = "gtk-dnd";

define constant $GTK-STOCK-DND-MULTIPLE = "gtk-dnd-multiple";

define constant $GTK-STOCK-ABOUT = "gtk-about";

define constant $GTK-STOCK-ADD = "gtk-add";

define constant $GTK-STOCK-APPLY = "gtk-apply";

define constant $GTK-STOCK-BOLD = "gtk-bold";

define constant $GTK-STOCK-CANCEL = "gtk-cancel";

define constant $GTK-STOCK-CDROM = "gtk-cdrom";

define constant $GTK-STOCK-CLEAR = "gtk-clear";

define constant $GTK-STOCK-CLOSE = "gtk-close";

define constant $GTK-STOCK-COLOR-PICKER = "gtk-color-picker";

define constant $GTK-STOCK-CONVERT = "gtk-convert";

define constant $GTK-STOCK-CONNECT = "gtk-connect";

define constant $GTK-STOCK-COPY = "gtk-copy";

define constant $GTK-STOCK-CUT = "gtk-cut";

define constant $GTK-STOCK-DELETE = "gtk-delete";

define constant $GTK-STOCK-DIRECTORY = "gtk-directory";

define constant $GTK-STOCK-DISCARD = "gtk-discard";

define constant $GTK-STOCK-DISCONNECT = "gtk-disconnect";

define constant $GTK-STOCK-EDIT = "gtk-edit";

define constant $GTK-STOCK-EXECUTE = "gtk-execute";

define constant $GTK-STOCK-FILE = "gtk-file";

define constant $GTK-STOCK-FIND = "gtk-find";

define constant $GTK-STOCK-FIND-AND-REPLACE = "gtk-find-and-replace";

define constant $GTK-STOCK-FLOPPY = "gtk-floppy";

define constant $GTK-STOCK-FULLSCREEN = "gtk-fullscreen";

define constant $GTK-STOCK-GOTO-BOTTOM = "gtk-goto-bottom";

define constant $GTK-STOCK-GOTO-FIRST = "gtk-goto-first";

define constant $GTK-STOCK-GOTO-LAST = "gtk-goto-last";

define constant $GTK-STOCK-GOTO-TOP = "gtk-goto-top";

define constant $GTK-STOCK-GO-BACK = "gtk-go-back";

define constant $GTK-STOCK-GO-DOWN = "gtk-go-down";

define constant $GTK-STOCK-GO-FORWARD = "gtk-go-forward";

define constant $GTK-STOCK-GO-UP = "gtk-go-up";

define constant $GTK-STOCK-HARDDISK = "gtk-harddisk";

define constant $GTK-STOCK-HELP = "gtk-help";

define constant $GTK-STOCK-HOME = "gtk-home";

define constant $GTK-STOCK-INDEX = "gtk-index";

define constant $GTK-STOCK-INDENT = "gtk-indent";

define constant $GTK-STOCK-INFO = "gtk-info";

define constant $GTK-STOCK-UNINDENT = "gtk-unindent";

define constant $GTK-STOCK-ITALIC = "gtk-italic";

define constant $GTK-STOCK-JUMP-TO = "gtk-jump-to";

define constant $GTK-STOCK-JUSTIFY-CENTER = "gtk-justify-center";

define constant $GTK-STOCK-JUSTIFY-FILL = "gtk-justify-fill";

define constant $GTK-STOCK-JUSTIFY-LEFT = "gtk-justify-left";

define constant $GTK-STOCK-JUSTIFY-RIGHT = "gtk-justify-right";

define constant $GTK-STOCK-LEAVE-FULLSCREEN = "gtk-leave-fullscreen";

define constant $GTK-STOCK-MISSING-IMAGE = "gtk-missing-image";

define constant $GTK-STOCK-MEDIA-FORWARD = "gtk-media-forward";

define constant $GTK-STOCK-MEDIA-NEXT = "gtk-media-next";

define constant $GTK-STOCK-MEDIA-PAUSE = "gtk-media-pause";

define constant $GTK-STOCK-MEDIA-PLAY = "gtk-media-play";

define constant $GTK-STOCK-MEDIA-PREVIOUS = "gtk-media-previous";

define constant $GTK-STOCK-MEDIA-RECORD = "gtk-media-record";

define constant $GTK-STOCK-MEDIA-REWIND = "gtk-media-rewind";

define constant $GTK-STOCK-MEDIA-STOP = "gtk-media-stop";

define constant $GTK-STOCK-NETWORK = "gtk-network";

define constant $GTK-STOCK-NEW = "gtk-new";

define constant $GTK-STOCK-NO = "gtk-no";

define constant $GTK-STOCK-OK = "gtk-ok";

define constant $GTK-STOCK-OPEN = "gtk-open";

define constant $GTK-STOCK-ORIENTATION-PORTRAIT = "gtk-orientation-portrait";

define constant $GTK-STOCK-ORIENTATION-LANDSCAPE = "gtk-orientation-landscape";

define constant $GTK-STOCK-ORIENTATION-REVERSE-LANDSCAPE = "gtk-orientation-reverse-landscape";

define constant $GTK-STOCK-ORIENTATION-REVERSE-PORTRAIT = "gtk-orientation-reverse-portrait";

define constant $GTK-STOCK-PASTE = "gtk-paste";

define constant $GTK-STOCK-PREFERENCES = "gtk-preferences";

define constant $GTK-STOCK-PRINT = "gtk-print";

define constant $GTK-STOCK-PRINT-PREVIEW = "gtk-print-preview";

define constant $GTK-STOCK-PROPERTIES = "gtk-properties";

define constant $GTK-STOCK-QUIT = "gtk-quit";

define constant $GTK-STOCK-REDO = "gtk-redo";

define constant $GTK-STOCK-REFRESH = "gtk-refresh";

define constant $GTK-STOCK-REMOVE = "gtk-remove";

define constant $GTK-STOCK-REVERT-TO-SAVED = "gtk-revert-to-saved";

define constant $GTK-STOCK-SAVE = "gtk-save";

define constant $GTK-STOCK-SAVE-AS = "gtk-save-as";

define constant $GTK-STOCK-SELECT-ALL = "gtk-select-all";

define constant $GTK-STOCK-SELECT-COLOR = "gtk-select-color";

define constant $GTK-STOCK-SELECT-FONT = "gtk-select-font";

define constant $GTK-STOCK-SORT-ASCENDING = "gtk-sort-ascending";

define constant $GTK-STOCK-SORT-DESCENDING = "gtk-sort-descending";

define constant $GTK-STOCK-SPELL-CHECK = "gtk-spell-check";

define constant $GTK-STOCK-STOP = "gtk-stop";

define constant $GTK-STOCK-STRIKETHROUGH = "gtk-strikethrough";

define constant $GTK-STOCK-UNDELETE = "gtk-undelete";

define constant $GTK-STOCK-UNDERLINE = "gtk-underline";

define constant $GTK-STOCK-UNDO = "gtk-undo";

define constant $GTK-STOCK-YES = "gtk-yes";

define constant $GTK-STOCK-ZOOM-100 = "gtk-zoom-100";

define constant $GTK-STOCK-ZOOM-FIT = "gtk-zoom-fit";

define constant $GTK-STOCK-ZOOM-IN = "gtk-zoom-in";

define constant $GTK-STOCK-ZOOM-OUT = "gtk-zoom-out";

define C-struct <_GtkStatusIconPrivate>
end;

define C-pointer-type <GtkStatusIconPrivate> => <_GtkStatusIconPrivate>;

define C-struct <_GtkStatusIcon>
  slot GtkStatusIcon-parent-instance :: <_GObject>;
  slot GtkStatusIcon-priv :: <GtkStatusIconPrivate>;
end;

define C-pointer-type <GtkStatusIcon> => <_GtkStatusIcon>;

define constant <anonymous-8071> = <C-function-pointer>;
define constant <anonymous-8072> = <C-function-pointer>;
define constant <anonymous-8073> = <C-function-pointer>;
define C-struct <_GtkStatusIconClass>
  slot GtkStatusIconClass-parent-class :: <_GObjectClass>;
  slot GtkStatusIconClass-activate :: <anonymous-8071>;
  slot GtkStatusIconClass-popup-menu :: <anonymous-8072>;
  slot GtkStatusIconClass-size-changed :: <anonymous-8073>;
  slot GtkStatusIconClass-__gtk-reserved1 :: <C-void*>;
  slot GtkStatusIconClass-__gtk-reserved2 :: <C-void*>;
  slot GtkStatusIconClass-__gtk-reserved3 :: <C-void*>;
  slot GtkStatusIconClass-__gtk-reserved4 :: <C-void*>;
  slot GtkStatusIconClass-__gtk-reserved5 :: <C-void*>;
  slot GtkStatusIconClass-__gtk-reserved6 :: <C-void*>;
end;

define C-pointer-type <GtkStatusIconClass> => <_GtkStatusIconClass>;

define C-function gtk-status-icon-get-type
  result res :: <GType>;
  c-name: "gtk_status_icon_get_type";
end;

define C-function gtk-status-icon-new
  result res :: <GtkStatusIcon>;
  c-name: "gtk_status_icon_new";
end;

define C-function gtk-status-icon-new-from-pixbuf
  input parameter arg1 :: <GdkPixbuf>;
  result res :: <GtkStatusIcon>;
  c-name: "gtk_status_icon_new_from_pixbuf";
end;

define C-function gtk-status-icon-new-from-file
  input parameter arg1 :: <gchar*>;
  result res :: <GtkStatusIcon>;
  c-name: "gtk_status_icon_new_from_file";
end;

define C-function gtk-status-icon-new-from-stock
  input parameter arg1 :: <gchar*>;
  result res :: <GtkStatusIcon>;
  c-name: "gtk_status_icon_new_from_stock";
end;

define C-function gtk-status-icon-new-from-icon-name
  input parameter arg1 :: <gchar*>;
  result res :: <GtkStatusIcon>;
  c-name: "gtk_status_icon_new_from_icon_name";
end;

define C-function gtk-status-icon-set-from-pixbuf
  input parameter arg1 :: <GtkStatusIcon>;
  input parameter arg2 :: <GdkPixbuf>;
  c-name: "gtk_status_icon_set_from_pixbuf";
end;

define C-function gtk-status-icon-set-from-file
  input parameter arg1 :: <GtkStatusIcon>;
  input parameter arg2 :: <gchar*>;
  c-name: "gtk_status_icon_set_from_file";
end;

define C-function gtk-status-icon-set-from-stock
  input parameter arg1 :: <GtkStatusIcon>;
  input parameter arg2 :: <gchar*>;
  c-name: "gtk_status_icon_set_from_stock";
end;

define C-function gtk-status-icon-set-from-icon-name
  input parameter arg1 :: <GtkStatusIcon>;
  input parameter arg2 :: <gchar*>;
  c-name: "gtk_status_icon_set_from_icon_name";
end;

define C-function gtk-status-icon-get-storage-type
  input parameter arg1 :: <GtkStatusIcon>;
  result res :: <GtkImageType>;
  c-name: "gtk_status_icon_get_storage_type";
end;

define C-function gtk-status-icon-get-pixbuf
  input parameter arg1 :: <GtkStatusIcon>;
  result res :: <GdkPixbuf>;
  c-name: "gtk_status_icon_get_pixbuf";
end;

define C-function gtk-status-icon-get-stock
  input parameter arg1 :: <GtkStatusIcon>;
  result res :: <gchar*>;
  c-name: "gtk_status_icon_get_stock";
end;

define C-function gtk-status-icon-get-icon-name
  input parameter arg1 :: <GtkStatusIcon>;
  result res :: <gchar*>;
  c-name: "gtk_status_icon_get_icon_name";
end;

define C-function gtk-status-icon-get-size
  input parameter arg1 :: <GtkStatusIcon>;
  result res :: <gint>;
  c-name: "gtk_status_icon_get_size";
end;

define C-function gtk-status-icon-set-screen
  input parameter arg1 :: <GtkStatusIcon>;
  input parameter arg2 :: <GdkScreen>;
  c-name: "gtk_status_icon_set_screen";
end;

define C-function gtk-status-icon-get-screen
  input parameter arg1 :: <GtkStatusIcon>;
  result res :: <GdkScreen>;
  c-name: "gtk_status_icon_get_screen";
end;

define C-function gtk-status-icon-set-tooltip
  input parameter arg1 :: <GtkStatusIcon>;
  input parameter arg2 :: <gchar*>;
  c-name: "gtk_status_icon_set_tooltip";
end;

define C-function gtk-status-icon-set-visible
  input parameter arg1 :: <GtkStatusIcon>;
  input parameter arg2 :: <gboolean>;
  c-name: "gtk_status_icon_set_visible";
end;

define C-function gtk-status-icon-get-visible
  input parameter arg1 :: <GtkStatusIcon>;
  result res :: <gboolean>;
  c-name: "gtk_status_icon_get_visible";
end;

define C-function gtk-status-icon-set-blinking
  input parameter arg1 :: <GtkStatusIcon>;
  input parameter arg2 :: <gboolean>;
  c-name: "gtk_status_icon_set_blinking";
end;

define C-function gtk-status-icon-get-blinking
  input parameter arg1 :: <GtkStatusIcon>;
  result res :: <gboolean>;
  c-name: "gtk_status_icon_get_blinking";
end;

define C-function gtk-status-icon-is-embedded
  input parameter arg1 :: <GtkStatusIcon>;
  result res :: <gboolean>;
  c-name: "gtk_status_icon_is_embedded";
end;

define C-function gtk-status-icon-position-menu
  input parameter arg1 :: <GtkMenu>;
  input parameter arg2 :: <gint*>;
  input parameter arg3 :: <gint*>;
  input parameter arg4 :: <gboolean*>;
  input parameter arg5 :: <gpointer>;
  c-name: "gtk_status_icon_position_menu";
end;

define C-pointer-type <GtkOrientation*> => <GtkOrientation>;
define C-function gtk-status-icon-get-geometry
  input parameter arg1 :: <GtkStatusIcon>;
  input parameter arg2 :: <GdkScreen*>;
  input parameter arg3 :: <GdkRectangle>;
  input parameter arg4 :: <GtkOrientation*>;
  result res :: <gboolean>;
  c-name: "gtk_status_icon_get_geometry";
end;

define C-subtype <_GtkHBox> (<_GtkBox>, <_AtkImplementorIface>) end;
define constant <GtkHBox> = <_GtkHBox>;

define C-subtype <_GtkStatusbar> (<_GtkHBox>, <_AtkImplementorIface>) end;
define constant <GtkStatusbar> = <_GtkStatusbar>;

define C-struct <_GtkHBoxClass>
  slot GtkHBoxClass-parent-class :: <_GtkBoxClass>;
end;

define C-pointer-type <GtkHBoxClass> => <_GtkHBoxClass>;

define constant <anonymous-8057> = <C-function-pointer>;
define constant <anonymous-8058> = <C-function-pointer>;
define constant <anonymous-8059> = <C-function-pointer>;
define constant <anonymous-8060> = <C-function-pointer>;
define constant <anonymous-8061> = <C-function-pointer>;
define constant <anonymous-8062> = <C-function-pointer>;
define C-struct <_GtkStatusbarClass>
  slot GtkStatusbarClass-parent-class :: <_GtkHBoxClass>;
  slot GtkStatusbarClass-reserved :: <C-void*>;
  slot GtkStatusbarClass-text-pushed :: <anonymous-8057>;
  slot GtkStatusbarClass-text-popped :: <anonymous-8058>;
  slot GtkStatusbarClass-_gtk-reserved1 :: <anonymous-8059>;
  slot GtkStatusbarClass-_gtk-reserved2 :: <anonymous-8060>;
  slot GtkStatusbarClass-_gtk-reserved3 :: <anonymous-8061>;
  slot GtkStatusbarClass-_gtk-reserved4 :: <anonymous-8062>;
end;

define C-pointer-type <GtkStatusbarClass> => <_GtkStatusbarClass>;

define C-function gtk-statusbar-get-type
  result res :: <GType>;
  c-name: "gtk_statusbar_get_type";
end;

define C-function gtk-statusbar-new
  result res :: <GtkWidget>;
  c-name: "gtk_statusbar_new";
end;

define C-function gtk-statusbar-get-context-id
  input parameter arg1 :: <GtkStatusbar>;
  input parameter arg2 :: <gchar*>;
  result res :: <guint>;
  c-name: "gtk_statusbar_get_context_id";
end;

define C-function gtk-statusbar-push
  input parameter arg1 :: <GtkStatusbar>;
  input parameter arg2 :: <guint>;
  input parameter arg3 :: <gchar*>;
  result res :: <guint>;
  c-name: "gtk_statusbar_push";
end;

define C-function gtk-statusbar-pop
  input parameter arg1 :: <GtkStatusbar>;
  input parameter arg2 :: <guint>;
  c-name: "gtk_statusbar_pop";
end;

define C-function gtk-statusbar-remove
  input parameter arg1 :: <GtkStatusbar>;
  input parameter arg2 :: <guint>;
  input parameter arg3 :: <guint>;
  c-name: "gtk_statusbar_remove";
end;

define C-function gtk-statusbar-set-has-resize-grip
  input parameter arg1 :: <GtkStatusbar>;
  input parameter arg2 :: <gboolean>;
  c-name: "gtk_statusbar_set_has_resize_grip";
end;

define C-function gtk-statusbar-get-has-resize-grip
  input parameter arg1 :: <GtkStatusbar>;
  result res :: <gboolean>;
  c-name: "gtk_statusbar_get_has_resize_grip";
end;

define C-function gtk-hbox-get-type
  result res :: <GType>;
  c-name: "gtk_hbox_get_type";
end;

define C-function gtk-hbox-new
  input parameter arg1 :: <gboolean>;
  input parameter arg2 :: <gint>;
  result res :: <GtkWidget>;
  c-name: "gtk_hbox_new";
end;

define constant <GtkSpinButtonUpdatePolicy> = <C-int>;
define constant $GTK-UPDATE-ALWAYS = 0;
define constant $GTK-UPDATE-IF-VALID = 1;

define constant <GtkSpinType> = <C-int>;
define constant $GTK-SPIN-STEP-FORWARD = 0;
define constant $GTK-SPIN-STEP-BACKWARD = 1;
define constant $GTK-SPIN-PAGE-FORWARD = 2;
define constant $GTK-SPIN-PAGE-BACKWARD = 3;
define constant $GTK-SPIN-HOME = 4;
define constant $GTK-SPIN-END = 5;
define constant $GTK-SPIN-USER-DEFINED = 6;

define C-subtype <_GtkSpinButton> (<_GtkEntry>, <_AtkImplementorIface>, <_GtkCellEditable>, <_GtkEditable>) end;
define constant <GtkSpinButton> = <_GtkSpinButton>;

define constant <anonymous-8023> = <C-function-pointer>;
define constant <anonymous-8024> = <C-function-pointer>;
define constant <anonymous-8025> = <C-function-pointer>;
define constant <anonymous-8026> = <C-function-pointer>;
define constant <anonymous-8027> = <C-function-pointer>;
define constant <anonymous-8028> = <C-function-pointer>;
define constant <anonymous-8029> = <C-function-pointer>;
define constant <anonymous-8030> = <C-function-pointer>;
define C-struct <_GtkSpinButtonClass>
  slot GtkSpinButtonClass-parent-class :: <_GtkEntryClass>;
  slot GtkSpinButtonClass-input :: <anonymous-8023>;
  slot GtkSpinButtonClass-output :: <anonymous-8024>;
  slot GtkSpinButtonClass-value-changed :: <anonymous-8025>;
  slot GtkSpinButtonClass-change-value :: <anonymous-8026>;
  slot GtkSpinButtonClass-wrapped :: <anonymous-8027>;
  slot GtkSpinButtonClass-_gtk-reserved1 :: <anonymous-8028>;
  slot GtkSpinButtonClass-_gtk-reserved2 :: <anonymous-8029>;
  slot GtkSpinButtonClass-_gtk-reserved3 :: <anonymous-8030>;
end;

define C-pointer-type <GtkSpinButtonClass> => <_GtkSpinButtonClass>;

define C-function gtk-spin-button-get-type
  result res :: <GType>;
  c-name: "gtk_spin_button_get_type";
end;

define C-function gtk-spin-button-configure
  input parameter arg1 :: <GtkSpinButton>;
  input parameter arg2 :: <GtkAdjustment>;
  input parameter arg3 :: <gdouble>;
  input parameter arg4 :: <guint>;
  c-name: "gtk_spin_button_configure";
end;

define C-function gtk-spin-button-new
  input parameter arg1 :: <GtkAdjustment>;
  input parameter arg2 :: <gdouble>;
  input parameter arg3 :: <guint>;
  result res :: <GtkWidget>;
  c-name: "gtk_spin_button_new";
end;

define C-function gtk-spin-button-new-with-range
  input parameter arg1 :: <gdouble>;
  input parameter arg2 :: <gdouble>;
  input parameter arg3 :: <gdouble>;
  result res :: <GtkWidget>;
  c-name: "gtk_spin_button_new_with_range";
end;

define C-function gtk-spin-button-set-adjustment
  input parameter arg1 :: <GtkSpinButton>;
  input parameter arg2 :: <GtkAdjustment>;
  c-name: "gtk_spin_button_set_adjustment";
end;

define C-function gtk-spin-button-get-adjustment
  input parameter arg1 :: <GtkSpinButton>;
  result res :: <GtkAdjustment>;
  c-name: "gtk_spin_button_get_adjustment";
end;

define C-function gtk-spin-button-set-digits
  input parameter arg1 :: <GtkSpinButton>;
  input parameter arg2 :: <guint>;
  c-name: "gtk_spin_button_set_digits";
end;

define C-function gtk-spin-button-get-digits
  input parameter arg1 :: <GtkSpinButton>;
  result res :: <guint>;
  c-name: "gtk_spin_button_get_digits";
end;

define C-function gtk-spin-button-set-increments
  input parameter arg1 :: <GtkSpinButton>;
  input parameter arg2 :: <gdouble>;
  input parameter arg3 :: <gdouble>;
  c-name: "gtk_spin_button_set_increments";
end;

define C-function gtk-spin-button-get-increments
  input parameter arg1 :: <GtkSpinButton>;
  input parameter arg2 :: <gdouble*>;
  input parameter arg3 :: <gdouble*>;
  c-name: "gtk_spin_button_get_increments";
end;

define C-function gtk-spin-button-set-range
  input parameter arg1 :: <GtkSpinButton>;
  input parameter arg2 :: <gdouble>;
  input parameter arg3 :: <gdouble>;
  c-name: "gtk_spin_button_set_range";
end;

define C-function gtk-spin-button-get-range
  input parameter arg1 :: <GtkSpinButton>;
  input parameter arg2 :: <gdouble*>;
  input parameter arg3 :: <gdouble*>;
  c-name: "gtk_spin_button_get_range";
end;

define C-function gtk-spin-button-get-value
  input parameter arg1 :: <GtkSpinButton>;
  result res :: <gdouble>;
  c-name: "gtk_spin_button_get_value";
end;

define C-function gtk-spin-button-get-value-as-int
  input parameter arg1 :: <GtkSpinButton>;
  result res :: <gint>;
  c-name: "gtk_spin_button_get_value_as_int";
end;

define C-function gtk-spin-button-set-value
  input parameter arg1 :: <GtkSpinButton>;
  input parameter arg2 :: <gdouble>;
  c-name: "gtk_spin_button_set_value";
end;

define C-function gtk-spin-button-set-update-policy
  input parameter arg1 :: <GtkSpinButton>;
  input parameter arg2 :: <GtkSpinButtonUpdatePolicy>;
  c-name: "gtk_spin_button_set_update_policy";
end;

define C-function gtk-spin-button-get-update-policy
  input parameter arg1 :: <GtkSpinButton>;
  result res :: <GtkSpinButtonUpdatePolicy>;
  c-name: "gtk_spin_button_get_update_policy";
end;

define C-function gtk-spin-button-set-numeric
  input parameter arg1 :: <GtkSpinButton>;
  input parameter arg2 :: <gboolean>;
  c-name: "gtk_spin_button_set_numeric";
end;

define C-function gtk-spin-button-get-numeric
  input parameter arg1 :: <GtkSpinButton>;
  result res :: <gboolean>;
  c-name: "gtk_spin_button_get_numeric";
end;

define C-function gtk-spin-button-spin
  input parameter arg1 :: <GtkSpinButton>;
  input parameter arg2 :: <GtkSpinType>;
  input parameter arg3 :: <gdouble>;
  c-name: "gtk_spin_button_spin";
end;

define C-function gtk-spin-button-set-wrap
  input parameter arg1 :: <GtkSpinButton>;
  input parameter arg2 :: <gboolean>;
  c-name: "gtk_spin_button_set_wrap";
end;

define C-function gtk-spin-button-get-wrap
  input parameter arg1 :: <GtkSpinButton>;
  result res :: <gboolean>;
  c-name: "gtk_spin_button_get_wrap";
end;

define C-function gtk-spin-button-set-snap-to-ticks
  input parameter arg1 :: <GtkSpinButton>;
  input parameter arg2 :: <gboolean>;
  c-name: "gtk_spin_button_set_snap_to_ticks";
end;

define C-function gtk-spin-button-get-snap-to-ticks
  input parameter arg1 :: <GtkSpinButton>;
  result res :: <gboolean>;
  c-name: "gtk_spin_button_get_snap_to_ticks";
end;

define C-function gtk-spin-button-update
  input parameter arg1 :: <GtkSpinButton>;
  c-name: "gtk_spin_button_update";
end;

define constant $GTK-INPUT-ERROR = -1;

define constant gtk-spin-button-get-value-as-float = gtk-spin-button-get-value;

define C-subtype <_GtkSocket> (<_GtkContainer>, <_AtkImplementorIface>) end;
define constant <GtkSocket> = <_GtkSocket>;

define constant <anonymous-7446> = <C-function-pointer>;
define constant <anonymous-7447> = <C-function-pointer>;
define constant <anonymous-7448> = <C-function-pointer>;
define constant <anonymous-7449> = <C-function-pointer>;
define constant <anonymous-7450> = <C-function-pointer>;
define constant <anonymous-7451> = <C-function-pointer>;
define C-struct <_GtkSocketClass>
  slot GtkSocketClass-parent-class :: <_GtkContainerClass>;
  slot GtkSocketClass-plug-added :: <anonymous-7446>;
  slot GtkSocketClass-plug-removed :: <anonymous-7447>;
  slot GtkSocketClass-_gtk-reserved1 :: <anonymous-7448>;
  slot GtkSocketClass-_gtk-reserved2 :: <anonymous-7449>;
  slot GtkSocketClass-_gtk-reserved3 :: <anonymous-7450>;
  slot GtkSocketClass-_gtk-reserved4 :: <anonymous-7451>;
end;

define C-pointer-type <GtkSocketClass> => <_GtkSocketClass>;

define C-function gtk-socket-get-type
  result res :: <GType>;
  c-name: "gtk_socket_get_type";
end;

define C-function gtk-socket-new
  result res :: <GtkWidget>;
  c-name: "gtk_socket_new";
end;

define C-function gtk-socket-add-id
  input parameter arg1 :: <GtkSocket>;
  input parameter arg2 :: <GdkNativeWindow>;
  c-name: "gtk_socket_add_id";
end;

define C-function gtk-socket-get-id
  input parameter arg1 :: <GtkSocket>;
  result res :: <GdkNativeWindow>;
  c-name: "gtk_socket_get_id";
end;

define C-function gtk-socket-steal
  input parameter arg1 :: <GtkSocket>;
  input parameter arg2 :: <GdkNativeWindow>;
  c-name: "gtk_socket_steal";
end;

define C-subtype <_GtkSizeGroup> (<_GObject>) end;
define constant <GtkSizeGroup> = <_GtkSizeGroup>;

define constant <anonymous-7995> = <C-function-pointer>;
define constant <anonymous-7996> = <C-function-pointer>;
define constant <anonymous-7997> = <C-function-pointer>;
define constant <anonymous-7998> = <C-function-pointer>;
define C-struct <_GtkSizeGroupClass>
  slot GtkSizeGroupClass-parent-class :: <_GObjectClass>;
  slot GtkSizeGroupClass-_gtk-reserved1 :: <anonymous-7995>;
  slot GtkSizeGroupClass-_gtk-reserved2 :: <anonymous-7996>;
  slot GtkSizeGroupClass-_gtk-reserved3 :: <anonymous-7997>;
  slot GtkSizeGroupClass-_gtk-reserved4 :: <anonymous-7998>;
end;

define C-pointer-type <GtkSizeGroupClass> => <_GtkSizeGroupClass>;

define constant <GtkSizeGroupMode> = <C-int>;
define constant $GTK-SIZE-GROUP-NONE = 0;
define constant $GTK-SIZE-GROUP-HORIZONTAL = 1;
define constant $GTK-SIZE-GROUP-VERTICAL = 2;
define constant $GTK-SIZE-GROUP-BOTH = 3;

define C-function gtk-size-group-get-type
  result res :: <GType>;
  c-name: "gtk_size_group_get_type";
end;

define C-function gtk-size-group-new
  input parameter arg1 :: <GtkSizeGroupMode>;
  result res :: <GtkSizeGroup>;
  c-name: "gtk_size_group_new";
end;

define C-function gtk-size-group-set-mode
  input parameter arg1 :: <GtkSizeGroup>;
  input parameter arg2 :: <GtkSizeGroupMode>;
  c-name: "gtk_size_group_set_mode";
end;

define C-function gtk-size-group-get-mode
  input parameter arg1 :: <GtkSizeGroup>;
  result res :: <GtkSizeGroupMode>;
  c-name: "gtk_size_group_get_mode";
end;

define C-function gtk-size-group-set-ignore-hidden
  input parameter arg1 :: <GtkSizeGroup>;
  input parameter arg2 :: <gboolean>;
  c-name: "gtk_size_group_set_ignore_hidden";
end;

define C-function gtk-size-group-get-ignore-hidden
  input parameter arg1 :: <GtkSizeGroup>;
  result res :: <gboolean>;
  c-name: "gtk_size_group_get_ignore_hidden";
end;

define C-function gtk-size-group-add-widget
  input parameter arg1 :: <GtkSizeGroup>;
  input parameter arg2 :: <GtkWidget>;
  c-name: "gtk_size_group_add_widget";
end;

define C-function gtk-size-group-remove-widget
  input parameter arg1 :: <GtkSizeGroup>;
  input parameter arg2 :: <GtkWidget>;
  c-name: "gtk_size_group_remove_widget";
end;

define C-function gtk-size-group-get-widgets
  input parameter arg1 :: <GtkSizeGroup>;
  result res :: <GSList>;
  c-name: "gtk_size_group_get_widgets";
end;

define C-struct <_GtkSeparatorToolItemPrivate>
end;

define C-pointer-type <GtkSeparatorToolItemPrivate> => <_GtkSeparatorToolItemPrivate>;

define C-subtype <_GtkSeparatorToolItem> (<_GtkToolItem>, <_AtkImplementorIface>) end;
define constant <GtkSeparatorToolItem> = <_GtkSeparatorToolItem>;

define constant <anonymous-7984> = <C-function-pointer>;
define constant <anonymous-7985> = <C-function-pointer>;
define constant <anonymous-7986> = <C-function-pointer>;
define constant <anonymous-7987> = <C-function-pointer>;
define C-struct <_GtkSeparatorToolItemClass>
  slot GtkSeparatorToolItemClass-parent-class :: <_GtkToolItemClass>;
  slot GtkSeparatorToolItemClass-_gtk-reserved1 :: <anonymous-7984>;
  slot GtkSeparatorToolItemClass-_gtk-reserved2 :: <anonymous-7985>;
  slot GtkSeparatorToolItemClass-_gtk-reserved3 :: <anonymous-7986>;
  slot GtkSeparatorToolItemClass-_gtk-reserved4 :: <anonymous-7987>;
end;

define C-pointer-type <GtkSeparatorToolItemClass> => <_GtkSeparatorToolItemClass>;

define C-function gtk-separator-tool-item-get-type
  result res :: <GType>;
  c-name: "gtk_separator_tool_item_get_type";
end;

define C-function gtk-separator-tool-item-new
  result res :: <GtkToolItem>;
  c-name: "gtk_separator_tool_item_new";
end;

define C-function gtk-separator-tool-item-get-draw
  input parameter arg1 :: <GtkSeparatorToolItem>;
  result res :: <gboolean>;
  c-name: "gtk_separator_tool_item_get_draw";
end;

define C-function gtk-separator-tool-item-set-draw
  input parameter arg1 :: <GtkSeparatorToolItem>;
  input parameter arg2 :: <gboolean>;
  c-name: "gtk_separator_tool_item_set_draw";
end;

define C-subtype <_GtkSeparatorMenuItem> (<_GtkMenuItem>, <_AtkImplementorIface>) end;
define constant <GtkSeparatorMenuItem> = <_GtkSeparatorMenuItem>;

define C-struct <_GtkSeparatorMenuItemClass>
  slot GtkSeparatorMenuItemClass-parent-class :: <_GtkMenuItemClass>;
end;

define C-pointer-type <GtkSeparatorMenuItemClass> => <_GtkSeparatorMenuItemClass>;

define C-function gtk-separator-menu-item-get-type
  result res :: <GType>;
  c-name: "gtk_separator_menu_item_get_type";
end;

define C-function gtk-separator-menu-item-new
  result res :: <GtkWidget>;
  c-name: "gtk_separator_menu_item_new";
end;

define C-subtype <_GtkScrolledWindow> (<_GtkBin>, <_AtkImplementorIface>) end;
define constant <GtkScrolledWindow> = <_GtkScrolledWindow>;

define constant <anonymous-7959> = <C-function-pointer>;
define constant <anonymous-7960> = <C-function-pointer>;
define constant <anonymous-7961> = <C-function-pointer>;
define constant <anonymous-7962> = <C-function-pointer>;
define constant <anonymous-7963> = <C-function-pointer>;
define constant <anonymous-7964> = <C-function-pointer>;
define C-struct <_GtkScrolledWindowClass>
  slot GtkScrolledWindowClass-parent-class :: <_GtkBinClass>;
  slot GtkScrolledWindowClass-scrollbar-spacing :: <C-signed-int>;
  slot GtkScrolledWindowClass-scroll-child :: <anonymous-7959>;
  slot GtkScrolledWindowClass-move-focus-out :: <anonymous-7960>;
  slot GtkScrolledWindowClass-_gtk-reserved1 :: <anonymous-7961>;
  slot GtkScrolledWindowClass-_gtk-reserved2 :: <anonymous-7962>;
  slot GtkScrolledWindowClass-_gtk-reserved3 :: <anonymous-7963>;
  slot GtkScrolledWindowClass-_gtk-reserved4 :: <anonymous-7964>;
end;

define C-pointer-type <GtkScrolledWindowClass> => <_GtkScrolledWindowClass>;

define C-function gtk-scrolled-window-get-type
  result res :: <GType>;
  c-name: "gtk_scrolled_window_get_type";
end;

define C-function gtk-scrolled-window-new
  input parameter arg1 :: <GtkAdjustment>;
  input parameter arg2 :: <GtkAdjustment>;
  result res :: <GtkWidget>;
  c-name: "gtk_scrolled_window_new";
end;

define C-function gtk-scrolled-window-set-hadjustment
  input parameter arg1 :: <GtkScrolledWindow>;
  input parameter arg2 :: <GtkAdjustment>;
  c-name: "gtk_scrolled_window_set_hadjustment";
end;

define C-function gtk-scrolled-window-set-vadjustment
  input parameter arg1 :: <GtkScrolledWindow>;
  input parameter arg2 :: <GtkAdjustment>;
  c-name: "gtk_scrolled_window_set_vadjustment";
end;

define C-function gtk-scrolled-window-get-hadjustment
  input parameter arg1 :: <GtkScrolledWindow>;
  result res :: <GtkAdjustment>;
  c-name: "gtk_scrolled_window_get_hadjustment";
end;

define C-function gtk-scrolled-window-get-vadjustment
  input parameter arg1 :: <GtkScrolledWindow>;
  result res :: <GtkAdjustment>;
  c-name: "gtk_scrolled_window_get_vadjustment";
end;

define C-function gtk-scrolled-window-get-hscrollbar
  input parameter arg1 :: <GtkScrolledWindow>;
  result res :: <GtkWidget>;
  c-name: "gtk_scrolled_window_get_hscrollbar";
end;

define C-function gtk-scrolled-window-get-vscrollbar
  input parameter arg1 :: <GtkScrolledWindow>;
  result res :: <GtkWidget>;
  c-name: "gtk_scrolled_window_get_vscrollbar";
end;

define C-function gtk-scrolled-window-set-policy
  input parameter arg1 :: <GtkScrolledWindow>;
  input parameter arg2 :: <GtkPolicyType>;
  input parameter arg3 :: <GtkPolicyType>;
  c-name: "gtk_scrolled_window_set_policy";
end;

define C-pointer-type <GtkPolicyType*> => <GtkPolicyType>;
define C-function gtk-scrolled-window-get-policy
  input parameter arg1 :: <GtkScrolledWindow>;
  input parameter arg2 :: <GtkPolicyType*>;
  input parameter arg3 :: <GtkPolicyType*>;
  c-name: "gtk_scrolled_window_get_policy";
end;

define C-function gtk-scrolled-window-set-placement
  input parameter arg1 :: <GtkScrolledWindow>;
  input parameter arg2 :: <GtkCornerType>;
  c-name: "gtk_scrolled_window_set_placement";
end;

define C-function gtk-scrolled-window-unset-placement
  input parameter arg1 :: <GtkScrolledWindow>;
  c-name: "gtk_scrolled_window_unset_placement";
end;

define C-function gtk-scrolled-window-get-placement
  input parameter arg1 :: <GtkScrolledWindow>;
  result res :: <GtkCornerType>;
  c-name: "gtk_scrolled_window_get_placement";
end;

define C-function gtk-scrolled-window-set-shadow-type
  input parameter arg1 :: <GtkScrolledWindow>;
  input parameter arg2 :: <GtkShadowType>;
  c-name: "gtk_scrolled_window_set_shadow_type";
end;

define C-function gtk-scrolled-window-get-shadow-type
  input parameter arg1 :: <GtkScrolledWindow>;
  result res :: <GtkShadowType>;
  c-name: "gtk_scrolled_window_get_shadow_type";
end;

define C-function gtk-scrolled-window-add-with-viewport
  input parameter arg1 :: <GtkScrolledWindow>;
  input parameter arg2 :: <GtkWidget>;
  c-name: "gtk_scrolled_window_add_with_viewport";
end;

define C-subtype <_GtkHScrollbar> (<_GtkScrollbar>, <_AtkImplementorIface>) end;
define constant <GtkHScrollbar> = <_GtkHScrollbar>;

define C-struct <_GtkHScrollbarClass>
  slot GtkHScrollbarClass-parent-class :: <_GtkScrollbarClass>;
end;

define C-pointer-type <GtkHScrollbarClass> => <_GtkHScrollbarClass>;

define C-function gtk-hscrollbar-get-type
  result res :: <GType>;
  c-name: "gtk_hscrollbar_get_type";
end;

define C-function gtk-hscrollbar-new
  input parameter arg1 :: <GtkAdjustment>;
  result res :: <GtkWidget>;
  c-name: "gtk_hscrollbar_new";
end;

define C-struct <_GtkRecentInfo>
end;

define C-pointer-type <GtkRecentInfo> => <_GtkRecentInfo>;

define C-struct <_GtkRecentData>
  slot GtkRecentData-display-name :: <gchar*>;
  slot GtkRecentData-description :: <gchar*>;
  slot GtkRecentData-mime-type :: <gchar*>;
  slot GtkRecentData-app-name :: <gchar*>;
  slot GtkRecentData-app-exec :: <gchar*>;
  slot GtkRecentData-groups :: <gchar**>;
  slot GtkRecentData-is-private :: <C-signed-int>;
end;

define C-pointer-type <GtkRecentData> => <_GtkRecentData>;

define C-struct <_GtkRecentManagerPrivate>
end;

define C-pointer-type <GtkRecentManagerPrivate> => <_GtkRecentManagerPrivate>;

define C-struct <_GtkRecentManager>
  slot GtkRecentManager-parent-instance :: <_GObject>;
  slot GtkRecentManager-priv :: <GtkRecentManagerPrivate>;
end;

define C-pointer-type <GtkRecentManager> => <_GtkRecentManager>;

define constant <anonymous-7798> = <C-function-pointer>;
define constant <anonymous-7799> = <C-function-pointer>;
define constant <anonymous-7800> = <C-function-pointer>;
define constant <anonymous-7801> = <C-function-pointer>;
define constant <anonymous-7802> = <C-function-pointer>;
define C-struct <_GtkRecentManagerClass>
  slot GtkRecentManagerClass-parent-class :: <_GObjectClass>;
  slot GtkRecentManagerClass-changed :: <anonymous-7798>;
  slot GtkRecentManagerClass-_gtk-recent1 :: <anonymous-7799>;
  slot GtkRecentManagerClass-_gtk-recent2 :: <anonymous-7800>;
  slot GtkRecentManagerClass-_gtk-recent3 :: <anonymous-7801>;
  slot GtkRecentManagerClass-_gtk-recent4 :: <anonymous-7802>;
end;

define C-pointer-type <GtkRecentManagerClass> => <_GtkRecentManagerClass>;

define constant <GtkRecentManagerError> = <C-int>;
define constant $GTK-RECENT-MANAGER-ERROR-NOT-FOUND = 0;
define constant $GTK-RECENT-MANAGER-ERROR-INVALID-URI = 1;
define constant $GTK-RECENT-MANAGER-ERROR-INVALID-ENCODING = 2;
define constant $GTK-RECENT-MANAGER-ERROR-NOT-REGISTERED = 3;
define constant $GTK-RECENT-MANAGER-ERROR-READ = 4;
define constant $GTK-RECENT-MANAGER-ERROR-WRITE = 5;
define constant $GTK-RECENT-MANAGER-ERROR-UNKNOWN = 6;

define C-function gtk-recent-manager-error-quark
  result res :: <GQuark>;
  c-name: "gtk_recent_manager_error_quark";
end;

define C-function gtk-recent-manager-get-type
  result res :: <GType>;
  c-name: "gtk_recent_manager_get_type";
end;

define C-function gtk-recent-manager-new
  result res :: <GtkRecentManager>;
  c-name: "gtk_recent_manager_new";
end;

define C-function gtk-recent-manager-get-default
  result res :: <GtkRecentManager>;
  c-name: "gtk_recent_manager_get_default";
end;

define C-function gtk-recent-manager-get-for-screen
  input parameter arg1 :: <GdkScreen>;
  result res :: <GtkRecentManager>;
  c-name: "gtk_recent_manager_get_for_screen";
end;

define C-function gtk-recent-manager-set-screen
  input parameter arg1 :: <GtkRecentManager>;
  input parameter arg2 :: <GdkScreen>;
  c-name: "gtk_recent_manager_set_screen";
end;

define C-function gtk-recent-manager-add-item
  input parameter arg1 :: <GtkRecentManager>;
  input parameter arg2 :: <gchar*>;
  result res :: <gboolean>;
  c-name: "gtk_recent_manager_add_item";
end;

define C-function gtk-recent-manager-add-full
  input parameter arg1 :: <GtkRecentManager>;
  input parameter arg2 :: <gchar*>;
  input parameter arg3 :: <GtkRecentData>;
  result res :: <gboolean>;
  c-name: "gtk_recent_manager_add_full";
end;

define C-function gtk-recent-manager-remove-item
  input parameter arg1 :: <GtkRecentManager>;
  input parameter arg2 :: <gchar*>;
  input parameter arg3 :: <GError*>;
  result res :: <gboolean>;
  c-name: "gtk_recent_manager_remove_item";
end;

define C-function gtk-recent-manager-lookup-item
  input parameter arg1 :: <GtkRecentManager>;
  input parameter arg2 :: <gchar*>;
  input parameter arg3 :: <GError*>;
  result res :: <GtkRecentInfo>;
  c-name: "gtk_recent_manager_lookup_item";
end;

define C-function gtk-recent-manager-has-item
  input parameter arg1 :: <GtkRecentManager>;
  input parameter arg2 :: <gchar*>;
  result res :: <gboolean>;
  c-name: "gtk_recent_manager_has_item";
end;

define C-function gtk-recent-manager-move-item
  input parameter arg1 :: <GtkRecentManager>;
  input parameter arg2 :: <gchar*>;
  input parameter arg3 :: <gchar*>;
  input parameter arg4 :: <GError*>;
  result res :: <gboolean>;
  c-name: "gtk_recent_manager_move_item";
end;

define C-function gtk-recent-manager-set-limit
  input parameter arg1 :: <GtkRecentManager>;
  input parameter arg2 :: <gint>;
  c-name: "gtk_recent_manager_set_limit";
end;

define C-function gtk-recent-manager-get-limit
  input parameter arg1 :: <GtkRecentManager>;
  result res :: <gint>;
  c-name: "gtk_recent_manager_get_limit";
end;

define C-function gtk-recent-manager-get-items
  input parameter arg1 :: <GtkRecentManager>;
  result res :: <GList>;
  c-name: "gtk_recent_manager_get_items";
end;

define C-function gtk-recent-manager-purge-items
  input parameter arg1 :: <GtkRecentManager>;
  input parameter arg2 :: <GError*>;
  result res :: <gint>;
  c-name: "gtk_recent_manager_purge_items";
end;

define C-function gtk-recent-info-get-type
  result res :: <GType>;
  c-name: "gtk_recent_info_get_type";
end;

define C-function gtk-recent-info-ref
  input parameter arg1 :: <GtkRecentInfo>;
  result res :: <GtkRecentInfo>;
  c-name: "gtk_recent_info_ref";
end;

define C-function gtk-recent-info-unref
  input parameter arg1 :: <GtkRecentInfo>;
  c-name: "gtk_recent_info_unref";
end;

define C-function gtk-recent-info-get-uri
  input parameter arg1 :: <GtkRecentInfo>;
  result res :: <gchar*>;
  c-name: "gtk_recent_info_get_uri";
end;

define C-function gtk-recent-info-get-display-name
  input parameter arg1 :: <GtkRecentInfo>;
  result res :: <gchar*>;
  c-name: "gtk_recent_info_get_display_name";
end;

define C-function gtk-recent-info-get-description
  input parameter arg1 :: <GtkRecentInfo>;
  result res :: <gchar*>;
  c-name: "gtk_recent_info_get_description";
end;

define C-function gtk-recent-info-get-mime-type
  input parameter arg1 :: <GtkRecentInfo>;
  result res :: <gchar*>;
  c-name: "gtk_recent_info_get_mime_type";
end;

define C-function gtk-recent-info-get-added
  input parameter arg1 :: <GtkRecentInfo>;
  result res :: <time-t>;
  c-name: "gtk_recent_info_get_added";
end;

define C-function gtk-recent-info-get-modified
  input parameter arg1 :: <GtkRecentInfo>;
  result res :: <time-t>;
  c-name: "gtk_recent_info_get_modified";
end;

define C-function gtk-recent-info-get-visited
  input parameter arg1 :: <GtkRecentInfo>;
  result res :: <time-t>;
  c-name: "gtk_recent_info_get_visited";
end;

define C-function gtk-recent-info-get-private-hint
  input parameter arg1 :: <GtkRecentInfo>;
  result res :: <gboolean>;
  c-name: "gtk_recent_info_get_private_hint";
end;

define C-function gtk-recent-info-get-application-info
  input parameter arg1 :: <GtkRecentInfo>;
  input parameter arg2 :: <gchar*>;
  input parameter arg3 :: <gchar**>;
  input parameter arg4 :: <guint*>;
  input parameter arg5 :: <time-t*>;
  result res :: <gboolean>;
  c-name: "gtk_recent_info_get_application_info";
end;

define C-function gtk-recent-info-get-applications
  input parameter arg1 :: <GtkRecentInfo>;
  input parameter arg2 :: <gsize*>;
  result res :: <gchar**>;
  c-name: "gtk_recent_info_get_applications";
end;

define C-function gtk-recent-info-last-application
  input parameter arg1 :: <GtkRecentInfo>;
  result res :: <gchar*>;
  c-name: "gtk_recent_info_last_application";
end;

define C-function gtk-recent-info-has-application
  input parameter arg1 :: <GtkRecentInfo>;
  input parameter arg2 :: <gchar*>;
  result res :: <gboolean>;
  c-name: "gtk_recent_info_has_application";
end;

define C-function gtk-recent-info-get-groups
  input parameter arg1 :: <GtkRecentInfo>;
  input parameter arg2 :: <gsize*>;
  result res :: <gchar**>;
  c-name: "gtk_recent_info_get_groups";
end;

define C-function gtk-recent-info-has-group
  input parameter arg1 :: <GtkRecentInfo>;
  input parameter arg2 :: <gchar*>;
  result res :: <gboolean>;
  c-name: "gtk_recent_info_has_group";
end;

define C-function gtk-recent-info-get-icon
  input parameter arg1 :: <GtkRecentInfo>;
  input parameter arg2 :: <gint>;
  result res :: <GdkPixbuf>;
  c-name: "gtk_recent_info_get_icon";
end;

define C-function gtk-recent-info-get-short-name
  input parameter arg1 :: <GtkRecentInfo>;
  result res :: <gchar*>;
  c-name: "gtk_recent_info_get_short_name";
end;

define C-function gtk-recent-info-get-uri-display
  input parameter arg1 :: <GtkRecentInfo>;
  result res :: <gchar*>;
  c-name: "gtk_recent_info_get_uri_display";
end;

define C-function gtk-recent-info-get-age
  input parameter arg1 :: <GtkRecentInfo>;
  result res :: <gint>;
  c-name: "gtk_recent_info_get_age";
end;

define C-function gtk-recent-info-is-local
  input parameter arg1 :: <GtkRecentInfo>;
  result res :: <gboolean>;
  c-name: "gtk_recent_info_is_local";
end;

define C-function gtk-recent-info-exists
  input parameter arg1 :: <GtkRecentInfo>;
  result res :: <gboolean>;
  c-name: "gtk_recent_info_exists";
end;

define C-function gtk-recent-info-match
  input parameter arg1 :: <GtkRecentInfo>;
  input parameter arg2 :: <GtkRecentInfo>;
  result res :: <gboolean>;
  c-name: "gtk_recent_info_match";
end;

define C-function _gtk-recent-manager-sync
  c-name: "_gtk_recent_manager_sync";
end;

define C-struct <_GtkRecentFilter>
end;

define C-pointer-type <GtkRecentFilter> => <_GtkRecentFilter>;

define constant <GtkRecentFilterFlags> = <C-int>;
define constant $GTK-RECENT-FILTER-URI = 1;
define constant $GTK-RECENT-FILTER-DISPLAY-NAME = 2;
define constant $GTK-RECENT-FILTER-MIME-TYPE = 4;
define constant $GTK-RECENT-FILTER-APPLICATION = 8;
define constant $GTK-RECENT-FILTER-GROUP = 16;
define constant $GTK-RECENT-FILTER-AGE = 32;

define C-struct <_GtkRecentFilterInfo>
  slot GtkRecentFilterInfo-contains :: <GtkRecentFilterFlags>;
  slot GtkRecentFilterInfo-uri :: <gchar*>;
  slot GtkRecentFilterInfo-display-name :: <gchar*>;
  slot GtkRecentFilterInfo-mime-type :: <gchar*>;
  slot GtkRecentFilterInfo-applications :: <gchar**>;
  slot GtkRecentFilterInfo-groups :: <gchar**>;
  slot GtkRecentFilterInfo-age :: <C-signed-int>;
end;

define C-pointer-type <GtkRecentFilterInfo> => <_GtkRecentFilterInfo>;

define constant <anonymous-7851> = <C-function-pointer>;
define constant <GtkRecentFilterFunc> = <anonymous-7851>;

define C-function gtk-recent-filter-get-type
  result res :: <GType>;
  c-name: "gtk_recent_filter_get_type";
end;

define C-function gtk-recent-filter-new
  result res :: <GtkRecentFilter>;
  c-name: "gtk_recent_filter_new";
end;

define C-function gtk-recent-filter-set-name
  input parameter arg1 :: <GtkRecentFilter>;
  input parameter arg2 :: <gchar*>;
  c-name: "gtk_recent_filter_set_name";
end;

define C-function gtk-recent-filter-get-name
  input parameter arg1 :: <GtkRecentFilter>;
  result res :: <gchar*>;
  c-name: "gtk_recent_filter_get_name";
end;

define C-function gtk-recent-filter-add-mime-type
  input parameter arg1 :: <GtkRecentFilter>;
  input parameter arg2 :: <gchar*>;
  c-name: "gtk_recent_filter_add_mime_type";
end;

define C-function gtk-recent-filter-add-pattern
  input parameter arg1 :: <GtkRecentFilter>;
  input parameter arg2 :: <gchar*>;
  c-name: "gtk_recent_filter_add_pattern";
end;

define C-function gtk-recent-filter-add-pixbuf-formats
  input parameter arg1 :: <GtkRecentFilter>;
  c-name: "gtk_recent_filter_add_pixbuf_formats";
end;

define C-function gtk-recent-filter-add-application
  input parameter arg1 :: <GtkRecentFilter>;
  input parameter arg2 :: <gchar*>;
  c-name: "gtk_recent_filter_add_application";
end;

define C-function gtk-recent-filter-add-group
  input parameter arg1 :: <GtkRecentFilter>;
  input parameter arg2 :: <gchar*>;
  c-name: "gtk_recent_filter_add_group";
end;

define C-function gtk-recent-filter-add-age
  input parameter arg1 :: <GtkRecentFilter>;
  input parameter arg2 :: <gint>;
  c-name: "gtk_recent_filter_add_age";
end;

define C-function gtk-recent-filter-add-custom
  input parameter arg1 :: <GtkRecentFilter>;
  input parameter arg2 :: <GtkRecentFilterFlags>;
  input parameter arg3 :: <GtkRecentFilterFunc>;
  input parameter arg4 :: <gpointer>;
  input parameter arg5 :: <GDestroyNotify>;
  c-name: "gtk_recent_filter_add_custom";
end;

define C-function gtk-recent-filter-get-needed
  input parameter arg1 :: <GtkRecentFilter>;
  result res :: <GtkRecentFilterFlags>;
  c-name: "gtk_recent_filter_get_needed";
end;

define C-function gtk-recent-filter-filter
  input parameter arg1 :: <GtkRecentFilter>;
  input parameter arg2 :: <GtkRecentFilterInfo>;
  result res :: <gboolean>;
  c-name: "gtk_recent_filter_filter";
end;

define C-struct <_GtkRecentChooserWidgetPrivate>
end;

define C-pointer-type <GtkRecentChooserWidgetPrivate> => <_GtkRecentChooserWidgetPrivate>;

define C-struct <_GtkRecentChooserWidget>
  slot GtkRecentChooserWidget-parent-instance :: <_GtkVBox>;
  slot GtkRecentChooserWidget-priv :: <GtkRecentChooserWidgetPrivate>;
end;

define C-pointer-type <GtkRecentChooserWidget> => <_GtkRecentChooserWidget>;

define C-struct <_GtkRecentChooserWidgetClass>
  slot GtkRecentChooserWidgetClass-parent-class :: <_GtkVBoxClass>;
end;

define C-pointer-type <GtkRecentChooserWidgetClass> => <_GtkRecentChooserWidgetClass>;

define C-function gtk-recent-chooser-widget-get-type
  result res :: <GType>;
  c-name: "gtk_recent_chooser_widget_get_type";
end;

define C-function gtk-recent-chooser-widget-new
  result res :: <GtkWidget>;
  c-name: "gtk_recent_chooser_widget_new";
end;

define C-function gtk-recent-chooser-widget-new-for-manager
  input parameter arg1 :: <GtkRecentManager>;
  result res :: <GtkWidget>;
  c-name: "gtk_recent_chooser_widget_new_for_manager";
end;

define constant <GtkRecentSortType> = <C-int>;
define constant $GTK-RECENT-SORT-NONE = 0;
define constant $GTK-RECENT-SORT-MRU = 1;
define constant $GTK-RECENT-SORT-LRU = 2;
define constant $GTK-RECENT-SORT-CUSTOM = 3;

define constant <anonymous-7866> = <C-function-pointer>;
define constant <GtkRecentSortFunc> = <anonymous-7866>;

define C-struct <_GtkRecentChooser>
end;

define C-pointer-type <GtkRecentChooser> => <_GtkRecentChooser>;

define constant <anonymous-7869> = <C-function-pointer>;
define constant <anonymous-7870> = <C-function-pointer>;
define constant <anonymous-7871> = <C-function-pointer>;
define constant <anonymous-7872> = <C-function-pointer>;
define constant <anonymous-7873> = <C-function-pointer>;
define constant <anonymous-7874> = <C-function-pointer>;
define constant <anonymous-7875> = <C-function-pointer>;
define constant <anonymous-7876> = <C-function-pointer>;
define constant <anonymous-7877> = <C-function-pointer>;
define constant <anonymous-7878> = <C-function-pointer>;
define constant <anonymous-7879> = <C-function-pointer>;
define constant <anonymous-7880> = <C-function-pointer>;
define constant <anonymous-7881> = <C-function-pointer>;
define constant <anonymous-7882> = <C-function-pointer>;
define C-struct <_GtkRecentChooserIface>
  slot GtkRecentChooserIface-base-iface :: <_GTypeInterface>;
  slot GtkRecentChooserIface-set-current-uri :: <anonymous-7869>;
  slot GtkRecentChooserIface-get-current-uri :: <anonymous-7870>;
  slot GtkRecentChooserIface-select-uri :: <anonymous-7871>;
  slot GtkRecentChooserIface-unselect-uri :: <anonymous-7872>;
  slot GtkRecentChooserIface-select-all :: <anonymous-7873>;
  slot GtkRecentChooserIface-unselect-all :: <anonymous-7874>;
  slot GtkRecentChooserIface-get-items :: <anonymous-7875>;
  slot GtkRecentChooserIface-get-recent-manager :: <anonymous-7876>;
  slot GtkRecentChooserIface-add-filter :: <anonymous-7877>;
  slot GtkRecentChooserIface-remove-filter :: <anonymous-7878>;
  slot GtkRecentChooserIface-list-filters :: <anonymous-7879>;
  slot GtkRecentChooserIface-set-sort-func :: <anonymous-7880>;
  slot GtkRecentChooserIface-item-activated :: <anonymous-7881>;
  slot GtkRecentChooserIface-selection-changed :: <anonymous-7882>;
end;

define C-pointer-type <GtkRecentChooserIface> => <_GtkRecentChooserIface>;

define constant <GtkRecentChooserError> = <C-int>;
define constant $GTK-RECENT-CHOOSER-ERROR-NOT-FOUND = 0;
define constant $GTK-RECENT-CHOOSER-ERROR-INVALID-URI = 1;

define C-function gtk-recent-chooser-error-quark
  result res :: <GQuark>;
  c-name: "gtk_recent_chooser_error_quark";
end;

define C-function gtk-recent-chooser-get-type
  result res :: <GType>;
  c-name: "gtk_recent_chooser_get_type";
end;

define C-function gtk-recent-chooser-set-show-private
  input parameter arg1 :: <GtkRecentChooser>;
  input parameter arg2 :: <gboolean>;
  c-name: "gtk_recent_chooser_set_show_private";
end;

define C-function gtk-recent-chooser-get-show-private
  input parameter arg1 :: <GtkRecentChooser>;
  result res :: <gboolean>;
  c-name: "gtk_recent_chooser_get_show_private";
end;

define C-function gtk-recent-chooser-set-show-not-found
  input parameter arg1 :: <GtkRecentChooser>;
  input parameter arg2 :: <gboolean>;
  c-name: "gtk_recent_chooser_set_show_not_found";
end;

define C-function gtk-recent-chooser-get-show-not-found
  input parameter arg1 :: <GtkRecentChooser>;
  result res :: <gboolean>;
  c-name: "gtk_recent_chooser_get_show_not_found";
end;

define C-function gtk-recent-chooser-set-select-multiple
  input parameter arg1 :: <GtkRecentChooser>;
  input parameter arg2 :: <gboolean>;
  c-name: "gtk_recent_chooser_set_select_multiple";
end;

define C-function gtk-recent-chooser-get-select-multiple
  input parameter arg1 :: <GtkRecentChooser>;
  result res :: <gboolean>;
  c-name: "gtk_recent_chooser_get_select_multiple";
end;

define C-function gtk-recent-chooser-set-limit
  input parameter arg1 :: <GtkRecentChooser>;
  input parameter arg2 :: <gint>;
  c-name: "gtk_recent_chooser_set_limit";
end;

define C-function gtk-recent-chooser-get-limit
  input parameter arg1 :: <GtkRecentChooser>;
  result res :: <gint>;
  c-name: "gtk_recent_chooser_get_limit";
end;

define C-function gtk-recent-chooser-set-local-only
  input parameter arg1 :: <GtkRecentChooser>;
  input parameter arg2 :: <gboolean>;
  c-name: "gtk_recent_chooser_set_local_only";
end;

define C-function gtk-recent-chooser-get-local-only
  input parameter arg1 :: <GtkRecentChooser>;
  result res :: <gboolean>;
  c-name: "gtk_recent_chooser_get_local_only";
end;

define C-function gtk-recent-chooser-set-show-tips
  input parameter arg1 :: <GtkRecentChooser>;
  input parameter arg2 :: <gboolean>;
  c-name: "gtk_recent_chooser_set_show_tips";
end;

define C-function gtk-recent-chooser-get-show-tips
  input parameter arg1 :: <GtkRecentChooser>;
  result res :: <gboolean>;
  c-name: "gtk_recent_chooser_get_show_tips";
end;

define C-function gtk-recent-chooser-set-show-numbers
  input parameter arg1 :: <GtkRecentChooser>;
  input parameter arg2 :: <gboolean>;
  c-name: "gtk_recent_chooser_set_show_numbers";
end;

define C-function gtk-recent-chooser-get-show-numbers
  input parameter arg1 :: <GtkRecentChooser>;
  result res :: <gboolean>;
  c-name: "gtk_recent_chooser_get_show_numbers";
end;

define C-function gtk-recent-chooser-set-show-icons
  input parameter arg1 :: <GtkRecentChooser>;
  input parameter arg2 :: <gboolean>;
  c-name: "gtk_recent_chooser_set_show_icons";
end;

define C-function gtk-recent-chooser-get-show-icons
  input parameter arg1 :: <GtkRecentChooser>;
  result res :: <gboolean>;
  c-name: "gtk_recent_chooser_get_show_icons";
end;

define C-function gtk-recent-chooser-set-sort-type
  input parameter arg1 :: <GtkRecentChooser>;
  input parameter arg2 :: <GtkRecentSortType>;
  c-name: "gtk_recent_chooser_set_sort_type";
end;

define C-function gtk-recent-chooser-get-sort-type
  input parameter arg1 :: <GtkRecentChooser>;
  result res :: <GtkRecentSortType>;
  c-name: "gtk_recent_chooser_get_sort_type";
end;

define C-function gtk-recent-chooser-set-sort-func
  input parameter arg1 :: <GtkRecentChooser>;
  input parameter arg2 :: <GtkRecentSortFunc>;
  input parameter arg3 :: <gpointer>;
  input parameter arg4 :: <GDestroyNotify>;
  c-name: "gtk_recent_chooser_set_sort_func";
end;

define C-function gtk-recent-chooser-set-current-uri
  input parameter arg1 :: <GtkRecentChooser>;
  input parameter arg2 :: <gchar*>;
  input parameter arg3 :: <GError*>;
  result res :: <gboolean>;
  c-name: "gtk_recent_chooser_set_current_uri";
end;

define C-function gtk-recent-chooser-get-current-uri
  input parameter arg1 :: <GtkRecentChooser>;
  result res :: <gchar*>;
  c-name: "gtk_recent_chooser_get_current_uri";
end;

define C-function gtk-recent-chooser-get-current-item
  input parameter arg1 :: <GtkRecentChooser>;
  result res :: <GtkRecentInfo>;
  c-name: "gtk_recent_chooser_get_current_item";
end;

define C-function gtk-recent-chooser-select-uri
  input parameter arg1 :: <GtkRecentChooser>;
  input parameter arg2 :: <gchar*>;
  input parameter arg3 :: <GError*>;
  result res :: <gboolean>;
  c-name: "gtk_recent_chooser_select_uri";
end;

define C-function gtk-recent-chooser-unselect-uri
  input parameter arg1 :: <GtkRecentChooser>;
  input parameter arg2 :: <gchar*>;
  c-name: "gtk_recent_chooser_unselect_uri";
end;

define C-function gtk-recent-chooser-select-all
  input parameter arg1 :: <GtkRecentChooser>;
  c-name: "gtk_recent_chooser_select_all";
end;

define C-function gtk-recent-chooser-unselect-all
  input parameter arg1 :: <GtkRecentChooser>;
  c-name: "gtk_recent_chooser_unselect_all";
end;

define C-function gtk-recent-chooser-get-items
  input parameter arg1 :: <GtkRecentChooser>;
  result res :: <GList>;
  c-name: "gtk_recent_chooser_get_items";
end;

define C-function gtk-recent-chooser-get-uris
  input parameter arg1 :: <GtkRecentChooser>;
  input parameter arg2 :: <gsize*>;
  result res :: <gchar**>;
  c-name: "gtk_recent_chooser_get_uris";
end;

define C-function gtk-recent-chooser-add-filter
  input parameter arg1 :: <GtkRecentChooser>;
  input parameter arg2 :: <GtkRecentFilter>;
  c-name: "gtk_recent_chooser_add_filter";
end;

define C-function gtk-recent-chooser-remove-filter
  input parameter arg1 :: <GtkRecentChooser>;
  input parameter arg2 :: <GtkRecentFilter>;
  c-name: "gtk_recent_chooser_remove_filter";
end;

define C-function gtk-recent-chooser-list-filters
  input parameter arg1 :: <GtkRecentChooser>;
  result res :: <GSList>;
  c-name: "gtk_recent_chooser_list_filters";
end;

define C-function gtk-recent-chooser-set-filter
  input parameter arg1 :: <GtkRecentChooser>;
  input parameter arg2 :: <GtkRecentFilter>;
  c-name: "gtk_recent_chooser_set_filter";
end;

define C-function gtk-recent-chooser-get-filter
  input parameter arg1 :: <GtkRecentChooser>;
  result res :: <GtkRecentFilter>;
  c-name: "gtk_recent_chooser_get_filter";
end;

define C-struct <_GtkRecentChooserMenuPrivate>
end;

define C-pointer-type <GtkRecentChooserMenuPrivate> => <_GtkRecentChooserMenuPrivate>;

define C-struct <_GtkRecentChooserMenu>
  slot GtkRecentChooserMenu-parent-instance :: <_GtkMenu>;
  slot GtkRecentChooserMenu-priv :: <GtkRecentChooserMenuPrivate>;
end;

define C-pointer-type <GtkRecentChooserMenu> => <_GtkRecentChooserMenu>;

define constant <anonymous-7920> = <C-function-pointer>;
define constant <anonymous-7921> = <C-function-pointer>;
define constant <anonymous-7922> = <C-function-pointer>;
define constant <anonymous-7923> = <C-function-pointer>;
define C-struct <_GtkRecentChooserMenuClass>
  slot GtkRecentChooserMenuClass-parent-class :: <_GtkMenuClass>;
  slot GtkRecentChooserMenuClass-gtk-recent1 :: <anonymous-7920>;
  slot GtkRecentChooserMenuClass-gtk-recent2 :: <anonymous-7921>;
  slot GtkRecentChooserMenuClass-gtk-recent3 :: <anonymous-7922>;
  slot GtkRecentChooserMenuClass-gtk-recent4 :: <anonymous-7923>;
end;

define C-pointer-type <GtkRecentChooserMenuClass> => <_GtkRecentChooserMenuClass>;

define C-function gtk-recent-chooser-menu-get-type
  result res :: <GType>;
  c-name: "gtk_recent_chooser_menu_get_type";
end;

define C-function gtk-recent-chooser-menu-new
  result res :: <GtkWidget>;
  c-name: "gtk_recent_chooser_menu_new";
end;

define C-function gtk-recent-chooser-menu-new-for-manager
  input parameter arg1 :: <GtkRecentManager>;
  result res :: <GtkWidget>;
  c-name: "gtk_recent_chooser_menu_new_for_manager";
end;

define C-function gtk-recent-chooser-menu-get-show-numbers
  input parameter arg1 :: <GtkRecentChooserMenu>;
  result res :: <gboolean>;
  c-name: "gtk_recent_chooser_menu_get_show_numbers";
end;

define C-function gtk-recent-chooser-menu-set-show-numbers
  input parameter arg1 :: <GtkRecentChooserMenu>;
  input parameter arg2 :: <gboolean>;
  c-name: "gtk_recent_chooser_menu_set_show_numbers";
end;

define C-subtype <_GtkDialog> (<_GtkWindow>, <_AtkImplementorIface>) end;
define constant <GtkDialog> = <_GtkDialog>;

define C-struct <_GtkRecentChooserDialogPrivate>
end;

define C-pointer-type <GtkRecentChooserDialogPrivate> => <_GtkRecentChooserDialogPrivate>;

define C-struct <_GtkRecentChooserDialog>
  slot GtkRecentChooserDialog-parent-instance :: <_GtkDialog>;
  slot GtkRecentChooserDialog-priv :: <GtkRecentChooserDialogPrivate>;
end;

define C-pointer-type <GtkRecentChooserDialog> => <_GtkRecentChooserDialog>;

define constant <anonymous-4231> = <C-function-pointer>;
define constant <anonymous-4232> = <C-function-pointer>;
define constant <anonymous-4233> = <C-function-pointer>;
define constant <anonymous-4234> = <C-function-pointer>;
define constant <anonymous-4235> = <C-function-pointer>;
define constant <anonymous-4236> = <C-function-pointer>;
define C-struct <_GtkDialogClass>
  slot GtkDialogClass-parent-class :: <_GtkWindowClass>;
  slot GtkDialogClass-response :: <anonymous-4231>;
  slot GtkDialogClass-close :: <anonymous-4232>;
  slot GtkDialogClass-_gtk-reserved1 :: <anonymous-4233>;
  slot GtkDialogClass-_gtk-reserved2 :: <anonymous-4234>;
  slot GtkDialogClass-_gtk-reserved3 :: <anonymous-4235>;
  slot GtkDialogClass-_gtk-reserved4 :: <anonymous-4236>;
end;

define C-pointer-type <GtkDialogClass> => <_GtkDialogClass>;

define C-struct <_GtkRecentChooserDialogClass>
  slot GtkRecentChooserDialogClass-parent-class :: <_GtkDialogClass>;
end;

define C-pointer-type <GtkRecentChooserDialogClass> => <_GtkRecentChooserDialogClass>;

define C-function gtk-recent-chooser-dialog-get-type
  result res :: <GType>;
  c-name: "gtk_recent_chooser_dialog_get_type";
end;

define C-function gtk-recent-chooser-dialog-new
  input parameter arg1 :: <gchar*>;
  input parameter arg2 :: <GtkWindow>;
  input parameter arg3 :: <gchar*>;
  result res :: <GtkWidget>;
  c-name: "gtk_recent_chooser_dialog_new";
end;

define C-function gtk-recent-chooser-dialog-new-for-manager
  input parameter arg1 :: <gchar*>;
  input parameter arg2 :: <GtkWindow>;
  input parameter arg3 :: <GtkRecentManager>;
  input parameter arg4 :: <gchar*>;
  result res :: <GtkWidget>;
  c-name: "gtk_recent_chooser_dialog_new_for_manager";
end;

define constant <GtkDialogFlags> = <C-int>;
define constant $GTK-DIALOG-MODAL = 1;
define constant $GTK-DIALOG-DESTROY-WITH-PARENT = 2;
define constant $GTK-DIALOG-NO-SEPARATOR = 4;

define constant <GtkResponseType> = <C-int>;
define constant $GTK-RESPONSE-NONE = -1;
define constant $GTK-RESPONSE-REJECT = -2;
define constant $GTK-RESPONSE-ACCEPT = -3;
define constant $GTK-RESPONSE-DELETE-EVENT = -4;
define constant $GTK-RESPONSE-OK = -5;
define constant $GTK-RESPONSE-CANCEL = -6;
define constant $GTK-RESPONSE-CLOSE = -7;
define constant $GTK-RESPONSE-YES = -8;
define constant $GTK-RESPONSE-NO = -9;
define constant $GTK-RESPONSE-APPLY = -10;
define constant $GTK-RESPONSE-HELP = -11;

define C-function gtk-dialog-get-type
  result res :: <GType>;
  c-name: "gtk_dialog_get_type";
end;

define C-function gtk-dialog-new
  result res :: <GtkWidget>;
  c-name: "gtk_dialog_new";
end;

define C-function gtk-dialog-new-with-buttons
  input parameter arg1 :: <gchar*>;
  input parameter arg2 :: <GtkWindow>;
  input parameter arg3 :: <GtkDialogFlags>;
  input parameter arg4 :: <gchar*>;
  result res :: <GtkWidget>;
  c-name: "gtk_dialog_new_with_buttons";
end;

define C-function gtk-dialog-add-action-widget
  input parameter arg1 :: <GtkDialog>;
  input parameter arg2 :: <GtkWidget>;
  input parameter arg3 :: <gint>;
  c-name: "gtk_dialog_add_action_widget";
end;

define C-function gtk-dialog-add-button
  input parameter arg1 :: <GtkDialog>;
  input parameter arg2 :: <gchar*>;
  input parameter arg3 :: <gint>;
  result res :: <GtkWidget>;
  c-name: "gtk_dialog_add_button";
end;

define C-function gtk-dialog-add-buttons
  input parameter arg1 :: <GtkDialog>;
  input parameter arg2 :: <gchar*>;
  c-name: "gtk_dialog_add_buttons";
end;

define C-function gtk-dialog-set-response-sensitive
  input parameter arg1 :: <GtkDialog>;
  input parameter arg2 :: <gint>;
  input parameter arg3 :: <gboolean>;
  c-name: "gtk_dialog_set_response_sensitive";
end;

define C-function gtk-dialog-set-default-response
  input parameter arg1 :: <GtkDialog>;
  input parameter arg2 :: <gint>;
  c-name: "gtk_dialog_set_default_response";
end;

define C-function gtk-dialog-get-response-for-widget
  input parameter arg1 :: <GtkDialog>;
  input parameter arg2 :: <GtkWidget>;
  result res :: <gint>;
  c-name: "gtk_dialog_get_response_for_widget";
end;

define C-function gtk-dialog-set-has-separator
  input parameter arg1 :: <GtkDialog>;
  input parameter arg2 :: <gboolean>;
  c-name: "gtk_dialog_set_has_separator";
end;

define C-function gtk-dialog-get-has-separator
  input parameter arg1 :: <GtkDialog>;
  result res :: <gboolean>;
  c-name: "gtk_dialog_get_has_separator";
end;

define C-function gtk-alternative-dialog-button-order
  input parameter arg1 :: <GdkScreen>;
  result res :: <gboolean>;
  c-name: "gtk_alternative_dialog_button_order";
end;

define C-function gtk-dialog-set-alternative-button-order
  input parameter arg1 :: <GtkDialog>;
  input parameter arg2 :: <gint>;
  c-name: "gtk_dialog_set_alternative_button_order";
end;

define C-function gtk-dialog-set-alternative-button-order-from-array
  input parameter arg1 :: <GtkDialog>;
  input parameter arg2 :: <gint>;
  input parameter arg3 :: <gint*>;
  c-name: "gtk_dialog_set_alternative_button_order_from_array";
end;

define C-function gtk-dialog-response
  input parameter arg1 :: <GtkDialog>;
  input parameter arg2 :: <gint>;
  c-name: "gtk_dialog_response";
end;

define C-function gtk-dialog-run
  input parameter arg1 :: <GtkDialog>;
  result res :: <gint>;
  c-name: "gtk_dialog_run";
end;

define C-struct <_GtkRecentActionPrivate>
end;

define C-pointer-type <GtkRecentActionPrivate> => <_GtkRecentActionPrivate>;

define C-struct <_GtkRecentAction>
  slot GtkRecentAction-parent-instance :: <_GtkAction>;
  slot GtkRecentAction-priv :: <GtkRecentActionPrivate>;
end;

define C-pointer-type <GtkRecentAction> => <_GtkRecentAction>;

define C-struct <_GtkRecentActionClass>
  slot GtkRecentActionClass-parent-class :: <_GtkActionClass>;
end;

define C-pointer-type <GtkRecentActionClass> => <_GtkRecentActionClass>;

define C-function gtk-recent-action-get-type
  result res :: <GType>;
  c-name: "gtk_recent_action_get_type";
end;

define C-function gtk-recent-action-new
  input parameter arg1 :: <gchar*>;
  input parameter arg2 :: <gchar*>;
  input parameter arg3 :: <gchar*>;
  input parameter arg4 :: <gchar*>;
  result res :: <GtkAction>;
  c-name: "gtk_recent_action_new";
end;

define C-function gtk-recent-action-new-for-manager
  input parameter arg1 :: <gchar*>;
  input parameter arg2 :: <gchar*>;
  input parameter arg3 :: <gchar*>;
  input parameter arg4 :: <gchar*>;
  input parameter arg5 :: <GtkRecentManager>;
  result res :: <GtkAction>;
  c-name: "gtk_recent_action_new_for_manager";
end;

define C-function gtk-recent-action-get-show-numbers
  input parameter arg1 :: <GtkRecentAction>;
  result res :: <gboolean>;
  c-name: "gtk_recent_action_get_show_numbers";
end;

define C-function gtk-recent-action-set-show-numbers
  input parameter arg1 :: <GtkRecentAction>;
  input parameter arg2 :: <gboolean>;
  c-name: "gtk_recent_action_set_show_numbers";
end;

define C-subtype <_GtkRadioToolButton> (<_GtkToggleToolButton>, <_AtkImplementorIface>) end;
define constant <GtkRadioToolButton> = <_GtkRadioToolButton>;

define constant <anonymous-7787> = <C-function-pointer>;
define constant <anonymous-7788> = <C-function-pointer>;
define constant <anonymous-7789> = <C-function-pointer>;
define constant <anonymous-7790> = <C-function-pointer>;
define C-struct <_GtkRadioToolButtonClass>
  slot GtkRadioToolButtonClass-parent-class :: <_GtkToggleToolButtonClass>;
  slot GtkRadioToolButtonClass-_gtk-reserved1 :: <anonymous-7787>;
  slot GtkRadioToolButtonClass-_gtk-reserved2 :: <anonymous-7788>;
  slot GtkRadioToolButtonClass-_gtk-reserved3 :: <anonymous-7789>;
  slot GtkRadioToolButtonClass-_gtk-reserved4 :: <anonymous-7790>;
end;

define C-pointer-type <GtkRadioToolButtonClass> => <_GtkRadioToolButtonClass>;

define C-function gtk-radio-tool-button-get-type
  result res :: <GType>;
  c-name: "gtk_radio_tool_button_get_type";
end;

define C-function gtk-radio-tool-button-new
  input parameter arg1 :: <GSList>;
  result res :: <GtkToolItem>;
  c-name: "gtk_radio_tool_button_new";
end;

define C-function gtk-radio-tool-button-new-from-stock
  input parameter arg1 :: <GSList>;
  input parameter arg2 :: <gchar*>;
  result res :: <GtkToolItem>;
  c-name: "gtk_radio_tool_button_new_from_stock";
end;

define C-function gtk-radio-tool-button-new-from-widget
  input parameter arg1 :: <GtkRadioToolButton>;
  result res :: <GtkToolItem>;
  c-name: "gtk_radio_tool_button_new_from_widget";
end;

define C-function gtk-radio-tool-button-new-with-stock-from-widget
  input parameter arg1 :: <GtkRadioToolButton>;
  input parameter arg2 :: <gchar*>;
  result res :: <GtkToolItem>;
  c-name: "gtk_radio_tool_button_new_with_stock_from_widget";
end;

define C-function gtk-radio-tool-button-get-group
  input parameter arg1 :: <GtkRadioToolButton>;
  result res :: <GSList>;
  c-name: "gtk_radio_tool_button_get_group";
end;

define C-function gtk-radio-tool-button-set-group
  input parameter arg1 :: <GtkRadioToolButton>;
  input parameter arg2 :: <GSList>;
  c-name: "gtk_radio_tool_button_set_group";
end;

define C-subtype <_GtkCheckMenuItem> (<_GtkMenuItem>, <_AtkImplementorIface>) end;
define constant <GtkCheckMenuItem> = <_GtkCheckMenuItem>;

define C-subtype <_GtkRadioMenuItem> (<_GtkCheckMenuItem>, <_AtkImplementorIface>) end;
define constant <GtkRadioMenuItem> = <_GtkRadioMenuItem>;

define constant <anonymous-5587> = <C-function-pointer>;
define constant <anonymous-5588> = <C-function-pointer>;
define constant <anonymous-5589> = <C-function-pointer>;
define constant <anonymous-5590> = <C-function-pointer>;
define constant <anonymous-5591> = <C-function-pointer>;
define constant <anonymous-5592> = <C-function-pointer>;
define C-struct <_GtkCheckMenuItemClass>
  slot GtkCheckMenuItemClass-parent-class :: <_GtkMenuItemClass>;
  slot GtkCheckMenuItemClass-toggled :: <anonymous-5587>;
  slot GtkCheckMenuItemClass-draw-indicator :: <anonymous-5588>;
  slot GtkCheckMenuItemClass-_gtk-reserved1 :: <anonymous-5589>;
  slot GtkCheckMenuItemClass-_gtk-reserved2 :: <anonymous-5590>;
  slot GtkCheckMenuItemClass-_gtk-reserved3 :: <anonymous-5591>;
  slot GtkCheckMenuItemClass-_gtk-reserved4 :: <anonymous-5592>;
end;

define C-pointer-type <GtkCheckMenuItemClass> => <_GtkCheckMenuItemClass>;

define constant <anonymous-7764> = <C-function-pointer>;
define constant <anonymous-7765> = <C-function-pointer>;
define constant <anonymous-7766> = <C-function-pointer>;
define constant <anonymous-7767> = <C-function-pointer>;
define C-struct <_GtkRadioMenuItemClass>
  slot GtkRadioMenuItemClass-parent-class :: <_GtkCheckMenuItemClass>;
  slot GtkRadioMenuItemClass-group-changed :: <anonymous-7764>;
  slot GtkRadioMenuItemClass-_gtk-reserved2 :: <anonymous-7765>;
  slot GtkRadioMenuItemClass-_gtk-reserved3 :: <anonymous-7766>;
  slot GtkRadioMenuItemClass-_gtk-reserved4 :: <anonymous-7767>;
end;

define C-pointer-type <GtkRadioMenuItemClass> => <_GtkRadioMenuItemClass>;

define C-function gtk-radio-menu-item-get-type
  result res :: <GType>;
  c-name: "gtk_radio_menu_item_get_type";
end;

define C-function gtk-radio-menu-item-new
  input parameter arg1 :: <GSList>;
  result res :: <GtkWidget>;
  c-name: "gtk_radio_menu_item_new";
end;

define C-function gtk-radio-menu-item-new-with-label
  input parameter arg1 :: <GSList>;
  input parameter arg2 :: <gchar*>;
  result res :: <GtkWidget>;
  c-name: "gtk_radio_menu_item_new_with_label";
end;

define C-function gtk-radio-menu-item-new-with-mnemonic
  input parameter arg1 :: <GSList>;
  input parameter arg2 :: <gchar*>;
  result res :: <GtkWidget>;
  c-name: "gtk_radio_menu_item_new_with_mnemonic";
end;

define C-function gtk-radio-menu-item-new-from-widget
  input parameter arg1 :: <GtkRadioMenuItem>;
  result res :: <GtkWidget>;
  c-name: "gtk_radio_menu_item_new_from_widget";
end;

define C-function gtk-radio-menu-item-new-with-mnemonic-from-widget
  input parameter arg1 :: <GtkRadioMenuItem>;
  input parameter arg2 :: <gchar*>;
  result res :: <GtkWidget>;
  c-name: "gtk_radio_menu_item_new_with_mnemonic_from_widget";
end;

define C-function gtk-radio-menu-item-new-with-label-from-widget
  input parameter arg1 :: <GtkRadioMenuItem>;
  input parameter arg2 :: <gchar*>;
  result res :: <GtkWidget>;
  c-name: "gtk_radio_menu_item_new_with_label_from_widget";
end;

define C-function gtk-radio-menu-item-get-group
  input parameter arg1 :: <GtkRadioMenuItem>;
  result res :: <GSList>;
  c-name: "gtk_radio_menu_item_get_group";
end;

define C-function gtk-radio-menu-item-set-group
  input parameter arg1 :: <GtkRadioMenuItem>;
  input parameter arg2 :: <GSList>;
  c-name: "gtk_radio_menu_item_set_group";
end;

define constant gtk-radio-menu-item-group = gtk-radio-menu-item-get-group;

define C-function gtk-check-menu-item-get-type
  result res :: <GType>;
  c-name: "gtk_check_menu_item_get_type";
end;

define C-function gtk-check-menu-item-new
  result res :: <GtkWidget>;
  c-name: "gtk_check_menu_item_new";
end;

define C-function gtk-check-menu-item-new-with-label
  input parameter arg1 :: <gchar*>;
  result res :: <GtkWidget>;
  c-name: "gtk_check_menu_item_new_with_label";
end;

define C-function gtk-check-menu-item-new-with-mnemonic
  input parameter arg1 :: <gchar*>;
  result res :: <GtkWidget>;
  c-name: "gtk_check_menu_item_new_with_mnemonic";
end;

define C-function gtk-check-menu-item-set-active
  input parameter arg1 :: <GtkCheckMenuItem>;
  input parameter arg2 :: <gboolean>;
  c-name: "gtk_check_menu_item_set_active";
end;

define C-function gtk-check-menu-item-get-active
  input parameter arg1 :: <GtkCheckMenuItem>;
  result res :: <gboolean>;
  c-name: "gtk_check_menu_item_get_active";
end;

define C-function gtk-check-menu-item-toggled
  input parameter arg1 :: <GtkCheckMenuItem>;
  c-name: "gtk_check_menu_item_toggled";
end;

define C-function gtk-check-menu-item-set-inconsistent
  input parameter arg1 :: <GtkCheckMenuItem>;
  input parameter arg2 :: <gboolean>;
  c-name: "gtk_check_menu_item_set_inconsistent";
end;

define C-function gtk-check-menu-item-get-inconsistent
  input parameter arg1 :: <GtkCheckMenuItem>;
  result res :: <gboolean>;
  c-name: "gtk_check_menu_item_get_inconsistent";
end;

define C-function gtk-check-menu-item-set-draw-as-radio
  input parameter arg1 :: <GtkCheckMenuItem>;
  input parameter arg2 :: <gboolean>;
  c-name: "gtk_check_menu_item_set_draw_as_radio";
end;

define C-function gtk-check-menu-item-get-draw-as-radio
  input parameter arg1 :: <GtkCheckMenuItem>;
  result res :: <gboolean>;
  c-name: "gtk_check_menu_item_get_draw_as_radio";
end;

define C-function gtk-check-menu-item-set-show-toggle
  input parameter arg1 :: <GtkCheckMenuItem>;
  input parameter arg2 :: <gboolean>;
  c-name: "gtk_check_menu_item_set_show_toggle";
end;

define constant gtk-check-menu-item-set-state = gtk-check-menu-item-set-active;

define C-subtype <_GtkCheckButton> (<_GtkToggleButton>, <_AtkImplementorIface>) end;
define constant <GtkCheckButton> = <_GtkCheckButton>;

define C-subtype <_GtkRadioButton> (<_GtkCheckButton>, <_AtkImplementorIface>) end;
define constant <GtkRadioButton> = <_GtkRadioButton>;

define constant <anonymous-5528> = <C-function-pointer>;
define constant <anonymous-5529> = <C-function-pointer>;
define constant <anonymous-5530> = <C-function-pointer>;
define constant <anonymous-5531> = <C-function-pointer>;
define constant <anonymous-5532> = <C-function-pointer>;
define C-struct <_GtkCheckButtonClass>
  slot GtkCheckButtonClass-parent-class :: <_GtkToggleButtonClass>;
  slot GtkCheckButtonClass-draw-indicator :: <anonymous-5528>;
  slot GtkCheckButtonClass-_gtk-reserved1 :: <anonymous-5529>;
  slot GtkCheckButtonClass-_gtk-reserved2 :: <anonymous-5530>;
  slot GtkCheckButtonClass-_gtk-reserved3 :: <anonymous-5531>;
  slot GtkCheckButtonClass-_gtk-reserved4 :: <anonymous-5532>;
end;

define C-pointer-type <GtkCheckButtonClass> => <_GtkCheckButtonClass>;

define constant <anonymous-7751> = <C-function-pointer>;
define constant <anonymous-7752> = <C-function-pointer>;
define constant <anonymous-7753> = <C-function-pointer>;
define constant <anonymous-7754> = <C-function-pointer>;
define C-struct <_GtkRadioButtonClass>
  slot GtkRadioButtonClass-parent-class :: <_GtkCheckButtonClass>;
  slot GtkRadioButtonClass-group-changed :: <anonymous-7751>;
  slot GtkRadioButtonClass-_gtk-reserved2 :: <anonymous-7752>;
  slot GtkRadioButtonClass-_gtk-reserved3 :: <anonymous-7753>;
  slot GtkRadioButtonClass-_gtk-reserved4 :: <anonymous-7754>;
end;

define C-pointer-type <GtkRadioButtonClass> => <_GtkRadioButtonClass>;

define C-function gtk-radio-button-get-type
  result res :: <GType>;
  c-name: "gtk_radio_button_get_type";
end;

define C-function gtk-radio-button-new
  input parameter arg1 :: <GSList>;
  result res :: <GtkWidget>;
  c-name: "gtk_radio_button_new";
end;

define C-function gtk-radio-button-new-from-widget
  input parameter arg1 :: <GtkRadioButton>;
  result res :: <GtkWidget>;
  c-name: "gtk_radio_button_new_from_widget";
end;

define C-function gtk-radio-button-new-with-label
  input parameter arg1 :: <GSList>;
  input parameter arg2 :: <gchar*>;
  result res :: <GtkWidget>;
  c-name: "gtk_radio_button_new_with_label";
end;

define C-function gtk-radio-button-new-with-label-from-widget
  input parameter arg1 :: <GtkRadioButton>;
  input parameter arg2 :: <gchar*>;
  result res :: <GtkWidget>;
  c-name: "gtk_radio_button_new_with_label_from_widget";
end;

define C-function gtk-radio-button-new-with-mnemonic
  input parameter arg1 :: <GSList>;
  input parameter arg2 :: <gchar*>;
  result res :: <GtkWidget>;
  c-name: "gtk_radio_button_new_with_mnemonic";
end;

define C-function gtk-radio-button-new-with-mnemonic-from-widget
  input parameter arg1 :: <GtkRadioButton>;
  input parameter arg2 :: <gchar*>;
  result res :: <GtkWidget>;
  c-name: "gtk_radio_button_new_with_mnemonic_from_widget";
end;

define C-function gtk-radio-button-get-group
  input parameter arg1 :: <GtkRadioButton>;
  result res :: <GSList>;
  c-name: "gtk_radio_button_get_group";
end;

define C-function gtk-radio-button-set-group
  input parameter arg1 :: <GtkRadioButton>;
  input parameter arg2 :: <GSList>;
  c-name: "gtk_radio_button_set_group";
end;

define constant gtk-radio-button-group = gtk-radio-button-get-group;

define C-function gtk-check-button-get-type
  result res :: <GType>;
  c-name: "gtk_check_button_get_type";
end;

define C-function gtk-check-button-new
  result res :: <GtkWidget>;
  c-name: "gtk_check_button_new";
end;

define C-function gtk-check-button-new-with-label
  input parameter arg1 :: <gchar*>;
  result res :: <GtkWidget>;
  c-name: "gtk_check_button_new_with_label";
end;

define C-function gtk-check-button-new-with-mnemonic
  input parameter arg1 :: <gchar*>;
  result res :: <GtkWidget>;
  c-name: "gtk_check_button_new_with_mnemonic";
end;

define C-struct <_GtkRadioActionPrivate>
end;

define C-pointer-type <GtkRadioActionPrivate> => <_GtkRadioActionPrivate>;

define C-subtype <_GtkRadioAction> (<_GtkToggleAction>) end;
define constant <GtkRadioAction> = <_GtkRadioAction>;

define constant <anonymous-7740> = <C-function-pointer>;
define constant <anonymous-7741> = <C-function-pointer>;
define constant <anonymous-7742> = <C-function-pointer>;
define constant <anonymous-7743> = <C-function-pointer>;
define constant <anonymous-7744> = <C-function-pointer>;
define C-struct <_GtkRadioActionClass>
  slot GtkRadioActionClass-parent-class :: <_GtkToggleActionClass>;
  slot GtkRadioActionClass-changed :: <anonymous-7740>;
  slot GtkRadioActionClass-_gtk-reserved1 :: <anonymous-7741>;
  slot GtkRadioActionClass-_gtk-reserved2 :: <anonymous-7742>;
  slot GtkRadioActionClass-_gtk-reserved3 :: <anonymous-7743>;
  slot GtkRadioActionClass-_gtk-reserved4 :: <anonymous-7744>;
end;

define C-pointer-type <GtkRadioActionClass> => <_GtkRadioActionClass>;

define C-function gtk-radio-action-get-type
  result res :: <GType>;
  c-name: "gtk_radio_action_get_type";
end;

define C-function gtk-radio-action-new
  input parameter arg1 :: <gchar*>;
  input parameter arg2 :: <gchar*>;
  input parameter arg3 :: <gchar*>;
  input parameter arg4 :: <gchar*>;
  input parameter arg5 :: <gint>;
  result res :: <GtkRadioAction>;
  c-name: "gtk_radio_action_new";
end;

define C-function gtk-radio-action-get-group
  input parameter arg1 :: <GtkRadioAction>;
  result res :: <GSList>;
  c-name: "gtk_radio_action_get_group";
end;

define C-function gtk-radio-action-set-group
  input parameter arg1 :: <GtkRadioAction>;
  input parameter arg2 :: <GSList>;
  c-name: "gtk_radio_action_set_group";
end;

define C-function gtk-radio-action-get-current-value
  input parameter arg1 :: <GtkRadioAction>;
  result res :: <gint>;
  c-name: "gtk_radio_action_get_current_value";
end;

define C-function gtk-radio-action-set-current-value
  input parameter arg1 :: <GtkRadioAction>;
  input parameter arg2 :: <gint>;
  c-name: "gtk_radio_action_set_current_value";
end;

define C-subtype <_GtkProgress> (<_GtkWidget>, <_AtkImplementorIface>) end;
define constant <GtkProgress> = <_GtkProgress>;

define constant <GtkProgressBarStyle> = <C-int>;
define constant $GTK-PROGRESS-CONTINUOUS = 0;
define constant $GTK-PROGRESS-DISCRETE = 1;

define constant <GtkProgressBarOrientation> = <C-int>;
define constant $GTK-PROGRESS-LEFT-TO-RIGHT = 0;
define constant $GTK-PROGRESS-RIGHT-TO-LEFT = 1;
define constant $GTK-PROGRESS-BOTTOM-TO-TOP = 2;
define constant $GTK-PROGRESS-TOP-TO-BOTTOM = 3;

define C-subtype <_GtkProgressBar> (<_GtkProgress>, <_AtkImplementorIface>) end;
define constant <GtkProgressBar> = <_GtkProgressBar>;

define constant <anonymous-7679> = <C-function-pointer>;
define constant <anonymous-7680> = <C-function-pointer>;
define constant <anonymous-7681> = <C-function-pointer>;
define constant <anonymous-7682> = <C-function-pointer>;
define constant <anonymous-7683> = <C-function-pointer>;
define constant <anonymous-7684> = <C-function-pointer>;
define constant <anonymous-7685> = <C-function-pointer>;
define C-struct <_GtkProgressClass>
  slot GtkProgressClass-parent-class :: <_GtkWidgetClass>;
  slot GtkProgressClass-paint :: <anonymous-7679>;
  slot GtkProgressClass-update :: <anonymous-7680>;
  slot GtkProgressClass-act-mode-enter :: <anonymous-7681>;
  slot GtkProgressClass-_gtk-reserved1 :: <anonymous-7682>;
  slot GtkProgressClass-_gtk-reserved2 :: <anonymous-7683>;
  slot GtkProgressClass-_gtk-reserved3 :: <anonymous-7684>;
  slot GtkProgressClass-_gtk-reserved4 :: <anonymous-7685>;
end;

define C-pointer-type <GtkProgressClass> => <_GtkProgressClass>;

define constant <anonymous-7705> = <C-function-pointer>;
define constant <anonymous-7706> = <C-function-pointer>;
define constant <anonymous-7707> = <C-function-pointer>;
define constant <anonymous-7708> = <C-function-pointer>;
define C-struct <_GtkProgressBarClass>
  slot GtkProgressBarClass-parent-class :: <_GtkProgressClass>;
  slot GtkProgressBarClass-_gtk-reserved1 :: <anonymous-7705>;
  slot GtkProgressBarClass-_gtk-reserved2 :: <anonymous-7706>;
  slot GtkProgressBarClass-_gtk-reserved3 :: <anonymous-7707>;
  slot GtkProgressBarClass-_gtk-reserved4 :: <anonymous-7708>;
end;

define C-pointer-type <GtkProgressBarClass> => <_GtkProgressBarClass>;

define C-function gtk-progress-bar-get-type
  result res :: <GType>;
  c-name: "gtk_progress_bar_get_type";
end;

define C-function gtk-progress-bar-new
  result res :: <GtkWidget>;
  c-name: "gtk_progress_bar_new";
end;

define C-function gtk-progress-bar-pulse
  input parameter arg1 :: <GtkProgressBar>;
  c-name: "gtk_progress_bar_pulse";
end;

define C-function gtk-progress-bar-set-text
  input parameter arg1 :: <GtkProgressBar>;
  input parameter arg2 :: <gchar*>;
  c-name: "gtk_progress_bar_set_text";
end;

define C-function gtk-progress-bar-set-fraction
  input parameter arg1 :: <GtkProgressBar>;
  input parameter arg2 :: <gdouble>;
  c-name: "gtk_progress_bar_set_fraction";
end;

define C-function gtk-progress-bar-set-pulse-step
  input parameter arg1 :: <GtkProgressBar>;
  input parameter arg2 :: <gdouble>;
  c-name: "gtk_progress_bar_set_pulse_step";
end;

define C-function gtk-progress-bar-set-orientation
  input parameter arg1 :: <GtkProgressBar>;
  input parameter arg2 :: <GtkProgressBarOrientation>;
  c-name: "gtk_progress_bar_set_orientation";
end;

define C-function gtk-progress-bar-get-text
  input parameter arg1 :: <GtkProgressBar>;
  result res :: <gchar*>;
  c-name: "gtk_progress_bar_get_text";
end;

define C-function gtk-progress-bar-get-fraction
  input parameter arg1 :: <GtkProgressBar>;
  result res :: <gdouble>;
  c-name: "gtk_progress_bar_get_fraction";
end;

define C-function gtk-progress-bar-get-pulse-step
  input parameter arg1 :: <GtkProgressBar>;
  result res :: <gdouble>;
  c-name: "gtk_progress_bar_get_pulse_step";
end;

define C-function gtk-progress-bar-get-orientation
  input parameter arg1 :: <GtkProgressBar>;
  result res :: <GtkProgressBarOrientation>;
  c-name: "gtk_progress_bar_get_orientation";
end;

define C-function gtk-progress-bar-set-ellipsize
  input parameter arg1 :: <GtkProgressBar>;
  input parameter arg2 :: <PangoEllipsizeMode>;
  c-name: "gtk_progress_bar_set_ellipsize";
end;

define C-function gtk-progress-bar-get-ellipsize
  input parameter arg1 :: <GtkProgressBar>;
  result res :: <PangoEllipsizeMode>;
  c-name: "gtk_progress_bar_get_ellipsize";
end;

define C-function gtk-progress-bar-new-with-adjustment
  input parameter arg1 :: <GtkAdjustment>;
  result res :: <GtkWidget>;
  c-name: "gtk_progress_bar_new_with_adjustment";
end;

define C-function gtk-progress-bar-set-bar-style
  input parameter arg1 :: <GtkProgressBar>;
  input parameter arg2 :: <GtkProgressBarStyle>;
  c-name: "gtk_progress_bar_set_bar_style";
end;

define C-function gtk-progress-bar-set-discrete-blocks
  input parameter arg1 :: <GtkProgressBar>;
  input parameter arg2 :: <guint>;
  c-name: "gtk_progress_bar_set_discrete_blocks";
end;

define C-function gtk-progress-bar-set-activity-step
  input parameter arg1 :: <GtkProgressBar>;
  input parameter arg2 :: <guint>;
  c-name: "gtk_progress_bar_set_activity_step";
end;

define C-function gtk-progress-bar-set-activity-blocks
  input parameter arg1 :: <GtkProgressBar>;
  input parameter arg2 :: <guint>;
  c-name: "gtk_progress_bar_set_activity_blocks";
end;

define C-function gtk-progress-bar-update
  input parameter arg1 :: <GtkProgressBar>;
  input parameter arg2 :: <gdouble>;
  c-name: "gtk_progress_bar_update";
end;

define C-function gtk-progress-get-type
  result res :: <GType>;
  c-name: "gtk_progress_get_type";
end;

define C-function gtk-progress-set-show-text
  input parameter arg1 :: <GtkProgress>;
  input parameter arg2 :: <gboolean>;
  c-name: "gtk_progress_set_show_text";
end;

define C-function gtk-progress-set-text-alignment
  input parameter arg1 :: <GtkProgress>;
  input parameter arg2 :: <gfloat>;
  input parameter arg3 :: <gfloat>;
  c-name: "gtk_progress_set_text_alignment";
end;

define C-function gtk-progress-set-format-string
  input parameter arg1 :: <GtkProgress>;
  input parameter arg2 :: <gchar*>;
  c-name: "gtk_progress_set_format_string";
end;

define C-function gtk-progress-set-adjustment
  input parameter arg1 :: <GtkProgress>;
  input parameter arg2 :: <GtkAdjustment>;
  c-name: "gtk_progress_set_adjustment";
end;

define C-function gtk-progress-configure
  input parameter arg1 :: <GtkProgress>;
  input parameter arg2 :: <gdouble>;
  input parameter arg3 :: <gdouble>;
  input parameter arg4 :: <gdouble>;
  c-name: "gtk_progress_configure";
end;

define C-function gtk-progress-set-percentage
  input parameter arg1 :: <GtkProgress>;
  input parameter arg2 :: <gdouble>;
  c-name: "gtk_progress_set_percentage";
end;

define C-function gtk-progress-set-value
  input parameter arg1 :: <GtkProgress>;
  input parameter arg2 :: <gdouble>;
  c-name: "gtk_progress_set_value";
end;

define C-function gtk-progress-get-value
  input parameter arg1 :: <GtkProgress>;
  result res :: <gdouble>;
  c-name: "gtk_progress_get_value";
end;

define C-function gtk-progress-set-activity-mode
  input parameter arg1 :: <GtkProgress>;
  input parameter arg2 :: <gboolean>;
  c-name: "gtk_progress_set_activity_mode";
end;

define C-function gtk-progress-get-current-text
  input parameter arg1 :: <GtkProgress>;
  result res :: <gchar*>;
  c-name: "gtk_progress_get_current_text";
end;

define C-function gtk-progress-get-text-from-value
  input parameter arg1 :: <GtkProgress>;
  input parameter arg2 :: <gdouble>;
  result res :: <gchar*>;
  c-name: "gtk_progress_get_text_from_value";
end;

define C-function gtk-progress-get-current-percentage
  input parameter arg1 :: <GtkProgress>;
  result res :: <gdouble>;
  c-name: "gtk_progress_get_current_percentage";
end;

define C-function gtk-progress-get-percentage-from-value
  input parameter arg1 :: <GtkProgress>;
  input parameter arg2 :: <gdouble>;
  result res :: <gdouble>;
  c-name: "gtk_progress_get_percentage_from_value";
end;

define C-struct <_GtkPrintOperationPrivate>
end;

define C-pointer-type <GtkPrintOperationPrivate> => <_GtkPrintOperationPrivate>;

define C-struct <_GtkPrintOperation>
  slot GtkPrintOperation-parent-instance :: <_GObject>;
  slot GtkPrintOperation-priv :: <GtkPrintOperationPrivate>;
end;

define C-pointer-type <GtkPrintOperation> => <_GtkPrintOperation>;

define constant <GtkPrintOperationResult> = <C-int>;
define constant $GTK-PRINT-OPERATION-RESULT-ERROR = 0;
define constant $GTK-PRINT-OPERATION-RESULT-APPLY = 1;
define constant $GTK-PRINT-OPERATION-RESULT-CANCEL = 2;
define constant $GTK-PRINT-OPERATION-RESULT-IN-PROGRESS = 3;

define constant <anonymous-7632> = <C-function-pointer>;
define C-struct <_GtkPrintContext>
end;

define C-pointer-type <GtkPrintContext> => <_GtkPrintContext>;

define constant <anonymous-7633> = <C-function-pointer>;
define constant <anonymous-7634> = <C-function-pointer>;
define C-struct <_GtkPageSetup>
end;

define C-pointer-type <GtkPageSetup> => <_GtkPageSetup>;

define constant <anonymous-7635> = <C-function-pointer>;
define constant <anonymous-7636> = <C-function-pointer>;
define constant <anonymous-7637> = <C-function-pointer>;
define constant <anonymous-7638> = <C-function-pointer>;
define constant <anonymous-7639> = <C-function-pointer>;
define constant <anonymous-7640> = <C-function-pointer>;
define C-struct <_GtkPrintOperationPreview>
end;

define C-pointer-type <GtkPrintOperationPreview> => <_GtkPrintOperationPreview>;

define constant <anonymous-7641> = <C-function-pointer>;
define constant <anonymous-7642> = <C-function-pointer>;
define constant <anonymous-7643> = <C-function-pointer>;
define constant <anonymous-7644> = <C-function-pointer>;
define constant <anonymous-7645> = <C-function-pointer>;
define constant <anonymous-7646> = <C-function-pointer>;
define constant <anonymous-7647> = <C-function-pointer>;
define constant <anonymous-7648> = <C-function-pointer>;
define C-struct <_GtkPrintOperationClass>
  slot GtkPrintOperationClass-parent-class :: <_GObjectClass>;
  slot GtkPrintOperationClass-done :: <anonymous-7632>;
  slot GtkPrintOperationClass-begin-print :: <anonymous-7633>;
  slot GtkPrintOperationClass-paginate :: <anonymous-7634>;
  slot GtkPrintOperationClass-request-page-setup :: <anonymous-7635>;
  slot GtkPrintOperationClass-draw-page :: <anonymous-7636>;
  slot GtkPrintOperationClass-end-print :: <anonymous-7637>;
  slot GtkPrintOperationClass-status-changed :: <anonymous-7638>;
  slot GtkPrintOperationClass-create-custom-widget :: <anonymous-7639>;
  slot GtkPrintOperationClass-custom-widget-apply :: <anonymous-7640>;
  slot GtkPrintOperationClass-preview :: <anonymous-7641>;
  slot GtkPrintOperationClass-_gtk-reserved1 :: <anonymous-7642>;
  slot GtkPrintOperationClass-_gtk-reserved2 :: <anonymous-7643>;
  slot GtkPrintOperationClass-_gtk-reserved3 :: <anonymous-7644>;
  slot GtkPrintOperationClass-_gtk-reserved4 :: <anonymous-7645>;
  slot GtkPrintOperationClass-_gtk-reserved5 :: <anonymous-7646>;
  slot GtkPrintOperationClass-_gtk-reserved6 :: <anonymous-7647>;
  slot GtkPrintOperationClass-_gtk-reserved7 :: <anonymous-7648>;
end;

define C-pointer-type <GtkPrintOperationClass> => <_GtkPrintOperationClass>;

define constant <GtkPrintStatus> = <C-int>;
define constant $GTK-PRINT-STATUS-INITIAL = 0;
define constant $GTK-PRINT-STATUS-PREPARING = 1;
define constant $GTK-PRINT-STATUS-GENERATING-DATA = 2;
define constant $GTK-PRINT-STATUS-SENDING-DATA = 3;
define constant $GTK-PRINT-STATUS-PENDING = 4;
define constant $GTK-PRINT-STATUS-PENDING-ISSUE = 5;
define constant $GTK-PRINT-STATUS-PRINTING = 6;
define constant $GTK-PRINT-STATUS-FINISHED = 7;
define constant $GTK-PRINT-STATUS-FINISHED-ABORTED = 8;

define constant <GtkPrintOperationAction> = <C-int>;
define constant $GTK-PRINT-OPERATION-ACTION-PRINT-DIALOG = 0;
define constant $GTK-PRINT-OPERATION-ACTION-PRINT = 1;
define constant $GTK-PRINT-OPERATION-ACTION-PREVIEW = 2;
define constant $GTK-PRINT-OPERATION-ACTION-EXPORT = 3;

define constant <GtkPrintError> = <C-int>;
define constant $GTK-PRINT-ERROR-GENERAL = 0;
define constant $GTK-PRINT-ERROR-INTERNAL-ERROR = 1;
define constant $GTK-PRINT-ERROR-NOMEM = 2;
define constant $GTK-PRINT-ERROR-INVALID-FILE = 3;

define C-function gtk-print-error-quark
  result res :: <GQuark>;
  c-name: "gtk_print_error_quark";
end;

define C-function gtk-print-operation-get-type
  result res :: <GType>;
  c-name: "gtk_print_operation_get_type";
end;

define C-function gtk-print-operation-new
  result res :: <GtkPrintOperation>;
  c-name: "gtk_print_operation_new";
end;

define C-function gtk-print-operation-set-default-page-setup
  input parameter arg1 :: <GtkPrintOperation>;
  input parameter arg2 :: <GtkPageSetup>;
  c-name: "gtk_print_operation_set_default_page_setup";
end;

define C-function gtk-print-operation-get-default-page-setup
  input parameter arg1 :: <GtkPrintOperation>;
  result res :: <GtkPageSetup>;
  c-name: "gtk_print_operation_get_default_page_setup";
end;

define C-struct <_GtkPrintSettings>
end;

define C-pointer-type <GtkPrintSettings> => <_GtkPrintSettings>;

define C-function gtk-print-operation-set-print-settings
  input parameter arg1 :: <GtkPrintOperation>;
  input parameter arg2 :: <GtkPrintSettings>;
  c-name: "gtk_print_operation_set_print_settings";
end;

define C-function gtk-print-operation-get-print-settings
  input parameter arg1 :: <GtkPrintOperation>;
  result res :: <GtkPrintSettings>;
  c-name: "gtk_print_operation_get_print_settings";
end;

define C-function gtk-print-operation-set-job-name
  input parameter arg1 :: <GtkPrintOperation>;
  input parameter arg2 :: <gchar*>;
  c-name: "gtk_print_operation_set_job_name";
end;

define C-function gtk-print-operation-set-n-pages
  input parameter arg1 :: <GtkPrintOperation>;
  input parameter arg2 :: <gint>;
  c-name: "gtk_print_operation_set_n_pages";
end;

define C-function gtk-print-operation-set-current-page
  input parameter arg1 :: <GtkPrintOperation>;
  input parameter arg2 :: <gint>;
  c-name: "gtk_print_operation_set_current_page";
end;

define C-function gtk-print-operation-set-use-full-page
  input parameter arg1 :: <GtkPrintOperation>;
  input parameter arg2 :: <gboolean>;
  c-name: "gtk_print_operation_set_use_full_page";
end;

define C-function gtk-print-operation-set-unit
  input parameter arg1 :: <GtkPrintOperation>;
  input parameter arg2 :: <GtkUnit>;
  c-name: "gtk_print_operation_set_unit";
end;

define C-function gtk-print-operation-set-export-filename
  input parameter arg1 :: <GtkPrintOperation>;
  input parameter arg2 :: <gchar*>;
  c-name: "gtk_print_operation_set_export_filename";
end;

define C-function gtk-print-operation-set-track-print-status
  input parameter arg1 :: <GtkPrintOperation>;
  input parameter arg2 :: <gboolean>;
  c-name: "gtk_print_operation_set_track_print_status";
end;

define C-function gtk-print-operation-set-show-progress
  input parameter arg1 :: <GtkPrintOperation>;
  input parameter arg2 :: <gboolean>;
  c-name: "gtk_print_operation_set_show_progress";
end;

define C-function gtk-print-operation-set-allow-async
  input parameter arg1 :: <GtkPrintOperation>;
  input parameter arg2 :: <gboolean>;
  c-name: "gtk_print_operation_set_allow_async";
end;

define C-function gtk-print-operation-set-custom-tab-label
  input parameter arg1 :: <GtkPrintOperation>;
  input parameter arg2 :: <gchar*>;
  c-name: "gtk_print_operation_set_custom_tab_label";
end;

define C-function gtk-print-operation-run
  input parameter arg1 :: <GtkPrintOperation>;
  input parameter arg2 :: <GtkPrintOperationAction>;
  input parameter arg3 :: <GtkWindow>;
  input parameter arg4 :: <GError*>;
  result res :: <GtkPrintOperationResult>;
  c-name: "gtk_print_operation_run";
end;

define C-function gtk-print-operation-get-error
  input parameter arg1 :: <GtkPrintOperation>;
  input parameter arg2 :: <GError*>;
  c-name: "gtk_print_operation_get_error";
end;

define C-function gtk-print-operation-get-status
  input parameter arg1 :: <GtkPrintOperation>;
  result res :: <GtkPrintStatus>;
  c-name: "gtk_print_operation_get_status";
end;

define C-function gtk-print-operation-get-status-string
  input parameter arg1 :: <GtkPrintOperation>;
  result res :: <gchar*>;
  c-name: "gtk_print_operation_get_status_string";
end;

define C-function gtk-print-operation-is-finished
  input parameter arg1 :: <GtkPrintOperation>;
  result res :: <gboolean>;
  c-name: "gtk_print_operation_is_finished";
end;

define C-function gtk-print-operation-cancel
  input parameter arg1 :: <GtkPrintOperation>;
  c-name: "gtk_print_operation_cancel";
end;

define C-function gtk-print-run-page-setup-dialog
  input parameter arg1 :: <GtkWindow>;
  input parameter arg2 :: <GtkPageSetup>;
  input parameter arg3 :: <GtkPrintSettings>;
  result res :: <GtkPageSetup>;
  c-name: "gtk_print_run_page_setup_dialog";
end;

define constant <anonymous-7674> = <C-function-pointer>;
define constant <GtkPageSetupDoneFunc> = <anonymous-7674>;

define C-function gtk-print-run-page-setup-dialog-async
  input parameter arg1 :: <GtkWindow>;
  input parameter arg2 :: <GtkPageSetup>;
  input parameter arg3 :: <GtkPrintSettings>;
  input parameter arg4 :: <GtkPageSetupDoneFunc>;
  input parameter arg5 :: <gpointer>;
  c-name: "gtk_print_run_page_setup_dialog_async";
end;

define constant <anonymous-7613> = <C-function-pointer>;
define constant <anonymous-7614> = <C-function-pointer>;
define constant <anonymous-7615> = <C-function-pointer>;
define constant <anonymous-7616> = <C-function-pointer>;
define constant <anonymous-7617> = <C-function-pointer>;
define constant <anonymous-7618> = <C-function-pointer>;
define constant <anonymous-7619> = <C-function-pointer>;
define constant <anonymous-7620> = <C-function-pointer>;
define constant <anonymous-7621> = <C-function-pointer>;
define constant <anonymous-7622> = <C-function-pointer>;
define constant <anonymous-7623> = <C-function-pointer>;
define constant <anonymous-7624> = <C-function-pointer>;
define C-struct <_GtkPrintOperationPreviewIface>
  slot GtkPrintOperationPreviewIface-g-iface :: <_GTypeInterface>;
  slot GtkPrintOperationPreviewIface-ready :: <anonymous-7613>;
  slot GtkPrintOperationPreviewIface-got-page-size :: <anonymous-7614>;
  slot GtkPrintOperationPreviewIface-render-page :: <anonymous-7615>;
  slot GtkPrintOperationPreviewIface-is-selected :: <anonymous-7616>;
  slot GtkPrintOperationPreviewIface-end-preview :: <anonymous-7617>;
  slot GtkPrintOperationPreviewIface-_gtk-reserved1 :: <anonymous-7618>;
  slot GtkPrintOperationPreviewIface-_gtk-reserved2 :: <anonymous-7619>;
  slot GtkPrintOperationPreviewIface-_gtk-reserved3 :: <anonymous-7620>;
  slot GtkPrintOperationPreviewIface-_gtk-reserved4 :: <anonymous-7621>;
  slot GtkPrintOperationPreviewIface-_gtk-reserved5 :: <anonymous-7622>;
  slot GtkPrintOperationPreviewIface-_gtk-reserved6 :: <anonymous-7623>;
  slot GtkPrintOperationPreviewIface-_gtk-reserved7 :: <anonymous-7624>;
end;

define C-pointer-type <GtkPrintOperationPreviewIface> => <_GtkPrintOperationPreviewIface>;

define C-function gtk-print-operation-preview-get-type
  result res :: <GType>;
  c-name: "gtk_print_operation_preview_get_type";
end;

define C-function gtk-print-operation-preview-render-page
  input parameter arg1 :: <GtkPrintOperationPreview>;
  input parameter arg2 :: <gint>;
  c-name: "gtk_print_operation_preview_render_page";
end;

define C-function gtk-print-operation-preview-end-preview
  input parameter arg1 :: <GtkPrintOperationPreview>;
  c-name: "gtk_print_operation_preview_end_preview";
end;

define C-function gtk-print-operation-preview-is-selected
  input parameter arg1 :: <GtkPrintOperationPreview>;
  input parameter arg2 :: <gint>;
  result res :: <gboolean>;
  c-name: "gtk_print_operation_preview_is_selected";
end;

define C-function gtk-print-context-get-type
  result res :: <GType>;
  c-name: "gtk_print_context_get_type";
end;

define C-function gtk-print-context-get-cairo-context
  input parameter arg1 :: <GtkPrintContext>;
  result res :: <cairo-t>;
  c-name: "gtk_print_context_get_cairo_context";
end;

define C-function gtk-print-context-get-page-setup
  input parameter arg1 :: <GtkPrintContext>;
  result res :: <GtkPageSetup>;
  c-name: "gtk_print_context_get_page_setup";
end;

define C-function gtk-print-context-get-width
  input parameter arg1 :: <GtkPrintContext>;
  result res :: <gdouble>;
  c-name: "gtk_print_context_get_width";
end;

define C-function gtk-print-context-get-height
  input parameter arg1 :: <GtkPrintContext>;
  result res :: <gdouble>;
  c-name: "gtk_print_context_get_height";
end;

define C-function gtk-print-context-get-dpi-x
  input parameter arg1 :: <GtkPrintContext>;
  result res :: <gdouble>;
  c-name: "gtk_print_context_get_dpi_x";
end;

define C-function gtk-print-context-get-dpi-y
  input parameter arg1 :: <GtkPrintContext>;
  result res :: <gdouble>;
  c-name: "gtk_print_context_get_dpi_y";
end;

define C-function gtk-print-context-get-pango-fontmap
  input parameter arg1 :: <GtkPrintContext>;
  result res :: <PangoFontMap>;
  c-name: "gtk_print_context_get_pango_fontmap";
end;

define C-function gtk-print-context-create-pango-context
  input parameter arg1 :: <GtkPrintContext>;
  result res :: <PangoContext>;
  c-name: "gtk_print_context_create_pango_context";
end;

define C-function gtk-print-context-create-pango-layout
  input parameter arg1 :: <GtkPrintContext>;
  result res :: <PangoLayout>;
  c-name: "gtk_print_context_create_pango_layout";
end;

define C-function gtk-print-context-set-cairo-context
  input parameter arg1 :: <GtkPrintContext>;
  input parameter arg2 :: <cairo-t>;
  input parameter arg3 :: <C-double>;
  input parameter arg4 :: <C-double>;
  c-name: "gtk_print_context_set_cairo_context";
end;

define C-function gtk-page-setup-get-type
  result res :: <GType>;
  c-name: "gtk_page_setup_get_type";
end;

define C-function gtk-page-setup-new
  result res :: <GtkPageSetup>;
  c-name: "gtk_page_setup_new";
end;

define C-function gtk-page-setup-copy
  input parameter arg1 :: <GtkPageSetup>;
  result res :: <GtkPageSetup>;
  c-name: "gtk_page_setup_copy";
end;

define C-function gtk-page-setup-get-orientation
  input parameter arg1 :: <GtkPageSetup>;
  result res :: <GtkPageOrientation>;
  c-name: "gtk_page_setup_get_orientation";
end;

define C-function gtk-page-setup-set-orientation
  input parameter arg1 :: <GtkPageSetup>;
  input parameter arg2 :: <GtkPageOrientation>;
  c-name: "gtk_page_setup_set_orientation";
end;

define C-struct <_GtkPaperSize>
end;

define C-pointer-type <GtkPaperSize> => <_GtkPaperSize>;

define C-function gtk-page-setup-get-paper-size
  input parameter arg1 :: <GtkPageSetup>;
  result res :: <GtkPaperSize>;
  c-name: "gtk_page_setup_get_paper_size";
end;

define C-function gtk-page-setup-set-paper-size
  input parameter arg1 :: <GtkPageSetup>;
  input parameter arg2 :: <GtkPaperSize>;
  c-name: "gtk_page_setup_set_paper_size";
end;

define C-function gtk-page-setup-get-top-margin
  input parameter arg1 :: <GtkPageSetup>;
  input parameter arg2 :: <GtkUnit>;
  result res :: <gdouble>;
  c-name: "gtk_page_setup_get_top_margin";
end;

define C-function gtk-page-setup-set-top-margin
  input parameter arg1 :: <GtkPageSetup>;
  input parameter arg2 :: <gdouble>;
  input parameter arg3 :: <GtkUnit>;
  c-name: "gtk_page_setup_set_top_margin";
end;

define C-function gtk-page-setup-get-bottom-margin
  input parameter arg1 :: <GtkPageSetup>;
  input parameter arg2 :: <GtkUnit>;
  result res :: <gdouble>;
  c-name: "gtk_page_setup_get_bottom_margin";
end;

define C-function gtk-page-setup-set-bottom-margin
  input parameter arg1 :: <GtkPageSetup>;
  input parameter arg2 :: <gdouble>;
  input parameter arg3 :: <GtkUnit>;
  c-name: "gtk_page_setup_set_bottom_margin";
end;

define C-function gtk-page-setup-get-left-margin
  input parameter arg1 :: <GtkPageSetup>;
  input parameter arg2 :: <GtkUnit>;
  result res :: <gdouble>;
  c-name: "gtk_page_setup_get_left_margin";
end;

define C-function gtk-page-setup-set-left-margin
  input parameter arg1 :: <GtkPageSetup>;
  input parameter arg2 :: <gdouble>;
  input parameter arg3 :: <GtkUnit>;
  c-name: "gtk_page_setup_set_left_margin";
end;

define C-function gtk-page-setup-get-right-margin
  input parameter arg1 :: <GtkPageSetup>;
  input parameter arg2 :: <GtkUnit>;
  result res :: <gdouble>;
  c-name: "gtk_page_setup_get_right_margin";
end;

define C-function gtk-page-setup-set-right-margin
  input parameter arg1 :: <GtkPageSetup>;
  input parameter arg2 :: <gdouble>;
  input parameter arg3 :: <GtkUnit>;
  c-name: "gtk_page_setup_set_right_margin";
end;

define C-function gtk-page-setup-set-paper-size-and-default-margins
  input parameter arg1 :: <GtkPageSetup>;
  input parameter arg2 :: <GtkPaperSize>;
  c-name: "gtk_page_setup_set_paper_size_and_default_margins";
end;

define C-function gtk-page-setup-get-paper-width
  input parameter arg1 :: <GtkPageSetup>;
  input parameter arg2 :: <GtkUnit>;
  result res :: <gdouble>;
  c-name: "gtk_page_setup_get_paper_width";
end;

define C-function gtk-page-setup-get-paper-height
  input parameter arg1 :: <GtkPageSetup>;
  input parameter arg2 :: <GtkUnit>;
  result res :: <gdouble>;
  c-name: "gtk_page_setup_get_paper_height";
end;

define C-function gtk-page-setup-get-page-width
  input parameter arg1 :: <GtkPageSetup>;
  input parameter arg2 :: <GtkUnit>;
  result res :: <gdouble>;
  c-name: "gtk_page_setup_get_page_width";
end;

define C-function gtk-page-setup-get-page-height
  input parameter arg1 :: <GtkPageSetup>;
  input parameter arg2 :: <GtkUnit>;
  result res :: <gdouble>;
  c-name: "gtk_page_setup_get_page_height";
end;

define C-function gtk-page-setup-new-from-file
  input parameter arg1 :: <gchar*>;
  input parameter arg2 :: <GError*>;
  result res :: <GtkPageSetup>;
  c-name: "gtk_page_setup_new_from_file";
end;

define C-function gtk-page-setup-to-file
  input parameter arg1 :: <GtkPageSetup>;
  input parameter arg2 :: <char*>;
  input parameter arg3 :: <GError*>;
  result res :: <gboolean>;
  c-name: "gtk_page_setup_to_file";
end;

define C-function gtk-page-setup-new-from-key-file
  input parameter arg1 :: <GKeyFile>;
  input parameter arg2 :: <gchar*>;
  input parameter arg3 :: <GError*>;
  result res :: <GtkPageSetup>;
  c-name: "gtk_page_setup_new_from_key_file";
end;

define C-function gtk-page-setup-to-key-file
  input parameter arg1 :: <GtkPageSetup>;
  input parameter arg2 :: <GKeyFile>;
  input parameter arg3 :: <gchar*>;
  c-name: "gtk_page_setup_to_key_file";
end;

define C-function gtk-paper-size-get-type
  result res :: <GType>;
  c-name: "gtk_paper_size_get_type";
end;

define C-function gtk-paper-size-new
  input parameter arg1 :: <gchar*>;
  result res :: <GtkPaperSize>;
  c-name: "gtk_paper_size_new";
end;

define C-function gtk-paper-size-new-from-ppd
  input parameter arg1 :: <gchar*>;
  input parameter arg2 :: <gchar*>;
  input parameter arg3 :: <gdouble>;
  input parameter arg4 :: <gdouble>;
  result res :: <GtkPaperSize>;
  c-name: "gtk_paper_size_new_from_ppd";
end;

define C-function gtk-paper-size-new-custom
  input parameter arg1 :: <gchar*>;
  input parameter arg2 :: <gchar*>;
  input parameter arg3 :: <gdouble>;
  input parameter arg4 :: <gdouble>;
  input parameter arg5 :: <GtkUnit>;
  result res :: <GtkPaperSize>;
  c-name: "gtk_paper_size_new_custom";
end;

define C-function gtk-paper-size-copy
  input parameter arg1 :: <GtkPaperSize>;
  result res :: <GtkPaperSize>;
  c-name: "gtk_paper_size_copy";
end;

define C-function gtk-paper-size-free
  input parameter arg1 :: <GtkPaperSize>;
  c-name: "gtk_paper_size_free";
end;

define C-function gtk-paper-size-is-equal
  input parameter arg1 :: <GtkPaperSize>;
  input parameter arg2 :: <GtkPaperSize>;
  result res :: <gboolean>;
  c-name: "gtk_paper_size_is_equal";
end;

define C-function gtk-paper-size-get-paper-sizes
  input parameter arg1 :: <gboolean>;
  result res :: <GList>;
  c-name: "gtk_paper_size_get_paper_sizes";
end;

define C-function gtk-paper-size-get-name
  input parameter arg1 :: <GtkPaperSize>;
  result res :: <gchar*>;
  c-name: "gtk_paper_size_get_name";
end;

define C-function gtk-paper-size-get-display-name
  input parameter arg1 :: <GtkPaperSize>;
  result res :: <gchar*>;
  c-name: "gtk_paper_size_get_display_name";
end;

define C-function gtk-paper-size-get-ppd-name
  input parameter arg1 :: <GtkPaperSize>;
  result res :: <gchar*>;
  c-name: "gtk_paper_size_get_ppd_name";
end;

define C-function gtk-paper-size-get-width
  input parameter arg1 :: <GtkPaperSize>;
  input parameter arg2 :: <GtkUnit>;
  result res :: <gdouble>;
  c-name: "gtk_paper_size_get_width";
end;

define C-function gtk-paper-size-get-height
  input parameter arg1 :: <GtkPaperSize>;
  input parameter arg2 :: <GtkUnit>;
  result res :: <gdouble>;
  c-name: "gtk_paper_size_get_height";
end;

define C-function gtk-paper-size-is-custom
  input parameter arg1 :: <GtkPaperSize>;
  result res :: <gboolean>;
  c-name: "gtk_paper_size_is_custom";
end;

define C-function gtk-paper-size-set-size
  input parameter arg1 :: <GtkPaperSize>;
  input parameter arg2 :: <gdouble>;
  input parameter arg3 :: <gdouble>;
  input parameter arg4 :: <GtkUnit>;
  c-name: "gtk_paper_size_set_size";
end;

define C-function gtk-paper-size-get-default-top-margin
  input parameter arg1 :: <GtkPaperSize>;
  input parameter arg2 :: <GtkUnit>;
  result res :: <gdouble>;
  c-name: "gtk_paper_size_get_default_top_margin";
end;

define C-function gtk-paper-size-get-default-bottom-margin
  input parameter arg1 :: <GtkPaperSize>;
  input parameter arg2 :: <GtkUnit>;
  result res :: <gdouble>;
  c-name: "gtk_paper_size_get_default_bottom_margin";
end;

define C-function gtk-paper-size-get-default-left-margin
  input parameter arg1 :: <GtkPaperSize>;
  input parameter arg2 :: <GtkUnit>;
  result res :: <gdouble>;
  c-name: "gtk_paper_size_get_default_left_margin";
end;

define C-function gtk-paper-size-get-default-right-margin
  input parameter arg1 :: <GtkPaperSize>;
  input parameter arg2 :: <GtkUnit>;
  result res :: <gdouble>;
  c-name: "gtk_paper_size_get_default_right_margin";
end;

define C-function gtk-paper-size-get-default
  result res :: <gchar*>;
  c-name: "gtk_paper_size_get_default";
end;

define C-function gtk-paper-size-new-from-key-file
  input parameter arg1 :: <GKeyFile>;
  input parameter arg2 :: <gchar*>;
  input parameter arg3 :: <GError*>;
  result res :: <GtkPaperSize>;
  c-name: "gtk_paper_size_new_from_key_file";
end;

define C-function gtk-paper-size-to-key-file
  input parameter arg1 :: <GtkPaperSize>;
  input parameter arg2 :: <GKeyFile>;
  input parameter arg3 :: <gchar*>;
  c-name: "gtk_paper_size_to_key_file";
end;

define constant $GTK-PAPER-NAME-A3 = "iso_a3";

define constant $GTK-PAPER-NAME-A4 = "iso_a4";

define constant $GTK-PAPER-NAME-A5 = "iso_a5";

define constant $GTK-PAPER-NAME-B5 = "iso_b5";

define constant $GTK-PAPER-NAME-LETTER = "na_letter";

define constant $GTK-PAPER-NAME-EXECUTIVE = "na_executive";

define constant $GTK-PAPER-NAME-LEGAL = "na_legal";

define constant <anonymous-7535> = <C-function-pointer>;
define constant <GtkPrintSettingsFunc> = <anonymous-7535>;

define C-struct <_GtkPageRange>
  slot GtkPageRange-start :: <C-signed-int>;
  slot GtkPageRange-end :: <C-signed-int>;
end;

define C-pointer-type <GtkPageRange> => <_GtkPageRange>;

define C-function gtk-print-settings-get-type
  result res :: <GType>;
  c-name: "gtk_print_settings_get_type";
end;

define C-function gtk-print-settings-new
  result res :: <GtkPrintSettings>;
  c-name: "gtk_print_settings_new";
end;

define C-function gtk-print-settings-copy
  input parameter arg1 :: <GtkPrintSettings>;
  result res :: <GtkPrintSettings>;
  c-name: "gtk_print_settings_copy";
end;

define C-function gtk-print-settings-new-from-file
  input parameter arg1 :: <gchar*>;
  input parameter arg2 :: <GError*>;
  result res :: <GtkPrintSettings>;
  c-name: "gtk_print_settings_new_from_file";
end;

define C-function gtk-print-settings-to-file
  input parameter arg1 :: <GtkPrintSettings>;
  input parameter arg2 :: <gchar*>;
  input parameter arg3 :: <GError*>;
  result res :: <gboolean>;
  c-name: "gtk_print_settings_to_file";
end;

define C-function gtk-print-settings-new-from-key-file
  input parameter arg1 :: <GKeyFile>;
  input parameter arg2 :: <gchar*>;
  input parameter arg3 :: <GError*>;
  result res :: <GtkPrintSettings>;
  c-name: "gtk_print_settings_new_from_key_file";
end;

define C-function gtk-print-settings-to-key-file
  input parameter arg1 :: <GtkPrintSettings>;
  input parameter arg2 :: <GKeyFile>;
  input parameter arg3 :: <gchar*>;
  c-name: "gtk_print_settings_to_key_file";
end;

define C-function gtk-print-settings-has-key
  input parameter arg1 :: <GtkPrintSettings>;
  input parameter arg2 :: <gchar*>;
  result res :: <gboolean>;
  c-name: "gtk_print_settings_has_key";
end;

define C-function gtk-print-settings-get
  input parameter arg1 :: <GtkPrintSettings>;
  input parameter arg2 :: <gchar*>;
  result res :: <gchar*>;
  c-name: "gtk_print_settings_get";
end;

define C-function gtk-print-settings-set
  input parameter arg1 :: <GtkPrintSettings>;
  input parameter arg2 :: <gchar*>;
  input parameter arg3 :: <gchar*>;
  c-name: "gtk_print_settings_set";
end;

define C-function gtk-print-settings-unset
  input parameter arg1 :: <GtkPrintSettings>;
  input parameter arg2 :: <gchar*>;
  c-name: "gtk_print_settings_unset";
end;

define C-function gtk-print-settings-foreach
  input parameter arg1 :: <GtkPrintSettings>;
  input parameter arg2 :: <GtkPrintSettingsFunc>;
  input parameter arg3 :: <gpointer>;
  c-name: "gtk_print_settings_foreach";
end;

define C-function gtk-print-settings-get-bool
  input parameter arg1 :: <GtkPrintSettings>;
  input parameter arg2 :: <gchar*>;
  result res :: <gboolean>;
  c-name: "gtk_print_settings_get_bool";
end;

define C-function gtk-print-settings-set-bool
  input parameter arg1 :: <GtkPrintSettings>;
  input parameter arg2 :: <gchar*>;
  input parameter arg3 :: <gboolean>;
  c-name: "gtk_print_settings_set_bool";
end;

define C-function gtk-print-settings-get-double
  input parameter arg1 :: <GtkPrintSettings>;
  input parameter arg2 :: <gchar*>;
  result res :: <gdouble>;
  c-name: "gtk_print_settings_get_double";
end;

define C-function gtk-print-settings-get-double-with-default
  input parameter arg1 :: <GtkPrintSettings>;
  input parameter arg2 :: <gchar*>;
  input parameter arg3 :: <gdouble>;
  result res :: <gdouble>;
  c-name: "gtk_print_settings_get_double_with_default";
end;

define C-function gtk-print-settings-set-double
  input parameter arg1 :: <GtkPrintSettings>;
  input parameter arg2 :: <gchar*>;
  input parameter arg3 :: <gdouble>;
  c-name: "gtk_print_settings_set_double";
end;

define C-function gtk-print-settings-get-length
  input parameter arg1 :: <GtkPrintSettings>;
  input parameter arg2 :: <gchar*>;
  input parameter arg3 :: <GtkUnit>;
  result res :: <gdouble>;
  c-name: "gtk_print_settings_get_length";
end;

define C-function gtk-print-settings-set-length
  input parameter arg1 :: <GtkPrintSettings>;
  input parameter arg2 :: <gchar*>;
  input parameter arg3 :: <gdouble>;
  input parameter arg4 :: <GtkUnit>;
  c-name: "gtk_print_settings_set_length";
end;

define C-function gtk-print-settings-get-int
  input parameter arg1 :: <GtkPrintSettings>;
  input parameter arg2 :: <gchar*>;
  result res :: <gint>;
  c-name: "gtk_print_settings_get_int";
end;

define C-function gtk-print-settings-get-int-with-default
  input parameter arg1 :: <GtkPrintSettings>;
  input parameter arg2 :: <gchar*>;
  input parameter arg3 :: <gint>;
  result res :: <gint>;
  c-name: "gtk_print_settings_get_int_with_default";
end;

define C-function gtk-print-settings-set-int
  input parameter arg1 :: <GtkPrintSettings>;
  input parameter arg2 :: <gchar*>;
  input parameter arg3 :: <gint>;
  c-name: "gtk_print_settings_set_int";
end;

define C-function gtk-print-settings-get-printer
  input parameter arg1 :: <GtkPrintSettings>;
  result res :: <gchar*>;
  c-name: "gtk_print_settings_get_printer";
end;

define C-function gtk-print-settings-set-printer
  input parameter arg1 :: <GtkPrintSettings>;
  input parameter arg2 :: <gchar*>;
  c-name: "gtk_print_settings_set_printer";
end;

define C-function gtk-print-settings-get-orientation
  input parameter arg1 :: <GtkPrintSettings>;
  result res :: <GtkPageOrientation>;
  c-name: "gtk_print_settings_get_orientation";
end;

define C-function gtk-print-settings-set-orientation
  input parameter arg1 :: <GtkPrintSettings>;
  input parameter arg2 :: <GtkPageOrientation>;
  c-name: "gtk_print_settings_set_orientation";
end;

define C-function gtk-print-settings-get-paper-size
  input parameter arg1 :: <GtkPrintSettings>;
  result res :: <GtkPaperSize>;
  c-name: "gtk_print_settings_get_paper_size";
end;

define C-function gtk-print-settings-set-paper-size
  input parameter arg1 :: <GtkPrintSettings>;
  input parameter arg2 :: <GtkPaperSize>;
  c-name: "gtk_print_settings_set_paper_size";
end;

define C-function gtk-print-settings-get-paper-width
  input parameter arg1 :: <GtkPrintSettings>;
  input parameter arg2 :: <GtkUnit>;
  result res :: <gdouble>;
  c-name: "gtk_print_settings_get_paper_width";
end;

define C-function gtk-print-settings-set-paper-width
  input parameter arg1 :: <GtkPrintSettings>;
  input parameter arg2 :: <gdouble>;
  input parameter arg3 :: <GtkUnit>;
  c-name: "gtk_print_settings_set_paper_width";
end;

define C-function gtk-print-settings-get-paper-height
  input parameter arg1 :: <GtkPrintSettings>;
  input parameter arg2 :: <GtkUnit>;
  result res :: <gdouble>;
  c-name: "gtk_print_settings_get_paper_height";
end;

define C-function gtk-print-settings-set-paper-height
  input parameter arg1 :: <GtkPrintSettings>;
  input parameter arg2 :: <gdouble>;
  input parameter arg3 :: <GtkUnit>;
  c-name: "gtk_print_settings_set_paper_height";
end;

define C-function gtk-print-settings-get-use-color
  input parameter arg1 :: <GtkPrintSettings>;
  result res :: <gboolean>;
  c-name: "gtk_print_settings_get_use_color";
end;

define C-function gtk-print-settings-set-use-color
  input parameter arg1 :: <GtkPrintSettings>;
  input parameter arg2 :: <gboolean>;
  c-name: "gtk_print_settings_set_use_color";
end;

define C-function gtk-print-settings-get-collate
  input parameter arg1 :: <GtkPrintSettings>;
  result res :: <gboolean>;
  c-name: "gtk_print_settings_get_collate";
end;

define C-function gtk-print-settings-set-collate
  input parameter arg1 :: <GtkPrintSettings>;
  input parameter arg2 :: <gboolean>;
  c-name: "gtk_print_settings_set_collate";
end;

define C-function gtk-print-settings-get-reverse
  input parameter arg1 :: <GtkPrintSettings>;
  result res :: <gboolean>;
  c-name: "gtk_print_settings_get_reverse";
end;

define C-function gtk-print-settings-set-reverse
  input parameter arg1 :: <GtkPrintSettings>;
  input parameter arg2 :: <gboolean>;
  c-name: "gtk_print_settings_set_reverse";
end;

define C-function gtk-print-settings-get-duplex
  input parameter arg1 :: <GtkPrintSettings>;
  result res :: <GtkPrintDuplex>;
  c-name: "gtk_print_settings_get_duplex";
end;

define C-function gtk-print-settings-set-duplex
  input parameter arg1 :: <GtkPrintSettings>;
  input parameter arg2 :: <GtkPrintDuplex>;
  c-name: "gtk_print_settings_set_duplex";
end;

define C-function gtk-print-settings-get-quality
  input parameter arg1 :: <GtkPrintSettings>;
  result res :: <GtkPrintQuality>;
  c-name: "gtk_print_settings_get_quality";
end;

define C-function gtk-print-settings-set-quality
  input parameter arg1 :: <GtkPrintSettings>;
  input parameter arg2 :: <GtkPrintQuality>;
  c-name: "gtk_print_settings_set_quality";
end;

define C-function gtk-print-settings-get-n-copies
  input parameter arg1 :: <GtkPrintSettings>;
  result res :: <gint>;
  c-name: "gtk_print_settings_get_n_copies";
end;

define C-function gtk-print-settings-set-n-copies
  input parameter arg1 :: <GtkPrintSettings>;
  input parameter arg2 :: <gint>;
  c-name: "gtk_print_settings_set_n_copies";
end;

define C-function gtk-print-settings-get-number-up
  input parameter arg1 :: <GtkPrintSettings>;
  result res :: <gint>;
  c-name: "gtk_print_settings_get_number_up";
end;

define C-function gtk-print-settings-set-number-up
  input parameter arg1 :: <GtkPrintSettings>;
  input parameter arg2 :: <gint>;
  c-name: "gtk_print_settings_set_number_up";
end;

define C-function gtk-print-settings-get-resolution
  input parameter arg1 :: <GtkPrintSettings>;
  result res :: <gint>;
  c-name: "gtk_print_settings_get_resolution";
end;

define C-function gtk-print-settings-set-resolution
  input parameter arg1 :: <GtkPrintSettings>;
  input parameter arg2 :: <gint>;
  c-name: "gtk_print_settings_set_resolution";
end;

define C-function gtk-print-settings-get-scale
  input parameter arg1 :: <GtkPrintSettings>;
  result res :: <gdouble>;
  c-name: "gtk_print_settings_get_scale";
end;

define C-function gtk-print-settings-set-scale
  input parameter arg1 :: <GtkPrintSettings>;
  input parameter arg2 :: <gdouble>;
  c-name: "gtk_print_settings_set_scale";
end;

define C-function gtk-print-settings-get-print-pages
  input parameter arg1 :: <GtkPrintSettings>;
  result res :: <GtkPrintPages>;
  c-name: "gtk_print_settings_get_print_pages";
end;

define C-function gtk-print-settings-set-print-pages
  input parameter arg1 :: <GtkPrintSettings>;
  input parameter arg2 :: <GtkPrintPages>;
  c-name: "gtk_print_settings_set_print_pages";
end;

define C-function gtk-print-settings-get-page-ranges
  input parameter arg1 :: <GtkPrintSettings>;
  input parameter arg2 :: <gint*>;
  result res :: <GtkPageRange>;
  c-name: "gtk_print_settings_get_page_ranges";
end;

define C-function gtk-print-settings-set-page-ranges
  input parameter arg1 :: <GtkPrintSettings>;
  input parameter arg2 :: <GtkPageRange>;
  input parameter arg3 :: <gint>;
  c-name: "gtk_print_settings_set_page_ranges";
end;

define C-function gtk-print-settings-get-page-set
  input parameter arg1 :: <GtkPrintSettings>;
  result res :: <GtkPageSet>;
  c-name: "gtk_print_settings_get_page_set";
end;

define C-function gtk-print-settings-set-page-set
  input parameter arg1 :: <GtkPrintSettings>;
  input parameter arg2 :: <GtkPageSet>;
  c-name: "gtk_print_settings_set_page_set";
end;

define C-function gtk-print-settings-get-default-source
  input parameter arg1 :: <GtkPrintSettings>;
  result res :: <gchar*>;
  c-name: "gtk_print_settings_get_default_source";
end;

define C-function gtk-print-settings-set-default-source
  input parameter arg1 :: <GtkPrintSettings>;
  input parameter arg2 :: <gchar*>;
  c-name: "gtk_print_settings_set_default_source";
end;

define C-function gtk-print-settings-get-media-type
  input parameter arg1 :: <GtkPrintSettings>;
  result res :: <gchar*>;
  c-name: "gtk_print_settings_get_media_type";
end;

define C-function gtk-print-settings-set-media-type
  input parameter arg1 :: <GtkPrintSettings>;
  input parameter arg2 :: <gchar*>;
  c-name: "gtk_print_settings_set_media_type";
end;

define C-function gtk-print-settings-get-dither
  input parameter arg1 :: <GtkPrintSettings>;
  result res :: <gchar*>;
  c-name: "gtk_print_settings_get_dither";
end;

define C-function gtk-print-settings-set-dither
  input parameter arg1 :: <GtkPrintSettings>;
  input parameter arg2 :: <gchar*>;
  c-name: "gtk_print_settings_set_dither";
end;

define C-function gtk-print-settings-get-finishings
  input parameter arg1 :: <GtkPrintSettings>;
  result res :: <gchar*>;
  c-name: "gtk_print_settings_get_finishings";
end;

define C-function gtk-print-settings-set-finishings
  input parameter arg1 :: <GtkPrintSettings>;
  input parameter arg2 :: <gchar*>;
  c-name: "gtk_print_settings_set_finishings";
end;

define C-function gtk-print-settings-get-output-bin
  input parameter arg1 :: <GtkPrintSettings>;
  result res :: <gchar*>;
  c-name: "gtk_print_settings_get_output_bin";
end;

define C-function gtk-print-settings-set-output-bin
  input parameter arg1 :: <GtkPrintSettings>;
  input parameter arg2 :: <gchar*>;
  c-name: "gtk_print_settings_set_output_bin";
end;

define constant $GTK-PRINT-SETTINGS-PRINTER = "printer";

define constant $GTK-PRINT-SETTINGS-ORIENTATION = "orientation";

define constant $GTK-PRINT-SETTINGS-PAPER-FORMAT = "paper-format";

define constant $GTK-PRINT-SETTINGS-PAPER-WIDTH = "paper-width";

define constant $GTK-PRINT-SETTINGS-PAPER-HEIGHT = "paper-height";

define constant $GTK-PRINT-SETTINGS-N-COPIES = "n-copies";

define constant $GTK-PRINT-SETTINGS-DEFAULT-SOURCE = "default-source";

define constant $GTK-PRINT-SETTINGS-QUALITY = "quality";

define constant $GTK-PRINT-SETTINGS-RESOLUTION = "resolution";

define constant $GTK-PRINT-SETTINGS-USE-COLOR = "use-color";

define constant $GTK-PRINT-SETTINGS-DUPLEX = "duplex";

define constant $GTK-PRINT-SETTINGS-COLLATE = "collate";

define constant $GTK-PRINT-SETTINGS-REVERSE = "reverse";

define constant $GTK-PRINT-SETTINGS-MEDIA-TYPE = "media-type";

define constant $GTK-PRINT-SETTINGS-DITHER = "dither";

define constant $GTK-PRINT-SETTINGS-SCALE = "scale";

define constant $GTK-PRINT-SETTINGS-PRINT-PAGES = "print-pages";

define constant $GTK-PRINT-SETTINGS-PAGE-RANGES = "page-ranges";

define constant $GTK-PRINT-SETTINGS-PAGE-SET = "page-set";

define constant $GTK-PRINT-SETTINGS-FINISHINGS = "finishings";

define constant $GTK-PRINT-SETTINGS-NUMBER-UP = "number-up";

define constant $GTK-PRINT-SETTINGS-OUTPUT-BIN = "output-bin";

define constant $GTK-PRINT-SETTINGS-OUTPUT-FILE-FORMAT = "output-file-format";

define constant $GTK-PRINT-SETTINGS-OUTPUT-URI = "output-uri";

define constant $GTK-PRINT-SETTINGS-WIN32-DRIVER-VERSION = "win32-driver-version";

define constant $GTK-PRINT-SETTINGS-WIN32-DRIVER-EXTRA = "win32-driver-extra";

define constant <anonymous-7159> = <C-function-pointer>;
define constant <GtkKeySnoopFunc> = <anonymous-7159>;

 /* Ignoring declaration for {instance of <variable-declaration>} "gtk-major-version"*/
 /* Ignoring declaration for {instance of <variable-declaration>} "gtk-minor-version"*/
 /* Ignoring declaration for {instance of <variable-declaration>} "gtk-micro-version"*/
 /* Ignoring declaration for {instance of <variable-declaration>} "gtk-binary-age"*/
 /* Ignoring declaration for {instance of <variable-declaration>} "gtk-interface-age"*/
define C-function gtk-check-version
  input parameter arg1 :: <guint>;
  input parameter arg2 :: <guint>;
  input parameter arg3 :: <guint>;
  result res :: <gchar*>;
  c-name: "gtk_check_version";
end;

define C-function gtk-parse-args
  input parameter arg1 :: <int*>;
  input parameter arg2 :: <char***>;
  result res :: <gboolean>;
  c-name: "gtk_parse_args";
end;

define C-function %gtk-init
  input parameter arg1 :: <int*>;
  input parameter arg2 :: <char***>;
  c-name: "gtk_init";
end;

define C-function gtk-init-check
  input parameter arg1 :: <int*>;
  input parameter arg2 :: <char***>;
  result res :: <gboolean>;
  c-name: "gtk_init_check";
end;

define C-function gtk-init-with-args
  input parameter arg1 :: <int*>;
  input parameter arg2 :: <char***>;
  input parameter arg3 :: <char*>;
  input parameter arg4 :: <GOptionEntry>;
  input parameter arg5 :: <char*>;
  input parameter arg6 :: <GError*>;
  result res :: <gboolean>;
  c-name: "gtk_init_with_args";
end;

define C-function gtk-get-option-group
  input parameter arg1 :: <gboolean>;
  result res :: <GOptionGroup>;
  c-name: "gtk_get_option_group";
end;

define C-function gtk-exit
  input parameter arg1 :: <gint>;
  c-name: "gtk_exit";
end;

define C-function gtk-disable-setlocale
  c-name: "gtk_disable_setlocale";
end;

define C-function gtk-set-locale
  result res :: <gchar*>;
  c-name: "gtk_set_locale";
end;

define C-function gtk-get-default-language
  result res :: <PangoLanguage>;
  c-name: "gtk_get_default_language";
end;

define C-function gtk-events-pending
  result res :: <gboolean>;
  c-name: "gtk_events_pending";
end;

define C-function gtk-main-do-event
  input parameter arg1 :: <GdkEvent>;
  c-name: "gtk_main_do_event";
end;

define C-function gtk-main
  c-name: "gtk_main";
end;

define C-function gtk-main-level
  result res :: <guint>;
  c-name: "gtk_main_level";
end;

define C-function gtk-main-quit
  c-name: "gtk_main_quit";
end;

define C-function gtk-main-iteration
  result res :: <gboolean>;
  c-name: "gtk_main_iteration";
end;

define C-function gtk-main-iteration-do
  input parameter arg1 :: <gboolean>;
  result res :: <gboolean>;
  c-name: "gtk_main_iteration_do";
end;

define C-function gtk-true
  result res :: <gboolean>;
  c-name: "gtk_true";
end;

define C-function gtk-false
  result res :: <gboolean>;
  c-name: "gtk_false";
end;

define C-function gtk-grab-add
  input parameter arg1 :: <GtkWidget>;
  c-name: "gtk_grab_add";
end;

define C-function gtk-grab-get-current
  result res :: <GtkWidget>;
  c-name: "gtk_grab_get_current";
end;

define C-function gtk-grab-remove
  input parameter arg1 :: <GtkWidget>;
  c-name: "gtk_grab_remove";
end;

define C-function gtk-init-add
  input parameter arg1 :: <GtkFunction>;
  input parameter arg2 :: <gpointer>;
  c-name: "gtk_init_add";
end;

define C-function gtk-quit-add-destroy
  input parameter arg1 :: <guint>;
  input parameter arg2 :: <GtkObject>;
  c-name: "gtk_quit_add_destroy";
end;

define C-function gtk-quit-add
  input parameter arg1 :: <guint>;
  input parameter arg2 :: <GtkFunction>;
  input parameter arg3 :: <gpointer>;
  result res :: <guint>;
  c-name: "gtk_quit_add";
end;

define C-function gtk-quit-add-full
  input parameter arg1 :: <guint>;
  input parameter arg2 :: <GtkFunction>;
  input parameter arg3 :: <GtkCallbackMarshal>;
  input parameter arg4 :: <gpointer>;
  input parameter arg5 :: <GtkDestroyNotify>;
  result res :: <guint>;
  c-name: "gtk_quit_add_full";
end;

define C-function gtk-quit-remove
  input parameter arg1 :: <guint>;
  c-name: "gtk_quit_remove";
end;

define C-function gtk-quit-remove-by-data
  input parameter arg1 :: <gpointer>;
  c-name: "gtk_quit_remove_by_data";
end;

define C-function gtk-timeout-add
  input parameter arg1 :: <guint32>;
  input parameter arg2 :: <GtkFunction>;
  input parameter arg3 :: <gpointer>;
  result res :: <guint>;
  c-name: "gtk_timeout_add";
end;

define C-function gtk-timeout-add-full
  input parameter arg1 :: <guint32>;
  input parameter arg2 :: <GtkFunction>;
  input parameter arg3 :: <GtkCallbackMarshal>;
  input parameter arg4 :: <gpointer>;
  input parameter arg5 :: <GtkDestroyNotify>;
  result res :: <guint>;
  c-name: "gtk_timeout_add_full";
end;

define C-function gtk-timeout-remove
  input parameter arg1 :: <guint>;
  c-name: "gtk_timeout_remove";
end;

define C-function gtk-idle-add
  input parameter arg1 :: <GtkFunction>;
  input parameter arg2 :: <gpointer>;
  result res :: <guint>;
  c-name: "gtk_idle_add";
end;

define C-function gtk-idle-add-priority
  input parameter arg1 :: <gint>;
  input parameter arg2 :: <GtkFunction>;
  input parameter arg3 :: <gpointer>;
  result res :: <guint>;
  c-name: "gtk_idle_add_priority";
end;

define C-function gtk-idle-add-full
  input parameter arg1 :: <gint>;
  input parameter arg2 :: <GtkFunction>;
  input parameter arg3 :: <GtkCallbackMarshal>;
  input parameter arg4 :: <gpointer>;
  input parameter arg5 :: <GtkDestroyNotify>;
  result res :: <guint>;
  c-name: "gtk_idle_add_full";
end;

define C-function gtk-idle-remove
  input parameter arg1 :: <guint>;
  c-name: "gtk_idle_remove";
end;

define C-function gtk-idle-remove-by-data
  input parameter arg1 :: <gpointer>;
  c-name: "gtk_idle_remove_by_data";
end;

define C-function gtk-input-add-full
  input parameter arg1 :: <gint>;
  input parameter arg2 :: <GdkInputCondition>;
  input parameter arg3 :: <GdkInputFunction>;
  input parameter arg4 :: <GtkCallbackMarshal>;
  input parameter arg5 :: <gpointer>;
  input parameter arg6 :: <GtkDestroyNotify>;
  result res :: <guint>;
  c-name: "gtk_input_add_full";
end;

define C-function gtk-input-remove
  input parameter arg1 :: <guint>;
  c-name: "gtk_input_remove";
end;

define C-function gtk-key-snooper-install
  input parameter arg1 :: <GtkKeySnoopFunc>;
  input parameter arg2 :: <gpointer>;
  result res :: <guint>;
  c-name: "gtk_key_snooper_install";
end;

define C-function gtk-key-snooper-remove
  input parameter arg1 :: <guint>;
  c-name: "gtk_key_snooper_remove";
end;

define C-function gtk-get-current-event
  result res :: <GdkEvent>;
  c-name: "gtk_get_current_event";
end;

define C-function gtk-get-current-event-time
  result res :: <guint32>;
  c-name: "gtk_get_current_event_time";
end;

define C-function gtk-get-current-event-state
  input parameter arg1 :: <GdkModifierType*>;
  result res :: <gboolean>;
  c-name: "gtk_get_current_event_state";
end;

define C-function gtk-get-event-widget
  input parameter arg1 :: <GdkEvent>;
  result res :: <GtkWidget>;
  c-name: "gtk_get_event_widget";
end;

define C-function gtk-propagate-event
  input parameter arg1 :: <GtkWidget>;
  input parameter arg2 :: <GdkEvent>;
  c-name: "gtk_propagate_event";
end;

define constant $GTK-PRIORITY-RESIZE = 110;

define constant $GTK-PRIORITY-REDRAW = 120;

define constant $GTK-PRIORITY-HIGH = -100;

define constant $GTK-PRIORITY-INTERNAL = 120;

define constant $GTK-PRIORITY-DEFAULT = 200;

define constant $GTK-PRIORITY-LOW = 300;

define C-subtype <_GtkPreview> (<_GtkWidget>, <_AtkImplementorIface>) end;
define constant <GtkPreview> = <_GtkPreview>;

define C-struct <_GtkPreviewInfo>
  slot GtkPreviewInfo-lookup :: <guchar*>;
  slot GtkPreviewInfo-gamma :: <C-double>;
end;

define C-pointer-type <GtkPreviewInfo> => <_GtkPreviewInfo>;

define C-pointer-type <gushort*> => <gushort>;
define constant <gushort<@2>> = <gushort*>;
define constant <guchar<@4>> = <guchar*>;
define C-subtype <_GtkDitherInfo> (<C-void*>) end;
define constant <GtkDitherInfo> = <_GtkDitherInfo>;

define C-struct <_GtkPreviewClass>
  slot GtkPreviewClass-parent-class :: <_GtkWidgetClass>;
  slot GtkPreviewClass-info :: <_GtkPreviewInfo>;
end;

define C-pointer-type <GtkPreviewClass> => <_GtkPreviewClass>;

define C-function gtk-preview-get-type
  result res :: <GtkType>;
  c-name: "gtk_preview_get_type";
end;

define C-function gtk-preview-uninit
  c-name: "gtk_preview_uninit";
end;

define C-function gtk-preview-new
  input parameter arg1 :: <GtkPreviewType>;
  result res :: <GtkWidget>;
  c-name: "gtk_preview_new";
end;

define C-function gtk-preview-size
  input parameter arg1 :: <GtkPreview>;
  input parameter arg2 :: <gint>;
  input parameter arg3 :: <gint>;
  c-name: "gtk_preview_size";
end;

define C-function gtk-preview-put
  input parameter arg1 :: <GtkPreview>;
  input parameter arg2 :: <GdkWindow>;
  input parameter arg3 :: <GdkGC>;
  input parameter arg4 :: <gint>;
  input parameter arg5 :: <gint>;
  input parameter arg6 :: <gint>;
  input parameter arg7 :: <gint>;
  input parameter arg8 :: <gint>;
  input parameter arg9 :: <gint>;
  c-name: "gtk_preview_put";
end;

define C-function gtk-preview-draw-row
  input parameter arg1 :: <GtkPreview>;
  input parameter arg2 :: <guchar*>;
  input parameter arg3 :: <gint>;
  input parameter arg4 :: <gint>;
  input parameter arg5 :: <gint>;
  c-name: "gtk_preview_draw_row";
end;

define C-function gtk-preview-set-expand
  input parameter arg1 :: <GtkPreview>;
  input parameter arg2 :: <gboolean>;
  c-name: "gtk_preview_set_expand";
end;

define C-function gtk-preview-set-gamma
  input parameter arg1 :: <C-double>;
  c-name: "gtk_preview_set_gamma";
end;

define C-function gtk-preview-set-color-cube
  input parameter arg1 :: <guint>;
  input parameter arg2 :: <guint>;
  input parameter arg3 :: <guint>;
  input parameter arg4 :: <guint>;
  c-name: "gtk_preview_set_color_cube";
end;

define C-function gtk-preview-set-install-cmap
  input parameter arg1 :: <gint>;
  c-name: "gtk_preview_set_install_cmap";
end;

define C-function gtk-preview-set-reserved
  input parameter arg1 :: <gint>;
  c-name: "gtk_preview_set_reserved";
end;

define C-function gtk-preview-set-dither
  input parameter arg1 :: <GtkPreview>;
  input parameter arg2 :: <GdkRgbDither>;
  c-name: "gtk_preview_set_dither";
end;

define C-function gtk-preview-get-visual
  result res :: <GdkVisual>;
  c-name: "gtk_preview_get_visual";
end;

define C-function gtk-preview-get-cmap
  result res :: <GdkColormap>;
  c-name: "gtk_preview_get_cmap";
end;

define C-function gtk-preview-get-info
  result res :: <GtkPreviewInfo>;
  c-name: "gtk_preview_get_info";
end;

define C-function gtk-preview-reset
  c-name: "gtk_preview_reset";
end;

define C-subtype <_GtkPlug> (<_GtkWindow>, <_AtkImplementorIface>) end;
define constant <GtkPlug> = <_GtkPlug>;

define constant <anonymous-7458> = <C-function-pointer>;
define constant <anonymous-7459> = <C-function-pointer>;
define constant <anonymous-7460> = <C-function-pointer>;
define constant <anonymous-7461> = <C-function-pointer>;
define constant <anonymous-7462> = <C-function-pointer>;
define C-struct <_GtkPlugClass>
  slot GtkPlugClass-parent-class :: <_GtkWindowClass>;
  slot GtkPlugClass-embedded :: <anonymous-7458>;
  slot GtkPlugClass-_gtk-reserved1 :: <anonymous-7459>;
  slot GtkPlugClass-_gtk-reserved2 :: <anonymous-7460>;
  slot GtkPlugClass-_gtk-reserved3 :: <anonymous-7461>;
  slot GtkPlugClass-_gtk-reserved4 :: <anonymous-7462>;
end;

define C-pointer-type <GtkPlugClass> => <_GtkPlugClass>;

define C-function gtk-plug-get-type
  result res :: <GType>;
  c-name: "gtk_plug_get_type";
end;

define C-function gtk-plug-construct
  input parameter arg1 :: <GtkPlug>;
  input parameter arg2 :: <GdkNativeWindow>;
  c-name: "gtk_plug_construct";
end;

define C-function gtk-plug-new
  input parameter arg1 :: <GdkNativeWindow>;
  result res :: <GtkWidget>;
  c-name: "gtk_plug_new";
end;

define C-function gtk-plug-construct-for-display
  input parameter arg1 :: <GtkPlug>;
  input parameter arg2 :: <GdkDisplay>;
  input parameter arg3 :: <GdkNativeWindow>;
  c-name: "gtk_plug_construct_for_display";
end;

define C-function gtk-plug-new-for-display
  input parameter arg1 :: <GdkDisplay>;
  input parameter arg2 :: <GdkNativeWindow>;
  result res :: <GtkWidget>;
  c-name: "gtk_plug_new_for_display";
end;

define C-function gtk-plug-get-id
  input parameter arg1 :: <GtkPlug>;
  result res :: <GdkNativeWindow>;
  c-name: "gtk_plug_get_id";
end;

define C-subtype <_GtkOptionMenu> (<_GtkButton>, <_AtkImplementorIface>) end;
define constant <GtkOptionMenu> = <_GtkOptionMenu>;

define constant <anonymous-7422> = <C-function-pointer>;
define constant <anonymous-7423> = <C-function-pointer>;
define constant <anonymous-7424> = <C-function-pointer>;
define constant <anonymous-7425> = <C-function-pointer>;
define constant <anonymous-7426> = <C-function-pointer>;
define C-struct <_GtkOptionMenuClass>
  slot GtkOptionMenuClass-parent-class :: <_GtkButtonClass>;
  slot GtkOptionMenuClass-changed :: <anonymous-7422>;
  slot GtkOptionMenuClass-_gtk-reserved1 :: <anonymous-7423>;
  slot GtkOptionMenuClass-_gtk-reserved2 :: <anonymous-7424>;
  slot GtkOptionMenuClass-_gtk-reserved3 :: <anonymous-7425>;
  slot GtkOptionMenuClass-_gtk-reserved4 :: <anonymous-7426>;
end;

define C-pointer-type <GtkOptionMenuClass> => <_GtkOptionMenuClass>;

define C-function gtk-option-menu-get-type
  result res :: <GType>;
  c-name: "gtk_option_menu_get_type";
end;

define C-function gtk-option-menu-new
  result res :: <GtkWidget>;
  c-name: "gtk_option_menu_new";
end;

define C-function gtk-option-menu-get-menu
  input parameter arg1 :: <GtkOptionMenu>;
  result res :: <GtkWidget>;
  c-name: "gtk_option_menu_get_menu";
end;

define C-function gtk-option-menu-set-menu
  input parameter arg1 :: <GtkOptionMenu>;
  input parameter arg2 :: <GtkWidget>;
  c-name: "gtk_option_menu_set_menu";
end;

define C-function gtk-option-menu-remove-menu
  input parameter arg1 :: <GtkOptionMenu>;
  c-name: "gtk_option_menu_remove_menu";
end;

define C-function gtk-option-menu-get-history
  input parameter arg1 :: <GtkOptionMenu>;
  result res :: <gint>;
  c-name: "gtk_option_menu_get_history";
end;

define C-function gtk-option-menu-set-history
  input parameter arg1 :: <GtkOptionMenu>;
  input parameter arg2 :: <guint>;
  c-name: "gtk_option_menu_set_history";
end;

define C-struct <_GtkOldEditable>
  slot GtkOldEditable-widget :: <_GtkWidget>;
  slot GtkOldEditable-current-pos :: <C-unsigned-int>;
  slot GtkOldEditable-selection-start-pos :: <C-unsigned-int>;
  slot GtkOldEditable-selection-end-pos :: <C-unsigned-int>;
  bitfield slot GtkOldEditable-has-selection :: <C-int>, width: 1;
  bitfield slot GtkOldEditable-editable :: <C-int>, width: 1;
  bitfield slot GtkOldEditable-visible :: <C-int>, width: 1;
  slot GtkOldEditable-clipboard-text :: <gchar*>;
end;

define C-pointer-type <GtkOldEditable> => <_GtkOldEditable>;

define constant <anonymous-7402> = <C-function-pointer>;
define constant <anonymous-7403> = <C-function-pointer>;
define constant <anonymous-7404> = <C-function-pointer>;
define constant <anonymous-7405> = <C-function-pointer>;
define constant <anonymous-7406> = <C-function-pointer>;
define constant <anonymous-7407> = <C-function-pointer>;
define constant <anonymous-7408> = <C-function-pointer>;
define constant <anonymous-7409> = <C-function-pointer>;
define constant <anonymous-7410> = <C-function-pointer>;
define constant <anonymous-7411> = <C-function-pointer>;
define constant <anonymous-7412> = <C-function-pointer>;
define constant <anonymous-7413> = <C-function-pointer>;
define constant <anonymous-7414> = <C-function-pointer>;
define constant <anonymous-7415> = <C-function-pointer>;
define constant <anonymous-7416> = <C-function-pointer>;
define constant <anonymous-7417> = <C-function-pointer>;
define constant <anonymous-7418> = <C-function-pointer>;
define C-struct <_GtkOldEditableClass>
  slot GtkOldEditableClass-parent-class :: <_GtkWidgetClass>;
  slot GtkOldEditableClass-activate :: <anonymous-7402>;
  slot GtkOldEditableClass-set-editable :: <anonymous-7403>;
  slot GtkOldEditableClass-move-cursor :: <anonymous-7404>;
  slot GtkOldEditableClass-move-word :: <anonymous-7405>;
  slot GtkOldEditableClass-move-page :: <anonymous-7406>;
  slot GtkOldEditableClass-move-to-row :: <anonymous-7407>;
  slot GtkOldEditableClass-move-to-column :: <anonymous-7408>;
  slot GtkOldEditableClass-kill-char :: <anonymous-7409>;
  slot GtkOldEditableClass-kill-word :: <anonymous-7410>;
  slot GtkOldEditableClass-kill-line :: <anonymous-7411>;
  slot GtkOldEditableClass-cut-clipboard :: <anonymous-7412>;
  slot GtkOldEditableClass-copy-clipboard :: <anonymous-7413>;
  slot GtkOldEditableClass-paste-clipboard :: <anonymous-7414>;
  slot GtkOldEditableClass-update-text :: <anonymous-7415>;
  slot GtkOldEditableClass-get-chars :: <anonymous-7416>;
  slot GtkOldEditableClass-set-selection :: <anonymous-7417>;
  slot GtkOldEditableClass-set-position :: <anonymous-7418>;
end;

define C-pointer-type <GtkOldEditableClass> => <_GtkOldEditableClass>;

define constant <anonymous-7398> = <C-function-pointer>;
define constant <GtkTextFunction> = <anonymous-7398>;

define C-function gtk-old-editable-get-type
  result res :: <GtkType>;
  c-name: "gtk_old_editable_get_type";
end;

define C-function gtk-old-editable-claim-selection
  input parameter arg1 :: <GtkOldEditable>;
  input parameter arg2 :: <gboolean>;
  input parameter arg3 :: <guint32>;
  c-name: "gtk_old_editable_claim_selection";
end;

define C-function gtk-old-editable-changed
  input parameter arg1 :: <GtkOldEditable>;
  c-name: "gtk_old_editable_changed";
end;

define constant <GtkNotebookTab> = <C-int>;
define constant $GTK-NOTEBOOK-TAB-FIRST = 0;
define constant $GTK-NOTEBOOK-TAB-LAST = 1;

define C-struct <_GtkNotebookPage>
end;

define C-pointer-type <GtkNotebookPage> => <_GtkNotebookPage>;

define C-subtype <_GtkNotebook> (<_GtkContainer>, <_AtkImplementorIface>) end;
define constant <GtkNotebook> = <_GtkNotebook>;

define constant <anonymous-7338> = <C-function-pointer>;
define constant <anonymous-7339> = <C-function-pointer>;
define constant <anonymous-7340> = <C-function-pointer>;
define constant <anonymous-7341> = <C-function-pointer>;
define constant <anonymous-7342> = <C-function-pointer>;
define constant <anonymous-7343> = <C-function-pointer>;
define constant <anonymous-7344> = <C-function-pointer>;
define constant <anonymous-7345> = <C-function-pointer>;
define constant <anonymous-7346> = <C-function-pointer>;
define C-struct <_GtkNotebookClass>
  slot GtkNotebookClass-parent-class :: <_GtkContainerClass>;
  slot GtkNotebookClass-switch-page :: <anonymous-7338>;
  slot GtkNotebookClass-select-page :: <anonymous-7339>;
  slot GtkNotebookClass-focus-tab :: <anonymous-7340>;
  slot GtkNotebookClass-change-current-page :: <anonymous-7341>;
  slot GtkNotebookClass-move-focus-out :: <anonymous-7342>;
  slot GtkNotebookClass-reorder-tab :: <anonymous-7343>;
  slot GtkNotebookClass-insert-page :: <anonymous-7344>;
  slot GtkNotebookClass-create-window :: <anonymous-7345>;
  slot GtkNotebookClass-_gtk-reserved1 :: <anonymous-7346>;
end;

define C-pointer-type <GtkNotebookClass> => <_GtkNotebookClass>;

define constant <anonymous-7347> = <C-function-pointer>;
define constant <GtkNotebookWindowCreationFunc> = <anonymous-7347>;

define C-function gtk-notebook-get-type
  result res :: <GType>;
  c-name: "gtk_notebook_get_type";
end;

define C-function gtk-notebook-new
  result res :: <GtkWidget>;
  c-name: "gtk_notebook_new";
end;

define C-function gtk-notebook-append-page
  input parameter arg1 :: <GtkNotebook>;
  input parameter arg2 :: <GtkWidget>;
  input parameter arg3 :: <GtkWidget>;
  result res :: <gint>;
  c-name: "gtk_notebook_append_page";
end;

define C-function gtk-notebook-append-page-menu
  input parameter arg1 :: <GtkNotebook>;
  input parameter arg2 :: <GtkWidget>;
  input parameter arg3 :: <GtkWidget>;
  input parameter arg4 :: <GtkWidget>;
  result res :: <gint>;
  c-name: "gtk_notebook_append_page_menu";
end;

define C-function gtk-notebook-prepend-page
  input parameter arg1 :: <GtkNotebook>;
  input parameter arg2 :: <GtkWidget>;
  input parameter arg3 :: <GtkWidget>;
  result res :: <gint>;
  c-name: "gtk_notebook_prepend_page";
end;

define C-function gtk-notebook-prepend-page-menu
  input parameter arg1 :: <GtkNotebook>;
  input parameter arg2 :: <GtkWidget>;
  input parameter arg3 :: <GtkWidget>;
  input parameter arg4 :: <GtkWidget>;
  result res :: <gint>;
  c-name: "gtk_notebook_prepend_page_menu";
end;

define C-function gtk-notebook-insert-page
  input parameter arg1 :: <GtkNotebook>;
  input parameter arg2 :: <GtkWidget>;
  input parameter arg3 :: <GtkWidget>;
  input parameter arg4 :: <gint>;
  result res :: <gint>;
  c-name: "gtk_notebook_insert_page";
end;

define C-function gtk-notebook-insert-page-menu
  input parameter arg1 :: <GtkNotebook>;
  input parameter arg2 :: <GtkWidget>;
  input parameter arg3 :: <GtkWidget>;
  input parameter arg4 :: <GtkWidget>;
  input parameter arg5 :: <gint>;
  result res :: <gint>;
  c-name: "gtk_notebook_insert_page_menu";
end;

define C-function gtk-notebook-remove-page
  input parameter arg1 :: <GtkNotebook>;
  input parameter arg2 :: <gint>;
  c-name: "gtk_notebook_remove_page";
end;

define C-function gtk-notebook-set-window-creation-hook
  input parameter arg1 :: <GtkNotebookWindowCreationFunc>;
  input parameter arg2 :: <gpointer>;
  input parameter arg3 :: <GDestroyNotify>;
  c-name: "gtk_notebook_set_window_creation_hook";
end;

define C-function gtk-notebook-set-group-id
  input parameter arg1 :: <GtkNotebook>;
  input parameter arg2 :: <gint>;
  c-name: "gtk_notebook_set_group_id";
end;

define C-function gtk-notebook-get-group-id
  input parameter arg1 :: <GtkNotebook>;
  result res :: <gint>;
  c-name: "gtk_notebook_get_group_id";
end;

define C-function gtk-notebook-set-group
  input parameter arg1 :: <GtkNotebook>;
  input parameter arg2 :: <gpointer>;
  c-name: "gtk_notebook_set_group";
end;

define C-function gtk-notebook-get-group
  input parameter arg1 :: <GtkNotebook>;
  result res :: <gpointer>;
  c-name: "gtk_notebook_get_group";
end;

define C-function gtk-notebook-get-current-page
  input parameter arg1 :: <GtkNotebook>;
  result res :: <gint>;
  c-name: "gtk_notebook_get_current_page";
end;

define C-function gtk-notebook-get-nth-page
  input parameter arg1 :: <GtkNotebook>;
  input parameter arg2 :: <gint>;
  result res :: <GtkWidget>;
  c-name: "gtk_notebook_get_nth_page";
end;

define C-function gtk-notebook-get-n-pages
  input parameter arg1 :: <GtkNotebook>;
  result res :: <gint>;
  c-name: "gtk_notebook_get_n_pages";
end;

define C-function gtk-notebook-page-num
  input parameter arg1 :: <GtkNotebook>;
  input parameter arg2 :: <GtkWidget>;
  result res :: <gint>;
  c-name: "gtk_notebook_page_num";
end;

define C-function gtk-notebook-set-current-page
  input parameter arg1 :: <GtkNotebook>;
  input parameter arg2 :: <gint>;
  c-name: "gtk_notebook_set_current_page";
end;

define C-function gtk-notebook-next-page
  input parameter arg1 :: <GtkNotebook>;
  c-name: "gtk_notebook_next_page";
end;

define C-function gtk-notebook-prev-page
  input parameter arg1 :: <GtkNotebook>;
  c-name: "gtk_notebook_prev_page";
end;

define C-function gtk-notebook-set-show-border
  input parameter arg1 :: <GtkNotebook>;
  input parameter arg2 :: <gboolean>;
  c-name: "gtk_notebook_set_show_border";
end;

define C-function gtk-notebook-get-show-border
  input parameter arg1 :: <GtkNotebook>;
  result res :: <gboolean>;
  c-name: "gtk_notebook_get_show_border";
end;

define C-function gtk-notebook-set-show-tabs
  input parameter arg1 :: <GtkNotebook>;
  input parameter arg2 :: <gboolean>;
  c-name: "gtk_notebook_set_show_tabs";
end;

define C-function gtk-notebook-get-show-tabs
  input parameter arg1 :: <GtkNotebook>;
  result res :: <gboolean>;
  c-name: "gtk_notebook_get_show_tabs";
end;

define C-function gtk-notebook-set-tab-pos
  input parameter arg1 :: <GtkNotebook>;
  input parameter arg2 :: <GtkPositionType>;
  c-name: "gtk_notebook_set_tab_pos";
end;

define C-function gtk-notebook-get-tab-pos
  input parameter arg1 :: <GtkNotebook>;
  result res :: <GtkPositionType>;
  c-name: "gtk_notebook_get_tab_pos";
end;

define C-function gtk-notebook-set-homogeneous-tabs
  input parameter arg1 :: <GtkNotebook>;
  input parameter arg2 :: <gboolean>;
  c-name: "gtk_notebook_set_homogeneous_tabs";
end;

define C-function gtk-notebook-set-tab-border
  input parameter arg1 :: <GtkNotebook>;
  input parameter arg2 :: <guint>;
  c-name: "gtk_notebook_set_tab_border";
end;

define C-function gtk-notebook-set-tab-hborder
  input parameter arg1 :: <GtkNotebook>;
  input parameter arg2 :: <guint>;
  c-name: "gtk_notebook_set_tab_hborder";
end;

define C-function gtk-notebook-set-tab-vborder
  input parameter arg1 :: <GtkNotebook>;
  input parameter arg2 :: <guint>;
  c-name: "gtk_notebook_set_tab_vborder";
end;

define C-function gtk-notebook-set-scrollable
  input parameter arg1 :: <GtkNotebook>;
  input parameter arg2 :: <gboolean>;
  c-name: "gtk_notebook_set_scrollable";
end;

define C-function gtk-notebook-get-scrollable
  input parameter arg1 :: <GtkNotebook>;
  result res :: <gboolean>;
  c-name: "gtk_notebook_get_scrollable";
end;

define C-function gtk-notebook-popup-enable
  input parameter arg1 :: <GtkNotebook>;
  c-name: "gtk_notebook_popup_enable";
end;

define C-function gtk-notebook-popup-disable
  input parameter arg1 :: <GtkNotebook>;
  c-name: "gtk_notebook_popup_disable";
end;

define C-function gtk-notebook-get-tab-label
  input parameter arg1 :: <GtkNotebook>;
  input parameter arg2 :: <GtkWidget>;
  result res :: <GtkWidget>;
  c-name: "gtk_notebook_get_tab_label";
end;

define C-function gtk-notebook-set-tab-label
  input parameter arg1 :: <GtkNotebook>;
  input parameter arg2 :: <GtkWidget>;
  input parameter arg3 :: <GtkWidget>;
  c-name: "gtk_notebook_set_tab_label";
end;

define C-function gtk-notebook-set-tab-label-text
  input parameter arg1 :: <GtkNotebook>;
  input parameter arg2 :: <GtkWidget>;
  input parameter arg3 :: <gchar*>;
  c-name: "gtk_notebook_set_tab_label_text";
end;

define C-function gtk-notebook-get-tab-label-text
  input parameter arg1 :: <GtkNotebook>;
  input parameter arg2 :: <GtkWidget>;
  result res :: <gchar*>;
  c-name: "gtk_notebook_get_tab_label_text";
end;

define C-function gtk-notebook-get-menu-label
  input parameter arg1 :: <GtkNotebook>;
  input parameter arg2 :: <GtkWidget>;
  result res :: <GtkWidget>;
  c-name: "gtk_notebook_get_menu_label";
end;

define C-function gtk-notebook-set-menu-label
  input parameter arg1 :: <GtkNotebook>;
  input parameter arg2 :: <GtkWidget>;
  input parameter arg3 :: <GtkWidget>;
  c-name: "gtk_notebook_set_menu_label";
end;

define C-function gtk-notebook-set-menu-label-text
  input parameter arg1 :: <GtkNotebook>;
  input parameter arg2 :: <GtkWidget>;
  input parameter arg3 :: <gchar*>;
  c-name: "gtk_notebook_set_menu_label_text";
end;

define C-function gtk-notebook-get-menu-label-text
  input parameter arg1 :: <GtkNotebook>;
  input parameter arg2 :: <GtkWidget>;
  result res :: <gchar*>;
  c-name: "gtk_notebook_get_menu_label_text";
end;

define C-function gtk-notebook-query-tab-label-packing
  input parameter arg1 :: <GtkNotebook>;
  input parameter arg2 :: <GtkWidget>;
  input parameter arg3 :: <gboolean*>;
  input parameter arg4 :: <gboolean*>;
  input parameter arg5 :: <GtkPackType*>;
  c-name: "gtk_notebook_query_tab_label_packing";
end;

define C-function gtk-notebook-set-tab-label-packing
  input parameter arg1 :: <GtkNotebook>;
  input parameter arg2 :: <GtkWidget>;
  input parameter arg3 :: <gboolean>;
  input parameter arg4 :: <gboolean>;
  input parameter arg5 :: <GtkPackType>;
  c-name: "gtk_notebook_set_tab_label_packing";
end;

define C-function gtk-notebook-reorder-child
  input parameter arg1 :: <GtkNotebook>;
  input parameter arg2 :: <GtkWidget>;
  input parameter arg3 :: <gint>;
  c-name: "gtk_notebook_reorder_child";
end;

define C-function gtk-notebook-get-tab-reorderable
  input parameter arg1 :: <GtkNotebook>;
  input parameter arg2 :: <GtkWidget>;
  result res :: <gboolean>;
  c-name: "gtk_notebook_get_tab_reorderable";
end;

define C-function gtk-notebook-set-tab-reorderable
  input parameter arg1 :: <GtkNotebook>;
  input parameter arg2 :: <GtkWidget>;
  input parameter arg3 :: <gboolean>;
  c-name: "gtk_notebook_set_tab_reorderable";
end;

define C-function gtk-notebook-get-tab-detachable
  input parameter arg1 :: <GtkNotebook>;
  input parameter arg2 :: <GtkWidget>;
  result res :: <gboolean>;
  c-name: "gtk_notebook_get_tab_detachable";
end;

define C-function gtk-notebook-set-tab-detachable
  input parameter arg1 :: <GtkNotebook>;
  input parameter arg2 :: <GtkWidget>;
  input parameter arg3 :: <gboolean>;
  c-name: "gtk_notebook_set_tab_detachable";
end;

define constant gtk-notebook-current-page = gtk-notebook-get-current-page;

define constant gtk-notebook-set-page = gtk-notebook-set-current-page;

define constant <anonymous-7319> = <C-function-pointer>;
define constant <GtkModuleInitFunc> = <anonymous-7319>;

define constant <anonymous-7320> = <C-function-pointer>;
define constant <GtkModuleDisplayInitFunc> = <anonymous-7320>;

define constant <GtkMessageType> = <C-int>;
define constant $GTK-MESSAGE-INFO = 0;
define constant $GTK-MESSAGE-WARNING = 1;
define constant $GTK-MESSAGE-QUESTION = 2;
define constant $GTK-MESSAGE-ERROR = 3;
define constant $GTK-MESSAGE-OTHER = 4;

define constant <GtkButtonsType> = <C-int>;
define constant $GTK-BUTTONS-NONE = 0;
define constant $GTK-BUTTONS-OK = 1;
define constant $GTK-BUTTONS-CLOSE = 2;
define constant $GTK-BUTTONS-CANCEL = 3;
define constant $GTK-BUTTONS-YES-NO = 4;
define constant $GTK-BUTTONS-OK-CANCEL = 5;

define C-subtype <_GtkMessageDialog> (<_GtkDialog>, <_AtkImplementorIface>) end;
define constant <GtkMessageDialog> = <_GtkMessageDialog>;

define constant <anonymous-7304> = <C-function-pointer>;
define constant <anonymous-7305> = <C-function-pointer>;
define constant <anonymous-7306> = <C-function-pointer>;
define constant <anonymous-7307> = <C-function-pointer>;
define C-struct <_GtkMessageDialogClass>
  slot GtkMessageDialogClass-parent-class :: <_GtkDialogClass>;
  slot GtkMessageDialogClass-_gtk-reserved1 :: <anonymous-7304>;
  slot GtkMessageDialogClass-_gtk-reserved2 :: <anonymous-7305>;
  slot GtkMessageDialogClass-_gtk-reserved3 :: <anonymous-7306>;
  slot GtkMessageDialogClass-_gtk-reserved4 :: <anonymous-7307>;
end;

define C-pointer-type <GtkMessageDialogClass> => <_GtkMessageDialogClass>;

define C-function gtk-message-dialog-get-type
  result res :: <GType>;
  c-name: "gtk_message_dialog_get_type";
end;

define C-function gtk-message-dialog-new
  input parameter arg1 :: <GtkWindow>;
  input parameter arg2 :: <GtkDialogFlags>;
  input parameter arg3 :: <GtkMessageType>;
  input parameter arg4 :: <GtkButtonsType>;
  input parameter arg5 :: <gchar*>;
  result res :: <GtkWidget>;
  c-name: "gtk_message_dialog_new";
end;

define C-function gtk-message-dialog-new-with-markup
  input parameter arg1 :: <GtkWindow>;
  input parameter arg2 :: <GtkDialogFlags>;
  input parameter arg3 :: <GtkMessageType>;
  input parameter arg4 :: <GtkButtonsType>;
  input parameter arg5 :: <gchar*>;
  result res :: <GtkWidget>;
  c-name: "gtk_message_dialog_new_with_markup";
end;

define C-function gtk-message-dialog-set-image
  input parameter arg1 :: <GtkMessageDialog>;
  input parameter arg2 :: <GtkWidget>;
  c-name: "gtk_message_dialog_set_image";
end;

define C-function gtk-message-dialog-set-markup
  input parameter arg1 :: <GtkMessageDialog>;
  input parameter arg2 :: <gchar*>;
  c-name: "gtk_message_dialog_set_markup";
end;

define C-function gtk-message-dialog-format-secondary-text
  input parameter arg1 :: <GtkMessageDialog>;
  input parameter arg2 :: <gchar*>;
  c-name: "gtk_message_dialog_format_secondary_text";
end;

define C-function gtk-message-dialog-format-secondary-markup
  input parameter arg1 :: <GtkMessageDialog>;
  input parameter arg2 :: <gchar*>;
  c-name: "gtk_message_dialog_format_secondary_markup";
end;

define C-struct <_GtkMenuToolButtonPrivate>
end;

define C-pointer-type <GtkMenuToolButtonPrivate> => <_GtkMenuToolButtonPrivate>;

define C-subtype <_GtkMenuToolButton> (<_GtkToolButton>, <_AtkImplementorIface>) end;
define constant <GtkMenuToolButton> = <_GtkMenuToolButton>;

define constant <anonymous-7289> = <C-function-pointer>;
define constant <anonymous-7290> = <C-function-pointer>;
define constant <anonymous-7291> = <C-function-pointer>;
define constant <anonymous-7292> = <C-function-pointer>;
define constant <anonymous-7293> = <C-function-pointer>;
define C-struct <_GtkMenuToolButtonClass>
  slot GtkMenuToolButtonClass-parent-class :: <_GtkToolButtonClass>;
  slot GtkMenuToolButtonClass-show-menu :: <anonymous-7289>;
  slot GtkMenuToolButtonClass-_gtk-reserved1 :: <anonymous-7290>;
  slot GtkMenuToolButtonClass-_gtk-reserved2 :: <anonymous-7291>;
  slot GtkMenuToolButtonClass-_gtk-reserved3 :: <anonymous-7292>;
  slot GtkMenuToolButtonClass-_gtk-reserved4 :: <anonymous-7293>;
end;

define C-pointer-type <GtkMenuToolButtonClass> => <_GtkMenuToolButtonClass>;

define C-function gtk-menu-tool-button-get-type
  result res :: <GType>;
  c-name: "gtk_menu_tool_button_get_type";
end;

define C-function gtk-menu-tool-button-new
  input parameter arg1 :: <GtkWidget>;
  input parameter arg2 :: <gchar*>;
  result res :: <GtkToolItem>;
  c-name: "gtk_menu_tool_button_new";
end;

define C-function gtk-menu-tool-button-new-from-stock
  input parameter arg1 :: <gchar*>;
  result res :: <GtkToolItem>;
  c-name: "gtk_menu_tool_button_new_from_stock";
end;

define C-function gtk-menu-tool-button-set-menu
  input parameter arg1 :: <GtkMenuToolButton>;
  input parameter arg2 :: <GtkWidget>;
  c-name: "gtk_menu_tool_button_set_menu";
end;

define C-function gtk-menu-tool-button-get-menu
  input parameter arg1 :: <GtkMenuToolButton>;
  result res :: <GtkWidget>;
  c-name: "gtk_menu_tool_button_get_menu";
end;

define C-function gtk-menu-tool-button-set-arrow-tooltip
  input parameter arg1 :: <GtkMenuToolButton>;
  input parameter arg2 :: <GtkTooltips>;
  input parameter arg3 :: <gchar*>;
  input parameter arg4 :: <gchar*>;
  c-name: "gtk_menu_tool_button_set_arrow_tooltip";
end;

define C-function gtk-menu-tool-button-set-arrow-tooltip-text
  input parameter arg1 :: <GtkMenuToolButton>;
  input parameter arg2 :: <gchar*>;
  c-name: "gtk_menu_tool_button_set_arrow_tooltip_text";
end;

define C-function gtk-menu-tool-button-set-arrow-tooltip-markup
  input parameter arg1 :: <GtkMenuToolButton>;
  input parameter arg2 :: <gchar*>;
  c-name: "gtk_menu_tool_button_set_arrow_tooltip_markup";
end;

define C-subtype <_GtkMenuBar> (<_GtkMenuShell>, <_AtkImplementorIface>) end;
define constant <GtkMenuBar> = <_GtkMenuBar>;

define constant <anonymous-7207> = <C-function-pointer>;
define constant <anonymous-7208> = <C-function-pointer>;
define constant <anonymous-7209> = <C-function-pointer>;
define constant <anonymous-7210> = <C-function-pointer>;
define C-struct <_GtkMenuBarClass>
  slot GtkMenuBarClass-parent-class :: <_GtkMenuShellClass>;
  slot GtkMenuBarClass-_gtk-reserved1 :: <anonymous-7207>;
  slot GtkMenuBarClass-_gtk-reserved2 :: <anonymous-7208>;
  slot GtkMenuBarClass-_gtk-reserved3 :: <anonymous-7209>;
  slot GtkMenuBarClass-_gtk-reserved4 :: <anonymous-7210>;
end;

define C-pointer-type <GtkMenuBarClass> => <_GtkMenuBarClass>;

define C-function gtk-menu-bar-get-type
  result res :: <GType>;
  c-name: "gtk_menu_bar_get_type";
end;

define C-function gtk-menu-bar-new
  result res :: <GtkWidget>;
  c-name: "gtk_menu_bar_new";
end;

define C-function gtk-menu-bar-get-pack-direction
  input parameter arg1 :: <GtkMenuBar>;
  result res :: <GtkPackDirection>;
  c-name: "gtk_menu_bar_get_pack_direction";
end;

define C-function gtk-menu-bar-set-pack-direction
  input parameter arg1 :: <GtkMenuBar>;
  input parameter arg2 :: <GtkPackDirection>;
  c-name: "gtk_menu_bar_set_pack_direction";
end;

define C-function gtk-menu-bar-get-child-pack-direction
  input parameter arg1 :: <GtkMenuBar>;
  result res :: <GtkPackDirection>;
  c-name: "gtk_menu_bar_get_child_pack_direction";
end;

define C-function gtk-menu-bar-set-child-pack-direction
  input parameter arg1 :: <GtkMenuBar>;
  input parameter arg2 :: <GtkPackDirection>;
  c-name: "gtk_menu_bar_set_child_pack_direction";
end;

define C-subtype <_GtkListItem> (<_GtkItem>, <_AtkImplementorIface>) end;
define constant <GtkListItem> = <_GtkListItem>;

define constant <anonymous-7112> = <C-function-pointer>;
define constant <anonymous-7113> = <C-function-pointer>;
define constant <anonymous-7114> = <C-function-pointer>;
define constant <anonymous-7115> = <C-function-pointer>;
define constant <anonymous-7116> = <C-function-pointer>;
define constant <anonymous-7117> = <C-function-pointer>;
define constant <anonymous-7118> = <C-function-pointer>;
define constant <anonymous-7119> = <C-function-pointer>;
define constant <anonymous-7120> = <C-function-pointer>;
define constant <anonymous-7121> = <C-function-pointer>;
define C-struct <_GtkListItemClass>
  slot GtkListItemClass-parent-class :: <_GtkItemClass>;
  slot GtkListItemClass-toggle-focus-row :: <anonymous-7112>;
  slot GtkListItemClass-select-all :: <anonymous-7113>;
  slot GtkListItemClass-unselect-all :: <anonymous-7114>;
  slot GtkListItemClass-undo-selection :: <anonymous-7115>;
  slot GtkListItemClass-start-selection :: <anonymous-7116>;
  slot GtkListItemClass-end-selection :: <anonymous-7117>;
  slot GtkListItemClass-extend-selection :: <anonymous-7118>;
  slot GtkListItemClass-scroll-horizontal :: <anonymous-7119>;
  slot GtkListItemClass-scroll-vertical :: <anonymous-7120>;
  slot GtkListItemClass-toggle-add-mode :: <anonymous-7121>;
end;

define C-pointer-type <GtkListItemClass> => <_GtkListItemClass>;

define C-function gtk-list-item-get-type
  result res :: <GtkType>;
  c-name: "gtk_list_item_get_type";
end;

define C-function gtk-list-item-new
  result res :: <GtkWidget>;
  c-name: "gtk_list_item_new";
end;

define C-function gtk-list-item-new-with-label
  input parameter arg1 :: <gchar*>;
  result res :: <GtkWidget>;
  c-name: "gtk_list_item_new_with_label";
end;

define C-function gtk-list-item-select
  input parameter arg1 :: <GtkListItem>;
  c-name: "gtk_list_item_select";
end;

define C-function gtk-list-item-deselect
  input parameter arg1 :: <GtkListItem>;
  c-name: "gtk_list_item_deselect";
end;

define C-subtype <_GtkList> (<_GtkContainer>, <_AtkImplementorIface>) end;
define constant <GtkList> = <_GtkList>;

define constant <anonymous-7130> = <C-function-pointer>;
define constant <anonymous-7131> = <C-function-pointer>;
define constant <anonymous-7132> = <C-function-pointer>;
define C-struct <_GtkListClass>
  slot GtkListClass-parent-class :: <_GtkContainerClass>;
  slot GtkListClass-selection-changed :: <anonymous-7130>;
  slot GtkListClass-select-child :: <anonymous-7131>;
  slot GtkListClass-unselect-child :: <anonymous-7132>;
end;

define C-pointer-type <GtkListClass> => <_GtkListClass>;

define C-function gtk-list-get-type
  result res :: <GtkType>;
  c-name: "gtk_list_get_type";
end;

define C-function gtk-list-new
  result res :: <GtkWidget>;
  c-name: "gtk_list_new";
end;

define C-function gtk-list-insert-items
  input parameter arg1 :: <GtkList>;
  input parameter arg2 :: <GList>;
  input parameter arg3 :: <gint>;
  c-name: "gtk_list_insert_items";
end;

define C-function gtk-list-append-items
  input parameter arg1 :: <GtkList>;
  input parameter arg2 :: <GList>;
  c-name: "gtk_list_append_items";
end;

define C-function gtk-list-prepend-items
  input parameter arg1 :: <GtkList>;
  input parameter arg2 :: <GList>;
  c-name: "gtk_list_prepend_items";
end;

define C-function gtk-list-remove-items
  input parameter arg1 :: <GtkList>;
  input parameter arg2 :: <GList>;
  c-name: "gtk_list_remove_items";
end;

define C-function gtk-list-remove-items-no-unref
  input parameter arg1 :: <GtkList>;
  input parameter arg2 :: <GList>;
  c-name: "gtk_list_remove_items_no_unref";
end;

define C-function gtk-list-clear-items
  input parameter arg1 :: <GtkList>;
  input parameter arg2 :: <gint>;
  input parameter arg3 :: <gint>;
  c-name: "gtk_list_clear_items";
end;

define C-function gtk-list-select-item
  input parameter arg1 :: <GtkList>;
  input parameter arg2 :: <gint>;
  c-name: "gtk_list_select_item";
end;

define C-function gtk-list-unselect-item
  input parameter arg1 :: <GtkList>;
  input parameter arg2 :: <gint>;
  c-name: "gtk_list_unselect_item";
end;

define C-function gtk-list-select-child
  input parameter arg1 :: <GtkList>;
  input parameter arg2 :: <GtkWidget>;
  c-name: "gtk_list_select_child";
end;

define C-function gtk-list-unselect-child
  input parameter arg1 :: <GtkList>;
  input parameter arg2 :: <GtkWidget>;
  c-name: "gtk_list_unselect_child";
end;

define C-function gtk-list-child-position
  input parameter arg1 :: <GtkList>;
  input parameter arg2 :: <GtkWidget>;
  result res :: <gint>;
  c-name: "gtk_list_child_position";
end;

define C-function gtk-list-set-selection-mode
  input parameter arg1 :: <GtkList>;
  input parameter arg2 :: <GtkSelectionMode>;
  c-name: "gtk_list_set_selection_mode";
end;

define C-function gtk-list-extend-selection
  input parameter arg1 :: <GtkList>;
  input parameter arg2 :: <GtkScrollType>;
  input parameter arg3 :: <gfloat>;
  input parameter arg4 :: <gboolean>;
  c-name: "gtk_list_extend_selection";
end;

define C-function gtk-list-start-selection
  input parameter arg1 :: <GtkList>;
  c-name: "gtk_list_start_selection";
end;

define C-function gtk-list-end-selection
  input parameter arg1 :: <GtkList>;
  c-name: "gtk_list_end_selection";
end;

define C-function gtk-list-select-all
  input parameter arg1 :: <GtkList>;
  c-name: "gtk_list_select_all";
end;

define C-function gtk-list-unselect-all
  input parameter arg1 :: <GtkList>;
  c-name: "gtk_list_unselect_all";
end;

define C-function gtk-list-scroll-horizontal
  input parameter arg1 :: <GtkList>;
  input parameter arg2 :: <GtkScrollType>;
  input parameter arg3 :: <gfloat>;
  c-name: "gtk_list_scroll_horizontal";
end;

define C-function gtk-list-scroll-vertical
  input parameter arg1 :: <GtkList>;
  input parameter arg2 :: <GtkScrollType>;
  input parameter arg3 :: <gfloat>;
  c-name: "gtk_list_scroll_vertical";
end;

define C-function gtk-list-toggle-add-mode
  input parameter arg1 :: <GtkList>;
  c-name: "gtk_list_toggle_add_mode";
end;

define C-function gtk-list-toggle-focus-row
  input parameter arg1 :: <GtkList>;
  c-name: "gtk_list_toggle_focus_row";
end;

define C-function gtk-list-toggle-row
  input parameter arg1 :: <GtkList>;
  input parameter arg2 :: <GtkWidget>;
  c-name: "gtk_list_toggle_row";
end;

define C-function gtk-list-undo-selection
  input parameter arg1 :: <GtkList>;
  c-name: "gtk_list_undo_selection";
end;

define C-function gtk-list-end-drag-selection
  input parameter arg1 :: <GtkList>;
  c-name: "gtk_list_end_drag_selection";
end;

define C-struct <_GtkLinkButtonPrivate>
end;

define C-pointer-type <GtkLinkButtonPrivate> => <_GtkLinkButtonPrivate>;

define C-struct <_GtkLinkButton>
  slot GtkLinkButton-parent-instance :: <_GtkButton>;
  slot GtkLinkButton-priv :: <GtkLinkButtonPrivate>;
end;

define C-pointer-type <GtkLinkButton> => <_GtkLinkButton>;

define constant <anonymous-7102> = <C-function-pointer>;
define constant <anonymous-7103> = <C-function-pointer>;
define constant <anonymous-7104> = <C-function-pointer>;
define constant <anonymous-7105> = <C-function-pointer>;
define C-struct <_GtkLinkButtonClass>
  slot GtkLinkButtonClass-parent-class :: <_GtkButtonClass>;
  slot GtkLinkButtonClass-_gtk-padding1 :: <anonymous-7102>;
  slot GtkLinkButtonClass-_gtk-padding2 :: <anonymous-7103>;
  slot GtkLinkButtonClass-_gtk-padding3 :: <anonymous-7104>;
  slot GtkLinkButtonClass-_gtk-padding4 :: <anonymous-7105>;
end;

define C-pointer-type <GtkLinkButtonClass> => <_GtkLinkButtonClass>;

define constant <anonymous-7101> = <C-function-pointer>;
define constant <GtkLinkButtonUriFunc> = <anonymous-7101>;

define C-function gtk-link-button-get-type
  result res :: <GType>;
  c-name: "gtk_link_button_get_type";
end;

define C-function gtk-link-button-new
  input parameter arg1 :: <gchar*>;
  result res :: <GtkWidget>;
  c-name: "gtk_link_button_new";
end;

define C-function gtk-link-button-new-with-label
  input parameter arg1 :: <gchar*>;
  input parameter arg2 :: <gchar*>;
  result res :: <GtkWidget>;
  c-name: "gtk_link_button_new_with_label";
end;

define C-function gtk-link-button-get-uri
  input parameter arg1 :: <GtkLinkButton>;
  result res :: <gchar*>;
  c-name: "gtk_link_button_get_uri";
end;

define C-function gtk-link-button-set-uri
  input parameter arg1 :: <GtkLinkButton>;
  input parameter arg2 :: <gchar*>;
  c-name: "gtk_link_button_set_uri";
end;

define C-function gtk-link-button-set-uri-hook
  input parameter arg1 :: <GtkLinkButtonUriFunc>;
  input parameter arg2 :: <gpointer>;
  input parameter arg3 :: <GDestroyNotify>;
  result res :: <GtkLinkButtonUriFunc>;
  c-name: "gtk_link_button_set_uri_hook";
end;

define C-subtype <_GtkLayout> (<_GtkContainer>, <_AtkImplementorIface>) end;
define constant <GtkLayout> = <_GtkLayout>;

define constant <anonymous-7084> = <C-function-pointer>;
define constant <anonymous-7085> = <C-function-pointer>;
define constant <anonymous-7086> = <C-function-pointer>;
define constant <anonymous-7087> = <C-function-pointer>;
define constant <anonymous-7088> = <C-function-pointer>;
define C-struct <_GtkLayoutClass>
  slot GtkLayoutClass-parent-class :: <_GtkContainerClass>;
  slot GtkLayoutClass-set-scroll-adjustments :: <anonymous-7084>;
  slot GtkLayoutClass-_gtk-reserved1 :: <anonymous-7085>;
  slot GtkLayoutClass-_gtk-reserved2 :: <anonymous-7086>;
  slot GtkLayoutClass-_gtk-reserved3 :: <anonymous-7087>;
  slot GtkLayoutClass-_gtk-reserved4 :: <anonymous-7088>;
end;

define C-pointer-type <GtkLayoutClass> => <_GtkLayoutClass>;

define C-function gtk-layout-get-type
  result res :: <GType>;
  c-name: "gtk_layout_get_type";
end;

define C-function gtk-layout-new
  input parameter arg1 :: <GtkAdjustment>;
  input parameter arg2 :: <GtkAdjustment>;
  result res :: <GtkWidget>;
  c-name: "gtk_layout_new";
end;

define C-function gtk-layout-put
  input parameter arg1 :: <GtkLayout>;
  input parameter arg2 :: <GtkWidget>;
  input parameter arg3 :: <gint>;
  input parameter arg4 :: <gint>;
  c-name: "gtk_layout_put";
end;

define C-function gtk-layout-move
  input parameter arg1 :: <GtkLayout>;
  input parameter arg2 :: <GtkWidget>;
  input parameter arg3 :: <gint>;
  input parameter arg4 :: <gint>;
  c-name: "gtk_layout_move";
end;

define C-function gtk-layout-set-size
  input parameter arg1 :: <GtkLayout>;
  input parameter arg2 :: <guint>;
  input parameter arg3 :: <guint>;
  c-name: "gtk_layout_set_size";
end;

define C-function gtk-layout-get-size
  input parameter arg1 :: <GtkLayout>;
  input parameter arg2 :: <guint*>;
  input parameter arg3 :: <guint*>;
  c-name: "gtk_layout_get_size";
end;

define C-function gtk-layout-get-hadjustment
  input parameter arg1 :: <GtkLayout>;
  result res :: <GtkAdjustment>;
  c-name: "gtk_layout_get_hadjustment";
end;

define C-function gtk-layout-get-vadjustment
  input parameter arg1 :: <GtkLayout>;
  result res :: <GtkAdjustment>;
  c-name: "gtk_layout_get_vadjustment";
end;

define C-function gtk-layout-set-hadjustment
  input parameter arg1 :: <GtkLayout>;
  input parameter arg2 :: <GtkAdjustment>;
  c-name: "gtk_layout_set_hadjustment";
end;

define C-function gtk-layout-set-vadjustment
  input parameter arg1 :: <GtkLayout>;
  input parameter arg2 :: <GtkAdjustment>;
  c-name: "gtk_layout_set_vadjustment";
end;

define C-function gtk-layout-freeze
  input parameter arg1 :: <GtkLayout>;
  c-name: "gtk_layout_freeze";
end;

define C-function gtk-layout-thaw
  input parameter arg1 :: <GtkLayout>;
  c-name: "gtk_layout_thaw";
end;

define C-subtype <_GtkInvisible> (<_GtkWidget>, <_AtkImplementorIface>) end;
define constant <GtkInvisible> = <_GtkInvisible>;

define constant <anonymous-7075> = <C-function-pointer>;
define constant <anonymous-7076> = <C-function-pointer>;
define constant <anonymous-7077> = <C-function-pointer>;
define constant <anonymous-7078> = <C-function-pointer>;
define C-struct <_GtkInvisibleClass>
  slot GtkInvisibleClass-parent-class :: <_GtkWidgetClass>;
  slot GtkInvisibleClass-_gtk-reserved1 :: <anonymous-7075>;
  slot GtkInvisibleClass-_gtk-reserved2 :: <anonymous-7076>;
  slot GtkInvisibleClass-_gtk-reserved3 :: <anonymous-7077>;
  slot GtkInvisibleClass-_gtk-reserved4 :: <anonymous-7078>;
end;

define C-pointer-type <GtkInvisibleClass> => <_GtkInvisibleClass>;

define C-function gtk-invisible-get-type
  result res :: <GType>;
  c-name: "gtk_invisible_get_type";
end;

define C-function gtk-invisible-new
  result res :: <GtkWidget>;
  c-name: "gtk_invisible_new";
end;

define C-function gtk-invisible-new-for-screen
  input parameter arg1 :: <GdkScreen>;
  result res :: <GtkWidget>;
  c-name: "gtk_invisible_new_for_screen";
end;

define C-function gtk-invisible-set-screen
  input parameter arg1 :: <GtkInvisible>;
  input parameter arg2 :: <GdkScreen>;
  c-name: "gtk_invisible_set_screen";
end;

define C-function gtk-invisible-get-screen
  input parameter arg1 :: <GtkInvisible>;
  result res :: <GdkScreen>;
  c-name: "gtk_invisible_get_screen";
end;

define constant <GtkWidget<@7>> = <GtkWidget*>;
define C-subtype <_GtkInputDialog> (<_GtkDialog>, <_AtkImplementorIface>) end;
define constant <GtkInputDialog> = <_GtkInputDialog>;

define constant <anonymous-7067> = <C-function-pointer>;
define constant <anonymous-7068> = <C-function-pointer>;
define constant <anonymous-7069> = <C-function-pointer>;
define constant <anonymous-7070> = <C-function-pointer>;
define constant <anonymous-7071> = <C-function-pointer>;
define constant <anonymous-7072> = <C-function-pointer>;
define C-struct <_GtkInputDialogClass>
  slot GtkInputDialogClass-parent-class :: <_GtkDialogClass>;
  slot GtkInputDialogClass-enable-device :: <anonymous-7067>;
  slot GtkInputDialogClass-disable-device :: <anonymous-7068>;
  slot GtkInputDialogClass-_gtk-reserved1 :: <anonymous-7069>;
  slot GtkInputDialogClass-_gtk-reserved2 :: <anonymous-7070>;
  slot GtkInputDialogClass-_gtk-reserved3 :: <anonymous-7071>;
  slot GtkInputDialogClass-_gtk-reserved4 :: <anonymous-7072>;
end;

define C-pointer-type <GtkInputDialogClass> => <_GtkInputDialogClass>;

define C-function gtk-input-dialog-get-type
  result res :: <GType>;
  c-name: "gtk_input_dialog_get_type";
end;

define C-function gtk-input-dialog-new
  result res :: <GtkWidget>;
  c-name: "gtk_input_dialog_new";
end;

define C-struct <_GtkIMMulticontextPrivate>
end;

define C-pointer-type <GtkIMMulticontextPrivate> => <_GtkIMMulticontextPrivate>;

define C-subtype <_GtkIMMulticontext> (<_GtkIMContext>) end;
define constant <GtkIMMulticontext> = <_GtkIMMulticontext>;

define constant <anonymous-7060> = <C-function-pointer>;
define constant <anonymous-7061> = <C-function-pointer>;
define constant <anonymous-7062> = <C-function-pointer>;
define constant <anonymous-7063> = <C-function-pointer>;
define C-struct <_GtkIMMulticontextClass>
  slot GtkIMMulticontextClass-parent-class :: <_GtkIMContextClass>;
  slot GtkIMMulticontextClass-_gtk-reserved1 :: <anonymous-7060>;
  slot GtkIMMulticontextClass-_gtk-reserved2 :: <anonymous-7061>;
  slot GtkIMMulticontextClass-_gtk-reserved3 :: <anonymous-7062>;
  slot GtkIMMulticontextClass-_gtk-reserved4 :: <anonymous-7063>;
end;

define C-pointer-type <GtkIMMulticontextClass> => <_GtkIMMulticontextClass>;

define C-function gtk-im-multicontext-get-type
  result res :: <GType>;
  c-name: "gtk_im_multicontext_get_type";
end;

define C-function gtk-im-multicontext-new
  result res :: <GtkIMContext>;
  c-name: "gtk_im_multicontext_new";
end;

define C-function gtk-im-multicontext-append-menuitems
  input parameter arg1 :: <GtkIMMulticontext>;
  input parameter arg2 :: <GtkMenuShell>;
  c-name: "gtk_im_multicontext_append_menuitems";
end;

define constant <guint<@8>> = <guint*>;
define C-subtype <_GtkIMContextSimple> (<_GtkIMContext>) end;
define constant <GtkIMContextSimple> = <_GtkIMContextSimple>;

define C-struct <_GtkIMContextSimpleClass>
  slot GtkIMContextSimpleClass-parent-class :: <_GtkIMContextClass>;
end;

define C-pointer-type <GtkIMContextSimpleClass> => <_GtkIMContextSimpleClass>;

define C-function gtk-im-context-simple-get-type
  result res :: <GType>;
  c-name: "gtk_im_context_simple_get_type";
end;

define C-function gtk-im-context-simple-new
  result res :: <GtkIMContext>;
  c-name: "gtk_im_context_simple_new";
end;

define C-function gtk-im-context-simple-add-table
  input parameter arg1 :: <GtkIMContextSimple>;
  input parameter arg2 :: <guint16*>;
  input parameter arg3 :: <gint>;
  input parameter arg4 :: <gint>;
  c-name: "gtk_im_context_simple_add_table";
end;

define constant $GTK-MAX-COMPOSE-LEN = 7;

define C-subtype <_GtkImageMenuItem> (<_GtkMenuItem>, <_AtkImplementorIface>) end;
define constant <GtkImageMenuItem> = <_GtkImageMenuItem>;

define C-struct <_GtkImageMenuItemClass>
  slot GtkImageMenuItemClass-parent-class :: <_GtkMenuItemClass>;
end;

define C-pointer-type <GtkImageMenuItemClass> => <_GtkImageMenuItemClass>;

define C-function gtk-image-menu-item-get-type
  result res :: <GType>;
  c-name: "gtk_image_menu_item_get_type";
end;

define C-function gtk-image-menu-item-new
  result res :: <GtkWidget>;
  c-name: "gtk_image_menu_item_new";
end;

define C-function gtk-image-menu-item-new-with-label
  input parameter arg1 :: <gchar*>;
  result res :: <GtkWidget>;
  c-name: "gtk_image_menu_item_new_with_label";
end;

define C-function gtk-image-menu-item-new-with-mnemonic
  input parameter arg1 :: <gchar*>;
  result res :: <GtkWidget>;
  c-name: "gtk_image_menu_item_new_with_mnemonic";
end;

define C-function gtk-image-menu-item-new-from-stock
  input parameter arg1 :: <gchar*>;
  input parameter arg2 :: <GtkAccelGroup>;
  result res :: <GtkWidget>;
  c-name: "gtk_image_menu_item_new_from_stock";
end;

define C-function gtk-image-menu-item-set-image
  input parameter arg1 :: <GtkImageMenuItem>;
  input parameter arg2 :: <GtkWidget>;
  c-name: "gtk_image_menu_item_set_image";
end;

define C-function gtk-image-menu-item-get-image
  input parameter arg1 :: <GtkImageMenuItem>;
  result res :: <GtkWidget>;
  c-name: "gtk_image_menu_item_get_image";
end;

define C-struct <_GtkIconViewPrivate>
end;

define C-pointer-type <GtkIconViewPrivate> => <_GtkIconViewPrivate>;

define C-subtype <_GtkIconView> (<_GtkContainer>, <_AtkImplementorIface>, <_GtkCellLayout>) end;
define constant <GtkIconView> = <_GtkIconView>;

define constant <anonymous-6982> = <C-function-pointer>;
define constant <anonymous-6983> = <C-function-pointer>;
define constant <anonymous-6984> = <C-function-pointer>;
define constant <anonymous-6985> = <C-function-pointer>;
define constant <anonymous-6986> = <C-function-pointer>;
define constant <anonymous-6987> = <C-function-pointer>;
define constant <anonymous-6988> = <C-function-pointer>;
define constant <anonymous-6989> = <C-function-pointer>;
define constant <anonymous-6990> = <C-function-pointer>;
define C-struct <_GtkIconViewClass>
  slot GtkIconViewClass-parent-class :: <_GtkContainerClass>;
  slot GtkIconViewClass-set-scroll-adjustments :: <anonymous-6982>;
  slot GtkIconViewClass-item-activated :: <anonymous-6983>;
  slot GtkIconViewClass-selection-changed :: <anonymous-6984>;
  slot GtkIconViewClass-select-all :: <anonymous-6985>;
  slot GtkIconViewClass-unselect-all :: <anonymous-6986>;
  slot GtkIconViewClass-select-cursor-item :: <anonymous-6987>;
  slot GtkIconViewClass-toggle-cursor-item :: <anonymous-6988>;
  slot GtkIconViewClass-move-cursor :: <anonymous-6989>;
  slot GtkIconViewClass-activate-cursor-item :: <anonymous-6990>;
end;

define C-pointer-type <GtkIconViewClass> => <_GtkIconViewClass>;

define constant <anonymous-6980> = <C-function-pointer>;
define constant <GtkIconViewForeachFunc> = <anonymous-6980>;

define constant <GtkIconViewDropPosition> = <C-int>;
define constant $GTK-ICON-VIEW-NO-DROP = 0;
define constant $GTK-ICON-VIEW-DROP-INTO = 1;
define constant $GTK-ICON-VIEW-DROP-LEFT = 2;
define constant $GTK-ICON-VIEW-DROP-RIGHT = 3;
define constant $GTK-ICON-VIEW-DROP-ABOVE = 4;
define constant $GTK-ICON-VIEW-DROP-BELOW = 5;

define C-function gtk-icon-view-get-type
  result res :: <GType>;
  c-name: "gtk_icon_view_get_type";
end;

define C-function gtk-icon-view-new
  result res :: <GtkWidget>;
  c-name: "gtk_icon_view_new";
end;

define C-function gtk-icon-view-new-with-model
  input parameter arg1 :: <GtkTreeModel>;
  result res :: <GtkWidget>;
  c-name: "gtk_icon_view_new_with_model";
end;

define C-function gtk-icon-view-set-model
  input parameter arg1 :: <GtkIconView>;
  input parameter arg2 :: <GtkTreeModel>;
  c-name: "gtk_icon_view_set_model";
end;

define C-function gtk-icon-view-get-model
  input parameter arg1 :: <GtkIconView>;
  result res :: <GtkTreeModel>;
  c-name: "gtk_icon_view_get_model";
end;

define C-function gtk-icon-view-set-text-column
  input parameter arg1 :: <GtkIconView>;
  input parameter arg2 :: <gint>;
  c-name: "gtk_icon_view_set_text_column";
end;

define C-function gtk-icon-view-get-text-column
  input parameter arg1 :: <GtkIconView>;
  result res :: <gint>;
  c-name: "gtk_icon_view_get_text_column";
end;

define C-function gtk-icon-view-set-markup-column
  input parameter arg1 :: <GtkIconView>;
  input parameter arg2 :: <gint>;
  c-name: "gtk_icon_view_set_markup_column";
end;

define C-function gtk-icon-view-get-markup-column
  input parameter arg1 :: <GtkIconView>;
  result res :: <gint>;
  c-name: "gtk_icon_view_get_markup_column";
end;

define C-function gtk-icon-view-set-pixbuf-column
  input parameter arg1 :: <GtkIconView>;
  input parameter arg2 :: <gint>;
  c-name: "gtk_icon_view_set_pixbuf_column";
end;

define C-function gtk-icon-view-get-pixbuf-column
  input parameter arg1 :: <GtkIconView>;
  result res :: <gint>;
  c-name: "gtk_icon_view_get_pixbuf_column";
end;

define C-function gtk-icon-view-set-orientation
  input parameter arg1 :: <GtkIconView>;
  input parameter arg2 :: <GtkOrientation>;
  c-name: "gtk_icon_view_set_orientation";
end;

define C-function gtk-icon-view-get-orientation
  input parameter arg1 :: <GtkIconView>;
  result res :: <GtkOrientation>;
  c-name: "gtk_icon_view_get_orientation";
end;

define C-function gtk-icon-view-set-columns
  input parameter arg1 :: <GtkIconView>;
  input parameter arg2 :: <gint>;
  c-name: "gtk_icon_view_set_columns";
end;

define C-function gtk-icon-view-get-columns
  input parameter arg1 :: <GtkIconView>;
  result res :: <gint>;
  c-name: "gtk_icon_view_get_columns";
end;

define C-function gtk-icon-view-set-item-width
  input parameter arg1 :: <GtkIconView>;
  input parameter arg2 :: <gint>;
  c-name: "gtk_icon_view_set_item_width";
end;

define C-function gtk-icon-view-get-item-width
  input parameter arg1 :: <GtkIconView>;
  result res :: <gint>;
  c-name: "gtk_icon_view_get_item_width";
end;

define C-function gtk-icon-view-set-spacing
  input parameter arg1 :: <GtkIconView>;
  input parameter arg2 :: <gint>;
  c-name: "gtk_icon_view_set_spacing";
end;

define C-function gtk-icon-view-get-spacing
  input parameter arg1 :: <GtkIconView>;
  result res :: <gint>;
  c-name: "gtk_icon_view_get_spacing";
end;

define C-function gtk-icon-view-set-row-spacing
  input parameter arg1 :: <GtkIconView>;
  input parameter arg2 :: <gint>;
  c-name: "gtk_icon_view_set_row_spacing";
end;

define C-function gtk-icon-view-get-row-spacing
  input parameter arg1 :: <GtkIconView>;
  result res :: <gint>;
  c-name: "gtk_icon_view_get_row_spacing";
end;

define C-function gtk-icon-view-set-column-spacing
  input parameter arg1 :: <GtkIconView>;
  input parameter arg2 :: <gint>;
  c-name: "gtk_icon_view_set_column_spacing";
end;

define C-function gtk-icon-view-get-column-spacing
  input parameter arg1 :: <GtkIconView>;
  result res :: <gint>;
  c-name: "gtk_icon_view_get_column_spacing";
end;

define C-function gtk-icon-view-set-margin
  input parameter arg1 :: <GtkIconView>;
  input parameter arg2 :: <gint>;
  c-name: "gtk_icon_view_set_margin";
end;

define C-function gtk-icon-view-get-margin
  input parameter arg1 :: <GtkIconView>;
  result res :: <gint>;
  c-name: "gtk_icon_view_get_margin";
end;

define C-function gtk-icon-view-get-path-at-pos
  input parameter arg1 :: <GtkIconView>;
  input parameter arg2 :: <gint>;
  input parameter arg3 :: <gint>;
  result res :: <GtkTreePath>;
  c-name: "gtk_icon_view_get_path_at_pos";
end;

define C-pointer-type <GtkCellRenderer*> => <GtkCellRenderer>;
define C-function gtk-icon-view-get-item-at-pos
  input parameter arg1 :: <GtkIconView>;
  input parameter arg2 :: <gint>;
  input parameter arg3 :: <gint>;
  input parameter arg4 :: <GtkTreePath*>;
  input parameter arg5 :: <GtkCellRenderer*>;
  result res :: <gboolean>;
  c-name: "gtk_icon_view_get_item_at_pos";
end;

define C-function gtk-icon-view-get-visible-range
  input parameter arg1 :: <GtkIconView>;
  input parameter arg2 :: <GtkTreePath*>;
  input parameter arg3 :: <GtkTreePath*>;
  result res :: <gboolean>;
  c-name: "gtk_icon_view_get_visible_range";
end;

define C-function gtk-icon-view-selected-foreach
  input parameter arg1 :: <GtkIconView>;
  input parameter arg2 :: <GtkIconViewForeachFunc>;
  input parameter arg3 :: <gpointer>;
  c-name: "gtk_icon_view_selected_foreach";
end;

define C-function gtk-icon-view-set-selection-mode
  input parameter arg1 :: <GtkIconView>;
  input parameter arg2 :: <GtkSelectionMode>;
  c-name: "gtk_icon_view_set_selection_mode";
end;

define C-function gtk-icon-view-get-selection-mode
  input parameter arg1 :: <GtkIconView>;
  result res :: <GtkSelectionMode>;
  c-name: "gtk_icon_view_get_selection_mode";
end;

define C-function gtk-icon-view-select-path
  input parameter arg1 :: <GtkIconView>;
  input parameter arg2 :: <GtkTreePath>;
  c-name: "gtk_icon_view_select_path";
end;

define C-function gtk-icon-view-unselect-path
  input parameter arg1 :: <GtkIconView>;
  input parameter arg2 :: <GtkTreePath>;
  c-name: "gtk_icon_view_unselect_path";
end;

define C-function gtk-icon-view-path-is-selected
  input parameter arg1 :: <GtkIconView>;
  input parameter arg2 :: <GtkTreePath>;
  result res :: <gboolean>;
  c-name: "gtk_icon_view_path_is_selected";
end;

define C-function gtk-icon-view-get-selected-items
  input parameter arg1 :: <GtkIconView>;
  result res :: <GList>;
  c-name: "gtk_icon_view_get_selected_items";
end;

define C-function gtk-icon-view-select-all
  input parameter arg1 :: <GtkIconView>;
  c-name: "gtk_icon_view_select_all";
end;

define C-function gtk-icon-view-unselect-all
  input parameter arg1 :: <GtkIconView>;
  c-name: "gtk_icon_view_unselect_all";
end;

define C-function gtk-icon-view-item-activated
  input parameter arg1 :: <GtkIconView>;
  input parameter arg2 :: <GtkTreePath>;
  c-name: "gtk_icon_view_item_activated";
end;

define C-function gtk-icon-view-set-cursor
  input parameter arg1 :: <GtkIconView>;
  input parameter arg2 :: <GtkTreePath>;
  input parameter arg3 :: <GtkCellRenderer>;
  input parameter arg4 :: <gboolean>;
  c-name: "gtk_icon_view_set_cursor";
end;

define C-function gtk-icon-view-get-cursor
  input parameter arg1 :: <GtkIconView>;
  input parameter arg2 :: <GtkTreePath*>;
  input parameter arg3 :: <GtkCellRenderer*>;
  result res :: <gboolean>;
  c-name: "gtk_icon_view_get_cursor";
end;

define C-function gtk-icon-view-scroll-to-path
  input parameter arg1 :: <GtkIconView>;
  input parameter arg2 :: <GtkTreePath>;
  input parameter arg3 :: <gboolean>;
  input parameter arg4 :: <gfloat>;
  input parameter arg5 :: <gfloat>;
  c-name: "gtk_icon_view_scroll_to_path";
end;

define C-function gtk-icon-view-enable-model-drag-source
  input parameter arg1 :: <GtkIconView>;
  input parameter arg2 :: <GdkModifierType>;
  input parameter arg3 :: <GtkTargetEntry>;
  input parameter arg4 :: <gint>;
  input parameter arg5 :: <GdkDragAction>;
  c-name: "gtk_icon_view_enable_model_drag_source";
end;

define C-function gtk-icon-view-enable-model-drag-dest
  input parameter arg1 :: <GtkIconView>;
  input parameter arg2 :: <GtkTargetEntry>;
  input parameter arg3 :: <gint>;
  input parameter arg4 :: <GdkDragAction>;
  c-name: "gtk_icon_view_enable_model_drag_dest";
end;

define C-function gtk-icon-view-unset-model-drag-source
  input parameter arg1 :: <GtkIconView>;
  c-name: "gtk_icon_view_unset_model_drag_source";
end;

define C-function gtk-icon-view-unset-model-drag-dest
  input parameter arg1 :: <GtkIconView>;
  c-name: "gtk_icon_view_unset_model_drag_dest";
end;

define C-function gtk-icon-view-set-reorderable
  input parameter arg1 :: <GtkIconView>;
  input parameter arg2 :: <gboolean>;
  c-name: "gtk_icon_view_set_reorderable";
end;

define C-function gtk-icon-view-get-reorderable
  input parameter arg1 :: <GtkIconView>;
  result res :: <gboolean>;
  c-name: "gtk_icon_view_get_reorderable";
end;

define C-function gtk-icon-view-set-drag-dest-item
  input parameter arg1 :: <GtkIconView>;
  input parameter arg2 :: <GtkTreePath>;
  input parameter arg3 :: <GtkIconViewDropPosition>;
  c-name: "gtk_icon_view_set_drag_dest_item";
end;

define C-pointer-type <GtkIconViewDropPosition*> => <GtkIconViewDropPosition>;
define C-function gtk-icon-view-get-drag-dest-item
  input parameter arg1 :: <GtkIconView>;
  input parameter arg2 :: <GtkTreePath*>;
  input parameter arg3 :: <GtkIconViewDropPosition*>;
  c-name: "gtk_icon_view_get_drag_dest_item";
end;

define C-function gtk-icon-view-get-dest-item-at-pos
  input parameter arg1 :: <GtkIconView>;
  input parameter arg2 :: <gint>;
  input parameter arg3 :: <gint>;
  input parameter arg4 :: <GtkTreePath*>;
  input parameter arg5 :: <GtkIconViewDropPosition*>;
  result res :: <gboolean>;
  c-name: "gtk_icon_view_get_dest_item_at_pos";
end;

define C-function gtk-icon-view-create-drag-icon
  input parameter arg1 :: <GtkIconView>;
  input parameter arg2 :: <GtkTreePath>;
  result res :: <GdkPixmap>;
  c-name: "gtk_icon_view_create_drag_icon";
end;

define C-function gtk-icon-view-convert-widget-to-bin-window-coords
  input parameter arg1 :: <GtkIconView>;
  input parameter arg2 :: <gint>;
  input parameter arg3 :: <gint>;
  input parameter arg4 :: <gint*>;
  input parameter arg5 :: <gint*>;
  c-name: "gtk_icon_view_convert_widget_to_bin_window_coords";
end;

define C-function gtk-icon-view-set-tooltip-item
  input parameter arg1 :: <GtkIconView>;
  input parameter arg2 :: <GtkTooltip>;
  input parameter arg3 :: <GtkTreePath>;
  c-name: "gtk_icon_view_set_tooltip_item";
end;

define C-function gtk-icon-view-set-tooltip-cell
  input parameter arg1 :: <GtkIconView>;
  input parameter arg2 :: <GtkTooltip>;
  input parameter arg3 :: <GtkTreePath>;
  input parameter arg4 :: <GtkCellRenderer>;
  c-name: "gtk_icon_view_set_tooltip_cell";
end;

define C-function gtk-icon-view-get-tooltip-context
  input parameter arg1 :: <GtkIconView>;
  input parameter arg2 :: <gint*>;
  input parameter arg3 :: <gint*>;
  input parameter arg4 :: <gboolean>;
  input parameter arg5 :: <GtkTreeModel*>;
  input parameter arg6 :: <GtkTreePath*>;
  input parameter arg7 :: <GtkTreeIter>;
  result res :: <gboolean>;
  c-name: "gtk_icon_view_get_tooltip_context";
end;

define C-function gtk-icon-view-set-tooltip-column
  input parameter arg1 :: <GtkIconView>;
  input parameter arg2 :: <gint>;
  c-name: "gtk_icon_view_set_tooltip_column";
end;

define C-function gtk-icon-view-get-tooltip-column
  input parameter arg1 :: <GtkIconView>;
  result res :: <gint>;
  c-name: "gtk_icon_view_get_tooltip_column";
end;

define C-struct <_GtkIconInfo>
end;

define C-pointer-type <GtkIconInfo> => <_GtkIconInfo>;

define C-struct <_GtkIconThemePrivate>
end;

define C-pointer-type <GtkIconThemePrivate> => <_GtkIconThemePrivate>;

define C-subtype <_GtkIconTheme> (<_GObject>) end;
define constant <GtkIconTheme> = <_GtkIconTheme>;

define constant <anonymous-6930> = <C-function-pointer>;
define C-struct <_GtkIconThemeClass>
  slot GtkIconThemeClass-parent-class :: <_GObjectClass>;
  slot GtkIconThemeClass-changed :: <anonymous-6930>;
end;

define C-pointer-type <GtkIconThemeClass> => <_GtkIconThemeClass>;

define constant <GtkIconLookupFlags> = <C-int>;
define constant $GTK-ICON-LOOKUP-NO-SVG = 1;
define constant $GTK-ICON-LOOKUP-FORCE-SVG = 2;
define constant $GTK-ICON-LOOKUP-USE-BUILTIN = 4;
define constant $GTK-ICON-LOOKUP-GENERIC-FALLBACK = 8;

define constant <GtkIconThemeError> = <C-int>;
define constant $GTK-ICON-THEME-NOT-FOUND = 0;
define constant $GTK-ICON-THEME-FAILED = 1;

define C-function gtk-icon-theme-error-quark
  result res :: <GQuark>;
  c-name: "gtk_icon_theme_error_quark";
end;

define C-function gtk-icon-theme-get-type
  result res :: <GType>;
  c-name: "gtk_icon_theme_get_type";
end;

define C-function gtk-icon-theme-new
  result res :: <GtkIconTheme>;
  c-name: "gtk_icon_theme_new";
end;

define C-function gtk-icon-theme-get-default
  result res :: <GtkIconTheme>;
  c-name: "gtk_icon_theme_get_default";
end;

define C-function gtk-icon-theme-get-for-screen
  input parameter arg1 :: <GdkScreen>;
  result res :: <GtkIconTheme>;
  c-name: "gtk_icon_theme_get_for_screen";
end;

define C-function gtk-icon-theme-set-screen
  input parameter arg1 :: <GtkIconTheme>;
  input parameter arg2 :: <GdkScreen>;
  c-name: "gtk_icon_theme_set_screen";
end;

define C-function gtk-icon-theme-set-search-path
  input parameter arg1 :: <GtkIconTheme>;
  input parameter arg2 :: <gchar*<@>>;
  input parameter arg3 :: <gint>;
  c-name: "gtk_icon_theme_set_search_path";
end;

define constant <gchar**<@>> = <gchar***>;
define C-function gtk-icon-theme-get-search-path
  input parameter arg1 :: <GtkIconTheme>;
  input parameter arg2 :: <gchar**<@>>;
  input parameter arg3 :: <gint*>;
  c-name: "gtk_icon_theme_get_search_path";
end;

define C-function gtk-icon-theme-append-search-path
  input parameter arg1 :: <GtkIconTheme>;
  input parameter arg2 :: <gchar*>;
  c-name: "gtk_icon_theme_append_search_path";
end;

define C-function gtk-icon-theme-prepend-search-path
  input parameter arg1 :: <GtkIconTheme>;
  input parameter arg2 :: <gchar*>;
  c-name: "gtk_icon_theme_prepend_search_path";
end;

define C-function gtk-icon-theme-set-custom-theme
  input parameter arg1 :: <GtkIconTheme>;
  input parameter arg2 :: <gchar*>;
  c-name: "gtk_icon_theme_set_custom_theme";
end;

define C-function gtk-icon-theme-has-icon
  input parameter arg1 :: <GtkIconTheme>;
  input parameter arg2 :: <gchar*>;
  result res :: <gboolean>;
  c-name: "gtk_icon_theme_has_icon";
end;

define C-function gtk-icon-theme-get-icon-sizes
  input parameter arg1 :: <GtkIconTheme>;
  input parameter arg2 :: <gchar*>;
  result res :: <gint*>;
  c-name: "gtk_icon_theme_get_icon_sizes";
end;

define C-function gtk-icon-theme-lookup-icon
  input parameter arg1 :: <GtkIconTheme>;
  input parameter arg2 :: <gchar*>;
  input parameter arg3 :: <gint>;
  input parameter arg4 :: <GtkIconLookupFlags>;
  result res :: <GtkIconInfo>;
  c-name: "gtk_icon_theme_lookup_icon";
end;

define C-function gtk-icon-theme-choose-icon
  input parameter arg1 :: <GtkIconTheme>;
  input parameter arg2 :: <gchar*<@>>;
  input parameter arg3 :: <gint>;
  input parameter arg4 :: <GtkIconLookupFlags>;
  result res :: <GtkIconInfo>;
  c-name: "gtk_icon_theme_choose_icon";
end;

define C-function gtk-icon-theme-load-icon
  input parameter arg1 :: <GtkIconTheme>;
  input parameter arg2 :: <gchar*>;
  input parameter arg3 :: <gint>;
  input parameter arg4 :: <GtkIconLookupFlags>;
  input parameter arg5 :: <GError*>;
  result res :: <GdkPixbuf>;
  c-name: "gtk_icon_theme_load_icon";
end;

define C-function gtk-icon-theme-list-icons
  input parameter arg1 :: <GtkIconTheme>;
  input parameter arg2 :: <gchar*>;
  result res :: <GList>;
  c-name: "gtk_icon_theme_list_icons";
end;

define C-function gtk-icon-theme-list-contexts
  input parameter arg1 :: <GtkIconTheme>;
  result res :: <GList>;
  c-name: "gtk_icon_theme_list_contexts";
end;

define C-function gtk-icon-theme-get-example-icon-name
  input parameter arg1 :: <GtkIconTheme>;
  result res :: <char*>;
  c-name: "gtk_icon_theme_get_example_icon_name";
end;

define C-function gtk-icon-theme-rescan-if-needed
  input parameter arg1 :: <GtkIconTheme>;
  result res :: <gboolean>;
  c-name: "gtk_icon_theme_rescan_if_needed";
end;

define C-function gtk-icon-theme-add-builtin-icon
  input parameter arg1 :: <gchar*>;
  input parameter arg2 :: <gint>;
  input parameter arg3 :: <GdkPixbuf>;
  c-name: "gtk_icon_theme_add_builtin_icon";
end;

define C-function gtk-icon-info-get-type
  result res :: <GType>;
  c-name: "gtk_icon_info_get_type";
end;

define C-function gtk-icon-info-copy
  input parameter arg1 :: <GtkIconInfo>;
  result res :: <GtkIconInfo>;
  c-name: "gtk_icon_info_copy";
end;

define C-function gtk-icon-info-free
  input parameter arg1 :: <GtkIconInfo>;
  c-name: "gtk_icon_info_free";
end;

define C-function gtk-icon-info-get-base-size
  input parameter arg1 :: <GtkIconInfo>;
  result res :: <gint>;
  c-name: "gtk_icon_info_get_base_size";
end;

define C-function gtk-icon-info-get-filename
  input parameter arg1 :: <GtkIconInfo>;
  result res :: <gchar*>;
  c-name: "gtk_icon_info_get_filename";
end;

define C-function gtk-icon-info-get-builtin-pixbuf
  input parameter arg1 :: <GtkIconInfo>;
  result res :: <GdkPixbuf>;
  c-name: "gtk_icon_info_get_builtin_pixbuf";
end;

define C-function gtk-icon-info-load-icon
  input parameter arg1 :: <GtkIconInfo>;
  input parameter arg2 :: <GError*>;
  result res :: <GdkPixbuf>;
  c-name: "gtk_icon_info_load_icon";
end;

define C-function gtk-icon-info-set-raw-coordinates
  input parameter arg1 :: <GtkIconInfo>;
  input parameter arg2 :: <gboolean>;
  c-name: "gtk_icon_info_set_raw_coordinates";
end;

define C-function gtk-icon-info-get-embedded-rect
  input parameter arg1 :: <GtkIconInfo>;
  input parameter arg2 :: <GdkRectangle>;
  result res :: <gboolean>;
  c-name: "gtk_icon_info_get_embedded_rect";
end;

define C-pointer-type <GdkPoint*> => <GdkPoint>;
define C-function gtk-icon-info-get-attach-points
  input parameter arg1 :: <GtkIconInfo>;
  input parameter arg2 :: <GdkPoint*>;
  input parameter arg3 :: <gint*>;
  result res :: <gboolean>;
  c-name: "gtk_icon_info_get_attach_points";
end;

define C-function gtk-icon-info-get-display-name
  input parameter arg1 :: <GtkIconInfo>;
  result res :: <gchar*>;
  c-name: "gtk_icon_info_get_display_name";
end;

define C-function _gtk-icon-theme-ensure-builtin-cache
  c-name: "_gtk_icon_theme_ensure_builtin_cache";
end;

define constant <anonymous-6879> = <C-function-pointer>;
define constant <anonymous-6880> = <C-function-pointer>;
define constant <anonymous-6881> = <C-function-pointer>;
define constant <anonymous-6882> = <C-function-pointer>;
define C-struct <_GtkIconFactoryClass>
  slot GtkIconFactoryClass-parent-class :: <_GObjectClass>;
  slot GtkIconFactoryClass-_gtk-reserved1 :: <anonymous-6879>;
  slot GtkIconFactoryClass-_gtk-reserved2 :: <anonymous-6880>;
  slot GtkIconFactoryClass-_gtk-reserved3 :: <anonymous-6881>;
  slot GtkIconFactoryClass-_gtk-reserved4 :: <anonymous-6882>;
end;

define C-pointer-type <GtkIconFactoryClass> => <_GtkIconFactoryClass>;

define C-function gtk-icon-factory-get-type
  result res :: <GType>;
  c-name: "gtk_icon_factory_get_type";
end;

define C-function gtk-icon-factory-new
  result res :: <GtkIconFactory>;
  c-name: "gtk_icon_factory_new";
end;

define C-function gtk-icon-factory-add
  input parameter arg1 :: <GtkIconFactory>;
  input parameter arg2 :: <gchar*>;
  input parameter arg3 :: <GtkIconSet>;
  c-name: "gtk_icon_factory_add";
end;

define C-function gtk-icon-factory-lookup
  input parameter arg1 :: <GtkIconFactory>;
  input parameter arg2 :: <gchar*>;
  result res :: <GtkIconSet>;
  c-name: "gtk_icon_factory_lookup";
end;

define C-function gtk-icon-factory-add-default
  input parameter arg1 :: <GtkIconFactory>;
  c-name: "gtk_icon_factory_add_default";
end;

define C-function gtk-icon-factory-remove-default
  input parameter arg1 :: <GtkIconFactory>;
  c-name: "gtk_icon_factory_remove_default";
end;

define C-function gtk-icon-factory-lookup-default
  input parameter arg1 :: <gchar*>;
  result res :: <GtkIconSet>;
  c-name: "gtk_icon_factory_lookup_default";
end;

define C-function gtk-icon-size-lookup
  input parameter arg1 :: <GtkIconSize>;
  input parameter arg2 :: <gint*>;
  input parameter arg3 :: <gint*>;
  result res :: <gboolean>;
  c-name: "gtk_icon_size_lookup";
end;

define C-function gtk-icon-size-lookup-for-settings
  input parameter arg1 :: <GtkSettings>;
  input parameter arg2 :: <GtkIconSize>;
  input parameter arg3 :: <gint*>;
  input parameter arg4 :: <gint*>;
  result res :: <gboolean>;
  c-name: "gtk_icon_size_lookup_for_settings";
end;

define C-function gtk-icon-size-register
  input parameter arg1 :: <gchar*>;
  input parameter arg2 :: <gint>;
  input parameter arg3 :: <gint>;
  result res :: <GtkIconSize>;
  c-name: "gtk_icon_size_register";
end;

define C-function gtk-icon-size-register-alias
  input parameter arg1 :: <gchar*>;
  input parameter arg2 :: <GtkIconSize>;
  c-name: "gtk_icon_size_register_alias";
end;

define C-function gtk-icon-size-from-name
  input parameter arg1 :: <gchar*>;
  result res :: <GtkIconSize>;
  c-name: "gtk_icon_size_from_name";
end;

define C-function gtk-icon-size-get-name
  input parameter arg1 :: <GtkIconSize>;
  result res :: <gchar*>;
  c-name: "gtk_icon_size_get_name";
end;

define C-function gtk-icon-set-get-type
  result res :: <GType>;
  c-name: "gtk_icon_set_get_type";
end;

define C-function gtk-icon-set-new
  result res :: <GtkIconSet>;
  c-name: "gtk_icon_set_new";
end;

define C-function gtk-icon-set-new-from-pixbuf
  input parameter arg1 :: <GdkPixbuf>;
  result res :: <GtkIconSet>;
  c-name: "gtk_icon_set_new_from_pixbuf";
end;

define C-function gtk-icon-set-ref
  input parameter arg1 :: <GtkIconSet>;
  result res :: <GtkIconSet>;
  c-name: "gtk_icon_set_ref";
end;

define C-function gtk-icon-set-unref
  input parameter arg1 :: <GtkIconSet>;
  c-name: "gtk_icon_set_unref";
end;

define C-function gtk-icon-set-copy
  input parameter arg1 :: <GtkIconSet>;
  result res :: <GtkIconSet>;
  c-name: "gtk_icon_set_copy";
end;

define C-function gtk-icon-set-render-icon
  input parameter arg1 :: <GtkIconSet>;
  input parameter arg2 :: <GtkStyle>;
  input parameter arg3 :: <GtkTextDirection>;
  input parameter arg4 :: <GtkStateType>;
  input parameter arg5 :: <GtkIconSize>;
  input parameter arg6 :: <GtkWidget>;
  input parameter arg7 :: <char*>;
  result res :: <GdkPixbuf>;
  c-name: "gtk_icon_set_render_icon";
end;

define C-function gtk-icon-set-add-source
  input parameter arg1 :: <GtkIconSet>;
  input parameter arg2 :: <GtkIconSource>;
  c-name: "gtk_icon_set_add_source";
end;

define C-pointer-type <GtkIconSize**> => <GtkIconSize*>;
define C-function gtk-icon-set-get-sizes
  input parameter arg1 :: <GtkIconSet>;
  input parameter arg2 :: <GtkIconSize**>;
  input parameter arg3 :: <gint*>;
  c-name: "gtk_icon_set_get_sizes";
end;

define C-function gtk-icon-source-get-type
  result res :: <GType>;
  c-name: "gtk_icon_source_get_type";
end;

define C-function gtk-icon-source-new
  result res :: <GtkIconSource>;
  c-name: "gtk_icon_source_new";
end;

define C-function gtk-icon-source-copy
  input parameter arg1 :: <GtkIconSource>;
  result res :: <GtkIconSource>;
  c-name: "gtk_icon_source_copy";
end;

define C-function gtk-icon-source-free
  input parameter arg1 :: <GtkIconSource>;
  c-name: "gtk_icon_source_free";
end;

define C-function gtk-icon-source-set-filename
  input parameter arg1 :: <GtkIconSource>;
  input parameter arg2 :: <gchar*>;
  c-name: "gtk_icon_source_set_filename";
end;

define C-function gtk-icon-source-set-icon-name
  input parameter arg1 :: <GtkIconSource>;
  input parameter arg2 :: <gchar*>;
  c-name: "gtk_icon_source_set_icon_name";
end;

define C-function gtk-icon-source-set-pixbuf
  input parameter arg1 :: <GtkIconSource>;
  input parameter arg2 :: <GdkPixbuf>;
  c-name: "gtk_icon_source_set_pixbuf";
end;

define C-function gtk-icon-source-get-filename
  input parameter arg1 :: <GtkIconSource>;
  result res :: <gchar*>;
  c-name: "gtk_icon_source_get_filename";
end;

define C-function gtk-icon-source-get-icon-name
  input parameter arg1 :: <GtkIconSource>;
  result res :: <gchar*>;
  c-name: "gtk_icon_source_get_icon_name";
end;

define C-function gtk-icon-source-get-pixbuf
  input parameter arg1 :: <GtkIconSource>;
  result res :: <GdkPixbuf>;
  c-name: "gtk_icon_source_get_pixbuf";
end;

define C-function gtk-icon-source-set-direction-wildcarded
  input parameter arg1 :: <GtkIconSource>;
  input parameter arg2 :: <gboolean>;
  c-name: "gtk_icon_source_set_direction_wildcarded";
end;

define C-function gtk-icon-source-set-state-wildcarded
  input parameter arg1 :: <GtkIconSource>;
  input parameter arg2 :: <gboolean>;
  c-name: "gtk_icon_source_set_state_wildcarded";
end;

define C-function gtk-icon-source-set-size-wildcarded
  input parameter arg1 :: <GtkIconSource>;
  input parameter arg2 :: <gboolean>;
  c-name: "gtk_icon_source_set_size_wildcarded";
end;

define C-function gtk-icon-source-get-size-wildcarded
  input parameter arg1 :: <GtkIconSource>;
  result res :: <gboolean>;
  c-name: "gtk_icon_source_get_size_wildcarded";
end;

define C-function gtk-icon-source-get-state-wildcarded
  input parameter arg1 :: <GtkIconSource>;
  result res :: <gboolean>;
  c-name: "gtk_icon_source_get_state_wildcarded";
end;

define C-function gtk-icon-source-get-direction-wildcarded
  input parameter arg1 :: <GtkIconSource>;
  result res :: <gboolean>;
  c-name: "gtk_icon_source_get_direction_wildcarded";
end;

define C-function gtk-icon-source-set-direction
  input parameter arg1 :: <GtkIconSource>;
  input parameter arg2 :: <GtkTextDirection>;
  c-name: "gtk_icon_source_set_direction";
end;

define C-function gtk-icon-source-set-state
  input parameter arg1 :: <GtkIconSource>;
  input parameter arg2 :: <GtkStateType>;
  c-name: "gtk_icon_source_set_state";
end;

define C-function gtk-icon-source-set-size
  input parameter arg1 :: <GtkIconSource>;
  input parameter arg2 :: <GtkIconSize>;
  c-name: "gtk_icon_source_set_size";
end;

define C-function gtk-icon-source-get-direction
  input parameter arg1 :: <GtkIconSource>;
  result res :: <GtkTextDirection>;
  c-name: "gtk_icon_source_get_direction";
end;

define C-function gtk-icon-source-get-state
  input parameter arg1 :: <GtkIconSource>;
  result res :: <GtkStateType>;
  c-name: "gtk_icon_source_get_state";
end;

define C-function gtk-icon-source-get-size
  input parameter arg1 :: <GtkIconSource>;
  result res :: <GtkIconSize>;
  c-name: "gtk_icon_source_get_size";
end;

define C-subtype <_GtkHSeparator> (<_GtkSeparator>, <_AtkImplementorIface>) end;
define constant <GtkHSeparator> = <_GtkHSeparator>;

define C-struct <_GtkHSeparatorClass>
  slot GtkHSeparatorClass-parent-class :: <_GtkSeparatorClass>;
end;

define C-pointer-type <GtkHSeparatorClass> => <_GtkHSeparatorClass>;

define C-function gtk-hseparator-get-type
  result res :: <GType>;
  c-name: "gtk_hseparator_get_type";
end;

define C-function gtk-hseparator-new
  result res :: <GtkWidget>;
  c-name: "gtk_hseparator_new";
end;

define C-subtype <_GtkHScale> (<_GtkScale>, <_AtkImplementorIface>) end;
define constant <GtkHScale> = <_GtkHScale>;

define C-struct <_GtkHScaleClass>
  slot GtkHScaleClass-parent-class :: <_GtkScaleClass>;
end;

define C-pointer-type <GtkHScaleClass> => <_GtkHScaleClass>;

define C-function gtk-hscale-get-type
  result res :: <GType>;
  c-name: "gtk_hscale_get_type";
end;

define C-function gtk-hscale-new
  input parameter arg1 :: <GtkAdjustment>;
  result res :: <GtkWidget>;
  c-name: "gtk_hscale_new";
end;

define C-function gtk-hscale-new-with-range
  input parameter arg1 :: <gdouble>;
  input parameter arg2 :: <gdouble>;
  input parameter arg3 :: <gdouble>;
  result res :: <GtkWidget>;
  c-name: "gtk_hscale_new_with_range";
end;

define C-subtype <_GtkHRuler> (<_GtkRuler>, <_AtkImplementorIface>) end;
define constant <GtkHRuler> = <_GtkHRuler>;

define C-struct <_GtkHRulerClass>
  slot GtkHRulerClass-parent-class :: <_GtkRulerClass>;
end;

define C-pointer-type <GtkHRulerClass> => <_GtkHRulerClass>;

define C-function gtk-hruler-get-type
  result res :: <GType>;
  c-name: "gtk_hruler_get_type";
end;

define C-function gtk-hruler-new
  result res :: <GtkWidget>;
  c-name: "gtk_hruler_new";
end;

define C-subtype <_GtkHPaned> (<_GtkPaned>, <_AtkImplementorIface>) end;
define constant <GtkHPaned> = <_GtkHPaned>;

define C-struct <_GtkHPanedClass>
  slot GtkHPanedClass-parent-class :: <_GtkPanedClass>;
end;

define C-pointer-type <GtkHPanedClass> => <_GtkHPanedClass>;

define C-function gtk-hpaned-get-type
  result res :: <GType>;
  c-name: "gtk_hpaned_get_type";
end;

define C-function gtk-hpaned-new
  result res :: <GtkWidget>;
  c-name: "gtk_hpaned_new";
end;

define C-subtype <_GtkHButtonBox> (<_GtkButtonBox>, <_AtkImplementorIface>) end;
define constant <GtkHButtonBox> = <_GtkHButtonBox>;

define C-struct <_GtkHButtonBoxClass>
  slot GtkHButtonBoxClass-parent-class :: <_GtkButtonBoxClass>;
end;

define C-pointer-type <GtkHButtonBoxClass> => <_GtkHButtonBoxClass>;

define C-function gtk-hbutton-box-get-type
  result res :: <GType>;
  c-name: "gtk_hbutton_box_get_type";
end;

define C-function gtk-hbutton-box-new
  result res :: <GtkWidget>;
  c-name: "gtk_hbutton_box_new";
end;

define C-function gtk-hbutton-box-get-spacing-default
  result res :: <gint>;
  c-name: "gtk_hbutton_box_get_spacing_default";
end;

define C-function gtk-hbutton-box-get-layout-default
  result res :: <GtkButtonBoxStyle>;
  c-name: "gtk_hbutton_box_get_layout_default";
end;

define C-function gtk-hbutton-box-set-spacing-default
  input parameter arg1 :: <gint>;
  c-name: "gtk_hbutton_box_set_spacing_default";
end;

define C-function gtk-hbutton-box-set-layout-default
  input parameter arg1 :: <GtkButtonBoxStyle>;
  c-name: "gtk_hbutton_box_set_layout_default";
end;

define C-subtype <_GtkHandleBox> (<_GtkBin>, <_AtkImplementorIface>) end;
define constant <GtkHandleBox> = <_GtkHandleBox>;

define constant <anonymous-6787> = <C-function-pointer>;
define constant <anonymous-6788> = <C-function-pointer>;
define constant <anonymous-6789> = <C-function-pointer>;
define constant <anonymous-6790> = <C-function-pointer>;
define constant <anonymous-6791> = <C-function-pointer>;
define constant <anonymous-6792> = <C-function-pointer>;
define C-struct <_GtkHandleBoxClass>
  slot GtkHandleBoxClass-parent-class :: <_GtkBinClass>;
  slot GtkHandleBoxClass-child-attached :: <anonymous-6787>;
  slot GtkHandleBoxClass-child-detached :: <anonymous-6788>;
  slot GtkHandleBoxClass-_gtk-reserved1 :: <anonymous-6789>;
  slot GtkHandleBoxClass-_gtk-reserved2 :: <anonymous-6790>;
  slot GtkHandleBoxClass-_gtk-reserved3 :: <anonymous-6791>;
  slot GtkHandleBoxClass-_gtk-reserved4 :: <anonymous-6792>;
end;

define C-pointer-type <GtkHandleBoxClass> => <_GtkHandleBoxClass>;

define C-function gtk-handle-box-get-type
  result res :: <GType>;
  c-name: "gtk_handle_box_get_type";
end;

define C-function gtk-handle-box-new
  result res :: <GtkWidget>;
  c-name: "gtk_handle_box_new";
end;

define C-function gtk-handle-box-set-shadow-type
  input parameter arg1 :: <GtkHandleBox>;
  input parameter arg2 :: <GtkShadowType>;
  c-name: "gtk_handle_box_set_shadow_type";
end;

define C-function gtk-handle-box-get-shadow-type
  input parameter arg1 :: <GtkHandleBox>;
  result res :: <GtkShadowType>;
  c-name: "gtk_handle_box_get_shadow_type";
end;

define C-function gtk-handle-box-set-handle-position
  input parameter arg1 :: <GtkHandleBox>;
  input parameter arg2 :: <GtkPositionType>;
  c-name: "gtk_handle_box_set_handle_position";
end;

define C-function gtk-handle-box-get-handle-position
  input parameter arg1 :: <GtkHandleBox>;
  result res :: <GtkPositionType>;
  c-name: "gtk_handle_box_get_handle_position";
end;

define C-function gtk-handle-box-set-snap-edge
  input parameter arg1 :: <GtkHandleBox>;
  input parameter arg2 :: <GtkPositionType>;
  c-name: "gtk_handle_box_set_snap_edge";
end;

define C-function gtk-handle-box-get-snap-edge
  input parameter arg1 :: <GtkHandleBox>;
  result res :: <GtkPositionType>;
  c-name: "gtk_handle_box_get_snap_edge";
end;

define C-function gtk-gc-get
  input parameter arg1 :: <gint>;
  input parameter arg2 :: <GdkColormap>;
  input parameter arg3 :: <GdkGCValues>;
  input parameter arg4 :: <GdkGCValuesMask>;
  result res :: <GdkGC>;
  c-name: "gtk_gc_get";
end;

define C-function gtk-gc-release
  input parameter arg1 :: <GdkGC>;
  c-name: "gtk_gc_release";
end;

define constant <GtkWidget<@5>> = <GtkWidget*>;
define C-subtype <_GtkGammaCurve> (<_GtkVBox>, <_AtkImplementorIface>) end;
define constant <GtkGammaCurve> = <_GtkGammaCurve>;

define constant <anonymous-6773> = <C-function-pointer>;
define constant <anonymous-6774> = <C-function-pointer>;
define constant <anonymous-6775> = <C-function-pointer>;
define constant <anonymous-6776> = <C-function-pointer>;
define C-struct <_GtkGammaCurveClass>
  slot GtkGammaCurveClass-parent-class :: <_GtkVBoxClass>;
  slot GtkGammaCurveClass-_gtk-reserved1 :: <anonymous-6773>;
  slot GtkGammaCurveClass-_gtk-reserved2 :: <anonymous-6774>;
  slot GtkGammaCurveClass-_gtk-reserved3 :: <anonymous-6775>;
  slot GtkGammaCurveClass-_gtk-reserved4 :: <anonymous-6776>;
end;

define C-pointer-type <GtkGammaCurveClass> => <_GtkGammaCurveClass>;

define C-function gtk-gamma-curve-get-type
  result res :: <GType>;
  c-name: "gtk_gamma_curve_get_type";
end;

define C-function gtk-gamma-curve-new
  result res :: <GtkWidget>;
  c-name: "gtk_gamma_curve_new";
end;

define C-subtype <_GtkFrame> (<_GtkBin>, <_AtkImplementorIface>) end;
define constant <GtkFrame> = <_GtkFrame>;

define constant <anonymous-4933> = <C-function-pointer>;
define C-struct <_GtkFrameClass>
  slot GtkFrameClass-parent-class :: <_GtkBinClass>;
  slot GtkFrameClass-compute-child-allocation :: <anonymous-4933>;
end;

define C-pointer-type <GtkFrameClass> => <_GtkFrameClass>;

define C-function gtk-frame-get-type
  result res :: <GType>;
  c-name: "gtk_frame_get_type";
end;

define C-function gtk-frame-new
  input parameter arg1 :: <gchar*>;
  result res :: <GtkWidget>;
  c-name: "gtk_frame_new";
end;

define C-function gtk-frame-set-label
  input parameter arg1 :: <GtkFrame>;
  input parameter arg2 :: <gchar*>;
  c-name: "gtk_frame_set_label";
end;

define C-function gtk-frame-get-label
  input parameter arg1 :: <GtkFrame>;
  result res :: <gchar*>;
  c-name: "gtk_frame_get_label";
end;

define C-function gtk-frame-set-label-widget
  input parameter arg1 :: <GtkFrame>;
  input parameter arg2 :: <GtkWidget>;
  c-name: "gtk_frame_set_label_widget";
end;

define C-function gtk-frame-get-label-widget
  input parameter arg1 :: <GtkFrame>;
  result res :: <GtkWidget>;
  c-name: "gtk_frame_get_label_widget";
end;

define C-function gtk-frame-set-label-align
  input parameter arg1 :: <GtkFrame>;
  input parameter arg2 :: <gfloat>;
  input parameter arg3 :: <gfloat>;
  c-name: "gtk_frame_set_label_align";
end;

define C-function gtk-frame-get-label-align
  input parameter arg1 :: <GtkFrame>;
  input parameter arg2 :: <gfloat*>;
  input parameter arg3 :: <gfloat*>;
  c-name: "gtk_frame_get_label_align";
end;

define C-function gtk-frame-set-shadow-type
  input parameter arg1 :: <GtkFrame>;
  input parameter arg2 :: <GtkShadowType>;
  c-name: "gtk_frame_set_shadow_type";
end;

define C-function gtk-frame-get-shadow-type
  input parameter arg1 :: <GtkFrame>;
  result res :: <GtkShadowType>;
  c-name: "gtk_frame_get_shadow_type";
end;

define C-subtype <_GtkFontSelection> (<_GtkVBox>, <_AtkImplementorIface>) end;
define constant <GtkFontSelection> = <_GtkFontSelection>;

define constant <anonymous-6751> = <C-function-pointer>;
define constant <anonymous-6752> = <C-function-pointer>;
define constant <anonymous-6753> = <C-function-pointer>;
define constant <anonymous-6754> = <C-function-pointer>;
define C-struct <_GtkFontSelectionClass>
  slot GtkFontSelectionClass-parent-class :: <_GtkVBoxClass>;
  slot GtkFontSelectionClass-_gtk-reserved1 :: <anonymous-6751>;
  slot GtkFontSelectionClass-_gtk-reserved2 :: <anonymous-6752>;
  slot GtkFontSelectionClass-_gtk-reserved3 :: <anonymous-6753>;
  slot GtkFontSelectionClass-_gtk-reserved4 :: <anonymous-6754>;
end;

define C-pointer-type <GtkFontSelectionClass> => <_GtkFontSelectionClass>;

define C-subtype <_GtkFontSelectionDialog> (<_GtkDialog>, <_AtkImplementorIface>) end;
define constant <GtkFontSelectionDialog> = <_GtkFontSelectionDialog>;

define constant <anonymous-6755> = <C-function-pointer>;
define constant <anonymous-6756> = <C-function-pointer>;
define constant <anonymous-6757> = <C-function-pointer>;
define constant <anonymous-6758> = <C-function-pointer>;
define C-struct <_GtkFontSelectionDialogClass>
  slot GtkFontSelectionDialogClass-parent-class :: <_GtkDialogClass>;
  slot GtkFontSelectionDialogClass-_gtk-reserved1 :: <anonymous-6755>;
  slot GtkFontSelectionDialogClass-_gtk-reserved2 :: <anonymous-6756>;
  slot GtkFontSelectionDialogClass-_gtk-reserved3 :: <anonymous-6757>;
  slot GtkFontSelectionDialogClass-_gtk-reserved4 :: <anonymous-6758>;
end;

define C-pointer-type <GtkFontSelectionDialogClass> => <_GtkFontSelectionDialogClass>;

define C-function gtk-font-selection-get-type
  result res :: <GType>;
  c-name: "gtk_font_selection_get_type";
end;

define C-function gtk-font-selection-new
  result res :: <GtkWidget>;
  c-name: "gtk_font_selection_new";
end;

define C-function gtk-font-selection-get-font-name
  input parameter arg1 :: <GtkFontSelection>;
  result res :: <gchar*>;
  c-name: "gtk_font_selection_get_font_name";
end;

define C-function gtk-font-selection-get-font
  input parameter arg1 :: <GtkFontSelection>;
  result res :: <GdkFont>;
  c-name: "gtk_font_selection_get_font";
end;

define C-function gtk-font-selection-set-font-name
  input parameter arg1 :: <GtkFontSelection>;
  input parameter arg2 :: <gchar*>;
  result res :: <gboolean>;
  c-name: "gtk_font_selection_set_font_name";
end;

define C-function gtk-font-selection-get-preview-text
  input parameter arg1 :: <GtkFontSelection>;
  result res :: <gchar*>;
  c-name: "gtk_font_selection_get_preview_text";
end;

define C-function gtk-font-selection-set-preview-text
  input parameter arg1 :: <GtkFontSelection>;
  input parameter arg2 :: <gchar*>;
  c-name: "gtk_font_selection_set_preview_text";
end;

define C-function gtk-font-selection-dialog-get-type
  result res :: <GType>;
  c-name: "gtk_font_selection_dialog_get_type";
end;

define C-function gtk-font-selection-dialog-new
  input parameter arg1 :: <gchar*>;
  result res :: <GtkWidget>;
  c-name: "gtk_font_selection_dialog_new";
end;

define C-function gtk-font-selection-dialog-get-font-name
  input parameter arg1 :: <GtkFontSelectionDialog>;
  result res :: <gchar*>;
  c-name: "gtk_font_selection_dialog_get_font_name";
end;

define C-function gtk-font-selection-dialog-get-font
  input parameter arg1 :: <GtkFontSelectionDialog>;
  result res :: <GdkFont>;
  c-name: "gtk_font_selection_dialog_get_font";
end;

define C-function gtk-font-selection-dialog-set-font-name
  input parameter arg1 :: <GtkFontSelectionDialog>;
  input parameter arg2 :: <gchar*>;
  result res :: <gboolean>;
  c-name: "gtk_font_selection_dialog_set_font_name";
end;

define C-function gtk-font-selection-dialog-get-preview-text
  input parameter arg1 :: <GtkFontSelectionDialog>;
  result res :: <gchar*>;
  c-name: "gtk_font_selection_dialog_get_preview_text";
end;

define C-function gtk-font-selection-dialog-set-preview-text
  input parameter arg1 :: <GtkFontSelectionDialog>;
  input parameter arg2 :: <gchar*>;
  c-name: "gtk_font_selection_dialog_set_preview_text";
end;

define C-struct <_GtkFontButtonPrivate>
end;

define C-pointer-type <GtkFontButtonPrivate> => <_GtkFontButtonPrivate>;

define C-subtype <_GtkFontButton> (<_GtkButton>, <_AtkImplementorIface>) end;
define constant <GtkFontButton> = <_GtkFontButton>;

define constant <anonymous-6731> = <C-function-pointer>;
define constant <anonymous-6732> = <C-function-pointer>;
define constant <anonymous-6733> = <C-function-pointer>;
define constant <anonymous-6734> = <C-function-pointer>;
define constant <anonymous-6735> = <C-function-pointer>;
define C-struct <_GtkFontButtonClass>
  slot GtkFontButtonClass-parent-class :: <_GtkButtonClass>;
  slot GtkFontButtonClass-font-set :: <anonymous-6731>;
  slot GtkFontButtonClass-_gtk-reserved1 :: <anonymous-6732>;
  slot GtkFontButtonClass-_gtk-reserved2 :: <anonymous-6733>;
  slot GtkFontButtonClass-_gtk-reserved3 :: <anonymous-6734>;
  slot GtkFontButtonClass-_gtk-reserved4 :: <anonymous-6735>;
end;

define C-pointer-type <GtkFontButtonClass> => <_GtkFontButtonClass>;

define C-function gtk-font-button-get-type
  result res :: <GType>;
  c-name: "gtk_font_button_get_type";
end;

define C-function gtk-font-button-new
  result res :: <GtkWidget>;
  c-name: "gtk_font_button_new";
end;

define C-function gtk-font-button-new-with-font
  input parameter arg1 :: <gchar*>;
  result res :: <GtkWidget>;
  c-name: "gtk_font_button_new_with_font";
end;

define C-function gtk-font-button-get-title
  input parameter arg1 :: <GtkFontButton>;
  result res :: <gchar*>;
  c-name: "gtk_font_button_get_title";
end;

define C-function gtk-font-button-set-title
  input parameter arg1 :: <GtkFontButton>;
  input parameter arg2 :: <gchar*>;
  c-name: "gtk_font_button_set_title";
end;

define C-function gtk-font-button-get-use-font
  input parameter arg1 :: <GtkFontButton>;
  result res :: <gboolean>;
  c-name: "gtk_font_button_get_use_font";
end;

define C-function gtk-font-button-set-use-font
  input parameter arg1 :: <GtkFontButton>;
  input parameter arg2 :: <gboolean>;
  c-name: "gtk_font_button_set_use_font";
end;

define C-function gtk-font-button-get-use-size
  input parameter arg1 :: <GtkFontButton>;
  result res :: <gboolean>;
  c-name: "gtk_font_button_get_use_size";
end;

define C-function gtk-font-button-set-use-size
  input parameter arg1 :: <GtkFontButton>;
  input parameter arg2 :: <gboolean>;
  c-name: "gtk_font_button_set_use_size";
end;

define C-function gtk-font-button-get-font-name
  input parameter arg1 :: <GtkFontButton>;
  result res :: <gchar*>;
  c-name: "gtk_font_button_get_font_name";
end;

define C-function gtk-font-button-set-font-name
  input parameter arg1 :: <GtkFontButton>;
  input parameter arg2 :: <gchar*>;
  result res :: <gboolean>;
  c-name: "gtk_font_button_set_font_name";
end;

define C-function gtk-font-button-get-show-style
  input parameter arg1 :: <GtkFontButton>;
  result res :: <gboolean>;
  c-name: "gtk_font_button_get_show_style";
end;

define C-function gtk-font-button-set-show-style
  input parameter arg1 :: <GtkFontButton>;
  input parameter arg2 :: <gboolean>;
  c-name: "gtk_font_button_set_show_style";
end;

define C-function gtk-font-button-get-show-size
  input parameter arg1 :: <GtkFontButton>;
  result res :: <gboolean>;
  c-name: "gtk_font_button_get_show_size";
end;

define C-function gtk-font-button-set-show-size
  input parameter arg1 :: <GtkFontButton>;
  input parameter arg2 :: <gboolean>;
  c-name: "gtk_font_button_set_show_size";
end;

define C-struct <_GtkFileChooserWidgetPrivate>
end;

define C-pointer-type <GtkFileChooserWidgetPrivate> => <_GtkFileChooserWidgetPrivate>;

define C-subtype <_GtkFileChooserWidget> (<_GtkVBox>, <_AtkImplementorIface>, <_GtkFileChooser>) end;
define constant <GtkFileChooserWidget> = <_GtkFileChooserWidget>;

define C-struct <_GtkFileChooserWidgetClass>
  slot GtkFileChooserWidgetClass-parent-class :: <_GtkVBoxClass>;
end;

define C-pointer-type <GtkFileChooserWidgetClass> => <_GtkFileChooserWidgetClass>;

define C-function gtk-file-chooser-widget-get-type
  result res :: <GType>;
  c-name: "gtk_file_chooser_widget_get_type";
end;

define constant <GtkFileChooserAction> = <C-int>;
define constant $GTK-FILE-CHOOSER-ACTION-OPEN = 0;
define constant $GTK-FILE-CHOOSER-ACTION-SAVE = 1;
define constant $GTK-FILE-CHOOSER-ACTION-SELECT-FOLDER = 2;
define constant $GTK-FILE-CHOOSER-ACTION-CREATE-FOLDER = 3;

define C-function gtk-file-chooser-widget-new
  input parameter arg1 :: <GtkFileChooserAction>;
  result res :: <GtkWidget>;
  c-name: "gtk_file_chooser_widget_new";
end;

define C-function gtk-file-chooser-widget-new-with-backend
  input parameter arg1 :: <GtkFileChooserAction>;
  input parameter arg2 :: <gchar*>;
  result res :: <GtkWidget>;
  c-name: "gtk_file_chooser_widget_new_with_backend";
end;

define C-subtype <_GtkFileChooser> (<C-void*>) end;
define constant <GtkFileChooser> = <_GtkFileChooser>;

define constant <GtkFileChooserConfirmation> = <C-int>;
define constant $GTK-FILE-CHOOSER-CONFIRMATION-CONFIRM = 0;
define constant $GTK-FILE-CHOOSER-CONFIRMATION-ACCEPT-FILENAME = 1;
define constant $GTK-FILE-CHOOSER-CONFIRMATION-SELECT-AGAIN = 2;

define C-function gtk-file-chooser-get-type
  result res :: <GType>;
  c-name: "gtk_file_chooser_get_type";
end;

define constant <GtkFileChooserError> = <C-int>;
define constant $GTK-FILE-CHOOSER-ERROR-NONEXISTENT = 0;
define constant $GTK-FILE-CHOOSER-ERROR-BAD-FILENAME = 1;
define constant $GTK-FILE-CHOOSER-ERROR-ALREADY-EXISTS = 2;

define C-function gtk-file-chooser-error-quark
  result res :: <GQuark>;
  c-name: "gtk_file_chooser_error_quark";
end;

define C-function gtk-file-chooser-set-action
  input parameter arg1 :: <GtkFileChooser>;
  input parameter arg2 :: <GtkFileChooserAction>;
  c-name: "gtk_file_chooser_set_action";
end;

define C-function gtk-file-chooser-get-action
  input parameter arg1 :: <GtkFileChooser>;
  result res :: <GtkFileChooserAction>;
  c-name: "gtk_file_chooser_get_action";
end;

define C-function gtk-file-chooser-set-local-only
  input parameter arg1 :: <GtkFileChooser>;
  input parameter arg2 :: <gboolean>;
  c-name: "gtk_file_chooser_set_local_only";
end;

define C-function gtk-file-chooser-get-local-only
  input parameter arg1 :: <GtkFileChooser>;
  result res :: <gboolean>;
  c-name: "gtk_file_chooser_get_local_only";
end;

define C-function gtk-file-chooser-set-select-multiple
  input parameter arg1 :: <GtkFileChooser>;
  input parameter arg2 :: <gboolean>;
  c-name: "gtk_file_chooser_set_select_multiple";
end;

define C-function gtk-file-chooser-get-select-multiple
  input parameter arg1 :: <GtkFileChooser>;
  result res :: <gboolean>;
  c-name: "gtk_file_chooser_get_select_multiple";
end;

define C-function gtk-file-chooser-set-show-hidden
  input parameter arg1 :: <GtkFileChooser>;
  input parameter arg2 :: <gboolean>;
  c-name: "gtk_file_chooser_set_show_hidden";
end;

define C-function gtk-file-chooser-get-show-hidden
  input parameter arg1 :: <GtkFileChooser>;
  result res :: <gboolean>;
  c-name: "gtk_file_chooser_get_show_hidden";
end;

define C-function gtk-file-chooser-set-do-overwrite-confirmation
  input parameter arg1 :: <GtkFileChooser>;
  input parameter arg2 :: <gboolean>;
  c-name: "gtk_file_chooser_set_do_overwrite_confirmation";
end;

define C-function gtk-file-chooser-get-do-overwrite-confirmation
  input parameter arg1 :: <GtkFileChooser>;
  result res :: <gboolean>;
  c-name: "gtk_file_chooser_get_do_overwrite_confirmation";
end;

define C-function gtk-file-chooser-set-current-name
  input parameter arg1 :: <GtkFileChooser>;
  input parameter arg2 :: <gchar*>;
  c-name: "gtk_file_chooser_set_current_name";
end;

define C-function gtk-file-chooser-get-filename
  input parameter arg1 :: <GtkFileChooser>;
  result res :: <gchar*>;
  c-name: "gtk_file_chooser_get_filename";
end;

define C-function gtk-file-chooser-set-filename
  input parameter arg1 :: <GtkFileChooser>;
  input parameter arg2 :: <char*>;
  result res :: <gboolean>;
  c-name: "gtk_file_chooser_set_filename";
end;

define C-function gtk-file-chooser-select-filename
  input parameter arg1 :: <GtkFileChooser>;
  input parameter arg2 :: <char*>;
  result res :: <gboolean>;
  c-name: "gtk_file_chooser_select_filename";
end;

define C-function gtk-file-chooser-unselect-filename
  input parameter arg1 :: <GtkFileChooser>;
  input parameter arg2 :: <char*>;
  c-name: "gtk_file_chooser_unselect_filename";
end;

define C-function gtk-file-chooser-select-all
  input parameter arg1 :: <GtkFileChooser>;
  c-name: "gtk_file_chooser_select_all";
end;

define C-function gtk-file-chooser-unselect-all
  input parameter arg1 :: <GtkFileChooser>;
  c-name: "gtk_file_chooser_unselect_all";
end;

define C-function gtk-file-chooser-get-filenames
  input parameter arg1 :: <GtkFileChooser>;
  result res :: <GSList>;
  c-name: "gtk_file_chooser_get_filenames";
end;

define C-function gtk-file-chooser-set-current-folder
  input parameter arg1 :: <GtkFileChooser>;
  input parameter arg2 :: <gchar*>;
  result res :: <gboolean>;
  c-name: "gtk_file_chooser_set_current_folder";
end;

define C-function gtk-file-chooser-get-current-folder
  input parameter arg1 :: <GtkFileChooser>;
  result res :: <gchar*>;
  c-name: "gtk_file_chooser_get_current_folder";
end;

define C-function gtk-file-chooser-get-uri
  input parameter arg1 :: <GtkFileChooser>;
  result res :: <gchar*>;
  c-name: "gtk_file_chooser_get_uri";
end;

define C-function gtk-file-chooser-set-uri
  input parameter arg1 :: <GtkFileChooser>;
  input parameter arg2 :: <char*>;
  result res :: <gboolean>;
  c-name: "gtk_file_chooser_set_uri";
end;

define C-function gtk-file-chooser-select-uri
  input parameter arg1 :: <GtkFileChooser>;
  input parameter arg2 :: <char*>;
  result res :: <gboolean>;
  c-name: "gtk_file_chooser_select_uri";
end;

define C-function gtk-file-chooser-unselect-uri
  input parameter arg1 :: <GtkFileChooser>;
  input parameter arg2 :: <char*>;
  c-name: "gtk_file_chooser_unselect_uri";
end;

define C-function gtk-file-chooser-get-uris
  input parameter arg1 :: <GtkFileChooser>;
  result res :: <GSList>;
  c-name: "gtk_file_chooser_get_uris";
end;

define C-function gtk-file-chooser-set-current-folder-uri
  input parameter arg1 :: <GtkFileChooser>;
  input parameter arg2 :: <gchar*>;
  result res :: <gboolean>;
  c-name: "gtk_file_chooser_set_current_folder_uri";
end;

define C-function gtk-file-chooser-get-current-folder-uri
  input parameter arg1 :: <GtkFileChooser>;
  result res :: <gchar*>;
  c-name: "gtk_file_chooser_get_current_folder_uri";
end;

define C-function gtk-file-chooser-set-preview-widget
  input parameter arg1 :: <GtkFileChooser>;
  input parameter arg2 :: <GtkWidget>;
  c-name: "gtk_file_chooser_set_preview_widget";
end;

define C-function gtk-file-chooser-get-preview-widget
  input parameter arg1 :: <GtkFileChooser>;
  result res :: <GtkWidget>;
  c-name: "gtk_file_chooser_get_preview_widget";
end;

define C-function gtk-file-chooser-set-preview-widget-active
  input parameter arg1 :: <GtkFileChooser>;
  input parameter arg2 :: <gboolean>;
  c-name: "gtk_file_chooser_set_preview_widget_active";
end;

define C-function gtk-file-chooser-get-preview-widget-active
  input parameter arg1 :: <GtkFileChooser>;
  result res :: <gboolean>;
  c-name: "gtk_file_chooser_get_preview_widget_active";
end;

define C-function gtk-file-chooser-set-use-preview-label
  input parameter arg1 :: <GtkFileChooser>;
  input parameter arg2 :: <gboolean>;
  c-name: "gtk_file_chooser_set_use_preview_label";
end;

define C-function gtk-file-chooser-get-use-preview-label
  input parameter arg1 :: <GtkFileChooser>;
  result res :: <gboolean>;
  c-name: "gtk_file_chooser_get_use_preview_label";
end;

define C-function gtk-file-chooser-get-preview-filename
  input parameter arg1 :: <GtkFileChooser>;
  result res :: <char*>;
  c-name: "gtk_file_chooser_get_preview_filename";
end;

define C-function gtk-file-chooser-get-preview-uri
  input parameter arg1 :: <GtkFileChooser>;
  result res :: <char*>;
  c-name: "gtk_file_chooser_get_preview_uri";
end;

define C-function gtk-file-chooser-set-extra-widget
  input parameter arg1 :: <GtkFileChooser>;
  input parameter arg2 :: <GtkWidget>;
  c-name: "gtk_file_chooser_set_extra_widget";
end;

define C-function gtk-file-chooser-get-extra-widget
  input parameter arg1 :: <GtkFileChooser>;
  result res :: <GtkWidget>;
  c-name: "gtk_file_chooser_get_extra_widget";
end;

define C-subtype <_GtkFileFilter> (<_GtkObject>) end;
define constant <GtkFileFilter> = <_GtkFileFilter>;

define C-function gtk-file-chooser-add-filter
  input parameter arg1 :: <GtkFileChooser>;
  input parameter arg2 :: <GtkFileFilter>;
  c-name: "gtk_file_chooser_add_filter";
end;

define C-function gtk-file-chooser-remove-filter
  input parameter arg1 :: <GtkFileChooser>;
  input parameter arg2 :: <GtkFileFilter>;
  c-name: "gtk_file_chooser_remove_filter";
end;

define C-function gtk-file-chooser-list-filters
  input parameter arg1 :: <GtkFileChooser>;
  result res :: <GSList>;
  c-name: "gtk_file_chooser_list_filters";
end;

define C-function gtk-file-chooser-set-filter
  input parameter arg1 :: <GtkFileChooser>;
  input parameter arg2 :: <GtkFileFilter>;
  c-name: "gtk_file_chooser_set_filter";
end;

define C-function gtk-file-chooser-get-filter
  input parameter arg1 :: <GtkFileChooser>;
  result res :: <GtkFileFilter>;
  c-name: "gtk_file_chooser_get_filter";
end;

define C-function gtk-file-chooser-add-shortcut-folder
  input parameter arg1 :: <GtkFileChooser>;
  input parameter arg2 :: <char*>;
  input parameter arg3 :: <GError*>;
  result res :: <gboolean>;
  c-name: "gtk_file_chooser_add_shortcut_folder";
end;

define C-function gtk-file-chooser-remove-shortcut-folder
  input parameter arg1 :: <GtkFileChooser>;
  input parameter arg2 :: <char*>;
  input parameter arg3 :: <GError*>;
  result res :: <gboolean>;
  c-name: "gtk_file_chooser_remove_shortcut_folder";
end;

define C-function gtk-file-chooser-list-shortcut-folders
  input parameter arg1 :: <GtkFileChooser>;
  result res :: <GSList>;
  c-name: "gtk_file_chooser_list_shortcut_folders";
end;

define C-function gtk-file-chooser-add-shortcut-folder-uri
  input parameter arg1 :: <GtkFileChooser>;
  input parameter arg2 :: <char*>;
  input parameter arg3 :: <GError*>;
  result res :: <gboolean>;
  c-name: "gtk_file_chooser_add_shortcut_folder_uri";
end;

define C-function gtk-file-chooser-remove-shortcut-folder-uri
  input parameter arg1 :: <GtkFileChooser>;
  input parameter arg2 :: <char*>;
  input parameter arg3 :: <GError*>;
  result res :: <gboolean>;
  c-name: "gtk_file_chooser_remove_shortcut_folder_uri";
end;

define C-function gtk-file-chooser-list-shortcut-folder-uris
  input parameter arg1 :: <GtkFileChooser>;
  result res :: <GSList>;
  c-name: "gtk_file_chooser_list_shortcut_folder_uris";
end;

define constant <GtkFileFilterFlags> = <C-int>;
define constant $GTK-FILE-FILTER-FILENAME = 1;
define constant $GTK-FILE-FILTER-URI = 2;
define constant $GTK-FILE-FILTER-DISPLAY-NAME = 4;
define constant $GTK-FILE-FILTER-MIME-TYPE = 8;

define C-struct <_GtkFileFilterInfo>
  slot GtkFileFilterInfo-contains :: <GtkFileFilterFlags>;
  slot GtkFileFilterInfo-filename :: <gchar*>;
  slot GtkFileFilterInfo-uri :: <gchar*>;
  slot GtkFileFilterInfo-display-name :: <gchar*>;
  slot GtkFileFilterInfo-mime-type :: <gchar*>;
end;

define C-pointer-type <GtkFileFilterInfo> => <_GtkFileFilterInfo>;

define constant <anonymous-6650> = <C-function-pointer>;
define constant <GtkFileFilterFunc> = <anonymous-6650>;

define C-function gtk-file-filter-get-type
  result res :: <GType>;
  c-name: "gtk_file_filter_get_type";
end;

define C-function gtk-file-filter-new
  result res :: <GtkFileFilter>;
  c-name: "gtk_file_filter_new";
end;

define C-function gtk-file-filter-set-name
  input parameter arg1 :: <GtkFileFilter>;
  input parameter arg2 :: <gchar*>;
  c-name: "gtk_file_filter_set_name";
end;

define C-function gtk-file-filter-get-name
  input parameter arg1 :: <GtkFileFilter>;
  result res :: <gchar*>;
  c-name: "gtk_file_filter_get_name";
end;

define C-function gtk-file-filter-add-mime-type
  input parameter arg1 :: <GtkFileFilter>;
  input parameter arg2 :: <gchar*>;
  c-name: "gtk_file_filter_add_mime_type";
end;

define C-function gtk-file-filter-add-pattern
  input parameter arg1 :: <GtkFileFilter>;
  input parameter arg2 :: <gchar*>;
  c-name: "gtk_file_filter_add_pattern";
end;

define C-function gtk-file-filter-add-pixbuf-formats
  input parameter arg1 :: <GtkFileFilter>;
  c-name: "gtk_file_filter_add_pixbuf_formats";
end;

define C-function gtk-file-filter-add-custom
  input parameter arg1 :: <GtkFileFilter>;
  input parameter arg2 :: <GtkFileFilterFlags>;
  input parameter arg3 :: <GtkFileFilterFunc>;
  input parameter arg4 :: <gpointer>;
  input parameter arg5 :: <GDestroyNotify>;
  c-name: "gtk_file_filter_add_custom";
end;

define C-function gtk-file-filter-get-needed
  input parameter arg1 :: <GtkFileFilter>;
  result res :: <GtkFileFilterFlags>;
  c-name: "gtk_file_filter_get_needed";
end;

define C-function gtk-file-filter-filter
  input parameter arg1 :: <GtkFileFilter>;
  input parameter arg2 :: <GtkFileFilterInfo>;
  result res :: <gboolean>;
  c-name: "gtk_file_filter_filter";
end;

define C-struct <_GtkFileChooserDialogPrivate>
end;

define C-pointer-type <GtkFileChooserDialogPrivate> => <_GtkFileChooserDialogPrivate>;

define C-subtype <_GtkFileChooserDialog> (<_GtkDialog>, <_AtkImplementorIface>, <_GtkFileChooser>) end;
define constant <GtkFileChooserDialog> = <_GtkFileChooserDialog>;

define C-struct <_GtkFileChooserDialogClass>
  slot GtkFileChooserDialogClass-parent-class :: <_GtkDialogClass>;
end;

define C-pointer-type <GtkFileChooserDialogClass> => <_GtkFileChooserDialogClass>;

define C-function gtk-file-chooser-dialog-get-type
  result res :: <GType>;
  c-name: "gtk_file_chooser_dialog_get_type";
end;

define C-function gtk-file-chooser-dialog-new
  input parameter arg1 :: <gchar*>;
  input parameter arg2 :: <GtkWindow>;
  input parameter arg3 :: <GtkFileChooserAction>;
  input parameter arg4 :: <gchar*>;
  result res :: <GtkWidget>;
  c-name: "gtk_file_chooser_dialog_new";
end;

define C-function gtk-file-chooser-dialog-new-with-backend
  input parameter arg1 :: <gchar*>;
  input parameter arg2 :: <GtkWindow>;
  input parameter arg3 :: <GtkFileChooserAction>;
  input parameter arg4 :: <gchar*>;
  input parameter arg5 :: <gchar*>;
  result res :: <GtkWidget>;
  c-name: "gtk_file_chooser_dialog_new_with_backend";
end;

define C-struct <_GtkFileChooserButtonPrivate>
end;

define C-pointer-type <GtkFileChooserButtonPrivate> => <_GtkFileChooserButtonPrivate>;

define C-subtype <_GtkFileChooserButton> (<_GtkHBox>, <_AtkImplementorIface>, <_GtkFileChooser>) end;
define constant <GtkFileChooserButton> = <_GtkFileChooserButton>;

define constant <anonymous-6714> = <C-function-pointer>;
define C-struct <_GtkFileChooserButtonClass>
  slot GtkFileChooserButtonClass-parent-class :: <_GtkHBoxClass>;
  slot GtkFileChooserButtonClass-file-set :: <anonymous-6714>;
  slot GtkFileChooserButtonClass-__gtk-reserved1 :: <C-void*>;
  slot GtkFileChooserButtonClass-__gtk-reserved2 :: <C-void*>;
  slot GtkFileChooserButtonClass-__gtk-reserved3 :: <C-void*>;
  slot GtkFileChooserButtonClass-__gtk-reserved4 :: <C-void*>;
  slot GtkFileChooserButtonClass-__gtk-reserved5 :: <C-void*>;
  slot GtkFileChooserButtonClass-__gtk-reserved6 :: <C-void*>;
  slot GtkFileChooserButtonClass-__gtk-reserved7 :: <C-void*>;
end;

define C-pointer-type <GtkFileChooserButtonClass> => <_GtkFileChooserButtonClass>;

define C-function gtk-file-chooser-button-get-type
  result res :: <GType>;
  c-name: "gtk_file_chooser_button_get_type";
end;

define C-function gtk-file-chooser-button-new
  input parameter arg1 :: <gchar*>;
  input parameter arg2 :: <GtkFileChooserAction>;
  result res :: <GtkWidget>;
  c-name: "gtk_file_chooser_button_new";
end;

define C-function gtk-file-chooser-button-new-with-backend
  input parameter arg1 :: <gchar*>;
  input parameter arg2 :: <GtkFileChooserAction>;
  input parameter arg3 :: <gchar*>;
  result res :: <GtkWidget>;
  c-name: "gtk_file_chooser_button_new_with_backend";
end;

define C-function gtk-file-chooser-button-new-with-dialog
  input parameter arg1 :: <GtkWidget>;
  result res :: <GtkWidget>;
  c-name: "gtk_file_chooser_button_new_with_dialog";
end;

define C-function gtk-file-chooser-button-get-title
  input parameter arg1 :: <GtkFileChooserButton>;
  result res :: <gchar*>;
  c-name: "gtk_file_chooser_button_get_title";
end;

define C-function gtk-file-chooser-button-set-title
  input parameter arg1 :: <GtkFileChooserButton>;
  input parameter arg2 :: <gchar*>;
  c-name: "gtk_file_chooser_button_set_title";
end;

define C-function gtk-file-chooser-button-get-width-chars
  input parameter arg1 :: <GtkFileChooserButton>;
  result res :: <gint>;
  c-name: "gtk_file_chooser_button_get_width_chars";
end;

define C-function gtk-file-chooser-button-set-width-chars
  input parameter arg1 :: <GtkFileChooserButton>;
  input parameter arg2 :: <gint>;
  c-name: "gtk_file_chooser_button_set_width_chars";
end;

define C-function gtk-file-chooser-button-get-focus-on-click
  input parameter arg1 :: <GtkFileChooserButton>;
  result res :: <gboolean>;
  c-name: "gtk_file_chooser_button_get_focus_on_click";
end;

define C-function gtk-file-chooser-button-set-focus-on-click
  input parameter arg1 :: <GtkFileChooserButton>;
  input parameter arg2 :: <gboolean>;
  c-name: "gtk_file_chooser_button_set_focus_on_click";
end;

define open C-subtype <_GtkFixed> (<_GtkContainer>, <_AtkImplementorIface>) end;
define constant <GtkFixed> = <_GtkFixed>;

define C-struct <_GtkFixedClass>
  slot GtkFixedClass-parent-class :: <_GtkContainerClass>;
end;

define C-pointer-type <GtkFixedClass> => <_GtkFixedClass>;

define C-struct <_GtkFixedChild>
  slot GtkFixedChild-widget :: <GtkWidget>;
  slot GtkFixedChild-x :: <C-signed-int>;
  slot GtkFixedChild-y :: <C-signed-int>;
end;

define C-pointer-type <GtkFixedChild> => <_GtkFixedChild>;

define C-function gtk-fixed-get-type
  result res :: <GType>;
  c-name: "gtk_fixed_get_type";
end;

define C-function gtk-fixed-new
  result res :: <GtkWidget>;
  c-name: "gtk_fixed_new";
end;

define C-function gtk-fixed-put
  input parameter arg1 :: <GtkFixed>;
  input parameter arg2 :: <GtkWidget>;
  input parameter arg3 :: <gint>;
  input parameter arg4 :: <gint>;
  c-name: "gtk_fixed_put";
end;

define C-function gtk-fixed-move
  input parameter arg1 :: <GtkFixed>;
  input parameter arg2 :: <GtkWidget>;
  input parameter arg3 :: <gint>;
  input parameter arg4 :: <gint>;
  c-name: "gtk_fixed_move";
end;

define C-function gtk-fixed-set-has-window
  input parameter arg1 :: <GtkFixed>;
  input parameter arg2 :: <gboolean>;
  c-name: "gtk_fixed_set_has_window";
end;

define C-function gtk-fixed-get-has-window
  input parameter arg1 :: <GtkFixed>;
  result res :: <gboolean>;
  c-name: "gtk_fixed_get_has_window";
end;

define C-subtype <_GtkFileSelection> (<_GtkDialog>, <_AtkImplementorIface>) end;
define constant <GtkFileSelection> = <_GtkFileSelection>;

define constant <anonymous-6629> = <C-function-pointer>;
define constant <anonymous-6630> = <C-function-pointer>;
define constant <anonymous-6631> = <C-function-pointer>;
define constant <anonymous-6632> = <C-function-pointer>;
define C-struct <_GtkFileSelectionClass>
  slot GtkFileSelectionClass-parent-class :: <_GtkDialogClass>;
  slot GtkFileSelectionClass-_gtk-reserved1 :: <anonymous-6629>;
  slot GtkFileSelectionClass-_gtk-reserved2 :: <anonymous-6630>;
  slot GtkFileSelectionClass-_gtk-reserved3 :: <anonymous-6631>;
  slot GtkFileSelectionClass-_gtk-reserved4 :: <anonymous-6632>;
end;

define C-pointer-type <GtkFileSelectionClass> => <_GtkFileSelectionClass>;

define C-function gtk-file-selection-get-type
  result res :: <GType>;
  c-name: "gtk_file_selection_get_type";
end;

define C-function gtk-file-selection-new
  input parameter arg1 :: <gchar*>;
  result res :: <GtkWidget>;
  c-name: "gtk_file_selection_new";
end;

define C-function gtk-file-selection-set-filename
  input parameter arg1 :: <GtkFileSelection>;
  input parameter arg2 :: <gchar*>;
  c-name: "gtk_file_selection_set_filename";
end;

define C-function gtk-file-selection-get-filename
  input parameter arg1 :: <GtkFileSelection>;
  result res :: <gchar*>;
  c-name: "gtk_file_selection_get_filename";
end;

define C-function gtk-file-selection-complete
  input parameter arg1 :: <GtkFileSelection>;
  input parameter arg2 :: <gchar*>;
  c-name: "gtk_file_selection_complete";
end;

define C-function gtk-file-selection-show-fileop-buttons
  input parameter arg1 :: <GtkFileSelection>;
  c-name: "gtk_file_selection_show_fileop_buttons";
end;

define C-function gtk-file-selection-hide-fileop-buttons
  input parameter arg1 :: <GtkFileSelection>;
  c-name: "gtk_file_selection_hide_fileop_buttons";
end;

define C-function gtk-file-selection-get-selections
  input parameter arg1 :: <GtkFileSelection>;
  result res :: <gchar**>;
  c-name: "gtk_file_selection_get_selections";
end;

define C-function gtk-file-selection-set-select-multiple
  input parameter arg1 :: <GtkFileSelection>;
  input parameter arg2 :: <gboolean>;
  c-name: "gtk_file_selection_set_select_multiple";
end;

define C-function gtk-file-selection-get-select-multiple
  input parameter arg1 :: <GtkFileSelection>;
  result res :: <gboolean>;
  c-name: "gtk_file_selection_get_select_multiple";
end;

define C-struct <_GtkExpanderPrivate>
end;

define C-pointer-type <GtkExpanderPrivate> => <_GtkExpanderPrivate>;

define C-subtype <_GtkExpander> (<_GtkBin>, <_AtkImplementorIface>) end;
define constant <GtkExpander> = <_GtkExpander>;

define constant <anonymous-6613> = <C-function-pointer>;
define C-struct <_GtkExpanderClass>
  slot GtkExpanderClass-parent-class :: <_GtkBinClass>;
  slot GtkExpanderClass-activate :: <anonymous-6613>;
end;

define C-pointer-type <GtkExpanderClass> => <_GtkExpanderClass>;

define C-function gtk-expander-get-type
  result res :: <GType>;
  c-name: "gtk_expander_get_type";
end;

define C-function gtk-expander-new
  input parameter arg1 :: <gchar*>;
  result res :: <GtkWidget>;
  c-name: "gtk_expander_new";
end;

define C-function gtk-expander-new-with-mnemonic
  input parameter arg1 :: <gchar*>;
  result res :: <GtkWidget>;
  c-name: "gtk_expander_new_with_mnemonic";
end;

define C-function gtk-expander-set-expanded
  input parameter arg1 :: <GtkExpander>;
  input parameter arg2 :: <gboolean>;
  c-name: "gtk_expander_set_expanded";
end;

define C-function gtk-expander-get-expanded
  input parameter arg1 :: <GtkExpander>;
  result res :: <gboolean>;
  c-name: "gtk_expander_get_expanded";
end;

define C-function gtk-expander-set-spacing
  input parameter arg1 :: <GtkExpander>;
  input parameter arg2 :: <gint>;
  c-name: "gtk_expander_set_spacing";
end;

define C-function gtk-expander-get-spacing
  input parameter arg1 :: <GtkExpander>;
  result res :: <gint>;
  c-name: "gtk_expander_get_spacing";
end;

define C-function gtk-expander-set-label
  input parameter arg1 :: <GtkExpander>;
  input parameter arg2 :: <gchar*>;
  c-name: "gtk_expander_set_label";
end;

define C-function gtk-expander-get-label
  input parameter arg1 :: <GtkExpander>;
  result res :: <gchar*>;
  c-name: "gtk_expander_get_label";
end;

define C-function gtk-expander-set-use-underline
  input parameter arg1 :: <GtkExpander>;
  input parameter arg2 :: <gboolean>;
  c-name: "gtk_expander_set_use_underline";
end;

define C-function gtk-expander-get-use-underline
  input parameter arg1 :: <GtkExpander>;
  result res :: <gboolean>;
  c-name: "gtk_expander_get_use_underline";
end;

define C-function gtk-expander-set-use-markup
  input parameter arg1 :: <GtkExpander>;
  input parameter arg2 :: <gboolean>;
  c-name: "gtk_expander_set_use_markup";
end;

define C-function gtk-expander-get-use-markup
  input parameter arg1 :: <GtkExpander>;
  result res :: <gboolean>;
  c-name: "gtk_expander_get_use_markup";
end;

define C-function gtk-expander-set-label-widget
  input parameter arg1 :: <GtkExpander>;
  input parameter arg2 :: <GtkWidget>;
  c-name: "gtk_expander_set_label_widget";
end;

define C-function gtk-expander-get-label-widget
  input parameter arg1 :: <GtkExpander>;
  result res :: <GtkWidget>;
  c-name: "gtk_expander_get_label_widget";
end;

define C-subtype <_GtkEventBox> (<_GtkBin>, <_AtkImplementorIface>) end;
define constant <GtkEventBox> = <_GtkEventBox>;

define C-struct <_GtkEventBoxClass>
  slot GtkEventBoxClass-parent-class :: <_GtkBinClass>;
end;

define C-pointer-type <GtkEventBoxClass> => <_GtkEventBoxClass>;

define C-function gtk-event-box-get-type
  result res :: <GType>;
  c-name: "gtk_event_box_get_type";
end;

define C-function gtk-event-box-new
  result res :: <GtkWidget>;
  c-name: "gtk_event_box_new";
end;

define C-function gtk-event-box-get-visible-window
  input parameter arg1 :: <GtkEventBox>;
  result res :: <gboolean>;
  c-name: "gtk_event_box_get_visible_window";
end;

define C-function gtk-event-box-set-visible-window
  input parameter arg1 :: <GtkEventBox>;
  input parameter arg2 :: <gboolean>;
  c-name: "gtk_event_box_set_visible_window";
end;

define C-function gtk-event-box-get-above-child
  input parameter arg1 :: <GtkEventBox>;
  result res :: <gboolean>;
  c-name: "gtk_event_box_get_above_child";
end;

define C-function gtk-event-box-set-above-child
  input parameter arg1 :: <GtkEventBox>;
  input parameter arg2 :: <gboolean>;
  c-name: "gtk_event_box_set_above_child";
end;

define C-subtype <_GtkDrawingArea> (<_GtkWidget>, <_AtkImplementorIface>) end;
define constant <GtkDrawingArea> = <_GtkDrawingArea>;

define constant <anonymous-6587> = <C-function-pointer>;
define constant <anonymous-6588> = <C-function-pointer>;
define constant <anonymous-6589> = <C-function-pointer>;
define constant <anonymous-6590> = <C-function-pointer>;
define C-struct <_GtkDrawingAreaClass>
  slot GtkDrawingAreaClass-parent-class :: <_GtkWidgetClass>;
  slot GtkDrawingAreaClass-_gtk-reserved1 :: <anonymous-6587>;
  slot GtkDrawingAreaClass-_gtk-reserved2 :: <anonymous-6588>;
  slot GtkDrawingAreaClass-_gtk-reserved3 :: <anonymous-6589>;
  slot GtkDrawingAreaClass-_gtk-reserved4 :: <anonymous-6590>;
end;

define C-pointer-type <GtkDrawingAreaClass> => <_GtkDrawingAreaClass>;

define C-function gtk-drawing-area-get-type
  result res :: <GType>;
  c-name: "gtk_drawing_area_get_type";
end;

define C-function gtk-drawing-area-new
  result res :: <GtkWidget>;
  c-name: "gtk_drawing_area_new";
end;

define C-function gtk-drawing-area-size
  input parameter arg1 :: <GtkDrawingArea>;
  input parameter arg2 :: <gint>;
  input parameter arg3 :: <gint>;
  c-name: "gtk_drawing_area_size";
end;

define constant <gfloat<@2>> = <gfloat*>;
define C-subtype <_GtkCurve> (<_GtkDrawingArea>, <_AtkImplementorIface>) end;
define constant <GtkCurve> = <_GtkCurve>;

define constant <anonymous-6594> = <C-function-pointer>;
define constant <anonymous-6595> = <C-function-pointer>;
define constant <anonymous-6596> = <C-function-pointer>;
define constant <anonymous-6597> = <C-function-pointer>;
define constant <anonymous-6598> = <C-function-pointer>;
define C-struct <_GtkCurveClass>
  slot GtkCurveClass-parent-class :: <_GtkDrawingAreaClass>;
  slot GtkCurveClass-curve-type-changed :: <anonymous-6594>;
  slot GtkCurveClass-_gtk-reserved1 :: <anonymous-6595>;
  slot GtkCurveClass-_gtk-reserved2 :: <anonymous-6596>;
  slot GtkCurveClass-_gtk-reserved3 :: <anonymous-6597>;
  slot GtkCurveClass-_gtk-reserved4 :: <anonymous-6598>;
end;

define C-pointer-type <GtkCurveClass> => <_GtkCurveClass>;

define C-function gtk-curve-get-type
  result res :: <GType>;
  c-name: "gtk_curve_get_type";
end;

define C-function gtk-curve-new
  result res :: <GtkWidget>;
  c-name: "gtk_curve_new";
end;

define C-function gtk-curve-reset
  input parameter arg1 :: <GtkCurve>;
  c-name: "gtk_curve_reset";
end;

define C-function gtk-curve-set-gamma
  input parameter arg1 :: <GtkCurve>;
  input parameter arg2 :: <gfloat>;
  c-name: "gtk_curve_set_gamma";
end;

define C-function gtk-curve-set-range
  input parameter arg1 :: <GtkCurve>;
  input parameter arg2 :: <gfloat>;
  input parameter arg3 :: <gfloat>;
  input parameter arg4 :: <gfloat>;
  input parameter arg5 :: <gfloat>;
  c-name: "gtk_curve_set_range";
end;

define constant <gfloat<@>> = <gfloat*>;
define C-function gtk-curve-get-vector
  input parameter arg1 :: <GtkCurve>;
  input parameter arg2 :: <C-signed-int>;
  input parameter arg3 :: <gfloat<@>>;
  c-name: "gtk_curve_get_vector";
end;

define C-function gtk-curve-set-vector
  input parameter arg1 :: <GtkCurve>;
  input parameter arg2 :: <C-signed-int>;
  input parameter arg3 :: <gfloat<@>>;
  c-name: "gtk_curve_set_vector";
end;

define C-function gtk-curve-set-curve-type
  input parameter arg1 :: <GtkCurve>;
  input parameter arg2 :: <GtkCurveType>;
  c-name: "gtk_curve_set_curve_type";
end;

define constant <GtkCTreePos> = <C-int>;
define constant $GTK-CTREE-POS-BEFORE = 0;
define constant $GTK-CTREE-POS-AS-CHILD = 1;
define constant $GTK-CTREE-POS-AFTER = 2;

define constant <GtkCTreeLineStyle> = <C-int>;
define constant $GTK-CTREE-LINES-NONE = 0;
define constant $GTK-CTREE-LINES-SOLID = 1;
define constant $GTK-CTREE-LINES-DOTTED = 2;
define constant $GTK-CTREE-LINES-TABBED = 3;

define constant <GtkCTreeExpanderStyle> = <C-int>;
define constant $GTK-CTREE-EXPANDER-NONE = 0;
define constant $GTK-CTREE-EXPANDER-SQUARE = 1;
define constant $GTK-CTREE-EXPANDER-TRIANGLE = 2;
define constant $GTK-CTREE-EXPANDER-CIRCULAR = 3;

define constant <GtkCTreeExpansionType> = <C-int>;
define constant $GTK-CTREE-EXPANSION-EXPAND = 0;
define constant $GTK-CTREE-EXPANSION-EXPAND-RECURSIVE = 1;
define constant $GTK-CTREE-EXPANSION-COLLAPSE = 2;
define constant $GTK-CTREE-EXPANSION-COLLAPSE-RECURSIVE = 3;
define constant $GTK-CTREE-EXPANSION-TOGGLE = 4;
define constant $GTK-CTREE-EXPANSION-TOGGLE-RECURSIVE = 5;

define C-struct <_GtkCListColumn>
  slot GtkCListColumn-title :: <gchar*>;
  slot GtkCListColumn-area :: <_GdkRectangle>;
  slot GtkCListColumn-button :: <GtkWidget>;
  slot GtkCListColumn-window :: <GdkWindow>;
  slot GtkCListColumn-width :: <C-signed-int>;
  slot GtkCListColumn-min-width :: <C-signed-int>;
  slot GtkCListColumn-max-width :: <C-signed-int>;
  slot GtkCListColumn-justification :: <GtkJustification>;
  bitfield slot GtkCListColumn-visible :: <C-int>, width: 1;
  bitfield slot GtkCListColumn-width-set :: <C-int>, width: 1;
  bitfield slot GtkCListColumn-resizeable :: <C-int>, width: 1;
  bitfield slot GtkCListColumn-auto-resize :: <C-int>, width: 1;
  bitfield slot GtkCListColumn-button-passive :: <C-int>, width: 1;
end;

define C-pointer-type <GtkCListColumn> => <_GtkCListColumn>;

define constant <guint8<@5>> = <guint8*>;
define C-struct <_GtkCListCellInfo>
  slot GtkCListCellInfo-row :: <C-signed-int>;
  slot GtkCListCellInfo-column :: <C-signed-int>;
end;

define C-pointer-type <GtkCListCellInfo> => <_GtkCListCellInfo>;

define constant <anonymous-5896> = <C-function-pointer>;
define constant <GtkCListCompareFunc> = <anonymous-5896>;

define constant <GtkCListDragPos> = <C-int>;
define constant $GTK-CLIST-DRAG-NONE = 0;
define constant $GTK-CLIST-DRAG-BEFORE = 1;
define constant $GTK-CLIST-DRAG-INTO = 2;
define constant $GTK-CLIST-DRAG-AFTER = 3;

define C-subtype <_GtkCList> (<_GtkContainer>, <_AtkImplementorIface>) end;
define constant <GtkCList> = <_GtkCList>;

define constant <GtkCTree> = <_GtkCTree>;

define C-struct <_GtkCTreeNode>
  slot GtkCTreeNode-list :: <_GList>;
end;

define C-pointer-type <GtkCTreeNode> => <_GtkCTreeNode>;

define constant <anonymous-6507> = <C-function-pointer>;
define constant <GtkCTreeCompareDragFunc> = <anonymous-6507>;

define C-subtype <_GtkCTree> (<_GtkCList>, <_AtkImplementorIface>) end;
define constant <anonymous-5897> = <C-function-pointer>;
define constant <anonymous-5898> = <C-function-pointer>;
define constant <anonymous-5899> = <C-function-pointer>;
define constant <anonymous-5900> = <C-function-pointer>;
define constant <anonymous-5901> = <C-function-pointer>;
define constant <anonymous-5902> = <C-function-pointer>;
define constant <anonymous-5903> = <C-function-pointer>;
define constant <anonymous-5904> = <C-function-pointer>;
define constant <anonymous-5905> = <C-function-pointer>;
define constant <anonymous-5906> = <C-function-pointer>;
define constant <anonymous-5907> = <C-function-pointer>;
define constant <anonymous-5908> = <C-function-pointer>;
define constant <anonymous-5909> = <C-function-pointer>;
define constant <anonymous-5910> = <C-function-pointer>;
define constant <anonymous-5911> = <C-function-pointer>;
define constant <anonymous-5912> = <C-function-pointer>;
define constant <anonymous-5913> = <C-function-pointer>;
define constant <anonymous-5914> = <C-function-pointer>;
define constant <anonymous-5915> = <C-function-pointer>;
define constant <anonymous-5916> = <C-function-pointer>;
define constant <GtkCellType> = <C-int>;
define constant $GTK-CELL-EMPTY = 0;
define constant $GTK-CELL-TEXT = 1;
define constant $GTK-CELL-PIXMAP = 2;
define constant $GTK-CELL-PIXTEXT = 3;
define constant $GTK-CELL-WIDGET = 4;

define C-struct <anonymous-5934>
  slot nonymous-5934-pixmap :: <GdkPixmap>;
  slot nonymous-5934-mask :: <GdkBitmap>;
end;

define C-struct <anonymous-5935>
  slot nonymous-5935-text :: <gchar*>;
  slot nonymous-5935-spacing :: <C-unsigned-char>;
  slot nonymous-5935-pixmap :: <GdkPixmap>;
  slot nonymous-5935-mask :: <GdkBitmap>;
end;

define C-subtype <anonymous-5936> (<C-void*>) end;
define C-struct <_GtkCell>
  slot GtkCell-type :: <GtkCellType>;
  slot GtkCell-vertical :: <C-signed-short>;
  slot GtkCell-horizontal :: <C-signed-short>;
  slot GtkCell-style :: <GtkStyle>;
  slot GtkCell-u :: <anonymous-5936>;
end;

define C-pointer-type <GtkCell> => <_GtkCell>;

define C-struct <_GtkCListRow>
  slot GtkCListRow-cell :: <GtkCell>;
  slot GtkCListRow-state :: <GtkStateType>;
  slot GtkCListRow-foreground :: <_GdkColor>;
  slot GtkCListRow-background :: <_GdkColor>;
  slot GtkCListRow-style :: <GtkStyle>;
  slot GtkCListRow-data :: <C-void*>;
  slot GtkCListRow-destroy :: <anonymous-3500>;
  bitfield slot GtkCListRow-fg-set :: <C-int>, width: 1;
  bitfield slot GtkCListRow-bg-set :: <C-int>, width: 1;
  bitfield slot GtkCListRow-selectable :: <C-int>, width: 1;
end;

define C-pointer-type <GtkCListRow> => <_GtkCListRow>;

define constant <anonymous-5917> = <C-function-pointer>;
define constant <anonymous-5918> = <C-function-pointer>;
define constant <anonymous-5919> = <C-function-pointer>;
define constant <anonymous-5920> = <C-function-pointer>;
define constant <anonymous-5921> = <C-function-pointer>;
define constant <anonymous-5922> = <C-function-pointer>;
define constant <anonymous-5923> = <C-function-pointer>;
define constant <anonymous-5924> = <C-function-pointer>;
define constant <anonymous-5925> = <C-function-pointer>;
define C-struct <_GtkCListClass>
  slot GtkCListClass-parent-class :: <_GtkContainerClass>;
  slot GtkCListClass-set-scroll-adjustments :: <anonymous-5897>;
  slot GtkCListClass-refresh :: <anonymous-5898>;
  slot GtkCListClass-select-row :: <anonymous-5899>;
  slot GtkCListClass-unselect-row :: <anonymous-5900>;
  slot GtkCListClass-row-move :: <anonymous-5901>;
  slot GtkCListClass-click-column :: <anonymous-5902>;
  slot GtkCListClass-resize-column :: <anonymous-5903>;
  slot GtkCListClass-toggle-focus-row :: <anonymous-5904>;
  slot GtkCListClass-select-all :: <anonymous-5905>;
  slot GtkCListClass-unselect-all :: <anonymous-5906>;
  slot GtkCListClass-undo-selection :: <anonymous-5907>;
  slot GtkCListClass-start-selection :: <anonymous-5908>;
  slot GtkCListClass-end-selection :: <anonymous-5909>;
  slot GtkCListClass-extend-selection :: <anonymous-5910>;
  slot GtkCListClass-scroll-horizontal :: <anonymous-5911>;
  slot GtkCListClass-scroll-vertical :: <anonymous-5912>;
  slot GtkCListClass-toggle-add-mode :: <anonymous-5913>;
  slot GtkCListClass-abort-column-resize :: <anonymous-5914>;
  slot GtkCListClass-resync-selection :: <anonymous-5915>;
  slot GtkCListClass-selection-find :: <anonymous-5916>;
  slot GtkCListClass-draw-row :: <anonymous-5917>;
  slot GtkCListClass-draw-drag-highlight :: <anonymous-5918>;
  slot GtkCListClass-clear :: <anonymous-5919>;
  slot GtkCListClass-fake-unselect-all :: <anonymous-5920>;
  slot GtkCListClass-sort-list :: <anonymous-5921>;
  slot GtkCListClass-insert-row :: <anonymous-5922>;
  slot GtkCListClass-remove-row :: <anonymous-5923>;
  slot GtkCListClass-set-cell-contents :: <anonymous-5924>;
  slot GtkCListClass-cell-size-request :: <anonymous-5925>;
end;

define C-pointer-type <GtkCListClass> => <_GtkCListClass>;

define constant <anonymous-6511> = <C-function-pointer>;
define constant <anonymous-6512> = <C-function-pointer>;
define constant <anonymous-6513> = <C-function-pointer>;
define constant <anonymous-6514> = <C-function-pointer>;
define constant <anonymous-6515> = <C-function-pointer>;
define constant <anonymous-6516> = <C-function-pointer>;
define C-struct <_GtkCTreeClass>
  slot GtkCTreeClass-parent-class :: <_GtkCListClass>;
  slot GtkCTreeClass-tree-select-row :: <anonymous-6511>;
  slot GtkCTreeClass-tree-unselect-row :: <anonymous-6512>;
  slot GtkCTreeClass-tree-expand :: <anonymous-6513>;
  slot GtkCTreeClass-tree-collapse :: <anonymous-6514>;
  slot GtkCTreeClass-tree-move :: <anonymous-6515>;
  slot GtkCTreeClass-change-focus-row-expansion :: <anonymous-6516>;
end;

define C-pointer-type <GtkCTreeClass> => <_GtkCTreeClass>;

define C-struct <_GtkCTreeRow>
  slot GtkCTreeRow-row :: <_GtkCListRow>;
  slot GtkCTreeRow-parent :: <GtkCTreeNode>;
  slot GtkCTreeRow-sibling :: <GtkCTreeNode>;
  slot GtkCTreeRow-children :: <GtkCTreeNode>;
  slot GtkCTreeRow-pixmap-closed :: <GdkPixmap>;
  slot GtkCTreeRow-mask-closed :: <GdkBitmap>;
  slot GtkCTreeRow-pixmap-opened :: <GdkPixmap>;
  slot GtkCTreeRow-mask-opened :: <GdkBitmap>;
  slot GtkCTreeRow-level :: <C-unsigned-short>;
  bitfield slot GtkCTreeRow-is-leaf :: <C-int>, width: 1;
  bitfield slot GtkCTreeRow-expanded :: <C-int>, width: 1;
end;

define C-pointer-type <GtkCTreeRow> => <_GtkCTreeRow>;

define constant <anonymous-6505> = <C-function-pointer>;
define constant <GtkCTreeFunc> = <anonymous-6505>;

define constant <anonymous-6506> = <C-function-pointer>;
define constant <GtkCTreeGNodeFunc> = <anonymous-6506>;

define C-function gtk-ctree-get-type
  result res :: <GtkType>;
  c-name: "gtk_ctree_get_type";
end;

define C-function gtk-ctree-new-with-titles
  input parameter arg1 :: <gint>;
  input parameter arg2 :: <gint>;
  input parameter arg3 :: <gchar*<@>>;
  result res :: <GtkWidget>;
  c-name: "gtk_ctree_new_with_titles";
end;

define C-function gtk-ctree-new
  input parameter arg1 :: <gint>;
  input parameter arg2 :: <gint>;
  result res :: <GtkWidget>;
  c-name: "gtk_ctree_new";
end;

define C-function gtk-ctree-insert-node
  input parameter arg1 :: <GtkCTree>;
  input parameter arg2 :: <GtkCTreeNode>;
  input parameter arg3 :: <GtkCTreeNode>;
  input parameter arg4 :: <gchar*<@>>;
  input parameter arg5 :: <guint8>;
  input parameter arg6 :: <GdkPixmap>;
  input parameter arg7 :: <GdkBitmap>;
  input parameter arg8 :: <GdkPixmap>;
  input parameter arg9 :: <GdkBitmap>;
  input parameter arg10 :: <gboolean>;
  input parameter arg11 :: <gboolean>;
  result res :: <GtkCTreeNode>;
  c-name: "gtk_ctree_insert_node";
end;

define C-function gtk-ctree-remove-node
  input parameter arg1 :: <GtkCTree>;
  input parameter arg2 :: <GtkCTreeNode>;
  c-name: "gtk_ctree_remove_node";
end;

define C-function gtk-ctree-insert-gnode
  input parameter arg1 :: <GtkCTree>;
  input parameter arg2 :: <GtkCTreeNode>;
  input parameter arg3 :: <GtkCTreeNode>;
  input parameter arg4 :: <GNode>;
  input parameter arg5 :: <GtkCTreeGNodeFunc>;
  input parameter arg6 :: <gpointer>;
  result res :: <GtkCTreeNode>;
  c-name: "gtk_ctree_insert_gnode";
end;

define C-function gtk-ctree-export-to-gnode
  input parameter arg1 :: <GtkCTree>;
  input parameter arg2 :: <GNode>;
  input parameter arg3 :: <GNode>;
  input parameter arg4 :: <GtkCTreeNode>;
  input parameter arg5 :: <GtkCTreeGNodeFunc>;
  input parameter arg6 :: <gpointer>;
  result res :: <GNode>;
  c-name: "gtk_ctree_export_to_gnode";
end;

define C-function gtk-ctree-post-recursive
  input parameter arg1 :: <GtkCTree>;
  input parameter arg2 :: <GtkCTreeNode>;
  input parameter arg3 :: <GtkCTreeFunc>;
  input parameter arg4 :: <gpointer>;
  c-name: "gtk_ctree_post_recursive";
end;

define C-function gtk-ctree-post-recursive-to-depth
  input parameter arg1 :: <GtkCTree>;
  input parameter arg2 :: <GtkCTreeNode>;
  input parameter arg3 :: <gint>;
  input parameter arg4 :: <GtkCTreeFunc>;
  input parameter arg5 :: <gpointer>;
  c-name: "gtk_ctree_post_recursive_to_depth";
end;

define C-function gtk-ctree-pre-recursive
  input parameter arg1 :: <GtkCTree>;
  input parameter arg2 :: <GtkCTreeNode>;
  input parameter arg3 :: <GtkCTreeFunc>;
  input parameter arg4 :: <gpointer>;
  c-name: "gtk_ctree_pre_recursive";
end;

define C-function gtk-ctree-pre-recursive-to-depth
  input parameter arg1 :: <GtkCTree>;
  input parameter arg2 :: <GtkCTreeNode>;
  input parameter arg3 :: <gint>;
  input parameter arg4 :: <GtkCTreeFunc>;
  input parameter arg5 :: <gpointer>;
  c-name: "gtk_ctree_pre_recursive_to_depth";
end;

define C-function gtk-ctree-is-viewable
  input parameter arg1 :: <GtkCTree>;
  input parameter arg2 :: <GtkCTreeNode>;
  result res :: <gboolean>;
  c-name: "gtk_ctree_is_viewable";
end;

define C-function gtk-ctree-last
  input parameter arg1 :: <GtkCTree>;
  input parameter arg2 :: <GtkCTreeNode>;
  result res :: <GtkCTreeNode>;
  c-name: "gtk_ctree_last";
end;

define C-function gtk-ctree-find-node-ptr
  input parameter arg1 :: <GtkCTree>;
  input parameter arg2 :: <GtkCTreeRow>;
  result res :: <GtkCTreeNode>;
  c-name: "gtk_ctree_find_node_ptr";
end;

define C-function gtk-ctree-node-nth
  input parameter arg1 :: <GtkCTree>;
  input parameter arg2 :: <guint>;
  result res :: <GtkCTreeNode>;
  c-name: "gtk_ctree_node_nth";
end;

define C-function gtk-ctree-find
  input parameter arg1 :: <GtkCTree>;
  input parameter arg2 :: <GtkCTreeNode>;
  input parameter arg3 :: <GtkCTreeNode>;
  result res :: <gboolean>;
  c-name: "gtk_ctree_find";
end;

define C-function gtk-ctree-is-ancestor
  input parameter arg1 :: <GtkCTree>;
  input parameter arg2 :: <GtkCTreeNode>;
  input parameter arg3 :: <GtkCTreeNode>;
  result res :: <gboolean>;
  c-name: "gtk_ctree_is_ancestor";
end;

define C-function gtk-ctree-find-by-row-data
  input parameter arg1 :: <GtkCTree>;
  input parameter arg2 :: <GtkCTreeNode>;
  input parameter arg3 :: <gpointer>;
  result res :: <GtkCTreeNode>;
  c-name: "gtk_ctree_find_by_row_data";
end;

define C-function gtk-ctree-find-all-by-row-data
  input parameter arg1 :: <GtkCTree>;
  input parameter arg2 :: <GtkCTreeNode>;
  input parameter arg3 :: <gpointer>;
  result res :: <GList>;
  c-name: "gtk_ctree_find_all_by_row_data";
end;

define C-function gtk-ctree-find-by-row-data-custom
  input parameter arg1 :: <GtkCTree>;
  input parameter arg2 :: <GtkCTreeNode>;
  input parameter arg3 :: <gpointer>;
  input parameter arg4 :: <GCompareFunc>;
  result res :: <GtkCTreeNode>;
  c-name: "gtk_ctree_find_by_row_data_custom";
end;

define C-function gtk-ctree-find-all-by-row-data-custom
  input parameter arg1 :: <GtkCTree>;
  input parameter arg2 :: <GtkCTreeNode>;
  input parameter arg3 :: <gpointer>;
  input parameter arg4 :: <GCompareFunc>;
  result res :: <GList>;
  c-name: "gtk_ctree_find_all_by_row_data_custom";
end;

define C-function gtk-ctree-is-hot-spot
  input parameter arg1 :: <GtkCTree>;
  input parameter arg2 :: <gint>;
  input parameter arg3 :: <gint>;
  result res :: <gboolean>;
  c-name: "gtk_ctree_is_hot_spot";
end;

define C-function gtk-ctree-move
  input parameter arg1 :: <GtkCTree>;
  input parameter arg2 :: <GtkCTreeNode>;
  input parameter arg3 :: <GtkCTreeNode>;
  input parameter arg4 :: <GtkCTreeNode>;
  c-name: "gtk_ctree_move";
end;

define C-function gtk-ctree-expand
  input parameter arg1 :: <GtkCTree>;
  input parameter arg2 :: <GtkCTreeNode>;
  c-name: "gtk_ctree_expand";
end;

define C-function gtk-ctree-expand-recursive
  input parameter arg1 :: <GtkCTree>;
  input parameter arg2 :: <GtkCTreeNode>;
  c-name: "gtk_ctree_expand_recursive";
end;

define C-function gtk-ctree-expand-to-depth
  input parameter arg1 :: <GtkCTree>;
  input parameter arg2 :: <GtkCTreeNode>;
  input parameter arg3 :: <gint>;
  c-name: "gtk_ctree_expand_to_depth";
end;

define C-function gtk-ctree-collapse
  input parameter arg1 :: <GtkCTree>;
  input parameter arg2 :: <GtkCTreeNode>;
  c-name: "gtk_ctree_collapse";
end;

define C-function gtk-ctree-collapse-recursive
  input parameter arg1 :: <GtkCTree>;
  input parameter arg2 :: <GtkCTreeNode>;
  c-name: "gtk_ctree_collapse_recursive";
end;

define C-function gtk-ctree-collapse-to-depth
  input parameter arg1 :: <GtkCTree>;
  input parameter arg2 :: <GtkCTreeNode>;
  input parameter arg3 :: <gint>;
  c-name: "gtk_ctree_collapse_to_depth";
end;

define C-function gtk-ctree-toggle-expansion
  input parameter arg1 :: <GtkCTree>;
  input parameter arg2 :: <GtkCTreeNode>;
  c-name: "gtk_ctree_toggle_expansion";
end;

define C-function gtk-ctree-toggle-expansion-recursive
  input parameter arg1 :: <GtkCTree>;
  input parameter arg2 :: <GtkCTreeNode>;
  c-name: "gtk_ctree_toggle_expansion_recursive";
end;

define C-function gtk-ctree-select
  input parameter arg1 :: <GtkCTree>;
  input parameter arg2 :: <GtkCTreeNode>;
  c-name: "gtk_ctree_select";
end;

define C-function gtk-ctree-select-recursive
  input parameter arg1 :: <GtkCTree>;
  input parameter arg2 :: <GtkCTreeNode>;
  c-name: "gtk_ctree_select_recursive";
end;

define C-function gtk-ctree-unselect
  input parameter arg1 :: <GtkCTree>;
  input parameter arg2 :: <GtkCTreeNode>;
  c-name: "gtk_ctree_unselect";
end;

define C-function gtk-ctree-unselect-recursive
  input parameter arg1 :: <GtkCTree>;
  input parameter arg2 :: <GtkCTreeNode>;
  c-name: "gtk_ctree_unselect_recursive";
end;

define C-function gtk-ctree-real-select-recursive
  input parameter arg1 :: <GtkCTree>;
  input parameter arg2 :: <GtkCTreeNode>;
  input parameter arg3 :: <gint>;
  c-name: "gtk_ctree_real_select_recursive";
end;

define C-function gtk-ctree-node-set-text
  input parameter arg1 :: <GtkCTree>;
  input parameter arg2 :: <GtkCTreeNode>;
  input parameter arg3 :: <gint>;
  input parameter arg4 :: <gchar*>;
  c-name: "gtk_ctree_node_set_text";
end;

define C-function gtk-ctree-node-set-pixmap
  input parameter arg1 :: <GtkCTree>;
  input parameter arg2 :: <GtkCTreeNode>;
  input parameter arg3 :: <gint>;
  input parameter arg4 :: <GdkPixmap>;
  input parameter arg5 :: <GdkBitmap>;
  c-name: "gtk_ctree_node_set_pixmap";
end;

define C-function gtk-ctree-node-set-pixtext
  input parameter arg1 :: <GtkCTree>;
  input parameter arg2 :: <GtkCTreeNode>;
  input parameter arg3 :: <gint>;
  input parameter arg4 :: <gchar*>;
  input parameter arg5 :: <guint8>;
  input parameter arg6 :: <GdkPixmap>;
  input parameter arg7 :: <GdkBitmap>;
  c-name: "gtk_ctree_node_set_pixtext";
end;

define C-function gtk-ctree-set-node-info
  input parameter arg1 :: <GtkCTree>;
  input parameter arg2 :: <GtkCTreeNode>;
  input parameter arg3 :: <gchar*>;
  input parameter arg4 :: <guint8>;
  input parameter arg5 :: <GdkPixmap>;
  input parameter arg6 :: <GdkBitmap>;
  input parameter arg7 :: <GdkPixmap>;
  input parameter arg8 :: <GdkBitmap>;
  input parameter arg9 :: <gboolean>;
  input parameter arg10 :: <gboolean>;
  c-name: "gtk_ctree_set_node_info";
end;

define C-function gtk-ctree-node-set-shift
  input parameter arg1 :: <GtkCTree>;
  input parameter arg2 :: <GtkCTreeNode>;
  input parameter arg3 :: <gint>;
  input parameter arg4 :: <gint>;
  input parameter arg5 :: <gint>;
  c-name: "gtk_ctree_node_set_shift";
end;

define C-function gtk-ctree-node-set-selectable
  input parameter arg1 :: <GtkCTree>;
  input parameter arg2 :: <GtkCTreeNode>;
  input parameter arg3 :: <gboolean>;
  c-name: "gtk_ctree_node_set_selectable";
end;

define C-function gtk-ctree-node-get-selectable
  input parameter arg1 :: <GtkCTree>;
  input parameter arg2 :: <GtkCTreeNode>;
  result res :: <gboolean>;
  c-name: "gtk_ctree_node_get_selectable";
end;

define C-function gtk-ctree-node-get-cell-type
  input parameter arg1 :: <GtkCTree>;
  input parameter arg2 :: <GtkCTreeNode>;
  input parameter arg3 :: <gint>;
  result res :: <GtkCellType>;
  c-name: "gtk_ctree_node_get_cell_type";
end;

define C-function gtk-ctree-node-get-text
  input parameter arg1 :: <GtkCTree>;
  input parameter arg2 :: <GtkCTreeNode>;
  input parameter arg3 :: <gint>;
  input parameter arg4 :: <gchar**>;
  result res :: <gboolean>;
  c-name: "gtk_ctree_node_get_text";
end;

define C-function gtk-ctree-node-get-pixmap
  input parameter arg1 :: <GtkCTree>;
  input parameter arg2 :: <GtkCTreeNode>;
  input parameter arg3 :: <gint>;
  input parameter arg4 :: <GdkPixmap*>;
  input parameter arg5 :: <GdkBitmap*>;
  result res :: <gboolean>;
  c-name: "gtk_ctree_node_get_pixmap";
end;

define C-function gtk-ctree-node-get-pixtext
  input parameter arg1 :: <GtkCTree>;
  input parameter arg2 :: <GtkCTreeNode>;
  input parameter arg3 :: <gint>;
  input parameter arg4 :: <gchar**>;
  input parameter arg5 :: <guint8*>;
  input parameter arg6 :: <GdkPixmap*>;
  input parameter arg7 :: <GdkBitmap*>;
  result res :: <gboolean>;
  c-name: "gtk_ctree_node_get_pixtext";
end;

define C-function gtk-ctree-get-node-info
  input parameter arg1 :: <GtkCTree>;
  input parameter arg2 :: <GtkCTreeNode>;
  input parameter arg3 :: <gchar**>;
  input parameter arg4 :: <guint8*>;
  input parameter arg5 :: <GdkPixmap*>;
  input parameter arg6 :: <GdkBitmap*>;
  input parameter arg7 :: <GdkPixmap*>;
  input parameter arg8 :: <GdkBitmap*>;
  input parameter arg9 :: <gboolean*>;
  input parameter arg10 :: <gboolean*>;
  result res :: <gboolean>;
  c-name: "gtk_ctree_get_node_info";
end;

define C-function gtk-ctree-node-set-row-style
  input parameter arg1 :: <GtkCTree>;
  input parameter arg2 :: <GtkCTreeNode>;
  input parameter arg3 :: <GtkStyle>;
  c-name: "gtk_ctree_node_set_row_style";
end;

define C-function gtk-ctree-node-get-row-style
  input parameter arg1 :: <GtkCTree>;
  input parameter arg2 :: <GtkCTreeNode>;
  result res :: <GtkStyle>;
  c-name: "gtk_ctree_node_get_row_style";
end;

define C-function gtk-ctree-node-set-cell-style
  input parameter arg1 :: <GtkCTree>;
  input parameter arg2 :: <GtkCTreeNode>;
  input parameter arg3 :: <gint>;
  input parameter arg4 :: <GtkStyle>;
  c-name: "gtk_ctree_node_set_cell_style";
end;

define C-function gtk-ctree-node-get-cell-style
  input parameter arg1 :: <GtkCTree>;
  input parameter arg2 :: <GtkCTreeNode>;
  input parameter arg3 :: <gint>;
  result res :: <GtkStyle>;
  c-name: "gtk_ctree_node_get_cell_style";
end;

define C-function gtk-ctree-node-set-foreground
  input parameter arg1 :: <GtkCTree>;
  input parameter arg2 :: <GtkCTreeNode>;
  input parameter arg3 :: <GdkColor>;
  c-name: "gtk_ctree_node_set_foreground";
end;

define C-function gtk-ctree-node-set-background
  input parameter arg1 :: <GtkCTree>;
  input parameter arg2 :: <GtkCTreeNode>;
  input parameter arg3 :: <GdkColor>;
  c-name: "gtk_ctree_node_set_background";
end;

define C-function gtk-ctree-node-set-row-data
  input parameter arg1 :: <GtkCTree>;
  input parameter arg2 :: <GtkCTreeNode>;
  input parameter arg3 :: <gpointer>;
  c-name: "gtk_ctree_node_set_row_data";
end;

define C-function gtk-ctree-node-set-row-data-full
  input parameter arg1 :: <GtkCTree>;
  input parameter arg2 :: <GtkCTreeNode>;
  input parameter arg3 :: <gpointer>;
  input parameter arg4 :: <GtkDestroyNotify>;
  c-name: "gtk_ctree_node_set_row_data_full";
end;

define C-function gtk-ctree-node-get-row-data
  input parameter arg1 :: <GtkCTree>;
  input parameter arg2 :: <GtkCTreeNode>;
  result res :: <gpointer>;
  c-name: "gtk_ctree_node_get_row_data";
end;

define C-function gtk-ctree-node-moveto
  input parameter arg1 :: <GtkCTree>;
  input parameter arg2 :: <GtkCTreeNode>;
  input parameter arg3 :: <gint>;
  input parameter arg4 :: <gfloat>;
  input parameter arg5 :: <gfloat>;
  c-name: "gtk_ctree_node_moveto";
end;

define C-function gtk-ctree-node-is-visible
  input parameter arg1 :: <GtkCTree>;
  input parameter arg2 :: <GtkCTreeNode>;
  result res :: <GtkVisibility>;
  c-name: "gtk_ctree_node_is_visible";
end;

define C-function gtk-ctree-set-indent
  input parameter arg1 :: <GtkCTree>;
  input parameter arg2 :: <gint>;
  c-name: "gtk_ctree_set_indent";
end;

define C-function gtk-ctree-set-spacing
  input parameter arg1 :: <GtkCTree>;
  input parameter arg2 :: <gint>;
  c-name: "gtk_ctree_set_spacing";
end;

define C-function gtk-ctree-set-show-stub
  input parameter arg1 :: <GtkCTree>;
  input parameter arg2 :: <gboolean>;
  c-name: "gtk_ctree_set_show_stub";
end;

define C-function gtk-ctree-set-line-style
  input parameter arg1 :: <GtkCTree>;
  input parameter arg2 :: <GtkCTreeLineStyle>;
  c-name: "gtk_ctree_set_line_style";
end;

define C-function gtk-ctree-set-expander-style
  input parameter arg1 :: <GtkCTree>;
  input parameter arg2 :: <GtkCTreeExpanderStyle>;
  c-name: "gtk_ctree_set_expander_style";
end;

define C-function gtk-ctree-set-drag-compare-func
  input parameter arg1 :: <GtkCTree>;
  input parameter arg2 :: <GtkCTreeCompareDragFunc>;
  c-name: "gtk_ctree_set_drag_compare_func";
end;

define C-function gtk-ctree-sort-node
  input parameter arg1 :: <GtkCTree>;
  input parameter arg2 :: <GtkCTreeNode>;
  c-name: "gtk_ctree_sort_node";
end;

define C-function gtk-ctree-sort-recursive
  input parameter arg1 :: <GtkCTree>;
  input parameter arg2 :: <GtkCTreeNode>;
  c-name: "gtk_ctree_sort_recursive";
end;

define C-function gtk-ctree-node-get-type
  result res :: <GType>;
  c-name: "gtk_ctree_node_get_type";
end;

define constant <anonymous-5892> = <C-int>;
define constant $GTK-CLIST-IN-DRAG = 1;
define constant $GTK-CLIST-ROW-HEIGHT-SET = 2;
define constant $GTK-CLIST-SHOW-TITLES = 4;
define constant $GTK-CLIST-ADD-MODE = 16;
define constant $GTK-CLIST-AUTO-SORT = 32;
define constant $GTK-CLIST-AUTO-RESIZE-BLOCKED = 64;
define constant $GTK-CLIST-REORDERABLE = 128;
define constant $GTK-CLIST-USE-DRAG-ICONS = 256;
define constant $GTK-CLIST-DRAW-DRAG-LINE = 512;
define constant $GTK-CLIST-DRAW-DRAG-RECT = 1024;

define constant <GtkButtonAction> = <C-int>;
define constant $GTK-BUTTON-IGNORED = 0;
define constant $GTK-BUTTON-SELECTS = 1;
define constant $GTK-BUTTON-DRAGS = 2;
define constant $GTK-BUTTON-EXPANDS = 4;

define C-struct <_GtkCellText>
  slot GtkCellText-type :: <GtkCellType>;
  slot GtkCellText-vertical :: <C-signed-short>;
  slot GtkCellText-horizontal :: <C-signed-short>;
  slot GtkCellText-style :: <GtkStyle>;
  slot GtkCellText-text :: <gchar*>;
end;

define C-pointer-type <GtkCellText> => <_GtkCellText>;

define C-struct <_GtkCellPixmap>
  slot GtkCellPixmap-type :: <GtkCellType>;
  slot GtkCellPixmap-vertical :: <C-signed-short>;
  slot GtkCellPixmap-horizontal :: <C-signed-short>;
  slot GtkCellPixmap-style :: <GtkStyle>;
  slot GtkCellPixmap-pixmap :: <GdkPixmap>;
  slot GtkCellPixmap-mask :: <GdkBitmap>;
end;

define C-pointer-type <GtkCellPixmap> => <_GtkCellPixmap>;

define C-struct <_GtkCellPixText>
  slot GtkCellPixText-type :: <GtkCellType>;
  slot GtkCellPixText-vertical :: <C-signed-short>;
  slot GtkCellPixText-horizontal :: <C-signed-short>;
  slot GtkCellPixText-style :: <GtkStyle>;
  slot GtkCellPixText-text :: <gchar*>;
  slot GtkCellPixText-spacing :: <C-unsigned-char>;
  slot GtkCellPixText-pixmap :: <GdkPixmap>;
  slot GtkCellPixText-mask :: <GdkBitmap>;
end;

define C-pointer-type <GtkCellPixText> => <_GtkCellPixText>;

define C-struct <_GtkCellWidget>
  slot GtkCellWidget-type :: <GtkCellType>;
  slot GtkCellWidget-vertical :: <C-signed-short>;
  slot GtkCellWidget-horizontal :: <C-signed-short>;
  slot GtkCellWidget-style :: <GtkStyle>;
  slot GtkCellWidget-widget :: <GtkWidget>;
end;

define C-pointer-type <GtkCellWidget> => <_GtkCellWidget>;

define C-struct <_GtkCListDestInfo>
  slot GtkCListDestInfo-cell :: <_GtkCListCellInfo>;
  slot GtkCListDestInfo-insert-pos :: <GtkCListDragPos>;
end;

define C-pointer-type <GtkCListDestInfo> => <_GtkCListDestInfo>;

define C-function gtk-clist-get-type
  result res :: <GtkType>;
  c-name: "gtk_clist_get_type";
end;

define C-function gtk-clist-new
  input parameter arg1 :: <gint>;
  result res :: <GtkWidget>;
  c-name: "gtk_clist_new";
end;

define C-function gtk-clist-new-with-titles
  input parameter arg1 :: <gint>;
  input parameter arg2 :: <gchar*<@>>;
  result res :: <GtkWidget>;
  c-name: "gtk_clist_new_with_titles";
end;

define C-function gtk-clist-set-hadjustment
  input parameter arg1 :: <GtkCList>;
  input parameter arg2 :: <GtkAdjustment>;
  c-name: "gtk_clist_set_hadjustment";
end;

define C-function gtk-clist-set-vadjustment
  input parameter arg1 :: <GtkCList>;
  input parameter arg2 :: <GtkAdjustment>;
  c-name: "gtk_clist_set_vadjustment";
end;

define C-function gtk-clist-get-hadjustment
  input parameter arg1 :: <GtkCList>;
  result res :: <GtkAdjustment>;
  c-name: "gtk_clist_get_hadjustment";
end;

define C-function gtk-clist-get-vadjustment
  input parameter arg1 :: <GtkCList>;
  result res :: <GtkAdjustment>;
  c-name: "gtk_clist_get_vadjustment";
end;

define C-function gtk-clist-set-shadow-type
  input parameter arg1 :: <GtkCList>;
  input parameter arg2 :: <GtkShadowType>;
  c-name: "gtk_clist_set_shadow_type";
end;

define C-function gtk-clist-set-selection-mode
  input parameter arg1 :: <GtkCList>;
  input parameter arg2 :: <GtkSelectionMode>;
  c-name: "gtk_clist_set_selection_mode";
end;

define C-function gtk-clist-set-reorderable
  input parameter arg1 :: <GtkCList>;
  input parameter arg2 :: <gboolean>;
  c-name: "gtk_clist_set_reorderable";
end;

define C-function gtk-clist-set-use-drag-icons
  input parameter arg1 :: <GtkCList>;
  input parameter arg2 :: <gboolean>;
  c-name: "gtk_clist_set_use_drag_icons";
end;

define C-function gtk-clist-set-button-actions
  input parameter arg1 :: <GtkCList>;
  input parameter arg2 :: <guint>;
  input parameter arg3 :: <guint8>;
  c-name: "gtk_clist_set_button_actions";
end;

define C-function gtk-clist-freeze
  input parameter arg1 :: <GtkCList>;
  c-name: "gtk_clist_freeze";
end;

define C-function gtk-clist-thaw
  input parameter arg1 :: <GtkCList>;
  c-name: "gtk_clist_thaw";
end;

define C-function gtk-clist-column-titles-show
  input parameter arg1 :: <GtkCList>;
  c-name: "gtk_clist_column_titles_show";
end;

define C-function gtk-clist-column-titles-hide
  input parameter arg1 :: <GtkCList>;
  c-name: "gtk_clist_column_titles_hide";
end;

define C-function gtk-clist-column-title-active
  input parameter arg1 :: <GtkCList>;
  input parameter arg2 :: <gint>;
  c-name: "gtk_clist_column_title_active";
end;

define C-function gtk-clist-column-title-passive
  input parameter arg1 :: <GtkCList>;
  input parameter arg2 :: <gint>;
  c-name: "gtk_clist_column_title_passive";
end;

define C-function gtk-clist-column-titles-active
  input parameter arg1 :: <GtkCList>;
  c-name: "gtk_clist_column_titles_active";
end;

define C-function gtk-clist-column-titles-passive
  input parameter arg1 :: <GtkCList>;
  c-name: "gtk_clist_column_titles_passive";
end;

define C-function gtk-clist-set-column-title
  input parameter arg1 :: <GtkCList>;
  input parameter arg2 :: <gint>;
  input parameter arg3 :: <gchar*>;
  c-name: "gtk_clist_set_column_title";
end;

define C-function gtk-clist-get-column-title
  input parameter arg1 :: <GtkCList>;
  input parameter arg2 :: <gint>;
  result res :: <gchar*>;
  c-name: "gtk_clist_get_column_title";
end;

define C-function gtk-clist-set-column-widget
  input parameter arg1 :: <GtkCList>;
  input parameter arg2 :: <gint>;
  input parameter arg3 :: <GtkWidget>;
  c-name: "gtk_clist_set_column_widget";
end;

define C-function gtk-clist-get-column-widget
  input parameter arg1 :: <GtkCList>;
  input parameter arg2 :: <gint>;
  result res :: <GtkWidget>;
  c-name: "gtk_clist_get_column_widget";
end;

define C-function gtk-clist-set-column-justification
  input parameter arg1 :: <GtkCList>;
  input parameter arg2 :: <gint>;
  input parameter arg3 :: <GtkJustification>;
  c-name: "gtk_clist_set_column_justification";
end;

define C-function gtk-clist-set-column-visibility
  input parameter arg1 :: <GtkCList>;
  input parameter arg2 :: <gint>;
  input parameter arg3 :: <gboolean>;
  c-name: "gtk_clist_set_column_visibility";
end;

define C-function gtk-clist-set-column-resizeable
  input parameter arg1 :: <GtkCList>;
  input parameter arg2 :: <gint>;
  input parameter arg3 :: <gboolean>;
  c-name: "gtk_clist_set_column_resizeable";
end;

define C-function gtk-clist-set-column-auto-resize
  input parameter arg1 :: <GtkCList>;
  input parameter arg2 :: <gint>;
  input parameter arg3 :: <gboolean>;
  c-name: "gtk_clist_set_column_auto_resize";
end;

define C-function gtk-clist-columns-autosize
  input parameter arg1 :: <GtkCList>;
  result res :: <gint>;
  c-name: "gtk_clist_columns_autosize";
end;

define C-function gtk-clist-optimal-column-width
  input parameter arg1 :: <GtkCList>;
  input parameter arg2 :: <gint>;
  result res :: <gint>;
  c-name: "gtk_clist_optimal_column_width";
end;

define C-function gtk-clist-set-column-width
  input parameter arg1 :: <GtkCList>;
  input parameter arg2 :: <gint>;
  input parameter arg3 :: <gint>;
  c-name: "gtk_clist_set_column_width";
end;

define C-function gtk-clist-set-column-min-width
  input parameter arg1 :: <GtkCList>;
  input parameter arg2 :: <gint>;
  input parameter arg3 :: <gint>;
  c-name: "gtk_clist_set_column_min_width";
end;

define C-function gtk-clist-set-column-max-width
  input parameter arg1 :: <GtkCList>;
  input parameter arg2 :: <gint>;
  input parameter arg3 :: <gint>;
  c-name: "gtk_clist_set_column_max_width";
end;

define C-function gtk-clist-set-row-height
  input parameter arg1 :: <GtkCList>;
  input parameter arg2 :: <guint>;
  c-name: "gtk_clist_set_row_height";
end;

define C-function gtk-clist-moveto
  input parameter arg1 :: <GtkCList>;
  input parameter arg2 :: <gint>;
  input parameter arg3 :: <gint>;
  input parameter arg4 :: <gfloat>;
  input parameter arg5 :: <gfloat>;
  c-name: "gtk_clist_moveto";
end;

define C-function gtk-clist-row-is-visible
  input parameter arg1 :: <GtkCList>;
  input parameter arg2 :: <gint>;
  result res :: <GtkVisibility>;
  c-name: "gtk_clist_row_is_visible";
end;

define C-function gtk-clist-get-cell-type
  input parameter arg1 :: <GtkCList>;
  input parameter arg2 :: <gint>;
  input parameter arg3 :: <gint>;
  result res :: <GtkCellType>;
  c-name: "gtk_clist_get_cell_type";
end;

define C-function gtk-clist-set-text
  input parameter arg1 :: <GtkCList>;
  input parameter arg2 :: <gint>;
  input parameter arg3 :: <gint>;
  input parameter arg4 :: <gchar*>;
  c-name: "gtk_clist_set_text";
end;

define C-function gtk-clist-get-text
  input parameter arg1 :: <GtkCList>;
  input parameter arg2 :: <gint>;
  input parameter arg3 :: <gint>;
  input parameter arg4 :: <gchar**>;
  result res :: <gint>;
  c-name: "gtk_clist_get_text";
end;

define C-function gtk-clist-set-pixmap
  input parameter arg1 :: <GtkCList>;
  input parameter arg2 :: <gint>;
  input parameter arg3 :: <gint>;
  input parameter arg4 :: <GdkPixmap>;
  input parameter arg5 :: <GdkBitmap>;
  c-name: "gtk_clist_set_pixmap";
end;

define C-function gtk-clist-get-pixmap
  input parameter arg1 :: <GtkCList>;
  input parameter arg2 :: <gint>;
  input parameter arg3 :: <gint>;
  input parameter arg4 :: <GdkPixmap*>;
  input parameter arg5 :: <GdkBitmap*>;
  result res :: <gint>;
  c-name: "gtk_clist_get_pixmap";
end;

define C-function gtk-clist-set-pixtext
  input parameter arg1 :: <GtkCList>;
  input parameter arg2 :: <gint>;
  input parameter arg3 :: <gint>;
  input parameter arg4 :: <gchar*>;
  input parameter arg5 :: <guint8>;
  input parameter arg6 :: <GdkPixmap>;
  input parameter arg7 :: <GdkBitmap>;
  c-name: "gtk_clist_set_pixtext";
end;

define C-function gtk-clist-get-pixtext
  input parameter arg1 :: <GtkCList>;
  input parameter arg2 :: <gint>;
  input parameter arg3 :: <gint>;
  input parameter arg4 :: <gchar**>;
  input parameter arg5 :: <guint8*>;
  input parameter arg6 :: <GdkPixmap*>;
  input parameter arg7 :: <GdkBitmap*>;
  result res :: <gint>;
  c-name: "gtk_clist_get_pixtext";
end;

define C-function gtk-clist-set-foreground
  input parameter arg1 :: <GtkCList>;
  input parameter arg2 :: <gint>;
  input parameter arg3 :: <GdkColor>;
  c-name: "gtk_clist_set_foreground";
end;

define C-function gtk-clist-set-background
  input parameter arg1 :: <GtkCList>;
  input parameter arg2 :: <gint>;
  input parameter arg3 :: <GdkColor>;
  c-name: "gtk_clist_set_background";
end;

define C-function gtk-clist-set-cell-style
  input parameter arg1 :: <GtkCList>;
  input parameter arg2 :: <gint>;
  input parameter arg3 :: <gint>;
  input parameter arg4 :: <GtkStyle>;
  c-name: "gtk_clist_set_cell_style";
end;

define C-function gtk-clist-get-cell-style
  input parameter arg1 :: <GtkCList>;
  input parameter arg2 :: <gint>;
  input parameter arg3 :: <gint>;
  result res :: <GtkStyle>;
  c-name: "gtk_clist_get_cell_style";
end;

define C-function gtk-clist-set-row-style
  input parameter arg1 :: <GtkCList>;
  input parameter arg2 :: <gint>;
  input parameter arg3 :: <GtkStyle>;
  c-name: "gtk_clist_set_row_style";
end;

define C-function gtk-clist-get-row-style
  input parameter arg1 :: <GtkCList>;
  input parameter arg2 :: <gint>;
  result res :: <GtkStyle>;
  c-name: "gtk_clist_get_row_style";
end;

define C-function gtk-clist-set-shift
  input parameter arg1 :: <GtkCList>;
  input parameter arg2 :: <gint>;
  input parameter arg3 :: <gint>;
  input parameter arg4 :: <gint>;
  input parameter arg5 :: <gint>;
  c-name: "gtk_clist_set_shift";
end;

define C-function gtk-clist-set-selectable
  input parameter arg1 :: <GtkCList>;
  input parameter arg2 :: <gint>;
  input parameter arg3 :: <gboolean>;
  c-name: "gtk_clist_set_selectable";
end;

define C-function gtk-clist-get-selectable
  input parameter arg1 :: <GtkCList>;
  input parameter arg2 :: <gint>;
  result res :: <gboolean>;
  c-name: "gtk_clist_get_selectable";
end;

define C-function gtk-clist-prepend
  input parameter arg1 :: <GtkCList>;
  input parameter arg2 :: <gchar*<@>>;
  result res :: <gint>;
  c-name: "gtk_clist_prepend";
end;

define C-function gtk-clist-append
  input parameter arg1 :: <GtkCList>;
  input parameter arg2 :: <gchar*<@>>;
  result res :: <gint>;
  c-name: "gtk_clist_append";
end;

define C-function gtk-clist-insert
  input parameter arg1 :: <GtkCList>;
  input parameter arg2 :: <gint>;
  input parameter arg3 :: <gchar*<@>>;
  result res :: <gint>;
  c-name: "gtk_clist_insert";
end;

define C-function gtk-clist-remove
  input parameter arg1 :: <GtkCList>;
  input parameter arg2 :: <gint>;
  c-name: "gtk_clist_remove";
end;

define C-function gtk-clist-set-row-data
  input parameter arg1 :: <GtkCList>;
  input parameter arg2 :: <gint>;
  input parameter arg3 :: <gpointer>;
  c-name: "gtk_clist_set_row_data";
end;

define C-function gtk-clist-set-row-data-full
  input parameter arg1 :: <GtkCList>;
  input parameter arg2 :: <gint>;
  input parameter arg3 :: <gpointer>;
  input parameter arg4 :: <GtkDestroyNotify>;
  c-name: "gtk_clist_set_row_data_full";
end;

define C-function gtk-clist-get-row-data
  input parameter arg1 :: <GtkCList>;
  input parameter arg2 :: <gint>;
  result res :: <gpointer>;
  c-name: "gtk_clist_get_row_data";
end;

define C-function gtk-clist-find-row-from-data
  input parameter arg1 :: <GtkCList>;
  input parameter arg2 :: <gpointer>;
  result res :: <gint>;
  c-name: "gtk_clist_find_row_from_data";
end;

define C-function gtk-clist-select-row
  input parameter arg1 :: <GtkCList>;
  input parameter arg2 :: <gint>;
  input parameter arg3 :: <gint>;
  c-name: "gtk_clist_select_row";
end;

define C-function gtk-clist-unselect-row
  input parameter arg1 :: <GtkCList>;
  input parameter arg2 :: <gint>;
  input parameter arg3 :: <gint>;
  c-name: "gtk_clist_unselect_row";
end;

define C-function gtk-clist-undo-selection
  input parameter arg1 :: <GtkCList>;
  c-name: "gtk_clist_undo_selection";
end;

define C-function gtk-clist-clear
  input parameter arg1 :: <GtkCList>;
  c-name: "gtk_clist_clear";
end;

define C-function gtk-clist-get-selection-info
  input parameter arg1 :: <GtkCList>;
  input parameter arg2 :: <gint>;
  input parameter arg3 :: <gint>;
  input parameter arg4 :: <gint*>;
  input parameter arg5 :: <gint*>;
  result res :: <gint>;
  c-name: "gtk_clist_get_selection_info";
end;

define C-function gtk-clist-select-all
  input parameter arg1 :: <GtkCList>;
  c-name: "gtk_clist_select_all";
end;

define C-function gtk-clist-unselect-all
  input parameter arg1 :: <GtkCList>;
  c-name: "gtk_clist_unselect_all";
end;

define C-function gtk-clist-swap-rows
  input parameter arg1 :: <GtkCList>;
  input parameter arg2 :: <gint>;
  input parameter arg3 :: <gint>;
  c-name: "gtk_clist_swap_rows";
end;

define C-function gtk-clist-row-move
  input parameter arg1 :: <GtkCList>;
  input parameter arg2 :: <gint>;
  input parameter arg3 :: <gint>;
  c-name: "gtk_clist_row_move";
end;

define C-function gtk-clist-set-compare-func
  input parameter arg1 :: <GtkCList>;
  input parameter arg2 :: <GtkCListCompareFunc>;
  c-name: "gtk_clist_set_compare_func";
end;

define C-function gtk-clist-set-sort-column
  input parameter arg1 :: <GtkCList>;
  input parameter arg2 :: <gint>;
  c-name: "gtk_clist_set_sort_column";
end;

define C-function gtk-clist-set-sort-type
  input parameter arg1 :: <GtkCList>;
  input parameter arg2 :: <GtkSortType>;
  c-name: "gtk_clist_set_sort_type";
end;

define C-function gtk-clist-sort
  input parameter arg1 :: <GtkCList>;
  c-name: "gtk_clist_sort";
end;

define C-function gtk-clist-set-auto-sort
  input parameter arg1 :: <GtkCList>;
  input parameter arg2 :: <gboolean>;
  c-name: "gtk_clist_set_auto_sort";
end;

define C-subtype <_GtkAlignment> (<_GtkBin>, <_AtkImplementorIface>) end;
define constant <GtkAlignment> = <_GtkAlignment>;

define C-struct <_GtkAlignmentClass>
  slot GtkAlignmentClass-parent-class :: <_GtkBinClass>;
end;

define C-pointer-type <GtkAlignmentClass> => <_GtkAlignmentClass>;

define C-struct <_GtkAlignmentPrivate>
end;

define C-pointer-type <GtkAlignmentPrivate> => <_GtkAlignmentPrivate>;

define C-function gtk-alignment-get-type
  result res :: <GType>;
  c-name: "gtk_alignment_get_type";
end;

define C-function gtk-alignment-new
  input parameter arg1 :: <gfloat>;
  input parameter arg2 :: <gfloat>;
  input parameter arg3 :: <gfloat>;
  input parameter arg4 :: <gfloat>;
  result res :: <GtkWidget>;
  c-name: "gtk_alignment_new";
end;

define C-function gtk-alignment-set
  input parameter arg1 :: <GtkAlignment>;
  input parameter arg2 :: <gfloat>;
  input parameter arg3 :: <gfloat>;
  input parameter arg4 :: <gfloat>;
  input parameter arg5 :: <gfloat>;
  c-name: "gtk_alignment_set";
end;

define C-function gtk-alignment-set-padding
  input parameter arg1 :: <GtkAlignment>;
  input parameter arg2 :: <guint>;
  input parameter arg3 :: <guint>;
  input parameter arg4 :: <guint>;
  input parameter arg5 :: <guint>;
  c-name: "gtk_alignment_set_padding";
end;

define C-function gtk-alignment-get-padding
  input parameter arg1 :: <GtkAlignment>;
  input parameter arg2 :: <guint*>;
  input parameter arg3 :: <guint*>;
  input parameter arg4 :: <guint*>;
  input parameter arg5 :: <guint*>;
  c-name: "gtk_alignment_get_padding";
end;

define C-struct <_GtkComboBoxPrivate>
end;

define C-pointer-type <GtkComboBoxPrivate> => <_GtkComboBoxPrivate>;

define C-subtype <_GtkComboBox> (<_GtkBin>, <_AtkImplementorIface>, <_GtkCellLayout>, <_GtkCellEditable>) end;
define constant <GtkComboBox> = <_GtkComboBox>;

define C-struct <_GtkComboBoxEntryPrivate>
end;

define C-pointer-type <GtkComboBoxEntryPrivate> => <_GtkComboBoxEntryPrivate>;

define C-subtype <_GtkComboBoxEntry> (<_GtkComboBox>, <_AtkImplementorIface>, <_GtkCellLayout>, <_GtkCellEditable>) end;
define constant <GtkComboBoxEntry> = <_GtkComboBoxEntry>;

define constant <anonymous-6453> = <C-function-pointer>;
define constant <anonymous-6454> = <C-function-pointer>;
define constant <anonymous-6455> = <C-function-pointer>;
define constant <anonymous-6456> = <C-function-pointer>;
define constant <anonymous-6457> = <C-function-pointer>;
define C-struct <_GtkComboBoxClass>
  slot GtkComboBoxClass-parent-class :: <_GtkBinClass>;
  slot GtkComboBoxClass-changed :: <anonymous-6453>;
  slot GtkComboBoxClass-get-active-text :: <anonymous-6454>;
  slot GtkComboBoxClass-_gtk-reserved0 :: <anonymous-6455>;
  slot GtkComboBoxClass-_gtk-reserved1 :: <anonymous-6456>;
  slot GtkComboBoxClass-_gtk-reserved2 :: <anonymous-6457>;
end;

define C-pointer-type <GtkComboBoxClass> => <_GtkComboBoxClass>;

define constant <anonymous-6491> = <C-function-pointer>;
define constant <anonymous-6492> = <C-function-pointer>;
define constant <anonymous-6493> = <C-function-pointer>;
define constant <anonymous-6494> = <C-function-pointer>;
define C-struct <_GtkComboBoxEntryClass>
  slot GtkComboBoxEntryClass-parent-class :: <_GtkComboBoxClass>;
  slot GtkComboBoxEntryClass-_gtk-reserved0 :: <anonymous-6491>;
  slot GtkComboBoxEntryClass-_gtk-reserved1 :: <anonymous-6492>;
  slot GtkComboBoxEntryClass-_gtk-reserved2 :: <anonymous-6493>;
  slot GtkComboBoxEntryClass-_gtk-reserved3 :: <anonymous-6494>;
end;

define C-pointer-type <GtkComboBoxEntryClass> => <_GtkComboBoxEntryClass>;

define C-function gtk-combo-box-entry-get-type
  result res :: <GType>;
  c-name: "gtk_combo_box_entry_get_type";
end;

define C-function gtk-combo-box-entry-new
  result res :: <GtkWidget>;
  c-name: "gtk_combo_box_entry_new";
end;

define C-function gtk-combo-box-entry-new-with-model
  input parameter arg1 :: <GtkTreeModel>;
  input parameter arg2 :: <gint>;
  result res :: <GtkWidget>;
  c-name: "gtk_combo_box_entry_new_with_model";
end;

define C-function gtk-combo-box-entry-set-text-column
  input parameter arg1 :: <GtkComboBoxEntry>;
  input parameter arg2 :: <gint>;
  c-name: "gtk_combo_box_entry_set_text_column";
end;

define C-function gtk-combo-box-entry-get-text-column
  input parameter arg1 :: <GtkComboBoxEntry>;
  result res :: <gint>;
  c-name: "gtk_combo_box_entry_get_text_column";
end;

define C-function gtk-combo-box-entry-new-text
  result res :: <GtkWidget>;
  c-name: "gtk_combo_box_entry_new_text";
end;

define C-function gtk-combo-box-get-type
  result res :: <GType>;
  c-name: "gtk_combo_box_get_type";
end;

define C-function gtk-combo-box-new
  result res :: <GtkWidget>;
  c-name: "gtk_combo_box_new";
end;

define C-function gtk-combo-box-new-with-model
  input parameter arg1 :: <GtkTreeModel>;
  result res :: <GtkWidget>;
  c-name: "gtk_combo_box_new_with_model";
end;

define C-function gtk-combo-box-get-wrap-width
  input parameter arg1 :: <GtkComboBox>;
  result res :: <gint>;
  c-name: "gtk_combo_box_get_wrap_width";
end;

define C-function gtk-combo-box-set-wrap-width
  input parameter arg1 :: <GtkComboBox>;
  input parameter arg2 :: <gint>;
  c-name: "gtk_combo_box_set_wrap_width";
end;

define C-function gtk-combo-box-get-row-span-column
  input parameter arg1 :: <GtkComboBox>;
  result res :: <gint>;
  c-name: "gtk_combo_box_get_row_span_column";
end;

define C-function gtk-combo-box-set-row-span-column
  input parameter arg1 :: <GtkComboBox>;
  input parameter arg2 :: <gint>;
  c-name: "gtk_combo_box_set_row_span_column";
end;

define C-function gtk-combo-box-get-column-span-column
  input parameter arg1 :: <GtkComboBox>;
  result res :: <gint>;
  c-name: "gtk_combo_box_get_column_span_column";
end;

define C-function gtk-combo-box-set-column-span-column
  input parameter arg1 :: <GtkComboBox>;
  input parameter arg2 :: <gint>;
  c-name: "gtk_combo_box_set_column_span_column";
end;

define C-function gtk-combo-box-get-add-tearoffs
  input parameter arg1 :: <GtkComboBox>;
  result res :: <gboolean>;
  c-name: "gtk_combo_box_get_add_tearoffs";
end;

define C-function gtk-combo-box-set-add-tearoffs
  input parameter arg1 :: <GtkComboBox>;
  input parameter arg2 :: <gboolean>;
  c-name: "gtk_combo_box_set_add_tearoffs";
end;

define C-function gtk-combo-box-get-title
  input parameter arg1 :: <GtkComboBox>;
  result res :: <gchar*>;
  c-name: "gtk_combo_box_get_title";
end;

define C-function gtk-combo-box-set-title
  input parameter arg1 :: <GtkComboBox>;
  input parameter arg2 :: <gchar*>;
  c-name: "gtk_combo_box_set_title";
end;

define C-function gtk-combo-box-get-focus-on-click
  input parameter arg1 :: <GtkComboBox>;
  result res :: <gboolean>;
  c-name: "gtk_combo_box_get_focus_on_click";
end;

define C-function gtk-combo-box-set-focus-on-click
  input parameter arg1 :: <GtkComboBox>;
  input parameter arg2 :: <gboolean>;
  c-name: "gtk_combo_box_set_focus_on_click";
end;

define C-function gtk-combo-box-get-active
  input parameter arg1 :: <GtkComboBox>;
  result res :: <gint>;
  c-name: "gtk_combo_box_get_active";
end;

define C-function gtk-combo-box-set-active
  input parameter arg1 :: <GtkComboBox>;
  input parameter arg2 :: <gint>;
  c-name: "gtk_combo_box_set_active";
end;

define C-function gtk-combo-box-get-active-iter
  input parameter arg1 :: <GtkComboBox>;
  input parameter arg2 :: <GtkTreeIter>;
  result res :: <gboolean>;
  c-name: "gtk_combo_box_get_active_iter";
end;

define C-function gtk-combo-box-set-active-iter
  input parameter arg1 :: <GtkComboBox>;
  input parameter arg2 :: <GtkTreeIter>;
  c-name: "gtk_combo_box_set_active_iter";
end;

define C-function gtk-combo-box-set-model
  input parameter arg1 :: <GtkComboBox>;
  input parameter arg2 :: <GtkTreeModel>;
  c-name: "gtk_combo_box_set_model";
end;

define C-function gtk-combo-box-get-model
  input parameter arg1 :: <GtkComboBox>;
  result res :: <GtkTreeModel>;
  c-name: "gtk_combo_box_get_model";
end;

define C-function gtk-combo-box-get-row-separator-func
  input parameter arg1 :: <GtkComboBox>;
  result res :: <GtkTreeViewRowSeparatorFunc>;
  c-name: "gtk_combo_box_get_row_separator_func";
end;

define C-function gtk-combo-box-set-row-separator-func
  input parameter arg1 :: <GtkComboBox>;
  input parameter arg2 :: <GtkTreeViewRowSeparatorFunc>;
  input parameter arg3 :: <gpointer>;
  input parameter arg4 :: <GtkDestroyNotify>;
  c-name: "gtk_combo_box_set_row_separator_func";
end;

define C-function gtk-combo-box-new-text
  result res :: <GtkWidget>;
  c-name: "gtk_combo_box_new_text";
end;

define C-function gtk-combo-box-append-text
  input parameter arg1 :: <GtkComboBox>;
  input parameter arg2 :: <gchar*>;
  c-name: "gtk_combo_box_append_text";
end;

define C-function gtk-combo-box-insert-text
  input parameter arg1 :: <GtkComboBox>;
  input parameter arg2 :: <gint>;
  input parameter arg3 :: <gchar*>;
  c-name: "gtk_combo_box_insert_text";
end;

define C-function gtk-combo-box-prepend-text
  input parameter arg1 :: <GtkComboBox>;
  input parameter arg2 :: <gchar*>;
  c-name: "gtk_combo_box_prepend_text";
end;

define C-function gtk-combo-box-remove-text
  input parameter arg1 :: <GtkComboBox>;
  input parameter arg2 :: <gint>;
  c-name: "gtk_combo_box_remove_text";
end;

define C-function gtk-combo-box-get-active-text
  input parameter arg1 :: <GtkComboBox>;
  result res :: <gchar*>;
  c-name: "gtk_combo_box_get_active_text";
end;

define C-function gtk-combo-box-popup
  input parameter arg1 :: <GtkComboBox>;
  c-name: "gtk_combo_box_popup";
end;

define C-function gtk-combo-box-popdown
  input parameter arg1 :: <GtkComboBox>;
  c-name: "gtk_combo_box_popdown";
end;

define C-function gtk-combo-box-get-popup-accessible
  input parameter arg1 :: <GtkComboBox>;
  result res :: <AtkObject>;
  c-name: "gtk_combo_box_get_popup_accessible";
end;

define C-subtype <_GtkCombo> (<_GtkHBox>, <_AtkImplementorIface>) end;
define constant <GtkCombo> = <_GtkCombo>;

define constant <anonymous-6072> = <C-function-pointer>;
define constant <anonymous-6073> = <C-function-pointer>;
define constant <anonymous-6074> = <C-function-pointer>;
define constant <anonymous-6075> = <C-function-pointer>;
define C-struct <_GtkComboClass>
  slot GtkComboClass-parent-class :: <_GtkHBoxClass>;
  slot GtkComboClass-_gtk-reserved1 :: <anonymous-6072>;
  slot GtkComboClass-_gtk-reserved2 :: <anonymous-6073>;
  slot GtkComboClass-_gtk-reserved3 :: <anonymous-6074>;
  slot GtkComboClass-_gtk-reserved4 :: <anonymous-6075>;
end;

define C-pointer-type <GtkComboClass> => <_GtkComboClass>;

define C-function gtk-combo-get-type
  result res :: <GType>;
  c-name: "gtk_combo_get_type";
end;

define C-function gtk-combo-new
  result res :: <GtkWidget>;
  c-name: "gtk_combo_new";
end;

define C-function gtk-combo-set-value-in-list
  input parameter arg1 :: <GtkCombo>;
  input parameter arg2 :: <gboolean>;
  input parameter arg3 :: <gboolean>;
  c-name: "gtk_combo_set_value_in_list";
end;

define C-function gtk-combo-set-use-arrows
  input parameter arg1 :: <GtkCombo>;
  input parameter arg2 :: <gboolean>;
  c-name: "gtk_combo_set_use_arrows";
end;

define C-function gtk-combo-set-use-arrows-always
  input parameter arg1 :: <GtkCombo>;
  input parameter arg2 :: <gboolean>;
  c-name: "gtk_combo_set_use_arrows_always";
end;

define C-function gtk-combo-set-case-sensitive
  input parameter arg1 :: <GtkCombo>;
  input parameter arg2 :: <gboolean>;
  c-name: "gtk_combo_set_case_sensitive";
end;

define C-function gtk-combo-set-item-string
  input parameter arg1 :: <GtkCombo>;
  input parameter arg2 :: <GtkItem>;
  input parameter arg3 :: <gchar*>;
  c-name: "gtk_combo_set_item_string";
end;

define C-function gtk-combo-set-popdown-strings
  input parameter arg1 :: <GtkCombo>;
  input parameter arg2 :: <GList>;
  c-name: "gtk_combo_set_popdown_strings";
end;

define C-function gtk-combo-disable-activate
  input parameter arg1 :: <GtkCombo>;
  c-name: "gtk_combo_disable_activate";
end;

define C-subtype <_GtkColorSelectionDialog> (<_GtkDialog>, <_AtkImplementorIface>) end;
define constant <GtkColorSelectionDialog> = <_GtkColorSelectionDialog>;

define constant <anonymous-6059> = <C-function-pointer>;
define constant <anonymous-6060> = <C-function-pointer>;
define constant <anonymous-6061> = <C-function-pointer>;
define constant <anonymous-6062> = <C-function-pointer>;
define C-struct <_GtkColorSelectionDialogClass>
  slot GtkColorSelectionDialogClass-parent-class :: <_GtkDialogClass>;
  slot GtkColorSelectionDialogClass-_gtk-reserved1 :: <anonymous-6059>;
  slot GtkColorSelectionDialogClass-_gtk-reserved2 :: <anonymous-6060>;
  slot GtkColorSelectionDialogClass-_gtk-reserved3 :: <anonymous-6061>;
  slot GtkColorSelectionDialogClass-_gtk-reserved4 :: <anonymous-6062>;
end;

define C-pointer-type <GtkColorSelectionDialogClass> => <_GtkColorSelectionDialogClass>;

define C-function gtk-color-selection-dialog-get-type
  result res :: <GType>;
  c-name: "gtk_color_selection_dialog_get_type";
end;

define C-function gtk-color-selection-dialog-new
  input parameter arg1 :: <gchar*>;
  result res :: <GtkWidget>;
  c-name: "gtk_color_selection_dialog_new";
end;

define C-subtype <_GtkColorSelection> (<_GtkVBox>, <_AtkImplementorIface>) end;
define constant <GtkColorSelection> = <_GtkColorSelection>;

define constant <anonymous-6032> = <C-function-pointer>;
define constant <anonymous-6033> = <C-function-pointer>;
define constant <anonymous-6034> = <C-function-pointer>;
define constant <anonymous-6035> = <C-function-pointer>;
define constant <anonymous-6036> = <C-function-pointer>;
define C-struct <_GtkColorSelectionClass>
  slot GtkColorSelectionClass-parent-class :: <_GtkVBoxClass>;
  slot GtkColorSelectionClass-color-changed :: <anonymous-6032>;
  slot GtkColorSelectionClass-_gtk-reserved1 :: <anonymous-6033>;
  slot GtkColorSelectionClass-_gtk-reserved2 :: <anonymous-6034>;
  slot GtkColorSelectionClass-_gtk-reserved3 :: <anonymous-6035>;
  slot GtkColorSelectionClass-_gtk-reserved4 :: <anonymous-6036>;
end;

define C-pointer-type <GtkColorSelectionClass> => <_GtkColorSelectionClass>;

define constant <anonymous-6030> = <C-function-pointer>;
define constant <GtkColorSelectionChangePaletteFunc> = <anonymous-6030>;

define constant <anonymous-6031> = <C-function-pointer>;
define constant <GtkColorSelectionChangePaletteWithScreenFunc> = <anonymous-6031>;

define C-function gtk-color-selection-get-type
  result res :: <GType>;
  c-name: "gtk_color_selection_get_type";
end;

define C-function gtk-color-selection-new
  result res :: <GtkWidget>;
  c-name: "gtk_color_selection_new";
end;

define C-function gtk-color-selection-get-has-opacity-control
  input parameter arg1 :: <GtkColorSelection>;
  result res :: <gboolean>;
  c-name: "gtk_color_selection_get_has_opacity_control";
end;

define C-function gtk-color-selection-set-has-opacity-control
  input parameter arg1 :: <GtkColorSelection>;
  input parameter arg2 :: <gboolean>;
  c-name: "gtk_color_selection_set_has_opacity_control";
end;

define C-function gtk-color-selection-get-has-palette
  input parameter arg1 :: <GtkColorSelection>;
  result res :: <gboolean>;
  c-name: "gtk_color_selection_get_has_palette";
end;

define C-function gtk-color-selection-set-has-palette
  input parameter arg1 :: <GtkColorSelection>;
  input parameter arg2 :: <gboolean>;
  c-name: "gtk_color_selection_set_has_palette";
end;

define C-function gtk-color-selection-set-current-color
  input parameter arg1 :: <GtkColorSelection>;
  input parameter arg2 :: <GdkColor>;
  c-name: "gtk_color_selection_set_current_color";
end;

define C-function gtk-color-selection-set-current-alpha
  input parameter arg1 :: <GtkColorSelection>;
  input parameter arg2 :: <guint16>;
  c-name: "gtk_color_selection_set_current_alpha";
end;

define C-function gtk-color-selection-get-current-color
  input parameter arg1 :: <GtkColorSelection>;
  input parameter arg2 :: <GdkColor>;
  c-name: "gtk_color_selection_get_current_color";
end;

define C-function gtk-color-selection-get-current-alpha
  input parameter arg1 :: <GtkColorSelection>;
  result res :: <guint16>;
  c-name: "gtk_color_selection_get_current_alpha";
end;

define C-function gtk-color-selection-set-previous-color
  input parameter arg1 :: <GtkColorSelection>;
  input parameter arg2 :: <GdkColor>;
  c-name: "gtk_color_selection_set_previous_color";
end;

define C-function gtk-color-selection-set-previous-alpha
  input parameter arg1 :: <GtkColorSelection>;
  input parameter arg2 :: <guint16>;
  c-name: "gtk_color_selection_set_previous_alpha";
end;

define C-function gtk-color-selection-get-previous-color
  input parameter arg1 :: <GtkColorSelection>;
  input parameter arg2 :: <GdkColor>;
  c-name: "gtk_color_selection_get_previous_color";
end;

define C-function gtk-color-selection-get-previous-alpha
  input parameter arg1 :: <GtkColorSelection>;
  result res :: <guint16>;
  c-name: "gtk_color_selection_get_previous_alpha";
end;

define C-function gtk-color-selection-is-adjusting
  input parameter arg1 :: <GtkColorSelection>;
  result res :: <gboolean>;
  c-name: "gtk_color_selection_is_adjusting";
end;

define C-pointer-type <GdkColor*> => <GdkColor>;
define C-function gtk-color-selection-palette-from-string
  input parameter arg1 :: <gchar*>;
  input parameter arg2 :: <GdkColor*>;
  input parameter arg3 :: <gint*>;
  result res :: <gboolean>;
  c-name: "gtk_color_selection_palette_from_string";
end;

define C-function gtk-color-selection-palette-to-string
  input parameter arg1 :: <GdkColor>;
  input parameter arg2 :: <gint>;
  result res :: <gchar*>;
  c-name: "gtk_color_selection_palette_to_string";
end;

define C-function gtk-color-selection-set-change-palette-hook
  input parameter arg1 :: <GtkColorSelectionChangePaletteFunc>;
  result res :: <GtkColorSelectionChangePaletteFunc>;
  c-name: "gtk_color_selection_set_change_palette_hook";
end;

define C-function gtk-color-selection-set-change-palette-with-screen-hook
  input parameter arg1 :: <GtkColorSelectionChangePaletteWithScreenFunc>;
  result res :: <GtkColorSelectionChangePaletteWithScreenFunc>;
  c-name: "gtk_color_selection_set_change_palette_with_screen_hook";
end;

define C-function gtk-color-selection-set-color
  input parameter arg1 :: <GtkColorSelection>;
  input parameter arg2 :: <gdouble*>;
  c-name: "gtk_color_selection_set_color";
end;

define C-function gtk-color-selection-get-color
  input parameter arg1 :: <GtkColorSelection>;
  input parameter arg2 :: <gdouble*>;
  c-name: "gtk_color_selection_get_color";
end;

define C-function gtk-color-selection-set-update-policy
  input parameter arg1 :: <GtkColorSelection>;
  input parameter arg2 :: <GtkUpdateType>;
  c-name: "gtk_color_selection_set_update_policy";
end;

define C-struct <_GtkColorButtonPrivate>
end;

define C-pointer-type <GtkColorButtonPrivate> => <_GtkColorButtonPrivate>;

define C-subtype <_GtkColorButton> (<_GtkButton>, <_AtkImplementorIface>) end;
define constant <GtkColorButton> = <_GtkColorButton>;

define constant <anonymous-6012> = <C-function-pointer>;
define constant <anonymous-6013> = <C-function-pointer>;
define constant <anonymous-6014> = <C-function-pointer>;
define constant <anonymous-6015> = <C-function-pointer>;
define constant <anonymous-6016> = <C-function-pointer>;
define C-struct <_GtkColorButtonClass>
  slot GtkColorButtonClass-parent-class :: <_GtkButtonClass>;
  slot GtkColorButtonClass-color-set :: <anonymous-6012>;
  slot GtkColorButtonClass-_gtk-reserved1 :: <anonymous-6013>;
  slot GtkColorButtonClass-_gtk-reserved2 :: <anonymous-6014>;
  slot GtkColorButtonClass-_gtk-reserved3 :: <anonymous-6015>;
  slot GtkColorButtonClass-_gtk-reserved4 :: <anonymous-6016>;
end;

define C-pointer-type <GtkColorButtonClass> => <_GtkColorButtonClass>;

define C-function gtk-color-button-get-type
  result res :: <GType>;
  c-name: "gtk_color_button_get_type";
end;

define C-function gtk-color-button-new
  result res :: <GtkWidget>;
  c-name: "gtk_color_button_new";
end;

define C-function gtk-color-button-new-with-color
  input parameter arg1 :: <GdkColor>;
  result res :: <GtkWidget>;
  c-name: "gtk_color_button_new_with_color";
end;

define C-function gtk-color-button-set-color
  input parameter arg1 :: <GtkColorButton>;
  input parameter arg2 :: <GdkColor>;
  c-name: "gtk_color_button_set_color";
end;

define C-function gtk-color-button-set-alpha
  input parameter arg1 :: <GtkColorButton>;
  input parameter arg2 :: <guint16>;
  c-name: "gtk_color_button_set_alpha";
end;

define C-function gtk-color-button-get-color
  input parameter arg1 :: <GtkColorButton>;
  input parameter arg2 :: <GdkColor>;
  c-name: "gtk_color_button_get_color";
end;

define C-function gtk-color-button-get-alpha
  input parameter arg1 :: <GtkColorButton>;
  result res :: <guint16>;
  c-name: "gtk_color_button_get_alpha";
end;

define C-function gtk-color-button-set-use-alpha
  input parameter arg1 :: <GtkColorButton>;
  input parameter arg2 :: <gboolean>;
  c-name: "gtk_color_button_set_use_alpha";
end;

define C-function gtk-color-button-get-use-alpha
  input parameter arg1 :: <GtkColorButton>;
  result res :: <gboolean>;
  c-name: "gtk_color_button_get_use_alpha";
end;

define C-function gtk-color-button-set-title
  input parameter arg1 :: <GtkColorButton>;
  input parameter arg2 :: <gchar*>;
  c-name: "gtk_color_button_set_title";
end;

define C-function gtk-color-button-get-title
  input parameter arg1 :: <GtkColorButton>;
  result res :: <gchar*>;
  c-name: "gtk_color_button_get_title";
end;

define C-struct <_GtkCellViewPrivate>
end;

define C-pointer-type <GtkCellViewPrivate> => <_GtkCellViewPrivate>;

define C-subtype <_GtkCellView> (<_GtkWidget>, <_AtkImplementorIface>, <_GtkCellLayout>) end;
define constant <GtkCellView> = <_GtkCellView>;

define C-struct <_GtkCellViewClass>
  slot GtkCellViewClass-parent-class :: <_GtkWidgetClass>;
end;

define C-pointer-type <GtkCellViewClass> => <_GtkCellViewClass>;

define C-function gtk-cell-view-get-type
  result res :: <GType>;
  c-name: "gtk_cell_view_get_type";
end;

define C-function gtk-cell-view-new
  result res :: <GtkWidget>;
  c-name: "gtk_cell_view_new";
end;

define C-function gtk-cell-view-new-with-text
  input parameter arg1 :: <gchar*>;
  result res :: <GtkWidget>;
  c-name: "gtk_cell_view_new_with_text";
end;

define C-function gtk-cell-view-new-with-markup
  input parameter arg1 :: <gchar*>;
  result res :: <GtkWidget>;
  c-name: "gtk_cell_view_new_with_markup";
end;

define C-function gtk-cell-view-new-with-pixbuf
  input parameter arg1 :: <GdkPixbuf>;
  result res :: <GtkWidget>;
  c-name: "gtk_cell_view_new_with_pixbuf";
end;

define C-function gtk-cell-view-set-model
  input parameter arg1 :: <GtkCellView>;
  input parameter arg2 :: <GtkTreeModel>;
  c-name: "gtk_cell_view_set_model";
end;

define C-function gtk-cell-view-set-displayed-row
  input parameter arg1 :: <GtkCellView>;
  input parameter arg2 :: <GtkTreePath>;
  c-name: "gtk_cell_view_set_displayed_row";
end;

define C-function gtk-cell-view-get-displayed-row
  input parameter arg1 :: <GtkCellView>;
  result res :: <GtkTreePath>;
  c-name: "gtk_cell_view_get_displayed_row";
end;

define C-function gtk-cell-view-get-size-of-row
  input parameter arg1 :: <GtkCellView>;
  input parameter arg2 :: <GtkTreePath>;
  input parameter arg3 :: <GtkRequisition>;
  result res :: <gboolean>;
  c-name: "gtk_cell_view_get_size_of_row";
end;

define C-function gtk-cell-view-set-background-color
  input parameter arg1 :: <GtkCellView>;
  input parameter arg2 :: <GdkColor>;
  c-name: "gtk_cell_view_set_background_color";
end;

define C-function gtk-cell-view-get-cell-renderers
  input parameter arg1 :: <GtkCellView>;
  result res :: <GList>;
  c-name: "gtk_cell_view_get_cell_renderers";
end;

define C-subtype <_GtkCellRendererToggle> (<_GtkCellRenderer>) end;
define constant <GtkCellRendererToggle> = <_GtkCellRendererToggle>;

define constant <anonymous-5487> = <C-function-pointer>;
define constant <anonymous-5488> = <C-function-pointer>;
define constant <anonymous-5489> = <C-function-pointer>;
define constant <anonymous-5490> = <C-function-pointer>;
define constant <anonymous-5491> = <C-function-pointer>;
define C-struct <_GtkCellRendererToggleClass>
  slot GtkCellRendererToggleClass-parent-class :: <_GtkCellRendererClass>;
  slot GtkCellRendererToggleClass-toggled :: <anonymous-5487>;
  slot GtkCellRendererToggleClass-_gtk-reserved1 :: <anonymous-5488>;
  slot GtkCellRendererToggleClass-_gtk-reserved2 :: <anonymous-5489>;
  slot GtkCellRendererToggleClass-_gtk-reserved3 :: <anonymous-5490>;
  slot GtkCellRendererToggleClass-_gtk-reserved4 :: <anonymous-5491>;
end;

define C-pointer-type <GtkCellRendererToggleClass> => <_GtkCellRendererToggleClass>;

define C-function gtk-cell-renderer-toggle-get-type
  result res :: <GType>;
  c-name: "gtk_cell_renderer_toggle_get_type";
end;

define C-function gtk-cell-renderer-toggle-new
  result res :: <GtkCellRenderer>;
  c-name: "gtk_cell_renderer_toggle_new";
end;

define C-function gtk-cell-renderer-toggle-get-radio
  input parameter arg1 :: <GtkCellRendererToggle>;
  result res :: <gboolean>;
  c-name: "gtk_cell_renderer_toggle_get_radio";
end;

define C-function gtk-cell-renderer-toggle-set-radio
  input parameter arg1 :: <GtkCellRendererToggle>;
  input parameter arg2 :: <gboolean>;
  c-name: "gtk_cell_renderer_toggle_set_radio";
end;

define C-function gtk-cell-renderer-toggle-get-active
  input parameter arg1 :: <GtkCellRendererToggle>;
  result res :: <gboolean>;
  c-name: "gtk_cell_renderer_toggle_get_active";
end;

define C-function gtk-cell-renderer-toggle-set-active
  input parameter arg1 :: <GtkCellRendererToggle>;
  input parameter arg2 :: <gboolean>;
  c-name: "gtk_cell_renderer_toggle_set_active";
end;

define C-subtype <_GtkCellRendererText> (<_GtkCellRenderer>) end;
define constant <GtkCellRendererText> = <_GtkCellRendererText>;

define constant <anonymous-5450> = <C-function-pointer>;
define constant <anonymous-5451> = <C-function-pointer>;
define constant <anonymous-5452> = <C-function-pointer>;
define constant <anonymous-5453> = <C-function-pointer>;
define constant <anonymous-5454> = <C-function-pointer>;
define C-struct <_GtkCellRendererTextClass>
  slot GtkCellRendererTextClass-parent-class :: <_GtkCellRendererClass>;
  slot GtkCellRendererTextClass-edited :: <anonymous-5450>;
  slot GtkCellRendererTextClass-_gtk-reserved1 :: <anonymous-5451>;
  slot GtkCellRendererTextClass-_gtk-reserved2 :: <anonymous-5452>;
  slot GtkCellRendererTextClass-_gtk-reserved3 :: <anonymous-5453>;
  slot GtkCellRendererTextClass-_gtk-reserved4 :: <anonymous-5454>;
end;

define C-pointer-type <GtkCellRendererTextClass> => <_GtkCellRendererTextClass>;

define C-function gtk-cell-renderer-text-get-type
  result res :: <GType>;
  c-name: "gtk_cell_renderer_text_get_type";
end;

define C-function gtk-cell-renderer-text-new
  result res :: <GtkCellRenderer>;
  c-name: "gtk_cell_renderer_text_new";
end;

define C-function gtk-cell-renderer-text-set-fixed-height-from-font
  input parameter arg1 :: <GtkCellRendererText>;
  input parameter arg2 :: <gint>;
  c-name: "gtk_cell_renderer_text_set_fixed_height_from_font";
end;

define C-struct <_GtkCellRendererSpin>
  slot GtkCellRendererSpin-parent :: <_GtkCellRendererText>;
end;

define C-pointer-type <GtkCellRendererSpin> => <_GtkCellRendererSpin>;

define C-struct <_GtkCellRendererSpinClass>
  slot GtkCellRendererSpinClass-parent :: <_GtkCellRendererTextClass>;
end;

define C-pointer-type <GtkCellRendererSpinClass> => <_GtkCellRendererSpinClass>;

define C-struct <_GtkCellRendererSpinPrivate>
end;

define C-pointer-type <GtkCellRendererSpinPrivate> => <_GtkCellRendererSpinPrivate>;

define C-function gtk-cell-renderer-spin-get-type
  result res :: <GType>;
  c-name: "gtk_cell_renderer_spin_get_type";
end;

define C-function gtk-cell-renderer-spin-new
  result res :: <GtkCellRenderer>;
  c-name: "gtk_cell_renderer_spin_new";
end;

define C-struct <_GtkCellRendererProgressPrivate>
end;

define C-pointer-type <GtkCellRendererProgressPrivate> => <_GtkCellRendererProgressPrivate>;

define C-subtype <_GtkCellRendererProgress> (<_GtkCellRenderer>) end;
define constant <GtkCellRendererProgress> = <_GtkCellRendererProgress>;

define constant <anonymous-5476> = <C-function-pointer>;
define constant <anonymous-5477> = <C-function-pointer>;
define constant <anonymous-5478> = <C-function-pointer>;
define constant <anonymous-5479> = <C-function-pointer>;
define C-struct <_GtkCellRendererProgressClass>
  slot GtkCellRendererProgressClass-parent-class :: <_GtkCellRendererClass>;
  slot GtkCellRendererProgressClass-_gtk-reserved1 :: <anonymous-5476>;
  slot GtkCellRendererProgressClass-_gtk-reserved2 :: <anonymous-5477>;
  slot GtkCellRendererProgressClass-_gtk-reserved3 :: <anonymous-5478>;
  slot GtkCellRendererProgressClass-_gtk-reserved4 :: <anonymous-5479>;
end;

define C-pointer-type <GtkCellRendererProgressClass> => <_GtkCellRendererProgressClass>;

define C-function gtk-cell-renderer-progress-get-type
  result res :: <GType>;
  c-name: "gtk_cell_renderer_progress_get_type";
end;

define C-function gtk-cell-renderer-progress-new
  result res :: <GtkCellRenderer>;
  c-name: "gtk_cell_renderer_progress_new";
end;

define C-subtype <_GtkCellRendererPixbuf> (<_GtkCellRenderer>) end;
define constant <GtkCellRendererPixbuf> = <_GtkCellRendererPixbuf>;

define constant <anonymous-5470> = <C-function-pointer>;
define constant <anonymous-5471> = <C-function-pointer>;
define constant <anonymous-5472> = <C-function-pointer>;
define constant <anonymous-5473> = <C-function-pointer>;
define C-struct <_GtkCellRendererPixbufClass>
  slot GtkCellRendererPixbufClass-parent-class :: <_GtkCellRendererClass>;
  slot GtkCellRendererPixbufClass-_gtk-reserved1 :: <anonymous-5470>;
  slot GtkCellRendererPixbufClass-_gtk-reserved2 :: <anonymous-5471>;
  slot GtkCellRendererPixbufClass-_gtk-reserved3 :: <anonymous-5472>;
  slot GtkCellRendererPixbufClass-_gtk-reserved4 :: <anonymous-5473>;
end;

define C-pointer-type <GtkCellRendererPixbufClass> => <_GtkCellRendererPixbufClass>;

define C-function gtk-cell-renderer-pixbuf-get-type
  result res :: <GType>;
  c-name: "gtk_cell_renderer_pixbuf_get_type";
end;

define C-function gtk-cell-renderer-pixbuf-new
  result res :: <GtkCellRenderer>;
  c-name: "gtk_cell_renderer_pixbuf_new";
end;

define C-subtype <_GtkCellRendererCombo> (<_GtkCellRendererText>) end;
define constant <GtkCellRendererCombo> = <_GtkCellRendererCombo>;

define C-struct <_GtkCellRendererComboClass>
  slot GtkCellRendererComboClass-parent :: <_GtkCellRendererTextClass>;
end;

define C-pointer-type <GtkCellRendererComboClass> => <_GtkCellRendererComboClass>;

define C-function gtk-cell-renderer-combo-get-type
  result res :: <GType>;
  c-name: "gtk_cell_renderer_combo_get_type";
end;

define C-function gtk-cell-renderer-combo-new
  result res :: <GtkCellRenderer>;
  c-name: "gtk_cell_renderer_combo_new";
end;

define constant <GtkCellRendererAccelMode> = <C-int>;
define constant $GTK-CELL-RENDERER-ACCEL-MODE-GTK = 0;
define constant $GTK-CELL-RENDERER-ACCEL-MODE-OTHER = 1;

define C-struct <_GtkCellRendererAccel>
  slot GtkCellRendererAccel-parent :: <_GtkCellRendererText>;
  slot GtkCellRendererAccel-accel-key :: <C-unsigned-int>;
  slot GtkCellRendererAccel-accel-mods :: <GdkModifierType>;
  slot GtkCellRendererAccel-keycode :: <C-unsigned-int>;
  slot GtkCellRendererAccel-accel-mode :: <GtkCellRendererAccelMode>;
  slot GtkCellRendererAccel-edit-widget :: <GtkWidget>;
  slot GtkCellRendererAccel-grab-widget :: <GtkWidget>;
  slot GtkCellRendererAccel-sizing-label :: <GtkWidget>;
end;

define C-pointer-type <GtkCellRendererAccel> => <_GtkCellRendererAccel>;

define constant <anonymous-5459> = <C-function-pointer>;
define constant <anonymous-5460> = <C-function-pointer>;
define constant <anonymous-5461> = <C-function-pointer>;
define constant <anonymous-5462> = <C-function-pointer>;
define constant <anonymous-5463> = <C-function-pointer>;
define constant <anonymous-5464> = <C-function-pointer>;
define constant <anonymous-5465> = <C-function-pointer>;
define C-struct <_GtkCellRendererAccelClass>
  slot GtkCellRendererAccelClass-parent-class :: <_GtkCellRendererTextClass>;
  slot GtkCellRendererAccelClass-accel-edited :: <anonymous-5459>;
  slot GtkCellRendererAccelClass-accel-cleared :: <anonymous-5460>;
  slot GtkCellRendererAccelClass-_gtk-reserved0 :: <anonymous-5461>;
  slot GtkCellRendererAccelClass-_gtk-reserved1 :: <anonymous-5462>;
  slot GtkCellRendererAccelClass-_gtk-reserved2 :: <anonymous-5463>;
  slot GtkCellRendererAccelClass-_gtk-reserved3 :: <anonymous-5464>;
  slot GtkCellRendererAccelClass-_gtk-reserved4 :: <anonymous-5465>;
end;

define C-pointer-type <GtkCellRendererAccelClass> => <_GtkCellRendererAccelClass>;

define C-function gtk-cell-renderer-accel-get-type
  result res :: <GType>;
  c-name: "gtk_cell_renderer_accel_get_type";
end;

define C-function gtk-cell-renderer-accel-new
  result res :: <GtkCellRenderer>;
  c-name: "gtk_cell_renderer_accel_new";
end;

define C-struct <_GtkCellLayout>
end;

define C-pointer-type <GtkCellLayout> => <_GtkCellLayout>;

define constant <anonymous-5419> = <C-function-pointer>;
define constant <anonymous-5420> = <C-function-pointer>;
define constant <anonymous-5421> = <C-function-pointer>;
define constant <anonymous-5422> = <C-function-pointer>;
define constant <anonymous-5418> = <C-function-pointer>;
define constant <GtkCellLayoutDataFunc> = <anonymous-5418>;

define constant <anonymous-5423> = <C-function-pointer>;
define constant <anonymous-5424> = <C-function-pointer>;
define constant <anonymous-5425> = <C-function-pointer>;
define constant <anonymous-5426> = <C-function-pointer>;
define C-struct <_GtkCellLayoutIface>
  slot GtkCellLayoutIface-g-iface :: <_GTypeInterface>;
  slot GtkCellLayoutIface-pack-start :: <anonymous-5419>;
  slot GtkCellLayoutIface-pack-end :: <anonymous-5420>;
  slot GtkCellLayoutIface-clear :: <anonymous-5421>;
  slot GtkCellLayoutIface-add-attribute :: <anonymous-5422>;
  slot GtkCellLayoutIface-set-cell-data-func :: <anonymous-5423>;
  slot GtkCellLayoutIface-clear-attributes :: <anonymous-5424>;
  slot GtkCellLayoutIface-reorder :: <anonymous-5425>;
  slot GtkCellLayoutIface-get-cells :: <anonymous-5426>;
end;

define C-pointer-type <GtkCellLayoutIface> => <_GtkCellLayoutIface>;

define C-function gtk-cell-layout-get-type
  result res :: <GType>;
  c-name: "gtk_cell_layout_get_type";
end;

define C-function gtk-cell-layout-pack-start
  input parameter arg1 :: <GtkCellLayout>;
  input parameter arg2 :: <GtkCellRenderer>;
  input parameter arg3 :: <gboolean>;
  c-name: "gtk_cell_layout_pack_start";
end;

define C-function gtk-cell-layout-pack-end
  input parameter arg1 :: <GtkCellLayout>;
  input parameter arg2 :: <GtkCellRenderer>;
  input parameter arg3 :: <gboolean>;
  c-name: "gtk_cell_layout_pack_end";
end;

define C-function gtk-cell-layout-get-cells
  input parameter arg1 :: <GtkCellLayout>;
  result res :: <GList>;
  c-name: "gtk_cell_layout_get_cells";
end;

define C-function gtk-cell-layout-clear
  input parameter arg1 :: <GtkCellLayout>;
  c-name: "gtk_cell_layout_clear";
end;

define C-function gtk-cell-layout-set-attributes
  input parameter arg1 :: <GtkCellLayout>;
  input parameter arg2 :: <GtkCellRenderer>;
  c-name: "gtk_cell_layout_set_attributes";
end;

define C-function gtk-cell-layout-add-attribute
  input parameter arg1 :: <GtkCellLayout>;
  input parameter arg2 :: <GtkCellRenderer>;
  input parameter arg3 :: <gchar*>;
  input parameter arg4 :: <gint>;
  c-name: "gtk_cell_layout_add_attribute";
end;

define C-function gtk-cell-layout-set-cell-data-func
  input parameter arg1 :: <GtkCellLayout>;
  input parameter arg2 :: <GtkCellRenderer>;
  input parameter arg3 :: <GtkCellLayoutDataFunc>;
  input parameter arg4 :: <gpointer>;
  input parameter arg5 :: <GDestroyNotify>;
  c-name: "gtk_cell_layout_set_cell_data_func";
end;

define C-function gtk-cell-layout-clear-attributes
  input parameter arg1 :: <GtkCellLayout>;
  input parameter arg2 :: <GtkCellRenderer>;
  c-name: "gtk_cell_layout_clear_attributes";
end;

define C-function gtk-cell-layout-reorder
  input parameter arg1 :: <GtkCellLayout>;
  input parameter arg2 :: <GtkCellRenderer>;
  input parameter arg3 :: <gint>;
  c-name: "gtk_cell_layout_reorder";
end;

define C-struct <_GtkBuildable>
end;

define C-pointer-type <GtkBuildable> => <_GtkBuildable>;

define C-struct <_GtkBuilderPrivate>
end;

define C-pointer-type <GtkBuilderPrivate> => <_GtkBuilderPrivate>;

define C-struct <_GtkBuilder>
  slot GtkBuilder-parent-instance :: <_GObject>;
  slot GtkBuilder-priv :: <GtkBuilderPrivate>;
end;

define C-pointer-type <GtkBuilder> => <_GtkBuilder>;

define C-function _gtk-cell-layout-buildable-custom-tag-start
  input parameter arg1 :: <GtkBuildable>;
  input parameter arg2 :: <GtkBuilder>;
  input parameter arg3 :: <GObject>;
  input parameter arg4 :: <gchar*>;
  input parameter arg5 :: <GMarkupParser>;
  input parameter arg6 :: <gpointer*>;
  result res :: <gboolean>;
  c-name: "_gtk_cell_layout_buildable_custom_tag_start";
end;

define C-function _gtk-cell-layout-buildable-custom-tag-end
  input parameter arg1 :: <GtkBuildable>;
  input parameter arg2 :: <GtkBuilder>;
  input parameter arg3 :: <GObject>;
  input parameter arg4 :: <gchar*>;
  input parameter arg5 :: <gpointer*>;
  c-name: "_gtk_cell_layout_buildable_custom_tag_end";
end;

define C-function _gtk-cell-layout-buildable-add-child
  input parameter arg1 :: <GtkBuildable>;
  input parameter arg2 :: <GtkBuilder>;
  input parameter arg3 :: <GObject>;
  input parameter arg4 :: <gchar*>;
  c-name: "_gtk_cell_layout_buildable_add_child";
end;

define constant <anonymous-5032> = <C-function-pointer>;
define constant <anonymous-5033> = <C-function-pointer>;
define constant <anonymous-5034> = <C-function-pointer>;
define constant <anonymous-5035> = <C-function-pointer>;
define constant <anonymous-5036> = <C-function-pointer>;
define constant <anonymous-5037> = <C-function-pointer>;
define constant <anonymous-5038> = <C-function-pointer>;
define constant <anonymous-5039> = <C-function-pointer>;
define constant <anonymous-5040> = <C-function-pointer>;
define C-struct <_GtkBuilderClass>
  slot GtkBuilderClass-parent-class :: <_GObjectClass>;
  slot GtkBuilderClass-get-type-from-name :: <anonymous-5032>;
  slot GtkBuilderClass-_gtk-reserved1 :: <anonymous-5033>;
  slot GtkBuilderClass-_gtk-reserved2 :: <anonymous-5034>;
  slot GtkBuilderClass-_gtk-reserved3 :: <anonymous-5035>;
  slot GtkBuilderClass-_gtk-reserved4 :: <anonymous-5036>;
  slot GtkBuilderClass-_gtk-reserved5 :: <anonymous-5037>;
  slot GtkBuilderClass-_gtk-reserved6 :: <anonymous-5038>;
  slot GtkBuilderClass-_gtk-reserved7 :: <anonymous-5039>;
  slot GtkBuilderClass-_gtk-reserved8 :: <anonymous-5040>;
end;

define C-pointer-type <GtkBuilderClass> => <_GtkBuilderClass>;

define constant <GtkBuilderError> = <C-int>;
define constant $GTK-BUILDER-ERROR-INVALID-TYPE-FUNCTION = 0;
define constant $GTK-BUILDER-ERROR-UNHANDLED-TAG = 1;
define constant $GTK-BUILDER-ERROR-MISSING-ATTRIBUTE = 2;
define constant $GTK-BUILDER-ERROR-INVALID-ATTRIBUTE = 3;
define constant $GTK-BUILDER-ERROR-INVALID-TAG = 4;
define constant $GTK-BUILDER-ERROR-MISSING-PROPERTY-VALUE = 5;
define constant $GTK-BUILDER-ERROR-INVALID-VALUE = 6;

define C-function gtk-builder-error-quark
  result res :: <GQuark>;
  c-name: "gtk_builder_error_quark";
end;

define constant <anonymous-5041> = <C-function-pointer>;
define constant <GtkBuilderConnectFunc> = <anonymous-5041>;

define C-function gtk-builder-get-type
  result res :: <GType>;
  c-name: "gtk_builder_get_type";
end;

define C-function gtk-builder-new
  result res :: <GtkBuilder>;
  c-name: "gtk_builder_new";
end;

define C-function gtk-builder-add-from-file
  input parameter arg1 :: <GtkBuilder>;
  input parameter arg2 :: <gchar*>;
  input parameter arg3 :: <GError*>;
  result res :: <guint>;
  c-name: "gtk_builder_add_from_file";
end;

define C-function gtk-builder-add-from-string
  input parameter arg1 :: <GtkBuilder>;
  input parameter arg2 :: <gchar*>;
  input parameter arg3 :: <gsize>;
  input parameter arg4 :: <GError*>;
  result res :: <guint>;
  c-name: "gtk_builder_add_from_string";
end;

define C-function gtk-builder-get-object
  input parameter arg1 :: <GtkBuilder>;
  input parameter arg2 :: <gchar*>;
  result res :: <GObject>;
  c-name: "gtk_builder_get_object";
end;

define C-function gtk-builder-get-objects
  input parameter arg1 :: <GtkBuilder>;
  result res :: <GSList>;
  c-name: "gtk_builder_get_objects";
end;

define C-function gtk-builder-connect-signals
  input parameter arg1 :: <GtkBuilder>;
  input parameter arg2 :: <gpointer>;
  c-name: "gtk_builder_connect_signals";
end;

define C-function gtk-builder-connect-signals-full
  input parameter arg1 :: <GtkBuilder>;
  input parameter arg2 :: <GtkBuilderConnectFunc>;
  input parameter arg3 :: <gpointer>;
  c-name: "gtk_builder_connect_signals_full";
end;

define C-function gtk-builder-set-translation-domain
  input parameter arg1 :: <GtkBuilder>;
  input parameter arg2 :: <gchar*>;
  c-name: "gtk_builder_set_translation_domain";
end;

define C-function gtk-builder-get-translation-domain
  input parameter arg1 :: <GtkBuilder>;
  result res :: <gchar*>;
  c-name: "gtk_builder_get_translation_domain";
end;

define C-function gtk-builder-get-type-from-name
  input parameter arg1 :: <GtkBuilder>;
  input parameter arg2 :: <char*>;
  result res :: <GType>;
  c-name: "gtk_builder_get_type_from_name";
end;

define C-function gtk-builder-value-from-string
  input parameter arg1 :: <GtkBuilder>;
  input parameter arg2 :: <GParamSpec>;
  input parameter arg3 :: <gchar*>;
  input parameter arg4 :: <GValue>;
  input parameter arg5 :: <GError*>;
  result res :: <gboolean>;
  c-name: "gtk_builder_value_from_string";
end;

define C-function gtk-builder-value-from-string-type
  input parameter arg1 :: <GtkBuilder>;
  input parameter arg2 :: <GType>;
  input parameter arg3 :: <gchar*>;
  input parameter arg4 :: <GValue>;
  input parameter arg5 :: <GError*>;
  result res :: <gboolean>;
  c-name: "gtk_builder_value_from_string_type";
end;

define constant <anonymous-5055> = <C-function-pointer>;
define constant <anonymous-5056> = <C-function-pointer>;
define constant <anonymous-5057> = <C-function-pointer>;
define constant <anonymous-5058> = <C-function-pointer>;
define constant <anonymous-5059> = <C-function-pointer>;
define constant <anonymous-5060> = <C-function-pointer>;
define constant <anonymous-5061> = <C-function-pointer>;
define constant <anonymous-5062> = <C-function-pointer>;
define constant <anonymous-5063> = <C-function-pointer>;
define constant <anonymous-5064> = <C-function-pointer>;
define C-struct <_GtkBuildableIface>
  slot GtkBuildableIface-g-iface :: <_GTypeInterface>;
  slot GtkBuildableIface-set-name :: <anonymous-5055>;
  slot GtkBuildableIface-get-name :: <anonymous-5056>;
  slot GtkBuildableIface-add-child :: <anonymous-5057>;
  slot GtkBuildableIface-set-buildable-property :: <anonymous-5058>;
  slot GtkBuildableIface-construct-child :: <anonymous-5059>;
  slot GtkBuildableIface-custom-tag-start :: <anonymous-5060>;
  slot GtkBuildableIface-custom-tag-end :: <anonymous-5061>;
  slot GtkBuildableIface-custom-finished :: <anonymous-5062>;
  slot GtkBuildableIface-parser-finished :: <anonymous-5063>;
  slot GtkBuildableIface-get-internal-child :: <anonymous-5064>;
end;

define C-pointer-type <GtkBuildableIface> => <_GtkBuildableIface>;

define C-function gtk-buildable-get-type
  result res :: <GType>;
  c-name: "gtk_buildable_get_type";
end;

define C-function gtk-buildable-set-name
  input parameter arg1 :: <GtkBuildable>;
  input parameter arg2 :: <gchar*>;
  c-name: "gtk_buildable_set_name";
end;

define C-function gtk-buildable-get-name
  input parameter arg1 :: <GtkBuildable>;
  result res :: <gchar*>;
  c-name: "gtk_buildable_get_name";
end;

define C-function gtk-buildable-add-child
  input parameter arg1 :: <GtkBuildable>;
  input parameter arg2 :: <GtkBuilder>;
  input parameter arg3 :: <GObject>;
  input parameter arg4 :: <gchar*>;
  c-name: "gtk_buildable_add_child";
end;

define C-function gtk-buildable-set-buildable-property
  input parameter arg1 :: <GtkBuildable>;
  input parameter arg2 :: <GtkBuilder>;
  input parameter arg3 :: <gchar*>;
  input parameter arg4 :: <GValue>;
  c-name: "gtk_buildable_set_buildable_property";
end;

define C-function gtk-buildable-construct-child
  input parameter arg1 :: <GtkBuildable>;
  input parameter arg2 :: <GtkBuilder>;
  input parameter arg3 :: <gchar*>;
  result res :: <GObject>;
  c-name: "gtk_buildable_construct_child";
end;

define C-function gtk-buildable-custom-tag-start
  input parameter arg1 :: <GtkBuildable>;
  input parameter arg2 :: <GtkBuilder>;
  input parameter arg3 :: <GObject>;
  input parameter arg4 :: <gchar*>;
  input parameter arg5 :: <GMarkupParser>;
  input parameter arg6 :: <gpointer*>;
  result res :: <gboolean>;
  c-name: "gtk_buildable_custom_tag_start";
end;

define C-function gtk-buildable-custom-tag-end
  input parameter arg1 :: <GtkBuildable>;
  input parameter arg2 :: <GtkBuilder>;
  input parameter arg3 :: <GObject>;
  input parameter arg4 :: <gchar*>;
  input parameter arg5 :: <gpointer*>;
  c-name: "gtk_buildable_custom_tag_end";
end;

define C-function gtk-buildable-custom-finished
  input parameter arg1 :: <GtkBuildable>;
  input parameter arg2 :: <GtkBuilder>;
  input parameter arg3 :: <GObject>;
  input parameter arg4 :: <gchar*>;
  input parameter arg5 :: <gpointer>;
  c-name: "gtk_buildable_custom_finished";
end;

define C-function gtk-buildable-parser-finished
  input parameter arg1 :: <GtkBuildable>;
  input parameter arg2 :: <GtkBuilder>;
  c-name: "gtk_buildable_parser_finished";
end;

define C-function gtk-buildable-get-internal-child
  input parameter arg1 :: <GtkBuildable>;
  input parameter arg2 :: <GtkBuilder>;
  input parameter arg3 :: <gchar*>;
  result res :: <GObject>;
  c-name: "gtk_buildable_get_internal_child";
end;

define constant <gint<@7>> = <gint*>;
define constant <gint<@7><@6>> = <gint<@7>>;
define constant <gint<@31>> = <gint*>;
define constant <GtkCalendarDisplayOptions> = <C-int>;
define constant $GTK-CALENDAR-SHOW-HEADING = 1;
define constant $GTK-CALENDAR-SHOW-DAY-NAMES = 2;
define constant $GTK-CALENDAR-NO-MONTH-CHANGE = 4;
define constant $GTK-CALENDAR-SHOW-WEEK-NUMBERS = 8;
define constant $GTK-CALENDAR-WEEK-START-MONDAY = 16;

define constant <GdkColor<@31>> = <GdkColor>;
define C-struct <_GtkCalendarPrivate>
end;

define C-pointer-type <GtkCalendarPrivate> => <_GtkCalendarPrivate>;

define constant <gchar<@32>> = <gchar*>;
define constant <anonymous-5198> = <C-function-pointer>;
define constant <anonymous-5199> = <C-function-pointer>;
define constant <anonymous-5200> = <C-function-pointer>;
define constant <anonymous-5201> = <C-function-pointer>;
define C-subtype <_GtkCalendar> (<_GtkWidget>, <_AtkImplementorIface>) end;
define constant <GtkCalendar> = <_GtkCalendar>;

define constant <anonymous-5202> = <C-function-pointer>;
define constant <anonymous-5203> = <C-function-pointer>;
define constant <anonymous-5204> = <C-function-pointer>;
define constant <anonymous-5205> = <C-function-pointer>;
define constant <anonymous-5206> = <C-function-pointer>;
define constant <anonymous-5207> = <C-function-pointer>;
define constant <anonymous-5208> = <C-function-pointer>;
define C-struct <_GtkCalendarClass>
  slot GtkCalendarClass-parent-class :: <_GtkWidgetClass>;
  slot GtkCalendarClass-month-changed :: <anonymous-5202>;
  slot GtkCalendarClass-day-selected :: <anonymous-5203>;
  slot GtkCalendarClass-day-selected-double-click :: <anonymous-5204>;
  slot GtkCalendarClass-prev-month :: <anonymous-5205>;
  slot GtkCalendarClass-next-month :: <anonymous-5206>;
  slot GtkCalendarClass-prev-year :: <anonymous-5207>;
  slot GtkCalendarClass-next-year :: <anonymous-5208>;
end;

define C-pointer-type <GtkCalendarClass> => <_GtkCalendarClass>;

define C-function gtk-calendar-get-type
  result res :: <GType>;
  c-name: "gtk_calendar_get_type";
end;

define C-function gtk-calendar-new
  result res :: <GtkWidget>;
  c-name: "gtk_calendar_new";
end;

define C-function gtk-calendar-select-month
  input parameter arg1 :: <GtkCalendar>;
  input parameter arg2 :: <guint>;
  input parameter arg3 :: <guint>;
  result res :: <gboolean>;
  c-name: "gtk_calendar_select_month";
end;

define C-function gtk-calendar-select-day
  input parameter arg1 :: <GtkCalendar>;
  input parameter arg2 :: <guint>;
  c-name: "gtk_calendar_select_day";
end;

define C-function gtk-calendar-mark-day
  input parameter arg1 :: <GtkCalendar>;
  input parameter arg2 :: <guint>;
  result res :: <gboolean>;
  c-name: "gtk_calendar_mark_day";
end;

define C-function gtk-calendar-unmark-day
  input parameter arg1 :: <GtkCalendar>;
  input parameter arg2 :: <guint>;
  result res :: <gboolean>;
  c-name: "gtk_calendar_unmark_day";
end;

define C-function gtk-calendar-clear-marks
  input parameter arg1 :: <GtkCalendar>;
  c-name: "gtk_calendar_clear_marks";
end;

define C-function gtk-calendar-set-display-options
  input parameter arg1 :: <GtkCalendar>;
  input parameter arg2 :: <GtkCalendarDisplayOptions>;
  c-name: "gtk_calendar_set_display_options";
end;

define C-function gtk-calendar-get-display-options
  input parameter arg1 :: <GtkCalendar>;
  result res :: <GtkCalendarDisplayOptions>;
  c-name: "gtk_calendar_get_display_options";
end;

define C-function gtk-calendar-display-options
  input parameter arg1 :: <GtkCalendar>;
  input parameter arg2 :: <GtkCalendarDisplayOptions>;
  c-name: "gtk_calendar_display_options";
end;

define C-function gtk-calendar-get-date
  input parameter arg1 :: <GtkCalendar>;
  input parameter arg2 :: <guint*>;
  input parameter arg3 :: <guint*>;
  input parameter arg4 :: <guint*>;
  c-name: "gtk_calendar_get_date";
end;

define C-function gtk-calendar-freeze
  input parameter arg1 :: <GtkCalendar>;
  c-name: "gtk_calendar_freeze";
end;

define C-function gtk-calendar-thaw
  input parameter arg1 :: <GtkCalendar>;
  c-name: "gtk_calendar_thaw";
end;

define C-pointer-type <GtkBindingSet> => <_GtkBindingSet>;

define C-subtype <anonymous-5012> (<C-void*>) end;
define C-struct <_GtkBindingArg>
  slot GtkBindingArg-arg-type :: <C-unsigned-int>;
  slot GtkBindingArg-d :: <anonymous-5012>;
end;

define C-pointer-type <GtkBindingArg> => <_GtkBindingArg>;

define C-struct <_GtkBindingSignal>
  slot GtkBindingSignal-next :: <GtkBindingSignal>;
  slot GtkBindingSignal-signal-name :: <gchar*>;
  slot GtkBindingSignal-n-args :: <C-unsigned-int>;
  slot GtkBindingSignal-args :: <GtkBindingArg>;
end;

define C-pointer-type <GtkBindingSignal> => <_GtkBindingSignal>;

define C-struct <_GtkBindingEntry>
  slot GtkBindingEntry-keyval :: <C-unsigned-int>;
  slot GtkBindingEntry-modifiers :: <GdkModifierType>;
  slot GtkBindingEntry-binding-set :: <GtkBindingSet>;
  bitfield slot GtkBindingEntry-destroyed :: <C-int>, width: 1;
  bitfield slot GtkBindingEntry-in-emission :: <C-int>, width: 1;
  bitfield slot GtkBindingEntry-marks-unbound :: <C-int>, width: 1;
  slot GtkBindingEntry-set-next :: <GtkBindingEntry>;
  slot GtkBindingEntry-hash-next :: <GtkBindingEntry>;
  slot GtkBindingEntry-signals :: <GtkBindingSignal>;
end;

define C-pointer-type <GtkBindingEntry> => <_GtkBindingEntry>;

define C-struct <_GtkBindingSet>
  slot GtkBindingSet-set-name :: <gchar*>;
  slot GtkBindingSet-priority :: <C-signed-int>;
  slot GtkBindingSet-widget-path-pspecs :: <GSList>;
  slot GtkBindingSet-widget-class-pspecs :: <GSList>;
  slot GtkBindingSet-class-branch-pspecs :: <GSList>;
  slot GtkBindingSet-entries :: <GtkBindingEntry>;
  slot GtkBindingSet-current :: <GtkBindingEntry>;
  bitfield slot GtkBindingSet-parsed :: <C-int>, width: 1;
end;

define C-function gtk-binding-set-new
  input parameter arg1 :: <gchar*>;
  result res :: <GtkBindingSet>;
  c-name: "gtk_binding_set_new";
end;

define C-function gtk-binding-set-by-class
  input parameter arg1 :: <gpointer>;
  result res :: <GtkBindingSet>;
  c-name: "gtk_binding_set_by_class";
end;

define C-function gtk-binding-set-find
  input parameter arg1 :: <gchar*>;
  result res :: <GtkBindingSet>;
  c-name: "gtk_binding_set_find";
end;

define C-function gtk-bindings-activate
  input parameter arg1 :: <GtkObject>;
  input parameter arg2 :: <guint>;
  input parameter arg3 :: <GdkModifierType>;
  result res :: <gboolean>;
  c-name: "gtk_bindings_activate";
end;

define C-function gtk-bindings-activate-event
  input parameter arg1 :: <GtkObject>;
  input parameter arg2 :: <GdkEventKey>;
  result res :: <gboolean>;
  c-name: "gtk_bindings_activate_event";
end;

define C-function gtk-binding-set-activate
  input parameter arg1 :: <GtkBindingSet>;
  input parameter arg2 :: <guint>;
  input parameter arg3 :: <GdkModifierType>;
  input parameter arg4 :: <GtkObject>;
  result res :: <gboolean>;
  c-name: "gtk_binding_set_activate";
end;

define C-function gtk-binding-entry-clear
  input parameter arg1 :: <GtkBindingSet>;
  input parameter arg2 :: <guint>;
  input parameter arg3 :: <GdkModifierType>;
  c-name: "gtk_binding_entry_clear";
end;

define C-function gtk-binding-entry-add-signall
  input parameter arg1 :: <GtkBindingSet>;
  input parameter arg2 :: <guint>;
  input parameter arg3 :: <GdkModifierType>;
  input parameter arg4 :: <gchar*>;
  input parameter arg5 :: <GSList>;
  c-name: "gtk_binding_entry_add_signall";
end;

define C-function gtk-binding-parse-binding
  input parameter arg1 :: <GScanner>;
  result res :: <guint>;
  c-name: "gtk_binding_parse_binding";
end;

define C-function gtk-binding-entry-skip
  input parameter arg1 :: <GtkBindingSet>;
  input parameter arg2 :: <guint>;
  input parameter arg3 :: <GdkModifierType>;
  c-name: "gtk_binding_entry_skip";
end;

define C-function gtk-binding-entry-add-signal
  input parameter arg1 :: <GtkBindingSet>;
  input parameter arg2 :: <guint>;
  input parameter arg3 :: <GdkModifierType>;
  input parameter arg4 :: <gchar*>;
  input parameter arg5 :: <guint>;
  c-name: "gtk_binding_entry_add_signal";
end;

define C-function gtk-binding-entry-remove
  input parameter arg1 :: <GtkBindingSet>;
  input parameter arg2 :: <guint>;
  input parameter arg3 :: <GdkModifierType>;
  c-name: "gtk_binding_entry_remove";
end;

define C-function gtk-binding-set-add-path
  input parameter arg1 :: <GtkBindingSet>;
  input parameter arg2 :: <GtkPathType>;
  input parameter arg3 :: <gchar*>;
  input parameter arg4 :: <GtkPathPriorityType>;
  c-name: "gtk_binding_set_add_path";
end;

define C-function _gtk-binding-parse-binding
  input parameter arg1 :: <GScanner>;
  result res :: <guint>;
  c-name: "_gtk_binding_parse_binding";
end;

define C-function _gtk-binding-entry-add-signall
  input parameter arg1 :: <GtkBindingSet>;
  input parameter arg2 :: <guint>;
  input parameter arg3 :: <GdkModifierType>;
  input parameter arg4 :: <gchar*>;
  input parameter arg5 :: <GSList>;
  c-name: "_gtk_binding_entry_add_signall";
end;

define constant gtk-binding-entry-add = gtk-binding-entry-clear;

define constant <GtkAssistantPageType> = <C-int>;
define constant $GTK-ASSISTANT-PAGE-CONTENT = 0;
define constant $GTK-ASSISTANT-PAGE-INTRO = 1;
define constant $GTK-ASSISTANT-PAGE-CONFIRM = 2;
define constant $GTK-ASSISTANT-PAGE-SUMMARY = 3;
define constant $GTK-ASSISTANT-PAGE-PROGRESS = 4;

define C-struct <_GtkAssistantPrivate>
end;

define C-pointer-type <GtkAssistantPrivate> => <_GtkAssistantPrivate>;

define C-struct <_GtkAssistant>
  slot GtkAssistant-parent :: <_GtkWindow>;
  slot GtkAssistant-cancel :: <GtkWidget>;
  slot GtkAssistant-forward :: <GtkWidget>;
  slot GtkAssistant-back :: <GtkWidget>;
  slot GtkAssistant-apply :: <GtkWidget>;
  slot GtkAssistant-close :: <GtkWidget>;
  slot GtkAssistant-last :: <GtkWidget>;
  slot GtkAssistant-priv :: <GtkAssistantPrivate>;
end;

define C-pointer-type <GtkAssistant> => <_GtkAssistant>;

define constant <anonymous-4948> = <C-function-pointer>;
define constant <anonymous-4949> = <C-function-pointer>;
define constant <anonymous-4950> = <C-function-pointer>;
define constant <anonymous-4951> = <C-function-pointer>;
define constant <anonymous-4952> = <C-function-pointer>;
define constant <anonymous-4953> = <C-function-pointer>;
define constant <anonymous-4954> = <C-function-pointer>;
define constant <anonymous-4955> = <C-function-pointer>;
define constant <anonymous-4956> = <C-function-pointer>;
define C-struct <_GtkAssistantClass>
  slot GtkAssistantClass-parent-class :: <_GtkWindowClass>;
  slot GtkAssistantClass-prepare :: <anonymous-4948>;
  slot GtkAssistantClass-apply :: <anonymous-4949>;
  slot GtkAssistantClass-close :: <anonymous-4950>;
  slot GtkAssistantClass-cancel :: <anonymous-4951>;
  slot GtkAssistantClass-_gtk-reserved1 :: <anonymous-4952>;
  slot GtkAssistantClass-_gtk-reserved2 :: <anonymous-4953>;
  slot GtkAssistantClass-_gtk-reserved3 :: <anonymous-4954>;
  slot GtkAssistantClass-_gtk-reserved4 :: <anonymous-4955>;
  slot GtkAssistantClass-_gtk-reserved5 :: <anonymous-4956>;
end;

define C-pointer-type <GtkAssistantClass> => <_GtkAssistantClass>;

define constant <anonymous-4957> = <C-function-pointer>;
define constant <GtkAssistantPageFunc> = <anonymous-4957>;

define C-function gtk-assistant-get-type
  result res :: <GType>;
  c-name: "gtk_assistant_get_type";
end;

define C-function gtk-assistant-new
  result res :: <GtkWidget>;
  c-name: "gtk_assistant_new";
end;

define C-function gtk-assistant-get-current-page
  input parameter arg1 :: <GtkAssistant>;
  result res :: <gint>;
  c-name: "gtk_assistant_get_current_page";
end;

define C-function gtk-assistant-set-current-page
  input parameter arg1 :: <GtkAssistant>;
  input parameter arg2 :: <gint>;
  c-name: "gtk_assistant_set_current_page";
end;

define C-function gtk-assistant-get-n-pages
  input parameter arg1 :: <GtkAssistant>;
  result res :: <gint>;
  c-name: "gtk_assistant_get_n_pages";
end;

define C-function gtk-assistant-get-nth-page
  input parameter arg1 :: <GtkAssistant>;
  input parameter arg2 :: <gint>;
  result res :: <GtkWidget>;
  c-name: "gtk_assistant_get_nth_page";
end;

define C-function gtk-assistant-prepend-page
  input parameter arg1 :: <GtkAssistant>;
  input parameter arg2 :: <GtkWidget>;
  result res :: <gint>;
  c-name: "gtk_assistant_prepend_page";
end;

define C-function gtk-assistant-append-page
  input parameter arg1 :: <GtkAssistant>;
  input parameter arg2 :: <GtkWidget>;
  result res :: <gint>;
  c-name: "gtk_assistant_append_page";
end;

define C-function gtk-assistant-insert-page
  input parameter arg1 :: <GtkAssistant>;
  input parameter arg2 :: <GtkWidget>;
  input parameter arg3 :: <gint>;
  result res :: <gint>;
  c-name: "gtk_assistant_insert_page";
end;

define C-function gtk-assistant-set-forward-page-func
  input parameter arg1 :: <GtkAssistant>;
  input parameter arg2 :: <GtkAssistantPageFunc>;
  input parameter arg3 :: <gpointer>;
  input parameter arg4 :: <GDestroyNotify>;
  c-name: "gtk_assistant_set_forward_page_func";
end;

define C-function gtk-assistant-set-page-type
  input parameter arg1 :: <GtkAssistant>;
  input parameter arg2 :: <GtkWidget>;
  input parameter arg3 :: <GtkAssistantPageType>;
  c-name: "gtk_assistant_set_page_type";
end;

define C-function gtk-assistant-get-page-type
  input parameter arg1 :: <GtkAssistant>;
  input parameter arg2 :: <GtkWidget>;
  result res :: <GtkAssistantPageType>;
  c-name: "gtk_assistant_get_page_type";
end;

define C-function gtk-assistant-set-page-title
  input parameter arg1 :: <GtkAssistant>;
  input parameter arg2 :: <GtkWidget>;
  input parameter arg3 :: <gchar*>;
  c-name: "gtk_assistant_set_page_title";
end;

define C-function gtk-assistant-get-page-title
  input parameter arg1 :: <GtkAssistant>;
  input parameter arg2 :: <GtkWidget>;
  result res :: <gchar*>;
  c-name: "gtk_assistant_get_page_title";
end;

define C-function gtk-assistant-set-page-header-image
  input parameter arg1 :: <GtkAssistant>;
  input parameter arg2 :: <GtkWidget>;
  input parameter arg3 :: <GdkPixbuf>;
  c-name: "gtk_assistant_set_page_header_image";
end;

define C-function gtk-assistant-get-page-header-image
  input parameter arg1 :: <GtkAssistant>;
  input parameter arg2 :: <GtkWidget>;
  result res :: <GdkPixbuf>;
  c-name: "gtk_assistant_get_page_header_image";
end;

define C-function gtk-assistant-set-page-side-image
  input parameter arg1 :: <GtkAssistant>;
  input parameter arg2 :: <GtkWidget>;
  input parameter arg3 :: <GdkPixbuf>;
  c-name: "gtk_assistant_set_page_side_image";
end;

define C-function gtk-assistant-get-page-side-image
  input parameter arg1 :: <GtkAssistant>;
  input parameter arg2 :: <GtkWidget>;
  result res :: <GdkPixbuf>;
  c-name: "gtk_assistant_get_page_side_image";
end;

define C-function gtk-assistant-set-page-complete
  input parameter arg1 :: <GtkAssistant>;
  input parameter arg2 :: <GtkWidget>;
  input parameter arg3 :: <gboolean>;
  c-name: "gtk_assistant_set_page_complete";
end;

define C-function gtk-assistant-get-page-complete
  input parameter arg1 :: <GtkAssistant>;
  input parameter arg2 :: <GtkWidget>;
  result res :: <gboolean>;
  c-name: "gtk_assistant_get_page_complete";
end;

define C-function gtk-assistant-add-action-widget
  input parameter arg1 :: <GtkAssistant>;
  input parameter arg2 :: <GtkWidget>;
  c-name: "gtk_assistant_add_action_widget";
end;

define C-function gtk-assistant-remove-action-widget
  input parameter arg1 :: <GtkAssistant>;
  input parameter arg2 :: <GtkWidget>;
  c-name: "gtk_assistant_remove_action_widget";
end;

define C-function gtk-assistant-update-buttons-state
  input parameter arg1 :: <GtkAssistant>;
  c-name: "gtk_assistant_update_buttons_state";
end;

define C-subtype <_GtkAspectFrame> (<_GtkFrame>, <_AtkImplementorIface>) end;
define constant <GtkAspectFrame> = <_GtkAspectFrame>;

define C-struct <_GtkAspectFrameClass>
  slot GtkAspectFrameClass-parent-class :: <_GtkFrameClass>;
end;

define C-pointer-type <GtkAspectFrameClass> => <_GtkAspectFrameClass>;

define C-function gtk-aspect-frame-get-type
  result res :: <GType>;
  c-name: "gtk_aspect_frame_get_type";
end;

define C-function gtk-aspect-frame-new
  input parameter arg1 :: <gchar*>;
  input parameter arg2 :: <gfloat>;
  input parameter arg3 :: <gfloat>;
  input parameter arg4 :: <gfloat>;
  input parameter arg5 :: <gboolean>;
  result res :: <GtkWidget>;
  c-name: "gtk_aspect_frame_new";
end;

define C-function gtk-aspect-frame-set
  input parameter arg1 :: <GtkAspectFrame>;
  input parameter arg2 :: <gfloat>;
  input parameter arg3 :: <gfloat>;
  input parameter arg4 :: <gfloat>;
  input parameter arg5 :: <gboolean>;
  c-name: "gtk_aspect_frame_set";
end;

define C-subtype <_GtkArrow> (<_GtkMisc>, <_AtkImplementorIface>) end;
define constant <GtkArrow> = <_GtkArrow>;

define C-struct <_GtkArrowClass>
  slot GtkArrowClass-parent-class :: <_GtkMiscClass>;
end;

define C-pointer-type <GtkArrowClass> => <_GtkArrowClass>;

define C-function gtk-arrow-get-type
  result res :: <GType>;
  c-name: "gtk_arrow_get_type";
end;

define C-function gtk-arrow-new
  input parameter arg1 :: <GtkArrowType>;
  input parameter arg2 :: <GtkShadowType>;
  result res :: <GtkWidget>;
  c-name: "gtk_arrow_new";
end;

define C-function gtk-arrow-set
  input parameter arg1 :: <GtkArrow>;
  input parameter arg2 :: <GtkArrowType>;
  input parameter arg3 :: <GtkShadowType>;
  c-name: "gtk_arrow_set";
end;

define C-subtype <_GtkAccessible> (<_AtkObject>) end;
define constant <GtkAccessible> = <_GtkAccessible>;

define constant <anonymous-4814> = <C-function-pointer>;
define constant <anonymous-4815> = <C-function-pointer>;
define constant <anonymous-4816> = <C-function-pointer>;
define constant <anonymous-4817> = <C-function-pointer>;
define constant <anonymous-4818> = <C-function-pointer>;
define C-struct <_GtkAccessibleClass>
  slot GtkAccessibleClass-parent-class :: <_AtkObjectClass>;
  slot GtkAccessibleClass-connect-widget-destroyed :: <anonymous-4814>;
  slot GtkAccessibleClass-_gtk-reserved1 :: <anonymous-4815>;
  slot GtkAccessibleClass-_gtk-reserved2 :: <anonymous-4816>;
  slot GtkAccessibleClass-_gtk-reserved3 :: <anonymous-4817>;
  slot GtkAccessibleClass-_gtk-reserved4 :: <anonymous-4818>;
end;

define C-pointer-type <GtkAccessibleClass> => <_GtkAccessibleClass>;

define C-function gtk-accessible-get-type
  result res :: <GType>;
  c-name: "gtk_accessible_get_type";
end;

define C-function gtk-accessible-connect-widget-destroyed
  input parameter arg1 :: <GtkAccessible>;
  c-name: "gtk_accessible_connect_widget_destroyed";
end;

define C-struct <_AtkValue>
end;

define C-pointer-type <AtkValue> => <_AtkValue>;

define constant <anonymous-4803> = <C-function-pointer>;
define constant <anonymous-4804> = <C-function-pointer>;
define constant <anonymous-4805> = <C-function-pointer>;
define constant <anonymous-4806> = <C-function-pointer>;
define constant <anonymous-4807> = <C-function-pointer>;
define C-struct <_AtkValueIface>
  slot AtkValueIface-parent :: <_GTypeInterface>;
  slot AtkValueIface-get-current-value :: <anonymous-4803>;
  slot AtkValueIface-get-maximum-value :: <anonymous-4804>;
  slot AtkValueIface-get-minimum-value :: <anonymous-4805>;
  slot AtkValueIface-set-current-value :: <anonymous-4806>;
  slot AtkValueIface-get-minimum-increment :: <anonymous-4807>;
  slot AtkValueIface-pad1 :: <anonymous-3738>;
end;

define C-pointer-type <AtkValueIface> => <_AtkValueIface>;

define C-function atk-value-get-type
  result res :: <GType>;
  c-name: "atk_value_get_type";
end;

define C-function atk-value-get-current-value
  input parameter arg1 :: <AtkValue>;
  input parameter arg2 :: <GValue>;
  c-name: "atk_value_get_current_value";
end;

define C-function atk-value-get-maximum-value
  input parameter arg1 :: <AtkValue>;
  input parameter arg2 :: <GValue>;
  c-name: "atk_value_get_maximum_value";
end;

define C-function atk-value-get-minimum-value
  input parameter arg1 :: <AtkValue>;
  input parameter arg2 :: <GValue>;
  c-name: "atk_value_get_minimum_value";
end;

define C-function atk-value-set-current-value
  input parameter arg1 :: <AtkValue>;
  input parameter arg2 :: <GValue>;
  result res :: <gboolean>;
  c-name: "atk_value_set_current_value";
end;

define C-function atk-value-get-minimum-increment
  input parameter arg1 :: <AtkValue>;
  input parameter arg2 :: <GValue>;
  c-name: "atk_value_get_minimum_increment";
end;

define C-struct <_AtkMisc>
  slot AtkMisc-parent :: <_GObject>;
end;

define C-pointer-type <AtkMisc> => <_AtkMisc>;

define constant <anonymous-4797> = <C-function-pointer>;
define constant <anonymous-4798> = <C-function-pointer>;
define constant <gpointer<@32>> = <gpointer*>;
define C-struct <_AtkMiscClass>
  slot AtkMiscClass-parent :: <_GObjectClass>;
  slot AtkMiscClass-threads-enter :: <anonymous-4797>;
  slot AtkMiscClass-threads-leave :: <anonymous-4798>;
  array slot AtkMiscClass-vfuncs :: <gpointer>, length: 32;
end;

define C-pointer-type <AtkMiscClass> => <_AtkMiscClass>;

 /* Ignoring declaration for {instance of <variable-declaration>} "atk-misc-instance"*/
define C-function atk-misc-get-type
  result res :: <GType>;
  c-name: "atk_misc_get_type";
end;

define C-function atk-misc-threads-enter
  input parameter arg1 :: <AtkMisc>;
  c-name: "atk_misc_threads_enter";
end;

define C-function atk-misc-threads-leave
  input parameter arg1 :: <AtkMisc>;
  c-name: "atk_misc_threads_leave";
end;

define C-function atk-misc-get-instance
  result res :: <AtkMisc>;
  c-name: "atk_misc_get_instance";
end;

define C-subtype <_AtkUtil> (<_GObject>) end;
define constant <AtkUtil> = <_AtkUtil>;

define constant <anonymous-4483> = <C-function-pointer>;
define constant <anonymous-4484> = <C-function-pointer>;
define C-struct <_AtkKeyEventStruct>
  slot AtkKeyEventStruct-type :: <C-signed-int>;
  slot AtkKeyEventStruct-state :: <C-unsigned-int>;
  slot AtkKeyEventStruct-keyval :: <C-unsigned-int>;
  slot AtkKeyEventStruct-length :: <C-signed-int>;
  slot AtkKeyEventStruct-string :: <gchar*>;
  slot AtkKeyEventStruct-keycode :: <C-unsigned-short>;
  slot AtkKeyEventStruct-timestamp :: <C-unsigned-int>;
end;

define C-pointer-type <AtkKeyEventStruct> => <_AtkKeyEventStruct>;

define constant <anonymous-4481> = <C-function-pointer>;
define constant <AtkKeySnoopFunc> = <anonymous-4481>;

define constant <anonymous-4485> = <C-function-pointer>;
define constant <anonymous-4486> = <C-function-pointer>;
define constant <anonymous-4487> = <C-function-pointer>;
define constant <anonymous-4488> = <C-function-pointer>;
define constant <anonymous-4489> = <C-function-pointer>;
define C-struct <_AtkUtilClass>
  slot AtkUtilClass-parent :: <_GObjectClass>;
  slot AtkUtilClass-add-global-event-listener :: <anonymous-4483>;
  slot AtkUtilClass-remove-global-event-listener :: <anonymous-4484>;
  slot AtkUtilClass-add-key-event-listener :: <anonymous-4485>;
  slot AtkUtilClass-remove-key-event-listener :: <anonymous-4486>;
  slot AtkUtilClass-get-root :: <anonymous-4487>;
  slot AtkUtilClass-get-toolkit-name :: <anonymous-4488>;
  slot AtkUtilClass-get-toolkit-version :: <anonymous-4489>;
end;

define C-pointer-type <AtkUtilClass> => <_AtkUtilClass>;

define constant <anonymous-4479> = <C-function-pointer>;
define constant <AtkEventListener> = <anonymous-4479>;

define constant <anonymous-4480> = <C-function-pointer>;
define constant <AtkEventListenerInit> = <anonymous-4480>;

define constant <AtkKeyEventType> = <C-int>;
define constant $ATK-KEY-EVENT-PRESS = 0;
define constant $ATK-KEY-EVENT-RELEASE = 1;
define constant $ATK-KEY-EVENT-LAST-DEFINED = 2;

define C-function atk-util-get-type
  result res :: <GType>;
  c-name: "atk_util_get_type";
end;

define constant <AtkCoordType> = <C-int>;
define constant $ATK-XY-SCREEN = 0;
define constant $ATK-XY-WINDOW = 1;

define C-function atk-add-focus-tracker
  input parameter arg1 :: <AtkEventListener>;
  result res :: <guint>;
  c-name: "atk_add_focus_tracker";
end;

define C-function atk-remove-focus-tracker
  input parameter arg1 :: <guint>;
  c-name: "atk_remove_focus_tracker";
end;

define C-function atk-focus-tracker-init
  input parameter arg1 :: <AtkEventListenerInit>;
  c-name: "atk_focus_tracker_init";
end;

define C-function atk-focus-tracker-notify
  input parameter arg1 :: <AtkObject>;
  c-name: "atk_focus_tracker_notify";
end;

define C-function atk-add-global-event-listener
  input parameter arg1 :: <GSignalEmissionHook>;
  input parameter arg2 :: <gchar*>;
  result res :: <guint>;
  c-name: "atk_add_global_event_listener";
end;

define C-function atk-remove-global-event-listener
  input parameter arg1 :: <guint>;
  c-name: "atk_remove_global_event_listener";
end;

define C-function atk-add-key-event-listener
  input parameter arg1 :: <AtkKeySnoopFunc>;
  input parameter arg2 :: <gpointer>;
  result res :: <guint>;
  c-name: "atk_add_key_event_listener";
end;

define C-function atk-remove-key-event-listener
  input parameter arg1 :: <guint>;
  c-name: "atk_remove_key_event_listener";
end;

define C-function atk-get-root
  result res :: <AtkObject>;
  c-name: "atk_get_root";
end;

define C-function atk-get-focus-object
  result res :: <AtkObject>;
  c-name: "atk_get_focus_object";
end;

define C-function atk-get-toolkit-name
  result res :: <gchar*>;
  c-name: "atk_get_toolkit_name";
end;

define C-function atk-get-toolkit-version
  result res :: <gchar*>;
  c-name: "atk_get_toolkit_version";
end;

define C-function atk-get-version
  result res :: <gchar*>;
  c-name: "atk_get_version";
end;

define constant <AtkTextAttribute> = <C-int>;
define constant $ATK-TEXT-ATTR-INVALID = 0;
define constant $ATK-TEXT-ATTR-LEFT-MARGIN = 1;
define constant $ATK-TEXT-ATTR-RIGHT-MARGIN = 2;
define constant $ATK-TEXT-ATTR-INDENT = 3;
define constant $ATK-TEXT-ATTR-INVISIBLE = 4;
define constant $ATK-TEXT-ATTR-EDITABLE = 5;
define constant $ATK-TEXT-ATTR-PIXELS-ABOVE-LINES = 6;
define constant $ATK-TEXT-ATTR-PIXELS-BELOW-LINES = 7;
define constant $ATK-TEXT-ATTR-PIXELS-INSIDE-WRAP = 8;
define constant $ATK-TEXT-ATTR-BG-FULL-HEIGHT = 9;
define constant $ATK-TEXT-ATTR-RISE = 10;
define constant $ATK-TEXT-ATTR-UNDERLINE = 11;
define constant $ATK-TEXT-ATTR-STRIKETHROUGH = 12;
define constant $ATK-TEXT-ATTR-SIZE = 13;
define constant $ATK-TEXT-ATTR-SCALE = 14;
define constant $ATK-TEXT-ATTR-WEIGHT = 15;
define constant $ATK-TEXT-ATTR-LANGUAGE = 16;
define constant $ATK-TEXT-ATTR-FAMILY-NAME = 17;
define constant $ATK-TEXT-ATTR-BG-COLOR = 18;
define constant $ATK-TEXT-ATTR-FG-COLOR = 19;
define constant $ATK-TEXT-ATTR-BG-STIPPLE = 20;
define constant $ATK-TEXT-ATTR-FG-STIPPLE = 21;
define constant $ATK-TEXT-ATTR-WRAP-MODE = 22;
define constant $ATK-TEXT-ATTR-DIRECTION = 23;
define constant $ATK-TEXT-ATTR-JUSTIFICATION = 24;
define constant $ATK-TEXT-ATTR-STRETCH = 25;
define constant $ATK-TEXT-ATTR-VARIANT = 26;
define constant $ATK-TEXT-ATTR-STYLE = 27;
define constant $ATK-TEXT-ATTR-LAST-DEFINED = 28;

define C-function atk-text-attribute-register
  input parameter arg1 :: <gchar*>;
  result res :: <AtkTextAttribute>;
  c-name: "atk_text_attribute_register";
end;

define C-struct <_AtkText>
end;

define C-pointer-type <AtkText> => <_AtkText>;

define constant <anonymous-4554> = <C-function-pointer>;
define constant <AtkTextBoundary> = <C-int>;
define constant $ATK-TEXT-BOUNDARY-CHAR = 0;
define constant $ATK-TEXT-BOUNDARY-WORD-START = 1;
define constant $ATK-TEXT-BOUNDARY-WORD-END = 2;
define constant $ATK-TEXT-BOUNDARY-SENTENCE-START = 3;
define constant $ATK-TEXT-BOUNDARY-SENTENCE-END = 4;
define constant $ATK-TEXT-BOUNDARY-LINE-START = 5;
define constant $ATK-TEXT-BOUNDARY-LINE-END = 6;

define constant <anonymous-4555> = <C-function-pointer>;
define constant <anonymous-4556> = <C-function-pointer>;
define constant <anonymous-4557> = <C-function-pointer>;
define constant <anonymous-4558> = <C-function-pointer>;
define constant <anonymous-4559> = <C-function-pointer>;
define constant <anonymous-4560> = <C-function-pointer>;
define constant <anonymous-4561> = <C-function-pointer>;
define constant <anonymous-4562> = <C-function-pointer>;
define constant <anonymous-4563> = <C-function-pointer>;
define constant <anonymous-4564> = <C-function-pointer>;
define constant <anonymous-4565> = <C-function-pointer>;
define constant <anonymous-4566> = <C-function-pointer>;
define constant <anonymous-4567> = <C-function-pointer>;
define constant <anonymous-4568> = <C-function-pointer>;
define constant <anonymous-4569> = <C-function-pointer>;
define constant <anonymous-4570> = <C-function-pointer>;
define constant <anonymous-4571> = <C-function-pointer>;
define constant <anonymous-4572> = <C-function-pointer>;
define constant <anonymous-4573> = <C-function-pointer>;
define constant <anonymous-4574> = <C-function-pointer>;
define C-struct <_AtkTextRectangle>
  slot AtkTextRectangle-x :: <C-signed-int>;
  slot AtkTextRectangle-y :: <C-signed-int>;
  slot AtkTextRectangle-width :: <C-signed-int>;
  slot AtkTextRectangle-height :: <C-signed-int>;
end;

define C-pointer-type <AtkTextRectangle> => <_AtkTextRectangle>;

define constant <anonymous-4575> = <C-function-pointer>;
define C-struct <_AtkTextRange>
  slot AtkTextRange-bounds :: <_AtkTextRectangle>;
  slot AtkTextRange-start-offset :: <C-signed-int>;
  slot AtkTextRange-end-offset :: <C-signed-int>;
  slot AtkTextRange-content :: <gchar*>;
end;

define C-pointer-type <AtkTextRange> => <_AtkTextRange>;

define C-pointer-type <AtkTextRange*> => <AtkTextRange>;
define constant <AtkTextClipType> = <C-int>;
define constant $ATK-TEXT-CLIP-NONE = 0;
define constant $ATK-TEXT-CLIP-MIN = 1;
define constant $ATK-TEXT-CLIP-MAX = 2;
define constant $ATK-TEXT-CLIP-BOTH = 3;

define constant <anonymous-4576> = <C-function-pointer>;
define C-struct <_AtkTextIface>
  slot AtkTextIface-parent :: <_GTypeInterface>;
  slot AtkTextIface-get-text :: <anonymous-4554>;
  slot AtkTextIface-get-text-after-offset :: <anonymous-4555>;
  slot AtkTextIface-get-text-at-offset :: <anonymous-4556>;
  slot AtkTextIface-get-character-at-offset :: <anonymous-4557>;
  slot AtkTextIface-get-text-before-offset :: <anonymous-4558>;
  slot AtkTextIface-get-caret-offset :: <anonymous-4559>;
  slot AtkTextIface-get-run-attributes :: <anonymous-4560>;
  slot AtkTextIface-get-default-attributes :: <anonymous-4561>;
  slot AtkTextIface-get-character-extents :: <anonymous-4562>;
  slot AtkTextIface-get-character-count :: <anonymous-4563>;
  slot AtkTextIface-get-offset-at-point :: <anonymous-4564>;
  slot AtkTextIface-get-n-selections :: <anonymous-4565>;
  slot AtkTextIface-get-selection :: <anonymous-4566>;
  slot AtkTextIface-add-selection :: <anonymous-4567>;
  slot AtkTextIface-remove-selection :: <anonymous-4568>;
  slot AtkTextIface-set-selection :: <anonymous-4569>;
  slot AtkTextIface-set-caret-offset :: <anonymous-4570>;
  slot AtkTextIface-text-changed :: <anonymous-4571>;
  slot AtkTextIface-text-caret-moved :: <anonymous-4572>;
  slot AtkTextIface-text-selection-changed :: <anonymous-4573>;
  slot AtkTextIface-text-attributes-changed :: <anonymous-4574>;
  slot AtkTextIface-get-range-extents :: <anonymous-4575>;
  slot AtkTextIface-get-bounded-ranges :: <anonymous-4576>;
  slot AtkTextIface-pad4 :: <anonymous-3738>;
end;

define C-pointer-type <AtkTextIface> => <_AtkTextIface>;

define C-function atk-text-get-type
  result res :: <GType>;
  c-name: "atk_text_get_type";
end;

define C-function atk-text-get-text
  input parameter arg1 :: <AtkText>;
  input parameter arg2 :: <gint>;
  input parameter arg3 :: <gint>;
  result res :: <gchar*>;
  c-name: "atk_text_get_text";
end;

define C-function atk-text-get-character-at-offset
  input parameter arg1 :: <AtkText>;
  input parameter arg2 :: <gint>;
  result res :: <gunichar>;
  c-name: "atk_text_get_character_at_offset";
end;

define C-function atk-text-get-text-after-offset
  input parameter arg1 :: <AtkText>;
  input parameter arg2 :: <gint>;
  input parameter arg3 :: <AtkTextBoundary>;
  input parameter arg4 :: <gint*>;
  input parameter arg5 :: <gint*>;
  result res :: <gchar*>;
  c-name: "atk_text_get_text_after_offset";
end;

define C-function atk-text-get-text-at-offset
  input parameter arg1 :: <AtkText>;
  input parameter arg2 :: <gint>;
  input parameter arg3 :: <AtkTextBoundary>;
  input parameter arg4 :: <gint*>;
  input parameter arg5 :: <gint*>;
  result res :: <gchar*>;
  c-name: "atk_text_get_text_at_offset";
end;

define C-function atk-text-get-text-before-offset
  input parameter arg1 :: <AtkText>;
  input parameter arg2 :: <gint>;
  input parameter arg3 :: <AtkTextBoundary>;
  input parameter arg4 :: <gint*>;
  input parameter arg5 :: <gint*>;
  result res :: <gchar*>;
  c-name: "atk_text_get_text_before_offset";
end;

define C-function atk-text-get-caret-offset
  input parameter arg1 :: <AtkText>;
  result res :: <gint>;
  c-name: "atk_text_get_caret_offset";
end;

define C-function atk-text-get-character-extents
  input parameter arg1 :: <AtkText>;
  input parameter arg2 :: <gint>;
  input parameter arg3 :: <gint*>;
  input parameter arg4 :: <gint*>;
  input parameter arg5 :: <gint*>;
  input parameter arg6 :: <gint*>;
  input parameter arg7 :: <AtkCoordType>;
  c-name: "atk_text_get_character_extents";
end;

define C-function atk-text-get-run-attributes
  input parameter arg1 :: <AtkText>;
  input parameter arg2 :: <gint>;
  input parameter arg3 :: <gint*>;
  input parameter arg4 :: <gint*>;
  result res :: <AtkAttributeSet>;
  c-name: "atk_text_get_run_attributes";
end;

define C-function atk-text-get-default-attributes
  input parameter arg1 :: <AtkText>;
  result res :: <AtkAttributeSet>;
  c-name: "atk_text_get_default_attributes";
end;

define C-function atk-text-get-character-count
  input parameter arg1 :: <AtkText>;
  result res :: <gint>;
  c-name: "atk_text_get_character_count";
end;

define C-function atk-text-get-offset-at-point
  input parameter arg1 :: <AtkText>;
  input parameter arg2 :: <gint>;
  input parameter arg3 :: <gint>;
  input parameter arg4 :: <AtkCoordType>;
  result res :: <gint>;
  c-name: "atk_text_get_offset_at_point";
end;

define C-function atk-text-get-n-selections
  input parameter arg1 :: <AtkText>;
  result res :: <gint>;
  c-name: "atk_text_get_n_selections";
end;

define C-function atk-text-get-selection
  input parameter arg1 :: <AtkText>;
  input parameter arg2 :: <gint>;
  input parameter arg3 :: <gint*>;
  input parameter arg4 :: <gint*>;
  result res :: <gchar*>;
  c-name: "atk_text_get_selection";
end;

define C-function atk-text-add-selection
  input parameter arg1 :: <AtkText>;
  input parameter arg2 :: <gint>;
  input parameter arg3 :: <gint>;
  result res :: <gboolean>;
  c-name: "atk_text_add_selection";
end;

define C-function atk-text-remove-selection
  input parameter arg1 :: <AtkText>;
  input parameter arg2 :: <gint>;
  result res :: <gboolean>;
  c-name: "atk_text_remove_selection";
end;

define C-function atk-text-set-selection
  input parameter arg1 :: <AtkText>;
  input parameter arg2 :: <gint>;
  input parameter arg3 :: <gint>;
  input parameter arg4 :: <gint>;
  result res :: <gboolean>;
  c-name: "atk_text_set_selection";
end;

define C-function atk-text-set-caret-offset
  input parameter arg1 :: <AtkText>;
  input parameter arg2 :: <gint>;
  result res :: <gboolean>;
  c-name: "atk_text_set_caret_offset";
end;

define C-function atk-text-get-range-extents
  input parameter arg1 :: <AtkText>;
  input parameter arg2 :: <gint>;
  input parameter arg3 :: <gint>;
  input parameter arg4 :: <AtkCoordType>;
  input parameter arg5 :: <AtkTextRectangle>;
  c-name: "atk_text_get_range_extents";
end;

define C-function atk-text-get-bounded-ranges
  input parameter arg1 :: <AtkText>;
  input parameter arg2 :: <AtkTextRectangle>;
  input parameter arg3 :: <AtkCoordType>;
  input parameter arg4 :: <AtkTextClipType>;
  input parameter arg5 :: <AtkTextClipType>;
  result res :: <AtkTextRange*>;
  c-name: "atk_text_get_bounded_ranges";
end;

define C-function atk-text-free-ranges
  input parameter arg1 :: <AtkTextRange*>;
  c-name: "atk_text_free_ranges";
end;

define C-function atk-attribute-set-free
  input parameter arg1 :: <AtkAttributeSet>;
  c-name: "atk_attribute_set_free";
end;

define C-function atk-text-attribute-get-name
  input parameter arg1 :: <AtkTextAttribute>;
  result res :: <gchar*>;
  c-name: "atk_text_attribute_get_name";
end;

define C-function atk-text-attribute-for-name
  input parameter arg1 :: <gchar*>;
  result res :: <AtkTextAttribute>;
  c-name: "atk_text_attribute_for_name";
end;

define C-function atk-text-attribute-get-value
  input parameter arg1 :: <AtkTextAttribute>;
  input parameter arg2 :: <gint>;
  result res :: <gchar*>;
  c-name: "atk_text_attribute_get_value";
end;

define C-struct <_AtkTable>
end;

define C-pointer-type <AtkTable> => <_AtkTable>;

define constant <anonymous-4731> = <C-function-pointer>;
define constant <anonymous-4732> = <C-function-pointer>;
define constant <anonymous-4733> = <C-function-pointer>;
define constant <anonymous-4734> = <C-function-pointer>;
define constant <anonymous-4735> = <C-function-pointer>;
define constant <anonymous-4736> = <C-function-pointer>;
define constant <anonymous-4737> = <C-function-pointer>;
define constant <anonymous-4738> = <C-function-pointer>;
define constant <anonymous-4739> = <C-function-pointer>;
define constant <anonymous-4740> = <C-function-pointer>;
define constant <anonymous-4741> = <C-function-pointer>;
define constant <anonymous-4742> = <C-function-pointer>;
define constant <anonymous-4743> = <C-function-pointer>;
define constant <anonymous-4744> = <C-function-pointer>;
define constant <anonymous-4745> = <C-function-pointer>;
define constant <anonymous-4746> = <C-function-pointer>;
define constant <anonymous-4747> = <C-function-pointer>;
define constant <anonymous-4748> = <C-function-pointer>;
define constant <anonymous-4749> = <C-function-pointer>;
define constant <anonymous-4750> = <C-function-pointer>;
define constant <anonymous-4751> = <C-function-pointer>;
define constant <anonymous-4752> = <C-function-pointer>;
define constant <anonymous-4753> = <C-function-pointer>;
define constant <anonymous-4754> = <C-function-pointer>;
define constant <anonymous-4755> = <C-function-pointer>;
define constant <anonymous-4756> = <C-function-pointer>;
define constant <anonymous-4757> = <C-function-pointer>;
define constant <anonymous-4758> = <C-function-pointer>;
define constant <anonymous-4759> = <C-function-pointer>;
define constant <anonymous-4760> = <C-function-pointer>;
define constant <anonymous-4761> = <C-function-pointer>;
define constant <anonymous-4762> = <C-function-pointer>;
define constant <anonymous-4763> = <C-function-pointer>;
define constant <anonymous-4764> = <C-function-pointer>;
define constant <anonymous-4765> = <C-function-pointer>;
define constant <anonymous-4766> = <C-function-pointer>;
define C-struct <_AtkTableIface>
  slot AtkTableIface-parent :: <_GTypeInterface>;
  slot AtkTableIface-ref-at :: <anonymous-4731>;
  slot AtkTableIface-get-index-at :: <anonymous-4732>;
  slot AtkTableIface-get-column-at-index :: <anonymous-4733>;
  slot AtkTableIface-get-row-at-index :: <anonymous-4734>;
  slot AtkTableIface-get-n-columns :: <anonymous-4735>;
  slot AtkTableIface-get-n-rows :: <anonymous-4736>;
  slot AtkTableIface-get-column-extent-at :: <anonymous-4737>;
  slot AtkTableIface-get-row-extent-at :: <anonymous-4738>;
  slot AtkTableIface-get-caption :: <anonymous-4739>;
  slot AtkTableIface-get-column-description :: <anonymous-4740>;
  slot AtkTableIface-get-column-header :: <anonymous-4741>;
  slot AtkTableIface-get-row-description :: <anonymous-4742>;
  slot AtkTableIface-get-row-header :: <anonymous-4743>;
  slot AtkTableIface-get-summary :: <anonymous-4744>;
  slot AtkTableIface-set-caption :: <anonymous-4745>;
  slot AtkTableIface-set-column-description :: <anonymous-4746>;
  slot AtkTableIface-set-column-header :: <anonymous-4747>;
  slot AtkTableIface-set-row-description :: <anonymous-4748>;
  slot AtkTableIface-set-row-header :: <anonymous-4749>;
  slot AtkTableIface-set-summary :: <anonymous-4750>;
  slot AtkTableIface-get-selected-columns :: <anonymous-4751>;
  slot AtkTableIface-get-selected-rows :: <anonymous-4752>;
  slot AtkTableIface-is-column-selected :: <anonymous-4753>;
  slot AtkTableIface-is-row-selected :: <anonymous-4754>;
  slot AtkTableIface-is-selected :: <anonymous-4755>;
  slot AtkTableIface-add-row-selection :: <anonymous-4756>;
  slot AtkTableIface-remove-row-selection :: <anonymous-4757>;
  slot AtkTableIface-add-column-selection :: <anonymous-4758>;
  slot AtkTableIface-remove-column-selection :: <anonymous-4759>;
  slot AtkTableIface-row-inserted :: <anonymous-4760>;
  slot AtkTableIface-column-inserted :: <anonymous-4761>;
  slot AtkTableIface-row-deleted :: <anonymous-4762>;
  slot AtkTableIface-column-deleted :: <anonymous-4763>;
  slot AtkTableIface-row-reordered :: <anonymous-4764>;
  slot AtkTableIface-column-reordered :: <anonymous-4765>;
  slot AtkTableIface-model-changed :: <anonymous-4766>;
  slot AtkTableIface-pad1 :: <anonymous-3738>;
  slot AtkTableIface-pad2 :: <anonymous-3738>;
  slot AtkTableIface-pad3 :: <anonymous-3738>;
  slot AtkTableIface-pad4 :: <anonymous-3738>;
end;

define C-pointer-type <AtkTableIface> => <_AtkTableIface>;

define C-function atk-table-get-type
  result res :: <GType>;
  c-name: "atk_table_get_type";
end;

define C-function atk-table-ref-at
  input parameter arg1 :: <AtkTable>;
  input parameter arg2 :: <gint>;
  input parameter arg3 :: <gint>;
  result res :: <AtkObject>;
  c-name: "atk_table_ref_at";
end;

define C-function atk-table-get-index-at
  input parameter arg1 :: <AtkTable>;
  input parameter arg2 :: <gint>;
  input parameter arg3 :: <gint>;
  result res :: <gint>;
  c-name: "atk_table_get_index_at";
end;

define C-function atk-table-get-column-at-index
  input parameter arg1 :: <AtkTable>;
  input parameter arg2 :: <gint>;
  result res :: <gint>;
  c-name: "atk_table_get_column_at_index";
end;

define C-function atk-table-get-row-at-index
  input parameter arg1 :: <AtkTable>;
  input parameter arg2 :: <gint>;
  result res :: <gint>;
  c-name: "atk_table_get_row_at_index";
end;

define C-function atk-table-get-n-columns
  input parameter arg1 :: <AtkTable>;
  result res :: <gint>;
  c-name: "atk_table_get_n_columns";
end;

define C-function atk-table-get-n-rows
  input parameter arg1 :: <AtkTable>;
  result res :: <gint>;
  c-name: "atk_table_get_n_rows";
end;

define C-function atk-table-get-column-extent-at
  input parameter arg1 :: <AtkTable>;
  input parameter arg2 :: <gint>;
  input parameter arg3 :: <gint>;
  result res :: <gint>;
  c-name: "atk_table_get_column_extent_at";
end;

define C-function atk-table-get-row-extent-at
  input parameter arg1 :: <AtkTable>;
  input parameter arg2 :: <gint>;
  input parameter arg3 :: <gint>;
  result res :: <gint>;
  c-name: "atk_table_get_row_extent_at";
end;

define C-function atk-table-get-caption
  input parameter arg1 :: <AtkTable>;
  result res :: <AtkObject>;
  c-name: "atk_table_get_caption";
end;

define C-function atk-table-get-column-description
  input parameter arg1 :: <AtkTable>;
  input parameter arg2 :: <gint>;
  result res :: <gchar*>;
  c-name: "atk_table_get_column_description";
end;

define C-function atk-table-get-column-header
  input parameter arg1 :: <AtkTable>;
  input parameter arg2 :: <gint>;
  result res :: <AtkObject>;
  c-name: "atk_table_get_column_header";
end;

define C-function atk-table-get-row-description
  input parameter arg1 :: <AtkTable>;
  input parameter arg2 :: <gint>;
  result res :: <gchar*>;
  c-name: "atk_table_get_row_description";
end;

define C-function atk-table-get-row-header
  input parameter arg1 :: <AtkTable>;
  input parameter arg2 :: <gint>;
  result res :: <AtkObject>;
  c-name: "atk_table_get_row_header";
end;

define C-function atk-table-get-summary
  input parameter arg1 :: <AtkTable>;
  result res :: <AtkObject>;
  c-name: "atk_table_get_summary";
end;

define C-function atk-table-set-caption
  input parameter arg1 :: <AtkTable>;
  input parameter arg2 :: <AtkObject>;
  c-name: "atk_table_set_caption";
end;

define C-function atk-table-set-column-description
  input parameter arg1 :: <AtkTable>;
  input parameter arg2 :: <gint>;
  input parameter arg3 :: <gchar*>;
  c-name: "atk_table_set_column_description";
end;

define C-function atk-table-set-column-header
  input parameter arg1 :: <AtkTable>;
  input parameter arg2 :: <gint>;
  input parameter arg3 :: <AtkObject>;
  c-name: "atk_table_set_column_header";
end;

define C-function atk-table-set-row-description
  input parameter arg1 :: <AtkTable>;
  input parameter arg2 :: <gint>;
  input parameter arg3 :: <gchar*>;
  c-name: "atk_table_set_row_description";
end;

define C-function atk-table-set-row-header
  input parameter arg1 :: <AtkTable>;
  input parameter arg2 :: <gint>;
  input parameter arg3 :: <AtkObject>;
  c-name: "atk_table_set_row_header";
end;

define C-function atk-table-set-summary
  input parameter arg1 :: <AtkTable>;
  input parameter arg2 :: <AtkObject>;
  c-name: "atk_table_set_summary";
end;

define C-function atk-table-get-selected-columns
  input parameter arg1 :: <AtkTable>;
  input parameter arg2 :: <gint**>;
  result res :: <gint>;
  c-name: "atk_table_get_selected_columns";
end;

define C-function atk-table-get-selected-rows
  input parameter arg1 :: <AtkTable>;
  input parameter arg2 :: <gint**>;
  result res :: <gint>;
  c-name: "atk_table_get_selected_rows";
end;

define C-function atk-table-is-column-selected
  input parameter arg1 :: <AtkTable>;
  input parameter arg2 :: <gint>;
  result res :: <gboolean>;
  c-name: "atk_table_is_column_selected";
end;

define C-function atk-table-is-row-selected
  input parameter arg1 :: <AtkTable>;
  input parameter arg2 :: <gint>;
  result res :: <gboolean>;
  c-name: "atk_table_is_row_selected";
end;

define C-function atk-table-is-selected
  input parameter arg1 :: <AtkTable>;
  input parameter arg2 :: <gint>;
  input parameter arg3 :: <gint>;
  result res :: <gboolean>;
  c-name: "atk_table_is_selected";
end;

define C-function atk-table-add-row-selection
  input parameter arg1 :: <AtkTable>;
  input parameter arg2 :: <gint>;
  result res :: <gboolean>;
  c-name: "atk_table_add_row_selection";
end;

define C-function atk-table-remove-row-selection
  input parameter arg1 :: <AtkTable>;
  input parameter arg2 :: <gint>;
  result res :: <gboolean>;
  c-name: "atk_table_remove_row_selection";
end;

define C-function atk-table-add-column-selection
  input parameter arg1 :: <AtkTable>;
  input parameter arg2 :: <gint>;
  result res :: <gboolean>;
  c-name: "atk_table_add_column_selection";
end;

define C-function atk-table-remove-column-selection
  input parameter arg1 :: <AtkTable>;
  input parameter arg2 :: <gint>;
  result res :: <gboolean>;
  c-name: "atk_table_remove_column_selection";
end;

define C-struct <_AtkStreamableContent>
end;

define C-pointer-type <AtkStreamableContent> => <_AtkStreamableContent>;

define constant <anonymous-4722> = <C-function-pointer>;
define constant <anonymous-4723> = <C-function-pointer>;
define constant <anonymous-4724> = <C-function-pointer>;
define constant <anonymous-4725> = <C-function-pointer>;
define C-struct <_AtkStreamableContentIface>
  slot AtkStreamableContentIface-parent :: <_GTypeInterface>;
  slot AtkStreamableContentIface-get-n-mime-types :: <anonymous-4722>;
  slot AtkStreamableContentIface-get-mime-type :: <anonymous-4723>;
  slot AtkStreamableContentIface-get-stream :: <anonymous-4724>;
  slot AtkStreamableContentIface-get-uri :: <anonymous-4725>;
  slot AtkStreamableContentIface-pad1 :: <anonymous-3738>;
  slot AtkStreamableContentIface-pad2 :: <anonymous-3738>;
  slot AtkStreamableContentIface-pad3 :: <anonymous-3738>;
end;

define C-pointer-type <AtkStreamableContentIface> => <_AtkStreamableContentIface>;

define C-function atk-streamable-content-get-type
  result res :: <GType>;
  c-name: "atk_streamable_content_get_type";
end;

define C-function atk-streamable-content-get-n-mime-types
  input parameter arg1 :: <AtkStreamableContent>;
  result res :: <gint>;
  c-name: "atk_streamable_content_get_n_mime_types";
end;

define C-function atk-streamable-content-get-mime-type
  input parameter arg1 :: <AtkStreamableContent>;
  input parameter arg2 :: <gint>;
  result res :: <gchar*>;
  c-name: "atk_streamable_content_get_mime_type";
end;

define C-function atk-streamable-content-get-stream
  input parameter arg1 :: <AtkStreamableContent>;
  input parameter arg2 :: <gchar*>;
  result res :: <GIOChannel>;
  c-name: "atk_streamable_content_get_stream";
end;

define C-function atk-streamable-content-get-uri
  input parameter arg1 :: <AtkStreamableContent>;
  input parameter arg2 :: <gchar*>;
  result res :: <gchar*>;
  c-name: "atk_streamable_content_get_uri";
end;

define C-struct <_AtkStateSetClass>
  slot AtkStateSetClass-parent :: <_GObjectClass>;
end;

define C-pointer-type <AtkStateSetClass> => <_AtkStateSetClass>;

define C-function atk-state-set-get-type
  result res :: <GType>;
  c-name: "atk_state_set_get_type";
end;

define C-function atk-state-set-new
  result res :: <AtkStateSet>;
  c-name: "atk_state_set_new";
end;

define C-function atk-state-set-is-empty
  input parameter arg1 :: <AtkStateSet>;
  result res :: <gboolean>;
  c-name: "atk_state_set_is_empty";
end;

define C-function atk-state-set-add-state
  input parameter arg1 :: <AtkStateSet>;
  input parameter arg2 :: <AtkStateType>;
  result res :: <gboolean>;
  c-name: "atk_state_set_add_state";
end;

define C-pointer-type <AtkStateType*> => <AtkStateType>;
define C-function atk-state-set-add-states
  input parameter arg1 :: <AtkStateSet>;
  input parameter arg2 :: <AtkStateType*>;
  input parameter arg3 :: <gint>;
  c-name: "atk_state_set_add_states";
end;

define C-function atk-state-set-clear-states
  input parameter arg1 :: <AtkStateSet>;
  c-name: "atk_state_set_clear_states";
end;

define C-function atk-state-set-contains-state
  input parameter arg1 :: <AtkStateSet>;
  input parameter arg2 :: <AtkStateType>;
  result res :: <gboolean>;
  c-name: "atk_state_set_contains_state";
end;

define C-function atk-state-set-contains-states
  input parameter arg1 :: <AtkStateSet>;
  input parameter arg2 :: <AtkStateType*>;
  input parameter arg3 :: <gint>;
  result res :: <gboolean>;
  c-name: "atk_state_set_contains_states";
end;

define C-function atk-state-set-remove-state
  input parameter arg1 :: <AtkStateSet>;
  input parameter arg2 :: <AtkStateType>;
  result res :: <gboolean>;
  c-name: "atk_state_set_remove_state";
end;

define C-function atk-state-set-and-sets
  input parameter arg1 :: <AtkStateSet>;
  input parameter arg2 :: <AtkStateSet>;
  result res :: <AtkStateSet>;
  c-name: "atk_state_set_and_sets";
end;

define C-function atk-state-set-or-sets
  input parameter arg1 :: <AtkStateSet>;
  input parameter arg2 :: <AtkStateSet>;
  result res :: <AtkStateSet>;
  c-name: "atk_state_set_or_sets";
end;

define C-function atk-state-set-xor-sets
  input parameter arg1 :: <AtkStateSet>;
  input parameter arg2 :: <AtkStateSet>;
  result res :: <AtkStateSet>;
  c-name: "atk_state_set_xor_sets";
end;

define C-struct <_AtkSelection>
end;

define C-pointer-type <AtkSelection> => <_AtkSelection>;

define constant <anonymous-4694> = <C-function-pointer>;
define constant <anonymous-4695> = <C-function-pointer>;
define constant <anonymous-4696> = <C-function-pointer>;
define constant <anonymous-4697> = <C-function-pointer>;
define constant <anonymous-4698> = <C-function-pointer>;
define constant <anonymous-4699> = <C-function-pointer>;
define constant <anonymous-4700> = <C-function-pointer>;
define constant <anonymous-4701> = <C-function-pointer>;
define C-struct <_AtkSelectionIface>
  slot AtkSelectionIface-parent :: <_GTypeInterface>;
  slot AtkSelectionIface-add-selection :: <anonymous-4694>;
  slot AtkSelectionIface-clear-selection :: <anonymous-4695>;
  slot AtkSelectionIface-ref-selection :: <anonymous-4696>;
  slot AtkSelectionIface-get-selection-count :: <anonymous-4697>;
  slot AtkSelectionIface-is-child-selected :: <anonymous-4698>;
  slot AtkSelectionIface-remove-selection :: <anonymous-4699>;
  slot AtkSelectionIface-select-all-selection :: <anonymous-4700>;
  slot AtkSelectionIface-selection-changed :: <anonymous-4701>;
  slot AtkSelectionIface-pad1 :: <anonymous-3738>;
  slot AtkSelectionIface-pad2 :: <anonymous-3738>;
end;

define C-pointer-type <AtkSelectionIface> => <_AtkSelectionIface>;

define C-function atk-selection-get-type
  result res :: <GType>;
  c-name: "atk_selection_get_type";
end;

define C-function atk-selection-add-selection
  input parameter arg1 :: <AtkSelection>;
  input parameter arg2 :: <gint>;
  result res :: <gboolean>;
  c-name: "atk_selection_add_selection";
end;

define C-function atk-selection-clear-selection
  input parameter arg1 :: <AtkSelection>;
  result res :: <gboolean>;
  c-name: "atk_selection_clear_selection";
end;

define C-function atk-selection-ref-selection
  input parameter arg1 :: <AtkSelection>;
  input parameter arg2 :: <gint>;
  result res :: <AtkObject>;
  c-name: "atk_selection_ref_selection";
end;

define C-function atk-selection-get-selection-count
  input parameter arg1 :: <AtkSelection>;
  result res :: <gint>;
  c-name: "atk_selection_get_selection_count";
end;

define C-function atk-selection-is-child-selected
  input parameter arg1 :: <AtkSelection>;
  input parameter arg2 :: <gint>;
  result res :: <gboolean>;
  c-name: "atk_selection_is_child_selected";
end;

define C-function atk-selection-remove-selection
  input parameter arg1 :: <AtkSelection>;
  input parameter arg2 :: <gint>;
  result res :: <gboolean>;
  c-name: "atk_selection_remove_selection";
end;

define C-function atk-selection-select-all-selection
  input parameter arg1 :: <AtkSelection>;
  result res :: <gboolean>;
  c-name: "atk_selection_select_all_selection";
end;

define C-struct <_AtkRelationSetClass>
  slot AtkRelationSetClass-parent :: <_GObjectClass>;
  slot AtkRelationSetClass-pad1 :: <anonymous-3738>;
  slot AtkRelationSetClass-pad2 :: <anonymous-3738>;
end;

define C-pointer-type <AtkRelationSetClass> => <_AtkRelationSetClass>;

define C-function atk-relation-set-get-type
  result res :: <GType>;
  c-name: "atk_relation_set_get_type";
end;

define C-function atk-relation-set-new
  result res :: <AtkRelationSet>;
  c-name: "atk_relation_set_new";
end;

define C-function atk-relation-set-contains
  input parameter arg1 :: <AtkRelationSet>;
  input parameter arg2 :: <AtkRelationType>;
  result res :: <gboolean>;
  c-name: "atk_relation_set_contains";
end;

define C-subtype <_AtkRelation> (<_GObject>) end;
define constant <AtkRelation> = <_AtkRelation>;

define C-function atk-relation-set-remove
  input parameter arg1 :: <AtkRelationSet>;
  input parameter arg2 :: <AtkRelation>;
  c-name: "atk_relation_set_remove";
end;

define C-function atk-relation-set-add
  input parameter arg1 :: <AtkRelationSet>;
  input parameter arg2 :: <AtkRelation>;
  c-name: "atk_relation_set_add";
end;

define C-function atk-relation-set-get-n-relations
  input parameter arg1 :: <AtkRelationSet>;
  result res :: <gint>;
  c-name: "atk_relation_set_get_n_relations";
end;

define C-function atk-relation-set-get-relation
  input parameter arg1 :: <AtkRelationSet>;
  input parameter arg2 :: <gint>;
  result res :: <AtkRelation>;
  c-name: "atk_relation_set_get_relation";
end;

define C-function atk-relation-set-get-relation-by-type
  input parameter arg1 :: <AtkRelationSet>;
  input parameter arg2 :: <AtkRelationType>;
  result res :: <AtkRelation>;
  c-name: "atk_relation_set_get_relation_by_type";
end;

define C-function atk-relation-set-add-relation-by-type
  input parameter arg1 :: <AtkRelationSet>;
  input parameter arg2 :: <AtkRelationType>;
  input parameter arg3 :: <AtkObject>;
  c-name: "atk_relation_set_add_relation_by_type";
end;

define C-struct <_AtkRelationClass>
  slot AtkRelationClass-parent :: <_GObjectClass>;
end;

define C-pointer-type <AtkRelationClass> => <_AtkRelationClass>;

define C-function atk-relation-get-type
  result res :: <GType>;
  c-name: "atk_relation_get_type";
end;

define C-function atk-relation-type-register
  input parameter arg1 :: <gchar*>;
  result res :: <AtkRelationType>;
  c-name: "atk_relation_type_register";
end;

define C-function atk-relation-type-get-name
  input parameter arg1 :: <AtkRelationType>;
  result res :: <gchar*>;
  c-name: "atk_relation_type_get_name";
end;

define C-function atk-relation-type-for-name
  input parameter arg1 :: <gchar*>;
  result res :: <AtkRelationType>;
  c-name: "atk_relation_type_for_name";
end;

define C-pointer-type <AtkObject*> => <AtkObject>;
define C-function atk-relation-new
  input parameter arg1 :: <AtkObject*>;
  input parameter arg2 :: <gint>;
  input parameter arg3 :: <AtkRelationType>;
  result res :: <AtkRelation>;
  c-name: "atk_relation_new";
end;

define C-function atk-relation-get-relation-type
  input parameter arg1 :: <AtkRelation>;
  result res :: <AtkRelationType>;
  c-name: "atk_relation_get_relation_type";
end;

define C-function atk-relation-get-target
  input parameter arg1 :: <AtkRelation>;
  result res :: <GPtrArray>;
  c-name: "atk_relation_get_target";
end;

define C-function atk-relation-add-target
  input parameter arg1 :: <AtkRelation>;
  input parameter arg2 :: <AtkObject>;
  c-name: "atk_relation_add_target";
end;

define C-subtype <_AtkRegistry> (<_GObject>) end;
define C-struct <_AtkRegistryClass>
  slot AtkRegistryClass-parent-class :: <_GObjectClass>;
end;

define constant <AtkRegistry> = <_AtkRegistry>;

define C-pointer-type <AtkRegistryClass> => <_AtkRegistryClass>;

define C-function atk-registry-get-type
  result res :: <GType>;
  c-name: "atk_registry_get_type";
end;

define C-function atk-registry-set-factory-type
  input parameter arg1 :: <AtkRegistry>;
  input parameter arg2 :: <GType>;
  input parameter arg3 :: <GType>;
  c-name: "atk_registry_set_factory_type";
end;

define C-function atk-registry-get-factory-type
  input parameter arg1 :: <AtkRegistry>;
  input parameter arg2 :: <GType>;
  result res :: <GType>;
  c-name: "atk_registry_get_factory_type";
end;

define C-subtype <_AtkObjectFactory> (<_GObject>) end;
define constant <AtkObjectFactory> = <_AtkObjectFactory>;

define C-function atk-registry-get-factory
  input parameter arg1 :: <AtkRegistry>;
  input parameter arg2 :: <GType>;
  result res :: <AtkObjectFactory>;
  c-name: "atk_registry_get_factory";
end;

define C-function atk-get-default-registry
  result res :: <AtkRegistry>;
  c-name: "atk_get_default_registry";
end;

define constant <anonymous-4663> = <C-function-pointer>;
define constant <anonymous-4664> = <C-function-pointer>;
define constant <anonymous-4665> = <C-function-pointer>;
define C-struct <_AtkObjectFactoryClass>
  slot AtkObjectFactoryClass-parent-class :: <_GObjectClass>;
  slot AtkObjectFactoryClass-create-accessible :: <anonymous-4663>;
  slot AtkObjectFactoryClass-invalidate :: <anonymous-4664>;
  slot AtkObjectFactoryClass-get-accessible-type :: <anonymous-4665>;
  slot AtkObjectFactoryClass-pad1 :: <anonymous-3738>;
  slot AtkObjectFactoryClass-pad2 :: <anonymous-3738>;
end;

define C-pointer-type <AtkObjectFactoryClass> => <_AtkObjectFactoryClass>;

define C-function atk-object-factory-get-type
  result res :: <GType>;
  c-name: "atk_object_factory_get_type";
end;

define C-function atk-object-factory-create-accessible
  input parameter arg1 :: <AtkObjectFactory>;
  input parameter arg2 :: <GObject>;
  result res :: <AtkObject>;
  c-name: "atk_object_factory_create_accessible";
end;

define C-function atk-object-factory-invalidate
  input parameter arg1 :: <AtkObjectFactory>;
  c-name: "atk_object_factory_invalidate";
end;

define C-function atk-object-factory-get-accessible-type
  input parameter arg1 :: <AtkObjectFactory>;
  result res :: <GType>;
  c-name: "atk_object_factory_get_accessible_type";
end;

define C-subtype <_AtkNoOpObjectFactory> (<_AtkObjectFactory>) end;
define constant <AtkNoOpObjectFactory> = <_AtkNoOpObjectFactory>;

define C-struct <_AtkNoOpObjectFactoryClass>
  slot AtkNoOpObjectFactoryClass-parent-class :: <_AtkObjectFactoryClass>;
end;

define C-pointer-type <AtkNoOpObjectFactoryClass> => <_AtkNoOpObjectFactoryClass>;

define C-function atk-no-op-object-factory-get-type
  result res :: <GType>;
  c-name: "atk_no_op_object_factory_get_type";
end;

define C-function atk-no-op-object-factory-new
  result res :: <AtkObjectFactory>;
  c-name: "atk_no_op_object_factory_new";
end;

define C-subtype <_AtkNoOpObject> (<_AtkObject>, <_AtkComponent>, <_AtkAction>, <_AtkEditableText>, <_AtkHypertext>, <_AtkImage>, <_AtkSelection>, <_AtkTable>, <_AtkText>, <_AtkValue>) end;
define constant <AtkNoOpObject> = <_AtkNoOpObject>;

define C-struct <_AtkNoOpObjectClass>
  slot AtkNoOpObjectClass-parent-class :: <_AtkObjectClass>;
end;

define C-pointer-type <AtkNoOpObjectClass> => <_AtkNoOpObjectClass>;

define C-function atk-no-op-object-get-type
  result res :: <GType>;
  c-name: "atk_no_op_object_get_type";
end;

define C-function atk-no-op-object-new
  input parameter arg1 :: <GObject>;
  result res :: <AtkObject>;
  c-name: "atk_no_op_object_new";
end;

define C-struct <_AtkImage>
end;

define C-pointer-type <AtkImage> => <_AtkImage>;

define constant <anonymous-4650> = <C-function-pointer>;
define constant <anonymous-4651> = <C-function-pointer>;
define constant <anonymous-4652> = <C-function-pointer>;
define constant <anonymous-4653> = <C-function-pointer>;
define constant <anonymous-4654> = <C-function-pointer>;
define C-struct <_AtkImageIface>
  slot AtkImageIface-parent :: <_GTypeInterface>;
  slot AtkImageIface-get-image-position :: <anonymous-4650>;
  slot AtkImageIface-get-image-description :: <anonymous-4651>;
  slot AtkImageIface-get-image-size :: <anonymous-4652>;
  slot AtkImageIface-set-image-description :: <anonymous-4653>;
  slot AtkImageIface-get-image-locale :: <anonymous-4654>;
  slot AtkImageIface-pad1 :: <anonymous-3738>;
end;

define C-pointer-type <AtkImageIface> => <_AtkImageIface>;

define C-function atk-image-get-type
  result res :: <GType>;
  c-name: "atk_image_get_type";
end;

define C-function atk-image-get-image-description
  input parameter arg1 :: <AtkImage>;
  result res :: <gchar*>;
  c-name: "atk_image_get_image_description";
end;

define C-function atk-image-get-image-size
  input parameter arg1 :: <AtkImage>;
  input parameter arg2 :: <gint*>;
  input parameter arg3 :: <gint*>;
  c-name: "atk_image_get_image_size";
end;

define C-function atk-image-set-image-description
  input parameter arg1 :: <AtkImage>;
  input parameter arg2 :: <gchar*>;
  result res :: <gboolean>;
  c-name: "atk_image_set_image_description";
end;

define C-function atk-image-get-image-position
  input parameter arg1 :: <AtkImage>;
  input parameter arg2 :: <gint*>;
  input parameter arg3 :: <gint*>;
  input parameter arg4 :: <AtkCoordType>;
  c-name: "atk_image_get_image_position";
end;

define C-function atk-image-get-image-locale
  input parameter arg1 :: <AtkImage>;
  result res :: <gchar*>;
  c-name: "atk_image_get_image_locale";
end;

define C-struct <_AtkHypertext>
end;

define C-pointer-type <AtkHypertext> => <_AtkHypertext>;

define C-subtype <_AtkHyperlink> (<_GObject>, <_AtkAction>) end;
define constant <AtkHyperlink> = <_AtkHyperlink>;

define constant <anonymous-4642> = <C-function-pointer>;
define constant <anonymous-4643> = <C-function-pointer>;
define constant <anonymous-4644> = <C-function-pointer>;
define constant <anonymous-4645> = <C-function-pointer>;
define C-struct <_AtkHypertextIface>
  slot AtkHypertextIface-parent :: <_GTypeInterface>;
  slot AtkHypertextIface-get-link :: <anonymous-4642>;
  slot AtkHypertextIface-get-n-links :: <anonymous-4643>;
  slot AtkHypertextIface-get-link-index :: <anonymous-4644>;
  slot AtkHypertextIface-link-selected :: <anonymous-4645>;
  slot AtkHypertextIface-pad1 :: <anonymous-3738>;
  slot AtkHypertextIface-pad2 :: <anonymous-3738>;
  slot AtkHypertextIface-pad3 :: <anonymous-3738>;
end;

define C-pointer-type <AtkHypertextIface> => <_AtkHypertextIface>;

define C-function atk-hypertext-get-type
  result res :: <GType>;
  c-name: "atk_hypertext_get_type";
end;

define C-function atk-hypertext-get-link
  input parameter arg1 :: <AtkHypertext>;
  input parameter arg2 :: <gint>;
  result res :: <AtkHyperlink>;
  c-name: "atk_hypertext_get_link";
end;

define C-function atk-hypertext-get-n-links
  input parameter arg1 :: <AtkHypertext>;
  result res :: <gint>;
  c-name: "atk_hypertext_get_n_links";
end;

define C-function atk-hypertext-get-link-index
  input parameter arg1 :: <AtkHypertext>;
  input parameter arg2 :: <gint>;
  result res :: <gint>;
  c-name: "atk_hypertext_get_link_index";
end;

define constant <AtkHyperlinkStateFlags> = <C-int>;
define constant $ATK-HYPERLINK-IS-INLINE = 1;

define constant <anonymous-4621> = <C-function-pointer>;
define constant <anonymous-4622> = <C-function-pointer>;
define constant <anonymous-4623> = <C-function-pointer>;
define constant <anonymous-4624> = <C-function-pointer>;
define constant <anonymous-4625> = <C-function-pointer>;
define constant <anonymous-4626> = <C-function-pointer>;
define constant <anonymous-4627> = <C-function-pointer>;
define constant <anonymous-4628> = <C-function-pointer>;
define constant <anonymous-4629> = <C-function-pointer>;
define C-struct <_AtkHyperlinkClass>
  slot AtkHyperlinkClass-parent :: <_GObjectClass>;
  slot AtkHyperlinkClass-get-uri :: <anonymous-4621>;
  slot AtkHyperlinkClass-get-object :: <anonymous-4622>;
  slot AtkHyperlinkClass-get-end-index :: <anonymous-4623>;
  slot AtkHyperlinkClass-get-start-index :: <anonymous-4624>;
  slot AtkHyperlinkClass-is-valid :: <anonymous-4625>;
  slot AtkHyperlinkClass-get-n-anchors :: <anonymous-4626>;
  slot AtkHyperlinkClass-link-state :: <anonymous-4627>;
  slot AtkHyperlinkClass-is-selected-link :: <anonymous-4628>;
  slot AtkHyperlinkClass-link-activated :: <anonymous-4629>;
  slot AtkHyperlinkClass-pad1 :: <anonymous-3738>;
end;

define C-pointer-type <AtkHyperlinkClass> => <_AtkHyperlinkClass>;

define C-function atk-hyperlink-get-type
  result res :: <GType>;
  c-name: "atk_hyperlink_get_type";
end;

define C-function atk-hyperlink-get-uri
  input parameter arg1 :: <AtkHyperlink>;
  input parameter arg2 :: <gint>;
  result res :: <gchar*>;
  c-name: "atk_hyperlink_get_uri";
end;

define C-function atk-hyperlink-get-object
  input parameter arg1 :: <AtkHyperlink>;
  input parameter arg2 :: <gint>;
  result res :: <AtkObject>;
  c-name: "atk_hyperlink_get_object";
end;

define C-function atk-hyperlink-get-end-index
  input parameter arg1 :: <AtkHyperlink>;
  result res :: <gint>;
  c-name: "atk_hyperlink_get_end_index";
end;

define C-function atk-hyperlink-get-start-index
  input parameter arg1 :: <AtkHyperlink>;
  result res :: <gint>;
  c-name: "atk_hyperlink_get_start_index";
end;

define C-function atk-hyperlink-is-valid
  input parameter arg1 :: <AtkHyperlink>;
  result res :: <gboolean>;
  c-name: "atk_hyperlink_is_valid";
end;

define C-function atk-hyperlink-is-inline
  input parameter arg1 :: <AtkHyperlink>;
  result res :: <gboolean>;
  c-name: "atk_hyperlink_is_inline";
end;

define C-function atk-hyperlink-get-n-anchors
  input parameter arg1 :: <AtkHyperlink>;
  result res :: <gint>;
  c-name: "atk_hyperlink_get_n_anchors";
end;

define C-function atk-hyperlink-is-selected-link
  input parameter arg1 :: <AtkHyperlink>;
  result res :: <gboolean>;
  c-name: "atk_hyperlink_is_selected_link";
end;

define C-struct <_AtkAction>
end;

define C-pointer-type <AtkAction> => <_AtkAction>;

define constant <anonymous-4464> = <C-function-pointer>;
define constant <anonymous-4465> = <C-function-pointer>;
define constant <anonymous-4466> = <C-function-pointer>;
define constant <anonymous-4467> = <C-function-pointer>;
define constant <anonymous-4468> = <C-function-pointer>;
define constant <anonymous-4469> = <C-function-pointer>;
define constant <anonymous-4470> = <C-function-pointer>;
define C-struct <_AtkActionIface>
  slot AtkActionIface-parent :: <_GTypeInterface>;
  slot AtkActionIface-do-action :: <anonymous-4464>;
  slot AtkActionIface-get-n-actions :: <anonymous-4465>;
  slot AtkActionIface-get-description :: <anonymous-4466>;
  slot AtkActionIface-get-name :: <anonymous-4467>;
  slot AtkActionIface-get-keybinding :: <anonymous-4468>;
  slot AtkActionIface-set-description :: <anonymous-4469>;
  slot AtkActionIface-get-localized-name :: <anonymous-4470>;
  slot AtkActionIface-pad2 :: <anonymous-3738>;
end;

define C-pointer-type <AtkActionIface> => <_AtkActionIface>;

define C-function atk-action-get-type
  result res :: <GType>;
  c-name: "atk_action_get_type";
end;

define C-function atk-action-do-action
  input parameter arg1 :: <AtkAction>;
  input parameter arg2 :: <gint>;
  result res :: <gboolean>;
  c-name: "atk_action_do_action";
end;

define C-function atk-action-get-n-actions
  input parameter arg1 :: <AtkAction>;
  result res :: <gint>;
  c-name: "atk_action_get_n_actions";
end;

define C-function atk-action-get-description
  input parameter arg1 :: <AtkAction>;
  input parameter arg2 :: <gint>;
  result res :: <gchar*>;
  c-name: "atk_action_get_description";
end;

define C-function atk-action-get-name
  input parameter arg1 :: <AtkAction>;
  input parameter arg2 :: <gint>;
  result res :: <gchar*>;
  c-name: "atk_action_get_name";
end;

define C-function atk-action-get-keybinding
  input parameter arg1 :: <AtkAction>;
  input parameter arg2 :: <gint>;
  result res :: <gchar*>;
  c-name: "atk_action_get_keybinding";
end;

define C-function atk-action-set-description
  input parameter arg1 :: <AtkAction>;
  input parameter arg2 :: <gint>;
  input parameter arg3 :: <gchar*>;
  result res :: <gboolean>;
  c-name: "atk_action_set_description";
end;

define C-function atk-action-get-localized-name
  input parameter arg1 :: <AtkAction>;
  input parameter arg2 :: <gint>;
  result res :: <gchar*>;
  c-name: "atk_action_get_localized_name";
end;

define C-struct <_AtkHyperlinkImpl>
end;

define C-pointer-type <AtkHyperlinkImpl> => <_AtkHyperlinkImpl>;

define constant <anonymous-4639> = <C-function-pointer>;
define C-struct <_AtkHyperlinkImplIface>
  slot AtkHyperlinkImplIface-parent :: <_GTypeInterface>;
  slot AtkHyperlinkImplIface-get-hyperlink :: <anonymous-4639>;
  slot AtkHyperlinkImplIface-pad1 :: <anonymous-3738>;
end;

define C-pointer-type <AtkHyperlinkImplIface> => <_AtkHyperlinkImplIface>;

define C-function atk-hyperlink-impl-get-type
  result res :: <GType>;
  c-name: "atk_hyperlink_impl_get_type";
end;

define C-function atk-hyperlink-impl-get-hyperlink
  input parameter arg1 :: <AtkHyperlinkImpl>;
  result res :: <AtkHyperlink>;
  c-name: "atk_hyperlink_impl_get_hyperlink";
end;

define C-subtype <_AtkGObjectAccessible> (<_AtkObject>) end;
define constant <AtkGObjectAccessible> = <_AtkGObjectAccessible>;

define C-struct <_AtkGObjectAccessibleClass>
  slot AtkGObjectAccessibleClass-parent-class :: <_AtkObjectClass>;
  slot AtkGObjectAccessibleClass-pad1 :: <anonymous-3738>;
  slot AtkGObjectAccessibleClass-pad2 :: <anonymous-3738>;
end;

define C-pointer-type <AtkGObjectAccessibleClass> => <_AtkGObjectAccessibleClass>;

define C-function atk-gobject-accessible-get-type
  result res :: <GType>;
  c-name: "atk_gobject_accessible_get_type";
end;

define C-function atk-gobject-accessible-for-object
  input parameter arg1 :: <GObject>;
  result res :: <AtkObject>;
  c-name: "atk_gobject_accessible_for_object";
end;

define C-function atk-gobject-accessible-get-object
  input parameter arg1 :: <AtkGObjectAccessible>;
  result res :: <GObject>;
  c-name: "atk_gobject_accessible_get_object";
end;

define C-struct <_AtkEditableText>
end;

define C-pointer-type <AtkEditableText> => <_AtkEditableText>;

define constant <anonymous-4602> = <C-function-pointer>;
define constant <anonymous-4603> = <C-function-pointer>;
define constant <anonymous-4604> = <C-function-pointer>;
define constant <anonymous-4605> = <C-function-pointer>;
define constant <anonymous-4606> = <C-function-pointer>;
define constant <anonymous-4607> = <C-function-pointer>;
define constant <anonymous-4608> = <C-function-pointer>;
define C-struct <_AtkEditableTextIface>
  slot AtkEditableTextIface-parent-interface :: <_GTypeInterface>;
  slot AtkEditableTextIface-set-run-attributes :: <anonymous-4602>;
  slot AtkEditableTextIface-set-text-contents :: <anonymous-4603>;
  slot AtkEditableTextIface-insert-text :: <anonymous-4604>;
  slot AtkEditableTextIface-copy-text :: <anonymous-4605>;
  slot AtkEditableTextIface-cut-text :: <anonymous-4606>;
  slot AtkEditableTextIface-delete-text :: <anonymous-4607>;
  slot AtkEditableTextIface-paste-text :: <anonymous-4608>;
  slot AtkEditableTextIface-pad1 :: <anonymous-3738>;
  slot AtkEditableTextIface-pad2 :: <anonymous-3738>;
end;

define C-pointer-type <AtkEditableTextIface> => <_AtkEditableTextIface>;

define C-function atk-editable-text-get-type
  result res :: <GType>;
  c-name: "atk_editable_text_get_type";
end;

define C-function atk-editable-text-set-run-attributes
  input parameter arg1 :: <AtkEditableText>;
  input parameter arg2 :: <AtkAttributeSet>;
  input parameter arg3 :: <gint>;
  input parameter arg4 :: <gint>;
  result res :: <gboolean>;
  c-name: "atk_editable_text_set_run_attributes";
end;

define C-function atk-editable-text-set-text-contents
  input parameter arg1 :: <AtkEditableText>;
  input parameter arg2 :: <gchar*>;
  c-name: "atk_editable_text_set_text_contents";
end;

define C-function atk-editable-text-insert-text
  input parameter arg1 :: <AtkEditableText>;
  input parameter arg2 :: <gchar*>;
  input parameter arg3 :: <gint>;
  input parameter arg4 :: <gint*>;
  c-name: "atk_editable_text_insert_text";
end;

define C-function atk-editable-text-copy-text
  input parameter arg1 :: <AtkEditableText>;
  input parameter arg2 :: <gint>;
  input parameter arg3 :: <gint>;
  c-name: "atk_editable_text_copy_text";
end;

define C-function atk-editable-text-cut-text
  input parameter arg1 :: <AtkEditableText>;
  input parameter arg2 :: <gint>;
  input parameter arg3 :: <gint>;
  c-name: "atk_editable_text_cut_text";
end;

define C-function atk-editable-text-delete-text
  input parameter arg1 :: <AtkEditableText>;
  input parameter arg2 :: <gint>;
  input parameter arg3 :: <gint>;
  c-name: "atk_editable_text_delete_text";
end;

define C-function atk-editable-text-paste-text
  input parameter arg1 :: <AtkEditableText>;
  input parameter arg2 :: <gint>;
  c-name: "atk_editable_text_paste_text";
end;

define C-struct <_AtkDocument>
end;

define C-pointer-type <AtkDocument> => <_AtkDocument>;

define constant <anonymous-4537> = <C-function-pointer>;
define constant <anonymous-4538> = <C-function-pointer>;
define constant <anonymous-4539> = <C-function-pointer>;
define constant <anonymous-4540> = <C-function-pointer>;
define constant <anonymous-4541> = <C-function-pointer>;
define constant <anonymous-4542> = <C-function-pointer>;
define C-struct <_AtkDocumentIface>
  slot AtkDocumentIface-parent :: <_GTypeInterface>;
  slot AtkDocumentIface-get-document-type :: <anonymous-4537>;
  slot AtkDocumentIface-get-document :: <anonymous-4538>;
  slot AtkDocumentIface-get-document-locale :: <anonymous-4539>;
  slot AtkDocumentIface-get-document-attributes :: <anonymous-4540>;
  slot AtkDocumentIface-get-document-attribute-value :: <anonymous-4541>;
  slot AtkDocumentIface-set-document-attribute :: <anonymous-4542>;
  slot AtkDocumentIface-pad1 :: <anonymous-3738>;
  slot AtkDocumentIface-pad2 :: <anonymous-3738>;
  slot AtkDocumentIface-pad3 :: <anonymous-3738>;
  slot AtkDocumentIface-pad4 :: <anonymous-3738>;
end;

define C-pointer-type <AtkDocumentIface> => <_AtkDocumentIface>;

define C-function atk-document-get-type
  result res :: <GType>;
  c-name: "atk_document_get_type";
end;

define C-function atk-document-get-document-type
  input parameter arg1 :: <AtkDocument>;
  result res :: <gchar*>;
  c-name: "atk_document_get_document_type";
end;

define C-function atk-document-get-document
  input parameter arg1 :: <AtkDocument>;
  result res :: <gpointer>;
  c-name: "atk_document_get_document";
end;

define C-function atk-document-get-locale
  input parameter arg1 :: <AtkDocument>;
  result res :: <gchar*>;
  c-name: "atk_document_get_locale";
end;

define C-function atk-document-get-attributes
  input parameter arg1 :: <AtkDocument>;
  result res :: <AtkAttributeSet>;
  c-name: "atk_document_get_attributes";
end;

define C-function atk-document-get-attribute-value
  input parameter arg1 :: <AtkDocument>;
  input parameter arg2 :: <gchar*>;
  result res :: <gchar*>;
  c-name: "atk_document_get_attribute_value";
end;

define C-function atk-document-set-attribute-value
  input parameter arg1 :: <AtkDocument>;
  input parameter arg2 :: <gchar*>;
  input parameter arg3 :: <gchar*>;
  result res :: <gboolean>;
  c-name: "atk_document_set_attribute_value";
end;

define C-struct <_AtkComponent>
end;

define C-pointer-type <AtkComponent> => <_AtkComponent>;

define constant <anonymous-4505> = <C-function-pointer>;
define constant <AtkFocusHandler> = <anonymous-4505>;

define constant <anonymous-4507> = <C-function-pointer>;
define constant <anonymous-4508> = <C-function-pointer>;
define constant <anonymous-4509> = <C-function-pointer>;
define constant <anonymous-4510> = <C-function-pointer>;
define constant <anonymous-4511> = <C-function-pointer>;
define constant <anonymous-4512> = <C-function-pointer>;
define constant <anonymous-4513> = <C-function-pointer>;
define constant <anonymous-4514> = <C-function-pointer>;
define constant <anonymous-4515> = <C-function-pointer>;
define constant <anonymous-4516> = <C-function-pointer>;
define constant <anonymous-4517> = <C-function-pointer>;
define constant <anonymous-4518> = <C-function-pointer>;
define constant <anonymous-4519> = <C-function-pointer>;
define C-struct <_AtkRectangle>
  slot AtkRectangle-x :: <C-signed-int>;
  slot AtkRectangle-y :: <C-signed-int>;
  slot AtkRectangle-width :: <C-signed-int>;
  slot AtkRectangle-height :: <C-signed-int>;
end;

define C-pointer-type <AtkRectangle> => <_AtkRectangle>;

define constant <anonymous-4520> = <C-function-pointer>;
define constant <anonymous-4521> = <C-function-pointer>;
define C-struct <_AtkComponentIface>
  slot AtkComponentIface-parent :: <_GTypeInterface>;
  slot AtkComponentIface-add-focus-handler :: <anonymous-4507>;
  slot AtkComponentIface-contains :: <anonymous-4508>;
  slot AtkComponentIface-ref-accessible-at-point :: <anonymous-4509>;
  slot AtkComponentIface-get-extents :: <anonymous-4510>;
  slot AtkComponentIface-get-position :: <anonymous-4511>;
  slot AtkComponentIface-get-size :: <anonymous-4512>;
  slot AtkComponentIface-grab-focus :: <anonymous-4513>;
  slot AtkComponentIface-remove-focus-handler :: <anonymous-4514>;
  slot AtkComponentIface-set-extents :: <anonymous-4515>;
  slot AtkComponentIface-set-position :: <anonymous-4516>;
  slot AtkComponentIface-set-size :: <anonymous-4517>;
  slot AtkComponentIface-get-layer :: <anonymous-4518>;
  slot AtkComponentIface-get-mdi-zorder :: <anonymous-4519>;
  slot AtkComponentIface-bounds-changed :: <anonymous-4520>;
  slot AtkComponentIface-get-alpha :: <anonymous-4521>;
end;

define C-pointer-type <AtkComponentIface> => <_AtkComponentIface>;

define C-function atk-rectangle-get-type
  result res :: <GType>;
  c-name: "atk_rectangle_get_type";
end;

define C-function atk-component-get-type
  result res :: <GType>;
  c-name: "atk_component_get_type";
end;

define C-function atk-component-add-focus-handler
  input parameter arg1 :: <AtkComponent>;
  input parameter arg2 :: <AtkFocusHandler>;
  result res :: <guint>;
  c-name: "atk_component_add_focus_handler";
end;

define C-function atk-component-contains
  input parameter arg1 :: <AtkComponent>;
  input parameter arg2 :: <gint>;
  input parameter arg3 :: <gint>;
  input parameter arg4 :: <AtkCoordType>;
  result res :: <gboolean>;
  c-name: "atk_component_contains";
end;

define C-function atk-component-ref-accessible-at-point
  input parameter arg1 :: <AtkComponent>;
  input parameter arg2 :: <gint>;
  input parameter arg3 :: <gint>;
  input parameter arg4 :: <AtkCoordType>;
  result res :: <AtkObject>;
  c-name: "atk_component_ref_accessible_at_point";
end;

define C-function atk-component-get-extents
  input parameter arg1 :: <AtkComponent>;
  input parameter arg2 :: <gint*>;
  input parameter arg3 :: <gint*>;
  input parameter arg4 :: <gint*>;
  input parameter arg5 :: <gint*>;
  input parameter arg6 :: <AtkCoordType>;
  c-name: "atk_component_get_extents";
end;

define C-function atk-component-get-position
  input parameter arg1 :: <AtkComponent>;
  input parameter arg2 :: <gint*>;
  input parameter arg3 :: <gint*>;
  input parameter arg4 :: <AtkCoordType>;
  c-name: "atk_component_get_position";
end;

define C-function atk-component-get-size
  input parameter arg1 :: <AtkComponent>;
  input parameter arg2 :: <gint*>;
  input parameter arg3 :: <gint*>;
  c-name: "atk_component_get_size";
end;

define C-function atk-component-get-layer
  input parameter arg1 :: <AtkComponent>;
  result res :: <AtkLayer>;
  c-name: "atk_component_get_layer";
end;

define C-function atk-component-get-mdi-zorder
  input parameter arg1 :: <AtkComponent>;
  result res :: <gint>;
  c-name: "atk_component_get_mdi_zorder";
end;

define C-function atk-component-grab-focus
  input parameter arg1 :: <AtkComponent>;
  result res :: <gboolean>;
  c-name: "atk_component_grab_focus";
end;

define C-function atk-component-remove-focus-handler
  input parameter arg1 :: <AtkComponent>;
  input parameter arg2 :: <guint>;
  c-name: "atk_component_remove_focus_handler";
end;

define C-function atk-component-set-extents
  input parameter arg1 :: <AtkComponent>;
  input parameter arg2 :: <gint>;
  input parameter arg3 :: <gint>;
  input parameter arg4 :: <gint>;
  input parameter arg5 :: <gint>;
  input parameter arg6 :: <AtkCoordType>;
  result res :: <gboolean>;
  c-name: "atk_component_set_extents";
end;

define C-function atk-component-set-position
  input parameter arg1 :: <AtkComponent>;
  input parameter arg2 :: <gint>;
  input parameter arg3 :: <gint>;
  input parameter arg4 :: <AtkCoordType>;
  result res :: <gboolean>;
  c-name: "atk_component_set_position";
end;

define C-function atk-component-set-size
  input parameter arg1 :: <AtkComponent>;
  input parameter arg2 :: <gint>;
  input parameter arg3 :: <gint>;
  result res :: <gboolean>;
  c-name: "atk_component_set_size";
end;

define C-function atk-component-get-alpha
  input parameter arg1 :: <AtkComponent>;
  result res :: <gdouble>;
  c-name: "atk_component_get_alpha";
end;

define C-subtype <_GtkAccelMap> (<_GObject>) end;
define constant <GtkAccelMap> = <_GtkAccelMap>;

define C-struct <_GtkAccelMapClass>
end;

define C-pointer-type <GtkAccelMapClass> => <_GtkAccelMapClass>;

define constant <anonymous-4444> = <C-function-pointer>;
define constant <GtkAccelMapForeach> = <anonymous-4444>;

define C-function gtk-accel-map-add-entry
  input parameter arg1 :: <gchar*>;
  input parameter arg2 :: <guint>;
  input parameter arg3 :: <GdkModifierType>;
  c-name: "gtk_accel_map_add_entry";
end;

define C-function gtk-accel-map-lookup-entry
  input parameter arg1 :: <gchar*>;
  input parameter arg2 :: <GtkAccelKey>;
  result res :: <gboolean>;
  c-name: "gtk_accel_map_lookup_entry";
end;

define C-function gtk-accel-map-change-entry
  input parameter arg1 :: <gchar*>;
  input parameter arg2 :: <guint>;
  input parameter arg3 :: <GdkModifierType>;
  input parameter arg4 :: <gboolean>;
  result res :: <gboolean>;
  c-name: "gtk_accel_map_change_entry";
end;

define C-function gtk-accel-map-load
  input parameter arg1 :: <gchar*>;
  c-name: "gtk_accel_map_load";
end;

define C-function gtk-accel-map-save
  input parameter arg1 :: <gchar*>;
  c-name: "gtk_accel_map_save";
end;

define C-function gtk-accel-map-foreach
  input parameter arg1 :: <gpointer>;
  input parameter arg2 :: <GtkAccelMapForeach>;
  c-name: "gtk_accel_map_foreach";
end;

define C-function gtk-accel-map-load-fd
  input parameter arg1 :: <gint>;
  c-name: "gtk_accel_map_load_fd";
end;

define C-function gtk-accel-map-load-scanner
  input parameter arg1 :: <GScanner>;
  c-name: "gtk_accel_map_load_scanner";
end;

define C-function gtk-accel-map-save-fd
  input parameter arg1 :: <gint>;
  c-name: "gtk_accel_map_save_fd";
end;

define C-function gtk-accel-map-lock-path
  input parameter arg1 :: <gchar*>;
  c-name: "gtk_accel_map_lock_path";
end;

define C-function gtk-accel-map-unlock-path
  input parameter arg1 :: <gchar*>;
  c-name: "gtk_accel_map_unlock_path";
end;

define C-function gtk-accel-map-add-filter
  input parameter arg1 :: <gchar*>;
  c-name: "gtk_accel_map_add_filter";
end;

define C-function gtk-accel-map-foreach-unfiltered
  input parameter arg1 :: <gpointer>;
  input parameter arg2 :: <GtkAccelMapForeach>;
  c-name: "gtk_accel_map_foreach_unfiltered";
end;

define C-function gtk-accel-map-get-type
  result res :: <GType>;
  c-name: "gtk_accel_map_get_type";
end;

define C-function gtk-accel-map-get
  result res :: <GtkAccelMap>;
  c-name: "gtk_accel_map_get";
end;

define C-subtype <_GtkAccelLabel> (<_GtkLabel>, <_AtkImplementorIface>) end;
define constant <GtkAccelLabel> = <_GtkAccelLabel>;

define constant <anonymous-4432> = <C-function-pointer>;
define constant <anonymous-4433> = <C-function-pointer>;
define constant <anonymous-4434> = <C-function-pointer>;
define constant <anonymous-4435> = <C-function-pointer>;
define C-struct <_GtkAccelLabelClass>
  slot GtkAccelLabelClass-parent-class :: <_GtkLabelClass>;
  slot GtkAccelLabelClass-signal-quote1 :: <gchar*>;
  slot GtkAccelLabelClass-signal-quote2 :: <gchar*>;
  slot GtkAccelLabelClass-mod-name-shift :: <gchar*>;
  slot GtkAccelLabelClass-mod-name-control :: <gchar*>;
  slot GtkAccelLabelClass-mod-name-alt :: <gchar*>;
  slot GtkAccelLabelClass-mod-separator :: <gchar*>;
  slot GtkAccelLabelClass-accel-seperator :: <gchar*>;
  bitfield slot GtkAccelLabelClass-latin1-to-char :: <C-int>, width: 1;
  slot GtkAccelLabelClass-_gtk-reserved1 :: <anonymous-4432>;
  slot GtkAccelLabelClass-_gtk-reserved2 :: <anonymous-4433>;
  slot GtkAccelLabelClass-_gtk-reserved3 :: <anonymous-4434>;
  slot GtkAccelLabelClass-_gtk-reserved4 :: <anonymous-4435>;
end;

define C-pointer-type <GtkAccelLabelClass> => <_GtkAccelLabelClass>;

define C-function gtk-accel-label-get-type
  result res :: <GType>;
  c-name: "gtk_accel_label_get_type";
end;

define C-function gtk-accel-label-new
  input parameter arg1 :: <gchar*>;
  result res :: <GtkWidget>;
  c-name: "gtk_accel_label_new";
end;

define C-function gtk-accel-label-get-accel-widget
  input parameter arg1 :: <GtkAccelLabel>;
  result res :: <GtkWidget>;
  c-name: "gtk_accel_label_get_accel_widget";
end;

define C-function gtk-accel-label-get-accel-width
  input parameter arg1 :: <GtkAccelLabel>;
  result res :: <guint>;
  c-name: "gtk_accel_label_get_accel_width";
end;

define C-function gtk-accel-label-set-accel-widget
  input parameter arg1 :: <GtkAccelLabel>;
  input parameter arg2 :: <GtkWidget>;
  c-name: "gtk_accel_label_set_accel_widget";
end;

define C-function gtk-accel-label-set-accel-closure
  input parameter arg1 :: <GtkAccelLabel>;
  input parameter arg2 :: <GClosure>;
  c-name: "gtk_accel_label_set_accel_closure";
end;

define C-function gtk-accel-label-refetch
  input parameter arg1 :: <GtkAccelLabel>;
  result res :: <gboolean>;
  c-name: "gtk_accel_label_refetch";
end;

define constant gtk-accel-label-accelerator-width = gtk-accel-label-get-accel-width;

define C-subtype <_GtkAboutDialog> (<_GtkDialog>, <_AtkImplementorIface>) end;
define constant <GtkAboutDialog> = <_GtkAboutDialog>;

define constant <anonymous-4254> = <C-function-pointer>;
define constant <anonymous-4255> = <C-function-pointer>;
define constant <anonymous-4256> = <C-function-pointer>;
define constant <anonymous-4257> = <C-function-pointer>;
define C-struct <_GtkAboutDialogClass>
  slot GtkAboutDialogClass-parent-class :: <_GtkDialogClass>;
  slot GtkAboutDialogClass-_gtk-reserved1 :: <anonymous-4254>;
  slot GtkAboutDialogClass-_gtk-reserved2 :: <anonymous-4255>;
  slot GtkAboutDialogClass-_gtk-reserved3 :: <anonymous-4256>;
  slot GtkAboutDialogClass-_gtk-reserved4 :: <anonymous-4257>;
end;

define C-pointer-type <GtkAboutDialogClass> => <_GtkAboutDialogClass>;

define C-function gtk-about-dialog-get-type
  result res :: <GType>;
  c-name: "gtk_about_dialog_get_type";
end;

define C-function gtk-about-dialog-new
  result res :: <GtkWidget>;
  c-name: "gtk_about_dialog_new";
end;

define C-function gtk-show-about-dialog
  input parameter arg1 :: <GtkWindow>;
  input parameter arg2 :: <gchar*>;
  c-name: "gtk_show_about_dialog";
end;

define C-function gtk-about-dialog-get-name
  input parameter arg1 :: <GtkAboutDialog>;
  result res :: <gchar*>;
  c-name: "gtk_about_dialog_get_name";
end;

define C-function gtk-about-dialog-set-name
  input parameter arg1 :: <GtkAboutDialog>;
  input parameter arg2 :: <gchar*>;
  c-name: "gtk_about_dialog_set_name";
end;

define C-function gtk-about-dialog-get-program-name
  input parameter arg1 :: <GtkAboutDialog>;
  result res :: <gchar*>;
  c-name: "gtk_about_dialog_get_program_name";
end;

define C-function gtk-about-dialog-set-program-name
  input parameter arg1 :: <GtkAboutDialog>;
  input parameter arg2 :: <gchar*>;
  c-name: "gtk_about_dialog_set_program_name";
end;

define C-function gtk-about-dialog-get-version
  input parameter arg1 :: <GtkAboutDialog>;
  result res :: <gchar*>;
  c-name: "gtk_about_dialog_get_version";
end;

define C-function gtk-about-dialog-set-version
  input parameter arg1 :: <GtkAboutDialog>;
  input parameter arg2 :: <gchar*>;
  c-name: "gtk_about_dialog_set_version";
end;

define C-function gtk-about-dialog-get-copyright
  input parameter arg1 :: <GtkAboutDialog>;
  result res :: <gchar*>;
  c-name: "gtk_about_dialog_get_copyright";
end;

define C-function gtk-about-dialog-set-copyright
  input parameter arg1 :: <GtkAboutDialog>;
  input parameter arg2 :: <gchar*>;
  c-name: "gtk_about_dialog_set_copyright";
end;

define C-function gtk-about-dialog-get-comments
  input parameter arg1 :: <GtkAboutDialog>;
  result res :: <gchar*>;
  c-name: "gtk_about_dialog_get_comments";
end;

define C-function gtk-about-dialog-set-comments
  input parameter arg1 :: <GtkAboutDialog>;
  input parameter arg2 :: <gchar*>;
  c-name: "gtk_about_dialog_set_comments";
end;

define C-function gtk-about-dialog-get-license
  input parameter arg1 :: <GtkAboutDialog>;
  result res :: <gchar*>;
  c-name: "gtk_about_dialog_get_license";
end;

define C-function gtk-about-dialog-set-license
  input parameter arg1 :: <GtkAboutDialog>;
  input parameter arg2 :: <gchar*>;
  c-name: "gtk_about_dialog_set_license";
end;

define C-function gtk-about-dialog-get-wrap-license
  input parameter arg1 :: <GtkAboutDialog>;
  result res :: <gboolean>;
  c-name: "gtk_about_dialog_get_wrap_license";
end;

define C-function gtk-about-dialog-set-wrap-license
  input parameter arg1 :: <GtkAboutDialog>;
  input parameter arg2 :: <gboolean>;
  c-name: "gtk_about_dialog_set_wrap_license";
end;

define C-function gtk-about-dialog-get-website
  input parameter arg1 :: <GtkAboutDialog>;
  result res :: <gchar*>;
  c-name: "gtk_about_dialog_get_website";
end;

define C-function gtk-about-dialog-set-website
  input parameter arg1 :: <GtkAboutDialog>;
  input parameter arg2 :: <gchar*>;
  c-name: "gtk_about_dialog_set_website";
end;

define C-function gtk-about-dialog-get-website-label
  input parameter arg1 :: <GtkAboutDialog>;
  result res :: <gchar*>;
  c-name: "gtk_about_dialog_get_website_label";
end;

define C-function gtk-about-dialog-set-website-label
  input parameter arg1 :: <GtkAboutDialog>;
  input parameter arg2 :: <gchar*>;
  c-name: "gtk_about_dialog_set_website_label";
end;

define C-function gtk-about-dialog-get-authors
  input parameter arg1 :: <GtkAboutDialog>;
  result res :: <gchar**>;
  c-name: "gtk_about_dialog_get_authors";
end;

define C-function gtk-about-dialog-set-authors
  input parameter arg1 :: <GtkAboutDialog>;
  input parameter arg2 :: <gchar**>;
  c-name: "gtk_about_dialog_set_authors";
end;

define C-function gtk-about-dialog-get-documenters
  input parameter arg1 :: <GtkAboutDialog>;
  result res :: <gchar**>;
  c-name: "gtk_about_dialog_get_documenters";
end;

define C-function gtk-about-dialog-set-documenters
  input parameter arg1 :: <GtkAboutDialog>;
  input parameter arg2 :: <gchar**>;
  c-name: "gtk_about_dialog_set_documenters";
end;

define C-function gtk-about-dialog-get-artists
  input parameter arg1 :: <GtkAboutDialog>;
  result res :: <gchar**>;
  c-name: "gtk_about_dialog_get_artists";
end;

define C-function gtk-about-dialog-set-artists
  input parameter arg1 :: <GtkAboutDialog>;
  input parameter arg2 :: <gchar**>;
  c-name: "gtk_about_dialog_set_artists";
end;

define C-function gtk-about-dialog-get-translator-credits
  input parameter arg1 :: <GtkAboutDialog>;
  result res :: <gchar*>;
  c-name: "gtk_about_dialog_get_translator_credits";
end;

define C-function gtk-about-dialog-set-translator-credits
  input parameter arg1 :: <GtkAboutDialog>;
  input parameter arg2 :: <gchar*>;
  c-name: "gtk_about_dialog_set_translator_credits";
end;

define C-function gtk-about-dialog-get-logo
  input parameter arg1 :: <GtkAboutDialog>;
  result res :: <GdkPixbuf>;
  c-name: "gtk_about_dialog_get_logo";
end;

define C-function gtk-about-dialog-set-logo
  input parameter arg1 :: <GtkAboutDialog>;
  input parameter arg2 :: <GdkPixbuf>;
  c-name: "gtk_about_dialog_set_logo";
end;

define C-function gtk-about-dialog-get-logo-icon-name
  input parameter arg1 :: <GtkAboutDialog>;
  result res :: <gchar*>;
  c-name: "gtk_about_dialog_get_logo_icon_name";
end;

define C-function gtk-about-dialog-set-logo-icon-name
  input parameter arg1 :: <GtkAboutDialog>;
  input parameter arg2 :: <gchar*>;
  c-name: "gtk_about_dialog_set_logo_icon_name";
end;

define constant <anonymous-4291> = <C-function-pointer>;
define constant <GtkAboutDialogActivateLinkFunc> = <anonymous-4291>;

define C-function gtk-about-dialog-set-email-hook
  input parameter arg1 :: <GtkAboutDialogActivateLinkFunc>;
  input parameter arg2 :: <gpointer>;
  input parameter arg3 :: <GDestroyNotify>;
  result res :: <GtkAboutDialogActivateLinkFunc>;
  c-name: "gtk_about_dialog_set_email_hook";
end;

define C-function gtk-about-dialog-set-url-hook
  input parameter arg1 :: <GtkAboutDialogActivateLinkFunc>;
  input parameter arg2 :: <gpointer>;
  input parameter arg3 :: <GDestroyNotify>;
  result res :: <GtkAboutDialogActivateLinkFunc>;
  c-name: "gtk_about_dialog_set_url_hook";
end;
