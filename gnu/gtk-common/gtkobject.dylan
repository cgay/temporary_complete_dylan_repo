Module:    gtk-common
Copyright:    Original Code is Copyright (c) 1995-2004 Functional Objects, Inc.
              All rights reserved.
License:      Functional Objects Library Public License Version 1.0
Dual-license: GNU Lesser General Public License
Warranty:     Distributed WITHOUT WARRANTY OF ANY KIND

// This file is automatically generated from "gtkobject.h"; do not edit.

// enum GtkObjectFlags:
define C-pointer-type <GtkObjectFlags*> => <GtkObjectFlags>;
define C-pointer-type <GtkObjectFlags**> => <GtkObjectFlags*>;
define inline-only constant $GTK-DESTROYED = ash(1,0);
define inline-only constant $GTK-FLOATING = ash(1,1);
define inline-only constant $GTK-CONNECTED = ash(1,2);
define inline-only constant $GTK-CONSTRUCTED = ash(1,3);

// enum GtkArgFlags:
define C-pointer-type <GtkArgFlags*> => <GtkArgFlags>;
define C-pointer-type <GtkArgFlags**> => <GtkArgFlags*>;
define inline-only constant $GTK-ARG-READABLE = ash(1,0);
define inline-only constant $GTK-ARG-WRITABLE = ash(1,1);
define inline-only constant $GTK-ARG-CONSTRUCT = ash(1,2);
define inline-only constant $GTK-ARG-CONSTRUCT-ONLY = ash(1,3);
define inline-only constant $GTK-ARG-CHILD-ARG = ash(1,4);
define inline-only constant $GTK-ARG-MASK = #x1f;
define inline-only constant $GTK-ARG-READWRITE = logior($GTK-ARG-READABLE, $GTK-ARG-WRITABLE);

define C-pointer-type <GtkObjectClass*> => <GtkObjectClass>;
define C-pointer-type <GtkObjectClass**> => <GtkObjectClass*>;

define C-struct <_GtkObject>
  sealed inline-only slot klass-value    :: <GtkObjectClass*>;
  sealed inline-only slot flags-value    :: <guint32>;
  sealed inline-only slot ref-count-value :: <guint>;
  sealed inline-only slot object-data-value :: <GData*>;
  pointer-type-name: <_GtkObject*>;
  c-name: "struct _GtkObject";
end;

define C-struct <_GtkObjectClass>
  sealed inline-only slot type-value     :: <GtkType>;
  sealed inline-only slot signals-value  :: <guint*>;
  sealed inline-only slot nsignals-value :: <guint>;
  sealed inline-only slot n-args-value   :: <guint>;
  sealed inline-only slot construct-args-value :: <GSList*>;
  sealed inline-only slot set-arg-value  :: <C-function-pointer>;
  sealed inline-only slot get-arg-value  :: <C-function-pointer>;
  sealed inline-only slot shutdown-value :: <C-function-pointer>;
  sealed inline-only slot destroy-value  :: <C-function-pointer>;
  sealed inline-only slot finalize-value :: <C-function-pointer>;
  pointer-type-name: <_GtkObjectClass*>;
  c-name: "struct _GtkObjectClass";
end;

define inline-only C-function gtk-object-get-type
  result value :: <GtkType>;
  c-name: "gtk_object_get_type";
end;

define inline-only C-function gtk-object-class-user-signal-newv
  parameter klass1     :: <GtkObjectClass*>;
  parameter name2      ::  /* const */ <gchar*>;
  parameter signal_flags3 :: <GtkSignalRunType>;
  parameter marshaller4 :: <GtkSignalMarshaller>;
  parameter return_val5 :: <GtkType>;
  parameter nparams6   :: <guint>;
  parameter params7    :: <GtkType*>;
  result value :: <guint>;
  c-name: "gtk_object_class_user_signal_newv";
end;

define inline-only C-function gtk-object-newv
  parameter object_type1 :: <GtkType>;
  parameter n_args2    :: <guint>;
  parameter args3      :: <GtkArg*>;
  result value :: <GtkObject*>;
  c-name: "gtk_object_newv";
end;

define inline-only C-function gtk-object-default-construct
  parameter object1    :: <GtkObject*>;
  c-name: "gtk_object_default_construct";
end;

define inline-only C-function gtk-object-constructed
  parameter object1    :: <GtkObject*>;
  c-name: "gtk_object_constructed";
end;

define inline-only C-function gtk-object-sink
  parameter object1    :: <GtkObject*>;
  c-name: "gtk_object_sink";
end;

define inline-only C-function gtk-object-ref
  parameter object1    :: <GtkObject*>;
  c-name: "gtk_object_ref";
end;

define inline-only C-function gtk-object-unref
  parameter object1    :: <GtkObject*>;
  c-name: "gtk_object_unref";
end;

define inline-only C-function gtk-object-weakref
  parameter object1    :: <GtkObject*>;
  parameter notify2    :: <GtkDestroyNotify>;
  parameter data3      :: <gpointer>;
  c-name: "gtk_object_weakref";
end;

define inline-only C-function gtk-object-weakunref
  parameter object1    :: <GtkObject*>;
  parameter notify2    :: <GtkDestroyNotify>;
  parameter data3      :: <gpointer>;
  c-name: "gtk_object_weakunref";
end;

define inline-only C-function gtk-object-destroy
  parameter object1    :: <GtkObject*>;
  c-name: "gtk_object_destroy";
end;

define inline-only C-function gtk-object-getv
  parameter object1    :: <GtkObject*>;
  parameter n_args2    :: <guint>;
  parameter args3      :: <GtkArg*>;
  c-name: "gtk_object_getv";
end;

define inline-only C-function gtk-object-setv
  parameter object1    :: <GtkObject*>;
  parameter n_args2    :: <guint>;
  parameter args3      :: <GtkArg*>;
  c-name: "gtk_object_setv";
end;

define inline-only C-function gtk-object-query-args
  parameter class_type1 :: <GtkType>;
  parameter arg_flags2 :: <guint32**>;
  parameter n_args3    :: <guint*>;
  result value :: <GtkArg*>;
  c-name: "gtk_object_query_args";
end;

define inline-only C-function gtk-object-set-data
  parameter object1    :: <GtkObject*>;
  parameter key2       ::  /* const */ <gchar*>;
  parameter data3      :: <gpointer>;
  c-name: "gtk_object_set_data";
end;

define inline-only C-function gtk-object-set-data-full
  parameter object1    :: <GtkObject*>;
  parameter key2       ::  /* const */ <gchar*>;
  parameter data3      :: <gpointer>;
  parameter destroy4   :: <GtkDestroyNotify>;
  c-name: "gtk_object_set_data_full";
end;

define inline-only C-function gtk-object-remove-data
  parameter object1    :: <GtkObject*>;
  parameter key2       ::  /* const */ <gchar*>;
  c-name: "gtk_object_remove_data";
end;

define inline-only C-function gtk-object-get-data
  parameter object1    :: <GtkObject*>;
  parameter key2       ::  /* const */ <gchar*>;
  result value :: <gpointer>;
  c-name: "gtk_object_get_data";
end;

define inline-only C-function gtk-object-remove-no-notify
  parameter object1    :: <GtkObject*>;
  parameter key2       ::  /* const */ <gchar*>;
  c-name: "gtk_object_remove_no_notify";
end;

define inline-only C-function gtk-object-set-user-data
  parameter object1    :: <GtkObject*>;
  parameter data2      :: <gpointer>;
  c-name: "gtk_object_set_user_data";
end;

define inline-only C-function gtk-object-get-user-data
  parameter object1    :: <GtkObject*>;
  result value :: <gpointer>;
  c-name: "gtk_object_get_user_data";
end;

define inline-only C-function gtk-object-class-add-signals
  parameter klass1     :: <GtkObjectClass*>;
  parameter signals2   :: <guint*>;
  parameter nsignals3  :: <guint>;
  c-name: "gtk_object_class_add_signals";
end;

define inline-only C-function gtk-object-add-arg-type
  parameter arg_name1  ::  /* const */ <gchar*>;
  parameter arg_type2  :: <GtkType>;
  parameter arg_flags3 :: <guint>;
  parameter arg_id4    :: <guint>;
  c-name: "gtk_object_add_arg_type";
end;

define inline-only C-function gtk-object-set-data-by-id
  parameter object1    :: <GtkObject*>;
  parameter data_id2   :: <GQuark>;
  parameter data3      :: <gpointer>;
  c-name: "gtk_object_set_data_by_id";
end;

define inline-only C-function gtk-object-set-data-by-id-full
  parameter object1    :: <GtkObject*>;
  parameter data_id2   :: <GQuark>;
  parameter data3      :: <gpointer>;
  parameter destroy4   :: <GtkDestroyNotify>;
  c-name: "gtk_object_set_data_by_id_full";
end;

define inline-only C-function gtk-object-get-data-by-id
  parameter object1    :: <GtkObject*>;
  parameter data_id2   :: <GQuark>;
  result value :: <gpointer>;
  c-name: "gtk_object_get_data_by_id";
end;

define inline-only C-function gtk-object-remove-data-by-id
  parameter object1    :: <GtkObject*>;
  parameter data_id2   :: <GQuark>;
  c-name: "gtk_object_remove_data_by_id";
end;

define inline-only C-function gtk-object-remove-no-notify-by-id
  parameter object1    :: <GtkObject*>;
  parameter key_id2    :: <GQuark>;
  c-name: "gtk_object_remove_no_notify_by_id";
end;

define inline-only C-function gtk-object-arg-set
  parameter object1    :: <GtkObject*>;
  parameter arg2       :: <GtkArg*>;
  parameter info3      :: <GtkArgInfo*>;
  c-name: "gtk_object_arg_set";
end;

define inline-only C-function gtk-object-arg-get
  parameter object1    :: <GtkObject*>;
  parameter arg2       :: <GtkArg*>;
  parameter info3      :: <GtkArgInfo*>;
  c-name: "gtk_object_arg_get";
end;

define inline-only C-function gtk-object-arg-get-info
  parameter object_type1 :: <GtkType>;
  parameter arg_name2  ::  /* const */ <gchar*>;
  parameter info_p3    :: <GtkArgInfo**>;
  result value :: <gchar*>;
  c-name: "gtk_object_arg_get_info";
end;

define inline-only C-function gtk-trace-referencing
  parameter object1    :: <GtkObject*>;
  parameter func2      ::  /* const */ <gchar*>;
  parameter dummy3     :: <guint>;
  parameter line4      :: <guint>;
  parameter do_ref5    :: <gboolean>;
  c-name: "gtk_trace_referencing";
end;

define inline constant <GtkObjectFlags> = <c-signed-int>;
define inline constant <GtkArgFlags> = <c-signed-int>;
define inline constant <GtkObjectClass> = <_GtkObjectClass>;
define sealed domain make (singleton(<_GtkObject*>));
define sealed domain initialize (<_GtkObject*>);
define sealed domain make (singleton(<_GtkObjectClass*>));
define sealed domain initialize (<_GtkObjectClass*>);
