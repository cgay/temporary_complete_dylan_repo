Module:    gtk-widgets
Copyright:    Original Code is Copyright (c) 1995-2004 Functional Objects, Inc.
              All rights reserved.
License:      Functional Objects Library Public License Version 1.0
Dual-license: GNU Lesser General Public License
Warranty:     Distributed WITHOUT WARRANTY OF ANY KIND

// This file is automatically generated from "gtkbutton.h"; do not edit.

define C-pointer-type <GtkButton*> => <GtkButton>;
define C-pointer-type <GtkButton**> => <GtkButton*>;
define C-pointer-type <GtkButtonClass*> => <GtkButtonClass>;
define C-pointer-type <GtkButtonClass**> => <GtkButtonClass*>;

define C-struct <_GtkButton>
  sealed inline-only slot bin-value      :: <GtkBin>;
  sealed inline-only slot child-value    :: <GtkWidget*>;
  sealed bitfield slot in-button-value   :: <guint>,
    width: 1;
  sealed bitfield slot button-down-value :: <guint>,
    width: 1;
  sealed bitfield slot relief-value      :: <guint>,
    width: 2;
  pointer-type-name: <_GtkButton*>;
  c-name: "struct _GtkButton";
end;

define C-struct <_GtkButtonClass>
  sealed inline-only slot parent-class-value :: <GtkBinClass>;
  sealed inline-only slot pressed-value  :: <C-function-pointer>;
  sealed inline-only slot released-value :: <C-function-pointer>;
  sealed inline-only slot clicked-value  :: <C-function-pointer>;
  sealed inline-only slot enter-value    :: <C-function-pointer>;
  sealed inline-only slot leave-value    :: <C-function-pointer>;
  pointer-type-name: <_GtkButtonClass*>;
  c-name: "struct _GtkButtonClass";
end;

define inline-only C-function gtk-button-get-type
  result value :: <GtkType>;
  c-name: "gtk_button_get_type";
end;

define inline-only C-function gtk-button-new
  result value :: <GtkWidget*>;
  c-name: "gtk_button_new";
end;

define inline-only C-function gtk-button-new-with-label
  parameter label1     ::  /* const */ <gchar*>;
  result value :: <GtkWidget*>;
  c-name: "gtk_button_new_with_label";
end;

define inline-only C-function gtk-button-pressed
  parameter button1    :: <GtkButton*>;
  c-name: "gtk_button_pressed";
end;

define inline-only C-function gtk-button-released
  parameter button1    :: <GtkButton*>;
  c-name: "gtk_button_released";
end;

define inline-only C-function gtk-button-clicked
  parameter button1    :: <GtkButton*>;
  c-name: "gtk_button_clicked";
end;

define inline-only C-function gtk-button-enter
  parameter button1    :: <GtkButton*>;
  c-name: "gtk_button_enter";
end;

define inline-only C-function gtk-button-leave
  parameter button1    :: <GtkButton*>;
  c-name: "gtk_button_leave";
end;

define inline-only C-function gtk-button-set-relief
  parameter button1    :: <GtkButton*>;
  parameter newstyle2  :: <GtkReliefStyle>;
  c-name: "gtk_button_set_relief";
end;

define inline-only C-function gtk-button-get-relief
  parameter button1    :: <GtkButton*>;
  result value :: <GtkReliefStyle>;
  c-name: "gtk_button_get_relief";
end;

define inline constant <GtkButton> = <_GtkButton>;
define inline constant <GtkButtonClass> = <_GtkButtonClass>;
define sealed domain make (singleton(<_GtkButton*>));
define sealed domain initialize (<_GtkButton*>);
define sealed domain make (singleton(<_GtkButtonClass*>));
define sealed domain initialize (<_GtkButtonClass*>);
