Module:    Xt
Copyright:    Original Code is Copyright (c) 1995-2004 Functional Objects, Inc.
              All rights reserved.
License:      Functional Objects Library Public License Version 1.0
Dual-license: GNU Lesser General Public License
Warranty:     Distributed WITHOUT WARRANTY OF ANY KIND

// This file is automatically generated from "StringDefs.h"; do not edit.

//	XConsortium: StringDefs.h,v 1.52 91/05/04 20:57:56 rws Exp 
define C-variable XtStrings :: /* const */ <C-string>
  c-name: "XtStrings";
end;
define inline-only constant $XtNaccelerators            =
	pointer-value-address(XtStrings(), index: 0);
define inline-only constant $XtNallowHoriz              =
	pointer-value-address(XtStrings(), index: 13);
define inline-only constant $XtNallowVert               =
	pointer-value-address(XtStrings(), index: 24);
define inline-only constant $XtNancestorSensitive       =
	pointer-value-address(XtStrings(), index: 34);
define inline-only constant $XtNbackground              =
	pointer-value-address(XtStrings(), index: 52);
define inline-only constant $XtNbackgroundPixmap        =
	pointer-value-address(XtStrings(), index: 63);
define inline-only constant $XtNbitmap                  =
	pointer-value-address(XtStrings(), index: 80);
define inline-only constant $XtNborderColor             =
	pointer-value-address(XtStrings(), index: 87);
define inline-only constant $XtNborder                  =
	pointer-value-address(XtStrings(), index: 99);
define inline-only constant $XtNborderPixmap            =
	pointer-value-address(XtStrings(), index: 111);
define inline-only constant $XtNborderWidth             =
	pointer-value-address(XtStrings(), index: 124);
define inline-only constant $XtNcallback                =
	pointer-value-address(XtStrings(), index: 136);
define inline-only constant $XtNchildren                =
	pointer-value-address(XtStrings(), index: 145);
define inline-only constant $XtNcolormap                =
	pointer-value-address(XtStrings(), index: 154);
define inline-only constant $XtNdepth                   =
	pointer-value-address(XtStrings(), index: 163);
define inline-only constant $XtNdestroyCallback         =
	pointer-value-address(XtStrings(), index: 169);
define inline-only constant $XtNeditType                =
	pointer-value-address(XtStrings(), index: 185);
define inline-only constant $XtNfile                    =
	pointer-value-address(XtStrings(), index: 194);
define inline-only constant $XtNfont                    =
	pointer-value-address(XtStrings(), index: 199);
define inline-only constant $XtNforceBars               =
	pointer-value-address(XtStrings(), index: 204);
define inline-only constant $XtNforeground              =
	pointer-value-address(XtStrings(), index: 214);
define inline-only constant $XtNfunction                =
	pointer-value-address(XtStrings(), index: 225);
define inline-only constant $XtNheight                  =
	pointer-value-address(XtStrings(), index: 234);
define inline-only constant $XtNhighlight               =
	pointer-value-address(XtStrings(), index: 241);
define inline-only constant $XtNhSpace                  =
	pointer-value-address(XtStrings(), index: 251);
define inline-only constant $XtNindex                   =
	pointer-value-address(XtStrings(), index: 258);
define inline-only constant $XtNinitialResourcesPersistent =
	pointer-value-address(XtStrings(), index: 264);
define inline-only constant $XtNinnerHeight             =
	pointer-value-address(XtStrings(), index: 291);
define inline-only constant $XtNinnerWidth              =
	pointer-value-address(XtStrings(), index: 303);
define inline-only constant $XtNinnerWindow             =
	pointer-value-address(XtStrings(), index: 314);
define inline-only constant $XtNinsertPosition          =
	pointer-value-address(XtStrings(), index: 326);
define inline-only constant $XtNinternalHeight          =
	pointer-value-address(XtStrings(), index: 341);
define inline-only constant $XtNinternalWidth           =
	pointer-value-address(XtStrings(), index: 356);
define inline-only constant $XtNjumpProc                =
	pointer-value-address(XtStrings(), index: 370);
define inline-only constant $XtNjustify                 =
	pointer-value-address(XtStrings(), index: 379);
define inline-only constant $XtNknobHeight              =
	pointer-value-address(XtStrings(), index: 387);
define inline-only constant $XtNknobIndent              =
	pointer-value-address(XtStrings(), index: 398);
define inline-only constant $XtNknobPixel               =
	pointer-value-address(XtStrings(), index: 409);
define inline-only constant $XtNknobWidth               =
	pointer-value-address(XtStrings(), index: 419);
define inline-only constant $XtNlabel                   =
	pointer-value-address(XtStrings(), index: 429);
define inline-only constant $XtNlength                  =
	pointer-value-address(XtStrings(), index: 435);
define inline-only constant $XtNlowerRight              =
	pointer-value-address(XtStrings(), index: 442);
define inline-only constant $XtNmappedWhenManaged       =
	pointer-value-address(XtStrings(), index: 453);
define inline-only constant $XtNmenuEntry               =
	pointer-value-address(XtStrings(), index: 471);
define inline-only constant $XtNname                    =
	pointer-value-address(XtStrings(), index: 481);
define inline-only constant $XtNnotify                  =
	pointer-value-address(XtStrings(), index: 486);
define inline-only constant $XtNnumChildren             =
	pointer-value-address(XtStrings(), index: 493);
define inline-only constant $XtNorientation             =
	pointer-value-address(XtStrings(), index: 505);
define inline-only constant $XtNparameter               =
	pointer-value-address(XtStrings(), index: 517);
define inline-only constant $XtNpixmap                  =
	pointer-value-address(XtStrings(), index: 527);
define inline-only constant $XtNpopupCallback           =
	pointer-value-address(XtStrings(), index: 534);
define inline-only constant $XtNpopdownCallback         =
	pointer-value-address(XtStrings(), index: 548);
define inline-only constant $XtNresize                  =
	pointer-value-address(XtStrings(), index: 564);
define inline-only constant $XtNreverseVideo            =
	pointer-value-address(XtStrings(), index: 571);
define inline-only constant $XtNscreen                  =
	pointer-value-address(XtStrings(), index: 584);
define inline-only constant $XtNscrollProc              =
	pointer-value-address(XtStrings(), index: 591);
define inline-only constant $XtNscrollDCursor           =
	pointer-value-address(XtStrings(), index: 602);
define inline-only constant $XtNscrollHCursor           =
	pointer-value-address(XtStrings(), index: 616);
define inline-only constant $XtNscrollLCursor           =
	pointer-value-address(XtStrings(), index: 630);
define inline-only constant $XtNscrollRCursor           =
	pointer-value-address(XtStrings(), index: 644);
define inline-only constant $XtNscrollUCursor           =
	pointer-value-address(XtStrings(), index: 658);
define inline-only constant $XtNscrollVCursor           =
	pointer-value-address(XtStrings(), index: 672);
define inline-only constant $XtNselection               =
	pointer-value-address(XtStrings(), index: 686);
define inline-only constant $XtNselectionArray          =
	pointer-value-address(XtStrings(), index: 696);
define inline-only constant $XtNsensitive               =
	pointer-value-address(XtStrings(), index: 711);
define inline-only constant $XtNshown                   =
	pointer-value-address(XtStrings(), index: 721);
define inline-only constant $XtNspace                   =
	pointer-value-address(XtStrings(), index: 727);
define inline-only constant $XtNstring                  =
	pointer-value-address(XtStrings(), index: 733);
define inline-only constant $XtNtextOptions             =
	pointer-value-address(XtStrings(), index: 740);
define inline-only constant $XtNtextSink                =
	pointer-value-address(XtStrings(), index: 752);
define inline-only constant $XtNtextSource              =
	pointer-value-address(XtStrings(), index: 761);
define inline-only constant $XtNthickness               =
	pointer-value-address(XtStrings(), index: 772);
define inline-only constant $XtNthumb                   =
	pointer-value-address(XtStrings(), index: 782);
define inline-only constant $XtNthumbProc               =
	pointer-value-address(XtStrings(), index: 788);
define inline-only constant $XtNtop                     =
	pointer-value-address(XtStrings(), index: 798);
define inline-only constant $XtNtranslations            =
	pointer-value-address(XtStrings(), index: 802);
define inline-only constant $XtNunrealizeCallback       =
	pointer-value-address(XtStrings(), index: 815);
define inline-only constant $XtNupdate                  =
	pointer-value-address(XtStrings(), index: 833);
define inline-only constant $XtNuseBottom               =
	pointer-value-address(XtStrings(), index: 840);
define inline-only constant $XtNuseRight                =
	pointer-value-address(XtStrings(), index: 850);
define inline-only constant $XtNvalue                   =
	pointer-value-address(XtStrings(), index: 859);
define inline-only constant $XtNvSpace                  =
	pointer-value-address(XtStrings(), index: 865);
define inline-only constant $XtNwidth                   =
	pointer-value-address(XtStrings(), index: 872);
define inline-only constant $XtNwindow                  =
	pointer-value-address(XtStrings(), index: 878);
define inline-only constant $XtNx                       =
	pointer-value-address(XtStrings(), index: 885);
define inline-only constant $XtNy                       =
	pointer-value-address(XtStrings(), index: 887);
define inline-only constant $XtCAccelerators            =
	pointer-value-address(XtStrings(), index: 889);
define inline-only constant $XtCBackground              =
	pointer-value-address(XtStrings(), index: 902);
define inline-only constant $XtCBitmap                  =
	pointer-value-address(XtStrings(), index: 913);
define inline-only constant $XtCBoolean                 =
	pointer-value-address(XtStrings(), index: 920);
define inline-only constant $XtCBorderColor             =
	pointer-value-address(XtStrings(), index: 928);
define inline-only constant $XtCBorderWidth             =
	pointer-value-address(XtStrings(), index: 940);
define inline-only constant $XtCCallback                =
	pointer-value-address(XtStrings(), index: 952);
define inline-only constant $XtCColormap                =
	pointer-value-address(XtStrings(), index: 961);
define inline-only constant $XtCColor                   =
	pointer-value-address(XtStrings(), index: 970);
define inline-only constant $XtCCursor                  =
	pointer-value-address(XtStrings(), index: 976);
define inline-only constant $XtCDepth                   =
	pointer-value-address(XtStrings(), index: 983);
define inline-only constant $XtCEditType                =
	pointer-value-address(XtStrings(), index: 989);
define inline-only constant $XtCEventBindings           =
	pointer-value-address(XtStrings(), index: 998);
define inline-only constant $XtCFile                    =
	pointer-value-address(XtStrings(), index: 1012);
define inline-only constant $XtCFont                    =
	pointer-value-address(XtStrings(), index: 1017);
define inline-only constant $XtCForeground              =
	pointer-value-address(XtStrings(), index: 1022);
define inline-only constant $XtCFraction                =
	pointer-value-address(XtStrings(), index: 1033);
define inline-only constant $XtCFunction                =
	pointer-value-address(XtStrings(), index: 1042);
define inline-only constant $XtCHeight                  =
	pointer-value-address(XtStrings(), index: 1051);
define inline-only constant $XtCHSpace                  =
	pointer-value-address(XtStrings(), index: 1058);
define inline-only constant $XtCIndex                   =
	pointer-value-address(XtStrings(), index: 1065);
define inline-only constant $XtCInitialResourcesPersistent =
	pointer-value-address(XtStrings(), index: 1071);
define inline-only constant $XtCInsertPosition          =
	pointer-value-address(XtStrings(), index: 1098);
define inline-only constant $XtCInterval                =
	pointer-value-address(XtStrings(), index: 1113);
define inline-only constant $XtCJustify                 =
	pointer-value-address(XtStrings(), index: 1122);
define inline-only constant $XtCKnobIndent              =
	pointer-value-address(XtStrings(), index: 1130);
define inline-only constant $XtCKnobPixel               =
	pointer-value-address(XtStrings(), index: 1141);
define inline-only constant $XtCLabel                   =
	pointer-value-address(XtStrings(), index: 1151);
define inline-only constant $XtCLength                  =
	pointer-value-address(XtStrings(), index: 1157);
define inline-only constant $XtCMappedWhenManaged       =
	pointer-value-address(XtStrings(), index: 1164);
define inline-only constant $XtCMargin                  =
	pointer-value-address(XtStrings(), index: 1182);
define inline-only constant $XtCMenuEntry               =
	pointer-value-address(XtStrings(), index: 1189);
define inline-only constant $XtCNotify                  =
	pointer-value-address(XtStrings(), index: 1199);
define inline-only constant $XtCOrientation             =
	pointer-value-address(XtStrings(), index: 1206);
define inline-only constant $XtCParameter               =
	pointer-value-address(XtStrings(), index: 1218);
define inline-only constant $XtCPixmap                  =
	pointer-value-address(XtStrings(), index: 1228);
define inline-only constant $XtCPosition                =
	pointer-value-address(XtStrings(), index: 1235);
define inline-only constant $XtCReadOnly                =
	pointer-value-address(XtStrings(), index: 1244);
define inline-only constant $XtCResize                  =
	pointer-value-address(XtStrings(), index: 1253);
define inline-only constant $XtCReverseVideo            =
	pointer-value-address(XtStrings(), index: 1260);
define inline-only constant $XtCScreen                  =
	pointer-value-address(XtStrings(), index: 1273);
define inline-only constant $XtCScrollProc              =
	pointer-value-address(XtStrings(), index: 1280);
define inline-only constant $XtCScrollDCursor           =
	pointer-value-address(XtStrings(), index: 1291);
define inline-only constant $XtCScrollHCursor           =
	pointer-value-address(XtStrings(), index: 1305);
define inline-only constant $XtCScrollLCursor           =
	pointer-value-address(XtStrings(), index: 1319);
define inline-only constant $XtCScrollRCursor           =
	pointer-value-address(XtStrings(), index: 1333);
define inline-only constant $XtCScrollUCursor           =
	pointer-value-address(XtStrings(), index: 1347);
define inline-only constant $XtCScrollVCursor           =
	pointer-value-address(XtStrings(), index: 1361);
define inline-only constant $XtCSelection               =
	pointer-value-address(XtStrings(), index: 1375);
define inline-only constant $XtCSensitive               =
	pointer-value-address(XtStrings(), index: 1385);
define inline-only constant $XtCSelectionArray          =
	pointer-value-address(XtStrings(), index: 1395);
define inline-only constant $XtCSpace                   =
	pointer-value-address(XtStrings(), index: 1410);
define inline-only constant $XtCString                  =
	pointer-value-address(XtStrings(), index: 1416);
define inline-only constant $XtCTextOptions             =
	pointer-value-address(XtStrings(), index: 1423);
define inline-only constant $XtCTextPosition            =
	pointer-value-address(XtStrings(), index: 1435);
define inline-only constant $XtCTextSink                =
	pointer-value-address(XtStrings(), index: 1448);
define inline-only constant $XtCTextSource              =
	pointer-value-address(XtStrings(), index: 1457);
define inline-only constant $XtCThickness               =
	pointer-value-address(XtStrings(), index: 1468);
define inline-only constant $XtCThumb                   =
	pointer-value-address(XtStrings(), index: 1478);
define inline-only constant $XtCTranslations            =
	pointer-value-address(XtStrings(), index: 1484);
define inline-only constant $XtCValue                   =
	pointer-value-address(XtStrings(), index: 1497);
define inline-only constant $XtCVSpace                  =
	pointer-value-address(XtStrings(), index: 1503);
define inline-only constant $XtCWidth                   =
	pointer-value-address(XtStrings(), index: 1510);
define inline-only constant $XtCWindow                  =
	pointer-value-address(XtStrings(), index: 1516);
define inline-only constant $XtCX                       =
	pointer-value-address(XtStrings(), index: 1523);
define inline-only constant $XtCY                       =
	pointer-value-address(XtStrings(), index: 1525);
define inline-only constant $XtRAcceleratorTable        =
	pointer-value-address(XtStrings(), index: 1527);
define inline-only constant $XtRAtom                    =
	pointer-value-address(XtStrings(), index: 1544);
define inline-only constant $XtRBitmap                  =
	pointer-value-address(XtStrings(), index: 1549);
define inline-only constant $XtRBool                    =
	pointer-value-address(XtStrings(), index: 1556);
define inline-only constant $XtRBoolean                 =
	pointer-value-address(XtStrings(), index: 1561);
define inline-only constant $XtRCallback                =
	pointer-value-address(XtStrings(), index: 1569);
define inline-only constant $XtRCallProc                =
	pointer-value-address(XtStrings(), index: 1578);
define inline-only constant $XtRCardinal                =
	pointer-value-address(XtStrings(), index: 1587);
define inline-only constant $XtRColor                   =
	pointer-value-address(XtStrings(), index: 1596);
define inline-only constant $XtRColormap                =
	pointer-value-address(XtStrings(), index: 1602);
define inline-only constant $XtRCursor                  =
	pointer-value-address(XtStrings(), index: 1611);
define inline-only constant $XtRDimension               =
	pointer-value-address(XtStrings(), index: 1618);
define inline-only constant $XtRDisplay                 =
	pointer-value-address(XtStrings(), index: 1628);
define inline-only constant $XtREditMode                =
	pointer-value-address(XtStrings(), index: 1636);
define inline-only constant $XtREnum                    =
	pointer-value-address(XtStrings(), index: 1645);
define inline-only constant $XtRFile                    =
	pointer-value-address(XtStrings(), index: 1650);
define inline-only constant $XtRFloat                   =
	pointer-value-address(XtStrings(), index: 1655);
define inline-only constant $XtRFont                    =
	pointer-value-address(XtStrings(), index: 1661);
define inline-only constant $XtRFontStruct              =
	pointer-value-address(XtStrings(), index: 1666);
define inline-only constant $XtRFunction                =
	pointer-value-address(XtStrings(), index: 1677);
define inline-only constant $XtRGeometry                =
	pointer-value-address(XtStrings(), index: 1686);
define inline-only constant $XtRImmediate               =
	pointer-value-address(XtStrings(), index: 1695);
define inline-only constant $XtRInitialState            =
	pointer-value-address(XtStrings(), index: 1705);
define inline-only constant $XtRInt                     =
	pointer-value-address(XtStrings(), index: 1718);
define inline-only constant $XtRJustify                 =
	pointer-value-address(XtStrings(), index: 1722);
define inline-only constant $XtRLongBoolean             =
	pointer-value-address(XtStrings(), index: 1730);
define inline-only constant $XtRObject                  =
	pointer-value-address(XtStrings(), index: 1735);
define inline-only constant $XtROrientation             =
	pointer-value-address(XtStrings(), index: 1742);
define inline-only constant $XtRPixel                   =
	pointer-value-address(XtStrings(), index: 1754);
define inline-only constant $XtRPixmap                  =
	pointer-value-address(XtStrings(), index: 1760);
define inline-only constant $XtRPointer                 =
	pointer-value-address(XtStrings(), index: 1767);
define inline-only constant $XtRPosition                =
	pointer-value-address(XtStrings(), index: 1775);
define inline-only constant $XtRScreen                  =
	pointer-value-address(XtStrings(), index: 1784);
define inline-only constant $XtRShort                   =
	pointer-value-address(XtStrings(), index: 1791);
define inline-only constant $XtRString                  =
	pointer-value-address(XtStrings(), index: 1797);
define inline-only constant $XtRStringArray             =
	pointer-value-address(XtStrings(), index: 1804);
define inline-only constant $XtRStringTable             =
	pointer-value-address(XtStrings(), index: 1816);
define inline-only constant $XtRUnsignedChar            =
	pointer-value-address(XtStrings(), index: 1828);
define inline-only constant $XtRTranslationTable        =
	pointer-value-address(XtStrings(), index: 1841);
define inline-only constant $XtRVisual                  =
	pointer-value-address(XtStrings(), index: 1858);
define inline-only constant $XtRWidget                  =
	pointer-value-address(XtStrings(), index: 1865);
define inline-only constant $XtRWidgetClass             =
	pointer-value-address(XtStrings(), index: 1872);
define inline-only constant $XtRWidgetList              =
	pointer-value-address(XtStrings(), index: 1884);
define inline-only constant $XtRWindow                  =
	pointer-value-address(XtStrings(), index: 1895);
define inline-only constant $XtEoff                     =
	pointer-value-address(XtStrings(), index: 1902);
define inline-only constant $XtEfalse                   =
	pointer-value-address(XtStrings(), index: 1906);
define inline-only constant $XtEno                      =
	pointer-value-address(XtStrings(), index: 1912);
define inline-only constant $XtEon                      =
	pointer-value-address(XtStrings(), index: 1915);
define inline-only constant $XtEtrue                    =
	pointer-value-address(XtStrings(), index: 1918);
define inline-only constant $XtEyes                     =
	pointer-value-address(XtStrings(), index: 1923);
define inline-only constant $XtEvertical                =
	pointer-value-address(XtStrings(), index: 1927);
define inline-only constant $XtEhorizontal              =
	pointer-value-address(XtStrings(), index: 1936);
define inline-only constant $XtEtextRead                =
	pointer-value-address(XtStrings(), index: 1947);
define inline-only constant $XtEtextAppend              =
	pointer-value-address(XtStrings(), index: 1952);
define inline-only constant $XtEtextEdit                =
	pointer-value-address(XtStrings(), index: 1959);
define inline-only constant $XtExtdefaultbackground     =
	pointer-value-address(XtStrings(), index: 1964);
define inline-only constant $XtExtdefaultforeground     =
	pointer-value-address(XtStrings(), index: 1984);
define inline-only constant $XtExtdefaultfont           =
	pointer-value-address(XtStrings(), index: 2004);
define inline-only constant $XtNfontSet                 =
	pointer-value-address(XtStrings(), index: 2018);
define inline-only constant $XtRFontSet                 =
	pointer-value-address(XtStrings(), index: 2026);
define inline-only constant $XtCFontSet                 =
	pointer-value-address(XtStrings(), index: 2034);

