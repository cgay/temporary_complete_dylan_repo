Module:    Motif
Copyright:    Original Code is Copyright (c) 1995-2004 Functional Objects, Inc.
              All rights reserved.
License:      Functional Objects Library Public License Version 1.0
Dual-license: GNU Lesser General Public License
Warranty:     Distributed WITHOUT WARRANTY OF ANY KIND

// This file is automatically generated from "DragC.h"; do not edit.

//	RCSfile: DragC.h,v 
//	Revision: 1.41 
//	Date: 93/12/10 11:42:31 
//	Header: DragC.h,v 1.41 93/12/10 11:42:31 ejd_usl_summit Exp 
define inline-only constant $XmHELP                     =    2;
define inline constant <XmID> = <C-unsigned-int>;

define inline-only function XmIsDragContext (w);
  XtIsSubclass(w, xmDragContextClass())
end;
define inline-only constant $-XA-MOTIF-DROP             =
	"_MOTIF_DROP";
define inline-only constant $-XA-DRAG-FAILURE           =
	"_MOTIF_DRAG_FAILURE";
define inline-only constant $-XA-DRAG-SUCCESS           =
	"_MOTIF_DRAG_SUCCESS";
define inline-only constant $XmTOP-LEVEL-ENTER = -1 + 1;
define inline-only constant $XmTOP-LEVEL-LEAVE = $XmTOP-LEVEL-ENTER + 1;
define inline-only constant $XmDRAG-MOTION = $XmTOP-LEVEL-LEAVE + 1;
define inline-only constant $XmDROP-SITE-ENTER = $XmDRAG-MOTION + 1;
define inline-only constant $XmDROP-SITE-LEAVE = $XmDROP-SITE-ENTER + 1;
define inline-only constant $XmDROP-START = $XmDROP-SITE-LEAVE + 1;
define inline-only constant $XmDROP-FINISH = $XmDROP-START + 1;
define inline-only constant $XmDRAG-DROP-FINISH = $XmDROP-FINISH + 1;
define inline-only constant $XmOPERATION-CHANGED = $XmDRAG-DROP-FINISH + 1;

define inline-only constant $XmDROP = -1 + 1;
define inline-only constant $XmDROP-HELP = $XmDROP + 1;
define inline-only constant $XmDROP-CANCEL = $XmDROP-HELP + 1;
define inline-only constant $XmDROP-INTERRUPT = $XmDROP-CANCEL + 1;

define inline-only constant $XmDROP-NOOP                =    0;
define inline-only constant $XmDROP-MOVE                = ash(1,0);
define inline-only constant $XmDROP-COPY                = ash(1,1);
define inline-only constant $XmDROP-LINK                = ash(1,2);
define inline-only constant $XmBLEND-ALL = -1 + 1;
define inline-only constant $XmBLEND-STATE-SOURCE = $XmBLEND-ALL + 1;
define inline-only constant $XmBLEND-JUST-SOURCE = $XmBLEND-STATE-SOURCE + 1;
define inline-only constant $XmBLEND-NONE = $XmBLEND-JUST-SOURCE + 1;

define inline-only constant $XmDROP-FAILURE = -1 + 1;
define inline-only constant $XmDROP-SUCCESS = $XmDROP-FAILURE + 1;

define inline-only constant $XmCR-TOP-LEVEL-ENTER = -1 + 1;
define inline-only constant $XmCR-TOP-LEVEL-LEAVE = $XmCR-TOP-LEVEL-ENTER + 1;
define inline-only constant $XmCR-DRAG-MOTION = $XmCR-TOP-LEVEL-LEAVE + 1;
define inline-only constant $XmCR-DROP-SITE-ENTER = $XmCR-DRAG-MOTION + 1;
define inline-only constant $XmCR-DROP-SITE-LEAVE = $XmCR-DROP-SITE-ENTER + 1;
define inline-only constant $XmCR-DROP-START = $XmCR-DROP-SITE-LEAVE + 1;
define inline-only constant $XmCR-DROP-FINISH = $XmCR-DROP-START + 1;
define inline-only constant $XmCR-DRAG-DROP-FINISH = $XmCR-DROP-FINISH + 1;
define inline-only constant $XmCR-OPERATION-CHANGED = $XmCR-DRAG-DROP-FINISH + 1;
define inline-only constant $-XmNUMBER-DND-CB-REASONS = $XmCR-OPERATION-CHANGED + 1;

define C-subtype <XmDragContextClass> ( <C-void*> ) end;
define C-subtype <XmDragContext> ( <C-void*> ) end;
define C-variable xmDragContextClass :: <WidgetClass>
  c-name: "xmDragContextClass";
end;

define C-struct <XmAnyICCCallbackStruct>
  sealed inline-only slot reason-value   :: <C-int>;
  sealed inline-only slot event-value    :: <XEvent*>;
  sealed inline-only slot timeStamp-value :: <C-Time>;
  pointer-type-name: <XmAnyICCCallbackStruct*>;
  c-name: "struct _XmAnyICCCallbackStruct";
end C-struct <XmAnyICCCallbackStruct>;
define inline constant <XmAnyICCCallback> = <XmAnyICCCallbackStruct*>;

define C-struct <XmTopLevelEnterCallbackStruct>
  sealed inline-only slot reason-value   :: <C-int>;
  sealed inline-only slot event-value    :: <XEvent*>;
  sealed inline-only slot timeStamp-value :: <C-Time>;
  sealed inline-only slot screen-value   :: <Screen*>;
  sealed inline-only slot window-value   :: <C-Window>;
  sealed inline-only slot x-value        :: <C-Position>;
  sealed inline-only slot y-value        :: <C-Position>;
  sealed inline-only slot dragProtocolStyle-value :: <C-unsigned-char>;
  sealed inline-only slot iccHandle-value :: <C-Atom>;
  pointer-type-name: <XmTopLevelEnterCallbackStruct*>;
  c-name: "struct _XmTopLevelEnterCallbackStruct";
end C-struct <XmTopLevelEnterCallbackStruct>;
define inline constant <XmTopLevelEnterCallback> = <XmTopLevelEnterCallbackStruct*>;

define C-struct <XmTopLevelLeaveCallbackStruct>
  sealed inline-only slot reason-value   :: <C-int>;
  sealed inline-only slot event-value    :: <XEvent*>;
  sealed inline-only slot timeStamp-value :: <C-Time>;
  sealed inline-only slot screen-value   :: <Screen*>;
  sealed inline-only slot window-value   :: <C-Window>;
  pointer-type-name: <XmTopLevelLeaveCallbackStruct*>;
  c-name: "struct _XmTopLevelLeaveCallbackStruct";
end C-struct <XmTopLevelLeaveCallbackStruct>;
define inline constant <XmTopLevelLeaveCallback> = <XmTopLevelLeaveCallbackStruct*>;

define C-struct <XmDropSiteEnterCallbackStruct>
  sealed inline-only slot reason-value   :: <C-int>;
  sealed inline-only slot event-value    :: <XEvent*>;
  sealed inline-only slot timeStamp-value :: <C-Time>;
  sealed inline-only slot operation-value :: <C-unsigned-char>;
  sealed inline-only slot operations-value :: <C-unsigned-char>;
  sealed inline-only slot dropSiteStatus-value :: <C-unsigned-char>;
  sealed inline-only slot x-value        :: <C-Position>;
  sealed inline-only slot y-value        :: <C-Position>;
  pointer-type-name: <XmDropSiteEnterCallbackStruct*>;
  c-name: "struct _XmDropSiteEnterCallbackStruct";
end C-struct <XmDropSiteEnterCallbackStruct>;
define inline constant <XmDropSiteEnterCallback> = <XmDropSiteEnterCallbackStruct*>;

define C-struct <XmDropSiteLeaveCallbackStruct>
  sealed inline-only slot reason-value   :: <C-int>;
  sealed inline-only slot event-value    :: <XEvent*>;
  sealed inline-only slot timeStamp-value :: <C-Time>;
  pointer-type-name: <XmDropSiteLeaveCallbackStruct*>;
  c-name: "struct _XmDropSiteLeaveCallbackStruct";
end C-struct <XmDropSiteLeaveCallbackStruct>;
define inline constant <XmDropSiteLeaveCallback> = <XmDropSiteLeaveCallbackStruct*>;

define C-struct <XmDragMotionCallbackStruct>
  sealed inline-only slot reason-value   :: <C-int>;
  sealed inline-only slot event-value    :: <XEvent*>;
  sealed inline-only slot timeStamp-value :: <C-Time>;
  sealed inline-only slot operation-value :: <C-unsigned-char>;
  sealed inline-only slot operations-value :: <C-unsigned-char>;
  sealed inline-only slot dropSiteStatus-value :: <C-unsigned-char>;
  sealed inline-only slot x-value        :: <C-Position>;
  sealed inline-only slot y-value        :: <C-Position>;
  pointer-type-name: <XmDragMotionCallbackStruct*>;
  c-name: "struct _XmDragMotionCallbackStruct";
end C-struct <XmDragMotionCallbackStruct>;
define inline constant <XmDragMotionCallback> = <XmDragMotionCallbackStruct*>;

define C-struct <XmOperationChangedCallbackStruct>
  sealed inline-only slot reason-value   :: <C-int>;
  sealed inline-only slot event-value    :: <XEvent*>;
  sealed inline-only slot timeStamp-value :: <C-Time>;
  sealed inline-only slot operation-value :: <C-unsigned-char>;
  sealed inline-only slot operations-value :: <C-unsigned-char>;
  sealed inline-only slot dropSiteStatus-value :: <C-unsigned-char>;
  pointer-type-name: <XmOperationChangedCallbackStruct*>;
  c-name: "struct _XmOperationChangedCallbackStruct";
end C-struct <XmOperationChangedCallbackStruct>;
define inline constant <XmOperationChangedCallback> = <XmOperationChangedCallbackStruct*>;

define C-struct <XmDropStartCallbackStruct>
  sealed inline-only slot reason-value   :: <C-int>;
  sealed inline-only slot event-value    :: <XEvent*>;
  sealed inline-only slot timeStamp-value :: <C-Time>;
  sealed inline-only slot operation-value :: <C-unsigned-char>;
  sealed inline-only slot operations-value :: <C-unsigned-char>;
  sealed inline-only slot dropSiteStatus-value :: <C-unsigned-char>;
  sealed inline-only slot dropAction-value :: <C-unsigned-char>;
  sealed inline-only slot x-value        :: <C-Position>;
  sealed inline-only slot y-value        :: <C-Position>;
  sealed inline-only slot window-value   :: <C-Window>;
  sealed inline-only slot iccHandle-value :: <C-Atom>;
  pointer-type-name: <XmDropStartCallbackStruct*>;
  c-name: "struct _XmDropStartCallbackStruct";
end C-struct <XmDropStartCallbackStruct>;
define inline constant <XmDropStartCallback> = <XmDropStartCallbackStruct*>;

define C-struct <XmDropFinishCallbackStruct>
  sealed inline-only slot reason-value   :: <C-int>;
  sealed inline-only slot event-value    :: <XEvent*>;
  sealed inline-only slot timeStamp-value :: <C-Time>;
  sealed inline-only slot operation-value :: <C-unsigned-char>;
  sealed inline-only slot operations-value :: <C-unsigned-char>;
  sealed inline-only slot dropSiteStatus-value :: <C-unsigned-char>;
  sealed inline-only slot dropAction-value :: <C-unsigned-char>;
  sealed inline-only slot completionStatus-value :: <C-unsigned-char>;
  pointer-type-name: <XmDropFinishCallbackStruct*>;
  c-name: "struct _XmDropFinishCallbackStruct";
end C-struct <XmDropFinishCallbackStruct>;
define inline constant <XmDropFinishCallback> = <XmDropFinishCallbackStruct*>;

define C-struct <XmDragDropFinishCallbackStruct>
  sealed inline-only slot reason-value   :: <C-int>;
  sealed inline-only slot event-value    :: <XEvent*>;
  sealed inline-only slot timeStamp-value :: <C-Time>;
  pointer-type-name: <XmDragDropFinishCallbackStruct*>;
  c-name: "struct _XmDragDropFinishCallbackStruct";
end C-struct <XmDragDropFinishCallbackStruct>;
define inline constant <XmDragDropFinishCallback> = <XmDragDropFinishCallbackStruct*>;

define inline-only C-function XmDragStart
  parameter w          :: <Widget>;
  parameter event      :: <XEvent*>;
  parameter args       :: <ArgList>;
  parameter numArgs    :: <C-Cardinal>;
  result value :: <Widget>;
  c-name: "XmDragStart";
end;

define inline-only C-function XmDragCancel
  parameter dragContext :: <Widget>;
  c-name: "XmDragCancel";
end;

define inline-only C-function XmTargetsAreCompatible
  parameter dpy        :: <Display*>;
  output parameter exportTargets :: <Atom*>;
  parameter numExportTargets :: <C-Cardinal>;
  output parameter importTargets :: <Atom*>;
  parameter numImportTargets :: <C-Cardinal>;
  result value :: <X-Boolean>;
  c-name: "XmTargetsAreCompatible";
end;

define sealed domain make (singleton(<XmAnyICCCallbackStruct*>));
define sealed domain initialize (<XmAnyICCCallbackStruct*>);
define sealed domain make (singleton(<XmTopLevelEnterCallbackStruct*>));
define sealed domain initialize (<XmTopLevelEnterCallbackStruct*>);
define sealed domain make (singleton(<XmTopLevelLeaveCallbackStruct*>));
define sealed domain initialize (<XmTopLevelLeaveCallbackStruct*>);
define sealed domain make (singleton(<XmDropSiteEnterCallbackStruct*>));
define sealed domain initialize (<XmDropSiteEnterCallbackStruct*>);
define sealed domain make (singleton(<XmDropSiteLeaveCallbackStruct*>));
define sealed domain initialize (<XmDropSiteLeaveCallbackStruct*>);
define sealed domain make (singleton(<XmDragMotionCallbackStruct*>));
define sealed domain initialize (<XmDragMotionCallbackStruct*>);
define sealed domain make (singleton(<XmOperationChangedCallbackStruct*>));
define sealed domain initialize (<XmOperationChangedCallbackStruct*>);
define sealed domain make (singleton(<XmDropStartCallbackStruct*>));
define sealed domain initialize (<XmDropStartCallbackStruct*>);
define sealed domain make (singleton(<XmDropFinishCallbackStruct*>));
define sealed domain initialize (<XmDropFinishCallbackStruct*>);
define sealed domain make (singleton(<XmDragDropFinishCallbackStruct*>));
define sealed domain initialize (<XmDragDropFinishCallbackStruct*>);
