Module:    Motif
Copyright:    Original Code is Copyright (c) 1995-2004 Functional Objects, Inc.
              All rights reserved.
License:      Functional Objects Library Public License Version 1.0
Dual-license: GNU Lesser General Public License
Warranty:     Distributed WITHOUT WARRANTY OF ANY KIND

// This file is automatically generated from "XmStrDefs.h"; do not edit.

//	RCSfile: XmStrDefs.h,v 
//	Revision: 1.64 
//	Date: 94/06/06 07:52:42 
define C-variable %XmStrings :: /* const */ <C-string>
  c-name: "_XmStrings";
end;
define inline-only constant $XmS                        =
	pointer-value-address(%XmStrings(), index: 0);
define inline-only constant $XmCAccelerator             =
	pointer-value-address(%XmStrings(), index: 1);
define inline-only constant $XmCAcceleratorText         =
	pointer-value-address(%XmStrings(), index: 13);
define inline-only constant $XmCAdjustLast              =
	pointer-value-address(%XmStrings(), index: 29);
define inline-only constant $XmCAdjustMargin            =
	pointer-value-address(%XmStrings(), index: 40);
define inline-only constant $XmCAlignment               =
	pointer-value-address(%XmStrings(), index: 53);
define inline-only constant $XmCAllowOverlap            =
	pointer-value-address(%XmStrings(), index: 63);
define inline-only constant $XmCAnimationMask           =
	pointer-value-address(%XmStrings(), index: 76);
define inline-only constant $XmCAnimationPixmap         =
	pointer-value-address(%XmStrings(), index: 90);
define inline-only constant $XmCAnimationPixmapDepth    =
	pointer-value-address(%XmStrings(), index: 106);
define inline-only constant $XmCAnimationStyle          =
	pointer-value-address(%XmStrings(), index: 127);
define inline-only constant $XmCApplyLabelString        =
	pointer-value-address(%XmStrings(), index: 142);
define inline-only constant $XmCArmCallback             =
	pointer-value-address(%XmStrings(), index: 159);
define inline-only constant $XmCArmColor                =
	pointer-value-address(%XmStrings(), index: 171);
define inline-only constant $XmCArmPixmap               =
	pointer-value-address(%XmStrings(), index: 180);
define inline-only constant $XmCArrowDirection          =
	pointer-value-address(%XmStrings(), index: 190);
define inline-only constant $XmCAttachment              =
	pointer-value-address(%XmStrings(), index: 205);
define inline-only constant $XmCAudibleWarning          =
	pointer-value-address(%XmStrings(), index: 216);
define inline-only constant $XmCAutoShowCursorPosition  =
	pointer-value-address(%XmStrings(), index: 231);
define inline-only constant $XmCAutoUnmanage            =
	pointer-value-address(%XmStrings(), index: 254);
define inline-only constant $XmCAutomaticSelection      =
	pointer-value-address(%XmStrings(), index: 267);
define inline-only constant $XmCAvailability            =
	pointer-value-address(%XmStrings(), index: 286);
define inline-only constant $XmCBackgroundPixmap        =
	pointer-value-address(%XmStrings(), index: 299);
define inline-only constant $XmCBlendModel              =
	pointer-value-address(%XmStrings(), index: 316);
define inline-only constant $XmCBlinkRate               =
	pointer-value-address(%XmStrings(), index: 327);
define inline-only constant $XmCBottomShadowColor       =
	pointer-value-address(%XmStrings(), index: 337);
define inline-only constant $XmCBottomShadowPixmap      =
	pointer-value-address(%XmStrings(), index: 355);
define inline-only constant $XmCButtonAcceleratorText   =
	pointer-value-address(%XmStrings(), index: 374);
define inline-only constant $XmCButtonAccelerators      =
	pointer-value-address(%XmStrings(), index: 396);
define inline-only constant $XmCButtonCount             =
	pointer-value-address(%XmStrings(), index: 415);
define inline-only constant $XmCButtonFontList          =
	pointer-value-address(%XmStrings(), index: 427);
define inline-only constant $XmCButtonMnemonicCharSets  =
	pointer-value-address(%XmStrings(), index: 442);
define inline-only constant $XmCButtonMnemonics         =
	pointer-value-address(%XmStrings(), index: 465);
define inline-only constant $XmCButtonSet               =
	pointer-value-address(%XmStrings(), index: 481);
define inline-only constant $XmCButtonType              =
	pointer-value-address(%XmStrings(), index: 491);
define inline-only constant $XmCButtons                 =
	pointer-value-address(%XmStrings(), index: 502);
define inline-only constant $XmCCancelLabelString       =
	pointer-value-address(%XmStrings(), index: 510);
define inline-only constant $XmCChildHorizontalAlignment =
	pointer-value-address(%XmStrings(), index: 528);
define inline-only constant $XmCChildHorizontalSpacing  =
	pointer-value-address(%XmStrings(), index: 553);
define inline-only constant $XmCChildPlacement          =
	pointer-value-address(%XmStrings(), index: 576);
define inline-only constant $XmCChildType               =
	pointer-value-address(%XmStrings(), index: 591);
define inline-only constant $XmCChildVerticalAlignment  =
	pointer-value-address(%XmStrings(), index: 601);
define inline-only constant $XmCChildren                =
	pointer-value-address(%XmStrings(), index: 624);
define inline-only constant $XmCClientData              =
	pointer-value-address(%XmStrings(), index: 633);
define inline-only constant $XmCClipWindow              =
	pointer-value-address(%XmStrings(), index: 644);
define inline-only constant $XmCColumns                 =
	pointer-value-address(%XmStrings(), index: 655);
define inline-only constant $XmCCommandWindow           =
	pointer-value-address(%XmStrings(), index: 663);
define inline-only constant $XmCCommandWindowLocation   =
	pointer-value-address(%XmStrings(), index: 677);
define inline-only constant $XmCConvertProc             =
	pointer-value-address(%XmStrings(), index: 699);
define inline-only constant $XmCCursorBackground        =
	pointer-value-address(%XmStrings(), index: 711);
define inline-only constant $XmCCursorForeground        =
	pointer-value-address(%XmStrings(), index: 728);
define inline-only constant $XmCCursorPosition          =
	pointer-value-address(%XmStrings(), index: 745);
define inline-only constant $XmCCursorPositionVisible   =
	pointer-value-address(%XmStrings(), index: 760);
define inline-only constant $XmCDarkThreshold           =
	pointer-value-address(%XmStrings(), index: 782);
define inline-only constant $XmCDecimalPoints           =
	pointer-value-address(%XmStrings(), index: 796);
define inline-only constant $XmCDefaultButtonShadowThickness =
	pointer-value-address(%XmStrings(), index: 810);
define inline-only constant $XmCDefaultButtonType       =
	pointer-value-address(%XmStrings(), index: 839);
define inline-only constant $XmCDefaultCopyCursorIcon   =
	pointer-value-address(%XmStrings(), index: 857);
define inline-only constant $XmCDefaultFontList         =
	pointer-value-address(%XmStrings(), index: 879);
define inline-only constant $XmCDefaultInvalidCursorIcon =
	pointer-value-address(%XmStrings(), index: 895);
define inline-only constant $XmCDefaultLinkCursorIcon   =
	pointer-value-address(%XmStrings(), index: 920);
define inline-only constant $XmCDefaultMoveCursorIcon   =
	pointer-value-address(%XmStrings(), index: 942);
define inline-only constant $XmCDefaultNoneCursorIcon   =
	pointer-value-address(%XmStrings(), index: 964);
define inline-only constant $XmCDefaultPosition         =
	pointer-value-address(%XmStrings(), index: 986);
define inline-only constant $XmCDefaultSourceCursorIcon =
	pointer-value-address(%XmStrings(), index: 1002);
define inline-only constant $XmCDefaultValidCursorIcon  =
	pointer-value-address(%XmStrings(), index: 1026);
define inline-only constant $XmCDeleteResponse          =
	pointer-value-address(%XmStrings(), index: 1049);
define inline-only constant $XmCDesktopParent           =
	pointer-value-address(%XmStrings(), index: 1064);
define inline-only constant $XmCDialogStyle             =
	pointer-value-address(%XmStrings(), index: 1078);
define inline-only constant $XmCDialogTitle             =
	pointer-value-address(%XmStrings(), index: 1090);
define inline-only constant $XmCDialogType              =
	pointer-value-address(%XmStrings(), index: 1102);
define inline-only constant $XmCDirListItemCount        =
	pointer-value-address(%XmStrings(), index: 1113);
define inline-only constant $XmCDirListItems            =
	pointer-value-address(%XmStrings(), index: 1130);
define inline-only constant $XmCDirListLabelString      =
	pointer-value-address(%XmStrings(), index: 1143);
define inline-only constant $XmCDirMask                 =
	pointer-value-address(%XmStrings(), index: 1162);
define inline-only constant $XmCDirSearchProc           =
	pointer-value-address(%XmStrings(), index: 1170);
define inline-only constant $XmCDirSpec                 =
	pointer-value-address(%XmStrings(), index: 1184);
define inline-only constant $XmCDirectory               =
	pointer-value-address(%XmStrings(), index: 1192);
define inline-only constant $XmCDirectoryValid          =
	pointer-value-address(%XmStrings(), index: 1202);
define inline-only constant $XmCDisarmCallback          =
	pointer-value-address(%XmStrings(), index: 1217);
define inline-only constant $XmCDoubleClickInterval     =
	pointer-value-address(%XmStrings(), index: 1232);
define inline-only constant $XmCDragContextClass        =
	pointer-value-address(%XmStrings(), index: 1252);
define inline-only constant $XmCDragDropFinishCallback  =
	pointer-value-address(%XmStrings(), index: 1269);
define inline-only constant $XmCDragIconClass           =
	pointer-value-address(%XmStrings(), index: 1292);
define inline-only constant $XmCDragInitiatorProtocolStyle =
	pointer-value-address(%XmStrings(), index: 1306);
define inline-only constant $XmCDragMotionCallback      =
	pointer-value-address(%XmStrings(), index: 1333);
define inline-only constant $XmCDragOperations          =
	pointer-value-address(%XmStrings(), index: 1352);
define inline-only constant $XmCDragOverMode            =
	pointer-value-address(%XmStrings(), index: 1367);
define inline-only constant $XmCDragProc                =
	pointer-value-address(%XmStrings(), index: 1380);
define inline-only constant $XmCDragReceiverProtocolStyle =
	pointer-value-address(%XmStrings(), index: 1389);
define inline-only constant $XmCDropProc                =
	pointer-value-address(%XmStrings(), index: 1415);
define inline-only constant $XmCDropRectangles          =
	pointer-value-address(%XmStrings(), index: 1424);
define inline-only constant $XmCDropSiteActivity        =
	pointer-value-address(%XmStrings(), index: 1439);
define inline-only constant $XmCDropSiteEnterCallback   =
	pointer-value-address(%XmStrings(), index: 1456);
define inline-only constant $XmCDropSiteLeaveCallback   =
	pointer-value-address(%XmStrings(), index: 1478);
define inline-only constant $XmCDropSiteManagerClass    =
	pointer-value-address(%XmStrings(), index: 1500);
define inline-only constant $XmCDropSiteOperations      =
	pointer-value-address(%XmStrings(), index: 1521);
define inline-only constant $XmCDropSiteType            =
	pointer-value-address(%XmStrings(), index: 1540);
define inline-only constant $XmCDropStartCallback       =
	pointer-value-address(%XmStrings(), index: 1553);
define inline-only constant $XmCDropTransferClass       =
	pointer-value-address(%XmStrings(), index: 1571);
define inline-only constant $XmCDropTransfers           =
	pointer-value-address(%XmStrings(), index: 1589);
define inline-only constant $XmCEditable                =
	pointer-value-address(%XmStrings(), index: 1603);
define inline-only constant $XmCEntryBorder             =
	pointer-value-address(%XmStrings(), index: 1612);
define inline-only constant $XmCEntryClass              =
	pointer-value-address(%XmStrings(), index: 1624);
define inline-only constant $XmCExportTargets           =
	pointer-value-address(%XmStrings(), index: 1635);
define inline-only constant $XmCExposeCallback          =
	pointer-value-address(%XmStrings(), index: 1649);
define inline-only constant $XmCExtensionType           =
	pointer-value-address(%XmStrings(), index: 1664);
define inline-only constant $XmCFileListItemCount       =
	pointer-value-address(%XmStrings(), index: 1678);
define inline-only constant $XmCFileListItems           =
	pointer-value-address(%XmStrings(), index: 1696);
define inline-only constant $XmCFileListLabelString     =
	pointer-value-address(%XmStrings(), index: 1710);
define inline-only constant $XmCFileSearchProc          =
	pointer-value-address(%XmStrings(), index: 1730);
define inline-only constant $XmCFileTypeMask            =
	pointer-value-address(%XmStrings(), index: 1745);
define inline-only constant $XmCFillOnArm               =
	pointer-value-address(%XmStrings(), index: 1758);
define inline-only constant $XmCFillOnSelect            =
	pointer-value-address(%XmStrings(), index: 1768);
define inline-only constant $XmCFilterLabelString       =
	pointer-value-address(%XmStrings(), index: 1781);
define inline-only constant $XmCFontList                =
	pointer-value-address(%XmStrings(), index: 1799);
define inline-only constant $XmCForegroundThreshold     =
	pointer-value-address(%XmStrings(), index: 1808);
define inline-only constant $XmCHelpLabelString         =
	pointer-value-address(%XmStrings(), index: 1828);
define inline-only constant $XmCHighlightColor          =
	pointer-value-address(%XmStrings(), index: 1844);
define inline-only constant $XmCHighlightOnEnter        =
	pointer-value-address(%XmStrings(), index: 1859);
define inline-only constant $XmCHighlightPixmap         =
	pointer-value-address(%XmStrings(), index: 1876);
define inline-only constant $XmCHighlightThickness      =
	pointer-value-address(%XmStrings(), index: 1892);
define inline-only constant $XmCHorizontalFontUnit      =
	pointer-value-address(%XmStrings(), index: 1911);
define inline-only constant $XmCHorizontalScrollBar     =
	pointer-value-address(%XmStrings(), index: 1930);
define inline-only constant $XmCHot                     =
	pointer-value-address(%XmStrings(), index: 1950);
define inline-only constant $XmCICCHandle               =
	pointer-value-address(%XmStrings(), index: 1954);
define inline-only constant $XmCImportTargets           =
	pointer-value-address(%XmStrings(), index: 1964);
define inline-only constant $XmCIncrement               =
	pointer-value-address(%XmStrings(), index: 1978);
define inline-only constant $XmCIncremental             =
	pointer-value-address(%XmStrings(), index: 1988);
define inline-only constant $XmCIndicatorOn             =
	pointer-value-address(%XmStrings(), index: 2000);
define inline-only constant $XmCIndicatorSize           =
	pointer-value-address(%XmStrings(), index: 2012);
define inline-only constant $XmCIndicatorType           =
	pointer-value-address(%XmStrings(), index: 2026);
define inline-only constant $XmCInitialDelay            =
	pointer-value-address(%XmStrings(), index: 2040);
define inline-only constant $XmCInitialFocus            =
	pointer-value-address(%XmStrings(), index: 2053);
define inline-only constant $XmCInputCreate             =
	pointer-value-address(%XmStrings(), index: 2066);
define inline-only constant $XmCInputMethod             =
	pointer-value-address(%XmStrings(), index: 2078);
define inline-only constant $XmCInvalidCursorForeground =
	pointer-value-address(%XmStrings(), index: 2090);
define inline-only constant $XmCIsAligned               =
	pointer-value-address(%XmStrings(), index: 2114);
define inline-only constant $XmCIsHomogeneous           =
	pointer-value-address(%XmStrings(), index: 2124);
define inline-only constant $XmCItemCount               =
	pointer-value-address(%XmStrings(), index: 2138);
define inline-only constant $XmCItems                   =
	pointer-value-address(%XmStrings(), index: 2148);
define inline-only constant $XmCKeyboardFocusPolicy     =
	pointer-value-address(%XmStrings(), index: 2154);
define inline-only constant $XmCLabelFontList           =
	pointer-value-address(%XmStrings(), index: 2174);
define inline-only constant $XmCLabelInsensitivePixmap  =
	pointer-value-address(%XmStrings(), index: 2188);
define inline-only constant $XmCLabelPixmap             =
	pointer-value-address(%XmStrings(), index: 2211);
define inline-only constant $XmCLabelString             =
	pointer-value-address(%XmStrings(), index: 2223);
define inline-only constant $XmCLabelType               =
	pointer-value-address(%XmStrings(), index: 2235);
define inline-only constant $XmCLightThreshold          =
	pointer-value-address(%XmStrings(), index: 2245);
define inline-only constant $XmCListLabelString         =
	pointer-value-address(%XmStrings(), index: 2260);
define inline-only constant $XmCListMarginHeight        =
	pointer-value-address(%XmStrings(), index: 2276);
define inline-only constant $XmCListMarginWidth         =
	pointer-value-address(%XmStrings(), index: 2293);
define inline-only constant $XmCListSizePolicy          =
	pointer-value-address(%XmStrings(), index: 2309);
define inline-only constant $XmCListSpacing             =
	pointer-value-address(%XmStrings(), index: 2324);
define inline-only constant $XmCListUpdated             =
	pointer-value-address(%XmStrings(), index: 2336);
define inline-only constant $XmCLogicalParent           =
	pointer-value-address(%XmStrings(), index: 2348);
define inline-only constant $XmCMainWindowMarginHeight  =
	pointer-value-address(%XmStrings(), index: 2362);
define inline-only constant $XmCMainWindowMarginWidth   =
	pointer-value-address(%XmStrings(), index: 2385);
define inline-only constant $XmCMappingDelay            =
	pointer-value-address(%XmStrings(), index: 2407);
define inline-only constant $XmCMarginBottom            =
	pointer-value-address(%XmStrings(), index: 2420);
define inline-only constant $XmCMarginHeight            =
	pointer-value-address(%XmStrings(), index: 2433);
define inline-only constant $XmCMarginLeft              =
	pointer-value-address(%XmStrings(), index: 2446);
define inline-only constant $XmCMarginRight             =
	pointer-value-address(%XmStrings(), index: 2457);
define inline-only constant $XmCMarginTop               =
	pointer-value-address(%XmStrings(), index: 2469);
define inline-only constant $XmCMarginWidth             =
	pointer-value-address(%XmStrings(), index: 2479);
define inline-only constant $XmCMask                    =
	pointer-value-address(%XmStrings(), index: 2491);
define inline-only constant $XmCMaxItems                =
	pointer-value-address(%XmStrings(), index: 2496);
define inline-only constant $XmCMaxLength               =
	pointer-value-address(%XmStrings(), index: 2505);
define inline-only constant $XmCMaxValue                =
	pointer-value-address(%XmStrings(), index: 2515);
define inline-only constant $XmCMaximum                 =
	pointer-value-address(%XmStrings(), index: 2524);
define inline-only constant $XmCMenuBar                 =
	pointer-value-address(%XmStrings(), index: 2532);
define inline-only constant $XmCMenuPost                =
	pointer-value-address(%XmStrings(), index: 2540);
define inline-only constant $XmCMenuWidget              =
	pointer-value-address(%XmStrings(), index: 2549);
define inline-only constant $XmCMessageProc             =
	pointer-value-address(%XmStrings(), index: 2560);
define inline-only constant $XmCMessageWindow           =
	pointer-value-address(%XmStrings(), index: 2572);
define inline-only constant $XmCMinimizeButtons         =
	pointer-value-address(%XmStrings(), index: 2586);
define inline-only constant $XmCMinimum                 =
	pointer-value-address(%XmStrings(), index: 2602);
define inline-only constant $XmCMnemonic                =
	pointer-value-address(%XmStrings(), index: 2610);
define inline-only constant $XmCMnemonicCharSet         =
	pointer-value-address(%XmStrings(), index: 2619);
define inline-only constant $XmCMoveOpaque              =
	pointer-value-address(%XmStrings(), index: 2635);
define inline-only constant $XmCMultiClick              =
	pointer-value-address(%XmStrings(), index: 2646);
define inline-only constant $XmCMustMatch               =
	pointer-value-address(%XmStrings(), index: 2657);
define inline-only constant $XmCMwmDecorations          =
	pointer-value-address(%XmStrings(), index: 2667);
define inline-only constant $XmCMwmFunctions            =
	pointer-value-address(%XmStrings(), index: 2682);
define inline-only constant $XmCMwmInputMode            =
	pointer-value-address(%XmStrings(), index: 2695);
define inline-only constant $XmCMwmMenu                 =
	pointer-value-address(%XmStrings(), index: 2708);
define inline-only constant $XmCMwmMessages             =
	pointer-value-address(%XmStrings(), index: 2716);
define inline-only constant $XmCNavigationType          =
	pointer-value-address(%XmStrings(), index: 2728);
define inline-only constant $XmCNeedsMotion             =
	pointer-value-address(%XmStrings(), index: 2743);
define inline-only constant $XmCNoMatchString           =
	pointer-value-address(%XmStrings(), index: 2755);
define inline-only constant $XmCNoResize                =
	pointer-value-address(%XmStrings(), index: 2769);
define inline-only constant $XmCNoneCursorForeground    =
	pointer-value-address(%XmStrings(), index: 2778);
define inline-only constant $XmCNotifyProc              =
	pointer-value-address(%XmStrings(), index: 2799);
define inline-only constant $XmCNumChildren             =
	pointer-value-address(%XmStrings(), index: 2810);
define inline-only constant $XmCNumColumns              =
	pointer-value-address(%XmStrings(), index: 2822);
define inline-only constant $XmCNumDropRectangles       =
	pointer-value-address(%XmStrings(), index: 2833);
define inline-only constant $XmCNumDropTransfers        =
	pointer-value-address(%XmStrings(), index: 2851);
define inline-only constant $XmCNumExportTargets        =
	pointer-value-address(%XmStrings(), index: 2868);
define inline-only constant $XmCNumImportTargets        =
	pointer-value-address(%XmStrings(), index: 2885);
define inline-only constant $XmCOffset                  =
	pointer-value-address(%XmStrings(), index: 2902);
define inline-only constant $XmCOkLabelString           =
	pointer-value-address(%XmStrings(), index: 2909);
define inline-only constant $XmCOperationChangedCallback =
	pointer-value-address(%XmStrings(), index: 2923);
define inline-only constant $XmCOperationCursorIcon     =
	pointer-value-address(%XmStrings(), index: 2948);
define inline-only constant $XmCOptionLabel             =
	pointer-value-address(%XmStrings(), index: 2968);
define inline-only constant $XmCOptionMnemonic          =
	pointer-value-address(%XmStrings(), index: 2980);
define inline-only constant $XmCOutputCreate            =
	pointer-value-address(%XmStrings(), index: 2995);
define inline-only constant $XmCPacking                 =
	pointer-value-address(%XmStrings(), index: 3008);
define inline-only constant $XmCPageIncrement           =
	pointer-value-address(%XmStrings(), index: 3016);
define inline-only constant $XmCPaneMaximum             =
	pointer-value-address(%XmStrings(), index: 3030);
define inline-only constant $XmCPaneMinimum             =
	pointer-value-address(%XmStrings(), index: 3042);
define inline-only constant $XmCPattern                 =
	pointer-value-address(%XmStrings(), index: 3054);
define inline-only constant $XmCPendingDelete           =
	pointer-value-address(%XmStrings(), index: 3062);
define inline-only constant $XmCPopupEnabled            =
	pointer-value-address(%XmStrings(), index: 3076);
define inline-only constant $XmCPositionIndex           =
	pointer-value-address(%XmStrings(), index: 3089);
define inline-only constant $XmCPostFromButton          =
	pointer-value-address(%XmStrings(), index: 3103);
define inline-only constant $XmCPostFromCount           =
	pointer-value-address(%XmStrings(), index: 3118);
define inline-only constant $XmCPostFromList            =
	pointer-value-address(%XmStrings(), index: 3132);
define inline-only constant $XmCPreeditType             =
	pointer-value-address(%XmStrings(), index: 3145);
define inline-only constant $XmCProcessingDirection     =
	pointer-value-address(%XmStrings(), index: 3157);
define inline-only constant $XmCPromptString            =
	pointer-value-address(%XmStrings(), index: 3177);
define inline-only constant $XmCProtocolCallback        =
	pointer-value-address(%XmStrings(), index: 3190);
define inline-only constant $XmCPushButtonEnabled       =
	pointer-value-address(%XmStrings(), index: 3207);
define inline-only constant $XmCQualifySearchDataProc   =
	pointer-value-address(%XmStrings(), index: 3225);
define inline-only constant $XmCRadioAlwaysOne          =
	pointer-value-address(%XmStrings(), index: 3247);
define inline-only constant $XmCRadioBehavior           =
	pointer-value-address(%XmStrings(), index: 3262);
define inline-only constant $XmCRecomputeSize           =
	pointer-value-address(%XmStrings(), index: 3276);
define inline-only constant $XmCRectangles              =
	pointer-value-address(%XmStrings(), index: 3290);
define inline-only constant $XmCRepeatDelay             =
	pointer-value-address(%XmStrings(), index: 3301);
define inline-only constant $XmCResizeCallback          =
	pointer-value-address(%XmStrings(), index: 3313);
define inline-only constant $XmCResizeHeight            =
	pointer-value-address(%XmStrings(), index: 3328);
define inline-only constant $XmCResizePolicy            =
	pointer-value-address(%XmStrings(), index: 3341);
define inline-only constant $XmCResizeWidth             =
	pointer-value-address(%XmStrings(), index: 3354);
define inline-only constant $XmCRowColumnType           =
	pointer-value-address(%XmStrings(), index: 3366);
define inline-only constant $XmCRows                    =
	pointer-value-address(%XmStrings(), index: 3380);
define inline-only constant $XmCRubberPositioning       =
	pointer-value-address(%XmStrings(), index: 3385);
define inline-only constant $XmCSashHeight              =
	pointer-value-address(%XmStrings(), index: 3403);
define inline-only constant $XmCSashIndent              =
	pointer-value-address(%XmStrings(), index: 3414);
define inline-only constant $XmCSashWidth               =
	pointer-value-address(%XmStrings(), index: 3425);
define inline-only constant $XmCScaleHeight             =
	pointer-value-address(%XmStrings(), index: 3435);
define inline-only constant $XmCScaleMultiple           =
	pointer-value-address(%XmStrings(), index: 3447);
define inline-only constant $XmCScaleWidth              =
	pointer-value-address(%XmStrings(), index: 3461);
define inline-only constant $XmCScroll                  =
	pointer-value-address(%XmStrings(), index: 3472);
define inline-only constant $XmCScrollBarDisplayPolicy  =
	pointer-value-address(%XmStrings(), index: 3479);
define inline-only constant $XmCScrollBarPlacement      =
	pointer-value-address(%XmStrings(), index: 3502);
define inline-only constant $XmCScrollSide              =
	pointer-value-address(%XmStrings(), index: 3521);
define inline-only constant $XmCScrolledWindowMarginHeight =
	pointer-value-address(%XmStrings(), index: 3532);
define inline-only constant $XmCScrolledWindowMarginWidth =
	pointer-value-address(%XmStrings(), index: 3559);
define inline-only constant $XmCScrollingPolicy         =
	pointer-value-address(%XmStrings(), index: 3585);
define inline-only constant $XmCSelectColor             =
	pointer-value-address(%XmStrings(), index: 3601);
define inline-only constant $XmCSelectInsensitivePixmap =
	pointer-value-address(%XmStrings(), index: 3613);
define inline-only constant $XmCSelectPixmap            =
	pointer-value-address(%XmStrings(), index: 3637);
define inline-only constant $XmCSelectThreshold         =
	pointer-value-address(%XmStrings(), index: 3650);
define inline-only constant $XmCSelectedItemCount       =
	pointer-value-address(%XmStrings(), index: 3666);
define inline-only constant $XmCSelectedItems           =
	pointer-value-address(%XmStrings(), index: 3684);
define inline-only constant $XmCSelectionArrayCount     =
	pointer-value-address(%XmStrings(), index: 3698);
define inline-only constant $XmCSelectionLabelString    =
	pointer-value-address(%XmStrings(), index: 3718);
define inline-only constant $XmCSelectionPolicy         =
	pointer-value-address(%XmStrings(), index: 3739);
define inline-only constant $XmCSeparatorOn             =
	pointer-value-address(%XmStrings(), index: 3755);
define inline-only constant $XmCSeparatorType           =
	pointer-value-address(%XmStrings(), index: 3767);
define inline-only constant $XmCSet                     =
	pointer-value-address(%XmStrings(), index: 3781);
define inline-only constant $XmCShadowThickness         =
	pointer-value-address(%XmStrings(), index: 3785);
define inline-only constant $XmCShadowType              =
	pointer-value-address(%XmStrings(), index: 3801);
define inline-only constant $XmCShellUnitType           =
	pointer-value-address(%XmStrings(), index: 3812);
define inline-only constant $XmCShowArrows              =
	pointer-value-address(%XmStrings(), index: 3826);
define inline-only constant $XmCShowAsDefault           =
	pointer-value-address(%XmStrings(), index: 3837);
define inline-only constant $XmCShowSeparator           =
	pointer-value-address(%XmStrings(), index: 3851);
define inline-only constant $XmCShowValue               =
	pointer-value-address(%XmStrings(), index: 3865);
define inline-only constant $XmCSimpleCheckBox          =
	pointer-value-address(%XmStrings(), index: 3875);
define inline-only constant $XmCSimpleMenuBar           =
	pointer-value-address(%XmStrings(), index: 3890);
define inline-only constant $XmCSimpleOptionMenu        =
	pointer-value-address(%XmStrings(), index: 3904);
define inline-only constant $XmCSimplePopupMenu         =
	pointer-value-address(%XmStrings(), index: 3921);
define inline-only constant $XmCSimplePulldownMenu      =
	pointer-value-address(%XmStrings(), index: 3937);
define inline-only constant $XmCSimpleRadioBox          =
	pointer-value-address(%XmStrings(), index: 3956);
define inline-only constant $XmCSizePolicy              =
	pointer-value-address(%XmStrings(), index: 3971);
define inline-only constant $XmCSliderSize              =
	pointer-value-address(%XmStrings(), index: 3982);
define inline-only constant $XmCSource                  =
	pointer-value-address(%XmStrings(), index: 3993);
define inline-only constant $XmCSourceCursorIcon        =
	pointer-value-address(%XmStrings(), index: 4000);
define inline-only constant $XmCSourceIsExternal        =
	pointer-value-address(%XmStrings(), index: 4017);
define inline-only constant $XmCSourcePixmapIcon        =
	pointer-value-address(%XmStrings(), index: 4034);
define inline-only constant $XmCSourceWidget            =
	pointer-value-address(%XmStrings(), index: 4051);
define inline-only constant $XmCSourceWindow            =
	pointer-value-address(%XmStrings(), index: 4064);
define inline-only constant $XmCSpacing                 =
	pointer-value-address(%XmStrings(), index: 4077);
define inline-only constant $XmCStartTime               =
	pointer-value-address(%XmStrings(), index: 4085);
define inline-only constant $XmCStateCursorIcon         =
	pointer-value-address(%XmStrings(), index: 4095);
define inline-only constant $XmCStringDirection         =
	pointer-value-address(%XmStrings(), index: 4111);
define inline-only constant $XmCTearOffModel            =
	pointer-value-address(%XmStrings(), index: 4127);
define inline-only constant $XmCTextFontList            =
	pointer-value-address(%XmStrings(), index: 4140);
define inline-only constant $XmCTextString              =
	pointer-value-address(%XmStrings(), index: 4153);
define inline-only constant $XmCTextValue               =
	pointer-value-address(%XmStrings(), index: 4164);
define inline-only constant $XmCTitleString             =
	pointer-value-address(%XmStrings(), index: 4174);
define inline-only constant $XmCTopCharacter            =
	pointer-value-address(%XmStrings(), index: 4186);
define inline-only constant $XmCTopItemPosition         =
	pointer-value-address(%XmStrings(), index: 4199);
define inline-only constant $XmCTopLevelEnterCallback   =
	pointer-value-address(%XmStrings(), index: 4215);
define inline-only constant $XmCTopLevelLeaveCallback   =
	pointer-value-address(%XmStrings(), index: 4237);
define inline-only constant $XmCTopShadowColor          =
	pointer-value-address(%XmStrings(), index: 4259);
define inline-only constant $XmCTopShadowPixmap         =
	pointer-value-address(%XmStrings(), index: 4274);
define inline-only constant $XmCTransferProc            =
	pointer-value-address(%XmStrings(), index: 4290);
define inline-only constant $XmCTransferStatus          =
	pointer-value-address(%XmStrings(), index: 4303);
define inline-only constant $XmCTraversalOn             =
	pointer-value-address(%XmStrings(), index: 4318);
define inline-only constant $XmCTraversalType           =
	pointer-value-address(%XmStrings(), index: 4330);
define inline-only constant $XmCTreeUpdateProc          =
	pointer-value-address(%XmStrings(), index: 4344);
define inline-only constant $XmCTroughColor             =
	pointer-value-address(%XmStrings(), index: 4359);
define inline-only constant $XmCUnitType                =
	pointer-value-address(%XmStrings(), index: 4371);
define inline-only constant $XmCUnpostBehavior          =
	pointer-value-address(%XmStrings(), index: 4380);
define inline-only constant $XmCUnselectPixmap          =
	pointer-value-address(%XmStrings(), index: 4395);
define inline-only constant $XmCUpdateSliderSize        =
	pointer-value-address(%XmStrings(), index: 4410);
define inline-only constant $XmCUseAsyncGeometry        =
	pointer-value-address(%XmStrings(), index: 4427);
define inline-only constant $XmCUserData                =
	pointer-value-address(%XmStrings(), index: 4444);
define inline-only constant $XmCValidCursorForeground   =
	pointer-value-address(%XmStrings(), index: 4453);
define inline-only constant $XmCValueChangedCallback    =
	pointer-value-address(%XmStrings(), index: 4475);
define inline-only constant $XmCValueWcs                =
	pointer-value-address(%XmStrings(), index: 4496);
define inline-only constant $XmCVerifyBell              =
	pointer-value-address(%XmStrings(), index: 4505);
define inline-only constant $XmCVerticalAlignment       =
	pointer-value-address(%XmStrings(), index: 4516);
define inline-only constant $XmCVerticalFontUnit        =
	pointer-value-address(%XmStrings(), index: 4534);
define inline-only constant $XmCVerticalScrollBar       =
	pointer-value-address(%XmStrings(), index: 4551);
define inline-only constant $XmCVisibleItemCount        =
	pointer-value-address(%XmStrings(), index: 4569);
define inline-only constant $XmCVisibleWhenOff          =
	pointer-value-address(%XmStrings(), index: 4586);
define inline-only constant $XmCVisualPolicy            =
	pointer-value-address(%XmStrings(), index: 4601);
define inline-only constant $XmCWhichButton             =
	pointer-value-address(%XmStrings(), index: 4614);
define inline-only constant $XmCWordWrap                =
	pointer-value-address(%XmStrings(), index: 4626);
define inline-only constant $XmCWorkWindow              =
	pointer-value-address(%XmStrings(), index: 4635);
define inline-only constant $XmCXmString                =
	pointer-value-address(%XmStrings(), index: 4646);
define inline-only constant $XmNaccelerator             =
	pointer-value-address(%XmStrings(), index: 4655);
define inline-only constant $XmNacceleratorText         =
	pointer-value-address(%XmStrings(), index: 4667);
define inline-only constant $XmNactivateCallback        =
	pointer-value-address(%XmStrings(), index: 4683);
define inline-only constant $XmNadjustLast              =
	pointer-value-address(%XmStrings(), index: 4700);
define inline-only constant $XmNadjustMargin            =
	pointer-value-address(%XmStrings(), index: 4711);
define inline-only constant $XmNalignment               =
	pointer-value-address(%XmStrings(), index: 4724);
define inline-only constant $XmNallowOverlap            =
	pointer-value-address(%XmStrings(), index: 4734);
define inline-only constant $XmNallowResize             =
	pointer-value-address(%XmStrings(), index: 4747);
define inline-only constant $XmNanimationMask           =
	pointer-value-address(%XmStrings(), index: 4759);
define inline-only constant $XmNanimationPixmap         =
	pointer-value-address(%XmStrings(), index: 4773);
define inline-only constant $XmNanimationPixmapDepth    =
	pointer-value-address(%XmStrings(), index: 4789);
define inline-only constant $XmNanimationStyle          =
	pointer-value-address(%XmStrings(), index: 4810);
define inline-only constant $XmNapplyCallback           =
	pointer-value-address(%XmStrings(), index: 4825);
define inline-only constant $XmNapplyLabelString        =
	pointer-value-address(%XmStrings(), index: 4839);
define inline-only constant $XmNarmCallback             =
	pointer-value-address(%XmStrings(), index: 4856);
define inline-only constant $XmNarmColor                =
	pointer-value-address(%XmStrings(), index: 4868);
define inline-only constant $XmNarmPixmap               =
	pointer-value-address(%XmStrings(), index: 4877);
define inline-only constant $XmNarrowDirection          =
	pointer-value-address(%XmStrings(), index: 4887);
define inline-only constant $XmNattachment              =
	pointer-value-address(%XmStrings(), index: 4902);
define inline-only constant $XmNaudibleWarning          =
	pointer-value-address(%XmStrings(), index: 4913);
define inline-only constant $XmNautoShowCursorPosition  =
	pointer-value-address(%XmStrings(), index: 4928);
define inline-only constant $XmNautoUnmanage            =
	pointer-value-address(%XmStrings(), index: 4951);
define inline-only constant $XmNautomaticSelection      =
	pointer-value-address(%XmStrings(), index: 4964);
define inline-only constant $XmNavailability            =
	pointer-value-address(%XmStrings(), index: 4983);
define inline-only constant $XmNblendModel              =
	pointer-value-address(%XmStrings(), index: 4996);
define inline-only constant $XmNblinkRate               =
	pointer-value-address(%XmStrings(), index: 5007);
define inline-only constant $XmNbottomAttachment        =
	pointer-value-address(%XmStrings(), index: 5017);
define inline-only constant $XmNbottomOffset            =
	pointer-value-address(%XmStrings(), index: 5034);
define inline-only constant $XmNbottomPosition          =
	pointer-value-address(%XmStrings(), index: 5047);
define inline-only constant $XmNbottomShadowColor       =
	pointer-value-address(%XmStrings(), index: 5062);
define inline-only constant $XmNbottomShadowPixmap      =
	pointer-value-address(%XmStrings(), index: 5080);
define inline-only constant $XmNbottomWidget            =
	pointer-value-address(%XmStrings(), index: 5099);
define inline-only constant $XmNbrowseSelectionCallback =
	pointer-value-address(%XmStrings(), index: 5112);
define inline-only constant $XmNbuttonAcceleratorText   =
	pointer-value-address(%XmStrings(), index: 5136);
define inline-only constant $XmNbuttonAccelerators      =
	pointer-value-address(%XmStrings(), index: 5158);
define inline-only constant $XmNbuttonCount             =
	pointer-value-address(%XmStrings(), index: 5177);
define inline-only constant $XmNbuttonFontList          =
	pointer-value-address(%XmStrings(), index: 5189);
define inline-only constant $XmNbuttonMnemonicCharSets  =
	pointer-value-address(%XmStrings(), index: 5204);
define inline-only constant $XmNbuttonMnemonics         =
	pointer-value-address(%XmStrings(), index: 5227);
define inline-only constant $XmNbuttonSet               =
	pointer-value-address(%XmStrings(), index: 5243);
define inline-only constant $XmNbuttonType              =
	pointer-value-address(%XmStrings(), index: 5253);
define inline-only constant $XmNbuttons                 =
	pointer-value-address(%XmStrings(), index: 5264);
define inline-only constant $XmNcancelButton            =
	pointer-value-address(%XmStrings(), index: 5272);
define inline-only constant $XmNcancelCallback          =
	pointer-value-address(%XmStrings(), index: 5285);
define inline-only constant $XmNcancelLabelString       =
	pointer-value-address(%XmStrings(), index: 5300);
define inline-only constant $XmNcascadePixmap           =
	pointer-value-address(%XmStrings(), index: 5318);
define inline-only constant $XmNcascadingCallback       =
	pointer-value-address(%XmStrings(), index: 5332);
define inline-only constant $XmNchildHorizontalAlignment =
	pointer-value-address(%XmStrings(), index: 5350);
define inline-only constant $XmNchildHorizontalSpacing  =
	pointer-value-address(%XmStrings(), index: 5375);
define inline-only constant $XmNchildPlacement          =
	pointer-value-address(%XmStrings(), index: 5398);
define inline-only constant $XmNchildPosition           =
	pointer-value-address(%XmStrings(), index: 5413);
define inline-only constant $XmNchildType               =
	pointer-value-address(%XmStrings(), index: 5427);
define inline-only constant $XmNchildVerticalAlignment  =
	pointer-value-address(%XmStrings(), index: 5437);
define inline-only constant $XmNclientData              =
	pointer-value-address(%XmStrings(), index: 5460);
define inline-only constant $XmNclipWindow              =
	pointer-value-address(%XmStrings(), index: 5471);
define inline-only constant $XmNcolumns                 =
	pointer-value-address(%XmStrings(), index: 5482);
define inline-only constant $XmNcommand                 =
	pointer-value-address(%XmStrings(), index: 5490);
define inline-only constant $XmNcommandChangedCallback  =
	pointer-value-address(%XmStrings(), index: 5498);
define inline-only constant $XmNcommandEnteredCallback  =
	pointer-value-address(%XmStrings(), index: 5521);
define inline-only constant $XmNcommandWindow           =
	pointer-value-address(%XmStrings(), index: 5544);
define inline-only constant $XmNcommandWindowLocation   =
	pointer-value-address(%XmStrings(), index: 5558);
define inline-only constant $XmNconvertProc             =
	pointer-value-address(%XmStrings(), index: 5580);
define inline-only constant $XmNcursorBackground        =
	pointer-value-address(%XmStrings(), index: 5592);
define inline-only constant $XmNcursorForeground        =
	pointer-value-address(%XmStrings(), index: 5609);
define inline-only constant $XmNcursorPosition          =
	pointer-value-address(%XmStrings(), index: 5626);
define inline-only constant $XmNcursorPositionVisible   =
	pointer-value-address(%XmStrings(), index: 5641);
define inline-only constant $XmNdarkThreshold           =
	pointer-value-address(%XmStrings(), index: 5663);
define inline-only constant $XmNdecimalPoints           =
	pointer-value-address(%XmStrings(), index: 5677);
define inline-only constant $XmNdecrementCallback       =
	pointer-value-address(%XmStrings(), index: 5691);
define inline-only constant $XmNdefaultActionCallback   =
	pointer-value-address(%XmStrings(), index: 5709);
define inline-only constant $XmNdefaultButton           =
	pointer-value-address(%XmStrings(), index: 5731);
define inline-only constant $XmNdefaultButtonShadowThickness =
	pointer-value-address(%XmStrings(), index: 5745);
define inline-only constant $XmNdefaultButtonType       =
	pointer-value-address(%XmStrings(), index: 5774);
define inline-only constant $XmNdefaultCopyCursorIcon   =
	pointer-value-address(%XmStrings(), index: 5792);
define inline-only constant $XmNdefaultFontList         =
	pointer-value-address(%XmStrings(), index: 5814);
define inline-only constant $XmNdefaultInvalidCursorIcon =
	pointer-value-address(%XmStrings(), index: 5830);
define inline-only constant $XmNdefaultLinkCursorIcon   =
	pointer-value-address(%XmStrings(), index: 5855);
define inline-only constant $XmNdefaultMoveCursorIcon   =
	pointer-value-address(%XmStrings(), index: 5877);
define inline-only constant $XmNdefaultNoneCursorIcon   =
	pointer-value-address(%XmStrings(), index: 5899);
define inline-only constant $XmNdefaultPosition         =
	pointer-value-address(%XmStrings(), index: 5921);
define inline-only constant $XmNdefaultSourceCursorIcon =
	pointer-value-address(%XmStrings(), index: 5937);
define inline-only constant $XmNdefaultValidCursorIcon  =
	pointer-value-address(%XmStrings(), index: 5961);
define inline-only constant $XmNdeleteResponse          =
	pointer-value-address(%XmStrings(), index: 5984);
define inline-only constant $XmNdesktopParent           =
	pointer-value-address(%XmStrings(), index: 5999);
define inline-only constant $XmNdialogStyle             =
	pointer-value-address(%XmStrings(), index: 6013);
define inline-only constant $XmNdialogTitle             =
	pointer-value-address(%XmStrings(), index: 6025);
define inline-only constant $XmNdialogType              =
	pointer-value-address(%XmStrings(), index: 6037);
define inline-only constant $XmNdirListItemCount        =
	pointer-value-address(%XmStrings(), index: 6048);
define inline-only constant $XmNdirListItems            =
	pointer-value-address(%XmStrings(), index: 6065);
define inline-only constant $XmNdirListLabelString      =
	pointer-value-address(%XmStrings(), index: 6078);
define inline-only constant $XmNdirMask                 =
	pointer-value-address(%XmStrings(), index: 6097);
define inline-only constant $XmNdirSearchProc           =
	pointer-value-address(%XmStrings(), index: 6105);
define inline-only constant $XmNdirSpec                 =
	pointer-value-address(%XmStrings(), index: 6119);
define inline-only constant $XmNdirectory               =
	pointer-value-address(%XmStrings(), index: 6127);
define inline-only constant $XmNdirectoryValid          =
	pointer-value-address(%XmStrings(), index: 6137);
define inline-only constant $XmNdisarmCallback          =
	pointer-value-address(%XmStrings(), index: 6152);
define inline-only constant $XmNdoubleClickInterval     =
	pointer-value-address(%XmStrings(), index: 6167);
define inline-only constant $XmNdragCallback            =
	pointer-value-address(%XmStrings(), index: 6187);
define inline-only constant $XmNdragContextClass        =
	pointer-value-address(%XmStrings(), index: 6200);
define inline-only constant $XmNdragDropFinishCallback  =
	pointer-value-address(%XmStrings(), index: 6217);
define inline-only constant $XmNdragIconClass           =
	pointer-value-address(%XmStrings(), index: 6240);
define inline-only constant $XmNdragInitiatorProtocolStyle =
	pointer-value-address(%XmStrings(), index: 6254);
define inline-only constant $XmNdragMotionCallback      =
	pointer-value-address(%XmStrings(), index: 6281);
define inline-only constant $XmNdragOperations          =
	pointer-value-address(%XmStrings(), index: 6300);
define inline-only constant $XmNdragOverMode            =
	pointer-value-address(%XmStrings(), index: 6315);
define inline-only constant $XmNdragProc                =
	pointer-value-address(%XmStrings(), index: 6328);
define inline-only constant $XmNdragReceiverProtocolStyle =
	pointer-value-address(%XmStrings(), index: 6337);
define inline-only constant $XmNdropFinishCallback      =
	pointer-value-address(%XmStrings(), index: 6363);
define inline-only constant $XmNdropProc                =
	pointer-value-address(%XmStrings(), index: 6382);
define inline-only constant $XmNdropRectangles          =
	pointer-value-address(%XmStrings(), index: 6391);
define inline-only constant $XmNdropSiteActivity        =
	pointer-value-address(%XmStrings(), index: 6406);
define inline-only constant $XmNdropSiteEnterCallback   =
	pointer-value-address(%XmStrings(), index: 6423);
define inline-only constant $XmNdropSiteLeaveCallback   =
	pointer-value-address(%XmStrings(), index: 6445);
define inline-only constant $XmNdropSiteManagerClass    =
	pointer-value-address(%XmStrings(), index: 6467);
define inline-only constant $XmNdropSiteOperations      =
	pointer-value-address(%XmStrings(), index: 6488);
define inline-only constant $XmNdropSiteType            =
	pointer-value-address(%XmStrings(), index: 6507);
define inline-only constant $XmNdropStartCallback       =
	pointer-value-address(%XmStrings(), index: 6520);
define inline-only constant $XmNdropTransferClass       =
	pointer-value-address(%XmStrings(), index: 6538);
define inline-only constant $XmNdropTransfers           =
	pointer-value-address(%XmStrings(), index: 6556);
define inline-only constant $XmNeditMode                =
	pointer-value-address(%XmStrings(), index: 6570);
define inline-only constant $XmNeditable                =
	pointer-value-address(%XmStrings(), index: 6579);
define inline-only constant $XmNentryAlignment          =
	pointer-value-address(%XmStrings(), index: 6588);
define inline-only constant $XmNentryBorder             =
	pointer-value-address(%XmStrings(), index: 6603);
define inline-only constant $XmNentryCallback           =
	pointer-value-address(%XmStrings(), index: 6615);
define inline-only constant $XmNentryClass              =
	pointer-value-address(%XmStrings(), index: 6629);
define inline-only constant $XmNentryVerticalAlignment  =
	pointer-value-address(%XmStrings(), index: 6640);
define inline-only constant $XmNexportTargets           =
	pointer-value-address(%XmStrings(), index: 6663);
define inline-only constant $XmNexposeCallback          =
	pointer-value-address(%XmStrings(), index: 6677);
define inline-only constant $XmNextendedSelectionCallback =
	pointer-value-address(%XmStrings(), index: 6692);
define inline-only constant $XmNextensionType           =
	pointer-value-address(%XmStrings(), index: 6718);
define inline-only constant $XmNfileListItemCount       =
	pointer-value-address(%XmStrings(), index: 6732);
define inline-only constant $XmNfileListItems           =
	pointer-value-address(%XmStrings(), index: 6750);
define inline-only constant $XmNfileListLabelString     =
	pointer-value-address(%XmStrings(), index: 6764);
define inline-only constant $XmNfileSearchProc          =
	pointer-value-address(%XmStrings(), index: 6784);
define inline-only constant $XmNfileTypeMask            =
	pointer-value-address(%XmStrings(), index: 6799);
define inline-only constant $XmNfillOnArm               =
	pointer-value-address(%XmStrings(), index: 6812);
define inline-only constant $XmNfillOnSelect            =
	pointer-value-address(%XmStrings(), index: 6822);
define inline-only constant $XmNfilterLabelString       =
	pointer-value-address(%XmStrings(), index: 6835);
define inline-only constant $XmNfocusCallback           =
	pointer-value-address(%XmStrings(), index: 6853);
define inline-only constant $XmNfocusMovedCallback      =
	pointer-value-address(%XmStrings(), index: 6867);
define inline-only constant $XmNfocusPolicyChanged      =
	pointer-value-address(%XmStrings(), index: 6886);
define inline-only constant $XmNfontList                =
	pointer-value-address(%XmStrings(), index: 6905);
define inline-only constant $XmNforegroundThreshold     =
	pointer-value-address(%XmStrings(), index: 6914);
define inline-only constant $XmNfractionBase            =
	pointer-value-address(%XmStrings(), index: 6934);
define inline-only constant $XmNgainPrimaryCallback     =
	pointer-value-address(%XmStrings(), index: 6947);
define inline-only constant $XmNhelpCallback            =
	pointer-value-address(%XmStrings(), index: 6967);
define inline-only constant $XmNhelpLabelString         =
	pointer-value-address(%XmStrings(), index: 6980);
define inline-only constant $XmNhighlightColor          =
	pointer-value-address(%XmStrings(), index: 6996);
define inline-only constant $XmNhighlightOnEnter        =
	pointer-value-address(%XmStrings(), index: 7011);
define inline-only constant $XmNhighlightPixmap         =
	pointer-value-address(%XmStrings(), index: 7028);
define inline-only constant $XmNhighlightThickness      =
	pointer-value-address(%XmStrings(), index: 7044);
define inline-only constant $XmNhistoryItemCount        =
	pointer-value-address(%XmStrings(), index: 7063);
define inline-only constant $XmNhistoryItems            =
	pointer-value-address(%XmStrings(), index: 7080);
define inline-only constant $XmNhistoryMaxItems         =
	pointer-value-address(%XmStrings(), index: 7093);
define inline-only constant $XmNhistoryVisibleItemCount =
	pointer-value-address(%XmStrings(), index: 7109);
define inline-only constant $XmNhorizontalFontUnit      =
	pointer-value-address(%XmStrings(), index: 7133);
define inline-only constant $XmNhorizontalScrollBar     =
	pointer-value-address(%XmStrings(), index: 7152);
define inline-only constant $XmNhorizontalSpacing       =
	pointer-value-address(%XmStrings(), index: 7172);
define inline-only constant $XmNhotX                    =
	pointer-value-address(%XmStrings(), index: 7190);
define inline-only constant $XmNhotY                    =
	pointer-value-address(%XmStrings(), index: 7195);
define inline-only constant $XmNiccHandle               =
	pointer-value-address(%XmStrings(), index: 7200);
define inline-only constant $XmNimportTargets           =
	pointer-value-address(%XmStrings(), index: 7210);
define inline-only constant $XmNincrement               =
	pointer-value-address(%XmStrings(), index: 7224);
define inline-only constant $XmNincrementCallback       =
	pointer-value-address(%XmStrings(), index: 7234);
define inline-only constant $XmNincremental             =
	pointer-value-address(%XmStrings(), index: 7252);
define inline-only constant $XmNindicatorOn             =
	pointer-value-address(%XmStrings(), index: 7264);
define inline-only constant $XmNindicatorSize           =
	pointer-value-address(%XmStrings(), index: 7276);
define inline-only constant $XmNindicatorType           =
	pointer-value-address(%XmStrings(), index: 7290);
define inline-only constant $XmNinitialDelay            =
	pointer-value-address(%XmStrings(), index: 7304);
define inline-only constant $XmNinitialFocus            =
	pointer-value-address(%XmStrings(), index: 7317);
define inline-only constant $XmNinputCallback           =
	pointer-value-address(%XmStrings(), index: 7330);
define inline-only constant $XmNinputCreate             =
	pointer-value-address(%XmStrings(), index: 7344);
define inline-only constant $XmNinputMethod             =
	pointer-value-address(%XmStrings(), index: 7356);
define inline-only constant $XmNinvalidCursorForeground =
	pointer-value-address(%XmStrings(), index: 7368);
define inline-only constant $XmNisAligned               =
	pointer-value-address(%XmStrings(), index: 7392);
define inline-only constant $XmNisHomogeneous           =
	pointer-value-address(%XmStrings(), index: 7402);
define inline-only constant $XmNitemCount               =
	pointer-value-address(%XmStrings(), index: 7416);
define inline-only constant $XmNitems                   =
	pointer-value-address(%XmStrings(), index: 7426);
define inline-only constant $XmNkeyboardFocusPolicy     =
	pointer-value-address(%XmStrings(), index: 7432);
define inline-only constant $XmNlabelFontList           =
	pointer-value-address(%XmStrings(), index: 7452);
define inline-only constant $XmNlabelInsensitivePixmap  =
	pointer-value-address(%XmStrings(), index: 7466);
define inline-only constant $XmNlabelPixmap             =
	pointer-value-address(%XmStrings(), index: 7489);
define inline-only constant $XmNlabelString             =
	pointer-value-address(%XmStrings(), index: 7501);
define inline-only constant $XmNlabelType               =
	pointer-value-address(%XmStrings(), index: 7513);
define inline-only constant $XmNleftAttachment          =
	pointer-value-address(%XmStrings(), index: 7523);
define inline-only constant $XmNleftOffset              =
	pointer-value-address(%XmStrings(), index: 7538);
define inline-only constant $XmNleftPosition            =
	pointer-value-address(%XmStrings(), index: 7549);
define inline-only constant $XmNleftWidget              =
	pointer-value-address(%XmStrings(), index: 7562);
define inline-only constant $XmNlightThreshold          =
	pointer-value-address(%XmStrings(), index: 7573);
define inline-only constant $XmNlineSpace               =
	pointer-value-address(%XmStrings(), index: 7588);
define inline-only constant $XmNlistItemCount           =
	pointer-value-address(%XmStrings(), index: 7598);
define inline-only constant $XmNlistItems               =
	pointer-value-address(%XmStrings(), index: 7612);
define inline-only constant $XmNlistLabelString         =
	pointer-value-address(%XmStrings(), index: 7622);
define inline-only constant $XmNlistMarginHeight        =
	pointer-value-address(%XmStrings(), index: 7638);
define inline-only constant $XmNlistMarginWidth         =
	pointer-value-address(%XmStrings(), index: 7655);
define inline-only constant $XmNlistSizePolicy          =
	pointer-value-address(%XmStrings(), index: 7671);
define inline-only constant $XmNlistSpacing             =
	pointer-value-address(%XmStrings(), index: 7686);
define inline-only constant $XmNlistUpdated             =
	pointer-value-address(%XmStrings(), index: 7698);
define inline-only constant $XmNlistVisibleItemCount    =
	pointer-value-address(%XmStrings(), index: 7710);
define inline-only constant $XmNlogicalParent           =
	pointer-value-address(%XmStrings(), index: 7731);
define inline-only constant $XmNlosePrimaryCallback     =
	pointer-value-address(%XmStrings(), index: 7745);
define inline-only constant $XmNlosingFocusCallback     =
	pointer-value-address(%XmStrings(), index: 7765);
define inline-only constant $XmNmainWindowMarginHeight  =
	pointer-value-address(%XmStrings(), index: 7785);
define inline-only constant $XmNmainWindowMarginWidth   =
	pointer-value-address(%XmStrings(), index: 7808);
define inline-only constant $XmNmapCallback             =
	pointer-value-address(%XmStrings(), index: 7830);
define inline-only constant $XmNmappingDelay            =
	pointer-value-address(%XmStrings(), index: 7842);
define inline-only constant $XmNmargin                  =
	pointer-value-address(%XmStrings(), index: 7855);
define inline-only constant $XmNmarginBottom            =
	pointer-value-address(%XmStrings(), index: 7862);
define inline-only constant $XmNmarginHeight            =
	pointer-value-address(%XmStrings(), index: 7875);
define inline-only constant $XmNmarginLeft              =
	pointer-value-address(%XmStrings(), index: 7888);
define inline-only constant $XmNmarginRight             =
	pointer-value-address(%XmStrings(), index: 7899);
define inline-only constant $XmNmarginTop               =
	pointer-value-address(%XmStrings(), index: 7911);
define inline-only constant $XmNmarginWidth             =
	pointer-value-address(%XmStrings(), index: 7921);
define inline-only constant $XmNmask                    =
	pointer-value-address(%XmStrings(), index: 7933);
define inline-only constant $XmNmaxLength               =
	pointer-value-address(%XmStrings(), index: 7938);
define inline-only constant $XmNmaximum                 =
	pointer-value-address(%XmStrings(), index: 7948);
define inline-only constant $XmNmenuAccelerator         =
	pointer-value-address(%XmStrings(), index: 7956);
define inline-only constant $XmNmenuBar                 =
	pointer-value-address(%XmStrings(), index: 7972);
define inline-only constant $XmNmenuCursor              =
	pointer-value-address(%XmStrings(), index: 7980);
define inline-only constant $XmNmenuHelpWidget          =
	pointer-value-address(%XmStrings(), index: 7991);
define inline-only constant $XmNmenuHistory             =
	pointer-value-address(%XmStrings(), index: 8006);
define inline-only constant $XmNmenuPost                =
	pointer-value-address(%XmStrings(), index: 8018);
define inline-only constant $XmNmessageAlignment        =
	pointer-value-address(%XmStrings(), index: 8027);
define inline-only constant $XmNmessageProc             =
	pointer-value-address(%XmStrings(), index: 8044);
define inline-only constant $XmNmessageString           =
	pointer-value-address(%XmStrings(), index: 8056);
define inline-only constant $XmNmessageWindow           =
	pointer-value-address(%XmStrings(), index: 8070);
define inline-only constant $XmNminimizeButtons         =
	pointer-value-address(%XmStrings(), index: 8084);
define inline-only constant $XmNminimum                 =
	pointer-value-address(%XmStrings(), index: 8100);
define inline-only constant $XmNmnemonic                =
	pointer-value-address(%XmStrings(), index: 8108);
define inline-only constant $XmNmnemonicCharSet         =
	pointer-value-address(%XmStrings(), index: 8117);
define inline-only constant $XmNmodifyVerifyCallback    =
	pointer-value-address(%XmStrings(), index: 8133);
define inline-only constant $XmNmodifyVerifyCallbackWcs =
	pointer-value-address(%XmStrings(), index: 8154);
define inline-only constant $XmNmotionVerifyCallback    =
	pointer-value-address(%XmStrings(), index: 8178);
define inline-only constant $XmNmoveOpaque              =
	pointer-value-address(%XmStrings(), index: 8199);
define inline-only constant $XmNmultiClick              =
	pointer-value-address(%XmStrings(), index: 8210);
define inline-only constant $XmNmultipleSelectionCallback =
	pointer-value-address(%XmStrings(), index: 8221);
define inline-only constant $XmNmustMatch               =
	pointer-value-address(%XmStrings(), index: 8247);
define inline-only constant $XmNmwmDecorations          =
	pointer-value-address(%XmStrings(), index: 8257);
define inline-only constant $XmNmwmFunctions            =
	pointer-value-address(%XmStrings(), index: 8272);
define inline-only constant $XmNmwmInputMode            =
	pointer-value-address(%XmStrings(), index: 8285);
define inline-only constant $XmNmwmMenu                 =
	pointer-value-address(%XmStrings(), index: 8298);
define inline-only constant $XmNmwmMessages             =
	pointer-value-address(%XmStrings(), index: 8306);
define inline-only constant $XmNnavigationType          =
	pointer-value-address(%XmStrings(), index: 8318);
define inline-only constant $XmNneedsMotion             =
	pointer-value-address(%XmStrings(), index: 8333);
define inline-only constant $XmNnoMatchCallback         =
	pointer-value-address(%XmStrings(), index: 8345);
define inline-only constant $XmNnoMatchString           =
	pointer-value-address(%XmStrings(), index: 8361);
define inline-only constant $XmNnoResize                =
	pointer-value-address(%XmStrings(), index: 8375);
define inline-only constant $XmNnoneCursorForeground    =
	pointer-value-address(%XmStrings(), index: 8384);
define inline-only constant $XmNnotifyProc              =
	pointer-value-address(%XmStrings(), index: 8405);
define inline-only constant $XmNnumColumns              =
	pointer-value-address(%XmStrings(), index: 8416);
define inline-only constant $XmNnumDropRectangles       =
	pointer-value-address(%XmStrings(), index: 8427);
define inline-only constant $XmNnumDropTransfers        =
	pointer-value-address(%XmStrings(), index: 8445);
define inline-only constant $XmNnumExportTargets        =
	pointer-value-address(%XmStrings(), index: 8462);
define inline-only constant $XmNnumImportTargets        =
	pointer-value-address(%XmStrings(), index: 8479);
define inline-only constant $XmNnumRectangles           =
	pointer-value-address(%XmStrings(), index: 8496);
define inline-only constant $XmNoffsetX                 =
	pointer-value-address(%XmStrings(), index: 8510);
define inline-only constant $XmNoffsetY                 =
	pointer-value-address(%XmStrings(), index: 8518);
define inline-only constant $XmNokCallback              =
	pointer-value-address(%XmStrings(), index: 8526);
define inline-only constant $XmNokLabelString           =
	pointer-value-address(%XmStrings(), index: 8537);
define inline-only constant $XmNoperationChangedCallback =
	pointer-value-address(%XmStrings(), index: 8551);
define inline-only constant $XmNoperationCursorIcon     =
	pointer-value-address(%XmStrings(), index: 8576);
define inline-only constant $XmNoptionLabel             =
	pointer-value-address(%XmStrings(), index: 8596);
define inline-only constant $XmNoptionMnemonic          =
	pointer-value-address(%XmStrings(), index: 8608);
define inline-only constant $XmNoutputCreate            =
	pointer-value-address(%XmStrings(), index: 8623);
define inline-only constant $XmNpacking                 =
	pointer-value-address(%XmStrings(), index: 8636);
define inline-only constant $XmNpageDecrementCallback   =
	pointer-value-address(%XmStrings(), index: 8644);
define inline-only constant $XmNpageIncrement           =
	pointer-value-address(%XmStrings(), index: 8666);
define inline-only constant $XmNpageIncrementCallback   =
	pointer-value-address(%XmStrings(), index: 8680);
define inline-only constant $XmNpaneMaximum             =
	pointer-value-address(%XmStrings(), index: 8702);
define inline-only constant $XmNpaneMinimum             =
	pointer-value-address(%XmStrings(), index: 8714);
define inline-only constant $XmNpattern                 =
	pointer-value-address(%XmStrings(), index: 8726);
define inline-only constant $XmNpendingDelete           =
	pointer-value-address(%XmStrings(), index: 8734);
define inline-only constant $XmNpopupEnabled            =
	pointer-value-address(%XmStrings(), index: 8748);
define inline-only constant $XmNpositionIndex           =
	pointer-value-address(%XmStrings(), index: 8761);
define inline-only constant $XmNpostFromButton          =
	pointer-value-address(%XmStrings(), index: 8775);
define inline-only constant $XmNpostFromCount           =
	pointer-value-address(%XmStrings(), index: 8790);
define inline-only constant $XmNpostFromList            =
	pointer-value-address(%XmStrings(), index: 8804);
define inline-only constant $XmNpreeditType             =
	pointer-value-address(%XmStrings(), index: 8817);
define inline-only constant $XmNprocessingDirection     =
	pointer-value-address(%XmStrings(), index: 8829);
define inline-only constant $XmNpromptString            =
	pointer-value-address(%XmStrings(), index: 8849);
define inline-only constant $XmNprotocolCallback        =
	pointer-value-address(%XmStrings(), index: 8862);
define inline-only constant $XmNpushButtonEnabled       =
	pointer-value-address(%XmStrings(), index: 8879);
define inline-only constant $XmNqualifySearchDataProc   =
	pointer-value-address(%XmStrings(), index: 8897);
define inline-only constant $XmNradioAlwaysOne          =
	pointer-value-address(%XmStrings(), index: 8919);
define inline-only constant $XmNradioBehavior           =
	pointer-value-address(%XmStrings(), index: 8934);
define inline-only constant $XmNrealizeCallback         =
	pointer-value-address(%XmStrings(), index: 8948);
define inline-only constant $XmNrecomputeSize           =
	pointer-value-address(%XmStrings(), index: 8964);
define inline-only constant $XmNrectangles              =
	pointer-value-address(%XmStrings(), index: 8978);
define inline-only constant $XmNrefigureMode            =
	pointer-value-address(%XmStrings(), index: 8989);
define inline-only constant $XmNrepeatDelay             =
	pointer-value-address(%XmStrings(), index: 9002);
define inline-only constant $XmNresizable               =
	pointer-value-address(%XmStrings(), index: 9014);
define inline-only constant $XmNresizeCallback          =
	pointer-value-address(%XmStrings(), index: 9024);
define inline-only constant $XmNresizeHeight            =
	pointer-value-address(%XmStrings(), index: 9039);
define inline-only constant $XmNresizePolicy            =
	pointer-value-address(%XmStrings(), index: 9052);
define inline-only constant $XmNresizeWidth             =
	pointer-value-address(%XmStrings(), index: 9065);
define inline-only constant $XmNrightAttachment         =
	pointer-value-address(%XmStrings(), index: 9077);
define inline-only constant $XmNrightOffset             =
	pointer-value-address(%XmStrings(), index: 9093);
define inline-only constant $XmNrightPosition           =
	pointer-value-address(%XmStrings(), index: 9105);
define inline-only constant $XmNrightWidget             =
	pointer-value-address(%XmStrings(), index: 9119);
define inline-only constant $XmNrowColumnType           =
	pointer-value-address(%XmStrings(), index: 9131);
define inline-only constant $XmNrows                    =
	pointer-value-address(%XmStrings(), index: 9145);
define inline-only constant $XmNrubberPositioning       =
	pointer-value-address(%XmStrings(), index: 9150);
define inline-only constant $XmNsashHeight              =
	pointer-value-address(%XmStrings(), index: 9168);
define inline-only constant $XmNsashIndent              =
	pointer-value-address(%XmStrings(), index: 9179);
define inline-only constant $XmNsashShadowThickness     =
	pointer-value-address(%XmStrings(), index: 9190);
define inline-only constant $XmNsashWidth               =
	pointer-value-address(%XmStrings(), index: 9210);
define inline-only constant $XmNscaleHeight             =
	pointer-value-address(%XmStrings(), index: 9220);
define inline-only constant $XmNscaleMultiple           =
	pointer-value-address(%XmStrings(), index: 9232);
define inline-only constant $XmNscaleWidth              =
	pointer-value-address(%XmStrings(), index: 9246);
define inline-only constant $XmNscrollBarDisplayPolicy  =
	pointer-value-address(%XmStrings(), index: 9257);
define inline-only constant $XmNscrollBarPlacement      =
	pointer-value-address(%XmStrings(), index: 9280);
define inline-only constant $XmNscrollHorizontal        =
	pointer-value-address(%XmStrings(), index: 9299);
define inline-only constant $XmNscrollLeftSide          =
	pointer-value-address(%XmStrings(), index: 9316);
define inline-only constant $XmNscrollTopSide           =
	pointer-value-address(%XmStrings(), index: 9331);
define inline-only constant $XmNscrollVertical          =
	pointer-value-address(%XmStrings(), index: 9345);
define inline-only constant $XmNscrolledWindowMarginHeight =
	pointer-value-address(%XmStrings(), index: 9360);
define inline-only constant $XmNscrolledWindowMarginWidth =
	pointer-value-address(%XmStrings(), index: 9387);
define inline-only constant $XmNscrollingPolicy         =
	pointer-value-address(%XmStrings(), index: 9413);
define inline-only constant $XmNselectColor             =
	pointer-value-address(%XmStrings(), index: 9429);
define inline-only constant $XmNselectInsensitivePixmap =
	pointer-value-address(%XmStrings(), index: 9441);
define inline-only constant $XmNselectPixmap            =
	pointer-value-address(%XmStrings(), index: 9465);
define inline-only constant $XmNselectThreshold         =
	pointer-value-address(%XmStrings(), index: 9478);
define inline-only constant $XmNselectedItemCount       =
	pointer-value-address(%XmStrings(), index: 9494);
define inline-only constant $XmNselectedItems           =
	pointer-value-address(%XmStrings(), index: 9512);
define inline-only constant $XmNselectionArrayCount     =
	pointer-value-address(%XmStrings(), index: 9526);
define inline-only constant $XmNselectionLabelString    =
	pointer-value-address(%XmStrings(), index: 9546);
define inline-only constant $XmNselectionPolicy         =
	pointer-value-address(%XmStrings(), index: 9567);
define inline-only constant $XmNseparatorOn             =
	pointer-value-address(%XmStrings(), index: 9583);
define inline-only constant $XmNseparatorType           =
	pointer-value-address(%XmStrings(), index: 9595);
define inline-only constant $XmNset                     =
	pointer-value-address(%XmStrings(), index: 9609);
define inline-only constant $XmNshadow                  =
	pointer-value-address(%XmStrings(), index: 9613);
define inline-only constant $XmNshadowThickness         =
	pointer-value-address(%XmStrings(), index: 9620);
define inline-only constant $XmNshadowType              =
	pointer-value-address(%XmStrings(), index: 9636);
define inline-only constant $XmNshellUnitType           =
	pointer-value-address(%XmStrings(), index: 9647);
define inline-only constant $XmNshowArrows              =
	pointer-value-address(%XmStrings(), index: 9661);
define inline-only constant $XmNshowAsDefault           =
	pointer-value-address(%XmStrings(), index: 9672);
define inline-only constant $XmNshowSeparator           =
	pointer-value-address(%XmStrings(), index: 9686);
define inline-only constant $XmNshowValue               =
	pointer-value-address(%XmStrings(), index: 9700);
define inline-only constant $XmNsimpleCallback          =
	pointer-value-address(%XmStrings(), index: 9710);
define inline-only constant $XmNsingleSelectionCallback =
	pointer-value-address(%XmStrings(), index: 9725);
define inline-only constant $XmNsizePolicy              =
	pointer-value-address(%XmStrings(), index: 9749);
define inline-only constant $XmNskipAdjust              =
	pointer-value-address(%XmStrings(), index: 9760);
define inline-only constant $XmNsliderSize              =
	pointer-value-address(%XmStrings(), index: 9771);
define inline-only constant $XmNsource                  =
	pointer-value-address(%XmStrings(), index: 9782);
define inline-only constant $XmNsourceCursorIcon        =
	pointer-value-address(%XmStrings(), index: 9789);
define inline-only constant $XmNsourceIsExternal        =
	pointer-value-address(%XmStrings(), index: 9806);
define inline-only constant $XmNsourcePixmapIcon        =
	pointer-value-address(%XmStrings(), index: 9823);
define inline-only constant $XmNsourceWidget            =
	pointer-value-address(%XmStrings(), index: 9840);
define inline-only constant $XmNsourceWindow            =
	pointer-value-address(%XmStrings(), index: 9853);
define inline-only constant $XmNspacing                 =
	pointer-value-address(%XmStrings(), index: 9866);
define inline-only constant $XmNspotLocation            =
	pointer-value-address(%XmStrings(), index: 9874);
define inline-only constant $XmNstartTime               =
	pointer-value-address(%XmStrings(), index: 9887);
define inline-only constant $XmNstateCursorIcon         =
	pointer-value-address(%XmStrings(), index: 9897);
define inline-only constant $XmNstringDirection         =
	pointer-value-address(%XmStrings(), index: 9913);
define inline-only constant $XmNsubMenuId               =
	pointer-value-address(%XmStrings(), index: 9929);
define inline-only constant $XmNsymbolPixmap            =
	pointer-value-address(%XmStrings(), index: 9939);
define inline-only constant $XmNtearOffMenuActivateCallback =
	pointer-value-address(%XmStrings(), index: 9952);
define inline-only constant $XmNtearOffMenuDeactivateCallback =
	pointer-value-address(%XmStrings(), index: 9980);
define inline-only constant $XmNtearOffModel            =
	pointer-value-address(%XmStrings(), index: 10010);
define inline-only constant $XmNtextAccelerators        =
	pointer-value-address(%XmStrings(), index: 10023);
define inline-only constant $XmNtextColumns             =
	pointer-value-address(%XmStrings(), index: 10040);
define inline-only constant $XmNtextFontList            =
	pointer-value-address(%XmStrings(), index: 10052);
define inline-only constant $XmNtextString              =
	pointer-value-address(%XmStrings(), index: 10065);
define inline-only constant $XmNtextTranslations        =
	pointer-value-address(%XmStrings(), index: 10076);
define inline-only constant $XmNtextValue               =
	pointer-value-address(%XmStrings(), index: 10093);
define inline-only constant $XmNtitleString             =
	pointer-value-address(%XmStrings(), index: 10103);
define inline-only constant $XmNtoBottomCallback        =
	pointer-value-address(%XmStrings(), index: 10115);
define inline-only constant $XmNtoPositionCallback      =
	pointer-value-address(%XmStrings(), index: 10132);
define inline-only constant $XmNtoTopCallback           =
	pointer-value-address(%XmStrings(), index: 10151);
define inline-only constant $XmNtopAttachment           =
	pointer-value-address(%XmStrings(), index: 10165);
define inline-only constant $XmNtopCharacter            =
	pointer-value-address(%XmStrings(), index: 10179);
define inline-only constant $XmNtopItemPosition         =
	pointer-value-address(%XmStrings(), index: 10192);
define inline-only constant $XmNtopLevelEnterCallback   =
	pointer-value-address(%XmStrings(), index: 10208);
define inline-only constant $XmNtopLevelLeaveCallback   =
	pointer-value-address(%XmStrings(), index: 10230);
define inline-only constant $XmNtopOffset               =
	pointer-value-address(%XmStrings(), index: 10252);
define inline-only constant $XmNtopPosition             =
	pointer-value-address(%XmStrings(), index: 10262);
define inline-only constant $XmNtopShadowColor          =
	pointer-value-address(%XmStrings(), index: 10274);
define inline-only constant $XmNtopShadowPixmap         =
	pointer-value-address(%XmStrings(), index: 10289);
define inline-only constant $XmNtopWidget               =
	pointer-value-address(%XmStrings(), index: 10305);
define inline-only constant $XmNtransferProc            =
	pointer-value-address(%XmStrings(), index: 10315);
define inline-only constant $XmNtransferStatus          =
	pointer-value-address(%XmStrings(), index: 10328);
define inline-only constant $XmNtraversalCallback       =
	pointer-value-address(%XmStrings(), index: 10343);
define inline-only constant $XmNtraversalOn             =
	pointer-value-address(%XmStrings(), index: 10361);
define inline-only constant $XmNtraversalType           =
	pointer-value-address(%XmStrings(), index: 10373);
define inline-only constant $XmNtraverseObscuredCallback =
	pointer-value-address(%XmStrings(), index: 10387);
define inline-only constant $XmNtreeUpdateProc          =
	pointer-value-address(%XmStrings(), index: 10412);
define inline-only constant $XmNtroughColor             =
	pointer-value-address(%XmStrings(), index: 10427);
define inline-only constant $XmNunitType                =
	pointer-value-address(%XmStrings(), index: 10439);
define inline-only constant $XmNunmapCallback           =
	pointer-value-address(%XmStrings(), index: 10448);
define inline-only constant $XmNunpostBehavior          =
	pointer-value-address(%XmStrings(), index: 10462);
define inline-only constant $XmNunselectPixmap          =
	pointer-value-address(%XmStrings(), index: 10477);
define inline-only constant $XmNupdateSliderSize        =
	pointer-value-address(%XmStrings(), index: 10492);
define inline-only constant $XmNuseAsyncGeometry        =
	pointer-value-address(%XmStrings(), index: 10509);
define inline-only constant $XmNuserData                =
	pointer-value-address(%XmStrings(), index: 10526);
define inline-only constant $XmNvalidCursorForeground   =
	pointer-value-address(%XmStrings(), index: 10535);
define inline-only constant $XmNvalueChangedCallback    =
	pointer-value-address(%XmStrings(), index: 10557);
define inline-only constant $XmNvalueWcs                =
	pointer-value-address(%XmStrings(), index: 10578);
define inline-only constant $XmNverifyBell              =
	pointer-value-address(%XmStrings(), index: 10587);
define inline-only constant $XmNverticalFontUnit        =
	pointer-value-address(%XmStrings(), index: 10598);
define inline-only constant $XmNverticalScrollBar       =
	pointer-value-address(%XmStrings(), index: 10615);
define inline-only constant $XmNverticalSpacing         =
	pointer-value-address(%XmStrings(), index: 10633);
define inline-only constant $XmNvisibleItemCount        =
	pointer-value-address(%XmStrings(), index: 10649);
define inline-only constant $XmNvisibleWhenOff          =
	pointer-value-address(%XmStrings(), index: 10666);
define inline-only constant $XmNvisualPolicy            =
	pointer-value-address(%XmStrings(), index: 10681);
define inline-only constant $XmNwhichButton             =
	pointer-value-address(%XmStrings(), index: 10694);
define inline-only constant $XmNwordWrap                =
	pointer-value-address(%XmStrings(), index: 10706);
define inline-only constant $XmNworkWindow              =
	pointer-value-address(%XmStrings(), index: 10715);
define inline-only constant $XmRAlignment               =
	pointer-value-address(%XmStrings(), index: 10726);
define inline-only constant $XmRAnimationMask           =
	pointer-value-address(%XmStrings(), index: 10736);
define inline-only constant $XmRAnimationPixmap         =
	pointer-value-address(%XmStrings(), index: 10750);
define inline-only constant $XmRAnimationStyle          =
	pointer-value-address(%XmStrings(), index: 10766);
define inline-only constant $XmRArrowDirection          =
	pointer-value-address(%XmStrings(), index: 10781);
define inline-only constant $XmRAtomList                =
	pointer-value-address(%XmStrings(), index: 10796);
define inline-only constant $XmRAttachment              =
	pointer-value-address(%XmStrings(), index: 10805);
define inline-only constant $XmRAudibleWarning          =
	pointer-value-address(%XmStrings(), index: 10816);
define inline-only constant $XmRAvailability            =
	pointer-value-address(%XmStrings(), index: 10831);
define inline-only constant $XmRBackgroundPixmap        =
	pointer-value-address(%XmStrings(), index: 10844);
define inline-only constant $XmRBlendModel              =
	pointer-value-address(%XmStrings(), index: 10861);
define inline-only constant $XmRBooleanDimension        =
	pointer-value-address(%XmStrings(), index: 10872);
define inline-only constant $XmRBottomShadowPixmap      =
	pointer-value-address(%XmStrings(), index: 10889);
define inline-only constant $XmRButtonType              =
	pointer-value-address(%XmStrings(), index: 10908);
define inline-only constant $XmRCallbackProc            =
	pointer-value-address(%XmStrings(), index: 10919);
define inline-only constant $XmRChar                    =
	pointer-value-address(%XmStrings(), index: 10932);
define inline-only constant $XmRCharSetTable            =
	pointer-value-address(%XmStrings(), index: 10937);
define inline-only constant $XmRChildHorizontalAlignment =
	pointer-value-address(%XmStrings(), index: 10950);
define inline-only constant $XmRChildPlacement          =
	pointer-value-address(%XmStrings(), index: 10975);
define inline-only constant $XmRChildType               =
	pointer-value-address(%XmStrings(), index: 10990);
define inline-only constant $XmRChildVerticalAlignment  =
	pointer-value-address(%XmStrings(), index: 11000);
define inline-only constant $XmRCommandWindowLocation   =
	pointer-value-address(%XmStrings(), index: 11023);
define inline-only constant $XmRCompoundText            =
	pointer-value-address(%XmStrings(), index: 11045);
define inline-only constant $XmRDefaultButtonType       =
	pointer-value-address(%XmStrings(), index: 11058);
define inline-only constant $XmRDeleteResponse          =
	pointer-value-address(%XmStrings(), index: 11076);
define inline-only constant $XmRDialogStyle             =
	pointer-value-address(%XmStrings(), index: 11091);
define inline-only constant $XmRDialogType              =
	pointer-value-address(%XmStrings(), index: 11103);
define inline-only constant $XmRDoubleClickInterval     =
	pointer-value-address(%XmStrings(), index: 11114);
define inline-only constant $XmRDragInitiatorProtocolStyle =
	pointer-value-address(%XmStrings(), index: 11134);
define inline-only constant $XmRDragReceiverProtocolStyle =
	pointer-value-address(%XmStrings(), index: 11161);
define inline-only constant $XmRDropSiteActivity        =
	pointer-value-address(%XmStrings(), index: 11187);
define inline-only constant $XmRDropSiteOperations      =
	pointer-value-address(%XmStrings(), index: 11204);
define inline-only constant $XmRDropSiteType            =
	pointer-value-address(%XmStrings(), index: 11223);
define inline-only constant $XmRDropTransfers           =
	pointer-value-address(%XmStrings(), index: 11236);
define inline-only constant $XmRExtensionType           =
	pointer-value-address(%XmStrings(), index: 11250);
define inline-only constant $XmRFileTypeMask            =
	pointer-value-address(%XmStrings(), index: 11264);
define inline-only constant $XmRFontList                =
	pointer-value-address(%XmStrings(), index: 11277);
define inline-only constant $XmRGadgetPixmap            =
	pointer-value-address(%XmStrings(), index: 11286);
define inline-only constant $XmRHighlightPixmap         =
	pointer-value-address(%XmStrings(), index: 11299);
define inline-only constant $XmRHorizontalDimension     =
	pointer-value-address(%XmStrings(), index: 11315);
define inline-only constant $XmRHorizontalInt           =
	pointer-value-address(%XmStrings(), index: 11335);
define inline-only constant $XmRHorizontalPosition      =
	pointer-value-address(%XmStrings(), index: 11349);
define inline-only constant $XmRIconAttachment          =
	pointer-value-address(%XmStrings(), index: 11368);
define inline-only constant $XmRImportTargets           =
	pointer-value-address(%XmStrings(), index: 11383);
define inline-only constant $XmRIndicatorType           =
	pointer-value-address(%XmStrings(), index: 11397);
define inline-only constant $XmRItemCount               =
	pointer-value-address(%XmStrings(), index: 11411);
define inline-only constant $XmRItems                   =
	pointer-value-address(%XmStrings(), index: 11421);
define inline-only constant $XmRKeySym                  =
	pointer-value-address(%XmStrings(), index: 11427);
define inline-only constant $XmRKeySymTable             =
	pointer-value-address(%XmStrings(), index: 11434);
define inline-only constant $XmRKeyboardFocusPolicy     =
	pointer-value-address(%XmStrings(), index: 11446);
define inline-only constant $XmRLabelType               =
	pointer-value-address(%XmStrings(), index: 11466);
define inline-only constant $XmRListMarginHeight        =
	pointer-value-address(%XmStrings(), index: 11476);
define inline-only constant $XmRListMarginWidth         =
	pointer-value-address(%XmStrings(), index: 11493);
define inline-only constant $XmRListSizePolicy          =
	pointer-value-address(%XmStrings(), index: 11509);
define inline-only constant $XmRListSpacing             =
	pointer-value-address(%XmStrings(), index: 11524);
define inline-only constant $XmRManBottomShadowPixmap   =
	pointer-value-address(%XmStrings(), index: 11536);
define inline-only constant $XmRManForegroundPixmap     =
	pointer-value-address(%XmStrings(), index: 11558);
define inline-only constant $XmRManHighlightPixmap      =
	pointer-value-address(%XmStrings(), index: 11578);
define inline-only constant $XmRManTopShadowPixmap      =
	pointer-value-address(%XmStrings(), index: 11597);
define inline-only constant $XmRMenuWidget              =
	pointer-value-address(%XmStrings(), index: 11616);
define inline-only constant $XmRMnemonic                =
	pointer-value-address(%XmStrings(), index: 11627);
define inline-only constant $XmRMultiClick              =
	pointer-value-address(%XmStrings(), index: 11636);
define inline-only constant $XmRNavigationType          =
	pointer-value-address(%XmStrings(), index: 11647);
define inline-only constant $XmRPacking                 =
	pointer-value-address(%XmStrings(), index: 11662);
define inline-only constant $XmRPrimForegroundPixmap    =
	pointer-value-address(%XmStrings(), index: 11670);
define inline-only constant $XmRProc                    =
	pointer-value-address(%XmStrings(), index: 11691);
define inline-only constant $XmRProcessingDirection     =
	pointer-value-address(%XmStrings(), index: 11696);
define inline-only constant $XmRRectangleList           =
	pointer-value-address(%XmStrings(), index: 11716);
define inline-only constant $XmRResizePolicy            =
	pointer-value-address(%XmStrings(), index: 11730);
define inline-only constant $XmRRowColumnType           =
	pointer-value-address(%XmStrings(), index: 11743);
define inline-only constant $XmRScrollBarDisplayPolicy  =
	pointer-value-address(%XmStrings(), index: 11757);
define inline-only constant $XmRScrollBarPlacement      =
	pointer-value-address(%XmStrings(), index: 11780);
define inline-only constant $XmRScrollingPolicy         =
	pointer-value-address(%XmStrings(), index: 11799);
define inline-only constant $XmRSelectedItemCount       =
	pointer-value-address(%XmStrings(), index: 11815);
define inline-only constant $XmRSelectedItems           =
	pointer-value-address(%XmStrings(), index: 11833);
define inline-only constant $XmRSelectionPolicy         =
	pointer-value-address(%XmStrings(), index: 11847);
define inline-only constant $XmRSelectionType           =
	pointer-value-address(%XmStrings(), index: 11863);
define inline-only constant $XmRSeparatorType           =
	pointer-value-address(%XmStrings(), index: 11877);
define inline-only constant $XmRShadowType              =
	pointer-value-address(%XmStrings(), index: 11891);
define inline-only constant $XmRShellHorizDim           =
	pointer-value-address(%XmStrings(), index: 11902);
define inline-only constant $XmRShellHorizPos           =
	pointer-value-address(%XmStrings(), index: 11916);
define inline-only constant $XmRShellUnitType           =
	pointer-value-address(%XmStrings(), index: 11930);
define inline-only constant $XmRShellVertDim            =
	pointer-value-address(%XmStrings(), index: 11944);
define inline-only constant $XmRShellVertPos            =
	pointer-value-address(%XmStrings(), index: 11957);
define inline-only constant $XmRSizePolicy              =
	pointer-value-address(%XmStrings(), index: 11970);
define inline-only constant $XmRStringDirection         =
	pointer-value-address(%XmStrings(), index: 11981);
define inline-only constant $XmRTearOffModel            =
	pointer-value-address(%XmStrings(), index: 11997);
define inline-only constant $XmRTopShadowPixmap         =
	pointer-value-address(%XmStrings(), index: 12010);
define inline-only constant $XmRTransferStatus          =
	pointer-value-address(%XmStrings(), index: 12026);
define inline-only constant $XmRTraversalType           =
	pointer-value-address(%XmStrings(), index: 12041);
define inline-only constant $XmRUnitType                =
	pointer-value-address(%XmStrings(), index: 12055);
define inline-only constant $XmRUnpostBehavior          =
	pointer-value-address(%XmStrings(), index: 12064);
define inline-only constant $XmRValueWcs                =
	pointer-value-address(%XmStrings(), index: 12079);
define inline-only constant $XmRVerticalAlignment       =
	pointer-value-address(%XmStrings(), index: 12088);
define inline-only constant $XmRVerticalDimension       =
	pointer-value-address(%XmStrings(), index: 12106);
define inline-only constant $XmRVerticalInt             =
	pointer-value-address(%XmStrings(), index: 12124);
define inline-only constant $XmRVerticalPosition        =
	pointer-value-address(%XmStrings(), index: 12136);
define inline-only constant $XmRVirtualBinding          =
	pointer-value-address(%XmStrings(), index: 12153);
define inline-only constant $XmRVisibleItemCount        =
	pointer-value-address(%XmStrings(), index: 12168);
define inline-only constant $XmRVisualPolicy            =
	pointer-value-address(%XmStrings(), index: 12185);
define inline-only constant $XmRWhichButton             =
	pointer-value-address(%XmStrings(), index: 12198);
define inline-only constant $XmRXmBackgroundPixmap      =
	pointer-value-address(%XmStrings(), index: 12210);
define inline-only constant $XmRXmString                =
	pointer-value-address(%XmStrings(), index: 12229);
define inline-only constant $XmRXmStringCharSet         =
	pointer-value-address(%XmStrings(), index: 12238);
define inline-only constant $XmRXmStringTable           =
	pointer-value-address(%XmStrings(), index: 12254);
define inline-only constant $XmVosfActivate             =
	pointer-value-address(%XmStrings(), index: 12268);
define inline-only constant $XmVosfAddMode              =
	pointer-value-address(%XmStrings(), index: 12280);
define inline-only constant $XmVosfBackSpace            =
	pointer-value-address(%XmStrings(), index: 12291);
define inline-only constant $XmVosfBeginLine            =
	pointer-value-address(%XmStrings(), index: 12304);
define inline-only constant $XmVosfCancel               =
	pointer-value-address(%XmStrings(), index: 12317);
define inline-only constant $XmVosfClear                =
	pointer-value-address(%XmStrings(), index: 12327);
define inline-only constant $XmVosfCopy                 =
	pointer-value-address(%XmStrings(), index: 12336);
define inline-only constant $XmVosfCut                  =
	pointer-value-address(%XmStrings(), index: 12344);
define inline-only constant $XmVosfDelete               =
	pointer-value-address(%XmStrings(), index: 12351);
define inline-only constant $XmVosfDown                 =
	pointer-value-address(%XmStrings(), index: 12361);
define inline-only constant $XmVosfEndLine              =
	pointer-value-address(%XmStrings(), index: 12369);
define inline-only constant $XmVosfHelp                 =
	pointer-value-address(%XmStrings(), index: 12380);
define inline-only constant $XmVosfInsert               =
	pointer-value-address(%XmStrings(), index: 12388);
define inline-only constant $XmVosfLeft                 =
	pointer-value-address(%XmStrings(), index: 12398);
define inline-only constant $XmVosfMenu                 =
	pointer-value-address(%XmStrings(), index: 12406);
define inline-only constant $XmVosfMenuBar              =
	pointer-value-address(%XmStrings(), index: 12414);
define inline-only constant $XmVosfPageDown             =
	pointer-value-address(%XmStrings(), index: 12425);
define inline-only constant $XmVosfPageLeft             =
	pointer-value-address(%XmStrings(), index: 12437);
define inline-only constant $XmVosfPageRight            =
	pointer-value-address(%XmStrings(), index: 12449);
define inline-only constant $XmVosfPageUp               =
	pointer-value-address(%XmStrings(), index: 12462);
define inline-only constant $XmVosfPaste                =
	pointer-value-address(%XmStrings(), index: 12472);
define inline-only constant $XmVosfPrimaryPaste         =
	pointer-value-address(%XmStrings(), index: 12481);
define inline-only constant $XmVosfQuickPaste           =
	pointer-value-address(%XmStrings(), index: 12497);
define inline-only constant $XmVosfRight                =
	pointer-value-address(%XmStrings(), index: 12511);
define inline-only constant $XmVosfSelect               =
	pointer-value-address(%XmStrings(), index: 12520);
define inline-only constant $XmVosfUndo                 =
	pointer-value-address(%XmStrings(), index: 12530);
define inline-only constant $XmVosfUp                   =
	pointer-value-address(%XmStrings(), index: 12538);
define inline-only constant $XmSFONTLIST-DEFAULT-TAG-STRING =
	pointer-value-address(%XmStrings(), index: 12544);
define inline-only constant $XmSXmFONTLIST-DEFAULT-TAG-STRING =
	pointer-value-address(%XmStrings(), index: 12572);
define inline-only constant $XmRTopItemPosition         =
	pointer-value-address(%XmStrings(), index: 12602);
define inline-only constant $XmSTRING-DEFAULT-CHARSET   = $XmS;
define inline-only constant $XmSTRING-ISO8859-1         =
	"ISO8859-1";
define inline-only constant $XmFONTLIST-DEFAULT-TAG     =
	$XmSFONTLIST-DEFAULT-TAG-STRING;
define inline-only constant $XmFONTLIST-DEFAULT-TAG-STRING =
	$XmSXmFONTLIST-DEFAULT-TAG-STRING;
define inline-only constant $XmVaCASCADEBUTTON          =
	"cascadeButton";
define inline-only constant $XmVaCHECKBUTTON            =
	"checkButton";
define inline-only constant $XmVaDOUBLE-SEPARATOR       =
	"doubleSeparator";
define inline-only constant $XmVaPUSHBUTTON             =
	"pushButton";
define inline-only constant $XmVaRADIOBUTTON            =
	"radioButton";
define inline-only constant $XmVaSEPARATOR              =
	"separator";
define inline-only constant $XmVaSINGLE-SEPARATOR       =
	"singleSeparator";
define inline-only constant $XmVaTOGGLEBUTTON           =
	"checkButton";
define inline-only constant $XmVaTITLE                  = $XtNtitle;
define inline-only constant $XtCKeyboardFocusPolicy     =
	$XmCKeyboardFocusPolicy;
define inline-only constant $XtCShellUnitType           =
	$XmCShellUnitType;
define inline-only constant $XtNkeyboardFocusPolicy     =
	$XmNkeyboardFocusPolicy;
define inline-only constant $XtNshellUnitType           =
	$XmNshellUnitType;
define inline-only constant $XtRKeyboardFocusPolicy     =
	$XmRKeyboardFocusPolicy;
define inline-only constant $XmRPrimBottomShadowPixmap  =
	$XmRBottomShadowPixmap;
define inline-only constant $XmRPrimHighlightPixmap     =
	$XmRHighlightPixmap;
define inline-only constant $XmRPrimTopShadowPixmap     =
	$XmRTopShadowPixmap;
define inline-only constant $XmCAccelerators            =
	$XtCAccelerators;
define inline-only constant $XmCAllowShellResize        =
	$XtCAllowShellResize;
define inline-only constant $XmCArgc                    = $XtCArgc;
define inline-only constant $XmCArgv                    = $XtCArgv;
define inline-only constant $XmCBackground              =
	$XtCBackground;
define inline-only constant $XmCBaseHeight              =
	$XtCBaseHeight;
define inline-only constant $XmCBaseWidth               =
	$XtCBaseWidth;
define inline-only constant $XmCBitmap                  = $XtCBitmap;
define inline-only constant $XmCBoolean                 =
	$XtCBoolean;
define inline-only constant $XmCBorderColor             =
	$XtCBorderColor;
define inline-only constant $XmCBorderWidth             =
	$XtCBorderWidth;
define inline-only constant $XmCCallback                =
	$XtCCallback;
define inline-only constant $XmCColor                   = $XtCColor;
define inline-only constant $XmCColormap                =
	$XtCColormap;
define inline-only constant $XmCCreatePopupChildProc    =
	$XtCCreatePopupChildProc;
define inline-only constant $XmCCursor                  = $XtCCursor;
define inline-only constant $XmCDepth                   = $XtCDepth;
define inline-only constant $XmCDimension               =
	$XtRDimension;
define inline-only constant $XmCEditMode                =
	$XtREditMode;
define inline-only constant $XmCEditType                =
	$XtCEditType;
define inline-only constant $XmCEventBindings           =
	$XtCEventBindings;
define inline-only constant $XmCFile                    = $XtCFile;
define inline-only constant $XmCFont                    = $XtCFont;
define inline-only constant $XmCFontSet                 =
	$XtCFontSet;
define inline-only constant $XmCForeground              =
	$XtCForeground;
define inline-only constant $XmCFraction                =
	$XtCFraction;
define inline-only constant $XmCFunction                =
	$XtCFunction;
define inline-only constant $XmCGeometry                =
	$XtCGeometry;
define inline-only constant $XmCHSpace                  = $XtCHSpace;
define inline-only constant $XmCHeight                  = $XtCHeight;
define inline-only constant $XmCHeightInc               =
	$XtCHeightInc;
define inline-only constant $XmCIconMask                =
	$XtCIconMask;
define inline-only constant $XmCIconName                =
	$XtCIconName;
define inline-only constant $XmCIconNameEncoding        =
	$XtCIconNameEncoding;
define inline-only constant $XmCIconPixmap              =
	$XtCIconPixmap;
define inline-only constant $XmCIconWindow              =
	$XtCIconWindow;
define inline-only constant $XmCIconX                   = $XtCIconX;
define inline-only constant $XmCIconY                   = $XtCIconY;
define inline-only constant $XmCIconic                  = $XtCIconic;
define inline-only constant $XmCIndex                   = $XtCIndex;
define inline-only constant $XmCInitialResourcesPersistent =
	$XtCInitialResourcesPersistent;
define inline-only constant $XmCInitialState            =
	$XtCInitialState;
define inline-only constant $XmCInput                   = $XtCInput;
define inline-only constant $XmCInsertPosition          =
	$XtCInsertPosition;
define inline-only constant $XmCInterval                =
	$XtCInterval;
define inline-only constant $XmCJustify                 =
	$XtCJustify;
define inline-only constant $XmCLabel                   = $XtCLabel;
define inline-only constant $XmCLength                  = $XtCLength;
define inline-only constant $XmCMappedWhenManaged       =
	$XtCMappedWhenManaged;
define inline-only constant $XmCMargin                  = $XtCMargin;
define inline-only constant $XmCMaxAspectX              =
	$XtCMaxAspectX;
define inline-only constant $XmCMaxAspectY              =
	$XtCMaxAspectY;
define inline-only constant $XmCMaxHeight               =
	$XtCMaxHeight;
define inline-only constant $XmCMaxWidth                =
	$XtCMaxWidth;
define inline-only constant $XmCMenuEntry               =
	$XtCMenuEntry;
define inline-only constant $XmCMinAspectX              =
	$XtCMinAspectX;
define inline-only constant $XmCMinAspectY              =
	$XtCMinAspectY;
define inline-only constant $XmCMinHeight               =
	$XtCMinHeight;
define inline-only constant $XmCMinWidth                =
	$XtCMinWidth;
define inline-only constant $XmCNotify                  = $XtCNotify;
define inline-only constant $XmCOrientation             =
	$XtCOrientation;
define inline-only constant $XmCOverrideRedirect        =
	$XtCOverrideRedirect;
define inline-only constant $XmCParameter               =
	$XtCParameter;
define inline-only constant $XmCPixmap                  = $XtCPixmap;
define inline-only constant $XmCPosition                =
	$XtCPosition;
define inline-only constant $XmCReadOnly                =
	$XtCReadOnly;
define inline-only constant $XmCResize                  = $XtCResize;
define inline-only constant $XmCReverseVideo            =
	$XtCReverseVideo;
define inline-only constant $XmCSaveUnder               =
	$XtCSaveUnder;
define inline-only constant $XmCScreen                  = $XtCScreen;
define inline-only constant $XmCScrollDCursor           =
	$XtCScrollDCursor;
define inline-only constant $XmCScrollHCursor           =
	$XtCScrollHCursor;
define inline-only constant $XmCScrollLCursor           =
	$XtCScrollLCursor;
define inline-only constant $XmCScrollProc              =
	$XtCScrollProc;
define inline-only constant $XmCScrollRCursor           =
	$XtCScrollRCursor;
define inline-only constant $XmCScrollUCursor           =
	$XtCScrollUCursor;
define inline-only constant $XmCScrollVCursor           =
	$XtCScrollVCursor;
define inline-only constant $XmCSelection               =
	$XtCSelection;
define inline-only constant $XmCSelectionArray          =
	$XtCSelectionArray;
define inline-only constant $XmCSensitive               =
	$XtCSensitive;
define inline-only constant $XmCSpace                   = $XtCSpace;
define inline-only constant $XmCString                  = $XtCString;
define inline-only constant $XmCTextOptions             =
	$XtCTextOptions;
define inline-only constant $XmCTextPosition            =
	$XtCTextPosition;
define inline-only constant $XmCTextSink                =
	$XtCTextSink;
define inline-only constant $XmCTextSource              =
	$XtCTextSource;
define inline-only constant $XmCThickness               =
	$XtCThickness;
define inline-only constant $XmCThumb                   = $XtCThumb;
define inline-only constant $XmCTitle                   = $XtCTitle;
define inline-only constant $XmCTitleEncoding           =
	$XtCTitleEncoding;
define inline-only constant $XmCTransient               =
	$XtCTransient;
define inline-only constant $XmCTransientFor            =
	$XtCTransientFor;
define inline-only constant $XmCTranslations            =
	$XtCTranslations;
define inline-only constant $XmCVSpace                  = $XtCVSpace;
define inline-only constant $XmCValue                   = $XtCValue;
define inline-only constant $XmCVisual                  = $XtCVisual;
define inline-only constant $XmCWaitForWm               =
	$XtCWaitForWm;
define inline-only constant $XmCWidget                  = $XtRWidget;
define inline-only constant $XmCWidth                   = $XtCWidth;
define inline-only constant $XmCWidthInc                =
	$XtCWidthInc;
define inline-only constant $XmCWinGravity              =
	$XtCWinGravity;
define inline-only constant $XmCWindow                  = $XtCWindow;
define inline-only constant $XmCWindowGroup             =
	$XtCWindowGroup;
define inline-only constant $XmCWmTimeout               =
	$XtCWmTimeout;
define inline-only constant $XmCX                       = $XtCX;
define inline-only constant $XmCY                       = $XtCY;
define inline-only constant $XmNaccelerators            =
	$XtNaccelerators;
define inline-only constant $XmNallowShellResize        =
	$XtNallowShellResize;
define inline-only constant $XmNancestorSensitive       =
	$XtNancestorSensitive;
define inline-only constant $XmNargc                    = $XtNargc;
define inline-only constant $XmNargv                    = $XtNargv;
define inline-only constant $XmNbackground              =
	$XtNbackground;
define inline-only constant $XmNbackgroundPixmap        =
	$XtNbackgroundPixmap;
define inline-only constant $XmNbaseHeight              =
	$XtNbaseHeight;
define inline-only constant $XmNbaseWidth               =
	$XtNbaseWidth;
define inline-only constant $XmNbitmap                  = $XtNbitmap;
define inline-only constant $XmNborder                  = $XtNborder;
define inline-only constant $XmNborderColor             =
	$XtNborderColor;
define inline-only constant $XmNborderPixmap            =
	$XtNborderPixmap;
define inline-only constant $XmNborderWidth             =
	$XtNborderWidth;
define inline-only constant $XmNcallback                =
	$XtNcallback;
define inline-only constant $XmNchildren                =
	$XtNchildren;
define inline-only constant $XmNcolormap                =
	$XtNcolormap;
define inline-only constant $XmNcreatePopupChildProc    =
	$XtNcreatePopupChildProc;
define inline-only constant $XmNdepth                   = $XtNdepth;
define inline-only constant $XmNdestroyCallback         =
	$XtNdestroyCallback;
define inline-only constant $XmNeditType                =
	$XtNeditType;
define inline-only constant $XmNfile                    = $XtNfile;
define inline-only constant $XmNfont                    = $XtNfont;
define inline-only constant $XmNfontSet                 =
	$XtNfontSet;
define inline-only constant $XmNforceBars               =
	$XtNforceBars;
define inline-only constant $XmNforeground              =
	$XtNforeground;
define inline-only constant $XmNfunction                =
	$XtNfunction;
define inline-only constant $XmNgeometry                =
	$XtNgeometry;
define inline-only constant $XmNheight                  = $XtNheight;
define inline-only constant $XmNheightInc               =
	$XtNheightInc;
define inline-only constant $XmNhighlight               =
	$XtNhighlight;
define inline-only constant $XmNiconMask                =
	$XtNiconMask;
define inline-only constant $XmNiconName                =
	$XtNiconName;
define inline-only constant $XmNiconNameEncoding        =
	$XtNiconNameEncoding;
define inline-only constant $XmNiconPixmap              =
	$XtNiconPixmap;
define inline-only constant $XmNiconWindow              =
	$XtNiconWindow;
define inline-only constant $XmNiconX                   = $XtNiconX;
define inline-only constant $XmNiconY                   = $XtNiconY;
define inline-only constant $XmNiconic                  = $XtNiconic;
define inline-only constant $XmNindex                   = $XtNindex;
define inline-only constant $XmNinitialResourcesPersistent =
	$XtNinitialResourcesPersistent;
define inline-only constant $XmNinitialState            =
	$XtNinitialState;
define inline-only constant $XmNinnerHeight             =
	$XtNinnerHeight;
define inline-only constant $XmNinnerWidth              =
	$XtNinnerWidth;
define inline-only constant $XmNinnerWindow             =
	$XtNinnerWindow;
define inline-only constant $XmNinput                   = $XtNinput;
define inline-only constant $XmNinsertPosition          =
	$XtNinsertPosition;
define inline-only constant $XmNinternalHeight          =
	$XtNinternalHeight;
define inline-only constant $XmNinternalWidth           =
	$XtNinternalWidth;
define inline-only constant $XmNjumpProc                =
	$XtNjumpProc;
define inline-only constant $XmNjustify                 =
	$XtNjustify;
define inline-only constant $XmNlength                  = $XtNlength;
define inline-only constant $XmNlowerRight              =
	$XtNlowerRight;
define inline-only constant $XmNmappedWhenManaged       =
	$XtNmappedWhenManaged;
define inline-only constant $XmNmaxAspectX              =
	$XtNmaxAspectX;
define inline-only constant $XmNmaxAspectY              =
	$XtNmaxAspectY;
define inline-only constant $XmNmaxHeight               =
	$XtNmaxHeight;
define inline-only constant $XmNmaxWidth                =
	$XtNmaxWidth;
define inline-only constant $XmNmenuEntry               =
	$XtNmenuEntry;
define inline-only constant $XmNminAspectX              =
	$XtNminAspectX;
define inline-only constant $XmNminAspectY              =
	$XtNminAspectY;
define inline-only constant $XmNminHeight               =
	$XtNminHeight;
define inline-only constant $XmNminWidth                =
	$XtNminWidth;
define inline-only constant $XmNname                    = $XtNname;
define inline-only constant $XmNnotify                  = $XtNnotify;
define inline-only constant $XmNnumChildren             =
	$XtNnumChildren;
define inline-only constant $XmNorientation             =
	$XtNorientation;
define inline-only constant $XmNoverrideRedirect        =
	$XtNoverrideRedirect;
define inline-only constant $XmNparameter               =
	$XtNparameter;
define inline-only constant $XmNpixmap                  = $XtNpixmap;
define inline-only constant $XmNpopdownCallback         =
	$XtNpopdownCallback;
define inline-only constant $XmNpopupCallback           =
	$XtNpopupCallback;
define inline-only constant $XmNresize                  = $XtNresize;
define inline-only constant $XmNreverseVideo            =
	$XtNreverseVideo;
define inline-only constant $XmNsaveUnder               =
	$XtNsaveUnder;
define inline-only constant $XmNscreen                  = $XtNscreen;
define inline-only constant $XmNscrollDCursor           =
	$XtNscrollDCursor;
define inline-only constant $XmNscrollHCursor           =
	$XtNscrollHCursor;
define inline-only constant $XmNscrollLCursor           =
	$XtNscrollLCursor;
define inline-only constant $XmNscrollProc              =
	$XtNscrollProc;
define inline-only constant $XmNscrollRCursor           =
	$XtNscrollRCursor;
define inline-only constant $XmNscrollUCursor           =
	$XtNscrollUCursor;
define inline-only constant $XmNscrollVCursor           =
	$XtNscrollVCursor;
define inline-only constant $XmNselection               =
	$XtNselection;
define inline-only constant $XmNselectionArray          =
	$XtNselectionArray;
define inline-only constant $XmNsensitive               =
	$XtNsensitive;
define inline-only constant $XmNshown                   = $XtNshown;
define inline-only constant $XmNspace                   = $XtNspace;
define inline-only constant $XmNstring                  = $XtNstring;
define inline-only constant $XmNtextOptions             =
	$XtNtextOptions;
define inline-only constant $XmNtextSink                =
	$XtNtextSink;
define inline-only constant $XmNtextSource              =
	$XtNtextSource;
define inline-only constant $XmNthickness               =
	$XtNthickness;
define inline-only constant $XmNthumb                   = $XtNthumb;
define inline-only constant $XmNthumbProc               =
	$XtNthumbProc;
define inline-only constant $XmNtitle                   = $XtNtitle;
define inline-only constant $XmNtitleEncoding           =
	$XtNtitleEncoding;
define inline-only constant $XmNtop                     = $XtNtop;
define inline-only constant $XmNtransient               =
	$XtNtransient;
define inline-only constant $XmNtransientFor            =
	$XtNtransientFor;
define inline-only constant $XmNtranslations            =
	$XtNtranslations;
define inline-only constant $XmNupdate                  = $XtNupdate;
define inline-only constant $XmNuseBottom               =
	$XtNuseBottom;
define inline-only constant $XmNuseRight                =
	$XtNuseRight;
define inline-only constant $XmNvalue                   = $XtNvalue;
define inline-only constant $XmNvisual                  = $XtNvisual;
define inline-only constant $XmNwaitForWm               =
	$XtNwaitForWm;
define inline-only constant $XmNwidth                   = $XtNwidth;
define inline-only constant $XmNwidthInc                =
	$XtNwidthInc;
define inline-only constant $XmNwinGravity              =
	$XtNwinGravity;
define inline-only constant $XmNwindow                  = $XtNwindow;
define inline-only constant $XmNwindowGroup             =
	$XtNwindowGroup;
define inline-only constant $XmNwmTimeout               =
	$XtNwmTimeout;
define inline-only constant $XmNx                       = $XtNx;
define inline-only constant $XmNy                       = $XtNy;
define inline-only constant $XmRAcceleratorTable        =
	$XtRAcceleratorTable;
define inline-only constant $XmRAtom                    = $XtRAtom;
define inline-only constant $XmRBitmap                  = $XtRBitmap;
define inline-only constant $XmRBool                    = $XtRBool;
define inline-only constant $XmRBoolean                 =
	$XtRBoolean;
define inline-only constant $XmRCallProc                =
	$XtRCallProc;
define inline-only constant $XmRCallback                =
	$XtRCallback;
define inline-only constant $XmRCardinal                =
	$XtRCardinal;
define inline-only constant $XmRColor                   = $XtRColor;
define inline-only constant $XmRColormap                =
	$XtRColormap;
define inline-only constant $XmRCursor                  = $XtRCursor;
define inline-only constant $XmRDimension               =
	$XtRDimension;
define inline-only constant $XmRDisplay                 =
	$XtRDisplay;
define inline-only constant $XmREditMode                =
	$XtREditMode;
define inline-only constant $XmREnum                    = $XtREnum;
define inline-only constant $XmRFile                    = $XtRFile;
define inline-only constant $XmRFloat                   = $XtRFloat;
define inline-only constant $XmRFont                    = $XtRFont;
define inline-only constant $XmRFontSet                 =
	$XtRFontSet;
define inline-only constant $XmRFontStruct              =
	$XtRFontStruct;
define inline-only constant $XmRFunction                =
	$XtRFunction;
define inline-only constant $XmRGeometry                =
	$XtRGeometry;
define inline-only constant $XmRImmediate               =
	$XtRImmediate;
define inline-only constant $XmRInitialState            =
	$XtRInitialState;
define inline-only constant $XmRInt                     = $XtRInt;
define inline-only constant $XmRJustify                 =
	$XtRJustify;
define inline-only constant $XmRLongBoolean             =
	$XtRLongBoolean;
define inline-only constant $XmROrientation             =
	$XtROrientation;
define inline-only constant $XmRObject                  = $XtRObject;
define inline-only constant $XmRPixel                   = $XtRPixel;
define inline-only constant $XmRPixmap                  = $XtRPixmap;
define inline-only constant $XmRPointer                 =
	$XtRPointer;
define inline-only constant $XmRPosition                =
	$XtRPosition;
define inline-only constant $XmRScreen                  = $XtRScreen;
define inline-only constant $XmRShort                   = $XtRShort;
define inline-only constant $XmRString                  = $XtRString;
define inline-only constant $XmRStringArray             =
	$XtRStringArray;
define inline-only constant $XmRStringTable             =
	$XtRStringTable;
define inline-only constant $XmRTextPosition            =
	$XtCTextPosition;
define inline-only constant $XmRTranslationTable        =
	$XtRTranslationTable;
define inline-only constant $XmRUnsignedChar            =
	$XtRUnsignedChar;
define inline-only constant $XmRVisual                  = $XtRVisual;
define inline-only constant $XmRWidget                  = $XtRWidget;
define inline-only constant $XmRWidgetClass             =
	$XtRWidgetClass;
define inline-only constant $XmRWidgetList              =
	$XtRWidgetList;
define inline-only constant $XmRWindow                  = $XtRWindow;

