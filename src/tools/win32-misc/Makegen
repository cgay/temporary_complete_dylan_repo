
sub install_one_perl_script {
    local ($name) = @_;
    local ($dst) = "\$(DESTDIR)/bin";
    print "$dst/$name.bat :\n";
    $dst =~ tr|/|\\|;  # translate / to \ for batch files
    print "\t", 'echo @perl ', "$dst\\$name", 
        '.perl %1 %2 %3 %4 %5 %6 %7 %8 %9 ', "> $dst\\$name.bat\n";
    do install_from_src('bin', "$name.perl");
    push(@install_dependencies, "$dst/$name.bat");
}

sub install_perl_scripts {
    local (@names) = @_;
    local ($name);
    foreach $name (@names) {
	install_one_perl_script($name);
    }
}

# Assumes the rcs binaries are in $(DESTDIR)/rcs-bin, and 
# rcs-wrapper in $(DESTDIR)/bin/rcs-wrapper.perl
sub install_with_rcs_wrapper {
    local ($name) = @_;
    print "\$(DESTDIR)/bin/$name.bat :\n";
    print "\t", 'echo @perl $(DESTDIR)\\bin\\rcs-wrapper.perl ',
        '$(DESTDIR)\\rcs-bin\\', $name, 
        '.exe %1 %2 %3 %4 %5 %6 %7 %8 %9 ', "> \$(DESTDIR)\\bin\\$name.bat\n";
    push(@install_dependencies, "\$(DESTDIR)/bin/$name.bat");
}

# Wrapped RCS stuff
do install_from_src('bin', 'rcs-wrapper.perl');

do install_with_rcs_wrapper('ci');
do install_with_rcs_wrapper('co');
do install_with_rcs_wrapper('rcs');
do install_with_rcs_wrapper('rcsdiff');
do install_with_rcs_wrapper('rlog');

# Wrapped normally, except the .perl file isn't named the same as the 
# .bat file
do install_from_src('bin', 'autoconf.perl');
do install_from_src('bin', 'configure.bat');

# Custom utils with wrappers
do install_perl_scripts('find-dylan-files', 'mass-ci', 'mass-diff', 
			'mk-build-tree', 'mk-rcs-links', 'rcsupdate', 
			'tree-diff', 'unix-find', 'which');

do install_from_src('bin', 'gen-makefile.bat');
# gen-makefile.perl is in shared-misc

# Custom utils that are straight batch files
do install_from_src('bin', 'build-tags.bat');
do install_from_src('bin', 'dytc.bat');

# Custom perl scripts without wrappers
do install_from_src('bin', 'find-unrcsed-files.perl');
do install_from_src('bin', 'module-tool.perl');
do install_from_src('bin', 'shadows.perl');

# Can't use emit_c_file_rule because they don't build executables
print <<EOF;

dbclink.exe : \$(SRCDIR)/dbclink.c
	cl -nologo -Ox \$(SRCDIR)/dbclink.c -o dbclink.exe

EOF
do install ('bin', 'dbclink.exe');
push(@compile_dependencies, 'dbclink.exe');
