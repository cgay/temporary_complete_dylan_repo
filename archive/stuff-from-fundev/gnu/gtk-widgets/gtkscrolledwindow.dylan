Module:    gtk-widgets
Copyright:    Original Code is Copyright (c) 1995-2004 Functional Objects, Inc.
              All rights reserved.
License:      Functional Objects Library Public License Version 1.0
Dual-license: GNU Lesser General Public License
Warranty:     Distributed WITHOUT WARRANTY OF ANY KIND

// This file is automatically generated from "gtkscrolledwindow.h"; do not edit.

define C-pointer-type <GtkScrolledWindow*> => <GtkScrolledWindow>;
define C-pointer-type <GtkScrolledWindow**> => <GtkScrolledWindow*>;
define C-pointer-type <GtkScrolledWindowClass*> => <GtkScrolledWindowClass>;
define C-pointer-type <GtkScrolledWindowClass**> => <GtkScrolledWindowClass*>;

define C-struct <_GtkScrolledWindow>
  sealed inline-only slot container-value :: <GtkBin>;
  sealed inline-only slot hscrollbar-value :: <GtkWidget*>;
  sealed inline-only slot vscrollbar-value :: <GtkWidget*>;
  sealed bitfield slot hscrollbar-policy-value ::
	<guint>,
    width: 2;
  sealed bitfield slot vscrollbar-policy-value ::
	<guint>,
    width: 2;
  sealed bitfield slot hscrollbar-visible-value ::
	<guint>,
    width: 1;
  sealed bitfield slot vscrollbar-visible-value ::
	<guint>,
    width: 1;
  sealed bitfield slot window-placement-value ::
	<guint>,
    width: 2;
  pointer-type-name: <_GtkScrolledWindow*>;
  c-name: "struct _GtkScrolledWindow";
end;

define C-struct <_GtkScrolledWindowClass>
  sealed inline-only slot parent-class-value :: <GtkBinClass>;
  sealed inline-only slot scrollbar-spacing-value :: <gint>;
  pointer-type-name: <_GtkScrolledWindowClass*>;
  c-name: "struct _GtkScrolledWindowClass";
end;

define inline-only C-function gtk-scrolled-window-get-type
  result value :: <GtkType>;
  c-name: "gtk_scrolled_window_get_type";
end;

define inline-only C-function gtk-scrolled-window-new
  parameter hadjustment1 :: <GtkAdjustment*>;
  parameter vadjustment2 :: <GtkAdjustment*>;
  result value :: <GtkWidget*>;
  c-name: "gtk_scrolled_window_new";
end;

define inline-only C-function gtk-scrolled-window-set-hadjustment
  parameter scrolled_window1 :: <GtkScrolledWindow*>;
  parameter hadjustment2 :: <GtkAdjustment*>;
  c-name: "gtk_scrolled_window_set_hadjustment";
end;

define inline-only C-function gtk-scrolled-window-set-vadjustment
  parameter scrolled_window1 :: <GtkScrolledWindow*>;
  parameter hadjustment2 :: <GtkAdjustment*>;
  c-name: "gtk_scrolled_window_set_vadjustment";
end;

define inline-only C-function gtk-scrolled-window-get-hadjustment
  parameter scrolled_window1 :: <GtkScrolledWindow*>;
  result value :: <GtkAdjustment*>;
  c-name: "gtk_scrolled_window_get_hadjustment";
end;

define inline-only C-function gtk-scrolled-window-get-vadjustment
  parameter scrolled_window1 :: <GtkScrolledWindow*>;
  result value :: <GtkAdjustment*>;
  c-name: "gtk_scrolled_window_get_vadjustment";
end;

define inline-only C-function gtk-scrolled-window-set-policy
  parameter scrolled_window1 :: <GtkScrolledWindow*>;
  parameter hscrollbar_policy2 :: <GtkPolicyType>;
  parameter vscrollbar_policy3 :: <GtkPolicyType>;
  c-name: "gtk_scrolled_window_set_policy";
end;

define inline-only C-function gtk-scrolled-window-set-placement
  parameter scrolled_window1 :: <GtkScrolledWindow*>;
  parameter window_placement2 :: <GtkCornerType>;
  c-name: "gtk_scrolled_window_set_placement";
end;

define inline-only C-function gtk-scrolled-window-add-with-viewport
  parameter scrolled_window1 :: <GtkScrolledWindow*>;
  parameter child2     :: <GtkWidget*>;
  c-name: "gtk_scrolled_window_add_with_viewport";
end;

define inline constant <GtkScrolledWindow> = <_GtkScrolledWindow>;
define inline constant <GtkScrolledWindowClass> = <_GtkScrolledWindowClass>;
define sealed domain make (singleton(<_GtkScrolledWindow*>));
define sealed domain initialize (<_GtkScrolledWindow*>);
define sealed domain make (singleton(<_GtkScrolledWindowClass*>));
define sealed domain initialize (<_GtkScrolledWindowClass*>);
