Module:    gtk-widgets
Copyright:    Original Code is Copyright (c) 1995-2004 Functional Objects, Inc.
              All rights reserved.
License:      Functional Objects Library Public License Version 1.0
Dual-license: GNU Lesser General Public License
Warranty:     Distributed WITHOUT WARRANTY OF ANY KIND

// This file is automatically generated from "gtklabel.h"; do not edit.

define C-pointer-type <GtkLabel*> => <GtkLabel>;
define C-pointer-type <GtkLabel**> => <GtkLabel*>;
define C-pointer-type <GtkLabelClass*> => <GtkLabelClass>;
define C-pointer-type <GtkLabelClass**> => <GtkLabelClass*>;
define C-pointer-type <GtkLabelWord*> => <GtkLabelWord>;
define C-pointer-type <GtkLabelWord**> => <GtkLabelWord*>;

define C-struct <_GtkLabel>
  sealed inline-only slot misc-value     :: <GtkMisc>;
  sealed inline-only slot label-value    :: <gchar*>;
  sealed inline-only slot label-wc-value :: <GdkWChar*>;
  sealed inline-only slot pattern-value  :: <gchar*>;
  sealed inline-only slot words-value    :: <GtkLabelWord*>;
  sealed bitfield slot max-width-value   :: <guint>,
    width: 16;
  sealed bitfield slot jtype-value       :: <guint>,
    width: 2;
  sealed inline-only slot wrap-value     :: <gboolean>;
  pointer-type-name: <_GtkLabel*>;
  c-name: "struct _GtkLabel";
end;

define C-struct <_GtkLabelClass>
  sealed inline-only slot parent-class-value :: <GtkMiscClass>;
  pointer-type-name: <_GtkLabelClass*>;
  c-name: "struct _GtkLabelClass";
end;

define inline-only C-function gtk-label-get-type
  result value :: <guint>;
  c-name: "gtk_label_get_type";
end;

define inline-only C-function gtk-label-new
  parameter str1       ::  /* const */ <C-string>;
  result value :: <GtkWidget*>;
  c-name: "gtk_label_new";
end;

define inline-only C-function gtk-label-set-text
  parameter label1     :: <GtkLabel*>;
  parameter str2       ::  /* const */ <C-string>;
  c-name: "gtk_label_set_text";
end;

define inline-only C-function gtk-label-set-justify
  parameter label1     :: <GtkLabel*>;
  parameter jtype2     :: <GtkJustification>;
  c-name: "gtk_label_set_justify";
end;

define inline-only C-function gtk-label-set-pattern
  parameter label1     :: <GtkLabel*>;
  parameter pattern2   ::  /* const */ <gchar*>;
  c-name: "gtk_label_set_pattern";
end;

define inline-only C-function gtk-label-set-line-wrap
  parameter label1     :: <GtkLabel*>;
  parameter wrap2      :: <gboolean>;
  c-name: "gtk_label_set_line_wrap";
end;

define inline-only C-function gtk-label-get
  parameter label1     :: <GtkLabel*>;
  parameter str2       :: <C-string*>;
  c-name: "gtk_label_get";
end;

define inline-only C-function gtk-label-parse-uline
  parameter label1     :: <GtkLabel*>;
  parameter string2    ::  /* const */ <gchar*>;
  result value :: <guint>;
  c-name: "gtk_label_parse_uline";
end;

define inline constant <GtkLabel> = <_GtkLabel>;
define inline constant <GtkLabelClass> = <_GtkLabelClass>;
define inline constant <GtkLabelWord> = <_GtkLabelWord>;
define sealed domain make (singleton(<_GtkLabel*>));
define sealed domain initialize (<_GtkLabel*>);
define sealed domain make (singleton(<_GtkLabelClass*>));
define sealed domain initialize (<_GtkLabelClass*>);
