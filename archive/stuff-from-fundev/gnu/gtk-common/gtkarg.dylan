Module:    gtk-common
Copyright:    Original Code is Copyright (c) 1995-2004 Functional Objects, Inc.
              All rights reserved.
License:      Functional Objects Library Public License Version 1.0
Dual-license: GNU Lesser General Public License
Warranty:     Distributed WITHOUT WARRANTY OF ANY KIND

// This file is automatically generated from "gtkarg.h"; do not edit.

define C-pointer-type <GtkArgInfo*> => <GtkArgInfo>;
define C-pointer-type <GtkArgInfo**> => <GtkArgInfo*>;

define C-struct <_GtkArgInfo>
  sealed inline-only slot class-type-value :: <GtkType>;
  sealed inline-only slot name-value     :: <gchar*>;
  sealed inline-only slot type-value     :: <GtkType>;
  sealed inline-only slot arg-flags-value :: <guint>;
  sealed inline-only slot full-name-value :: <gchar*>;
  sealed inline-only slot arg-id-value   :: <guint>;
  sealed inline-only slot seq-id-value   :: <guint>;
  pointer-type-name: <_GtkArgInfo*>;
  c-name: "struct _GtkArgInfo";
end;

define inline-only C-function gtk-arg-new
  parameter arg_type1  :: <GtkType>;
  result value :: <GtkArg*>;
  c-name: "gtk_arg_new";
end;

define inline-only C-function gtk-arg-copy
  parameter src_arg1   :: <GtkArg*>;
  parameter dest_arg2  :: <GtkArg*>;
  result value :: <GtkArg*>;
  c-name: "gtk_arg_copy";
end;

define inline-only C-function gtk-arg-free
  parameter arg1       :: <GtkArg*>;
  parameter free_contents2 :: <gboolean>;
  c-name: "gtk_arg_free";
end;

define inline-only C-function gtk-args-collect-cleanup
  parameter arg_list1  :: <GSList*>;
  parameter info_list2 :: <GSList*>;
  c-name: "gtk_args_collect_cleanup";
end;

define inline-only C-function gtk-arg-get-info
  parameter object_type1 :: <GtkType>;
  parameter arg_info_hash_table2 :: <GHashTable*>;
  parameter arg_name3  ::  /* const */ <gchar*>;
  parameter info_p4    :: <GtkArgInfo**>;
  result value :: <gchar*>;
  c-name: "gtk_arg_get_info";
end;

define inline-only C-function gtk-arg-type-new-static
  parameter base_class_type1 :: <GtkType>;
  parameter arg_name2  ::  /* const */ <gchar*>;
  parameter class_n_args_offset3 :: <guint>;
  parameter arg_info_hash_table4 :: <GHashTable*>;
  parameter arg_type5  :: <GtkType>;
  parameter arg_flags6 :: <guint>;
  parameter arg_id7    :: <guint>;
  result value :: <GtkArgInfo*>;
  c-name: "gtk_arg_type_new_static";
end;

define inline-only C-function gtk-args-query
  parameter class_type1 :: <GtkType>;
  parameter arg_info_hash_table2 :: <GHashTable*>;
  parameter arg_flags3 :: <guint32**>;
  parameter n_args_p4  :: <guint*>;
  result value :: <GtkArg*>;
  c-name: "gtk_args_query";
end;

define inline-only C-function gtk-arg-name-strip-type
  parameter arg_name1  ::  /* const */ <gchar*>;
  result value :: <gchar*>;
  c-name: "gtk_arg_name_strip_type";
end;

define inline-only C-function gtk-arg-info-equal
  parameter arg_info_11 :: <gconstpointer>;
  parameter arg_info_22 :: <gconstpointer>;
  result value :: <gint>;
  c-name: "gtk_arg_info_equal";
end;

define inline-only C-function gtk-arg-info-hash
  parameter arg_info1  :: <gconstpointer>;
  result value :: <guint>;
  c-name: "gtk_arg_info_hash";
end;

define inline constant <GtkArgInfo> = <_GtkArgInfo>;
define sealed domain make (singleton(<_GtkArgInfo*>));
define sealed domain initialize (<_GtkArgInfo*>);
