Module:    gtk-common
Copyright:    Original Code is Copyright (c) 1995-2004 Functional Objects, Inc.
              All rights reserved.
License:      Functional Objects Library Public License Version 1.0
Dual-license: GNU Lesser General Public License
Warranty:     Distributed WITHOUT WARRANTY OF ANY KIND

// This file is automatically generated from "gtkbox.h"; do not edit.

define C-pointer-type <GtkBox*> => <GtkBox>;
define C-pointer-type <GtkBox**> => <GtkBox*>;
define C-pointer-type <GtkBoxClass*> => <GtkBoxClass>;
define C-pointer-type <GtkBoxClass**> => <GtkBoxClass*>;
define C-pointer-type <GtkBoxChild*> => <GtkBoxChild>;
define C-pointer-type <GtkBoxChild**> => <GtkBoxChild*>;

define C-struct <_GtkBox>
  sealed inline-only slot container-value :: <GtkContainer>;
  sealed inline-only slot children-value :: <GList*>;
  sealed inline-only slot spacing-value  :: <gint16>;
  sealed bitfield slot homogeneous-value :: <guint>,
    width: 1;
  pointer-type-name: <_GtkBox*>;
  c-name: "struct _GtkBox";
end;

define C-struct <_GtkBoxClass>
  sealed inline-only slot parent-class-value :: <GtkContainerClass>;
  pointer-type-name: <_GtkBoxClass*>;
  c-name: "struct _GtkBoxClass";
end;

define C-struct <_GtkBoxChild>
  sealed inline-only slot widget-value   :: <GtkWidget*>;
  sealed inline-only slot padding-value  :: <guint16>;
  sealed bitfield slot expand-value      :: <guint>,
    width: 1;
  sealed bitfield slot fill-value        :: <guint>,
    width: 1;
  sealed bitfield slot pack-value        :: <guint>,
    width: 1;
  pointer-type-name: <_GtkBoxChild*>;
  c-name: "struct _GtkBoxChild";
end;

define inline-only C-function gtk-box-get-type
  result value :: <GtkType>;
  c-name: "gtk_box_get_type";
end;

define inline-only C-function gtk-box-pack-start
  parameter box1       :: <GtkBox*>;
  parameter child2     :: <GtkWidget*>;
  parameter expand3    :: <gboolean>;
  parameter fill4      :: <gboolean>;
  parameter padding5   :: <guint>;
  c-name: "gtk_box_pack_start";
end;

define inline-only C-function gtk-box-pack-end
  parameter box1       :: <GtkBox*>;
  parameter child2     :: <GtkWidget*>;
  parameter expand3    :: <gboolean>;
  parameter fill4      :: <gboolean>;
  parameter padding5   :: <guint>;
  c-name: "gtk_box_pack_end";
end;

define inline-only C-function gtk-box-pack-start-defaults
  parameter box1       :: <GtkBox*>;
  parameter widget2    :: <GtkWidget*>;
  c-name: "gtk_box_pack_start_defaults";
end;

define inline-only C-function gtk-box-pack-end-defaults
  parameter box1       :: <GtkBox*>;
  parameter widget2    :: <GtkWidget*>;
  c-name: "gtk_box_pack_end_defaults";
end;

define inline-only C-function gtk-box-set-homogeneous
  parameter box1       :: <GtkBox*>;
  parameter homogeneous2 :: <gboolean>;
  c-name: "gtk_box_set_homogeneous";
end;

define inline-only C-function gtk-box-set-spacing
  parameter box1       :: <GtkBox*>;
  parameter spacing2   :: <gint>;
  c-name: "gtk_box_set_spacing";
end;

define inline-only C-function gtk-box-reorder-child
  parameter box1       :: <GtkBox*>;
  parameter child2     :: <GtkWidget*>;
  parameter position3  :: <gint>;
  c-name: "gtk_box_reorder_child";
end;

define inline-only C-function gtk-box-query-child-packing
  parameter box1       :: <GtkBox*>;
  parameter child2     :: <GtkWidget*>;
  parameter expand3    :: <gboolean*>;
  parameter fill4      :: <gboolean*>;
  parameter padding5   :: <guint*>;
  parameter pack_type6 :: <GtkPackType*>;
  c-name: "gtk_box_query_child_packing";
end;

define inline-only C-function gtk-box-set-child-packing
  parameter box1       :: <GtkBox*>;
  parameter child2     :: <GtkWidget*>;
  parameter expand3    :: <gboolean>;
  parameter fill4      :: <gboolean>;
  parameter padding5   :: <guint>;
  parameter pack_type6 :: <GtkPackType>;
  c-name: "gtk_box_set_child_packing";
end;

define inline constant <GtkBox> = <_GtkBox>;
define inline constant <GtkBoxClass> = <_GtkBoxClass>;
define inline constant <GtkBoxChild> = <_GtkBoxChild>;
define sealed domain make (singleton(<_GtkBox*>));
define sealed domain initialize (<_GtkBox*>);
define sealed domain make (singleton(<_GtkBoxClass*>));
define sealed domain initialize (<_GtkBoxClass*>);
define sealed domain make (singleton(<_GtkBoxChild*>));
define sealed domain initialize (<_GtkBoxChild*>);
