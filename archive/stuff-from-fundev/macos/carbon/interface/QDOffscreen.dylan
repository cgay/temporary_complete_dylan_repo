Module:    carbon-interface
Copyright:    Original Code is Copyright (c) 1995-2004 Functional Objects, Inc.
              All rights reserved.
License:      Functional Objects Library Public License Version 1.0
Dual-license: GNU Lesser General Public License
Warranty:     Distributed WITHOUT WARRANTY OF ANY KIND

// This file is automatically generated from "QDOffscreen.h"; do not edit.

// unnamed enum:
define inline-only constant $pixPurgeBit               = 0;
define inline-only constant $noNewDeviceBit            = 1;
define inline-only constant $useTempMemBit             = 2;
define inline-only constant $keepLocalBit              = 3;
define inline-only constant $pixelsPurgeableBit        = 6;
define inline-only constant $pixelsLockedBit           = 7;
define inline-only constant $mapPixBit                 = 16;
define inline-only constant $newDepthBit               = 17;
define inline-only constant $alignPixBit               = 18;
define inline-only constant $newRowBytesBit            = 19;
define inline-only constant $reallocPixBit             = 20;
define inline-only constant $clipPixBit                = 28;
define inline-only constant $stretchPixBit             = 29;
define inline-only constant $ditherPixBit              = 30;
define inline-only constant $gwFlagErrBit              = 31;

// unnamed enum:
define inline-only constant $pixPurge                  = ash(1, $pixPurgeBit);
define inline-only constant $noNewDevice               = ash(1, $noNewDeviceBit);
define inline-only constant $useTempMem                = ash(1, $useTempMemBit);
define inline-only constant $keepLocal                 = ash(1, $keepLocalBit);
define inline-only constant $pixelsPurgeable           = ash(1, $pixelsPurgeableBit);
define inline-only constant $pixelsLocked              = ash(1, $pixelsLockedBit);
define inline-only constant $kAllocDirectDrawSurface   = ash(1, 14);
define inline-only constant $mapPix                    = ash(1, $mapPixBit);
define inline-only constant $newDepth                  = ash(1, $newDepthBit);
define inline-only constant $alignPix                  = ash(1, $alignPixBit);
define inline-only constant $newRowBytes               = ash(1, $newRowBytesBit);
define inline-only constant $reallocPix                = ash(1, $reallocPixBit);
define inline-only constant $clipPix                   = ash(1, $clipPixBit);
define inline-only constant $stretchPix                = ash(1, $stretchPixBit);
define inline-only constant $ditherPix                 = ash(1, $ditherPixBit);
define inline-only constant $gwFlagErr                 = ash(1, $gwFlagErrBit);

define inline constant <GWorldFlags> = <C-both-unsigned-long>;
define C-pointer-type <GWorldFlags*> => <GWorldFlags>;
define C-pointer-type <GWorldFlags**> => <GWorldFlags*>;
define inline constant <GWorldPtr> = <CGrafPtr>;
define C-pointer-type <GWorldPtr*> => <GWorldPtr>;
define C-pointer-type <GWorldPtr**> => <GWorldPtr*>;

define inline-only C-function NewGWorld
  parameter offscreenGWorld :: <GWorldPtr*>;
  parameter PixelDepth :: <C-short>;
  parameter boundsRect ::  /* const */ <Rect*>;
  parameter cTable     :: <CTabHandle>;
  parameter aGDevice   :: <GDHandle>;
  parameter flags      :: <GWorldFlags>;
  result value :: <QDErr>;
  c-name: "NewGWorld";
  c-modifiers: "pascal";
end;

define inline-only C-function LockPixels
  parameter pm         :: <PixMapHandle>;
  result value :: <MacBoolean>;
  c-name: "LockPixels";
  c-modifiers: "pascal";
end;

define inline-only C-function UnlockPixels
  parameter pm         :: <PixMapHandle>;
  c-name: "UnlockPixels";
  c-modifiers: "pascal";
end;

define inline-only C-function UpdateGWorld
  parameter offscreenGWorld :: <GWorldPtr*>;
  parameter pixelDepth :: <C-short>;
  parameter boundsRect ::  /* const */ <Rect*>;
  parameter cTable     :: <CTabHandle>;
  parameter aGDevice   :: <GDHandle>;
  parameter flags      :: <GWorldFlags>;
  result value :: <GWorldFlags>;
  c-name: "UpdateGWorld";
  c-modifiers: "pascal";
end;

define inline-only C-function DisposeGWorld
  parameter offscreenGWorld :: <GWorldPtr>;
  c-name: "DisposeGWorld";
  c-modifiers: "pascal";
end;

define inline-only C-function GetGWorld
  parameter port       :: <CGrafPtr*>;
  parameter gdh        :: <GDHandle*>;
  c-name: "GetGWorld";
  c-modifiers: "pascal";
end;

define inline-only C-function SetGWorld
  parameter port       :: <CGrafPtr>;
  parameter gdh        :: <GDHandle>;
  c-name: "SetGWorld";
  c-modifiers: "pascal";
end;

define inline-only C-function CTabChanged
  parameter ctab       :: <CTabHandle>;
  c-name: "CTabChanged";
  c-modifiers: "pascal";
end;

define inline-only C-function PixPatChanged
  parameter ppat       :: <PixPatHandle>;
  c-name: "PixPatChanged";
  c-modifiers: "pascal";
end;

define inline-only C-function PortChanged
  parameter port       :: <GrafPtr>;
  c-name: "PortChanged";
  c-modifiers: "pascal";
end;

define inline-only C-function GDeviceChanged
  parameter gdh        :: <GDHandle>;
  c-name: "GDeviceChanged";
  c-modifiers: "pascal";
end;

define inline-only C-function AllowPurgePixels
  parameter pm         :: <PixMapHandle>;
  c-name: "AllowPurgePixels";
  c-modifiers: "pascal";
end;

define inline-only C-function NoPurgePixels
  parameter pm         :: <PixMapHandle>;
  c-name: "NoPurgePixels";
  c-modifiers: "pascal";
end;

define inline-only C-function GetPixelsState
  parameter pm         :: <PixMapHandle>;
  result value :: <GWorldFlags>;
  c-name: "GetPixelsState";
  c-modifiers: "pascal";
end;

define inline-only C-function SetPixelsState
  parameter pm         :: <PixMapHandle>;
  parameter state      :: <GWorldFlags>;
  c-name: "SetPixelsState";
  c-modifiers: "pascal";
end;

define inline-only C-function GetPixBaseAddr
  parameter pm         :: <PixMapHandle>;
  result value :: <Ptr>;
  c-name: "GetPixBaseAddr";
  c-modifiers: "pascal";
end;

define inline-only C-function GetPixRowBytes
  parameter pm         :: <PixMapHandle>;
  result value :: <C-both-long>;
  c-name: "GetPixRowBytes";
  c-modifiers: "pascal";
end;

define inline-only C-function NewScreenBuffer
  parameter globalRect ::  /* const */ <Rect*>;
  parameter purgeable  :: <MacBoolean>;
  parameter gdh        :: <GDHandle*>;
  parameter offscreenPixMap :: <PixMapHandle*>;
  result value :: <QDErr>;
  c-name: "NewScreenBuffer";
  c-modifiers: "pascal";
end;

define inline-only C-function DisposeScreenBuffer
  parameter offscreenPixMap :: <PixMapHandle>;
  c-name: "DisposeScreenBuffer";
  c-modifiers: "pascal";
end;

define inline-only C-function GetGWorldDevice
  parameter offscreenGWorld :: <GWorldPtr>;
  result value :: <GDHandle>;
  c-name: "GetGWorldDevice";
  c-modifiers: "pascal";
end;

define inline-only C-function QDDone
  parameter port       :: <GrafPtr>;
  result value :: <MacBoolean>;
  c-name: "QDDone";
  c-modifiers: "pascal";
end;

define inline-only C-function OffscreenVersion
  result value :: <C-both-long>;
  c-name: "OffscreenVersion";
  c-modifiers: "pascal";
end;

define inline-only C-function NewTempScreenBuffer
  parameter globalRect ::  /* const */ <Rect*>;
  parameter purgeable  :: <MacBoolean>;
  parameter gdh        :: <GDHandle*>;
  parameter offscreenPixMap :: <PixMapHandle*>;
  result value :: <QDErr>;
  c-name: "NewTempScreenBuffer";
  c-modifiers: "pascal";
end;

define inline-only C-function PixMap32Bit
  parameter pmHandle   :: <PixMapHandle>;
  result value :: <MacBoolean>;
  c-name: "PixMap32Bit";
  c-modifiers: "pascal";
end;

define inline-only C-function GetGWorldPixMap
  parameter offscreenGWorld :: <GWorldPtr>;
  result value :: <PixMapHandle>;
  c-name: "GetGWorldPixMap";
  c-modifiers: "pascal";
end;

